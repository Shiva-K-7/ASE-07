,FILE_ID,Description,SCHK_Block_count,Agg_SubSystem_count,Hierarchy_depth,LibraryLinked_Count,total_ConnH_cnt,clean_description,clean_description_tokens,combined_clusters
0,789683,An ECAN library for the dsPIC33f in both C and Simulink,50,11,3,6,33,ecan dspic,"['ecan', 'dspic']",2
1,919495,TrueTime is a Matlab/Simulink-based simulator for real-time control systems.,967,152,3,83,957,truetime base real time control,"['truetime', 'base', 'real', 'time', 'control']",2
2,4608325,Simulink (Embedded Coder) Target for TI LaunchPad,401,58,3,20,249,embed coder target launchpad,"['embed', 'coder', 'target', 'launchpad']",2
3,5480060,An Open Source Software Package that enables owners of DVB-T dongles with an embedded Realtek RTL2832U chipset to build models in Simulink that interface with the device in realtime,3,0,1,1,1,open source software package enable owner dvb dongle embed realtek rtl chipset build interface device realtime,"['open', 'source', 'software', 'package', 'enable', 'owner', 'dvb', 'dongle', 'embed', 'realtek', 'rtl', 'chipset', 'build', 'interface', 'device', 'realtime']",2
4,5791243,A Simulink blockset that enables owners of UHD-compatible Universal Software Radio Peripherals (USRP) from Ettus Research to build models in MATLAB Simulink that interface with the device in real-time.,3,0,1,1,1,blockset enable owner uhd compatible universal software radio peripheral usrp ettus research build interface device real time,"['blockset', 'enable', 'owner', 'uhd', 'compatible', 'universal', 'software', 'radio', 'peripheral', 'usrp', 'ettus', 'research', 'build', 'interface', 'device', 'real', 'time']",2
5,7114722,OUTDATED Matlab and Simulink Interfaces for ARIA -- most up to date code can now be found with the ARIA library package -- see website,32,0,1,14,26,outdated interface aria date code find aria package see website,"['outdated', 'interface', 'aria', 'date', 'code', 'find', 'aria', 'package', 'see', 'website']",2
6,7269901,Simulink (Embedded Coder) Target for TI Stellaris LaunchPad,1256,114,9,27,792,embed coder target stellaris launchpad,"['embed', 'coder', 'target', 'stellaris', 'launchpad']",2
7,10687821,Simulink (Embedded Coder) Target for MicroDAQ Real-Time Measurement System,652,62,6,30,534,embed coder target microdaq real time measurement,"['embed', 'coder', 'target', 'microdaq', 'real', 'time', 'measurement']",2
8,11530296,Simulink tools to optimally connect different subsystems,55,8,3,0,18,tool optimally connect different subsystem,"['tool', 'optimally', 'connect', 'different', 'subsystem']",2
9,13657960,Script which tries to run a Simulink model using the fixed point toolbox.,15,0,1,0,15,script try run fix point toolbox,"['script', 'try', 'run', 'fix', 'point', 'toolbox']",2
10,13685163,ARDrone for Simulink DevKit_V1,186,23,2,15,223,ardrone devkit,"['ardrone', 'devkit']",2
11,14375685,"An open source thermodynamic modeling package completed on behalf of NASA. The Toolbox for the Modeling and Analysis of Thermodynamic Systems (T-MATS) package offers a MATLAB/Simulink toolbox that gives a developer the ability to create simulations of such thermodynamic systems as turbomachinery and gas turbines. Keywords: TMATS, Control System, Numerical Methods, Newton-Raphson, Jacobian Calculation, Propulsion, Aircraft Engine, Jet, Turbofan, Turbojet, Compressor, Turbine, Nozzle, Inlet, open source",2633,222,4,215,2505,open source thermodynamic modeling package complete behalf nasa toolbox analysis thermodynamic mat package offer toolbox give developer ability create thermodynamic turbomachinery gas turbine keywords tmats control numerical method newton raphson jacobian calculation propulsion aircraft engine jet turbofan turbojet compressor turbine nozzle inlet open source,"['open', 'source', 'thermodynamic', 'modeling', 'package', 'complete', 'behalf', 'nasa', 'toolbox', 'analysis', 'thermodynamic', 'mat', 'package', 'offer', 'toolbox', 'give', 'developer', 'ability', 'create', 'thermodynamic', 'turbomachinery', 'gas', 'turbine', 'keywords', 'tmats', 'control', 'numerical', 'method', 'newton', 'raphson', 'jacobian', 'calculation', 'propulsion', 'aircraft', 'engine', 'jet', 'turbofan', 'turbojet', 'compressor', 'turbine', 'nozzle', 'inlet', 'open', 'source']",2
12,17516671,Hyperloop model in Simulink for collaboration,314,42,5,10,302,hyperloop collaboration,"['hyperloop', 'collaboration']",2
13,17642867,Scripts and tools created by ADI to be used with MATLAB and Simulink with ADI products,2601,174,6,19,2903,script tool create adi adi product,"['script', 'tool', 'create', 'adi', 'adi', 'product']",2
14,17750385,Simulink software for the MPC555-based embedded robot controller,923,71,4,1,1035,software mpc base embed robot controller,"['software', 'mpc', 'base', 'embed', 'robot', 'controller']",2
15,21655911,Examples of Mealy and Moor State Machines in Simulink Stateflow,8,2,2,0,4,example mealy moor state machine stateflow,"['example', 'mealy', 'moor', 'state', 'machine', 'stateflow']",2
16,22338594,Control a Raspberry Pi powered robot with MATLAB and Simulink,153,11,4,0,181,control raspberry power robot,"['control', 'raspberry', 'power', 'robot']",2
17,22542401,A software in the loop simulation using Simulink of a robot based on the model described in http://www.csl.sri.com/~shankar/ModelRob.tar,2962,224,5,0,3867,software loop robot base described http csl sri com shankar modelrob tar,"['software', 'loop', 'robot', 'base', 'described', 'http', 'csl', 'sri', 'com', 'shankar', 'modelrob', 'tar']",2
18,22711541,Stimela is an environment for standardised mathematical models of drinking water treatment processes in Matlab/Simulink,1898,562,3,0,1256,stimela environment standardise mathematical drink water treatment process,"['stimela', 'environment', 'standardise', 'mathematical', 'drink', 'water', 'treatment', 'process']",2
19,24437619,Bus communication layer and data logger for Simulink Real Time (xPC Target),310,24,3,9,333,bus communication layer data logger real time xpc target,"['bus', 'communication', 'layer', 'data', 'logger', 'real', 'time', 'xpc', 'target']",2
20,25926236,Massif is a Matlab Simulink Integration Framework for Eclipse,11689,665,5,0,8090,massif integration framework eclipse,"['massif', 'integration', 'framework', 'eclipse']",2
21,27298557,Various Simulink patches,9,0,1,0,7,various patch,"['various', 'patch']",2
22,27349021,Math model of robot for Simulink course,76,8,3,0,77,math robot course,"['math', 'robot', 'course']",2
23,27591571,Set of simulink s-functions to communicate with ROS,10,1,2,3,8,set function communicate,"['set', 'function', 'communicate']",2
24,27666471,Example of how to model systems with Simulink and generate the code,54,7,3,0,57,example generate code,"['example', 'generate', 'code']",2
25,27724200,An interface between The Open Source Race Car Simulator (TORCS) and MATLAB/Simulink (or anything else...),200,18,5,0,226,interface open source race car torcs anything else,"['interface', 'open', 'source', 'race', 'car', 'torcs', 'anything', 'else']",2
26,28559515,"Using Eigen3 to accelerate Simulink; e.g. matrix multiplication; these s-functions can also be used with Simulink Coder; e.g. to accelearte huge matrix multiplication by using AVX2, FMA, AVX, SSE3, ... on a x86 platform",32,0,1,0,31,eigen accelerate matrix multiplication function also coder accelearte huge matrix multiplication avx fma avx sse platform,"['eigen', 'accelerate', 'matrix', 'multiplication', 'function', 'also', 'coder', 'accelearte', 'huge', 'matrix', 'multiplication', 'avx', 'fma', 'avx', 'sse', 'platform']",2
27,29535877,A repository that captures the derived Lustre and Simulink Design Verifier synchronous observers for the specification patterns work at http://patterns.projects.cis.ksu.edu/,109,18,1,42,162,repository capture derive lustre design verifier synchronous observer specification pattern work http pattern project cis ksu edu,"['repository', 'capture', 'derive', 'lustre', 'design', 'verifier', 'synchronous', 'observer', 'specification', 'pattern', 'work', 'http', 'pattern', 'project', 'cis', 'ksu', 'edu']",2
28,29702360,The LeanPulse System Documents generator (SyD) is a powerful tool enabling easy and fast generation of rich PDF documents from your SimulinkÂ® and Xcos models.,750,46,5,2,740,leanpulse document generator syd powerful tool enable easy fast generation rich pdf document xcos,"['leanpulse', 'document', 'generator', 'syd', 'powerful', 'tool', 'enable', 'easy', 'fast', 'generation', 'rich', 'pdf', 'document', 'xcos']",2
29,31180107,Simulink parser using pyparsing,4,0,1,0,3,parser pyparsing,"['parser', 'pyparsing']",2
30,31970765,Test oracle tool for Simulink models (Matlab 2008b),46,3,2,0,53,test oracle tool,"['test', 'oracle', 'tool']",2
31,32599056,Deploy MATLAB Simulink model automatically to Parrot AR Drone with Embedded Coder C code generation,4491,448,7,35,4438,deploy automatically parrot drone embed coder code generation,"['deploy', 'automatically', 'parrot', 'drone', 'embed', 'coder', 'code', 'generation']",2
32,33409723,"Contains C++ microcontoller code, Maltab code, simulink smulations, full reports, and related documents for an FYP in quadcopter control",9422,378,3,0,11113,contains microcontoller code maltab code smulations full report related document fyp quadcopter control,"['contains', 'microcontoller', 'code', 'maltab', 'code', 'smulations', 'full', 'report', 'related', 'document', 'fyp', 'quadcopter', 'control']",2
33,33416377,"Kontinuierliche, analoge Simulation einer Fahrzeugfederung mit MATLAB/Simulink, WinFACT, Scilab / Scicos, WinDORA",49,0,1,0,65,kontinuierliche analoge einer mit winfact scilab scicos windora,"['kontinuierliche', 'analoge', 'einer', 'mit', 'winfact', 'scilab', 'scicos', 'windora']",2
34,33562782,Routines for getting mavlink packets from raw data in Matlab and simulink real-time for use in simulations,33,0,1,0,31,routine get mavlink packet raw data real time,"['routine', 'get', 'mavlink', 'packet', 'raw', 'data', 'real', 'time']",2
35,35040559,"MicroDAQ software package allows using MicroDAQ device with Matlab/Simulink software. Software can be used for data acquisition and for code generation from Simulink diagram. External, PIL, Standalone application can be generated. ",487,45,6,13,382,microdaq software package allow microdaq device software software data acquisition code generation diagram external pil standalone application generate,"['microdaq', 'software', 'package', 'allow', 'microdaq', 'device', 'software', 'software', 'data', 'acquisition', 'code', 'generation', 'diagram', 'external', 'pil', 'standalone', 'application', 'generate']",2
36,35234366,Watchdog timer and counter for simulink,12,2,1,2,11,watchdog timer counter,"['watchdog', 'timer', 'counter']",2
37,35530846,BibliothÃ¨que de composants Matlab/Simulink/Simscape pour l'enseignement des Sciences Industrielles de l'IngÃ©nieur,131,13,2,8,149,bibliothÃ¨que composants simscape pour enseignement science industrielles ingÃ©nieur,"['bibliothÃ¨que', 'composants', 'simscape', 'pour', 'enseignement', 'science', 'industrielles', 'ingÃ©nieur']",2
38,35679915,Controller for the ancient IBM SCARA 7575 Robot using Code generated by Matlab Simulink for the STM32 F4,149,5,3,0,180,controller ancient ibm scara robot code generate stm,"['controller', 'ancient', 'ibm', 'scara', 'robot', 'code', 'generate', 'stm']",2
39,38685605,"Quadrotor / UAV Simulator using Matlab, Simulink and Flightgear Visualization",236,12,3,0,327,quadrotor uav flightgear visualization,"['quadrotor', 'uav', 'flightgear', 'visualization']",2
40,39316901,Simulink protobuf modulue,5,0,1,0,3,protobuf modulue,"['protobuf', 'modulue']",2
41,42111127,Deploy MATLAB Simulink model automatically to Parrot AR Drone with Embedded Coder C code generation,2379,235,7,11,2423,deploy automatically parrot drone embed coder code generation,"['deploy', 'automatically', 'parrot', 'drone', 'embed', 'coder', 'code', 'generation']",2
42,42374529,MATLAB/Simulink shenanigans,49,3,2,1,47,,[],2
43,42794568,Example of a C Simulink S-Function block implementing a REDIS connector to interact with a REDIS server.,24,2,2,0,25,example function block implement redis connector interact redis server,"['example', 'function', 'block', 'implement', 'redis', 'connector', 'interact', 'redis', 'server']",2
44,43639573,Software for self driving model car with Cortex M4 and MATLAB Simulink,36,0,1,0,35,software self drive car cortex,"['software', 'self', 'drive', 'car', 'cortex']",2
45,44240452,This repo contain the simulink blockset used during the ASGN&C course held at Politecnico di Milano,30,1,2,3,28,repo contain blockset asgn course hold politecnico milano,"['repo', 'contain', 'blockset', 'asgn', 'course', 'hold', 'politecnico', 'milano']",2
46,45693935,symbolic and concrete execution environment for Simulink,13,0,1,0,10,symbolic concrete execution environment,"['symbolic', 'concrete', 'execution', 'environment']",2
47,46337899,Simulink blockset and MATLAB functions to interface with HackRF devices in real-time,7,0,1,2,3,blockset function interface hackrf device real time,"['blockset', 'function', 'interface', 'hackrf', 'device', 'real', 'time']",2
48,46778395,Simulink/Matlab library and target for data aquisition via the beaglebone black in real-time,21,0,1,0,17,target data aquisition via beaglebone black real time,"['target', 'data', 'aquisition', 'via', 'beaglebone', 'black', 'real', 'time']",2
49,48828287,Matlab/Simulink client to control Crazyflie Quadcopter,161,8,2,3,184,client control crazyflie quadcopter,"['client', 'control', 'crazyflie', 'quadcopter']",2
50,48991644,MATTRANS - A MATLAB(R)/Simulink Power System Transient Stability Simulation Package,53520,6360,7,0,55680,mattrans power transient stability package,"['mattrans', 'power', 'transient', 'stability', 'package']",2
51,49362444,Python Sphinx plugin to include MATLAB Simulink models (e.g. diagrams or information) into .rst documentation,14,2,1,2,8,python sphinx plugin include diagram information rst documentation,"['python', 'sphinx', 'plugin', 'include', 'diagram', 'information', 'rst', 'documentation']",2
52,50119221,A Collection of useful Simulink utilities,44,5,3,0,33,collection useful utility,"['collection', 'useful', 'utility']",2
53,52300953,"Image Processing MATLAB Codes, Simulink, GUI, and Standalone Applications",5,0,1,0,5,image processing code gui standalone application,"['image', 'processing', 'code', 'gui', 'standalone', 'application']",2
54,53871062,MATLAB/Simulink RCK Project,24,1,2,0,27,rck project,"['rck', 'project']",2
55,54549536,Apollo Lunar Lander Simulator with Simulink Control,258,12,2,0,289,apollo lunar lander control,"['apollo', 'lunar', 'lander', 'control']",2
56,56398425,Simulink Model of Planar Arm Movements for Real-Time Control,200,14,3,0,356,planar arm movement real time control,"['planar', 'arm', 'movement', 'real', 'time', 'control']",2
57,56515734,CITY DRAIN 2 is an open source toolbox for integrated modelling of urban drainage systems realized in Matlab/Simulink.,376,60,3,0,276,city drain open source toolbox integrate modelling urban drainage realize,"['city', 'drain', 'open', 'source', 'toolbox', 'integrate', 'modelling', 'urban', 'drainage', 'realize']",2
58,56873326,Fork of https://www.cqse.eu/en/products/simulink-library-for-java/overview/,2959,137,3,6,1949,fork cqse product java overview,"['fork', 'cqse', 'product', 'java', 'overview']",2
59,59244003,A Matlab and Simulink project. The purpose is to control the altitude of a Cessna Citation 500 aircraft.,182,3,2,0,220,project purpose control altitude cessna citation aircraft,"['project', 'purpose', 'control', 'altitude', 'cessna', 'citation', 'aircraft']",2
60,59264907,Examples and Exercises for the Simulink Course 2016-2017,168,4,2,0,162,example exercise course,"['example', 'exercise', 'course']",2
61,60670130,Simulink Simulation of BLDC Motor,121,8,4,0,149,bldc motor,"['bldc', 'motor']",2
62,60685110,Compliant Joint Toolbox (CJT) for MATLAB and Simulink,213,34,2,33,234,compliant joint toolbox cjt,"['compliant', 'joint', 'toolbox', 'cjt']",2
63,65560938,Real time single object tracking in MATLAB/Simulink with Kinect v1.,201,13,4,0,272,real time single object track kinect,"['real', 'time', 'single', 'object', 'track', 'kinect']",2
64,66671966,for reference only -> S function for Simulink integration,25,5,2,0,18,reference function integration,"['reference', 'function', 'integration']",2
65,68183223,Interface between Matlab Simulink simulations and control-based continuation algorithms,171,13,3,0,187,interface control base continuation algorithm,"['interface', 'control', 'base', 'continuation', 'algorithm']",2
66,68744081,Mbed OS 5 Simulink and Embedded Coder Target,1193,39,3,326,1009,mbed embed coder target,"['mbed', 'embed', 'coder', 'target']",2
67,69243304,A Toolbox for Efficient Parameter and Structure Variation of Simulation Models in Simulink,292,54,3,0,217,toolbox efficient parameter structure variation,"['toolbox', 'efficient', 'parameter', 'structure', 'variation']",2
68,73917468,Implement a generic central difference Kalman Filter (CDKF) in MATLAB/ Simulink. matlab.System object,5,0,1,0,4,implement generic central difference kalman filter cdkf object,"['implement', 'generic', 'central', 'difference', 'kalman', 'filter', 'cdkf', 'object']",2
69,74554478,A collection of s-functions that allow to interface kinect2 SDK body tracking system with Matlab Simulink,4,0,1,0,3,collection function allow interface kinect sdk body track,"['collection', 'function', 'allow', 'interface', 'kinect', 'sdk', 'body', 'track']",2
70,80558347,easy-as-pie API to Simulink,229,14,3,3,188,easy pie api,"['easy', 'pie', 'api']",2
71,80744922,A small library intended for controlling KUKA robots using KRC4 over KUKA RSI (Robot Sensor Interface) from Simulink.,11,2,1,2,24,small intend control kuka robot krc kuka rsi robot sensor interface,"['small', 'intend', 'control', 'kuka', 'robot', 'krc', 'kuka', 'rsi', 'robot', 'sensor', 'interface']",2
72,81087471,Drivers and Examples for usage of MATLAB/Simulink with Arduino,55,20,3,9,30,driver example usage arduino,"['driver', 'example', 'usage', 'arduino']",2
73,82338662,Simulink Library for Silicon Photonics Systems Simulation,67,19,2,17,65,silicon photonics,"['silicon', 'photonics']",2
74,82607871,Simulink models used in conjunction with the catvehicle project.,120,4,2,0,156,conjunction catvehicle project,"['conjunction', 'catvehicle', 'project']",2
75,84432307,Matlab code and Simulink blocks for controlling the Kiwi SCARA robot.,60,2,3,0,62,code block control kiwi scara robot,"['code', 'block', 'control', 'kiwi', 'scara', 'robot']",2
76,84924846,Simulink libraries for qbmove device and customizations,101,2,2,14,98,qbmove device customizations,"['qbmove', 'device', 'customizations']",2
77,85336181,"Simulink integration for OpenMETA, built using generic interfaces",14,3,3,0,11,integration openmeta build generic interface,"['integration', 'openmeta', 'build', 'generic', 'interface']",2
78,86669768,"(matlab, simulink)",435,21,3,0,525,,[],2
79,88051120,Modeling RLC circuits response by MATLAB & Simulink,35,3,2,0,37,rlc circuit response,"['rlc', 'circuit', 'response']",2
80,89838221,Simulink implementations of sliding mode and LQR controller for rotary inverted pendulum,112,9,4,0,123,implementation slide mode lqr controller rotary invert pendulum,"['implementation', 'slide', 'mode', 'lqr', 'controller', 'rotary', 'invert', 'pendulum']",2
81,92188415,use simulink to make a little Demo of Noise Canceling HeadPhone. Project of Signals And Systems Spr17@SIST Shanghaitech University.,31,9,2,4,27,make little demo noise cancel headphone project signal spr sist shanghaitech university,"['make', 'little', 'demo', 'noise', 'cancel', 'headphone', 'project', 'signal', 'spr', 'sist', 'shanghaitech', 'university']",2
82,93094843,"The Hybrid Equation (HyEQ) Toolbox is implemented in MATLAB/Simulink for the simulation of hybrid dynamical systems. This toolbox is capable of simulating individual and interconnected hybrid systems with inputs. Examples of systems that can be simulated include a bouncing ball on a moving platform, fireflies synchronizing their flashing, and more. The Simulink implementation includes four basic blocks that define the dynamics of a hybrid system. These include a flow map, flow set, jump map, and jump set. The flows and jumps of the system are computed by the integrator system which is comprised of blocks that compute the continuous dynamics of the hybrid system, trigger jumps, update the state of the system and simulation time at jumps, and stop the simulation. Also includes a âlite simulatorâ which allows for faster simulation without using Simulink.",2555,343,4,0,2746,hybrid equation hyeq toolbox implement hybrid dynamical toolbox capable individual interconnect hybrid inputs example include bounce ball move platform firefly synchronize flash implementation include four basic block define dynamic hybrid include flow map flow set jump map jump set flow jump compute integrator comprise block compute continuous dynamic hybrid trigger jump update state time jump stop also include lite allows faster without,"['hybrid', 'equation', 'hyeq', 'toolbox', 'implement', 'hybrid', 'dynamical', 'toolbox', 'capable', 'individual', 'interconnect', 'hybrid', 'inputs', 'example', 'include', 'bounce', 'ball', 'move', 'platform', 'firefly', 'synchronize', 'flash', 'implementation', 'include', 'four', 'basic', 'block', 'define', 'dynamic', 'hybrid', 'include', 'flow', 'map', 'flow', 'set', 'jump', 'map', 'jump', 'set', 'flow', 'jump', 'compute', 'integrator', 'comprise', 'block', 'compute', 'continuous', 'dynamic', 'hybrid', 'trigger', 'jump', 'update', 'state', 'time', 'jump', 'stop', 'also', 'include', 'lite', 'allows', 'faster', 'without']",2
83,93149853,Matlab programs and Simulink models,194,27,4,0,187,program,['program'],2
84,93419327,MATLAB/Simulink Physical layer design for wireless modem,1192,87,4,19,1200,physical layer design wireless modem,"['physical', 'layer', 'design', 'wireless', 'modem']",2
85,94040473,Simulink models of the spherical ball robot,456,30,3,0,537,spherical ball robot,"['spherical', 'ball', 'robot']",2
86,96201204,This is a Simulink toolkit for predicting the behaviour of a thermoelectric generator,445,44,5,25,588,toolkit predict behaviour thermoelectric generator,"['toolkit', 'predict', 'behaviour', 'thermoelectric', 'generator']",2
87,96558353,This is a project where an Adaptive Flight Control based on L1 adaptive control is designed and tested using MATLAB/Simulink  [ L1 adaptive control code ],655,59,5,0,681,project adaptive flight control base adaptive control design test adaptive control code,"['project', 'adaptive', 'flight', 'control', 'base', 'adaptive', 'control', 'design', 'test', 'adaptive', 'control', 'code']",2
88,96571805,A CNC simulator in Simulink... a work in progress,81,8,3,0,86,cnc work progress,"['cnc', 'work', 'progress']",2
89,97022596,A MATLAB / Simulink library to work with the Scientific Data Format,8,0,1,2,8,work scientific data format,"['work', 'scientific', 'data', 'format']",2
90,98573039,"Simulink Framework to run MIL, SIL, and HIL.  This example simulates a udp client.",19,3,1,3,15,framework run mil sil hil example udp client,"['framework', 'run', 'mil', 'sil', 'hil', 'example', 'udp', 'client']",2
91,99366228,IRIG-B Signal Generator Code in Matlab/Simulink for use with Real-Time Simulators,59,4,3,0,67,irig signal generator code real time,"['irig', 'signal', 'generator', 'code', 'real', 'time']",2
92,99739521,"Simulink Model to Simulate Low Pass , High Pass , Band Pass , Band Reject and Laplacian Filter",30,0,1,0,20,low pas high pas band pas band reject laplacian filter,"['low', 'pas', 'high', 'pas', 'band', 'pas', 'band', 'reject', 'laplacian', 'filter']",2
93,99894768,Simulink models for electric power systems use cases.,118,0,1,0,290,electric power case,"['electric', 'power', 'case']",2
94,100042416,Tool to compile a Bladed style DLL controller from Simulink for use in OpenFAST or Bladed,259,9,3,0,119,tool compile bladed style dll controller openfast bladed,"['tool', 'compile', 'bladed', 'style', 'dll', 'controller', 'openfast', 'bladed']",2
95,100381142,This repository contains the necessary files/ setup steps /codes to interface the haptic device Omega6 with Simulink,14,0,1,0,22,repository contains necessary file setup step code interface haptic device omega,"['repository', 'contains', 'necessary', 'file', 'setup', 'step', 'code', 'interface', 'haptic', 'device', 'omega']",2
96,100999374,Automated Analysis Framework for Simulink/Stateflow,2420,361,5,111,2600,automate analysis framework stateflow,"['automate', 'analysis', 'framework', 'stateflow']",2
97,101273960,Simple J2 propagator modeled in Simulink,74,5,3,0,78,simple propagator,"['simple', 'propagator']",2
98,101298708,A satellite attitude propagator built upon J2 orbit propagator (with a VRML visualisation option) in Simulink.,99,8,3,0,105,satellite attitude propagator build upon orbit propagator vrml visualisation option,"['satellite', 'attitude', 'propagator', 'build', 'upon', 'orbit', 'propagator', 'vrml', 'visualisation', 'option']",2
99,101492265,A set of Simulink blocks to explore Design Verifier in Flight Controls,1587,69,3,0,1783,set block explore design verifier flight control,"['set', 'block', 'explore', 'design', 'verifier', 'flight', 'control']",2
100,101492962,A Simulink Design Verifier applied to Autopilot Mode Transition,6327,87,3,0,7680,design verifier apply autopilot mode transition,"['design', 'verifier', 'apply', 'autopilot', 'mode', 'transition']",2
101,101493485,This has examples files for exploring Simulink Design Verifier,610,22,3,0,653,example file explore design verifier,"['example', 'file', 'explore', 'design', 'verifier']",2
102,101494013,A Simulink Design Verifier block to switch between proof and test and set requirement tags as well.,23,5,2,0,19,design verifier block switch proof test set requirement tag well,"['design', 'verifier', 'block', 'switch', 'proof', 'test', 'set', 'requirement', 'tag', 'well']",2
103,101503839,Demonstration of Conventional 2 Sensor Attitude Determination using VRML in Simulink,252,17,3,0,265,demonstration conventional sensor attitude determination vrml,"['demonstration', 'conventional', 'sensor', 'attitude', 'determination', 'vrml']",2
104,101972616,Hub for CRPS Simulink models,7,0,1,0,5,hub crp,"['hub', 'crp']",2
105,102132505,My implementation of a insulin-glucose model on MATLAB and Simulink,89,0,1,0,109,implementation insulin glucose,"['implementation', 'insulin', 'glucose']",2
106,102423583,Run your Simulink models as DLLs with Python.,18,0,1,0,14,run dlls python,"['run', 'dlls', 'python']",2
107,102571059,Using MATLAB/Simulink to model a PRR robotic arm with PID Controllers,457,23,3,1,545,prr robotic arm pid controller,"['prr', 'robotic', 'arm', 'pid', 'controller']",2
108,103150316,"Simulink models and MATLAB functions associated with the manuscript ""Anticipation from Sensation: Using Anticipating Synchronisation to Stabilise a System with Inherent Sensory Delay""",294,14,3,0,396,function associate manuscript anticipation sensation anticipate synchronisation stabilise inherent sensory delay,"['function', 'associate', 'manuscript', 'anticipation', 'sensation', 'anticipate', 'synchronisation', 'stabilise', 'inherent', 'sensory', 'delay']",2
109,103269463,Matlab/Simulink model of UUV dynamics,102,6,2,0,113,uuv dynamic,"['uuv', 'dynamic']",2
110,105222275,A Simulink implementation of the geometric controller on a simple Crazyflie model,327,19,3,0,381,implementation geometric controller simple crazyflie,"['implementation', 'geometric', 'controller', 'simple', 'crazyflie']",2
111,105565244,PID Control Project in MATLAB and Simulink for 3rd year controls course ELEC 341 at UBC,494,18,3,0,569,pid control project year control course elec ubc,"['pid', 'control', 'project', 'year', 'control', 'course', 'elec', 'ubc']",2
112,108085380,MAVLink communication support for Simulink,11,0,1,0,9,mavlink communication support,"['mavlink', 'communication', 'support']",2
113,109096281,"This is one of the first approaches to an LTE Simulink model that was developed in the world, back in 2013. It is based on  Turbo Coding, 16-QAM, OFDM and pilots. ",147,23,3,0,133,one first approach lte develop world back base turbo cod qam ofdm pilot,"['one', 'first', 'approach', 'lte', 'develop', 'world', 'back', 'base', 'turbo', 'cod', 'qam', 'ofdm', 'pilot']",2
114,110245018,MATLAB-Simulink code generation library for Arduino SparkFun CAN-BUS Shield,49,4,1,17,53,code generation arduino sparkfun bus shield,"['code', 'generation', 'arduino', 'sparkfun', 'bus', 'shield']",2
115,111106878,Implementation of the SBGC API in Simulink,17,0,1,0,14,implementation sbgc api,"['implementation', 'sbgc', 'api']",2
116,111930670,MATLAB /SIMULINK aplicado em Lego NXT Mindstorm,90,8,4,0,99,aplicado lego nxt mindstorm,"['aplicado', 'lego', 'nxt', 'mindstorm']",2
117,112208578,"Simulink Toolchain Repository for Soft-Realtime code generation with the basic structure, utilising Git submodules, and, some managment scripts.",13,0,1,0,13,toolchain repository soft realtime code generation basic structure utilise git submodules managment script,"['toolchain', 'repository', 'soft', 'realtime', 'code', 'generation', 'basic', 'structure', 'utilise', 'git', 'submodules', 'managment', 'script']",2
118,112226140,The RehaMove3 block for the Soft-Realtime Simulink toolbox found at https://github.com/worldwidemv/SimulinkToolchain.,36,0,1,4,32,rehamove block soft realtime toolbox find github com worldwidemv,"['rehamove', 'block', 'soft', 'realtime', 'toolbox', 'find', 'github', 'com', 'worldwidemv']",2
119,112515499,A ROS node template to embed Simulink generated C++ code,301,4,4,0,303,node template embed generate code,"['node', 'template', 'embed', 'generate', 'code']",2
120,116091662,Analysis of a Nonlinear Electromechanical Plant in Matlab Using Simulink Model,70,4,2,0,76,analysis nonlinear plant,"['analysis', 'nonlinear', 'plant']",2
121,116362118,Synthesis of SS Controller in Matlab using Simulink,8,0,1,0,8,synthesis controller,"['synthesis', 'controller']",2
122,117495868,Python and simulink files to send messages through ethernet(UDP) from linux to MicroAutobox,12,5,6,0,5,python file send message ethernet udp linux microautobox,"['python', 'file', 'send', 'message', 'ethernet', 'udp', 'linux', 'microautobox']",2
123,120771995,Car following model created in Matlab/Simulink using the Intelligent Driver Model (IDM),239,16,3,0,230,car follow create intelligent driver idm,"['car', 'follow', 'create', 'intelligent', 'driver', 'idm']",2
124,121041400,Full system simulation of the Hyperloop pod using Simulink for control system design and Simscape Multibody for CAD import of files.,0,0,1,0,0,full hyperloop pod control design simscape multibody cad import file,"['full', 'hyperloop', 'pod', 'control', 'design', 'simscape', 'multibody', 'cad', 'import', 'file']",2
125,122128733,STM32 PIL example in Simulink,73,2,2,0,42,stm pil example,"['stm', 'pil', 'example']",2
126,122845055,MATLAB/Simulink laboratory files for the UoM 3rd Year Control Systems II course,87,0,1,0,103,laboratory file uom year control course,"['laboratory', 'file', 'uom', 'year', 'control', 'course']",2
127,123222861,Bonsai's Simulink Househeat example using the Universal Coordinator,70,3,2,0,77,bonsai househeat example universal coordinator,"['bonsai', 'househeat', 'example', 'universal', 'coordinator']",2
128,124280856,Kinematic modelling and trajectory planning of a 6 DOF Vika 350 robotic arm mounted on rail (total 7DOF) using Matlab and Simulink.,45,0,1,0,52,kinematic trajectory planning dof vika robotic arm mount rail total dof,"['kinematic', 'trajectory', 'planning', 'dof', 'vika', 'robotic', 'arm', 'mount', 'rail', 'total', 'dof']",2
129,124448612,Simulink simulations of the mechatronics systems,426,33,3,0,398,mechatronics,['mechatronics'],2
130,125677976,Examples of Simulink models on Arduino,83,19,2,20,51,example arduino,"['example', 'arduino']",2
131,126322797,"This project is fork of TrueTime library, a framework for real-time simulation of networked control systems in MATLAB/Simulink.",847,135,3,84,867,project fork truetime framework real time network control,"['project', 'fork', 'truetime', 'framework', 'real', 'time', 'network', 'control']",2
132,126331951,Matlab / Simulink Robot struct command modelisation,228,0,1,0,288,robot struct command modelisation,"['robot', 'struct', 'command', 'modelisation']",2
133,126338636,Arduino library and MATLAB/Simulink API for the AutomationShield Arduino expansion boards for control engineering education.,56,14,2,12,58,arduino api arduino expansion board control engineering education,"['arduino', 'api', 'arduino', 'expansion', 'board', 'control', 'engineering', 'education']",2
134,126658302,Full system simulation of the Hyperloop pod using Simulink for control system design and Simscape Multibody for CAD import of files.,63,2,2,1,69,full hyperloop pod control design simscape multibody cad import file,"['full', 'hyperloop', 'pod', 'control', 'design', 'simscape', 'multibody', 'cad', 'import', 'file']",2
135,128968036,"Wind Turbine Dynamics (WTD) Library features a group of Simulink blocks for simulation of dynamic response of generic models of Wind Turbine Generators (WTG) on power system disturbances, which includes the General Electric (GE) Doubly Fed Induction Generator (DFIG) model. The WTD Library features a set of Simulink blocks that models GE DFIG as well as conventional steam and hydro generating units that are connected to a transmission grid. The Library also includes a set of Matlab m and S functions which are used for power flow calculation and initialization of state variables of the models of GE DFIG and conventional steam and hydro generating units. The WTD library is an open source simulation tool primarily aimed for educational/research purpose since it enables incorporation of user-defined Simulink models. The Library is especially suitable for development and testing of new algorithms for the control of WTG, like virtual inertia and primary frequency control algorithms.",116,38,1,38,149,wind turbine dynamic wtd feature group block dynamic response generic wind turbine generator wtg power disturbance include general electric doubly feed induction generator dfig wtd feature set block dfig well conventional steam hydro generate unit connect transmission grid also include set function power flow calculation initialization state variable dfig conventional steam hydro generate unit wtd open source tool primarily aim educational research purpose since enables incorporation user define especially suitable development test new algorithm control wtg like virtual inertia primary frequency control algorithm,"['wind', 'turbine', 'dynamic', 'wtd', 'feature', 'group', 'block', 'dynamic', 'response', 'generic', 'wind', 'turbine', 'generator', 'wtg', 'power', 'disturbance', 'include', 'general', 'electric', 'doubly', 'feed', 'induction', 'generator', 'dfig', 'wtd', 'feature', 'set', 'block', 'dfig', 'well', 'conventional', 'steam', 'hydro', 'generate', 'unit', 'connect', 'transmission', 'grid', 'also', 'include', 'set', 'function', 'power', 'flow', 'calculation', 'initialization', 'state', 'variable', 'dfig', 'conventional', 'steam', 'hydro', 'generate', 'unit', 'wtd', 'open', 'source', 'tool', 'primarily', 'aim', 'educational', 'research', 'purpose', 'since', 'enables', 'incorporation', 'user', 'define', 'especially', 'suitable', 'development', 'test', 'new', 'algorithm', 'control', 'wtg', 'like', 'virtual', 'inertia', 'primary', 'frequency', 'control', 'algorithm']",2
136,131013421,ÐÐ½ÑÐµÑÑÐµÐ¹Ñ Ð¾Ð±Ð¼ÐµÐ½Ð° Ð´Ð°Ð½Ð½ÑÐ¼Ð¸ Ð¼ÐµÐ¶Ð´Ñ Simulink Desktop Real-Time Ð¸ Ð²Ð½ÐµÑÐ½Ð¸Ð¼Ð¸ SCADA-ÑÐ¸ÑÑÐµÐ¼Ð°Ð¼Ð¸ Ð¿Ð¾ Ð¿ÑÐ¾ÑÐ¾ÐºÐ¾Ð»Ñ ÐÐ­Ð 60870-5-104,147,7,3,0,156,Ð¸Ð½ÑÐµÑÑÐµÐ¹Ñ desktop real time scada Ð¼ÑÐº,"['Ð¸Ð½ÑÐµÑÑÐµÐ¹Ñ', 'desktop', 'real', 'time', 'scada', 'Ð¼ÑÐº']",2
137,132039231,"Source codes and models for manuscript âSimulink Model for PWM-Supplied Laminated Magnetic Cores Including Hysteresis, Eddy-Current and Excess Lossesâ",146,4,3,0,180,source code manuscript pwm supply laminated magnetic core include hysteresis eddy current excess loss,"['source', 'code', 'manuscript', 'pwm', 'supply', 'laminated', 'magnetic', 'core', 'include', 'hysteresis', 'eddy', 'current', 'excess', 'loss']",2
138,132380784,The UIO is reviewed in a PDF file and Simulink examples from control theory are given.,161,10,3,0,202,uio review pdf file example control theory give,"['uio', 'review', 'pdf', 'file', 'example', 'control', 'theory', 'give']",2
139,133649527,This Simulink library/Add-On provides an OBD2 block for basic vehicle diagnostics.,248,0,1,8,308,add provide obd block basic vehicle diagnostics,"['add', 'provide', 'obd', 'block', 'basic', 'vehicle', 'diagnostics']",2
140,134269583,Projects done in MATLAB and Simulink,132,7,2,0,170,project,['project'],2
141,136474569,Didactic. Matlab-Simulink solve methods of ODE (Ordinary differential equation).,17,0,1,0,24,didactic solve method ode ordinary differential equation,"['didactic', 'solve', 'method', 'ode', 'ordinary', 'differential', 'equation']",2
142,136474996,"Didactic. Create a GUI to optimaze simulinks simulations: multiple variable change, multiple scopes, etc.",53,0,1,0,50,didactic create gui optimaze multiple variable change multiple scope etc,"['didactic', 'create', 'gui', 'optimaze', 'multiple', 'variable', 'change', 'multiple', 'scope', 'etc']",2
143,137540377,Design of Fuzzy Logic + PID Controller for DC Motor using Matlab and Simulink,36,2,2,0,41,design fuzzy logic pid controller motor,"['design', 'fuzzy', 'logic', 'pid', 'controller', 'motor']",2
144,137583068,Matlab - Simulink codes that are related to my Ph.D. Thesis work,15418,483,10,2,12847,code related thesis work,"['code', 'related', 'thesis', 'work']",2
145,138221115,"The Thermal Systems Analysis Toolbox (TSAT) is a MATLAB/Simulink based tool for modeling and analysis of dynamic thermal systems involving heat transfer. It is best suited for 1-D and 2-D heat transfer involving solid planar and cylindrical structures, however, the toolset is more extensive than this. The tools enable consideration of conduction, convection, and radiation boundary conditions. Some advanced capabilities are provided when it comes to approximating conduction within non-isotropic materials, structures with material transitions, and structures with time-varying temperature dependent material properties. Numerous tools are available to facilitate the construction of modular models of thermal systems and their integration with larger system models.",591,79,2,63,596,thermal analysis toolbox tsat base tool analysis dynamic thermal involve heat transfer best suit heat transfer involve solid planar cylindrical structure however toolset extensive tool enable consideration conduction convection radiation boundary condition advance capability provide come approximate conduction within non isotropic material structure material transition structure time vary temperature dependent material property numerous tool available facilitate construction modular thermal integration large,"['thermal', 'analysis', 'toolbox', 'tsat', 'base', 'tool', 'analysis', 'dynamic', 'thermal', 'involve', 'heat', 'transfer', 'best', 'suit', 'heat', 'transfer', 'involve', 'solid', 'planar', 'cylindrical', 'structure', 'however', 'toolset', 'extensive', 'tool', 'enable', 'consideration', 'conduction', 'convection', 'radiation', 'boundary', 'condition', 'advance', 'capability', 'provide', 'come', 'approximate', 'conduction', 'within', 'non', 'isotropic', 'material', 'structure', 'material', 'transition', 'structure', 'time', 'vary', 'temperature', 'dependent', 'material', 'property', 'numerous', 'tool', 'available', 'facilitate', 'construction', 'modular', 'thermal', 'integration', 'large']",2
146,138398356,â¨ A MATLAB implementation (Simulink Model) of a Full Wave Bridge Rectifier,11,0,1,0,17,implementation full wave bridge rectifier,"['implementation', 'full', 'wave', 'bridge', 'rectifier']",2
147,139331917,Active noise control headsets simulated in Simulink,48,6,2,0,45,active noise control headset,"['active', 'noise', 'control', 'headset']",2
148,140412299,A MATLAB class for transforming Simulink requirements into STL specifications. ,13,0,1,0,12,class transforming requirement stl specification,"['class', 'transforming', 'requirement', 'stl', 'specification']",2
149,140520307,This is a simulink based Quad-copter simulation. Play around!,829,38,4,4,993,base quad copter play around,"['base', 'quad', 'copter', 'play', 'around']",2
150,142429039,In this repository we will include all the files required to run supply chain simulations implemented in SIMULINK,109,11,4,0,121,repository include file require run supply chain implement,"['repository', 'include', 'file', 'require', 'run', 'supply', 'chain', 'implement']",2
151,142487610,A MySQL extension for Simulink.,58,2,2,0,52,mysql extension,"['mysql', 'extension']",2
152,143530121,Designed a fuzzy controller on Simulink to track the input signal in real time and selected the optimal parameters.,27,0,1,0,33,design fuzzy controller track input signal real time select optimal parameter,"['design', 'fuzzy', 'controller', 'track', 'input', 'signal', 'real', 'time', 'select', 'optimal', 'parameter']",2
153,148820632,"MATLAB codes and Simulink models for the Electric Drive Power Electronics Design, Simulation, and Analysis.",51,0,1,0,50,code electric drive power electronics design analysis,"['code', 'electric', 'drive', 'power', 'electronics', 'design', 'analysis']",2
154,149444316,Proyectos con fines diversos programados con Matlab y herramientas propias del mismo como por ejemplo Simulink.,73,4,2,0,75,proyectos con fine diversos programados con herramientas propias del mismo como por ejemplo,"['proyectos', 'con', 'fine', 'diversos', 'programados', 'con', 'herramientas', 'propias', 'del', 'mismo', 'como', 'por', 'ejemplo']",2
155,149536968,Simulink model of the longitudinal control of a Tesla Model S.,33,0,1,0,36,longitudinal control tesla,"['longitudinal', 'control', 'tesla']",2
156,150076757,Project to estimate dynamic parameters and control a RRR robot in Matlab/Simulink,836,75,3,48,926,project estimate dynamic parameter control robot,"['project', 'estimate', 'dynamic', 'parameter', 'control', 'robot']",2
157,152077868,Projekt Sensorsysteme: Embedded Linux mit Pyhton und Simulink fÃ¼r ein Robotikprojekt,207,0,1,0,191,projekt sensorsysteme embed linux mit pyhton und fÃ¼r ein robotikprojekt,"['projekt', 'sensorsysteme', 'embed', 'linux', 'mit', 'pyhton', 'und', 'fÃ¼r', 'ein', 'robotikprojekt']",2
158,152321876,"ModulaciÃ³n y demodulaciÃ³n de saÃ±ales AM, usando MatLab y SimuLink.",40,0,1,0,42,modulaciÃ³n demodulaciÃ³n saÃ±ales usando,"['modulaciÃ³n', 'demodulaciÃ³n', 'saÃ±ales', 'usando']",2
159,154291277,Project for STM32+CubeMx+Matlab/Simulink,50,6,2,0,40,project stm cubemx,"['project', 'stm', 'cubemx']",2
160,155327882,Learn the basics of Unmanned Vehicles using MATLAB and Simulink,365,16,5,0,397,learn basic unmanned vehicle,"['learn', 'basic', 'unmanned', 'vehicle']",2
161,156647158,IVR Optimisation and Design using MATLAB and Simulink,80,4,3,0,90,ivr optimisation design,"['ivr', 'optimisation', 'design']",2
162,157883767,MMC hybrid Control MATLAB SIMULINK (Paper Version),1169,49,4,0,1417,mmc hybrid control paper version,"['mmc', 'hybrid', 'control', 'paper', 'version']",2
163,159205303,"This repository contains the firmware, PID Tunning on Simulink and ROS Navigation package for a Self-Balancing Robot.",482,30,6,0,479,repository contains firmware pid tunning ros navigation package self balance robot,"['repository', 'contains', 'firmware', 'pid', 'tunning', 'ros', 'navigation', 'package', 'self', 'balance', 'robot']",2
164,159219107,Linear Control Models in Simulink,54,2,2,0,59,linear control,"['linear', 'control']",2
165,159547572,Tools for generating CFS ECI-compatible code from Simulink models,175,10,2,15,165,tool generate eci compatible code,"['tool', 'generate', 'eci', 'compatible', 'code']",2
166,159676236,Modelate and control of Syncro Drive robot in Matlab/Simulink.,270,10,2,0,264,modelate control syncro drive robot,"['modelate', 'control', 'syncro', 'drive', 'robot']",2
167,159694823,C Code Integration in MATLAB and Simulink to Control an External Interface.,1400,246,4,131,891,code integration control external interface,"['code', 'integration', 'control', 'external', 'interface']",2
168,159919510,Pressure-Volume Loop Modeling and Control using Simulink,224,3,2,0,225,pressure volume loop control,"['pressure', 'volume', 'loop', 'control']",2
169,160469223,MATLAB/Simulink sample code suite for Autoware.,1188,110,11,0,1262,sample code suite autoware,"['sample', 'code', 'suite', 'autoware']",2
170,160587590,"This repository contains a Matlab/Simulink model for Grappler, a mechanism for gripping net-like structures to low gravity bodies. ",211,18,3,0,247,repository contain grappler mechanism grip net like structure low gravity body,"['repository', 'contain', 'grappler', 'mechanism', 'grip', 'net', 'like', 'structure', 'low', 'gravity', 'body']",2
171,160934785,The purpose of this assignment is to develop skills in simulating the kinematics of a robot manipulator and designing a controller using Simulink and Matlab,53,4,2,0,74,purpose assignment develop skill kinematics robot manipulator design controller,"['purpose', 'assignment', 'develop', 'skill', 'kinematics', 'robot', 'manipulator', 'design', 'controller']",2
172,161657273,"Main repository for the Kugle robot project. The repository contains the MATLAB code and Simulink models for the Kugle robot developed as part of the master thesis work. This includes a non-linear Quaternion ballbot model, Sliding mode attitude controller, Quaternion Extended Kalman filter and ACADO MPC for path-following.",2653,115,2,31,2603,main repository kugle robot project repository contain code kugle robot develop part master thesis work include non linear quaternion ballbot slide mode attitude controller quaternion extend kalman filter acado mpc path follow,"['main', 'repository', 'kugle', 'robot', 'project', 'repository', 'contain', 'code', 'kugle', 'robot', 'develop', 'part', 'master', 'thesis', 'work', 'include', 'non', 'linear', 'quaternion', 'ballbot', 'slide', 'mode', 'attitude', 'controller', 'quaternion', 'extend', 'kalman', 'filter', 'acado', 'mpc', 'path', 'follow']",2
173,162273340,Specification and Simulink Models of the Space Shuttle On-Orbit Flight Control System,2520,226,9,52,2580,specification space shuttle orbit flight control,"['specification', 'space', 'shuttle', 'orbit', 'flight', 'control']",2
174,162625178,"En esta serie de prÃ¡cticas que realice en la universidad se muestran modelos neuronales simulados en simulink. Dentro de estos modelos se encuentran las neuronas tipo Perceptron, Adeline, Hebianna asÃ­ como el modelo integra y dispara, el modelo HH y una red asociativa.",110,0,1,0,133,esta serie prÃ¡cticas que realice universidad muestran modelos neuronales dentro estos modelos encuentran neuronas tipo perceptron adeline hebianna asÃ­ como modelo integra dispara modelo una red asociativa,"['esta', 'serie', 'prÃ¡cticas', 'que', 'realice', 'universidad', 'muestran', 'modelos', 'neuronales', 'dentro', 'estos', 'modelos', 'encuentran', 'neuronas', 'tipo', 'perceptron', 'adeline', 'hebianna', 'asÃ­', 'como', 'modelo', 'integra', 'dispara', 'modelo', 'una', 'red', 'asociativa']",2
175,163075604,This simulink model connects to Gazebo simulator for simple kinematic control,7,0,1,0,7,connects gazebo simple kinematic control,"['connects', 'gazebo', 'simple', 'kinematic', 'control']",2
176,169892394,This project represents the code required to design a Simulink-based processing application to run on an Arduino Uno for a mot,116,22,2,10,59,project represent code require design base process application run arduino uno mot,"['project', 'represent', 'code', 'require', 'design', 'base', 'process', 'application', 'run', 'arduino', 'uno', 'mot']",2
177,173404923,An interface for controlling KUKA iiwa manipulators from Simulink,206,8,2,0,188,interface control kuka iiwa manipulator,"['interface', 'control', 'kuka', 'iiwa', 'manipulator']",2
178,173619650,Import and export Functional Mock-up Units with Simulink,51,4,2,1,42,import export functional mock unit,"['import', 'export', 'functional', 'mock', 'unit']",2
179,179992387,EasyLink is a C++ software development kit for developing blocks for SIMULINK (S-functions),58,0,1,0,40,easylink software development kit develop block function,"['easylink', 'software', 'development', 'kit', 'develop', 'block', 'function']",2
180,183066321,"This Matlab script & simulink defines Lorenz Attractor as it well known by chaotic system, it can be used for a lot of applications like cryptography and many more",15,0,1,0,23,script defines lorenz attractor well know chaotic lot application like cryptography many,"['script', 'defines', 'lorenz', 'attractor', 'well', 'know', 'chaotic', 'lot', 'application', 'like', 'cryptography', 'many']",2
181,183701536,MATLAB-SIMULINK script for circuit analysis of lambda/4 resonator for Arc Experiments,34,1,2,0,36,script circuit analysis lambda resonator arc experiment,"['script', 'circuit', 'analysis', 'lambda', 'resonator', 'arc', 'experiment']",2
182,184533633,Matlab/Simulink implementation of Path Following for a REMUS 100,285,25,5,0,383,implementation path follow remus,"['implementation', 'path', 'follow', 'remus']",2
183,185827896,"Simulink model of a multiloop PID control of the mass outflow and height in a buffer silo, using a single measurement.",117,0,1,0,130,multiloop pid control mass outflow height buffer silo single measurement,"['multiloop', 'pid', 'control', 'mass', 'outflow', 'height', 'buffer', 'silo', 'single', 'measurement']",2
184,186255987,Finding the traction energy for an electric vehicle by Matlab Simulink simulation ,61,0,1,0,67,find traction energy electric vehicle,"['find', 'traction', 'energy', 'electric', 'vehicle']",2
185,187045559,Analog Modulation Techniques (AM & FM) written in MATLAB & Simulink,25,0,1,0,29,analog modulation technique write,"['analog', 'modulation', 'technique', 'write']",2
186,187844929,Arquivos do Webinar sobre Sistems Hidraulcios em MATLAB e SIMULINK,63,3,2,0,63,arquivos webinar sobre sistems hidraulcios,"['arquivos', 'webinar', 'sobre', 'sistems', 'hidraulcios']",2
187,189426268,Parametric sweeping in simulink & PSpice co-simulation by programming in matlab,4,0,1,0,4,parametric sweeping pspice programming,"['parametric', 'sweeping', 'pspice', 'programming']",2
188,190421985,A MATLAB/Simulink Toolbox for Simulating Injection Attacks in ICS Infrastructure,611,60,6,0,633,toolbox injection attack infrastructure,"['toolbox', 'injection', 'attack', 'infrastructure']",2
189,190860622,simulinkå·¥å·ç®±,70,0,1,0,73,,[],2
190,191538781,ä½¿ç¨simulinkè¿è¡ç¯å¢çæ¨¡æï¼ä½¿ç¨pythonç¼åå¼ºåå­¦ä¹ (rl)ä»£ç ,200,15,3,1,216,,[],2
191,192751018,Simulink model for CS-TFM P- and M-class estimators,786,58,4,0,993,tfm class estimator,"['tfm', 'class', 'estimator']",2
192,196037982,This repository contains the code for Control Tutorial for MATLAB and Simulink .,74,5,2,0,82,repository contain code control tutorial,"['repository', 'contain', 'code', 'control', 'tutorial']",2
193,198236388,Modeling and control of a vehicle suspension in Matlab/Simulink,20,0,1,0,28,control vehicle suspension,"['control', 'vehicle', 'suspension']",2
194,198855626,MATLAB Simulink models made for course ECM1003 during FALL SEM 2019-20,24,2,2,0,17,make course ecm fall sem,"['make', 'course', 'ecm', 'fall', 'sem']",2
195,199051951,Course Notes and Simulink Models for Simulink Onramp Course by Mathworks ,19,0,1,0,21,course note onramp course mathworks,"['course', 'note', 'onramp', 'course', 'mathworks']",2
196,203559754,Physics simulation using MATLAB and Simulink's Simscape Multibody,10030,692,6,0,5282,physic simscape multibody,"['physic', 'simscape', 'multibody']",2
197,204030363,Simulink models for speech and audio processing,11857,1920,11,1257,14403,speech audio processing,"['speech', 'audio', 'processing']",2
198,204352055,Simulink model for Quaternion based Satellite Attitude dynamics and control,63,5,3,0,83,quaternion base satellite attitude dynamic control,"['quaternion', 'base', 'satellite', 'attitude', 'dynamic', 'control']",2
199,204465110,Transformation of Simulink models to DEPM,6,0,1,0,7,transformation depm,"['transformation', 'depm']",2
200,208221300,Example UDP Receiver and Transmitter in Unity to communicate Unity projects with Matlab&Simulink.,7,0,1,0,5,example udp receiver transmitter unity communicate unity project,"['example', 'udp', 'receiver', 'transmitter', 'unity', 'communicate', 'unity', 'project']",2
201,209626250,MATLAB-Simulink simulation of SPO-10,214,17,4,0,200,spo,['spo'],2
202,210618748,ReactiveX-enabled Simulink framework,13,0,1,0,12,reactivex enable framework,"['reactivex', 'enable', 'framework']",2
203,211239358,Falsification of MATLAB/Simulink model using deep reinforcement learning,1358,111,6,0,1385,falsification deep reinforcement learning,"['falsification', 'deep', 'reinforcement', 'learning']",2
204,211368917,Simulink Block / S-Function for Windows XInput API (XBOX Controller),59,0,1,0,48,block function windows xinput api xbox controller,"['block', 'function', 'windows', 'xinput', 'api', 'xbox', 'controller']",2
205,214943819,This is the open source project of the 6DoF robot arm Simulation based on Matlab Simulink,57,0,1,0,57,open source project dof robot arm base,"['open', 'source', 'project', 'dof', 'robot', 'arm', 'base']",2
206,215325918,MATLAB and Simulink files for modeling and simulation of ROBOTIS OpenManipulator,199,24,4,11,209,file robotis openmanipulator,"['file', 'robotis', 'openmanipulator']",2
207,216240800,Matlab and Simulink software and tools.,723,98,3,88,736,software tool,"['software', 'tool']",2
208,221499185,Source Code for 'Beginning MATLAB and Simulink' by Sulaymon Eshkabilov,157,3,2,0,154,source code begin sulaymon eshkabilov,"['source', 'code', 'begin', 'sulaymon', 'eshkabilov']",2
209,223755551,Power Electronics circuit simulations in MATLAB Simulink,113,0,1,0,151,power electronics circuit,"['power', 'electronics', 'circuit']",2
210,225226217,A simulink environment to perform flight simulations and to verify control algorithms,912,59,5,0,967,environment perform flight verify control algorithm,"['environment', 'perform', 'flight', 'verify', 'control', 'algorithm']",2
211,225357093,Vector to bus conversion in Simulink,7,0,1,1,6,vector bus conversion,"['vector', 'bus', 'conversion']",2
212,225390839,2D model of Superconducting fault current limiter on Matlab/Simulink,464,14,3,0,513,superconducting fault current limiter,"['superconducting', 'fault', 'current', 'limiter']",2
213,228030852,"Modelling and Ccntrol of vuarious manipulators using MATLAB, Simulink and ADAMS",522,29,3,0,601,ccntrol vuarious manipulator adam,"['ccntrol', 'vuarious', 'manipulator', 'adam']",2
214,228427943,This repository is modified MCP2515 library for Simulink with dual CAN devices,667,102,6,26,598,repository modify mcp dual device,"['repository', 'modify', 'mcp', 'dual', 'device']",2
215,228431862,Simulink models of some telecommunications techniques.,26,0,1,0,27,technique,['technique'],2
0,266,"The Simulink MatriX Library (SMXL) - a collection of blocks that handle matrices in Simulink.<p>SMXL (Simulink MatriX Library) it's a powerful real and complex matrix operations support for Simulink 3 (R11.1) that works fine for later versions as well. It features :-) Multiplication-) Transposition -) Singular Value Decomposition-) Pseudo-Inversion via SVD-) Other simple operationsAll the s-functions are written in optimized level-2 c code and are fully Real Time Workshop Compatible. A library of ROTATION MATRICES which can be very useful for simulations of rigid bodies in 3D space, is included.There are different examples including a Variable State Space System and an adaptive multilayer neural network.</p>",477,46,3,64,514,matrix smxl collection block handle matrix smxl matrix powerful real complex matrix operation support work fine late version well feature multiplication transposition singular value decomposition pseudo inversion via svd simple operationsall function write optimized level code fully real time workshop compatible rotation matrix useful rigid body space include different example include variable state space adaptive multilayer neural network,"['matrix', 'smxl', 'collection', 'block', 'handle', 'matrix', 'smxl', 'matrix', 'powerful', 'real', 'complex', 'matrix', 'operation', 'support', 'work', 'fine', 'late', 'version', 'well', 'feature', 'multiplication', 'transposition', 'singular', 'value', 'decomposition', 'pseudo', 'inversion', 'via', 'svd', 'simple', 'operationsall', 'function', 'write', 'optimized', 'level', 'code', 'fully', 'real', 'time', 'workshop', 'compatible', 'rotation', 'matrix', 'useful', 'rigid', 'body', 'space', 'include', 'different', 'example', 'include', 'variable', 'state', 'space', 'adaptive', 'multilayer', 'neural', 'network']",0
1,268,"TrimMod finds the trim point (equilibrium) of a Simulink system.<p>TrimMod finds the trim point (equilibrium) of a Simulink system. When invoked without left-hand arguments, TrimMod opens a new figure with a graphical user interface. The user can load a Simulink system (.mdl), define certain trim point requirements and ask TrimMod to calculate the corresponding trim point variables that are necessary to satisfy the requirements. This trim point is then automatically transferred to the 'Simulation; Model Configuration Parameters; Data Import/Export; Load from workspace' dialog box ('Input' and 'Initial state') of the corresponding Simulink system.Version 1.5 was tested under:MATLAB Version: 9 (R2016a), Microsoft Windows 10.</p>",100,6,2,0,89,trimmod find trim point equilibrium trimmod find trim point equilibrium invoke without left hand argument trimmod open new figure graphical user interface user load mdl define certain trim point requirement ask trimmod calculate correspond trim point variable necessary satisfy requirement trim point automatically transfer configuration parameter data import export load workspace dialog box input initial state correspond version test version microsoft window,"['trimmod', 'find', 'trim', 'point', 'equilibrium', 'trimmod', 'find', 'trim', 'point', 'equilibrium', 'invoke', 'without', 'left', 'hand', 'argument', 'trimmod', 'open', 'new', 'figure', 'graphical', 'user', 'interface', 'user', 'load', 'mdl', 'define', 'certain', 'trim', 'point', 'requirement', 'ask', 'trimmod', 'calculate', 'correspond', 'trim', 'point', 'variable', 'necessary', 'satisfy', 'requirement', 'trim', 'point', 'automatically', 'transfer', 'configuration', 'parameter', 'data', 'import', 'export', 'load', 'workspace', 'dialog', 'box', 'input', 'initial', 'state', 'correspond', 'version', 'test', 'version', 'microsoft', 'window']",0
2,722,"Bluetooth modulation and frequency hopping<p>SimulinkÂ® model of a simple BluetoothÂ® wireless data link. Includes error correction, GFSK modulation, frequency hopping and a 100MHz channel. NOTE: A version of this model which works with the current release of MATLABÂ® and SimulinkÂ® is shipped with the Communications Blocksetâ¢. See also:1) 'Bluetooth Full Duplex Voice and Data Transmission' -<a href=""http://www.mathworks.com/matlabcentral/fileexchange/22832"">http://www.mathworks.com/matlabcentral/fileexchange/22832</a>) 'Bluetooth Voice Transmission' - <a href=""http://www.mathworks.com/matlabcentral/fileexchange/907"">http://www.mathworks.com/matlabcentral/fileexchange/907</a></p>bluetooth,frequency,hopping,network,wireless,bluetooth,frequency,hopping,network,wireless,bluetooth,hopping,wireless,bluetooth,frequency,frequency,bluetooth",90,10,2,0,72,bluetooth modulation frequency simple bluetooth wireless data link include error correction gfsk modulation frequency hop mhz channel note version work current release ship communication blockset see also bluetooth full duplex voice data transmission http mathworks com matlabcentral fileexchange bluetooth voice transmission http mathworks com matlabcentral fileexchange,"['bluetooth', 'modulation', 'frequency', 'simple', 'bluetooth', 'wireless', 'data', 'link', 'include', 'error', 'correction', 'gfsk', 'modulation', 'frequency', 'hop', 'mhz', 'channel', 'note', 'version', 'work', 'current', 'release', 'ship', 'communication', 'blockset', 'see', 'also', 'bluetooth', 'full', 'duplex', 'voice', 'data', 'transmission', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'bluetooth', 'voice', 'transmission', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange']",7
3,724,"DTMF generator and receiver<p>SimulinkÂ® model of a dual-tone multi-frequency (DTMF) generator and receiver. Includes bandpass filter bank receiver, real-time soundcard audio, spectrogram of channel and uses StateflowÂ® block to store decoded digits. NOTE: A version of this model which works with the current release of MATLABÂ® and Simulink is shipped with the Signal Processing Blocksetâ¢.</p>communications,dtmf,dual tone,multi frequency,simulink,dtmf,dual tone",388,56,5,0,344,dtmf generator dual tone multi frequency dtmf generator receiver include bandpass filter bank receiver real time soundcard audio spectrogram channel stateflow block store decode digit note version work current release ship signal processing blockset tonemulti tone,"['dtmf', 'generator', 'dual', 'tone', 'multi', 'frequency', 'dtmf', 'generator', 'receiver', 'include', 'bandpass', 'filter', 'bank', 'receiver', 'real', 'time', 'soundcard', 'audio', 'spectrogram', 'channel', 'stateflow', 'block', 'store', 'decode', 'digit', 'note', 'version', 'work', 'current', 'release', 'ship', 'signal', 'processing', 'blockset', 'tonemulti', 'tone']",0
4,746,"IS-95A CDMA Power Control<p>SimulinkÂ® and StateflowÂ® model of IS-95A CDMA reverse traffic channel power control. Includes reverse traffic channel physical layer, together with open and closed loop algorithms for base station and mobile implemented as state machines with Stateflow.</p>cdma,is95a,phy,pn,pn string,power control,reverse traffic,simulink,stateflow,wireless,cdma,cdma,power control,power control,pn,pn string",283,24,6,0,279,cdma power stateflow cdma reverse traffic channel power control include reverse traffic channel physical layer together open close loop algorithm base station mobile implemented state machine stateflow cdmais aphypnpn stringpower controlreverse controlpower controlpnpn string,"['cdma', 'power', 'stateflow', 'cdma', 'reverse', 'traffic', 'channel', 'power', 'control', 'include', 'reverse', 'traffic', 'channel', 'physical', 'layer', 'together', 'open', 'close', 'loop', 'algorithm', 'base', 'station', 'mobile', 'implemented', 'state', 'machine', 'stateflow', 'cdmais', 'aphypnpn', 'stringpower', 'controlreverse', 'controlpower', 'controlpnpn', 'string']",4
5,787,"IS-95A Mobile Phone Call Processing<p>SimulinkÂ® and StateflowÂ® model of the top-level states of IS-95A mobile phone call processing.After starting the model, trigger the phone to leave the powered-off state by double-clicking the top left green block. After going through the initialization states, the model remains in the idle state listening for messages coming from the base station on the paging channel.</p>is95a call processing mobile phone,is95a call processing mobile phone seminar,wireless,is95a call processing mobile phone,is95a call processing mobile phone",90,1,2,0,88,mobile phone call stateflow top level state mobile phone call processing start trigger phone leave power state double click top left green block initialization state remain idle state listening message come base station page channel call processing mobile phoneis call processing mobile phone call processing mobile phoneis call processing mobile phone,"['mobile', 'phone', 'call', 'stateflow', 'top', 'level', 'state', 'mobile', 'phone', 'call', 'processing', 'start', 'trigger', 'phone', 'leave', 'power', 'state', 'double', 'click', 'top', 'left', 'green', 'block', 'initialization', 'state', 'remain', 'idle', 'state', 'listening', 'message', 'come', 'base', 'station', 'page', 'channel', 'call', 'processing', 'mobile', 'phoneis', 'call', 'processing', 'mobile', 'phone', 'call', 'processing', 'mobile', 'phoneis', 'call', 'processing', 'mobile', 'phone']",5
6,907,"Bluetooth Voice Transmission<p>SimulinkÂ® model of a BluetoothÂ® communication link transmitting HV1, HV2 or HV3 voice packets.NOTE: A version of this model which works with the current release of MATLABÂ® and SimulinkÂ® is shipped with the Communications Blocksetâ¢. The model includes wave file I/O, CVSD speech coding, HEC, FEC, framing, GFSK Modulation, frequency hopping, and an 802.11b interferer. Instructions: Unzip to a new folder, change the MATLAB current directory to this folder, then open the 'bluetooth_voice' mdl file.'bluetooth_voice_article.mdl' is previous version of model which only does HV3 and is described in word document.</p>80211b,bluetooth,cvsd,frequency,hopping,matlab,simulink,voice,wireless,80211b,bluetooth,cvsd,frequency,hopping,matlab,simulink,voice,bluetooth,bluetooth",1632,194,5,20,1562,bluetooth voice bluetooth communication link transmit voice packet note version work current release ship communication blockset include wave file cvsd speech cod hec fec frame gfsk modulation frequency hop interferer instruction unzip new folder change current directory folder open bluetooth voice mdl file bluetooth voice article mdl previous version describe word document,"['bluetooth', 'voice', 'bluetooth', 'communication', 'link', 'transmit', 'voice', 'packet', 'note', 'version', 'work', 'current', 'release', 'ship', 'communication', 'blockset', 'include', 'wave', 'file', 'cvsd', 'speech', 'cod', 'hec', 'fec', 'frame', 'gfsk', 'modulation', 'frequency', 'hop', 'interferer', 'instruction', 'unzip', 'new', 'folder', 'change', 'current', 'directory', 'folder', 'open', 'bluetooth', 'voice', 'mdl', 'file', 'bluetooth', 'voice', 'article', 'mdl', 'previous', 'version', 'describe', 'word', 'document']",0
7,976,"Adaptive Neural Networks<p>The adaptive Neural Network Library (Matlab 5.3.1 and later) is a collection of blocks that implement several Adaptive Neural Networks featuring different adaptation algorithms.It was developed mainly in June-July 2001 by Giampiero Campa (West Virginia University) and Mario Luca Fravolini (Perugia University). Later improvements were partially supported by the NASA Grant NCC5-685.There are blocks that implement basically these kinds of neural networks:Adaptive Linear Networks (ADALINE)Multilayer Layer Perceptron NetworksGeneralized Radial Basis Functions NetworksDynamic Cell Structure (DCS) Networks with gaussian or conical basis functionsAlso, a Simulink example regarding the approximation of a scalar nonlinear function is included.Finally, the file Training.zip includes step by step instrucions on how to train the GRBF network and the supporting example.</p>fuzzy,neural networks,rbf for suren,adaptive neural networks,adaline,adaptive neural networks,dcs,ebpa,fuzzy logic,mran,neural networks,rbf,neural networks,adaline,neural networks",38,4,2,1,42,adaptive neural networksthe adaptive neural network later collection block implement several adaptive neural network feature different adaptation algorithm develop mainly june july giampiero campa west virginia university mario luca fravolini perugia university later improvement partially support nasa grant ncc block implement basically kinds neural network adaptive linear network adaline multilayer layer perceptron radial basis function networksdynamic cell structure network gaussian conical basis functionsalso example regard approximation scalar nonlinear function include finally file train zip include step step instrucions train grbf network support example fuzzyneural networksrbf surenadaptive neural neural logicmranneural network,"['adaptive', 'neural', 'networksthe', 'adaptive', 'neural', 'network', 'later', 'collection', 'block', 'implement', 'several', 'adaptive', 'neural', 'network', 'feature', 'different', 'adaptation', 'algorithm', 'develop', 'mainly', 'june', 'july', 'giampiero', 'campa', 'west', 'virginia', 'university', 'mario', 'luca', 'fravolini', 'perugia', 'university', 'later', 'improvement', 'partially', 'support', 'nasa', 'grant', 'ncc', 'block', 'implement', 'basically', 'kinds', 'neural', 'network', 'adaptive', 'linear', 'network', 'adaline', 'multilayer', 'layer', 'perceptron', 'radial', 'basis', 'function', 'networksdynamic', 'cell', 'structure', 'network', 'gaussian', 'conical', 'basis', 'functionsalso', 'example', 'regard', 'approximation', 'scalar', 'nonlinear', 'function', 'include', 'finally', 'file', 'train', 'zip', 'include', 'step', 'step', 'instrucions', 'train', 'grbf', 'network', 'support', 'example', 'fuzzyneural', 'networksrbf', 'surenadaptive', 'neural', 'neural', 'logicmranneural', 'network']",5
8,1138,"A Simulink wavelet library<p>The library includes compiled FIR filters, redundant and non redundant wavelet transform with dynamically sized channels, with applications to denoising and differentiation.</p>fir filters,fir filters,signal,signal processing,time frequency,wavelets,wavelets simulink",69,23,3,14,70,wavelet librarythe include compile fir filter redundant non redundant wavelet transform dynamically size channel application denoising differentiation fir filtersfir processingtime,"['wavelet', 'librarythe', 'include', 'compile', 'fir', 'filter', 'redundant', 'non', 'redundant', 'wavelet', 'transform', 'dynamically', 'size', 'channel', 'application', 'denoising', 'differentiation', 'fir', 'filtersfir', 'processingtime']",8
9,1207,"Nonlinear 6DOF Model of an Underwater Vehicle<p>Shark is a detailed nonlinear model of an underwater vehicle for MATLAB 5.3 and later (tested on 6.1 as well).It has a Simulink interface but the source code consists in 10 MATLAB functions, each one being well documented in an enclosed PDF report.It is possible to modify the functions to simulate different kind of vehicles and, in general, this tool can be seen as an effective way to map the  equations of a mechanical system to a working simulation in the MATLAB and Simulink environment, especially in those cases where the extensive use of a matrix-based formulation in the modeling makes MATLAB (rather than Simulink) the preferred coding environment.NOTE: After downloading and unzipping the file ""shark.zip"", please follow the istructions in the file ""contents.m"".Giampy, Dec 2001</p>marine,simulation,submarine,underwater,vehicle",70,5,2,0,70,nonlinear dof underwater vehicleshark detail nonlinear underwater vehicle later test well interface source code consist function one well document enclose pdf report possible modify function different kind vehicle general tool see effective way map equation mechanical work environment especially case extensive matrix base formulation make rather preferred cod environment note download unzip file shark zip please follow istructions file content giampy dec,"['nonlinear', 'dof', 'underwater', 'vehicleshark', 'detail', 'nonlinear', 'underwater', 'vehicle', 'later', 'test', 'well', 'interface', 'source', 'code', 'consist', 'function', 'one', 'well', 'document', 'enclose', 'pdf', 'report', 'possible', 'modify', 'function', 'different', 'kind', 'vehicle', 'general', 'tool', 'see', 'effective', 'way', 'map', 'equation', 'mechanical', 'work', 'environment', 'especially', 'case', 'extensive', 'matrix', 'base', 'formulation', 'make', 'rather', 'preferred', 'cod', 'environment', 'note', 'download', 'unzip', 'file', 'shark', 'zip', 'please', 'follow', 'istructions', 'file', 'content', 'giampy', 'dec']",0
10,1371,"Simulink blocks for pressure and flow transients in pipelines.<p>These Simulink blocks contain transfer functions that model the pressure and flow transients for axisymmetric 2D viscous flow of a compressible fluid in a straight rigid circular cross section pipelines. Three models are available: (1) pressures at the ends(2) flow rates at the ends(3) pressure at one end and flow rate at the otherFiltering is incorporated to reduce numerical oscillation (Gibbs phenomenon).  See J. Dyn. Systems, Meas. &amp; Control vol 122 (2000) pp. 153-162.</p>flow,fluid,hydraulic,line,pipeline,pressure,simulation,flow,fluid,flow,pipeline,flow,flow",83,3,2,0,128,block pressure flow transient pipelines block contain transfer function pressure flow transient axisymmetric viscous flow compressible fluid straight rigid circular cross section pipeline three available pressure end flow rate end pressure one end flow rate otherfiltering incorporate reduce numerical oscillation gibbs phenomenon see dyn meas amp control vol,"['block', 'pressure', 'flow', 'transient', 'pipelines', 'block', 'contain', 'transfer', 'function', 'pressure', 'flow', 'transient', 'axisymmetric', 'viscous', 'flow', 'compressible', 'fluid', 'straight', 'rigid', 'circular', 'cross', 'section', 'pipeline', 'three', 'available', 'pressure', 'end', 'flow', 'rate', 'end', 'pressure', 'one', 'end', 'flow', 'rate', 'otherfiltering', 'incorporate', 'reduce', 'numerical', 'oscillation', 'gibbs', 'phenomenon', 'see', 'dyn', 'meas', 'amp', 'control', 'vol']",5
11,1550,"SimulinkÂ® and StateflowÂ® model of a simple packet switch.<p>SimulinkÂ® and StateflowÂ® model of a four input, four output packet switch. The model includes variable length packet generators, FIFO managers, a scheduler, and a crossbar. Instructions: Unzip to a new folder, change the MATLAB current directory to this folder, then open the 'packet_switch' mdl file. Open the Stateflow charts inside the FIFO managers to view the switch's operation during the simulation.</p>bridge,internet,ip,packet switch,protocol,router,bridge,packet switch",208,35,4,8,168,stateflow simple packet switch stateflow four input four output packet switch include variable length packet generator fifo manager scheduler crossbar instruction unzip new folder change current directory folder open packet switch mdl file open stateflow chart inside fifo manager view switch operation switch,"['stateflow', 'simple', 'packet', 'switch', 'stateflow', 'four', 'input', 'four', 'output', 'packet', 'switch', 'include', 'variable', 'length', 'packet', 'generator', 'fifo', 'manager', 'scheduler', 'crossbar', 'instruction', 'unzip', 'new', 'folder', 'change', 'current', 'directory', 'folder', 'open', 'packet', 'switch', 'mdl', 'file', 'open', 'stateflow', 'chart', 'inside', 'fifo', 'manager', 'view', 'switch', 'operation', 'switch']",0
12,1762,"A simulink model which generates a single pulse of all definable parameters.<p>In simulink, there is no model of a pulse generator which generates only single pulse. This model outputs a single pulse. The parametres of the pulse which can be set by the user are:Start TimeStop TimePulse Amplitude with respect to Ground Normal Level""Normal Level"" determines the Base Level of the signal and ""Pulse Amplitude with respect to Ground"" defines the level of the signal  with respect to ground when the pulse has arrived.For example:The following parametres settings produces (outputs) a pulse shown in screenshot.Start Time: 5Stop Time: 6Pulse Amplitude with respect to Ground: 9.25Normal Level: 5.75</p>simulink,single,single pulse generator model,utilities",8,1,2,0,6,generates single pulse definable parameter pulse generator generates single pulse output single pulse parametres pulse set user start timestop timepulse amplitude respect ground normal level normal level determines base level signal pulse amplitude respect ground defines level signal respect ground pulse arrive example follow parametres setting produce output pulse show screenshot start time stop time pulse amplitude respect ground normal level pulse generator modelutilities,"['generates', 'single', 'pulse', 'definable', 'parameter', 'pulse', 'generator', 'generates', 'single', 'pulse', 'output', 'single', 'pulse', 'parametres', 'pulse', 'set', 'user', 'start', 'timestop', 'timepulse', 'amplitude', 'respect', 'ground', 'normal', 'level', 'normal', 'level', 'determines', 'base', 'level', 'signal', 'pulse', 'amplitude', 'respect', 'ground', 'defines', 'level', 'signal', 'respect', 'ground', 'pulse', 'arrive', 'example', 'follow', 'parametres', 'setting', 'produce', 'output', 'pulse', 'show', 'screenshot', 'start', 'time', 'stop', 'time', 'pulse', 'amplitude', 'respect', 'ground', 'normal', 'level', 'pulse', 'generator', 'modelutilities']",4
13,1815,"NASA HL-20 Lifting Body Airframe Modeled with Simulink and Aerospace Blockset.<p>This model uses Simulink and the Aerospace Blockset for modeling the airframe of a NASA HL-20 lifting body, which is a low-cost complement to the Space Shuttle orbiter. The Aerospace Blockset was used to rapidly assemble portions of the HL-20 airframe. The remaining portions, including the calculation of aerodynamic coefficients, were modeled with Simulink.</p>aerodef,aeronautical,aeronautics,aerospace,airframe,astronautical,hl20,nasa,astronautical,nasa,aerospace,aerodef",288,20,5,0,365,nasa lift body airframe aerospace blockset aerospace blockset modeling airframe nasa lift body low cost complement space shuttle orbiter aerospace blockset rapidly assemble portion airframe remain portion include calculation aerodynamic coefficient,"['nasa', 'lift', 'body', 'airframe', 'aerospace', 'blockset', 'aerospace', 'blockset', 'modeling', 'airframe', 'nasa', 'lift', 'body', 'low', 'cost', 'complement', 'space', 'shuttle', 'orbiter', 'aerospace', 'blockset', 'rapidly', 'assemble', 'portion', 'airframe', 'remain', 'portion', 'include', 'calculation', 'aerodynamic', 'coefficient']",8
14,1963,"Simulink model of a 3-band parametric equalizer controlled by a user-friendly GUI.<p>The Simulink model in this submission implements a 3-band parametric equalizer using a time-varying IIR filter, whose filter coefficients are generated by a S-function. This S-function implements the digital parametric equalizer design algorithm created by Sophocles J. Orfanidis. The user inputs the desired parameters to this S-function through a convenient GUI, with which the peak gain, center frequency and the bandwidth of a band can be specified. Dragging and moving the colored markers or the colored lines in the GUI changes the filter parameters.Please change the name of the WAV file  in the ""From Wave File"" block to the name of your own .wav file in the path, or you could also use the 'From Wave Device' block in Signal PRocessing Blockset to run it with sound from sounds card.Reference: S. J. Orfanidis (1997), ""Digital parametric equalizer design with prescribed Nyquist-frequency gain,"" Journal of the Audio Engineering Society, vol. 45, num. 6, pp. 444-55.Thanks to Dick Benson for modifying the original version to make it more robust.</p>filter,filter analysis,filter design,music,parametric equalizer,signal processing,filter,filter analysis,filter,filter analysis",187,21,4,0,179,band parametric equalizer control user friendly gui submission implement band parametric equalizer time vary iir filter whose filter coefficient generate function function implement digital parametric equalizer design algorithm create sophocles orfanidis user input desire parameter function convenient gui peak gain center frequency bandwidth band specify drag move colored marker color line gui change filter parameter please change name wav file wave file block name wav file path could also wave device block signal processing blockset run sound sound card reference orfanidis digital parametric equalizer design prescribe nyquist frequency gain journal audio engineering society vol num thanks dick benson modify original version make robust filterfilter analysisfilter equalizersignal analysis,"['band', 'parametric', 'equalizer', 'control', 'user', 'friendly', 'gui', 'submission', 'implement', 'band', 'parametric', 'equalizer', 'time', 'vary', 'iir', 'filter', 'whose', 'filter', 'coefficient', 'generate', 'function', 'function', 'implement', 'digital', 'parametric', 'equalizer', 'design', 'algorithm', 'create', 'sophocles', 'orfanidis', 'user', 'input', 'desire', 'parameter', 'function', 'convenient', 'gui', 'peak', 'gain', 'center', 'frequency', 'bandwidth', 'band', 'specify', 'drag', 'move', 'colored', 'marker', 'color', 'line', 'gui', 'change', 'filter', 'parameter', 'please', 'change', 'name', 'wav', 'file', 'wave', 'file', 'block', 'name', 'wav', 'file', 'path', 'could', 'also', 'wave', 'device', 'block', 'signal', 'processing', 'blockset', 'run', 'sound', 'sound', 'card', 'reference', 'orfanidis', 'digital', 'parametric', 'equalizer', 'design', 'prescribe', 'nyquist', 'frequency', 'gain', 'journal', 'audio', 'engineering', 'society', 'vol', 'num', 'thanks', 'dick', 'benson', 'modify', 'original', 'version', 'make', 'robust', 'filterfilter', 'analysisfilter', 'equalizersignal', 'analysis']",0
15,2283,"SimulinkÂ® and StateflowÂ® model of a full duplex BluetoothÂ® communication link.<p>SimulinkÂ® and StateflowÂ® model of a full duplex Bluetooth communication link transmitting HV1, HV2, HV3, and SCORT [1] voice packets, and DM1 data packets. A system parameters block configures the whole model's packet type, slot pair and channel type. Stateflow is used to implement the acknowledgement scheme for the data packets and the SCORT receiver state machine. NOTE: A version of this model which works with the current release of MATLAB and Simulink is shipped with the Communications Blocksetâ¢. The model includes wave file I/O, CVSD speech coding, HEC, payload CRC for DM1, FEC, framing, GFSK Modulation, frequency hopping, hop sequence generation, an 802.11b interferer, BER meters, throughput meters, plus spectrum, timing and spectrogram plot (which can be turned-off).Instructions: Unzip to a new folder, change the MATLAB current directory to this folder, then open the 'bluetooth_full_duplex' mdl file. Model Files: bluetooth_full_duplex.mdl - Model filebluetooth_lib2.mdl - Library containing complete device, 802.11b transmitter, BT hop generator and BT clock bluetooth_init.m: Workspace initialization routine called by model PreLoadFcndevice_init.m: Device mask initialization functionpoiss_gaus_prc.m: Variable time-step M Code S-function to generate 802.11b Poisson packetscode_data.mat: 2/3 Hanning code matrices and variablesInput1.wav: Input wave file for device 1Input2.wav: Input wave file for device2The model will also generate 2 output wave filesTest files (open bluetooth_full_duplex.mdl, turn off instrumentation and run these): test_voice_basic.m ? Simulate all voice packets and ensure 0 BER for no channel case (1.5 minutes to run of 800MHz machine) test_data_throughput.m - Simulate and measure throughput of DM1 packet for different SNRs (4.5 mins on 800MHz machine) Standard: <a href=""http://www.bluetooth.com/"">http://www.bluetooth.com/</a> [1] SCORT specification doc.: IEEE 802.15-01/145r0</p>stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,wireless,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,wireless,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,wireless,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort,stateflow matlab simulink bluetooth dm1 hv1 hv2 hv3 scort",176,22,4,4,156,stateflow full duplex bluetooth communication link stateflow full duplex bluetooth communication link transmit scort voice packet data packet parameter block configures whole packet type slot pair channel type stateflow implement acknowledgement scheme data packet scort receiver state machine note version work current release ship communication blockset include wave file cvsd speech cod hec payload crc fec frame gfsk modulation frequency hop hop sequence generation interferer ber meter throughput meter plus spectrum timing spectrogram plot turn instruction unzip new folder change current directory folder open bluetooth full duplex mdl file file bluetooth full duplex mdl filebluetooth lib mdl contain complete device transmitter hop generator clock bluetooth init workspace initialization routine call init device mask initialization functionpoiss gaus prc variable time step code function generate poisson packetscode data mat hanning code matrix variablesinput wav input wave file device input wav input wave file device also generate output wave filestest file open bluetooth full duplex mdl turn instrumentation run test voice basic voice packet ensure ber channel case minute run mhz machine test data throughput measure throughput packet different snrs min mhz machine standard http bluetooth com scort specification doc iee stateflow bluetooth bluetooth scortstateflow bluetooth scortstateflow bluetooth bluetooth scortstateflow bluetooth bluetooth scortstateflow bluetooth scortstateflow bluetooth scortstateflow bluetooth scort,"['stateflow', 'full', 'duplex', 'bluetooth', 'communication', 'link', 'stateflow', 'full', 'duplex', 'bluetooth', 'communication', 'link', 'transmit', 'scort', 'voice', 'packet', 'data', 'packet', 'parameter', 'block', 'configures', 'whole', 'packet', 'type', 'slot', 'pair', 'channel', 'type', 'stateflow', 'implement', 'acknowledgement', 'scheme', 'data', 'packet', 'scort', 'receiver', 'state', 'machine', 'note', 'version', 'work', 'current', 'release', 'ship', 'communication', 'blockset', 'include', 'wave', 'file', 'cvsd', 'speech', 'cod', 'hec', 'payload', 'crc', 'fec', 'frame', 'gfsk', 'modulation', 'frequency', 'hop', 'hop', 'sequence', 'generation', 'interferer', 'ber', 'meter', 'throughput', 'meter', 'plus', 'spectrum', 'timing', 'spectrogram', 'plot', 'turn', 'instruction', 'unzip', 'new', 'folder', 'change', 'current', 'directory', 'folder', 'open', 'bluetooth', 'full', 'duplex', 'mdl', 'file', 'file', 'bluetooth', 'full', 'duplex', 'mdl', 'filebluetooth', 'lib', 'mdl', 'contain', 'complete', 'device', 'transmitter', 'hop', 'generator', 'clock', 'bluetooth', 'init', 'workspace', 'initialization', 'routine', 'call', 'init', 'device', 'mask', 'initialization', 'functionpoiss', 'gaus', 'prc', 'variable', 'time', 'step', 'code', 'function', 'generate', 'poisson', 'packetscode', 'data', 'mat', 'hanning', 'code', 'matrix', 'variablesinput', 'wav', 'input', 'wave', 'file', 'device', 'input', 'wav', 'input', 'wave', 'file', 'device', 'also', 'generate', 'output', 'wave', 'filestest', 'file', 'open', 'bluetooth', 'full', 'duplex', 'mdl', 'turn', 'instrumentation', 'run', 'test', 'voice', 'basic', 'voice', 'packet', 'ensure', 'ber', 'channel', 'case', 'minute', 'run', 'mhz', 'machine', 'test', 'data', 'throughput', 'measure', 'throughput', 'packet', 'different', 'snrs', 'min', 'mhz', 'machine', 'standard', 'http', 'bluetooth', 'com', 'scort', 'specification', 'doc', 'iee', 'stateflow', 'bluetooth', 'bluetooth', 'scortstateflow', 'bluetooth', 'scortstateflow', 'bluetooth', 'bluetooth', 'scortstateflow', 'bluetooth', 'bluetooth', 'scortstateflow', 'bluetooth', 'scortstateflow', 'bluetooth', 'scortstateflow', 'bluetooth', 'scort']",0
16,2334,"Model and simulate the physical components and synthesize controllers of the Stewart Platform.<p>SimMechanicsâ¢ in conjunction with SimulinkÂ® and MATLABÂ® allows engineers to create complicated mechanical models, analyze the models, and develop controllers for the mechanical system. In this technical example, we examine how to use SimMechanics, MATLAB and Simulink to model physical components, synthesize controllers, and simulate the closed loop system of the Stewart Platform. The Stewart Platform is a six-degree of freedom positioning platform.For more information, see this MATLAB Digest article:<a href=""http://www.mathworks.com/company/newsletters/articles/creating-a-stewart-platform-model-using-simmechanics.htmlThe"">http://www.mathworks.com/company/newsletters/articles/creating-a-stewart-platform-model-using-simmechanics.htmlThe</a> models provided here originated from the Stewart Platform demo models provided with SimMechanics. </p>digest article stewart platform mechanical system control,i downloaded the file but i cant open it in simulink simulink is,mechanical modeling,thanks a lot,thanks a lot,i downloaded the file but i cant open it in simulink simulink is",277,18,4,6,284,physical component synthesize controller stewart platform simmechanics conjunction allow engineer create complicated mechanical analyze develop controller mechanical technical example examine simmechanics physical component synthesize controller close loop stewart platform stewart platform six degree freedom position platform information see digest article http mathworks com company newsletter article create stewart platform simmechanics htmlthe provide originated stewart platform demo provide simmechanics digest article stewart platform mechanical controli download file cant open ismechanical modelingthanks lotthanks loti download file cant open,"['physical', 'component', 'synthesize', 'controller', 'stewart', 'platform', 'simmechanics', 'conjunction', 'allow', 'engineer', 'create', 'complicated', 'mechanical', 'analyze', 'develop', 'controller', 'mechanical', 'technical', 'example', 'examine', 'simmechanics', 'physical', 'component', 'synthesize', 'controller', 'close', 'loop', 'stewart', 'platform', 'stewart', 'platform', 'six', 'degree', 'freedom', 'position', 'platform', 'information', 'see', 'digest', 'article', 'http', 'mathworks', 'com', 'company', 'newsletter', 'article', 'create', 'stewart', 'platform', 'simmechanics', 'htmlthe', 'provide', 'originated', 'stewart', 'platform', 'demo', 'provide', 'simmechanics', 'digest', 'article', 'stewart', 'platform', 'mechanical', 'controli', 'download', 'file', 'cant', 'open', 'ismechanical', 'modelingthanks', 'lotthanks', 'loti', 'download', 'file', 'cant', 'open']",0
17,2357,"Stand alone application example using rapid simulation file.<p>This example shows how to create a rapid simulation target from a Simulink model using RTW, and then create a GUI, which is then compiled into stand alone application by MATLAB compiler to control the parameters tuning of the rapid simulation file. The generated application are able to run under the machine w/o MATLAB. (follow the intruction in ""distributing stand alone application"" in compiler manual)Steps:1) Build the Simulink model using RTW into rapid simulation target. (guide302model.mdl --&gt; guide302model.exe)2) The GUI already greated (guide302.m and .fig) use following command to compile the GUI&gt;&gt;mcc -B sglcpp guide302.m3) The exe file (together with other relevant files) now should  be able to run by double clicking on the file in windows explorer. (or use bang operator in MATLAB)</p>compiler,example,gui,gui tools,rapid simulation,utilities,compiler,example",4,0,1,0,3,stand alone application example rapid file example show create rapid target rtw create gui compile stand alone application compiler control parameter tune rapid file generate application able run machine follow intruction distribute stand alone application compiler manual step build rtw rapid target guide mdl guide exe gui already greated guide fig follow command compile gui mcc sglcpp guide exe file together relevant file able run double click file window explorer bang operator toolsrapid,"['stand', 'alone', 'application', 'example', 'rapid', 'file', 'example', 'show', 'create', 'rapid', 'target', 'rtw', 'create', 'gui', 'compile', 'stand', 'alone', 'application', 'compiler', 'control', 'parameter', 'tune', 'rapid', 'file', 'generate', 'application', 'able', 'run', 'machine', 'follow', 'intruction', 'distribute', 'stand', 'alone', 'application', 'compiler', 'manual', 'step', 'build', 'rtw', 'rapid', 'target', 'guide', 'mdl', 'guide', 'exe', 'gui', 'already', 'greated', 'guide', 'fig', 'follow', 'command', 'compile', 'gui', 'mcc', 'sglcpp', 'guide', 'exe', 'file', 'together', 'relevant', 'file', 'able', 'run', 'double', 'click', 'file', 'window', 'explorer', 'bang', 'operator', 'toolsrapid']",0
18,2374,"Companion Software.<p>""Dynamical Systems with Applications using MATLAB"" covers standard material for an introduction to dynamical systems theory. The text deals with both discrete and continuous systems. There are applications in mechanical systems, chemical kinetics, electric circuits, interacting species, economics,  nonlinear optics, biology, neural networks and materials science, for example.These MATLAB programs have been written to supplement the textbook, and give the reader a real hands-on experience.The text is aimed at senior undergraduates, graduate students, and working scientists in industry.The book has been published by Birkhauser in July 2004. The second edition was published in 2014.Table of Contents of the book, mock exam papers and MATLAB index file can be found in Lynch_R2015b.zip.</p>chaos,chemical,differential,discrete,economics,fractal,fractals,mathematics,mechanics,modeling,multifractal,nonlinear,optics,physics,research,simulink,synchronization,pick of the week,potw,chaos,chaos,mathematics,fractals,nonlinear,optics,facts,mechanics,differential,chaos,chaos,differential,synchronization,chemical,nonlinear",124,1,2,0,152,companion software dynamical application cover standard material introduction dynamical theory text deal discrete continuous application mechanical chemical kinetics electric circuit interact specie economics nonlinear optic biology neural network material science example program write supplement textbook give reader real hand experience text aim senior undergraduate graduate student work scientist industry book publish birkhauser july second edition publish table content book mock exam paper index file find lynch zip,"['companion', 'software', 'dynamical', 'application', 'cover', 'standard', 'material', 'introduction', 'dynamical', 'theory', 'text', 'deal', 'discrete', 'continuous', 'application', 'mechanical', 'chemical', 'kinetics', 'electric', 'circuit', 'interact', 'specie', 'economics', 'nonlinear', 'optic', 'biology', 'neural', 'network', 'material', 'science', 'example', 'program', 'write', 'supplement', 'textbook', 'give', 'reader', 'real', 'hand', 'experience', 'text', 'aim', 'senior', 'undergraduate', 'graduate', 'student', 'work', 'scientist', 'industry', 'book', 'publish', 'birkhauser', 'july', 'second', 'edition', 'publish', 'table', 'content', 'book', 'mock', 'exam', 'paper', 'index', 'file', 'find', 'lynch', 'zip']",5
19,2578,"Virtual Reality toolbox interface for airplanes.<p>This block allows the use of aeronautics conventions to express orientation and position of an object in a virtual world.Specifically, the object's orientation can be expressed by means of euler angles and its position by means of X,Y,and H cartesian coordinates.October 2002 Giampiero Campa, PhD WVU, Mech. Aerospace Dept. Morgantown, WV, 26506-6106 USA</p>toolbox,aerodef,aeronautics,aerospace,aircraft,airplane,euler,flight,orientation,rotation,virtual",177,9,3,0,194,virtual reality toolbox interface airplane block allow aeronautics convention express orientation position object virtual world specifically object orientation express mean euler angle position mean xyand cartesian coordinate october giampiero campa phd wvu mech aerospace dept morgantown,"['virtual', 'reality', 'toolbox', 'interface', 'airplane', 'block', 'allow', 'aeronautics', 'convention', 'express', 'orientation', 'position', 'object', 'virtual', 'world', 'specifically', 'object', 'orientation', 'express', 'mean', 'euler', 'angle', 'position', 'mean', 'xyand', 'cartesian', 'coordinate', 'october', 'giampiero', 'campa', 'phd', 'wvu', 'mech', 'aerospace', 'dept', 'morgantown']",8
20,2596,"StateflowÂ® Model of the 10Base-T Ethernet and CSMA/CD Protocol.<p>SimulinkÂ® and StateflowÂ® model of four network interface cards (NICs) communicating with each other over a twisted pair cable using 10Base-T Ethernet and CSMA/CD protocol. The shared cable includes propagation, bus, and patch delays.Each NIC node contains:* CSMA/CD controller in Stateflow* Transmitter* Receiver* Collision detection systemInitially, the state machines of two NICs are displayed, plus a Simulink scope which shows the transmit activity of each card. As the simulation runs, the scope display can be compared to the animation of the controller states in Stateflow, giving a visual understanding of the CSMA/CD protocol and collisions.This model was created by Chris Thorpe.</p>10 baset,csma,csmacd,ethernet,matlab,simulink,stateflow,csmacd,10 baset,csma,csmacd,ethernet,10 baset",666,65,4,0,606,stateflow base ethernet csma protocol stateflow four network interface card nics communicate twisted pair cable base ethernet csma protocol share cable include propagation bus patch delay nic node contains csma controller stateflow transmitter receiver collision detection systeminitially state machine two nics displayed plus scope show transmit activity card run scope display compare animation controller state stateflow give visual understanding csma protocol collision create chris thorpe baset,"['stateflow', 'base', 'ethernet', 'csma', 'protocol', 'stateflow', 'four', 'network', 'interface', 'card', 'nics', 'communicate', 'twisted', 'pair', 'cable', 'base', 'ethernet', 'csma', 'protocol', 'share', 'cable', 'include', 'propagation', 'bus', 'patch', 'delay', 'nic', 'node', 'contains', 'csma', 'controller', 'stateflow', 'transmitter', 'receiver', 'collision', 'detection', 'systeminitially', 'state', 'machine', 'two', 'nics', 'displayed', 'plus', 'scope', 'show', 'transmit', 'activity', 'card', 'run', 'scope', 'display', 'compare', 'animation', 'controller', 'state', 'stateflow', 'give', 'visual', 'understanding', 'csma', 'protocol', 'collision', 'create', 'chris', 'thorpe', 'baset']",5
21,2938,"Companion Software for ""Simulink 5: Fundamentos"".<p>Written in Portuguese, this book for students and professonals aims to get the reader started quickly and easily in Simulink. Topics coverd include an introduction to concepts of modeling, simulation and analysis of dynamic systems using Simulink.For additional book and ordering information, please visit: <a href=""http://www.mathworks.com/support/books/book4524.jsp"">http://www.mathworks.com/support/books/book4524.jsp</a></p>fundamentals,portuguese,simulink,simulink 5",312,10,2,0,304,companion software fundamentos write portuguese book student professonals aim get reader start quickly easily topic coverd include introduction concept analysis dynamic additional book order information please visit http mathworks com support book book,"['companion', 'software', 'fundamentos', 'write', 'portuguese', 'book', 'student', 'professonals', 'aim', 'get', 'reader', 'start', 'quickly', 'easily', 'topic', 'coverd', 'include', 'introduction', 'concept', 'analysis', 'dynamic', 'additional', 'book', 'order', 'information', 'please', 'visit', 'http', 'mathworks', 'com', 'support', 'book', 'book']",7
22,3019,"The Aircraft Library<p>Airlib is a library of aircraft models to be used with Simulink 3.1 (MATLAB 5.3) or later (tested until 2018a).It is based on two basic blocks that implement a continuous-time and a discrete-time nonlinear general aircraft model. The initial version, dated Feb 2003, contains 13 different nonlinear aircraft models including, among others, a Boeing 747, an F4 Phantom, an F104 Starfighter, an X15, an IAI Pioneer (unmanned), a Convair 880 and four different Cessna models. Each model is a link to one of the two library blocks, but of course with different parameters on the mask. Indeed, the type of aircraft is entirely specified by the inertial and aerodynamic parameters typed on the mask, which also includes a very detailed help that describes the meaning of inputs, states, outputs and mask parameters.An example showing a Boeing 747 in a (closed loop) straight and level flight is also given. In May 2003 a very effective MATLAB function (air3m.m) was added to allow the user to easily trim any given aircraft for any combination of desired speed, altitude, and flight path angle.In March 04, a function that computes the aerodynamic derivatives from the linear model matrices was added, together with a Simulink model that compares two different ways of handling the wind in the equations of motions.In July 2006 a full guidance and control system based on the feedback linearization of the aircraft kinematic and dynamics was added. The scheme includes a waypoint generation system, and can be easily adapted to any aircraft with known aerodynamics coefficients.Please have a look to the readme.txt file for more detailed info.Giampiero Campa, March 2004</p>aerospace,boeing 747,aerodef,aerodynamics,aeronautics,aerospace,aircraft,boeing 747,cessna,fdc,flight,x1,aerodef",1467,181,7,18,1761,aircraft libraryairlib aircraft later test base two basic block implement continuous time discrete time nonlinear general aircraft initial version date feb contains different nonlinear aircraft include among others boeing phantom starfighter iai pioneer unman convair four different cessna link one two block course different parameter mask indeed type aircraft entirely specify inertial aerodynamic parameter type mask also include detailed help describe meaning input state output mask parameter example show boeing closed loop straight level flight also give may effective function air add allow user easily trim give aircraft combination desire speed altitude flight path angle march function compute aerodynamic derivative linear matrix add together compare two different way handle wind equation motion july full guidance control base feedback linearization aircraft kinematic dynamic add scheme include waypoint generation easily adapt aircraft know aerodynamics coefficient please look readme txt file detail info giampiero campa march aerospaceboeing aerodef,"['aircraft', 'libraryairlib', 'aircraft', 'later', 'test', 'base', 'two', 'basic', 'block', 'implement', 'continuous', 'time', 'discrete', 'time', 'nonlinear', 'general', 'aircraft', 'initial', 'version', 'date', 'feb', 'contains', 'different', 'nonlinear', 'aircraft', 'include', 'among', 'others', 'boeing', 'phantom', 'starfighter', 'iai', 'pioneer', 'unman', 'convair', 'four', 'different', 'cessna', 'link', 'one', 'two', 'block', 'course', 'different', 'parameter', 'mask', 'indeed', 'type', 'aircraft', 'entirely', 'specify', 'inertial', 'aerodynamic', 'parameter', 'type', 'mask', 'also', 'include', 'detailed', 'help', 'describe', 'meaning', 'input', 'state', 'output', 'mask', 'parameter', 'example', 'show', 'boeing', 'closed', 'loop', 'straight', 'level', 'flight', 'also', 'give', 'may', 'effective', 'function', 'air', 'add', 'allow', 'user', 'easily', 'trim', 'give', 'aircraft', 'combination', 'desire', 'speed', 'altitude', 'flight', 'path', 'angle', 'march', 'function', 'compute', 'aerodynamic', 'derivative', 'linear', 'matrix', 'add', 'together', 'compare', 'two', 'different', 'way', 'handle', 'wind', 'equation', 'motion', 'july', 'full', 'guidance', 'control', 'base', 'feedback', 'linearization', 'aircraft', 'kinematic', 'dynamic', 'add', 'scheme', 'include', 'waypoint', 'generation', 'easily', 'adapt', 'aircraft', 'know', 'aerodynamics', 'coefficient', 'please', 'look', 'readme', 'txt', 'file', 'detail', 'info', 'giampiero', 'campa', 'march', 'aerospaceboeing', 'aerodef']",0
23,3087,"A Simulink Blockset for the purpose of simulating servo systems.<p>The Servo System Blockset is designed to provide a modern design tool that will allow scientists and engineers to rapidly and easily build models that simulate servo systems.It has blocks for the simulation of (1) Permanent Magnet DC Motor (Armature Control)(2) Field Controlled DC Motor(3) ED 4400 DC Servo Motor (For demo purposes)Blocks for the simulation of AC motors will be included in the next version of the blockset.The Servo System Blockset is created with MATLAB 5.3.1 and Simulink 3.0.1 (i.e. MATLAB Release 11.1), using the Windows 98-SE operating system. It has been tested under Windows 98, 2000, and XP operating systems. In MATLAB Versions, it has been tested under Release 11.1  (V 5.3) and 12 (V 6.0). It should be compatible with newer MATLAB/Simulink versions and it should be system-independent, but this has not been verified.This blockset has been developed at the Institute of Industrial Electronics Engineering, Karachi, Pakistan.</p>field controlled dc ser,permanent magnet dc servo motor,servo system,simulation,electric_motor_control,power_conversion_control,power_electronics_control",10,2,2,1,8,blockset purpose servo servo blockset design provide modern design tool allow scientist engineer rapidly easily build servo block permanent magnet motor armature control field control motor servo motor demo purpose block motor include next version blockset servo blockset create release window operate test window operate version test release compatible new version independent verified blockset develop institute industrial electronics engineering karachi pakistan field control serpermanent magnet servo motorservo motor controlpower conversion controlpower electronics control,"['blockset', 'purpose', 'servo', 'servo', 'blockset', 'design', 'provide', 'modern', 'design', 'tool', 'allow', 'scientist', 'engineer', 'rapidly', 'easily', 'build', 'servo', 'block', 'permanent', 'magnet', 'motor', 'armature', 'control', 'field', 'control', 'motor', 'servo', 'motor', 'demo', 'purpose', 'block', 'motor', 'include', 'next', 'version', 'blockset', 'servo', 'blockset', 'create', 'release', 'window', 'operate', 'test', 'window', 'operate', 'version', 'test', 'release', 'compatible', 'new', 'version', 'independent', 'verified', 'blockset', 'develop', 'institute', 'industrial', 'electronics', 'engineering', 'karachi', 'pakistan', 'field', 'control', 'serpermanent', 'magnet', 'servo', 'motorservo', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
24,3105,"Tutorial and examples of how to import C code into Simulink.<p>Shows how to use S-function Builder block and the full S-function API to import various styles of legacy C code into the Simulink framework.</p>c,dsp,general dsp,import,simulink,webinar,c,c,import",33,6,3,0,28,tutorial example import code show function builder block full function api import various style legacy code framework cdspgeneral,"['tutorial', 'example', 'import', 'code', 'show', 'function', 'builder', 'block', 'full', 'function', 'api', 'import', 'various', 'style', 'legacy', 'code', 'framework', 'cdspgeneral']",7
25,3115,"Markov Chain Model of RADAR Detector<p>This model, radar_detector.mdl, simulates a Markov Chain representation of a police officer looking for speeding cars to ticket. A ticket can be given if the speed was determined within eight seconds due to assumptions made about the radar, and to allow the police officer to maintain visual contact with car. In addition to the simulation time, the probability of this outcome is also displayed.</p>markov chain radar,simulation",10,2,2,0,7,markov chain radar detectorthis radar detector mdl markov chain representation police officer look speed car ticket ticket give speed determine within eight second due assumption make radar allow police officer maintain visual contact car addition time probability outcome also display markov chain,"['markov', 'chain', 'radar', 'detectorthis', 'radar', 'detector', 'mdl', 'markov', 'chain', 'representation', 'police', 'officer', 'look', 'speed', 'car', 'ticket', 'ticket', 'give', 'speed', 'determine', 'within', 'eight', 'second', 'due', 'assumption', 'make', 'radar', 'allow', 'police', 'officer', 'maintain', 'visual', 'contact', 'car', 'addition', 'time', 'probability', 'outcome', 'also', 'display', 'markov', 'chain']",8
26,3385,"Use a single Simulink s-function block to access multiple s-functions.<p>Allow users to switch between multiple s-functions from popup menu.  The s-functions used in this example block ship with Simulink.For more details, edit block mask and examine the parameters tab.  The callback section will show the command that makes it possible -- ""set_param(gcb,'functionname',get_param(gcb,'sfun'))"".</p>graphical,mask,sfunction,simulink,switching,utilities,mask,simulink,sfunction",1,0,1,0,0,single function block access multiple function allow user switch multiple function popup menu function example block ship detail edit block mask examine parameter tab callback section show command make possible set param gcb functionname get param gcb sfun,"['single', 'function', 'block', 'access', 'multiple', 'function', 'allow', 'user', 'switch', 'multiple', 'function', 'popup', 'menu', 'function', 'example', 'block', 'ship', 'detail', 'edit', 'block', 'mask', 'examine', 'parameter', 'tab', 'callback', 'section', 'show', 'command', 'make', 'possible', 'set', 'param', 'gcb', 'functionname', 'get', 'param', 'gcb', 'sfun']",7
27,3484,"Example of displaying and reducing an image on a Simulink block.<p>Image file can be used as an icon on a Simulink block.  In this example, the image is reduced to a size such that the I/O names can still be seen.To see how this is done:-Open the model-Edit block mask-Go to icon drawing commands""image(imread('magic.jpg'),[.2, .2, .6, .6],'on')"" with normalized drawing coordinates makes this possible</p>mask,bitmap,graphic,icon,image,mask,simulink,mask",5,1,2,0,3,example display reduce image block image file icon block example image reduce size name still see see open edit block mask icon draw command image imread magic jpg normalize draw coordinate make,"['example', 'display', 'reduce', 'image', 'block', 'image', 'file', 'icon', 'block', 'example', 'image', 'reduce', 'size', 'name', 'still', 'see', 'see', 'open', 'edit', 'block', 'mask', 'icon', 'draw', 'command', 'image', 'imread', 'magic', 'jpg', 'normalize', 'draw', 'coordinate', 'make']",0
28,3540,"IEEE 802.11a WLAN physical layer model, with demonstration of adaptive modulation and coding.<p>* End-to-end 802.11a physical layer * All mandatory and optional data rates: 6, 9, 12, 18, 24, 36, 48, and 54 Mb/s* BPSK, QPSK, 16-QAM, 64-QAM modulations* Forward error correction coding (convolutional; code rates 1/2, 2/3, 3/4)* OFDM transmission: 52 subcarriers, 4 pilots, 64-pt FFTs, circular prefix* Data interleaving* PLCP preamble (modeled as 2x2 long training sequences)* Receiver equalization* Viterbi decoding* Data rates selectable on-the-fly* Adaptive modulation demo over dispersive multipath fading channelInstructions:1. Unzip to a new folder.2(a).  If you are running under R13 (MATLAB 6.5), change the MATLAB current directory to the subdirectory R13, then open the 'IEEE80211a_NoSF' mdl file.  (If you have Stateflow, you can also run the enhanced version, IEEE80211a.mdl.)2(b). If you are running under R13SP1 (MATLAB 6.5.1), change the MATLAB current directory to the subdirectory R13SP1, then open the 'IEEE80211a' mdl file.</p>80211,80211a,adaptive modulation and coding,error,ieee 80211a,wireless,wlan",884,179,6,48,1231,iee wlan physical layer demonstration adaptive modulation cod end end physical layer mandatory optional data rate bpsk qpsk qam qam modulation forward error correction cod convolutional code rate ofdm transmission subcarriers pilot ffts circular prefix data interleave plcp preamble long train sequence receiver equalization viterbi decode data rate selectable fly adaptive modulation demo dispersive multipath fade unzip new folder run change current directory subdirectory open iee nosf mdl file stateflow also run enhance version iee mdl run change current directory subdirectory open iee mdl file aadaptive modulation codingerroriee awirelesswlan,"['iee', 'wlan', 'physical', 'layer', 'demonstration', 'adaptive', 'modulation', 'cod', 'end', 'end', 'physical', 'layer', 'mandatory', 'optional', 'data', 'rate', 'bpsk', 'qpsk', 'qam', 'qam', 'modulation', 'forward', 'error', 'correction', 'cod', 'convolutional', 'code', 'rate', 'ofdm', 'transmission', 'subcarriers', 'pilot', 'ffts', 'circular', 'prefix', 'data', 'interleave', 'plcp', 'preamble', 'long', 'train', 'sequence', 'receiver', 'equalization', 'viterbi', 'decode', 'data', 'rate', 'selectable', 'fly', 'adaptive', 'modulation', 'demo', 'dispersive', 'multipath', 'fade', 'unzip', 'new', 'folder', 'run', 'change', 'current', 'directory', 'subdirectory', 'open', 'iee', 'nosf', 'mdl', 'file', 'stateflow', 'also', 'run', 'enhance', 'version', 'iee', 'mdl', 'run', 'change', 'current', 'directory', 'subdirectory', 'open', 'iee', 'mdl', 'file', 'aadaptive', 'modulation', 'codingerroriee', 'awirelesswlan']",0
29,3659,"This simulation simulates coded OFDM using RS Code over wireless channel.<p>This simulation simulate wireless Coded OFDM over mobile multipath fading channel. The model use QPSK, Reed-Solomon Channel Coding, and training based channel estimation.</p>channel estimator,cofdm,gito,ofdm,reed solomon,simulink,wireless,ofdm,nice one,ofdm simulation,channel estimator,cofdm,wireless,cofdm,gito,channel estimator,channel estimator,and i am doing my graduation project on the same toipic please i,channel estimator,i am senoir undergraduate student,i want to know which estimation technquie you are usingmoreover,when i run the program i get an error due to the blocks down wha,and i am doing my graduation project on the same toipic please i",166,31,3,0,132,cod ofdm code wireless channel wireless cod ofdm mobile multipath fade channel qpsk reed solomon channel cod training base channel estimation channel oneofdm estimatorand graduation project toipic please ichannel estimatori senoir undergraduate studenti want know estimation technquie run program get error due block whaand graduation project toipic please,"['cod', 'ofdm', 'code', 'wireless', 'channel', 'wireless', 'cod', 'ofdm', 'mobile', 'multipath', 'fade', 'channel', 'qpsk', 'reed', 'solomon', 'channel', 'cod', 'training', 'base', 'channel', 'estimation', 'channel', 'oneofdm', 'estimatorand', 'graduation', 'project', 'toipic', 'please', 'ichannel', 'estimatori', 'senoir', 'undergraduate', 'studenti', 'want', 'know', 'estimation', 'technquie', 'run', 'program', 'get', 'error', 'due', 'block', 'whaand', 'graduation', 'project', 'toipic', 'please']",5
30,3695,"1903 Wright Flyer modeled with Simulink, Aerospace Blockset and Virtual Reality Tool.<p>This is a three-degree-of-freedom (longitudinal) model of the 1903 Wright Flyer based on a BASIC simulation written by Frederick J Hooven.  This model contains the airframe, environment and simple pilot models.The VRML world converted to VRML97 was originally created by Thaddeus Bejer of Hammerhead Productions in Inventor format.</p>aerodef,aeronautics,aerospace,aircraft,airplane,flight,propeller,vrml,wright flyer",613,39,5,0,692,wright flyer aerospace blockset virtual reality tool three degree freedom longitudinal wright flyer base basic write frederick hooven contains airframe environment simple pilot vrml world convert vrml originally create thaddeus bejer hammerhead production inventor format flyer,"['wright', 'flyer', 'aerospace', 'blockset', 'virtual', 'reality', 'tool', 'three', 'degree', 'freedom', 'longitudinal', 'wright', 'flyer', 'base', 'basic', 'write', 'frederick', 'hooven', 'contains', 'airframe', 'environment', 'simple', 'pilot', 'vrml', 'world', 'convert', 'vrml', 'originally', 'create', 'thaddeus', 'bejer', 'hammerhead', 'production', 'inventor', 'format', 'flyer']",8
31,3790,"A collection of MATLAB files, useful for analyzing inverted pendulum & designing controller for it.<p>The Inverted Pendulum; Analysis, Design &amp; Implementation is a collection of MATLAB functions &amp; scripts, and SIMULINK models, useful for analyzing Inverted Pendulum System and designing Control System for it.The Inverted Pendulum is one of the most important classical problems of Control Engineering. Broom Balancing (Inverted Pendulum on a cart) is a well known example of nonlinear, unstable control problem. This problem becomes further complicated when a flexible broom, in place of a rigid broom, is employed. Degree of complexity and difficulty in its control increases with its flexibility. This problem has been a research interest of control engineers. In this submission, however, we have analyzed Inverted Pendulum only with rigid broom.The aim of this study is to stabilize the Inverted Pendulum such that the position of the carriage on the track is controlled quickly and accurately so that the pendulum is always erected in its inverted position during such movements.The inverted pendulum (IP) is among the most difficult systems to control in the field of control engineering. Due to its importance in the field of control engineering, it has been a task of choice to be assigned to Control Engineering students to analyze its model and propose a linear compensator according to the PID control law.The work included in this submission has been carried out in the Instrumentation and Control Lab at the Institute of Industrial Electronics Engineering, Karachi, Pakistan.The author would like to thank Dr. Ken Dutton [School of Engineering, Sheffield Hallam University, UK; Author: ""Art of Control Engineering""] for his review of this submission.</p>inverted pendulum,nonlinear unstable system,pid design,simulation,inverted pendulum,simulation,pid design,simulation,inverted pendulum,inverted pendulum,inverted pendulum,inverted pendulum,inverted pendulum,nonlinear unstable system,inverted pendulum,inverted pendulum,nonlinear unstable system,inverted pendulum",64,6,2,0,56,collection file useful analyze inverted pendulum design controller invert pendulum analysis design amp implementation collection function amp script useful analyze inverted pendulum design control invert pendulum one important classical problem control engineering broom balancing invert pendulum cart well know example nonlinear unstable control problem problem become complicate flexible broom place rigid broom employ degree complexity difficulty control increase flexibility problem research interest control engineer submission however analyze inverted pendulum rigid broom aim study stabilize invert pendulum position carriage track control quickly accurately pendulum always erect inverted position movement inverted pendulum among difficult control field control engineering due importance field control engineering task choice assign control engineering student analyze propose linear compensator accord pid control law work include submission carry instrumentation control lab institute industrial electronics engineering karachi pakistan author would like thank ken dutton school engineering sheffield hallam university author art control engineering review submission invert unstable systempid unstable systeminverted unstable systeminverted pendulum,"['collection', 'file', 'useful', 'analyze', 'inverted', 'pendulum', 'design', 'controller', 'invert', 'pendulum', 'analysis', 'design', 'amp', 'implementation', 'collection', 'function', 'amp', 'script', 'useful', 'analyze', 'inverted', 'pendulum', 'design', 'control', 'invert', 'pendulum', 'one', 'important', 'classical', 'problem', 'control', 'engineering', 'broom', 'balancing', 'invert', 'pendulum', 'cart', 'well', 'know', 'example', 'nonlinear', 'unstable', 'control', 'problem', 'problem', 'become', 'complicate', 'flexible', 'broom', 'place', 'rigid', 'broom', 'employ', 'degree', 'complexity', 'difficulty', 'control', 'increase', 'flexibility', 'problem', 'research', 'interest', 'control', 'engineer', 'submission', 'however', 'analyze', 'inverted', 'pendulum', 'rigid', 'broom', 'aim', 'study', 'stabilize', 'invert', 'pendulum', 'position', 'carriage', 'track', 'control', 'quickly', 'accurately', 'pendulum', 'always', 'erect', 'inverted', 'position', 'movement', 'inverted', 'pendulum', 'among', 'difficult', 'control', 'field', 'control', 'engineering', 'due', 'importance', 'field', 'control', 'engineering', 'task', 'choice', 'assign', 'control', 'engineering', 'student', 'analyze', 'propose', 'linear', 'compensator', 'accord', 'pid', 'control', 'law', 'work', 'include', 'submission', 'carry', 'instrumentation', 'control', 'lab', 'institute', 'industrial', 'electronics', 'engineering', 'karachi', 'pakistan', 'author', 'would', 'like', 'thank', 'ken', 'dutton', 'school', 'engineering', 'sheffield', 'hallam', 'university', 'author', 'art', 'control', 'engineering', 'review', 'submission', 'invert', 'unstable', 'systempid', 'unstable', 'systeminverted', 'unstable', 'systeminverted', 'pendulum']",5
32,3886,"Rapid prototyping using C6711<p>The model simply implement a dtmf gererator into a TI C6711 DSK. 3 user switches are used to send different dtmf tone to the line out. To check for the result, one can either connect the line out of the board to the speaker or to a dtmf decoder(e.g.:model in Simulink and feed the signal in through line in of computer).</p>audio processing,c6711 dsk,dtmf generator,rapid prototying,video,video processing",33,1,2,0,47,rapid prototyping simply implement dtmf gererator dsk user switch send different dtmf tone line check result one either connect line board speaker dtmf decoder feed signal line computer audio processingc dskdtmf generatorrapid processing,"['rapid', 'prototyping', 'simply', 'implement', 'dtmf', 'gererator', 'dsk', 'user', 'switch', 'send', 'different', 'dtmf', 'tone', 'line', 'check', 'result', 'one', 'either', 'connect', 'line', 'board', 'speaker', 'dtmf', 'decoder', 'feed', 'signal', 'line', 'computer', 'audio', 'processingc', 'dskdtmf', 'generatorrapid', 'processing']",5
33,4367,"This application shows how models based on a system of ODEs are simulated.<p>This application shows how models based on a system of ODEs (Ordinary Differential Equations) are simulated using S-Functions in SimuLink. Furthermore it is demonstrated how the model can be masked in order to construct a menu for entering the model parameters.For further information see pdf file in the zipfile.</p>mask,menu,ode,sfunction,simulink",21,1,2,0,18,application show base ode application show base ode ordinary differential equation function furthermore demonstrate masked order construct menu enter parameter information see pdf file zipfile,"['application', 'show', 'base', 'ode', 'application', 'show', 'base', 'ode', 'ordinary', 'differential', 'equation', 'function', 'furthermore', 'demonstrate', 'masked', 'order', 'construct', 'menu', 'enter', 'parameter', 'information', 'see', 'pdf', 'file', 'zipfile']",7
34,4389,"Fairly detailed simulation of a tennis ball flight and bounce.<p>This is a collection of 4 MATLAB functions that have been inspired by the excellent Howard Brody's book : ""Tennis science for tennis players"", University of Pennsilvania press, 1987. Two of the four functions rely on a Simulink scheme that implements a fairly detailed simulation of a flying tennis ball, spin and aerodynamics effects are taken into account.Each function has its help with some ready to go examples that you are encouraged to try. Everything runs in MATLAB 5.3 as well as in 6.5 (and i suppose in each version between the two).Giampy, Jan 2004</p>aerodynamics,ball,bounce,bouncing,flight,magnus,mechanical modeling,spin,tennis",39,2,3,0,45,fairly detail tennis ball flight bounce collection function inspire excellent howard brody book tennis science tennis player university pennsilvania press two four function rely scheme implement fairly detail fly tennis ball spin aerodynamics effect take account function help ready example encourage try everything run well suppose version two giampy jan,"['fairly', 'detail', 'tennis', 'ball', 'flight', 'bounce', 'collection', 'function', 'inspire', 'excellent', 'howard', 'brody', 'book', 'tennis', 'science', 'tennis', 'player', 'university', 'pennsilvania', 'press', 'two', 'four', 'function', 'rely', 'scheme', 'implement', 'fairly', 'detail', 'fly', 'tennis', 'ball', 'spin', 'aerodynamics', 'effect', 'take', 'account', 'function', 'help', 'ready', 'example', 'encourage', 'try', 'everything', 'run', 'well', 'suppose', 'version', 'two', 'giampy', 'jan']",5
35,4428,"Explores using the Simulink Debugger to extract information.<p>The MathWorks receives many questions relating to Simulink state ordering, state initialization, and Simulink solver performance.  Many times customers are not aware of existing capabilities that are available and will solve their current issues.There are 3 MATLAB central submissions (all separate downloads!) that have been used with multiple customers to show current capabilities.  Example 1 : Explores how Simulink defines its states and what you can do once you know that definition.Example 2 : Explores using the Simulink Debugger to extract informationfrom a simulink diagram or simulation run.Example 3 : Explores how to leverage the 'Structure with Time' Simulink data format to alleviate ordering and index issues on inputs/outputs/states.This script file will show the following:1) Leverage the Simulink Debugger to interrogate information on simulation execution in a batched manner (usually done interactively).2) Use Simulink Debugger to specifically access failed step information when using variable step solvers, specifically identifying the limiting state causing the failure.3) Parse Debugger information to replace with Simulink's state definition or user defined state definition.</p>algebraic,debugger,failed,loop,simulink,solver,step,variable",12,2,2,0,13,explores debugger extract information mathworks receive many question relate state order state initialization solver performance many time customer aware exist capability available solve current issue central submission separate downloads multiple customer show current capability example explore define state know definition example explore debugger extract informationfrom diagram run example explore leverage structure time data format alleviate order index issue input outputs state script file show follow leverage debugger interrogate information execution batch manner usually interactively debugger specifically access fail step information variable step solver specifically identify limit state causing failure parse debugger information replace state definition user define state definition,"['explores', 'debugger', 'extract', 'information', 'mathworks', 'receive', 'many', 'question', 'relate', 'state', 'order', 'state', 'initialization', 'solver', 'performance', 'many', 'time', 'customer', 'aware', 'exist', 'capability', 'available', 'solve', 'current', 'issue', 'central', 'submission', 'separate', 'downloads', 'multiple', 'customer', 'show', 'current', 'capability', 'example', 'explore', 'define', 'state', 'know', 'definition', 'example', 'explore', 'debugger', 'extract', 'informationfrom', 'diagram', 'run', 'example', 'explore', 'leverage', 'structure', 'time', 'data', 'format', 'alleviate', 'order', 'index', 'issue', 'input', 'outputs', 'state', 'script', 'file', 'show', 'follow', 'leverage', 'debugger', 'interrogate', 'information', 'execution', 'batch', 'manner', 'usually', 'interactively', 'debugger', 'specifically', 'access', 'fail', 'step', 'information', 'variable', 'step', 'solver', 'specifically', 'identify', 'limit', 'state', 'causing', 'failure', 'parse', 'debugger', 'information', 'replace', 'state', 'definition', 'user', 'define', 'state', 'definition']",0
36,4436,"Principal component analysis of a matrix done within Simulink.<p>Made a PCA block (principal component analysis) within Simulink.  Block calculates the principle components on any sized input matrix.Equivalent of the MATLAB PRINCOMP command (currently only outputs PC).</p>multivariate,principal component analysis,probability,simulink,statistics,principal component analysis,simulink,principal component analysis,principal component analysis,simulink",30,2,3,0,31,principal component analysis matrix within make pca block principal component analysis within block calculates principle component size input matrix equivalent princomp command currently output component component component component,"['principal', 'component', 'analysis', 'matrix', 'within', 'make', 'pca', 'block', 'principal', 'component', 'analysis', 'within', 'block', 'calculates', 'principle', 'component', 'size', 'input', 'matrix', 'equivalent', 'princomp', 'command', 'currently', 'output', 'component', 'component', 'component', 'component']",0
37,4652,"Interactive simulation of a PID with autotuning.<p>The AutotunerPID Toolkit allows to experiment with well established tuning methods and compare the results of different methods a posteriori.The AutotunerPID Toolkit simulates a single SISO control loop. The main component of the Toolkit is a Simulink file, which includes a PID with autotuner, the plant to be controlled and some auxiliary blocks to manage the simulation. The user interacts with the autotuner through a set of GUI implemented as S-functions. If the plant is linear, a comparative analisys of all the autotuning methods can be performed, too.This toolkit comes with his own guide in html format, which also includes a very basic description of the autotuning method used.</p>autotuner,autotuning,control,pid,posteriori,toolkit,autotuner,autotuner,autotuner,autotuning,autotuner,autotuner,autotuning,autotuning,control",51,6,2,0,48,interactive pid autotuning autotunerpid toolkit allow experiment well establish tune method compare result different method posteriori autotunerpid toolkit single siso control loop main component toolkit file include pid autotuner plant control auxiliary block manage user interacts autotuner set gui implemented function plant linear comparative analisys autotuning method perform toolkit come guide html format also include basic description autotuning method,"['interactive', 'pid', 'autotuning', 'autotunerpid', 'toolkit', 'allow', 'experiment', 'well', 'establish', 'tune', 'method', 'compare', 'result', 'different', 'method', 'posteriori', 'autotunerpid', 'toolkit', 'single', 'siso', 'control', 'loop', 'main', 'component', 'toolkit', 'file', 'include', 'pid', 'autotuner', 'plant', 'control', 'auxiliary', 'block', 'manage', 'user', 'interacts', 'autotuner', 'set', 'gui', 'implemented', 'function', 'plant', 'linear', 'comparative', 'analisys', 'autotuning', 'method', 'perform', 'toolkit', 'come', 'guide', 'html', 'format', 'also', 'include', 'basic', 'description', 'autotuning', 'method']",5
38,4915,"Multitrack 3D Simulink Scope<p>This block is an enhanced version of the standard XYGraph Simulink block.The standard XYGraph allows to plot the motion of ONE point in the XY plane. This block allows plotting the motion of SEVERAL points in the XYZ space.In other words each point draws a line as it moves, so you end up having several lines in the plot instead of just one. Setting the camera position parameter to [0 0 1] reduces the plot to a classic 2D one.This block is very useful when you have to compare the motion of a point versus a reference trajectory. See this blog entry for more information: <a href=""https://blogs.mathworks.com/pick/2017/03/10/3d-scope/Run"">https://blogs.mathworks.com/pick/2017/03/10/3d-scope/Run</a> install_3dscope.m to install the scope. The file M2DScope_new.mdl contains a new version for R2014b and later, which was rewritten taking advantages of new graphic features. The file M2DScope_old.mdl contains the legacy version which is slower, has less features, and i think it's harder to use due to its coordinate input ordering, but should work for any version (5.3 and later). Read the readme.txt file for more info.Giampy</p>pick of the week,potw,graph,2d,3d,attractor,graph,lorenz,multitrack,scope,simulink,xy,xyz,3d,2d",69,5,2,0,93,multitrack scopethis block enhance version standard xygraph block standard xygraph allow plot motion one point plane block allow plot motion several point xyz space word point draws line move end several line plot instead one set camera position parameter reduces plot classic one block useful compare motion point versus reference trajectory see blog entry information blog mathworks com pick scope run install dscope install scope file dscope new mdl contain new version later rewrite take advantage new graphic feature file dscope old mdl contain legacy version slow less feature think hard due coordinate input order work version later read readme txt file info giampypick weekpotwgraph,"['multitrack', 'scopethis', 'block', 'enhance', 'version', 'standard', 'xygraph', 'block', 'standard', 'xygraph', 'allow', 'plot', 'motion', 'one', 'point', 'plane', 'block', 'allow', 'plot', 'motion', 'several', 'point', 'xyz', 'space', 'word', 'point', 'draws', 'line', 'move', 'end', 'several', 'line', 'plot', 'instead', 'one', 'set', 'camera', 'position', 'parameter', 'reduces', 'plot', 'classic', 'one', 'block', 'useful', 'compare', 'motion', 'point', 'versus', 'reference', 'trajectory', 'see', 'blog', 'entry', 'information', 'blog', 'mathworks', 'com', 'pick', 'scope', 'run', 'install', 'dscope', 'install', 'scope', 'file', 'dscope', 'new', 'mdl', 'contain', 'new', 'version', 'later', 'rewrite', 'take', 'advantage', 'new', 'graphic', 'feature', 'file', 'dscope', 'old', 'mdl', 'contain', 'legacy', 'version', 'slow', 'less', 'feature', 'think', 'hard', 'due', 'coordinate', 'input', 'order', 'work', 'version', 'later', 'read', 'readme', 'txt', 'file', 'info', 'giampypick', 'weekpotwgraph']",0
39,5026,"This is a demonstration of the Embedded MATLAB Function Block, using a portable random number genera<p>Simulink 6 in Release 14 adds a major step forward in MATLAB language support; the Embedded MATLAB Function block.This block offers enhanced functionality for creating M-file S-functions.Unlike the MATLAB Compiler (which is for desktop deployment of the full MATLAB language), Embedded MATLAB Function block integrates with Real-Time Workshop 6 to generate C code from a subset of the MATLAB language that can be deployed on any embedded processor that supports an ANSI C compiler.</p>knuth portable random number generator,r14,simulink,tunable seed",6,1,2,0,4,demonstration embed function block portable random number release add major step forward language support embed function block block offer enhance functionality create file function unlike compiler desktop deployment full language embed function block integrates real time workshop generate code subset language deploy embed processor support ansi compiler knuth portable random number generatorr seed,"['demonstration', 'embed', 'function', 'block', 'portable', 'random', 'number', 'release', 'add', 'major', 'step', 'forward', 'language', 'support', 'embed', 'function', 'block', 'block', 'offer', 'enhance', 'functionality', 'create', 'file', 'function', 'unlike', 'compiler', 'desktop', 'deployment', 'full', 'language', 'embed', 'function', 'block', 'integrates', 'real', 'time', 'workshop', 'generate', 'code', 'subset', 'language', 'deploy', 'embed', 'processor', 'support', 'ansi', 'compiler', 'knuth', 'portable', 'random', 'number', 'generatorr', 'seed']",0
40,5084,"Demo models from the June 2004 News & Notes article, ""Logic Design Using Stateflow Truth Tables"".<p>These example models demonstrate a hypothetical min/governor/max fuel selection module for a turbine engine using several implementations, two using just Simulink blocks and one using a Stateflow Truth Table.  A fourth example model is of a logically incomplete truth table.  The design is plausible, but the table diagnostics detect the missing cases and reports the problem.  Read the full article in the June 2004 issue of ""News &amp; Notes"".</p>truth table logic nn_mlclogic,truth table logic nn_mlclogic,truth table logic nn_mlclogic",84,0,1,0,90,demo june news note article logic design stateflow truth table example demonstrate hypothetical min governor max fuel selection module turbine engine several implementation two block one stateflow truth table fourth example logically incomplete truth table design plausible table diagnostics detect miss case report problem read full article june issue news amp note truth table logic mlclogictruth table logic mlclogictruth table logic mlclogic,"['demo', 'june', 'news', 'note', 'article', 'logic', 'design', 'stateflow', 'truth', 'table', 'example', 'demonstrate', 'hypothetical', 'min', 'governor', 'max', 'fuel', 'selection', 'module', 'turbine', 'engine', 'several', 'implementation', 'two', 'block', 'one', 'stateflow', 'truth', 'table', 'fourth', 'example', 'logically', 'incomplete', 'truth', 'table', 'design', 'plausible', 'table', 'diagnostics', 'detect', 'miss', 'case', 'report', 'problem', 'read', 'full', 'article', 'june', 'issue', 'news', 'amp', 'note', 'truth', 'table', 'logic', 'mlclogictruth', 'table', 'logic', 'mlclogictruth', 'table', 'logic', 'mlclogic']",5
41,5310,"Motion detection algorithm in Simulink using the Image Acquisition and Signal Processing Toolbox.<p>This demo is an example of using the Image Acqisition Toolbox from within Simulink.  The Image Acquisition Toolbox is called via a MATLAB Function block to return a frame of data.  The Signal Processing Blockset is used to analyze the data and determine if there is motion in the frame.  If there is motion, the quadrant that the motion was detected in is highlighted.In order for the detection to work properly, it will likely be necessary to tune the threshold value to suit your particular scene conditions.</p>application,applications,example,image acquisition,motion detection,simulink,test,applications,motion detection",111,14,5,0,116,motion detection algorithm image acquisition signal processing toolbox demo example image acqisition toolbox within image acquisition toolbox call via function block return frame data signal processing blockset analyze data determine motion frame motion quadrant motion detect highlighted order detection work properly likely necessary tune threshold value suit particular scene condition detection,"['motion', 'detection', 'algorithm', 'image', 'acquisition', 'signal', 'processing', 'toolbox', 'demo', 'example', 'image', 'acqisition', 'toolbox', 'within', 'image', 'acquisition', 'toolbox', 'call', 'via', 'function', 'block', 'return', 'frame', 'data', 'signal', 'processing', 'blockset', 'analyze', 'data', 'determine', 'motion', 'frame', 'motion', 'quadrant', 'motion', 'detect', 'highlighted', 'order', 'detection', 'work', 'properly', 'likely', 'necessary', 'tune', 'threshold', 'value', 'suit', 'particular', 'scene', 'condition', 'detection']",0
42,5446,"Illustrates the relationships between time and frequency parameters used in RF Blockset.<p>RF Blockset converts frequency domain RF information to a baseband-complex time-domain model, for fast execution and compatibility with Simulink signal processing and communications blocks.This simple model illustrates some relationships inherent in the conversion...* Length of impulse response = number of sub bands* Total bandwidth = 1/sample time* sub band bandwidth = total bandwidth / number of sub bandsSelect ""View=&gt;Model Explorer"" on the Simulink menu to view and change the n_sub_bands and bandwidth parameters in the Model Workspace, then rerun the model to see the effect</p>blockset,converts,rf,sparameters,wireless,wireless communications",28,2,2,0,25,illustrates relationship time frequency parameter blockset blockset convert frequency domain information baseband complex time domain fast execution compatibility signal processing communication block simple illustrates relationship inherent conversion length impulse response number sub band total bandwidth sample time sub band bandwidth total bandwidth number sub bandsselect view explorer menu view change sub band bandwidth parameter workspace rerun see communication,"['illustrates', 'relationship', 'time', 'frequency', 'parameter', 'blockset', 'blockset', 'convert', 'frequency', 'domain', 'information', 'baseband', 'complex', 'time', 'domain', 'fast', 'execution', 'compatibility', 'signal', 'processing', 'communication', 'block', 'simple', 'illustrates', 'relationship', 'inherent', 'conversion', 'length', 'impulse', 'response', 'number', 'sub', 'band', 'total', 'bandwidth', 'sample', 'time', 'sub', 'band', 'bandwidth', 'total', 'bandwidth', 'number', 'sub', 'bandsselect', 'view', 'explorer', 'menu', 'view', 'change', 'sub', 'band', 'bandwidth', 'parameter', 'workspace', 'rerun', 'see', 'communication']",5
43,5572,"Simulink model and Data Acquisition Toolbox analyze streaming audio from Windows soundcard.<p>The MATLAB Function block can be used to stream live data into a Simulink model.  This can be useful to validate models with real data under different test conditions for example.This example uses the Data Acquisition Toolbox to process audio data from the Windows soundcard.  (It's actually just a modified version of dspstfft_win32.mdl, a demo that ships with the Signal Processing Blockset.)You could just as easily use the same approach to interface your models to other support plug-in data acquisition hardware, not to mention a variety of other data sources.   * You could interface Simulink to scientific instruments like an oscilloscope, network analyzer, power meter, or waveform generator using the Instrument Control Toolbox.   * Your models could process live video and image data from cameras and frame grabbers supported by the Image Acquisition Toolbox.   * You could hook your model up to Oracle or another ODBC or JDBC compliant database using the Database Toolbox.   * Your Simulink models can take advantage of MATLAB's Generic DLL calling capability.  Just about anything you can do in MATLAB, you can use the MATLAB Function block to do from Simulink.  Hopefully this example helps get you started.  For more advanced capabilities, refer to the Simulink documentation regarding S-functions, particularly M-file S-functions.  They are more sophisticated and use a particular API which provides a lot of power and functionality.Happy modeling and simulating with live data!</p>analizador de espectrps de audio,analyzer,application,audio spectrum,audio spectrum analyzer,data acquisition,example,simulink,test and measure,analizador de espectrps de audio,audio spectrum analyzer,data acquisition",13,1,2,0,11,data acquisition toolbox analyze stream audio window soundcard function block stream live data useful validate real data different test condition example example data acquisition toolbox process audio data window soundcard actually modify version dspstfft win mdl demo ship signal processing blockset could easily approach interface support plug data acquisition hardware mention variety data source could interface scientific instrument like oscilloscope network analyzer power meter waveform generator instrument control toolbox could process live video image data camera frame grabber support image acquisition toolbox could hook oracle another odbc jdbc compliant database database toolbox take advantage generic dll call capability anything function block hopefully example help get start advanced capability refer documentation regard function particularly file function sophisticate particular api provide lot power functionality happy live data analizador espectrps spectrumaudio spectrum analyzerdata espectrps audioaudio spectrum analyzerdata acquisition,"['data', 'acquisition', 'toolbox', 'analyze', 'stream', 'audio', 'window', 'soundcard', 'function', 'block', 'stream', 'live', 'data', 'useful', 'validate', 'real', 'data', 'different', 'test', 'condition', 'example', 'example', 'data', 'acquisition', 'toolbox', 'process', 'audio', 'data', 'window', 'soundcard', 'actually', 'modify', 'version', 'dspstfft', 'win', 'mdl', 'demo', 'ship', 'signal', 'processing', 'blockset', 'could', 'easily', 'approach', 'interface', 'support', 'plug', 'data', 'acquisition', 'hardware', 'mention', 'variety', 'data', 'source', 'could', 'interface', 'scientific', 'instrument', 'like', 'oscilloscope', 'network', 'analyzer', 'power', 'meter', 'waveform', 'generator', 'instrument', 'control', 'toolbox', 'could', 'process', 'live', 'video', 'image', 'data', 'camera', 'frame', 'grabber', 'support', 'image', 'acquisition', 'toolbox', 'could', 'hook', 'oracle', 'another', 'odbc', 'jdbc', 'compliant', 'database', 'database', 'toolbox', 'take', 'advantage', 'generic', 'dll', 'call', 'capability', 'anything', 'function', 'block', 'hopefully', 'example', 'help', 'get', 'start', 'advanced', 'capability', 'refer', 'documentation', 'regard', 'function', 'particularly', 'file', 'function', 'sophisticate', 'particular', 'api', 'provide', 'lot', 'power', 'functionality', 'happy', 'live', 'data', 'analizador', 'espectrps', 'spectrumaudio', 'spectrum', 'analyzerdata', 'espectrps', 'audioaudio', 'spectrum', 'analyzerdata', 'acquisition']",0
44,6353,"Linear scaling.<p>This block linearly scales an input vector ranging from xmin to xmax to an output vector ranging from ymin to ymax.The four parameters xmin, xmax, ymin, ymax can be themselves vectors (or matrices), so each element can be scaled independently from the others.The function performed is just a simple affine transformation, but it is used so often and so widely (sensors, actuators, DAC, ACD ...), that i think it should have a place under the standard Math Operations library in Simulink.</p>actuators,affine,da,linear,range,scaling,sensors,simulink,transformation",13,1,2,0,11,linear scale block linearly scale input vector range xmin xmax output vector range ymin ymax four parameter xmin xmax ymin ymax vector matrix element scale independently others function perform simple affine transformation often widely sensor actuator dac acd think place standard math operation,"['linear', 'scale', 'block', 'linearly', 'scale', 'input', 'vector', 'range', 'xmin', 'xmax', 'output', 'vector', 'range', 'ymin', 'ymax', 'four', 'parameter', 'xmin', 'xmax', 'ymin', 'ymax', 'vector', 'matrix', 'element', 'scale', 'independently', 'others', 'function', 'perform', 'simple', 'affine', 'transformation', 'often', 'widely', 'sensor', 'actuator', 'dac', 'acd', 'think', 'place', 'standard', 'math', 'operation']",5
45,6354,"Unwraps angles so that continuity is restored.<p>Normally, the output of functions that return angles (e.g. atan2) is strictly constrained within the range 0 to 2*pi or within the range -pi to pi. Therefore, even if the inputs change continuously, the angle will exhibit 2*pi jumps across the limits, which is sometimes undesirable (e.g. when the angle drives a control system).This block unwraps an input angle to the whole real axis so that it does not make 2*pi jumps anymore.In order to distinguish jumps from normal behavior, an upper bound on the maximum time derivative of the input is assumed.</p>angle,atan,atan2,jumps,phase,simulink,unwrap,wrap,unwrap",28,2,3,0,30,unwraps angle continuity restore normally output function return angle atan strictly constrain within range within range therefore even input change continuously angle exhibit jump across limit sometimes undesirable angle drive control block unwraps input angle whole real axis make jump anymore order distinguish jump normal behavior upper bound maximum time derivative input assume angleatanatan,"['unwraps', 'angle', 'continuity', 'restore', 'normally', 'output', 'function', 'return', 'angle', 'atan', 'strictly', 'constrain', 'within', 'range', 'within', 'range', 'therefore', 'even', 'input', 'change', 'continuously', 'angle', 'exhibit', 'jump', 'across', 'limit', 'sometimes', 'undesirable', 'angle', 'drive', 'control', 'block', 'unwraps', 'input', 'angle', 'whole', 'real', 'axis', 'make', 'jump', 'anymore', 'order', 'distinguish', 'jump', 'normal', 'behavior', 'upper', 'bound', 'maximum', 'time', 'derivative', 'input', 'assume', 'angleatanatan']",5
46,6564,"Performs soft-decison Viterbi decoding with puncturing over an AWGN channel using Simulink(R).<p>Implements soft-decision Viterbi decoding for a rate 3/4 code over an AWGN channel using Simulink(R).The Viterbi decoder block from the Communications Blockset is enhanced to optimally support punctured codes.The attached BERTool session file compares the BER performance as the number of bits are varied for the soft decision with the performance for unquantized inputs. The model file is set-up to support additional runs.</p>bertool,coding theory,information theory,punctured codes,soft decisions,viterbi decoding,punctured codes",14,1,2,0,13,performs soft decison viterbi decode puncture awgn channel implement soft decision viterbi decode rate code awgn channel viterbi decoder block communication blockset enhance optimally support puncture code attached bertool session file compare ber performance number bit vary soft decision performance unquantized input file set support additional run bertoolcoding theorypunctured codessoft code,"['performs', 'soft', 'decison', 'viterbi', 'decode', 'puncture', 'awgn', 'channel', 'implement', 'soft', 'decision', 'viterbi', 'decode', 'rate', 'code', 'awgn', 'channel', 'viterbi', 'decoder', 'block', 'communication', 'blockset', 'enhance', 'optimally', 'support', 'puncture', 'code', 'attached', 'bertool', 'session', 'file', 'compare', 'ber', 'performance', 'number', 'bit', 'vary', 'soft', 'decision', 'performance', 'unquantized', 'input', 'file', 'set', 'support', 'additional', 'run', 'bertoolcoding', 'theorypunctured', 'codessoft', 'code']",0
47,6649,"Signal composition/decomposition into different types.<p>This block takes in input a vector of Ni signals belonging to a type Ti, puts them all in a contiguous memory zone, and reinterprets them as a vector of No signals belonging to a type To. Typically you can use this block to decompose/recompose doubles or floats into/from the bytes that make them.</p>composition,double,float,int8,numbers,real_t,simulink,type,uint8",5,0,1,0,4,signal composition decomposition different type block take input vector signal belong type put contiguous memory zone reinterprets vector signal belong type typically block decompose recompose double float byte make numbersreal,"['signal', 'composition', 'decomposition', 'different', 'type', 'block', 'take', 'input', 'vector', 'signal', 'belong', 'type', 'put', 'contiguous', 'memory', 'zone', 'reinterprets', 'vector', 'signal', 'belong', 'type', 'typically', 'block', 'decompose', 'recompose', 'double', 'float', 'byte', 'make', 'numbersreal']",5
48,7197,"Tips on fixed-point modeling and code generation. Folder fixpt_tips.zip contains referenced files<p>There are challenges to face when programming in fixed-point code manually. Similarly, care is required in automatically generating fixed-point code. The developer must pay attention to design tradeoffs, namely: accuracy, efficiency, ROM, RAM, execution time, and readability. The MathWorks tools allow you to find and understand proven remedies to these difficulties, using the ""General Solutions"" in this white paper. But the heart of this document is the rich collection of Tips it provides. The tips are the result of the combined expertise of MathWorks developers and experienced customers. The systematic application of these tips will produce optimum code. (Note that this document is a major update to a version based on Simulink 5 written by Siva Nadarajah).</p>code,embedded,embedded code,fixedpoint,generation,production,realtime workshop,tips,verification",211,2,2,0,174,tip fix point code generation folder fixpt tip zip contains reference filesthere challenge face program fix point code manually similarly care require automatically generate fix point code developer must pay attention design tradeoff namely accuracy efficiency rom ram execution time readability mathworks tool allow find understand proven remedy difficulty general solution white paper heart document rich collection tip provide tip result combine expertise mathworks developer experience customer systematic application tip produce optimum code note document major update version base write siva nadarajah,"['tip', 'fix', 'point', 'code', 'generation', 'folder', 'fixpt', 'tip', 'zip', 'contains', 'reference', 'filesthere', 'challenge', 'face', 'program', 'fix', 'point', 'code', 'manually', 'similarly', 'care', 'require', 'automatically', 'generate', 'fix', 'point', 'code', 'developer', 'must', 'pay', 'attention', 'design', 'tradeoff', 'namely', 'accuracy', 'efficiency', 'rom', 'ram', 'execution', 'time', 'readability', 'mathworks', 'tool', 'allow', 'find', 'understand', 'proven', 'remedy', 'difficulty', 'general', 'solution', 'white', 'paper', 'heart', 'document', 'rich', 'collection', 'tip', 'provide', 'tip', 'result', 'combine', 'expertise', 'mathworks', 'developer', 'experience', 'customer', 'systematic', 'application', 'tip', 'produce', 'optimum', 'code', 'note', 'document', 'major', 'update', 'version', 'base', 'write', 'siva', 'nadarajah']",5
49,7529,"Physical system model of a hydraulic-electric energy storage device for hybrid automotive ...<p>The Electro-Mechanical Battery (EMB) has been proposed as an alternative for hydraulic storage on midsize hybrid passenger vehicles.  A multi-domain physical system model of an EMB-based hybrid vehicle has been developed using Simulink, SimPowerSystems, and SimDriveline.  This model has been used to gather some initial simulation results of the EMB charge/discharge cycles and its behavior in a drive cycle.  This solution could be applicable to hybrid designs, if it can be proven that the assumed high performance components can be produced, and that they have properties similar to the assumptions that have been made.  Related: SAE Paperhttp://<a href=""http://www.sae.org/servlets/productDetail?PROD_TYP=PAPER&amp;PROD_CD=2005-01-0810"">www.sae.org/servlets/productDetail?PROD_TYP=PAPER&amp;PROD_CD=2005-01-0810</a></p>automotive,electric,emb,energy,hydraulic,hydropneumatic,machine,pneumatic,electric,battery_system_management,power_electronics_control",169,14,4,3,168,physical hydraulic electric energy storage device hybrid automotive electro mechanical battery emb propose alternative hydraulic storage midsize hybrid passenger vehicle multi domain physical emb base hybrid vehicle develop simpowersystems simdriveline gather initial result emb charge discharge cycle behavior drive cycle solution could applicable hybrid design proven assume high performance component produce property similar assumption make related sae paperhttp sae org servlets productdetail prod typ paper amp prod managementpower electronics control,"['physical', 'hydraulic', 'electric', 'energy', 'storage', 'device', 'hybrid', 'automotive', 'electro', 'mechanical', 'battery', 'emb', 'propose', 'alternative', 'hydraulic', 'storage', 'midsize', 'hybrid', 'passenger', 'vehicle', 'multi', 'domain', 'physical', 'emb', 'base', 'hybrid', 'vehicle', 'develop', 'simpowersystems', 'simdriveline', 'gather', 'initial', 'result', 'emb', 'charge', 'discharge', 'cycle', 'behavior', 'drive', 'cycle', 'solution', 'could', 'applicable', 'hybrid', 'design', 'proven', 'assume', 'high', 'performance', 'component', 'produce', 'property', 'similar', 'assumption', 'make', 'related', 'sae', 'paperhttp', 'sae', 'org', 'servlets', 'productdetail', 'prod', 'typ', 'paper', 'amp', 'prod', 'managementpower', 'electronics', 'control']",5
50,7830,"Simulate liqiud level system.<p>Simulate liqiud level systemsingle Tank2 interacting Tank2 nonintracting Tank</p>control,liquid level,liquid system,simulation,simulation model,tank,liquid level,tank",185,15,5,0,176,liqiud level liqiud level systemsingle tank interact tank nonintracting levelliquid modeltankliquid leveltank,"['liqiud', 'level', 'liqiud', 'level', 'systemsingle', 'tank', 'interact', 'tank', 'nonintracting', 'levelliquid', 'modeltankliquid', 'leveltank']",8
51,7931,"Companion software to french book ""Commande et estimation multivariables""<p>This software, written in French for MATLAB 7.5 (R2007b), MATLAB 7.1 (R14SP3) or MATLAB 6.5, is a companion software for the book, also written in French ""Commande et Estimation Multivariables"" (Multivariable Control and Estimation). It allows to calculate the solutions of all the exercises of the book, all included with their solution, centered on five real plants, and to perform the simulations on each of them. Several known modern algorithms (pole placement, complete modal control, decoupling methods, LQ, LQG) and an entirely new one are available, to calculate state-feedback control laws, identity or reduced order observers, Kalman filters or a disturbance observer for these systems. The universal simulation diagrams included for Simulink 5.1 (R13SP1), Simulink 6.3 (R14SP3) and Simulink 7.0 (R2007b) allow the simulation of both continuous time and discrete time models, with or without full or partial integral action added to the state-feedback loop, and with either constant deterministic or pure stochastic (band-limited white noise) disturbances applied to the model (load and measurement disturbances).</p>companion software,controls,design,multivariable control and estimation",375,0,1,0,513,companion software french book commande estimation multivariables software write french companion software book also write french commande estimation multivariables multivariable control estimation allow calculate solution exercise book include solution center five real plant perform several know modern algorithms pole placement complete modal control decouple method lqg entirely new one available calculate state feedback control law identity reduce order observer kalman filter disturbance observer universal diagram include allow continuous time discrete time without full partial integral action add state feedback loop either constant deterministic pure stochastic band limit white noise disturbance apply load measurement disturbance companion control estimation,"['companion', 'software', 'french', 'book', 'commande', 'estimation', 'multivariables', 'software', 'write', 'french', 'companion', 'software', 'book', 'also', 'write', 'french', 'commande', 'estimation', 'multivariables', 'multivariable', 'control', 'estimation', 'allow', 'calculate', 'solution', 'exercise', 'book', 'include', 'solution', 'center', 'five', 'real', 'plant', 'perform', 'several', 'know', 'modern', 'algorithms', 'pole', 'placement', 'complete', 'modal', 'control', 'decouple', 'method', 'lqg', 'entirely', 'new', 'one', 'available', 'calculate', 'state', 'feedback', 'control', 'law', 'identity', 'reduce', 'order', 'observer', 'kalman', 'filter', 'disturbance', 'observer', 'universal', 'diagram', 'include', 'allow', 'continuous', 'time', 'discrete', 'time', 'without', 'full', 'partial', 'integral', 'action', 'add', 'state', 'feedback', 'loop', 'either', 'constant', 'deterministic', 'pure', 'stochastic', 'band', 'limit', 'white', 'noise', 'disturbance', 'apply', 'load', 'measurement', 'disturbance', 'companion', 'control', 'estimation']",5
52,7937,"Sorts vectors using quicksort.<p>This block sorts the input vector using the quicksort algorithm as described in <a href=""http://en.wikipedia.org/wiki/QuicksortQuicksort"">http://en.wikipedia.org/wiki/QuicksortQuicksort</a> is the world's most widely used sorting algorithm, and perhaps even the world's most widely used algorithm of any kind. More info on the mathematical behavior of the algorithm can be found in <a href=""http://mathworld.wolfram.com/Quicksort.htmlGiampy"">http://mathworld.wolfram.com/Quicksort.htmlGiampy</a></p>hoare,qsort,quicksort,simulink,sort,sorting,vector",3,0,1,0,2,sort vector quicksort block sort input vector quicksort algorithm describe http wikipedia org wiki world widely sort algorithm perhaps even world widely algorithm kind info mathematical behavior algorithm find http mathworld wolfram com quicksort,"['sort', 'vector', 'quicksort', 'block', 'sort', 'input', 'vector', 'quicksort', 'algorithm', 'describe', 'http', 'wikipedia', 'org', 'wiki', 'world', 'widely', 'sort', 'algorithm', 'perhaps', 'even', 'world', 'widely', 'algorithm', 'kind', 'info', 'mathematical', 'behavior', 'algorithm', 'find', 'http', 'mathworld', 'wolfram', 'com', 'quicksort']",0
53,7939,"Nonlinear systems with attractors<p>This is a collection of Simulink blocks implementing simple nonlinear dynamical systems that have attractors in their state space.A general 3D Simulink scope (coded in the s-functions sfun3d.m) is used to display (in 3D) the evolution of the system during the simulation.Currently (Jan 2017), the featured systems are Lorenz, Van Der Pol, simple Lotka-Volterra, competitive N-D Lotka Volterra and Henon. Note that this only works for versions 2014b and later.Giampy</p>attractor,attractors,chaos,fractal,fractals,nonlinear,scope,attractor,attractor,attractors",203,30,3,0,221,nonlinear attractorsthis collection block implement simple nonlinear dynamical attractor state space general scope cod function sfun display evolution currently jan featured lorenz van der pol simple lotka volterra competitive lotka volterra henon note work version later,"['nonlinear', 'attractorsthis', 'collection', 'block', 'implement', 'simple', 'nonlinear', 'dynamical', 'attractor', 'state', 'space', 'general', 'scope', 'cod', 'function', 'sfun', 'display', 'evolution', 'currently', 'jan', 'featured', 'lorenz', 'van', 'der', 'pol', 'simple', 'lotka', 'volterra', 'competitive', 'lotka', 'volterra', 'henon', 'note', 'work', 'version', 'later']",5
54,8381,"Self-Tuning Controllers Simulink Library - standard version.<p>The Self-Tuning Controllers Simulink Library contains various discrete single input single output (SISO) controllers. All controllers contain an on-line identification of a controlled process using the second or the third order model and thus are also suitable for a control of time varying processes. To install the library simply unzip the appropriate file to an empty folder (for example using Winzip) and than add this folder to the matlab path. There are several possible approaches of adding a folder to the MATLAB path (for example you can use path command), but the simplest way is to use the Set Path dialog, which can be accessed through the File menu.</p>control design,selftunig control,simulink library",10,1,1,1,13,self tune controller standard version self tune controller contain various discrete single input single output siso controller controller contain line identification control process second third order thus also suitable control time vary process install simply unzip appropriate file empty folder example winzip add folder path several possible approach add folder path example path command simple way set path dialog access file menu control designselftunig,"['self', 'tune', 'controller', 'standard', 'version', 'self', 'tune', 'controller', 'contain', 'various', 'discrete', 'single', 'input', 'single', 'output', 'siso', 'controller', 'controller', 'contain', 'line', 'identification', 'control', 'process', 'second', 'third', 'order', 'thus', 'also', 'suitable', 'control', 'time', 'vary', 'process', 'install', 'simply', 'unzip', 'appropriate', 'file', 'empty', 'folder', 'example', 'winzip', 'add', 'folder', 'path', 'several', 'possible', 'approach', 'add', 'folder', 'path', 'example', 'path', 'command', 'simple', 'way', 'set', 'path', 'dialog', 'access', 'file', 'menu', 'control', 'designselftunig']",0
55,8383,"Self-Tuning Controllers Simulink Library - Real Time Workshop version.<p>The Self-Tuning Controllers Simulink Library contains various discrete single input single output (SISO) controllers. All controllers contain an on-line identification of a controlled process using the second or the third order model and thus are also suitable for a control of time varying processes.This version is designed to be used with Real Time Workshop (uses C language functions)This file can serve as a support for the book Digital Self-tuning Controllers(<a href=""http://www.mathworks.com/support/books/book10785.html)Project"">http://www.mathworks.com/support/books/book10785.html)Project</a> web page: <a href=""http://www.utb.cz/stctool/"">http://www.utb.cz/stctool/</a></p>control design,selftunig control,simulink library",10,0,1,0,13,self tune controller real time workshop version self tune controller contain various discrete single input single output siso controller controller contain line identification control process second third order thus also suitable control time vary process version design used real time workshop language function file serve support book digital self tune controller http mathworks com support book book html project web page http utb stctool control designselftunig,"['self', 'tune', 'controller', 'real', 'time', 'workshop', 'version', 'self', 'tune', 'controller', 'contain', 'various', 'discrete', 'single', 'input', 'single', 'output', 'siso', 'controller', 'controller', 'contain', 'line', 'identification', 'control', 'process', 'second', 'third', 'order', 'thus', 'also', 'suitable', 'control', 'time', 'vary', 'process', 'version', 'design', 'used', 'real', 'time', 'workshop', 'language', 'function', 'file', 'serve', 'support', 'book', 'digital', 'self', 'tune', 'controller', 'http', 'mathworks', 'com', 'support', 'book', 'book', 'html', 'project', 'web', 'page', 'http', 'utb', 'stctool', 'control', 'designselftunig']",7
56,8413,"C-code S-function tutorial from web seminar.<p>How can I build my own Simulink blocks in C? A tutorial for communication systems designers This seminar was originally recorded on 1st September 2005. It showed how users can create their own C and C++ based S-functions.This collection of files are the example files used in the seminar.</p>ccode,seminar,sfunctions,simulink,webinar",186,22,3,0,216,code function tutorial web seminar build block tutorial communication designer seminar originally record september show user create base function collection file example file seminar,"['code', 'function', 'tutorial', 'web', 'seminar', 'build', 'block', 'tutorial', 'communication', 'designer', 'seminar', 'originally', 'record', 'september', 'show', 'user', 'create', 'base', 'function', 'collection', 'file', 'example', 'file', 'seminar']",7
57,8856,"Flags of some countries in Simulink.<p>This file is a collection of the flags of some nations rendered as SimulinkÂ® masks. You can use them in Simulink models etc. Because they are mask commands, they will re-size (but this of course may distort stars and patterns etc.). Because I have chosen to implement the flags as mask icon commands, flags with complex symbols on them can't be rendered this way (e.g. Mexico, Portugal, etc.).</p>countries,flags,masks,rendered,simulink,utilities",87,0,1,0,0,flags country file collection flag nation render mask etc mask command size course may distort star pattern etc choose implement flag mask icon command flag complex symbol render way mexico portugal etc,"['flags', 'country', 'file', 'collection', 'flag', 'nation', 'render', 'mask', 'etc', 'mask', 'command', 'size', 'course', 'may', 'distort', 'star', 'pattern', 'etc', 'choose', 'implement', 'flag', 'mask', 'icon', 'command', 'flag', 'complex', 'symbol', 'render', 'way', 'mexico', 'portugal', 'etc']",8
58,8885,"Embedded MATLAB function blocks that simulate pointing loss and signal obstruction for Gaussian ...<p>Communication signals can be attenuated at the receive antenna if there is a misalignment between the transmit and receive antenna.  This can be either a static misalignment or a time varying misalignment, like when an antenna is mounted on a tower that sways in the wind.Communications signals can also be totally blocked by obstructions passing in front of an antenna.  An example would be an antenna mounted in a buoy out at sea that occasionally has a wave wash over it.    Both these conditions cause a loss in overall communications performance.  The models in this submission show how to simulate these effects of antenna  misalignment and obstruction in a Simulink communications system simulation.  1- XModel6.  This model is a comms simulation with perfect antenna pointing.2- XModel6Gauss.  This model shows how to simulate a static misalignment between a transmit and receive antenna.  The antenna pattern used in this example is a Gaussian approximation.3- XModel6Sinc.  This model shows how to simulate a dynamic pointing loss.  In this case the misalignment is simulated with a sinusoidal function.  The antenna pattern used in this example is for a square feed horn, which has a sinc rolloff characteristic.4- XModel6SincBlocked.  This model shows how to simulate a receive antenna that is misaligned and periodically obstructed.  The obstruction is modeled with a low duty cycle square wave.  The antenna pattern used in this example is for a square feed horn, which has a sinc rolloff characteristic.</p>antenna blocking,communications,wireless,antenna blocking,communications",66,0,1,0,63,embed function block point loss signal obstruction gaussian communication signal attenuate receive antenna misalignment transmit receive antenna either static misalignment time vary misalignment like antenna mount tower sway wind communication signal also totally blocked obstruction pass front antenna example would antenna mounted buoy sea occasionally wave wash condition cause loss overall communication performance submission show effect antenna misalignment obstruction communication xmodel comms perfect antenna point xmodel gauss show static misalignment transmit receive antenna antenna pattern example gaussian approximation xmodel sinc show dynamic pointing loss case misalignment sinusoidal function antenna pattern example square feed horn sinc rolloff characteristic xmodel sincblocked show receive antenna misalign periodically obstruct obstruction low duty cycle square wave antenna pattern example square feed horn sinc rolloff characteristic antenna,"['embed', 'function', 'block', 'point', 'loss', 'signal', 'obstruction', 'gaussian', 'communication', 'signal', 'attenuate', 'receive', 'antenna', 'misalignment', 'transmit', 'receive', 'antenna', 'either', 'static', 'misalignment', 'time', 'vary', 'misalignment', 'like', 'antenna', 'mount', 'tower', 'sway', 'wind', 'communication', 'signal', 'also', 'totally', 'blocked', 'obstruction', 'pass', 'front', 'antenna', 'example', 'would', 'antenna', 'mounted', 'buoy', 'sea', 'occasionally', 'wave', 'wash', 'condition', 'cause', 'loss', 'overall', 'communication', 'performance', 'submission', 'show', 'effect', 'antenna', 'misalignment', 'obstruction', 'communication', 'xmodel', 'comms', 'perfect', 'antenna', 'point', 'xmodel', 'gauss', 'show', 'static', 'misalignment', 'transmit', 'receive', 'antenna', 'antenna', 'pattern', 'example', 'gaussian', 'approximation', 'xmodel', 'sinc', 'show', 'dynamic', 'pointing', 'loss', 'case', 'misalignment', 'sinusoidal', 'function', 'antenna', 'pattern', 'example', 'square', 'feed', 'horn', 'sinc', 'rolloff', 'characteristic', 'xmodel', 'sincblocked', 'show', 'receive', 'antenna', 'misalign', 'periodically', 'obstruct', 'obstruction', 'low', 'duty', 'cycle', 'square', 'wave', 'antenna', 'pattern', 'example', 'square', 'feed', 'horn', 'sinc', 'rolloff', 'characteristic', 'antenna']",5
59,9010,"This program simulate temperature control of one or two series tank.<p>This program simulate temperature control of one or two series tank. it's use simulink for simulation and matlab graphic to plot data as an animation.you can set physical property and controller(P,PI,PID)and set type of input(step,impulse,sin)</p>control,control design,matlab,simulink,temperature,matlab",45,2,2,0,46,program temperature control one two series tank program temperature control one two series tank graphic plot data animation set physical property controller ppipid set type input stepimpulsesin controlcontrol,"['program', 'temperature', 'control', 'one', 'two', 'series', 'tank', 'program', 'temperature', 'control', 'one', 'two', 'series', 'tank', 'graphic', 'plot', 'data', 'animation', 'set', 'physical', 'property', 'controller', 'ppipid', 'set', 'type', 'input', 'stepimpulsesin', 'controlcontrol']",7
60,9096,"Wraps the input vector into a given hypercuboid<p>When the input is inside the n-dimensional box defined by the two limiting vectors Min and Max, then the output is equal to the input. When the input exceeds a limit along one dimension, the output reappears ""on the other side"" of the box, along the same dimension. This block is especially useful if you want to keep the evolution of a given variable in a certain range, for example, when displaying images with the virtual reality toolbox, it is better to keep the object positions within certain limits, otherwise numerical problems may prevent a correct visualization.</p>hypercube,limits,mod,rem,simulink,virtual reality,wrap,wrapper",14,1,2,0,14,wrap input vector give hypercuboidwhen input inside dimensional box define two limit vector min max output equal input input exceed limit along one dimension output reappears side box along dimension block especially useful want keep evolution give variable certain range example display image virtual reality toolbox well keep object position within certain limit otherwise numerical problem may prevent correct visualization,"['wrap', 'input', 'vector', 'give', 'hypercuboidwhen', 'input', 'inside', 'dimensional', 'box', 'define', 'two', 'limit', 'vector', 'min', 'max', 'output', 'equal', 'input', 'input', 'exceed', 'limit', 'along', 'one', 'dimension', 'output', 'reappears', 'side', 'box', 'along', 'dimension', 'block', 'especially', 'useful', 'want', 'keep', 'evolution', 'give', 'variable', 'certain', 'range', 'example', 'display', 'image', 'virtual', 'reality', 'toolbox', 'well', 'keep', 'object', 'position', 'within', 'certain', 'limit', 'otherwise', 'numerical', 'problem', 'may', 'prevent', 'correct', 'visualization']",0
61,9222,"Simple design for helicopter control system<p>Simple Simulink simulation for a helicopter control design.  The package includes a paper, matlab file, and a simulink model.  Read the paper for detailed description of the simulink model.The design is based on the book by Gareth D. Padfield:(Helicopter Flight Dynamics: The Theory and Application of Flying Qualities and Simulation Modeling). AIAA Education Series, 1996.</p>control,design,helicopter,paper,simulink,control,control,design,helicopter,paper,simulink",10,0,1,0,18,simple design helicopter control systemsimple helicopter control design package include paper file read paper detail description design base book gareth padfield helicopter flight dynamic theory application fly quality aiaa education series,"['simple', 'design', 'helicopter', 'control', 'systemsimple', 'helicopter', 'control', 'design', 'package', 'include', 'paper', 'file', 'read', 'paper', 'detail', 'description', 'design', 'base', 'book', 'gareth', 'padfield', 'helicopter', 'flight', 'dynamic', 'theory', 'application', 'fly', 'quality', 'aiaa', 'education', 'series']",0
62,9425,"Model Gas consumption from gas-source to gas-consumer<p>The Model starts from gas-sources including a pricing model. Example consumers are factory, power-plant, households and leakage, each also including a pricing model.Results are:    - gas level in storage,   - consumption of customer,   - price for customer (cumulative)   - and profit for the electric      utility (cumulative)The model - meant as a start - does not include a control- or optimization strategy jet.Most people I talked to so far expected a simulation of flow and turbulence, which to my surprise was of no interest here.For your convenience I saved the model compatible to Simulink 6.0. Looking forward to comments, suggestions, critics,?</p>electric utility,energy supplier,gas consumption,simulation,electric utility",118,20,3,0,104,gas consumption gas source gas consumerthe start gas source include pricing example consumer factory power plant household leakage also include price result gas level storage consumption customer price customer cumulative profit electric utility cumulative meant start include control optimization strategy jet people talk far expect flow turbulence surprise interest convenience save compatible look forward comment suggestion critic electric utilityenergy suppliergas utility,"['gas', 'consumption', 'gas', 'source', 'gas', 'consumerthe', 'start', 'gas', 'source', 'include', 'pricing', 'example', 'consumer', 'factory', 'power', 'plant', 'household', 'leakage', 'also', 'include', 'price', 'result', 'gas', 'level', 'storage', 'consumption', 'customer', 'price', 'customer', 'cumulative', 'profit', 'electric', 'utility', 'cumulative', 'meant', 'start', 'include', 'control', 'optimization', 'strategy', 'jet', 'people', 'talk', 'far', 'expect', 'flow', 'turbulence', 'surprise', 'interest', 'convenience', 'save', 'compatible', 'look', 'forward', 'comment', 'suggestion', 'critic', 'electric', 'utilityenergy', 'suppliergas', 'utility']",5
63,9986,"Saves data to a file at the end of the simulation<p>This block is similar to the ""To File"" original simulink block, except for the following points:1) It does not access the file system during the simulation, in fact it collects data in memory and saves them to file only when the simulation is over. This is important for real time systems, where normally access to the file system by processes running in real time has to be avoided.2) It can save any type of data instead of just doubles.3) It has a lot of flexibility in saving the data, different format    and precisons can be selected form the block mask.4) When using the %d, %f or %e options, the file is an ASCII file that can be opened with any text editor as well as easily loaded into matlab or excel.This code is derived from an original s-function written by G.Campa and S.Gururajan for simulink schemes running in real time under RTAI-Linux.</p>log,logging,save,simulink,to file,to workspace",3,0,1,0,2,save data file end block similar file original block except follow point access file fact collect data memory save file important real time normally access file process run real time avoid save type data instead double lot flexibility save data different format precisons select form block mask option file ascii file open text editor well easily load excel code derive original function write campa gururajan scheme run real time rtai linux fileto workspace,"['save', 'data', 'file', 'end', 'block', 'similar', 'file', 'original', 'block', 'except', 'follow', 'point', 'access', 'file', 'fact', 'collect', 'data', 'memory', 'save', 'file', 'important', 'real', 'time', 'normally', 'access', 'file', 'process', 'run', 'real', 'time', 'avoid', 'save', 'type', 'data', 'instead', 'double', 'lot', 'flexibility', 'save', 'data', 'different', 'format', 'precisons', 'select', 'form', 'block', 'mask', 'option', 'file', 'ascii', 'file', 'open', 'text', 'editor', 'well', 'easily', 'load', 'excel', 'code', 'derive', 'original', 'function', 'write', 'campa', 'gururajan', 'scheme', 'run', 'real', 'time', 'rtai', 'linux', 'fileto', 'workspace']",7
64,10335,"MultiBand (GPS) Noise<p>This block models multiband noise by adding four different band limited white noise signals, each one with its own power and time scale, with three of them being also filtered by a lowpass first order filter. With the selected parameters, the block approximates the noise typically observed on the three position channels of a good quality gps receiver.</p>gps,band,colored,gps,limited,mult,multicolor,multirate,noise,simulink,white",18,2,3,0,15,multiband gps noisethis block multiband noise add four different band limit white noise signal one power time scale three also filter lowpass first order filter select parameter block approximates noise typically observe three position channel good quality gps receiver,"['multiband', 'gps', 'noisethis', 'block', 'multiband', 'noise', 'add', 'four', 'different', 'band', 'limit', 'white', 'noise', 'signal', 'one', 'power', 'time', 'scale', 'three', 'also', 'filter', 'lowpass', 'first', 'order', 'filter', 'select', 'parameter', 'block', 'approximates', 'noise', 'typically', 'observe', 'three', 'position', 'channel', 'good', 'quality', 'gps', 'receiver']",0
65,10439,"Additional I/O blocks for MPC555 target - specifically targetting TPU functionality<p>This blockset is intended as an extension to the Embedded Target for Motorola(R) MPC555.It supports additional TPU I/O functionality, which can be useful in the context of motor control.</p>dptram,embedded code,motor,mpc555,realtime workshop,tpu,tpu3,verification,electric_motor_control,power_electronics_control",340,69,5,43,266,additional block mpc target specifically targetting tpu blockset intend extension embed target motorola mpc support additional tpu functionality useful context motor control dptramembedded codemotormpc realtime workshoptputpu motor controlpower electronics control,"['additional', 'block', 'mpc', 'target', 'specifically', 'targetting', 'tpu', 'blockset', 'intend', 'extension', 'embed', 'target', 'motorola', 'mpc', 'support', 'additional', 'tpu', 'functionality', 'useful', 'context', 'motor', 'control', 'dptramembedded', 'codemotormpc', 'realtime', 'workshoptputpu', 'motor', 'controlpower', 'electronics', 'control']",4
66,11027,"Technical paper and examples on modeling flexibility in SimMechanics.<p>This archive contains a technical paper on modeling flexible bodies using SimMechanics and Simulink. The archive also includes the examples discussed in the technical paper.An overview of the techniques described here is presented in the following MATLAB Digest article:<a href=""https://www.mathworks.com/company/newsletters/articles/building-accurate-realistic-simulink-models.html"">https://www.mathworks.com/company/newsletters/articles/building-accurate-realistic-simulink-models.html</a> </p>flexible vibration fea lumped bending torsion rigid multibody,flexible vibration fea lumped bending torsion rigid multibody,flexible vibration fea lumped bending torsion rigid multibody,flexible vibration fea lumped bending torsion rigid multibody ae,mechanical modeling,flexible vibration fea lumped bending torsion rigid multibody,flexible vibration fea lumped bending torsion rigid multibody,flexible vibration fea lumped bending torsion rigid multibody,flexible vibration fea lumped bending torsion rigid multibody ae,mechanical modeling",259,64,4,34,251,technical paper example flexibility simmechanics archive contains technical paper flexible body simmechanics archive also include example discuss technical paper overview technique describe present follow digest article mathworks com company newsletter article build accurate realistic html flexible vibration fea lump bend torsion rigid vibration fea lump bend torsion rigid vibration fea lump bend torsion rigid vibration fea lump bend torsion rigid multibody aemechanical vibration fea lump bend torsion rigid vibration fea lump bend torsion rigid vibration fea lump bend torsion rigid vibration fea lump bend torsion rigid multibody aemechanical modeling,"['technical', 'paper', 'example', 'flexibility', 'simmechanics', 'archive', 'contains', 'technical', 'paper', 'flexible', 'body', 'simmechanics', 'archive', 'also', 'include', 'example', 'discuss', 'technical', 'paper', 'overview', 'technique', 'describe', 'present', 'follow', 'digest', 'article', 'mathworks', 'com', 'company', 'newsletter', 'article', 'build', 'accurate', 'realistic', 'html', 'flexible', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'multibody', 'aemechanical', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'vibration', 'fea', 'lump', 'bend', 'torsion', 'rigid', 'multibody', 'aemechanical', 'modeling']",5
67,11092,"Customizable add-on library with a small number of blocks for graphical programming of Bond Graph models using standard Simulink and editor.<p>Why Bondgraphs?The energy domain independently Bond Graph is an excellent power flow diagram for process models [see DOI:10.1109/epe.2005.219609]. Detailed introductions to the Bond Graph method may be found here for instance: <a href=""http://groups.csail.mit.edu/drl/journal_club/papers/Samantaray__2001__www.bondgraphs.com_about.pdfRealization"">http://groups.csail.mit.edu/drl/journal_club/papers/Samantaray__2001__www.bondgraphs.com_about.pdfRealization</a> using Simulink:Replace each half arrow connection by one visible connection drawn by the standard editor, presenting optionally a flow or an effort connection. The implementation of the conjugated back connection for the complementary power variable effort or flow will be done automatically via software background. In addition the blocks are defined switchable, e.g. regarding causality or block function in order to reduce the number of library blocks. Library version 2.1 consists of 9 blocks only which realize the whole necessary functionality. These blocks may be used by means of drag &amp; drop technique and have to be configured menu-driven as usual for Simulink. See homepagehttps://etiema.et.tu-dresden.de/ae2_files/ae_8_1e.htmof this Bond Graph library for more info including 10 pdf files for documentation, 4 lists of examples or on-line list with icon, function/mask and parameter.Features:Typical examples for combined functionalities are the energy storage block (choice of I or C type) or the node block (choice of 0 or 1 type). Environment connections to standard Simulink blocks ensure S/D and AB blocks, i.e. controllers may only drive a Bond Graph by means of source blocks and a measurement of Bond Graph power variables may only be done by use of AB blocks. All blocks are able to operate with scalar or vectorial bond connections optionally. The user may set constant parameters directly via block mask or work with variable parameters by defining an additional parameter input if allowable for the considered element like as for TF or GY. Alternatively the definition of a second file filename_P.m causes the allocation of determined or calculated numerical values to symbolic defined parameters for the Bond Graph blocks. The block masks offer different additional adjustments as for instance number of inputs and outputs as well as operation mode for node blocks or initial values as well as additional momentum, displacement or power output for energy storage blocks. Each block provides a protection of its functionality, i.e. in this case a first mask access step only allows the change of the parameter value. Operation mode modifications must be unlocked in a second step afterwards. Nodes and measurements:Since one power variable of the power variable pairs at any node block has been defined to be constant there are two different icons per node type necessary. The appearance forms of the icon and the underlying equations are documented. Any effort or flow variables of a Bond Graph may be measured by means of an so-called AB block which realizes the activated bond functionality whereas momentum, displacement or power are immediately disposal at each storage element.Summary:Simulink add-on library BG V.2.1 offers a tool for the graphical programming of power flow diagrams in terms of Bond Graphs. Nine blocks ensure all essential modes via menu input. That way e.g. causality changes, nonlinearities, initial values, vectorial operation, power outputs or protection of settings are ensured. Examples describe different usage as for process modelling, control loops (example ElaWe_GM_ZuReg) or energy efficiency based on integration (example GM_EE). The tool, all examples and a short documentation are included. See at homepage given above for more info.Extract from the lists with examples:- belt conveyor, clutch for HEV, subway traction drive, gimbal- lift magnet, dynamic vibration absorber, lift a load, double pendulum- double-fed asynchronous machine, synchronous machine (power conserving Park transformation)- chaos generator (Chuas circuit), Twin-T band-stop filter, boost converter, buck converterHints for modelling (cp. also ORCID or ResearchGate):a,For use of this add-on library with recent MATLAB/Simulink versions use Simulink container technique. Updated version will be available later.b,Hints for modelling chain structure systems: DOI: 10.1080/03081079.2019.1668383 (Generalized Bond Graph modelling) or: <a href=""https://www.tandfonline.com/eprint/9W7TV8WIWNTU6BXADQBM/full?target=10.1080/03081079.2019.1668383c,Hints"">https://www.tandfonline.com/eprint/9W7TV8WIWNTU6BXADQBM/full?target=10.1080/03081079.2019.1668383c,Hints</a> for modelling electrical machines:DOI: 10.1109/IECON.2019.8927632 (Synchronous Reluctance Machine)DOI: 10.1109/IECON.2016.7794063 (Generalised power flow model)DOI: 10.1109/IECON.2016.7793471 (HB- and PM-type Vernier machines)INSPEC Accession Number 10939726 (Standard electric machines)d,Hints for modelling compound epicyclic gears (planetary gears):DOI: 10.1109/cecnet.2011.5769012 (three-speed gears)DOI: 10.1016/j.mechmachtheory.2017.05.007 (four-speed gears)e,Hints for teaching power flow modelling:arxiv.org/abs/1505.06828</p>aerospace,automotive,bond graph,bondgraph,demo,energy,energy structure of systems,modeling,physics,power flow,simulation,simulink,automotive,energy,simulink,de,demo,electric_motor_control,power_conversion_control,power_electronics_control",33223,3756,5,260,27989,customizable add small number block graphical program bond graph standard editor bondgraphs energy domain independently bond graph excellent power flow diagram process see doi epe detailed introduction bond graph method may find instance http group csail mit edu drl journal club paper samantaray bondgraphs com pdfrealization replace half arrow connection one visible connection draw standard editor present optionally flow effort connection implementation conjugate back connection complementary power variable effort flow automatically via software background addition block define switchable regard causality block function order reduce number block version consist block realize whole necessary functionality block may mean drag amp drop technique configure menu driven usual see homepage etiema dresden file htmof bond graph info include pdf file documentation list examples line list icon function mask parameter feature typical example combine functionality energy storage block choice type node block choice type environment connection standard block ensure block controller may drive bond graph mean source block measurement bond graph power variable may block block able operate scalar vectorial bond connection optionally user may set constant parameter directly via block mask work variable parameter define additional parameter input allowable consider element like alternatively definition second file filename cause allocation determine calculated numerical value symbolic define parameter bond graph block block mask offer different additional adjustment instance number input outputs well operation mode node block initial value well additional momentum displacement power output energy storage block block provide protection functionality case first mask access step allow change parameter value operation mode modification must unlock second step afterwards nod measurement since one power variable power variable pair node block define constant two different icon per node type necessary appearance form icon underlying equation document effort flow variable bond graph may measure mean call block realizes activate bond functionality whereas momentum displacement power immediately disposal storage element summary add offer tool graphical programming power flow diagram term bond graph nine block ensure essential mode via menu input way causality change nonlinearities initial value vectorial operation power output protection setting ensure example describe different usage process control loop example elawe zureg energy efficiency base integration example tool examples short documentation include see homepage give info extract list example belt conveyor clutch hev subway traction drive gimbal lift magnet dynamic vibration absorber lift load double pendulum double fed asynchronous machine synchronous machine power conserve park transformation chaos generator chuas circuit twin band stop filter boost converter buck converterhints also orcid researchgate afor add recent version container technique update version available late bhints chain structure doi generalize bond graph tandfonline com eprint wiwntu bxadqbm full target chints electrical machine doi iecon synchronous reluctance machine doi iecon generalise power flow doi iecon type vernier machine inspec accession number standard electric machine dhints compound epicyclic gear planetary gear doi cecnet three speed gear doi mechmachtheory four speed gear ehints teach power flow arxiv org structure motor controlpower conversion controlpower electronics control,"['customizable', 'add', 'small', 'number', 'block', 'graphical', 'program', 'bond', 'graph', 'standard', 'editor', 'bondgraphs', 'energy', 'domain', 'independently', 'bond', 'graph', 'excellent', 'power', 'flow', 'diagram', 'process', 'see', 'doi', 'epe', 'detailed', 'introduction', 'bond', 'graph', 'method', 'may', 'find', 'instance', 'http', 'group', 'csail', 'mit', 'edu', 'drl', 'journal', 'club', 'paper', 'samantaray', 'bondgraphs', 'com', 'pdfrealization', 'replace', 'half', 'arrow', 'connection', 'one', 'visible', 'connection', 'draw', 'standard', 'editor', 'present', 'optionally', 'flow', 'effort', 'connection', 'implementation', 'conjugate', 'back', 'connection', 'complementary', 'power', 'variable', 'effort', 'flow', 'automatically', 'via', 'software', 'background', 'addition', 'block', 'define', 'switchable', 'regard', 'causality', 'block', 'function', 'order', 'reduce', 'number', 'block', 'version', 'consist', 'block', 'realize', 'whole', 'necessary', 'functionality', 'block', 'may', 'mean', 'drag', 'amp', 'drop', 'technique', 'configure', 'menu', 'driven', 'usual', 'see', 'homepage', 'etiema', 'dresden', 'file', 'htmof', 'bond', 'graph', 'info', 'include', 'pdf', 'file', 'documentation', 'list', 'examples', 'line', 'list', 'icon', 'function', 'mask', 'parameter', 'feature', 'typical', 'example', 'combine', 'functionality', 'energy', 'storage', 'block', 'choice', 'type', 'node', 'block', 'choice', 'type', 'environment', 'connection', 'standard', 'block', 'ensure', 'block', 'controller', 'may', 'drive', 'bond', 'graph', 'mean', 'source', 'block', 'measurement', 'bond', 'graph', 'power', 'variable', 'may', 'block', 'block', 'able', 'operate', 'scalar', 'vectorial', 'bond', 'connection', 'optionally', 'user', 'may', 'set', 'constant', 'parameter', 'directly', 'via', 'block', 'mask', 'work', 'variable', 'parameter', 'define', 'additional', 'parameter', 'input', 'allowable', 'consider', 'element', 'like', 'alternatively', 'definition', 'second', 'file', 'filename', 'cause', 'allocation', 'determine', 'calculated', 'numerical', 'value', 'symbolic', 'define', 'parameter', 'bond', 'graph', 'block', 'block', 'mask', 'offer', 'different', 'additional', 'adjustment', 'instance', 'number', 'input', 'outputs', 'well', 'operation', 'mode', 'node', 'block', 'initial', 'value', 'well', 'additional', 'momentum', 'displacement', 'power', 'output', 'energy', 'storage', 'block', 'block', 'provide', 'protection', 'functionality', 'case', 'first', 'mask', 'access', 'step', 'allow', 'change', 'parameter', 'value', 'operation', 'mode', 'modification', 'must', 'unlock', 'second', 'step', 'afterwards', 'nod', 'measurement', 'since', 'one', 'power', 'variable', 'power', 'variable', 'pair', 'node', 'block', 'define', 'constant', 'two', 'different', 'icon', 'per', 'node', 'type', 'necessary', 'appearance', 'form', 'icon', 'underlying', 'equation', 'document', 'effort', 'flow', 'variable', 'bond', 'graph', 'may', 'measure', 'mean', 'call', 'block', 'realizes', 'activate', 'bond', 'functionality', 'whereas', 'momentum', 'displacement', 'power', 'immediately', 'disposal', 'storage', 'element', 'summary', 'add', 'offer', 'tool', 'graphical', 'programming', 'power', 'flow', 'diagram', 'term', 'bond', 'graph', 'nine', 'block', 'ensure', 'essential', 'mode', 'via', 'menu', 'input', 'way', 'causality', 'change', 'nonlinearities', 'initial', 'value', 'vectorial', 'operation', 'power', 'output', 'protection', 'setting', 'ensure', 'example', 'describe', 'different', 'usage', 'process', 'control', 'loop', 'example', 'elawe', 'zureg', 'energy', 'efficiency', 'base', 'integration', 'example', 'tool', 'examples', 'short', 'documentation', 'include', 'see', 'homepage', 'give', 'info', 'extract', 'list', 'example', 'belt', 'conveyor', 'clutch', 'hev', 'subway', 'traction', 'drive', 'gimbal', 'lift', 'magnet', 'dynamic', 'vibration', 'absorber', 'lift', 'load', 'double', 'pendulum', 'double', 'fed', 'asynchronous', 'machine', 'synchronous', 'machine', 'power', 'conserve', 'park', 'transformation', 'chaos', 'generator', 'chuas', 'circuit', 'twin', 'band', 'stop', 'filter', 'boost', 'converter', 'buck', 'converterhints', 'also', 'orcid', 'researchgate', 'afor', 'add', 'recent', 'version', 'container', 'technique', 'update', 'version', 'available', 'late', 'bhints', 'chain', 'structure', 'doi', 'generalize', 'bond', 'graph', 'tandfonline', 'com', 'eprint', 'wiwntu', 'bxadqbm', 'full', 'target', 'chints', 'electrical', 'machine', 'doi', 'iecon', 'synchronous', 'reluctance', 'machine', 'doi', 'iecon', 'generalise', 'power', 'flow', 'doi', 'iecon', 'type', 'vernier', 'machine', 'inspec', 'accession', 'number', 'standard', 'electric', 'machine', 'dhints', 'compound', 'epicyclic', 'gear', 'planetary', 'gear', 'doi', 'cecnet', 'three', 'speed', 'gear', 'doi', 'mechmachtheory', 'four', 'speed', 'gear', 'ehints', 'teach', 'power', 'flow', 'arxiv', 'org', 'structure', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",5
68,11199,"2,4,7 DOFs Suspension Model for Simulink<p>the mdl files are for:vehicle suspension system with semi-active control I/O 1) 2 DOFs 2) 4 DOFs 3) 7 DOFs Chen,<a href=""mailto:YiChenyi2005@gmail.com27-May-2006"">YiChenyi2005@gmail.com27-May-2006</a></p>dof,automotive,dof,passive,semiactive,simulink,suspension,suspension",713,11,3,0,938,dofs suspension mdl file vehicle suspension semi active control dofs dofs dofs chenyichenyi gmail com may,"['dofs', 'suspension', 'mdl', 'file', 'vehicle', 'suspension', 'semi', 'active', 'control', 'dofs', 'dofs', 'dofs', 'chenyichenyi', 'gmail', 'com', 'may']",5
69,11359,"Toolbox/blockset about optical comunication system Sonet/SDH mapping over fiber optics<p>It's a toolbox/blockset about fiber optics communications.  You can make a lot of networks setup, and you can create diagrams from the block provided.  Also, it's useful to learn how optical communication works. Enjoy it!!! good luck</p>amplifiers,communication,demux,fiber,mapping,mux,optics,sdh,sonet,toolbox,communication,fiber,mux,optics,amplifiers,optics,communication,fiber,demux,fiber,communication,fiber",6915,2651,5,2311,6955,toolbox blockset optical comunication sonet sdh map fiber opticsit toolbox blockset fiber optic communication make lot network setup create diagram block provide also useful learn optical communication work enjoy good,"['toolbox', 'blockset', 'optical', 'comunication', 'sonet', 'sdh', 'map', 'fiber', 'opticsit', 'toolbox', 'blockset', 'fiber', 'optic', 'communication', 'make', 'lot', 'network', 'setup', 'create', 'diagram', 'block', 'provide', 'also', 'useful', 'learn', 'optical', 'communication', 'work', 'enjoy', 'good']",0
70,11587,"DC Motor Model (Simulink model) with Voltage input, speed and current output graph<p>A DC motor model with Input voltage, speed and current output graph.</p>dc motor,model,simulation,simulink model,dc motor,dc motor,model,model,model,dc motor,model,simulink model,dc motor,dc motor,dc motor,dc motor,model,dc motor,dc motor,simulink model,dc motor,dc motor,dc motor,dc motor,dc motor,model,dc motor,electric_motor_control,power_conversion_control,power_electronics_control,dc motor,dc motor,dc motor,dc motor",17,1,2,0,20,motor voltage input speed current output grapha motor input voltage speed current output graph modeldc motordc modeldc motordc motordc motordc motormodeldc motordc modeldc motordc motordc motordc motordc motormodeldc motorelectric motor controlpower conversion controlpower electronics controldc motordc motordc motordc motor,"['motor', 'voltage', 'input', 'speed', 'current', 'output', 'grapha', 'motor', 'input', 'voltage', 'speed', 'current', 'output', 'graph', 'modeldc', 'motordc', 'modeldc', 'motordc', 'motordc', 'motordc', 'motormodeldc', 'motordc', 'modeldc', 'motordc', 'motordc', 'motordc', 'motordc', 'motormodeldc', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motordc', 'motordc', 'motordc', 'motor']",3
71,11706,"A Simulink model for Carrierless Amplitude Phase Modulation (CAP)<p>This is a Simulink Model I created for a Digital Communication Systems class. It demonstrates Carrierless Amplidute Phase(CAP) Modulation and uses a raised cosine pulse to implement a 16-QAM modem.</p>16 qam,carrierless amplitude phase modulation,coding,coding theory,information theory,quadrature",33,1,2,0,34,carrierless amplitude phase modulation cap create digital communication class demonstrate carrierless amplidute phase cap modulation raise cosine pulse implement qam modem qamcarrierless amplitude phase,"['carrierless', 'amplitude', 'phase', 'modulation', 'cap', 'create', 'digital', 'communication', 'class', 'demonstrate', 'carrierless', 'amplidute', 'phase', 'cap', 'modulation', 'raise', 'cosine', 'pulse', 'implement', 'qam', 'modem', 'qamcarrierless', 'amplitude', 'phase']",4
72,11760,"This ZIP-file contains the models that were discussed in the MathWorks webinar entitled ""Stateflow D<p>Inside this ZIP-file you will find design patterns for change detection, creating dynamic test vectors, and fault detection.  </p>fault detection,simulation,stateflow design patterns pattern fault detection change test ve",1261,190,7,8,1242,zip file contain discuss mathworks webinar entitle stateflow dinside zip file find design pattern change detection create dynamic test vector fault detection fault design pattern pattern fault detection change test,"['zip', 'file', 'contain', 'discuss', 'mathworks', 'webinar', 'entitle', 'stateflow', 'dinside', 'zip', 'file', 'find', 'design', 'pattern', 'change', 'detection', 'create', 'dynamic', 'test', 'vector', 'fault', 'detection', 'fault', 'design', 'pattern', 'pattern', 'fault', 'detection', 'change', 'test']",7
73,11829,"Different models of DC motors in Simulink(R) and MATLAB(R)<p>The files include a Simulink(R) library with two different models, modeled with basic Simulink blocks, with different details. The more detailed one includes more outputs like motor temperature and power. There is also another model based of the physical modelling tools SimPowerSystems and SimDriveLine, to show how elegant a system like a DC motor can be modeled with them. There are are also sample Simulink models with a load connected to the DC motor. Included are also two MATLAB(R) scripts implementing the DC motor and DC motor with load models in state-space.For control of DC motors look at: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=12137&amp;objectType=FILETo"">http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=12137&amp;objectType=FILETo</a> install: Unpack the zip-file in a directory and add that directory to your matlab path. When you start simulink the block library should be added automatically to your Simulink library browser.</p>dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,dc motor state space pid control,electric_motor_control,power_conversion_control,power_electronics_control,dc motor state space pid control,dc motor state space pid control",46,6,4,2,44,different motor file include two different basic block different detail detail one include output like motor temperature power also another base physical modelling tool simpowersystems simdriveline show elegant like motor also sample load connect motor include also two script implement motor motor load state space control motor look http mathworks com matlabcentral fileexchange loadfile objectid amp objecttype fileto install unpack zip file directory add directory path start block add automatically browser motor state space pid controldc motor state space pid controldc motor state space pid controldc motor state space pid controldc motor state space pid controldc motor state space pid controldc motor state space pid controldc motor state space pid controldc motor state space pid controlelectric motor controlpower conversion controlpower electronics controldc motor state space pid controldc motor state space pid control,"['different', 'motor', 'file', 'include', 'two', 'different', 'basic', 'block', 'different', 'detail', 'detail', 'one', 'include', 'output', 'like', 'motor', 'temperature', 'power', 'also', 'another', 'base', 'physical', 'modelling', 'tool', 'simpowersystems', 'simdriveline', 'show', 'elegant', 'like', 'motor', 'also', 'sample', 'load', 'connect', 'motor', 'include', 'also', 'two', 'script', 'implement', 'motor', 'motor', 'load', 'state', 'space', 'control', 'motor', 'look', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'loadfile', 'objectid', 'amp', 'objecttype', 'fileto', 'install', 'unpack', 'zip', 'file', 'directory', 'add', 'directory', 'path', 'start', 'block', 'add', 'automatically', 'browser', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motor', 'state', 'space', 'pid', 'controldc', 'motor', 'state', 'space', 'pid', 'control']",3
74,12731,"A set of tools and examples to implement task execution profiling for a Real-Time Workshop target<p>This download includes utilities, example code and documentation. The documentation explains how to implement task execution profiling on a custom target, using utilities provided with Real-Time WorkshopÂ®. These utilities allow you to record execution profiling data, and automatically generate reports and graphics  analysing the task execution profile. The utilities described here are for use with R2006b and require Real-Time Workshop; Real-Time Workshop Embedded Coder is optional.</p>documentation,embedded code,execution profiling,production code,realtime workshop,utilities,verification,embedded code",10,1,1,1,6,set tool examples implement task execution profile real time workshop targetthis download include utility example code documentation documentation explain implement task execution profile custom target utility provide real time workshop utility allow record execution profile data automatically generate report graphic analyse task execution profile utility describe require real time workshop real time workshop embed coder optional codeexecution coderealtime code,"['set', 'tool', 'examples', 'implement', 'task', 'execution', 'profile', 'real', 'time', 'workshop', 'targetthis', 'download', 'include', 'utility', 'example', 'code', 'documentation', 'documentation', 'explain', 'implement', 'task', 'execution', 'profile', 'custom', 'target', 'utility', 'provide', 'real', 'time', 'workshop', 'utility', 'allow', 'record', 'execution', 'profile', 'data', 'automatically', 'generate', 'report', 'graphic', 'analyse', 'task', 'execution', 'profile', 'utility', 'describe', 'require', 'real', 'time', 'workshop', 'real', 'time', 'workshop', 'embed', 'coder', 'optional', 'codeexecution', 'coderealtime', 'code']",0
75,12837,"Demo files from the Webinar ""Introduction to Optimization with MATLAB(R) Products""  Oct. 26, 2006<p>This demo shows how to use MATLAB, Optimization Toolbox, and Genetic Algorithm and Direct Search Toolbox to optimize the design of a double wishbone suspension system. Note: You will need to have the following products installed in order to run this demo: MATLAB, Simulink, Optimization Toolbox, Genetic Algorithm and Direct Search Toolbox, and SimMechanics. Optional: Virtual Reality Toolbox.</p>3d,animation,direct search,genetic algorithms,optimization,pattern search,simulink,visualization,3d,animation,simulink,visualization,pattern search",467,43,6,0,505,demo file webinar introduction optimization product oct demo show optimization toolbox genetic algorithm direct search toolbox optimize design double wishbone suspension note need follow product instal order run demo optimization toolbox genetic algorithm direct search toolbox simmechanics optional virtual reality toolbox searchgenetic search,"['demo', 'file', 'webinar', 'introduction', 'optimization', 'product', 'oct', 'demo', 'show', 'optimization', 'toolbox', 'genetic', 'algorithm', 'direct', 'search', 'toolbox', 'optimize', 'design', 'double', 'wishbone', 'suspension', 'note', 'need', 'follow', 'product', 'instal', 'order', 'run', 'demo', 'optimization', 'toolbox', 'genetic', 'algorithm', 'direct', 'search', 'toolbox', 'simmechanics', 'optional', 'virtual', 'reality', 'toolbox', 'searchgenetic', 'search']",7
76,12884,"These files accompany the November 2006 article in MATLAB Digest<p>An accurate system model is one that performs as expected and produces the desired results. To achieve this level of accuracy you must have a clear modeling goal. For example, will the model be used strictly for simulation, or for generating embedded C code? This article describes five modeling techniques that can help ensure accuracy:    * Select the right modeling approach    * Know your system, understand its dynamics    * Monitor for unacceptable results    * Verify simulation results    * Understand modeling assumptionsThe full article can be found here:<a href=""https://www.mathworks.com/company/newsletters/articles/building-accurate-realistic-simulink-models.html"">https://www.mathworks.com/company/newsletters/articles/building-accurate-realistic-simulink-models.html</a> </p>accuracy,accurate modeling,article,paper,simulink,white paper,whitepaper",506,65,4,0,524,file accompany november article digestan accurate one performs expect produce desire result achieve level accuracy must clear goal example strictly generate embed code article describe five modeling technique help ensure accuracy select right approach know understand dynamic monitor unacceptable result verify result understand assumptionsthe full article find mathworks com company newsletter article build accurate realistic html paperwhitepaper,"['file', 'accompany', 'november', 'article', 'digestan', 'accurate', 'one', 'performs', 'expect', 'produce', 'desire', 'result', 'achieve', 'level', 'accuracy', 'must', 'clear', 'goal', 'example', 'strictly', 'generate', 'embed', 'code', 'article', 'describe', 'five', 'modeling', 'technique', 'help', 'ensure', 'accuracy', 'select', 'right', 'approach', 'know', 'understand', 'dynamic', 'monitor', 'unacceptable', 'result', 'verify', 'result', 'understand', 'assumptionsthe', 'full', 'article', 'find', 'mathworks', 'com', 'company', 'newsletter', 'article', 'build', 'accurate', 'realistic', 'html', 'paperwhitepaper']",0
77,12989,"Acquire live oscilloscope data directly into Simulink model<p>This basic model shows you how to acquire live data from a Tektronix oscilloscope into Simulink.   This model was developed for the Tektronix TDS 2012 oscilloscope but may work with other Tektronix scopes with little or no modifications.   To view the results, double click on each ""scope"" block in the model to view the waveform acquired, then right click and select ""Autoscale"".Learn more about Instrument Control Toolbox at: <a href=""http://www.mathworks.com/products/instrumentLearn"">http://www.mathworks.com/products/instrumentLearn</a> more about using Instrument Control Toolbox with Tektronix instruments at: <a href=""https://www.mathworks.com/products/instrument/supported/tektronix.html"">https://www.mathworks.com/products/instrument/supported/tektronix.html</a></p>dsp,instrument control,simulink,simulink tektronix instrument control tek tds tekvisa,tds,tek,tektronix,tekvisa",16,2,3,0,7,acquire live oscilloscope data directly modelthis basic show acquire live data tektronix oscilloscope develop tektronix tds oscilloscope may work tektronix scope little modification view result double click scope block view waveform acquire right click select autoscale learn instrument control toolbox http mathworks com product instrumentlearn instrument control toolbox tektronix instrument mathworks com product instrument support tektronix tektronix instrument control tek tds,"['acquire', 'live', 'oscilloscope', 'data', 'directly', 'modelthis', 'basic', 'show', 'acquire', 'live', 'data', 'tektronix', 'oscilloscope', 'develop', 'tektronix', 'tds', 'oscilloscope', 'may', 'work', 'tektronix', 'scope', 'little', 'modification', 'view', 'result', 'double', 'click', 'scope', 'block', 'view', 'waveform', 'acquire', 'right', 'click', 'select', 'autoscale', 'learn', 'instrument', 'control', 'toolbox', 'http', 'mathworks', 'com', 'product', 'instrumentlearn', 'instrument', 'control', 'toolbox', 'tektronix', 'instrument', 'mathworks', 'com', 'product', 'instrument', 'support', 'tektronix', 'tektronix', 'instrument', 'control', 'tek', 'tds']",0
78,13305,"This example demonstrates one approach using Embedded MATLAB to output strings from a Stateflow char<p>Strings are commonly allocated in Stateflow through the use of an array that is a container of ASCII values.  When reviewing the model, it is not immediately apparent what the ASCII values represent so it is ideal to be able to use actual character strings.  This example demonstrates how an Embedded MATLAB function can be used to allocate character strings and assign a variable in Stateflow equal to the string.</p>eml,stateflow,string",3,0,1,0,2,example demonstrate one approach embed output string stateflow charstrings commonly allocate stateflow array container ascii value review immediately apparent ascii value represent ideal able actual character string example demonstrate embed function allocate character string assign variable stateflow equal string,"['example', 'demonstrate', 'one', 'approach', 'embed', 'output', 'string', 'stateflow', 'charstrings', 'commonly', 'allocate', 'stateflow', 'array', 'container', 'ascii', 'value', 'review', 'immediately', 'apparent', 'ascii', 'value', 'represent', 'ideal', 'able', 'actual', 'character', 'string', 'example', 'demonstrate', 'embed', 'function', 'allocate', 'character', 'string', 'assign', 'variable', 'stateflow', 'equal', 'string']",5
79,13332,"This blockset is for modeling and visualization of the dynamics of differential drive vehicle robot.<p>The ?Differential Drive and Global Positioning Blockset? is the tool which can be used with SimulinkÂ® for modeling, designing, and simulation of the dynamics of a type of vehicle robots called differentially driven vehicle robot (robot which uses differential steering technique for locomotion). This tool carries the blocks with built-in Global Positioning algorithm (related to dead-reckoning), which are useful in finding out the current position and heading of the vehicle robot. This blockset will allow the scientists and engineers to build and simulate their models of vehicle robot using differential drive steering method according to their own design and specifications, and will enable to visualize the results in the form of model-driven animation.The blockset has seven different blocks: The PMDC Motor block, Gearbox block, Motor Driver block, Mechanical Dimensions block, Positioning block, Dual PID block and the Animation block. These blocks constitute a complete set of components by using which a complete model of a differentially driven vehicle robot can be built. The resulting model can be tested in the form of model-driven animation and the parameters of the model can be varied from the GUI provided in the animation window on the fly.The PMDC Motor block is a complete model of a Permanent magnet DC motor. A user can put its own parameter values of DC motor which he wants to use in the actual model of robot. This model also simulates the applied load on the motor shaft.Gearbox block is simulated gear-train whose gear-ratio can be set according to user specifications.Motor Driver block behaves like the practical motor driver circuits, using whose logical inputs the direction of PMDC motor can be reversed, and break can be applied.By including the Mechanical Dimensions block in the model user can implement the model of a differentially driven vehicle robot whose dynamic behavior will largely depend on the mechanical dimensions like drive wheel radii, robot platform length and width, and location of drive wheels in robot platform.Positioning block calculates the current position of the vehicle robot turning center in Global Coordinate System.Dual PID Control block provides a pair of PID controllers for each motor of the differential drive system for speed control.Finally, the Animation Block generates animation of the designed differentially driven vehicle robot according to model specifications. The animation window also provides the GUI in the form of different sliders using which the angular velocities of the wheels can be varied, and also the direction of the motors can be reversed during simulation.</p>automotive,control design,differentials,global positioning,gui,simulation,simulink,vehicle robot,electric_motor_control,power_conversion_control,power_electronics_control",59,14,3,9,60,blockset visualization dynamic differential drive vehicle robot differential drive global positioning blockset tool design dynamic type vehicle robot call differentially driven vehicle robot robot differential steer technique locomotion tool carry block build global positioning algorithm relate dead reckon useful find current position head vehicle robot blockset allow scientist engineer build vehicle robot differential drive steer method accord design specification enable visualize result form driven animation blockset seven different block pmdc motor block gearbox block motor driver block mechanical dimension block position block dual pid block animation block block constitute complete set component complete differentially driven vehicle robot build result tested form drive animation parameter vary gui provide animation window fly pmdc motor block complete permanent magnet motor user put parameter value motor want actual robot also apply load motor shaft gearbox block gear train whose gear ratio set accord user specification motor driver block behaves like practical motor driver circuit whose logical input direction pmdc motor reverse break apply include mechanical dimension block user implement differentially driven vehicle robot whose dynamic behavior largely depend mechanical dimension like drive wheel radius robot platform length width location drive wheel robot platform positioning block calculate current position vehicle robot turn center global coordinate dual pid control block provide pair pid controller motor differential drive speed control finally animation block generates animation design differentially drive vehicle robot accord specification animation window also provide gui form different slider angular velocity wheel vary also direction motor reverse robotelectric motor controlpower conversion controlpower electronics control,"['blockset', 'visualization', 'dynamic', 'differential', 'drive', 'vehicle', 'robot', 'differential', 'drive', 'global', 'positioning', 'blockset', 'tool', 'design', 'dynamic', 'type', 'vehicle', 'robot', 'call', 'differentially', 'driven', 'vehicle', 'robot', 'robot', 'differential', 'steer', 'technique', 'locomotion', 'tool', 'carry', 'block', 'build', 'global', 'positioning', 'algorithm', 'relate', 'dead', 'reckon', 'useful', 'find', 'current', 'position', 'head', 'vehicle', 'robot', 'blockset', 'allow', 'scientist', 'engineer', 'build', 'vehicle', 'robot', 'differential', 'drive', 'steer', 'method', 'accord', 'design', 'specification', 'enable', 'visualize', 'result', 'form', 'driven', 'animation', 'blockset', 'seven', 'different', 'block', 'pmdc', 'motor', 'block', 'gearbox', 'block', 'motor', 'driver', 'block', 'mechanical', 'dimension', 'block', 'position', 'block', 'dual', 'pid', 'block', 'animation', 'block', 'block', 'constitute', 'complete', 'set', 'component', 'complete', 'differentially', 'driven', 'vehicle', 'robot', 'build', 'result', 'tested', 'form', 'drive', 'animation', 'parameter', 'vary', 'gui', 'provide', 'animation', 'window', 'fly', 'pmdc', 'motor', 'block', 'complete', 'permanent', 'magnet', 'motor', 'user', 'put', 'parameter', 'value', 'motor', 'want', 'actual', 'robot', 'also', 'apply', 'load', 'motor', 'shaft', 'gearbox', 'block', 'gear', 'train', 'whose', 'gear', 'ratio', 'set', 'accord', 'user', 'specification', 'motor', 'driver', 'block', 'behaves', 'like', 'practical', 'motor', 'driver', 'circuit', 'whose', 'logical', 'input', 'direction', 'pmdc', 'motor', 'reverse', 'break', 'apply', 'include', 'mechanical', 'dimension', 'block', 'user', 'implement', 'differentially', 'driven', 'vehicle', 'robot', 'whose', 'dynamic', 'behavior', 'largely', 'depend', 'mechanical', 'dimension', 'like', 'drive', 'wheel', 'radius', 'robot', 'platform', 'length', 'width', 'location', 'drive', 'wheel', 'robot', 'platform', 'positioning', 'block', 'calculate', 'current', 'position', 'vehicle', 'robot', 'turn', 'center', 'global', 'coordinate', 'dual', 'pid', 'control', 'block', 'provide', 'pair', 'pid', 'controller', 'motor', 'differential', 'drive', 'speed', 'control', 'finally', 'animation', 'block', 'generates', 'animation', 'design', 'differentially', 'drive', 'vehicle', 'robot', 'accord', 'specification', 'animation', 'window', 'also', 'provide', 'gui', 'form', 'different', 'slider', 'angular', 'velocity', 'wheel', 'vary', 'also', 'direction', 'motor', 'reverse', 'robotelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",0
80,13438,"A simple C S-function which reads data from a file during simulation.<p>S-functions are used to create user defined blocks in Simulink.  This S-function creates a block that reads data from a file incrementally at each time step of the Simulink simulation.The S-function was written in C and uses the standard file I/O functions from the stdio.h library (fopen, fscanf, fclose).  It is intended merely as an example.  The trickiest part of writing S-functions can sometimes be maintaining  persistent data in subsequent calls to the S-function.  This issue presents itself in this example.  In order to read from the file throughout the simulation without closing and reopening the file each time step, the FILE pointer is stored in the PWork vector.  This gives the S-function access to the FILE pointer at each step in the simulation.In this S-function, the mdlStart function opens the file at the start of the simulation and the mdlTerminate function closes the file at the end.  The mdlOutputs function is used to read data from the file at every time step.To run the example:1) Entermex -setupat the MATLAB Command Prompt and select a compiler2) Copy the attached files to the current MATLAB directory3) Entermex cfileiosfun.cto compile the S-function4) Open the attached model and simulate.</p>c,cmex,data export,data import,fscanf,input,mex,output,sfunction,stdioh,c,cmex,fscanf,input,mex,output,sfunction,stdioh,cmex,data import,c,stdioh",2,0,1,0,1,simple function read data file function create user defined block function create block read data file incrementally time step function write standard file function stdio fopen fscanf fclose intend merely example tricky part write function sometimes maintain persistent data subsequent call function issue present example order read file throughout without close reopen file time step file pointer store pwork vector give function access file pointer step function mdlstart function open file start mdlterminate function close file end mdloutputs function read data file every time step run example entermex setupat command prompt select compiler copy attach file current directory entermex cfileiosfun cto compile function open attach ccmexdata exportdata importcstdioh,"['simple', 'function', 'read', 'data', 'file', 'function', 'create', 'user', 'defined', 'block', 'function', 'create', 'block', 'read', 'data', 'file', 'incrementally', 'time', 'step', 'function', 'write', 'standard', 'file', 'function', 'stdio', 'fopen', 'fscanf', 'fclose', 'intend', 'merely', 'example', 'tricky', 'part', 'write', 'function', 'sometimes', 'maintain', 'persistent', 'data', 'subsequent', 'call', 'function', 'issue', 'present', 'example', 'order', 'read', 'file', 'throughout', 'without', 'close', 'reopen', 'file', 'time', 'step', 'file', 'pointer', 'store', 'pwork', 'vector', 'give', 'function', 'access', 'file', 'pointer', 'step', 'function', 'mdlstart', 'function', 'open', 'file', 'start', 'mdlterminate', 'function', 'close', 'file', 'end', 'mdloutputs', 'function', 'read', 'data', 'file', 'every', 'time', 'step', 'run', 'example', 'entermex', 'setupat', 'command', 'prompt', 'select', 'compiler', 'copy', 'attach', 'file', 'current', 'directory', 'entermex', 'cfileiosfun', 'cto', 'compile', 'function', 'open', 'attach', 'ccmexdata', 'exportdata', 'importcstdioh']",7
81,13528,"This model implements cordic algorithm using embedded MATLAB blocks<p>Cordic is a shift-add based algorithm to compute wide range of functions especially trigonometric functions. See the paper ""A survey of CORDIC algorithms for FPGA based Computes"" by Ray Andraka for more details.</p>cordic,dds,embedded matlab,fpga,hdl,cordic,embedded matlab,fpga,hdl,cordic,cordic,embedded matlab,cordic,embedded matlab,fpga,hdl,dds",111,9,4,0,135,implement cordic algorithm embedded blockscordic shift add base algorithm compute wide range function especially trigonometric function see paper survey cordic algorithm fpga base computes ray andraka detail,"['implement', 'cordic', 'algorithm', 'embedded', 'blockscordic', 'shift', 'add', 'base', 'algorithm', 'compute', 'wide', 'range', 'function', 'especially', 'trigonometric', 'function', 'see', 'paper', 'survey', 'cordic', 'algorithm', 'fpga', 'base', 'computes', 'ray', 'andraka', 'detail']",0
82,13547,"Using Simulink with serial devices - example model<p>Simulink supports serial devices including RS-232 using Instrument Control Toolbox. This basic Simulink example shows you how to configure and acquire data from an RS-232 serial device.  An oscilloscope was used as the serial device in this model, but the model can be adapted for other devices.Learn more about using Simulink with serial devices at:<a href=""https://www.mathworks.com/products/instrument/supported/serial.html"">https://www.mathworks.com/products/instrument/supported/serial.html</a> </p>application,example,model,rs232,serial,simulink,simulink rs232,simulink serial",137,2,3,0,176,serial device example support serial device include instrument control toolbox basic example show configure acquire data serial device oscilloscope serial device adapt device learn serial device mathworks com product instrument support serial html serial,"['serial', 'device', 'example', 'support', 'serial', 'device', 'include', 'instrument', 'control', 'toolbox', 'basic', 'example', 'show', 'configure', 'acquire', 'data', 'serial', 'device', 'oscilloscope', 'serial', 'device', 'adapt', 'device', 'learn', 'serial', 'device', 'mathworks', 'com', 'product', 'instrument', 'support', 'serial', 'html', 'serial']",7
83,13667,"Example Simulink model to support MATLAB Digest article from January 2007.<p>Aerospace Toolbox 1.0 and Aerospace Blockset 2.2 made it easier to model and simulate aircraft dynamics in Simulink.The attached files contain the simulation of longitudinal dynamics of a new light aircraft design described in January 2007 MATLAB Digest article by Arkadiy Turevskiy, Stacey Gage, and Craig Buhr:<a href=""https://www.mathworks.com/company/newsletters/articles/accelerating-flight-vehicle-design.html"">https://www.mathworks.com/company/newsletters/articles/accelerating-flight-vehicle-design.html</a> Instructions:* Unzip the files into a new directory* skyhogg3dof.mdl is a Simulink model described in the artcle* Control_Design.mat is a file that describes control design done using Simulink Control Design* skyhogg3dof_slwebview.html is a web view of the model</p>aeronautics,aerospace,aerospace blockset,aerospace toolbox,digital datcom,web view",423,29,6,0,528,example support digest article january aerospace toolbox aerospace blockset make easy aircraft dynamic attach file contain longitudinal dynamic new light aircraft design describe january digest article arkadiy turevskiy stacey gage craig buhr mathworks com company newsletter article accelerate flight vehicle design html instruction unzip file new directory skyhogg dof mdl describe artcle control design mat file describes control design control design skyhogg dof slwebview html web view toolboxdigital datcomweb view,"['example', 'support', 'digest', 'article', 'january', 'aerospace', 'toolbox', 'aerospace', 'blockset', 'make', 'easy', 'aircraft', 'dynamic', 'attach', 'file', 'contain', 'longitudinal', 'dynamic', 'new', 'light', 'aircraft', 'design', 'describe', 'january', 'digest', 'article', 'arkadiy', 'turevskiy', 'stacey', 'gage', 'craig', 'buhr', 'mathworks', 'com', 'company', 'newsletter', 'article', 'accelerate', 'flight', 'vehicle', 'design', 'html', 'instruction', 'unzip', 'file', 'new', 'directory', 'skyhogg', 'dof', 'mdl', 'describe', 'artcle', 'control', 'design', 'mat', 'file', 'describes', 'control', 'design', 'control', 'design', 'skyhogg', 'dof', 'slwebview', 'html', 'web', 'view', 'toolboxdigital', 'datcomweb', 'view']",0
84,13721,"Parallel and co-simulations with Simulink(R), integration with simServer<p>This is a Simulink(R) library with blocks that can connect to the simServer for distributed and co-simulation. This version includes all necessary files including the simServer and a library for custom application integrations. The blocks in this library will connect to the simServer through TCP/IP when the simulation is started. Remember that you can not connect two models with simServer blocks from the same MATLAB(R) instance. To simulate on one computer you need to start one MATLAB instance for each model. With these blocks you can distribute a complex simulation on a cluster for more efficient simulations or connect different simulation environments for co-simulation. To install: Unpack the zip-file in a directory and add the simulink library folder to your your matlab path (or run the setup.m file). </p>distributed parallel cosimulation tcp udp,parallel computing,distributed parallel cosimulation tcp udp,distributed processing,parallel computing,distributed parallel cosimulation tcp udp,distributed parallel cosimulation tcp udp,distributed parallel cosimulation tcp udp,distributed processing,parallel computing,distributed processing,distributed parallel cosimulation tcp udp,distributed parallel cosimulation tcp udp,distributed processing,parallel computing",2707,239,6,10,2187,parallel integration simserverthis block connect simserver distribute version include necessary file include simserver custom application integration block connect simserver tcp start remember connect two simserver block instance one computer need start one instance block distribute complex cluster efficient connect different environment install unpack zip file directory add folder path run setup file distribute parallel tcp udpparallel parallel tcp udpdistributed parallel tcp udpdistributed parallel tcp udpdistributed parallel tcp udpdistributed parallel tcp udpdistributed parallel tcp udpdistributed compute,"['parallel', 'integration', 'simserverthis', 'block', 'connect', 'simserver', 'distribute', 'version', 'include', 'necessary', 'file', 'include', 'simserver', 'custom', 'application', 'integration', 'block', 'connect', 'simserver', 'tcp', 'start', 'remember', 'connect', 'two', 'simserver', 'block', 'instance', 'one', 'computer', 'need', 'start', 'one', 'instance', 'block', 'distribute', 'complex', 'cluster', 'efficient', 'connect', 'different', 'environment', 'install', 'unpack', 'zip', 'file', 'directory', 'add', 'folder', 'path', 'run', 'setup', 'file', 'distribute', 'parallel', 'tcp', 'udpparallel', 'parallel', 'tcp', 'udpdistributed', 'parallel', 'tcp', 'udpdistributed', 'parallel', 'tcp', 'udpdistributed', 'parallel', 'tcp', 'udpdistributed', 'parallel', 'tcp', 'udpdistributed', 'parallel', 'tcp', 'udpdistributed', 'compute']",0
85,13860,"pressure, temperature or level control of one tank or two series tank(interacting or noninteracting)<p>this program simulate control of one tank or two series tank(interacting or noninteracting) against pressure, temperature or level changing.this program merge simulink and matlab graphic to create interactive animationin this program you can modify any part of system such as controller parameter, volume of tank(s), time of simulation and etc ...Input Step, Impulse and SinusProcessone tank or two series tank(interacting or noninteracting)Load of systempressure, temperature or levelOutputinteractive animation</p>control,level,pressure,simulink,tank,temperature",165,8,3,0,171,pressure temperature level control one tank two series tank interact noninteracting program control one tank two series tank interact noninteracting pressure temperature level change program merge graphic create interactive animationin program modify part controller parameter volume tank time etc input step impulse sinusprocessone tank two series tank interact noninteracting load systempressure temperature,"['pressure', 'temperature', 'level', 'control', 'one', 'tank', 'two', 'series', 'tank', 'interact', 'noninteracting', 'program', 'control', 'one', 'tank', 'two', 'series', 'tank', 'interact', 'noninteracting', 'pressure', 'temperature', 'level', 'change', 'program', 'merge', 'graphic', 'create', 'interactive', 'animationin', 'program', 'modify', 'part', 'controller', 'parameter', 'volume', 'tank', 'time', 'etc', 'input', 'step', 'impulse', 'sinusprocessone', 'tank', 'two', 'series', 'tank', 'interact', 'noninteracting', 'load', 'systempressure', 'temperature']",4
86,13978,"Files from webinar on Industrial control of a steel rolling mill<p>Multi-domain model of a steel rolling mill stand with elements for the roll &amp; plate, hydraulic system, and electrical motors. Also includes a saved sisotool session with a multi-loop controller design to control plate thickness and velocity. The control design is also setup to run an optimization to fine tune the controller parameters.The followup ""Modeling and Control of Multi Stage Rolling Mill Process"" extends this model with multiple rolling mill stands and inter-stand tension control. See, <a href=""http://www.mathworks.com/matlabcentral/fileexchange/28386-modeling-and-control-of-multi-stage-rolling-mill-process"">http://www.mathworks.com/matlabcentral/fileexchange/28386-modeling-and-control-of-multi-stage-rolling-mill-process</a>, for more information.</p>industrial control,optimization,steel mill,industrial control,steel mill,industrial control,optimization,steel mill,electric_motor_control,power_electronics_control",221,25,4,0,213,file webinar industrial control steel roll millmulti domain steel roll mill stand element roll amp plate hydraulic electrical motor also include saved sisotool session multi loop controller design control plate thickness velocity control design also setup run optimization fine tune controller parameter followup control multi stage roll mill process extend multiple roll mill stand inter stand tension control see http mathworks com matlabcentral fileexchange control multi stage roll mill process information industrial millindustrial controlsteel millindustrial millelectric motor controlpower electronics control,"['file', 'webinar', 'industrial', 'control', 'steel', 'roll', 'millmulti', 'domain', 'steel', 'roll', 'mill', 'stand', 'element', 'roll', 'amp', 'plate', 'hydraulic', 'electrical', 'motor', 'also', 'include', 'saved', 'sisotool', 'session', 'multi', 'loop', 'controller', 'design', 'control', 'plate', 'thickness', 'velocity', 'control', 'design', 'also', 'setup', 'run', 'optimization', 'fine', 'tune', 'controller', 'parameter', 'followup', 'control', 'multi', 'stage', 'roll', 'mill', 'process', 'extend', 'multiple', 'roll', 'mill', 'stand', 'inter', 'stand', 'tension', 'control', 'see', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'control', 'multi', 'stage', 'roll', 'mill', 'process', 'information', 'industrial', 'millindustrial', 'controlsteel', 'millindustrial', 'millelectric', 'motor', 'controlpower', 'electronics', 'control']",4
87,14492,"Patterns and examples of various hardware elements implemented using Embedded MATLAB<p>This model illustrates how to use Embedded MATLAB block in a Simulink model to code various basic blocks of a hardware design.Some of the interesting examples include Counters,Shifters,DelayElements etc.,</p>hdl,asicfpga,embedded matlab,embedded matlab examples,hdl,simulink",168,32,5,0,124,pattern examples various hardware element implement embed matlabthis illustrate embedded block code various basic block hardware design interesting example include etc matlabembedded,"['pattern', 'examples', 'various', 'hardware', 'element', 'implement', 'embed', 'matlabthis', 'illustrate', 'embedded', 'block', 'code', 'various', 'basic', 'block', 'hardware', 'design', 'interesting', 'example', 'include', 'etc', 'matlabembedded']",7
88,14590,"simulink model to measure the soil resistivity<p>in this model the user can select the soil type from the model , also the user can select the sun status in order to choose the weather conditions that affect the ground resistance.</p>electronic circuit for measuring soil resistivity ground resista,electronics",14,2,2,0,11,measure soil resistivityin user select soil type also user select sun status order choose weather condition affect ground resistance electronic circuit measure soil resistivity ground,"['measure', 'soil', 'resistivityin', 'user', 'select', 'soil', 'type', 'also', 'user', 'select', 'sun', 'status', 'order', 'choose', 'weather', 'condition', 'affect', 'ground', 'resistance', 'electronic', 'circuit', 'measure', 'soil', 'resistivity', 'ground']",5
89,14611,"Frequency response signal analyzer for simulation control loops and dynamic systems<p>Frequency response signal analyzer for linear and non-linear control loops and dynamic systems.  Simulink model.  Sine sweep based similar to dynamic signal analyzers for physical systems.  User specifies: freq limits, freq decrement, averages, phase criteria for moving to next frequency, start time, input amplitude.  Output variable, freq_resp, with freq(rad/sec), closed loop magn, closed loop phase, open loop magn, open loop phase, time at each frequency.  Performs 1/(T^-1 - 1) to convert closed loop Transfer function to open loop.</p>dynamic signal analyzer frequency response control loop,dynamic signal analyzer frequency response control loop,dynamic signal analyzer frequency response control loop,dynamic signal analyzer frequency response control loop,dynamic signal analyzer frequency response control loop",141,10,4,0,163,frequency response signal analyzer control loop dynamic response signal analyzer linear non linear control loop dynamic sine sweep base similar dynamic signal analyzer physical user specifies freq limit freq decrement average phase criterion move next frequency start time input amplitude output variable freq resp freq rad sec close loop magn close loop phase open loop magn open loop phase time frequency performs convert close loop transfer function open loop dynamic signal analyzer frequency response control loopdynamic signal analyzer frequency response control loopdynamic signal analyzer frequency response control loopdynamic signal analyzer frequency response control loopdynamic signal analyzer frequency response control loop,"['frequency', 'response', 'signal', 'analyzer', 'control', 'loop', 'dynamic', 'response', 'signal', 'analyzer', 'linear', 'non', 'linear', 'control', 'loop', 'dynamic', 'sine', 'sweep', 'base', 'similar', 'dynamic', 'signal', 'analyzer', 'physical', 'user', 'specifies', 'freq', 'limit', 'freq', 'decrement', 'average', 'phase', 'criterion', 'move', 'next', 'frequency', 'start', 'time', 'input', 'amplitude', 'output', 'variable', 'freq', 'resp', 'freq', 'rad', 'sec', 'close', 'loop', 'magn', 'close', 'loop', 'phase', 'open', 'loop', 'magn', 'open', 'loop', 'phase', 'time', 'frequency', 'performs', 'convert', 'close', 'loop', 'transfer', 'function', 'open', 'loop', 'dynamic', 'signal', 'analyzer', 'frequency', 'response', 'control', 'loopdynamic', 'signal', 'analyzer', 'frequency', 'response', 'control', 'loopdynamic', 'signal', 'analyzer', 'frequency', 'response', 'control', 'loopdynamic', 'signal', 'analyzer', 'frequency', 'response', 'control', 'loopdynamic', 'signal', 'analyzer', 'frequency', 'response', 'control', 'loop']",4
90,14650,"A very simple simulations of digital modulations using system generator for Xilinx FPGAs<p>A very simple simulations of digital modulations using system generator for Xilinx FPGAs (ASK, BPSK, FSK, OOK, QPSK)For more information, visit: <a href=""http://www.matpic.com"">http://www.matpic.com</a></p>ask,bpsk,digital modulation,fsk,ook,qpsk,xilinx fpgas,fsk,qpsk,ask,digital modulation,bpsk,ask,ask",105,3,2,0,97,simple digital modulation generator xilinx fpgasa simple digital modulation generator xilinx fpgas ask bpsk fsk ook qpsk information visit http matpic,"['simple', 'digital', 'modulation', 'generator', 'xilinx', 'fpgasa', 'simple', 'digital', 'modulation', 'generator', 'xilinx', 'fpgas', 'ask', 'bpsk', 'fsk', 'ook', 'qpsk', 'information', 'visit', 'http', 'matpic']",5
91,14868,"A tutorial showing how Phase-Locked Loops, both analog and digital can be efficiently modeling in Si<p>This tutorial starts with a simple conceptual model of an analog Phase-Locked Loop (PLL). Through elaboration it ends at a model of an all digital and fixed-point phase-locked loop. The final model can serve a starting point for code generation (both ANSI C or synthesizable HDL).The step-wise elaboration of the model illustrates how SimulinkÂ® forms the basis a model-based design where continuous verification of the model reduces errors.</p>dsp,pll vco nco phase locked loop control charge pump,dsp,pll vco nco phase locked loop control charge pump,dsp,pll vco nco phase locked loop control charge pump,pll vco nco phase locked loop control charge pump,dsp,dsp,pll vco nco phase locked loop control charge pump,dsp,pll vco nco phase locked loop control charge pump,pll vco nco phase locked loop control charge pump,dsp,dsp",102,10,3,0,101,tutorial show phase lock loop analog digital efficiently sithis tutorial start simple conceptual analog phase lock loop pll elaboration end digital fixed point phase lock loop final serve start point code generation ansi synthesizable hdl step wise elaboration illustrate form basis base design continuous verification reduces error dsppll vco nco phase lock loop control charge pumpdsppll vco nco phase lock loop control charge pumpdsppll vco nco phase lock loop control charge pumppll vco nco phase lock loop control charge pumpdspdsppll vco nco phase lock loop control charge pumpdsppll vco nco phase lock loop control charge pumppll vco nco phase lock loop control charge pumpdspdsp,"['tutorial', 'show', 'phase', 'lock', 'loop', 'analog', 'digital', 'efficiently', 'sithis', 'tutorial', 'start', 'simple', 'conceptual', 'analog', 'phase', 'lock', 'loop', 'pll', 'elaboration', 'end', 'digital', 'fixed', 'point', 'phase', 'lock', 'loop', 'final', 'serve', 'start', 'point', 'code', 'generation', 'ansi', 'synthesizable', 'hdl', 'step', 'wise', 'elaboration', 'illustrate', 'form', 'basis', 'base', 'design', 'continuous', 'verification', 'reduces', 'error', 'dsppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumpdsppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumpdsppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumpdspdsppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumpdsppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumppll', 'vco', 'nco', 'phase', 'lock', 'loop', 'control', 'charge', 'pumpdspdsp']",4
92,14901,"Example models that show the use of diagnostics to improve the model.<p>These models demonstrate the usefulness of the following SimulinkÂ® diagnostics:- Solver Settings- Connectivity: Mux used to create bus signals</p>article,bus,diagnostics,paper,sample,simulink,time,whitepaper",19,0,1,0,17,example show diagnostics improve demonstrate usefulness follow diagnostics solver setting connectivity mux create bus,"['example', 'show', 'diagnostics', 'improve', 'demonstrate', 'usefulness', 'follow', 'diagnostics', 'solver', 'setting', 'connectivity', 'mux', 'create', 'bus']",0
93,15268,"using Embedded MATLAB block effectively in Simulink<p>Embedded MATLAB block provides a way of bringing restricted subset of MATLAB into Simulink. There are couple of possibilities when moving untimed MATLAB algorithms into Simulink. This demo illustrates two such alternatives in porting a sample viterbi algorithm (written in M) into Simulink using embedded MATLAB. The subsystem 'eML_viterbi_ex1' implements the whole algorithm in a single monolithic embedded MATLAB block, where as 'eML_viterbi_ex2' has a similar implementation but broken down into multiple embedded MATLAB  blocks. The former approach can be used to quickly port existing M code into Simulink and verify that it works the same using the debugging capabilities provided by embedded MATLAB block coupled with signal logging and data visualization capabilities provided by Simulink.The latter approach has the visual appeal and shows the break down of complex piece of logic in mutilple blocks and graphically displays the hierarchy and data flow. In this case the algorithm is broken down into Brach Metric, Path Metric and Trace back units. The Path Metric is further broken down to Add Compare Seelect and Renormalization units. One of the further advantages of breaking down the algorithm into multiple blocks is that when going for hardware implementation of this algorithm, tradeoffs between area and speed can be explored by placing pipeline registers (integer delay blocks) between blocks and to identify critical path etc.,</p>dsp,embedded matlab,fpga,simulink,viterbi,fpga,fpga,fpga,dsp,dsp,dsp",78,6,3,0,104,embed block effectively block provide way bring restrict subset couple possibility move untimed algorithms demo illustrate two alternative port sample viterbi algorithm write embedded subsystem eml viterbi implement whole algorithm single monolithic embed block eml viterbi similar implementation broken multiple embed block former approach quickly port exist code verify work debug capability provide embedded block couple signal logging data visualization capability provide latter approach visual appeal show break complex piece logic mutilple block graphically display hierarchy data flow case algorithm break brach metric path metric trace back unit path metric broken add compare seelect renormalization unit one advantage break algorithm multiple block hardware implementation algorithm tradeoff area speed explore place pipeline register integer delay block block identify critical path etc dspembedded,"['embed', 'block', 'effectively', 'block', 'provide', 'way', 'bring', 'restrict', 'subset', 'couple', 'possibility', 'move', 'untimed', 'algorithms', 'demo', 'illustrate', 'two', 'alternative', 'port', 'sample', 'viterbi', 'algorithm', 'write', 'embedded', 'subsystem', 'eml', 'viterbi', 'implement', 'whole', 'algorithm', 'single', 'monolithic', 'embed', 'block', 'eml', 'viterbi', 'similar', 'implementation', 'broken', 'multiple', 'embed', 'block', 'former', 'approach', 'quickly', 'port', 'exist', 'code', 'verify', 'work', 'debug', 'capability', 'provide', 'embedded', 'block', 'couple', 'signal', 'logging', 'data', 'visualization', 'capability', 'provide', 'latter', 'approach', 'visual', 'appeal', 'show', 'break', 'complex', 'piece', 'logic', 'mutilple', 'block', 'graphically', 'display', 'hierarchy', 'data', 'flow', 'case', 'algorithm', 'break', 'brach', 'metric', 'path', 'metric', 'trace', 'back', 'unit', 'path', 'metric', 'broken', 'add', 'compare', 'seelect', 'renormalization', 'unit', 'one', 'advantage', 'break', 'algorithm', 'multiple', 'block', 'hardware', 'implementation', 'algorithm', 'tradeoff', 'area', 'speed', 'explore', 'place', 'pipeline', 'register', 'integer', 'delay', 'block', 'block', 'identify', 'critical', 'path', 'etc', 'dspembedded']",0
94,15309,"Two Communications Blockset models that show how to implement a link budget.<p>The AWGN Channel Block in the Communications Blockset lets you specify SNR in several ways, including Eb/No.  Sometimes people want to use a more itemized way of specifying the SNR, like the itemization found in a link budget.These two models show how to create equivalent implementations of a communication channel, one using the AWGN Channel block and the other using specifications for Transmitter Gain, Antenna Gain, Path Loss, and Receiver Noise Temperature.</p>communications blockset,link budget,phy layer,snr,link budget,link budget",23,2,3,0,23,two communication blockset show implement link budget awgn channel block communication blockset let specify snr several way include sometimes people want itemized way specify snr like itemization find link budget two show create equivalent implementation communication channel one awgn channel block specification transmitter gain antenna gain path loss receiver noise temperature communication blocksetlink budgetphy layersnrlink budgetlink budget,"['two', 'communication', 'blockset', 'show', 'implement', 'link', 'budget', 'awgn', 'channel', 'block', 'communication', 'blockset', 'let', 'specify', 'snr', 'several', 'way', 'include', 'sometimes', 'people', 'want', 'itemized', 'way', 'specify', 'snr', 'like', 'itemization', 'find', 'link', 'budget', 'two', 'show', 'create', 'equivalent', 'implementation', 'communication', 'channel', 'one', 'awgn', 'channel', 'block', 'specification', 'transmitter', 'gain', 'antenna', 'gain', 'path', 'loss', 'receiver', 'noise', 'temperature', 'communication', 'blocksetlink', 'budgetphy', 'layersnrlink', 'budgetlink', 'budget']",0
95,15367,"Templates modeling common schedule implementations<p>The complete set of software in a electronic control unit (ECU) consists of an operation system, hardware drivers, control algorithms and scheduling software.  SimulinkÂ® is typically used to model the systems control algorithms with a basic scheduler.  However Simulink and StateflowÂ® allow users to model a variety of scheduling behaviors.  This paper introduces these basic scheduling configurations and provides a set of model templates that allow the user to quick implement their scheduling environment.Creation of a scheduler in Simulink and or Stateflow requires both the setting model configuration options and implementing a scheduling architecture.  This paper covers both topics and how the two topics interact.The final topic of this paper is how the code generated by Real-Time WorkshopÂ® Embedded Coder interfaces can be integrated with external scheduling environment</p>control,ecu,electronic,embedded code,modeling,realtime workshop,scheduling,templates,unit,verification,scheduling",62,8,2,0,52,template common schedule complete set software electronic control unit ecu consist operation hardware driver control algorithms scheduling software typically used control algorithms basic scheduler however stateflow allow user variety schedule behavior paper introduces basic schedule configuration provide set template allow user quick implement schedule environment creation scheduler stateflow require set configuration option implement scheduling architecture paper cover topic two topic interact final topic paper code generate real time workshop embed coder interface integrate external scheduling,"['template', 'common', 'schedule', 'complete', 'set', 'software', 'electronic', 'control', 'unit', 'ecu', 'consist', 'operation', 'hardware', 'driver', 'control', 'algorithms', 'scheduling', 'software', 'typically', 'used', 'control', 'algorithms', 'basic', 'scheduler', 'however', 'stateflow', 'allow', 'user', 'variety', 'schedule', 'behavior', 'paper', 'introduces', 'basic', 'schedule', 'configuration', 'provide', 'set', 'template', 'allow', 'user', 'quick', 'implement', 'schedule', 'environment', 'creation', 'scheduler', 'stateflow', 'require', 'set', 'configuration', 'option', 'implement', 'scheduling', 'architecture', 'paper', 'cover', 'topic', 'two', 'topic', 'interact', 'final', 'topic', 'paper', 'code', 'generate', 'real', 'time', 'workshop', 'embed', 'coder', 'interface', 'integrate', 'external', 'scheduling']",0
96,15368,"Methods for removing data dependencies with a minimum number of blocks<p>Creation of a system by integrating multiple validated subcomponents is a task common to SimulinkÂ® and C.  In both environments integration issues arise as the number of components increases.  Problems include miss-matched data types, scaling and ensuring the correct signals are available, to name a few.  These are all challenges that systems integrators are used to solving.  However; the integration process in Simulink exposes data dependency issues that are normally hidden in the C development environment.Data dependency is the requirement that for any calculation, all the values on the right hand side (RHS) of equation are known prior to starting the calculation.  The value on the left hand (LHS) side is dependent on the values of the right hand side.  In the contexts of subsystems, the concept of calculation order is equivalent to execution order of the subsystems.LHSn = f (RHSn)The C language does not prevent users from writing equations where the LHS is assigned before the RHS.  This means that an old or non-initialized data can be used which can result in unexpected or incorrect results.LHSn = f (RHSn-1)LHSn = f (??)Unlike C, Simulink contains built in analysis tools that prevent this from happening.  Users of Simulink are familiar with these diagnostic, which are most commonly referred to as algebraic loops.  Loops are broken by explicitly setting the order of calculation.    This paper focuses on how to easily and systematically break these loops.Two methods are covered in this paper, using function-call subsystems and unit delay blocks.  Both of these methods can be used to define the execution order of the system.</p>algebric loops,article,articles,paper,scheduling,whitepaper,whitepapers",791,64,2,0,894,method remove data dependency minimum number blockscreation integrate multiple validated subcomponents task common environment integration issue arise number component increase problem include miss match data type scale ensure correct signal available name challenge integrator solve however integration process expose data dependency issue normally hide development environment data dependency requirement calculation value right hand side rhs equation know prior start calculation value leave hand lhs side dependent value right hand side context subsystems concept calculation order equivalent execution order subsystems lhsn rhsn language prevent user write equation lhs assign mean old non initialize data result unexpected incorrect result lhsn rhsn lhsn unlike contains build analysis tool prevent happen user familiar diagnostic commonly refer algebraic loop loop break explicitly set order calculation paper focus easily systematically break loop two method cover paper function call subsystems unit delay block method define execution order algebric,"['method', 'remove', 'data', 'dependency', 'minimum', 'number', 'blockscreation', 'integrate', 'multiple', 'validated', 'subcomponents', 'task', 'common', 'environment', 'integration', 'issue', 'arise', 'number', 'component', 'increase', 'problem', 'include', 'miss', 'match', 'data', 'type', 'scale', 'ensure', 'correct', 'signal', 'available', 'name', 'challenge', 'integrator', 'solve', 'however', 'integration', 'process', 'expose', 'data', 'dependency', 'issue', 'normally', 'hide', 'development', 'environment', 'data', 'dependency', 'requirement', 'calculation', 'value', 'right', 'hand', 'side', 'rhs', 'equation', 'know', 'prior', 'start', 'calculation', 'value', 'leave', 'hand', 'lhs', 'side', 'dependent', 'value', 'right', 'hand', 'side', 'context', 'subsystems', 'concept', 'calculation', 'order', 'equivalent', 'execution', 'order', 'subsystems', 'lhsn', 'rhsn', 'language', 'prevent', 'user', 'write', 'equation', 'lhs', 'assign', 'mean', 'old', 'non', 'initialize', 'data', 'result', 'unexpected', 'incorrect', 'result', 'lhsn', 'rhsn', 'lhsn', 'unlike', 'contains', 'build', 'analysis', 'tool', 'prevent', 'happen', 'user', 'familiar', 'diagnostic', 'commonly', 'refer', 'algebraic', 'loop', 'loop', 'break', 'explicitly', 'set', 'order', 'calculation', 'paper', 'focus', 'easily', 'systematically', 'break', 'loop', 'two', 'method', 'cover', 'paper', 'function', 'call', 'subsystems', 'unit', 'delay', 'block', 'method', 'define', 'execution', 'order', 'algebric']",5
97,15477,"This SimEvents model uses a captured Ethereal file as a data source to study queuing performance.<p>When audio or video is transmitted over an Ethernet network, the data is usually transmitted in bursts of packets with long idle times in between bursts.  SimEvents is a good tool for modeling those types of sources and studying the effects of queue size and server times on the audio or video transmission.This model uses an internet radio file captured from Ethereal as a source, and transmits data with the packet lengths and source times defined in that file.  You can study the effects of changing the FIFO Queue size or serviceTime values on the number of dropped packets for the selected source.To run this model you need to download the Ethernet Header Extraction Tool (posted on MATLAB Central).  After you download that tool, you can run this model by following the instructions on the model's diagram.</p>ethereal,ethernet,header extraction tool,simevents,source",17,0,1,0,16,simevents captured ethereal file data source study queue performance audio video transmit ethernet network data usually transmit burst packet long idle time burst simevents good tool type source study effect queue size server time audio video transmission internet radio file capture ethereal source transmits data packet length source time define file study effect change fifo queue size servicetime value number drop packet select source run need download ethernet header extraction tool post central download tool run follow instruction diagram extraction,"['simevents', 'captured', 'ethereal', 'file', 'data', 'source', 'study', 'queue', 'performance', 'audio', 'video', 'transmit', 'ethernet', 'network', 'data', 'usually', 'transmit', 'burst', 'packet', 'long', 'idle', 'time', 'burst', 'simevents', 'good', 'tool', 'type', 'source', 'study', 'effect', 'queue', 'size', 'server', 'time', 'audio', 'video', 'transmission', 'internet', 'radio', 'file', 'capture', 'ethereal', 'source', 'transmits', 'data', 'packet', 'length', 'source', 'time', 'define', 'file', 'study', 'effect', 'change', 'fifo', 'queue', 'size', 'servicetime', 'value', 'number', 'drop', 'packet', 'select', 'source', 'run', 'need', 'download', 'ethernet', 'header', 'extraction', 'tool', 'post', 'central', 'download', 'tool', 'run', 'follow', 'instruction', 'diagram', 'extraction']",0
98,15656,"A forced damped driven pendulum exhibits chaotic motion.<p>This simulink model simulates the damped driven pendulum, showing it's chaotic motion.theta = angle of pendulumomega = (d/dt)theta = angular velocityGamma(t) = gcos(phi) = Forceomega_d = (d/dt) phiGamma(t) = (d/dt)omega + omega/Q + sin(theta)Play with the initial conditions (omega_0, theta_0, phi_0 = omega(t=0), theta(t=0), phi(t=0)) and the system parameters (g, Q, omega_d) and the solver parameters/method.Chaos can be seen for Q=2, omega_d=w/3.The program outputs to Matlab time, theta(time) &amp; omega(time).Plot the phase space via:plot(mod(theta+pi, 2*pi)-pi, omega, '.');Plot the Poincare sections using:t_P = (0:2*pi/omega_d:max(time))';plot(mod(spline(time, theta+pi, t_P), 2*pi)-pi, spline(time, omega, t_P), '.');System is described in:""Fractal basin boundaries and intermittency in the driven damped pendulum""E. G. Gwinn and R. M. WesterveltPRA 33(6):4143 (1986)</p>chemistry,forced damped driven pendulum chaos simulink,physics",30,2,2,0,29,force damp driven pendulum exhibit chaotic motion damp drive pendulum show chaotic motion theta angle pendulumomega theta angular velocitygamma gcos phi forceomega phigamma omega omega sin theta play initial condition omega theta phi omega theta phi parameter omega solver parameter method chaos see omega program output time theta time amp omega time plot phase space via plot mod theta omega plot poincare section omega max time plot mod spline time theta spline time omega describe fractal basin boundary intermittency driven damp pendulum gwinn westerveltpra chemistryforced damp driven pendulum chaos,"['force', 'damp', 'driven', 'pendulum', 'exhibit', 'chaotic', 'motion', 'damp', 'drive', 'pendulum', 'show', 'chaotic', 'motion', 'theta', 'angle', 'pendulumomega', 'theta', 'angular', 'velocitygamma', 'gcos', 'phi', 'forceomega', 'phigamma', 'omega', 'omega', 'sin', 'theta', 'play', 'initial', 'condition', 'omega', 'theta', 'phi', 'omega', 'theta', 'phi', 'parameter', 'omega', 'solver', 'parameter', 'method', 'chaos', 'see', 'omega', 'program', 'output', 'time', 'theta', 'time', 'amp', 'omega', 'time', 'plot', 'phase', 'space', 'via', 'plot', 'mod', 'theta', 'omega', 'plot', 'poincare', 'section', 'omega', 'max', 'time', 'plot', 'mod', 'spline', 'time', 'theta', 'spline', 'time', 'omega', 'describe', 'fractal', 'basin', 'boundary', 'intermittency', 'driven', 'damp', 'pendulum', 'gwinn', 'westerveltpra', 'chemistryforced', 'damp', 'driven', 'pendulum', 'chaos']",5
99,15715,"Functions to easily save xPC File Scope data to the target PC as MAT files.<p>The xPC File Scope is a very useful tool for data logging, but retrieving the data from the target PC from the command line is not a simple and straightforward process.  A function was written to simplify gathering and archiving data from a modelâs file scopes and saving it to MAT-file format.  Additional functions were written to simplify converting the logged signals from MAT format to a CSV file, a single matrix, or individual array variables in the MATLAB workspace.</p>dat format,data logging,host pc,save,target,tools and utilities,xpc file scope tools,xpc file scope tools,xpc file scope tools",5,0,1,0,6,function easily save xpc file scope data target mat file xpc file scope useful tool data log retrieve data target command line simple straightforward process function write simplify gather archive data file scope save mat file format additional function write simplify convert log signal mat format csv file single matrix individual array variable workspace dat formatdata logginghost utilitiesxpc file scope toolsxpc file scope toolsxpc file scope tool,"['function', 'easily', 'save', 'xpc', 'file', 'scope', 'data', 'target', 'mat', 'file', 'xpc', 'file', 'scope', 'useful', 'tool', 'data', 'log', 'retrieve', 'data', 'target', 'command', 'line', 'simple', 'straightforward', 'process', 'function', 'write', 'simplify', 'gather', 'archive', 'data', 'file', 'scope', 'save', 'mat', 'file', 'format', 'additional', 'function', 'write', 'simplify', 'convert', 'log', 'signal', 'mat', 'format', 'csv', 'file', 'single', 'matrix', 'individual', 'array', 'variable', 'workspace', 'dat', 'formatdata', 'logginghost', 'utilitiesxpc', 'file', 'scope', 'toolsxpc', 'file', 'scope', 'toolsxpc', 'file', 'scope', 'tool']",7
100,15724,"Impleminting the emergency system ina power susbtation in case of blackout in the main feeder,,<p>In this project the power system emergency in implemented as a power converter (rectifier &amp; inverter) to supply the equipments in the substation in case of main feeder loss.</p>emergency,power,simulation,substation,substation,power_conversion_control,power_electronics_control",366,38,4,0,364,impleminting emergency ina power susbtation case blackout main feederin project power emergency implement power converter rectifier amp inverter supply equipment substation case main feeder loss conversion controlpower electronics control,"['impleminting', 'emergency', 'ina', 'power', 'susbtation', 'case', 'blackout', 'main', 'feederin', 'project', 'power', 'emergency', 'implement', 'power', 'converter', 'rectifier', 'amp', 'inverter', 'supply', 'equipment', 'substation', 'case', 'main', 'feeder', 'loss', 'conversion', 'controlpower', 'electronics', 'control']",3
101,15726,"A Complete projcet build with matlab for image processing & robot animation<p>In this project I try to use many features of Matlab like image processing , animation control (Virtual Reality Toolbox) with other Matlab toolboxes.The attached files contains a Simulink model that convert the image processing data into signals in order to control the animation of the robot.The animation was build in V-Real builder 2.0 ,,,</p>animation,image processing,mechanical modeling,robot,robotics,animation,animation,animation,image processing",202,9,3,0,256,complete projcet build image processing robot animationin project try many feature like image process animation control virtual reality toolbox toolbox attach file contains convert image processing data signal order control animation robot animation build real builder animationimage processing,"['complete', 'projcet', 'build', 'image', 'processing', 'robot', 'animationin', 'project', 'try', 'many', 'feature', 'like', 'image', 'process', 'animation', 'control', 'virtual', 'reality', 'toolbox', 'toolbox', 'attach', 'file', 'contains', 'convert', 'image', 'processing', 'data', 'signal', 'order', 'control', 'animation', 'robot', 'animation', 'build', 'real', 'builder', 'animationimage', 'processing']",7
102,15781,"Generates code for all the test data from a Signal Builder block.<p>The Signal Builder Block will only generate code for 1 test group.  This block is designed to generate the code for the other test groups and allow for easy selection through a tunable parameter. This also allows for programmatic control of the signal builder groups from System Test.</p>code generation,signal builder,code generation,signal builder,systemtest,test data,code generation,signal builder,systemtest,test data",9,2,2,0,6,generates code test data signal builder block signal builder block generate code test group block design generate code test group allow easy selection tunable parameter also allow programmatic control signal builder group test code buildercode datacode data,"['generates', 'code', 'test', 'data', 'signal', 'builder', 'block', 'signal', 'builder', 'block', 'generate', 'code', 'test', 'group', 'block', 'design', 'generate', 'code', 'test', 'group', 'allow', 'easy', 'selection', 'tunable', 'parameter', 'also', 'allow', 'programmatic', 'control', 'signal', 'builder', 'group', 'test', 'code', 'buildercode', 'datacode', 'data']",7
103,15972,"Implementing Mealy and Moore FSMS in an Embedded MATLAB block<p>A finite state machine is a representation of a reactive system. In an event-driven system, the system makes a transition from one state (mode) to another prescribed state, provided that the condition defining the change is true.Stateflow is the best tool for modeling finite state machines. It provides very sophisticated capabilities to build hierarchical and parallel state machines, temporal logic and state entry/during/exit actions etc.,However there are many Signal Processing and Communications applications where in when writing a very data flow centric algorithms, there comes a need to write a simple controller embedded in the algorithm.This example shows how to implement such a simple mealy or more state machine in Embedded MATLAB control using control flow constructs.Mealy: y = f(x,u) all actions are condition actions and outputs are function of state and input Moore: y = f(x) all actions are state actions and outputs are pure functions of state only</p>embedded matlab,fsm,hdl,mealy,moore",19,2,2,0,14,implement mealy moore fsms embed blocka finite state machine representation reactive event drive make transition one state mode another prescribed state provide condition define change true stateflow best tool finite state machine provide sophisticated capability build hierarchical parallel state machine temporal logic state entry exit action etc however many signal processing communication application write data flow centric algorithm come need write simple controller embed algorithm example show implement simple mealy state machine embed control control flow construct mealy action condition action output function state input moore action state action output pure function state onlyembedded,"['implement', 'mealy', 'moore', 'fsms', 'embed', 'blocka', 'finite', 'state', 'machine', 'representation', 'reactive', 'event', 'drive', 'make', 'transition', 'one', 'state', 'mode', 'another', 'prescribed', 'state', 'provide', 'condition', 'define', 'change', 'true', 'stateflow', 'best', 'tool', 'finite', 'state', 'machine', 'provide', 'sophisticated', 'capability', 'build', 'hierarchical', 'parallel', 'state', 'machine', 'temporal', 'logic', 'state', 'entry', 'exit', 'action', 'etc', 'however', 'many', 'signal', 'processing', 'communication', 'application', 'write', 'data', 'flow', 'centric', 'algorithm', 'come', 'need', 'write', 'simple', 'controller', 'embed', 'algorithm', 'example', 'show', 'implement', 'simple', 'mealy', 'state', 'machine', 'embed', 'control', 'control', 'flow', 'construct', 'mealy', 'action', 'condition', 'action', 'output', 'function', 'state', 'input', 'moore', 'action', 'state', 'action', 'output', 'pure', 'function', 'state', 'onlyembedded']",0
104,16067,"The model provides a simple example on how a client server dialog can be implemented using Stateflow<p>The model contains a server or master and two clients or slaves. The clients communicate with the server. The model contains an explanation of the design choices, their limitations as well as alternative approaches.</p>design pattern client server clientserver stateflow master slave,design pattern client server clientserver stateflow master slave,stateflow",34,6,3,0,24,provide simple example client server dialog implement stateflowthe contains server master two client slave client communicate server contains explanation design choice limitation well alternative approach design pattern client server clientserver stateflow master slavedesign pattern client server clientserver stateflow master slavestateflow,"['provide', 'simple', 'example', 'client', 'server', 'dialog', 'implement', 'stateflowthe', 'contains', 'server', 'master', 'two', 'client', 'slave', 'client', 'communicate', 'server', 'contains', 'explanation', 'design', 'choice', 'limitation', 'well', 'alternative', 'approach', 'design', 'pattern', 'client', 'server', 'clientserver', 'stateflow', 'master', 'slavedesign', 'pattern', 'client', 'server', 'clientserver', 'stateflow', 'master', 'slavestateflow']",5
105,16100,"This example shows how to use Embedded MATLAB to model memory elements<p>Delay blocks in Simulink help to model memory elements in hardware. This example shows how to model the same delays in Embedded MATLAB using persistent variables.The model consists of four subsystems each modeling a kind of delay (unit delay, integer delay, tap delay, tap delay vector) and comparing the results with corresponding block in Simulink with identical behavior.Delays are essential in writing causal algorithms (those that use previous input and output samples to compute current output samples) in signal processing.</p>embedded matlab,fpga,hardware memory elements,hdl,registers,hardware memory elements",72,4,2,0,71,example show embed memory elementsdelay block help memory element hardware example show delay embed persistent variable consist four subsystem kind delay unit delay integer delay tap delay tap delay vector compare result correspond block identical behavior delay essential write causal algorithms previous input output sample compute current output sample signal processing embed memory memory element,"['example', 'show', 'embed', 'memory', 'elementsdelay', 'block', 'help', 'memory', 'element', 'hardware', 'example', 'show', 'delay', 'embed', 'persistent', 'variable', 'consist', 'four', 'subsystem', 'kind', 'delay', 'unit', 'delay', 'integer', 'delay', 'tap', 'delay', 'tap', 'delay', 'vector', 'compare', 'result', 'correspond', 'block', 'identical', 'behavior', 'delay', 'essential', 'write', 'causal', 'algorithms', 'previous', 'input', 'output', 'sample', 'compute', 'current', 'output', 'sample', 'signal', 'processing', 'embed', 'memory', 'memory', 'element']",0
106,16210,"Using bitsliceget and bitconcat functions to implement a Byte2Tuple converter needed in a DVB system<p>(Implemented using R2007b release)The attached Simulink model shows how to implement a Byte To tuple converter (N bytes == M tuples of m bits). The converter can be used in a DVB system to encode data bytes generated by interleaver into QAM symbols. In the attached example  bitsliceget and bitconcat functions are used in an Embedded MATLAB block to convert 204x8 (bytes) to 272x6 (tuples). To prove that the block is functional the tuples are converted back to bytes and compared with original input to verify that no loss of data has occurred. Ref: See notes on bytes to m tuple conversion block in a DVB systemhttp://ieee802.org/16/tg1/phy/contrib/802161pc-00_02.pdfhttp://en.wikipedia.org/wiki/DVB-C</p>bitsliceget,byte,dvb,embedded matlab,hdl,simulink",7,0,1,0,7,bitsliceget bitconcat function implement byte tuple converter need dvb implement release attach show implement byte tuple converter bytes tuples bit converter dvb encode data byte generate interleaver qam symbol attach example bitsliceget bitconcat function embed block convert bytes tuples prove block functional tuples convert back byte compare original input verify loss data occur ref see note bytes tuple conversion block dvb systemhttp iee org phy contrib pdfhttp wikipedia org wiki dvb,"['bitsliceget', 'bitconcat', 'function', 'implement', 'byte', 'tuple', 'converter', 'need', 'dvb', 'implement', 'release', 'attach', 'show', 'implement', 'byte', 'tuple', 'converter', 'bytes', 'tuples', 'bit', 'converter', 'dvb', 'encode', 'data', 'byte', 'generate', 'interleaver', 'qam', 'symbol', 'attach', 'example', 'bitsliceget', 'bitconcat', 'function', 'embed', 'block', 'convert', 'bytes', 'tuples', 'prove', 'block', 'functional', 'tuples', 'convert', 'back', 'byte', 'compare', 'original', 'input', 'verify', 'loss', 'data', 'occur', 'ref', 'see', 'note', 'bytes', 'tuple', 'conversion', 'block', 'dvb', 'systemhttp', 'iee', 'org', 'phy', 'contrib', 'pdfhttp', 'wikipedia', 'org', 'wiki', 'dvb']",5
107,16278,"This demo shows to call external functions in an Embedded MATLAB block<p>(Demo developed using R2007b)Embedded MATLAB block in Simulink supports calling three types of functions;1) Embedded MATLAB builtin library functions2) Subfunctions within the Embedded MATLAB block script and3) External MATLAB functionsThis demo shows how to call user written compilable ""External MATLAB functions"" from an Embedded MATLAB block.The attached model implements a vectorized adaptive noise canceler using a Least Mean Square (LMS) filter written in Embedded MATLAB.The LMS filter retrieves the original music signal ('err_sig') from Pilot's Mic by filtering the Exterior Mic's signal. The weights of the filter are updated(adapted) in real time based on 'input' and 'err_sig'The main body of the canceler implementation is part of the block script in 'lms_eml_hardware/Embedded MATLAB Function'. The script embedded in that block calls the following M functions on the path tapped_delay_fcn.m, treesum_fcn.m, update_weight_fcn.mFor code generation (C and HDL) the user must instruct Embedded MATLAB to compile an external function by adding the following compilation directive or pragma to the function body%#emlFor more info related to this topic search for ""Calling Functions in Embedded MATLAB"" in MATALAB documentation</p>adaptive filter,embedded matlab,hdl,lms,hdl,adaptive filter,adaptive filter",74,14,4,0,66,demo show call external function embed block demo develop embed block support call three type function embed builtin function subfunctions within embedded block script external functionsthis demo show call user write compilable external function embed block attach implement vectorized adaptive noise canceler least mean square filter write embedded filter retrieve original music signal err sig pilot mic filtering exterior mic signal weight filter update adapted real time base input err sig main body canceler implementation part block script eml hardware embed function script embed block call follow function path tap delay fcn treesum fcn update weight fcn mfor code generation hdl user must instruct embed compile external function add follow compilation directive pragma function body emlfor info relate topic search call function embed matalab filterembedded filteradaptive filter,"['demo', 'show', 'call', 'external', 'function', 'embed', 'block', 'demo', 'develop', 'embed', 'block', 'support', 'call', 'three', 'type', 'function', 'embed', 'builtin', 'function', 'subfunctions', 'within', 'embedded', 'block', 'script', 'external', 'functionsthis', 'demo', 'show', 'call', 'user', 'write', 'compilable', 'external', 'function', 'embed', 'block', 'attach', 'implement', 'vectorized', 'adaptive', 'noise', 'canceler', 'least', 'mean', 'square', 'filter', 'write', 'embedded', 'filter', 'retrieve', 'original', 'music', 'signal', 'err', 'sig', 'pilot', 'mic', 'filtering', 'exterior', 'mic', 'signal', 'weight', 'filter', 'update', 'adapted', 'real', 'time', 'base', 'input', 'err', 'sig', 'main', 'body', 'canceler', 'implementation', 'part', 'block', 'script', 'eml', 'hardware', 'embed', 'function', 'script', 'embed', 'block', 'call', 'follow', 'function', 'path', 'tap', 'delay', 'fcn', 'treesum', 'fcn', 'update', 'weight', 'fcn', 'mfor', 'code', 'generation', 'hdl', 'user', 'must', 'instruct', 'embed', 'compile', 'external', 'function', 'add', 'follow', 'compilation', 'directive', 'pragma', 'function', 'body', 'emlfor', 'info', 'relate', 'topic', 'search', 'call', 'function', 'embed', 'matalab', 'filterembedded', 'filteradaptive', 'filter']",0
108,16302,"Implementing various kinds of counters like Johnson, Gray, Mod counters in Embedded MATLAB.<p>(Developed using R2007b)Timers and counters are essential elements in hardware design. A timer can be used to measure elapsed time and a counter is used to count number of external events in hardware circuits. This demo shows how to build timers and counters in Embedded MATLAB. The attached model contains implementations of the following counters. Gray Counter Johnson Counter Mod-N Counter Up Down Counter (With enable) Preset Clear Counter Call Count Detector Gray Counter:Gray code is a binary numeral system where two successive values differ in only one digit. Gray codes are widely used to facilitate error correction in digital communications such as digital terrestrial television and some cable TV systems. A 4bit gray code counter has the following binary sequence as its output.0000000100110010011001110101010011001101111111101010101110011000Johnson Counter:A ring counter is a type of counter composed of a circular shift register. The output of the last shift register is fed to the input of the first register.A Johnson counter is also called as a walking ring counter wherein the output of the last shift register is inverted and fed back to the input of first shift register. A 4bit johnson counter has the following binary sequence as its output.000000010011011111111110110010000000Modulo N Counter:The total number of stable states a counter has indicates its MODULUS. A Mod3 counter has the following binary sequence as its output.000001010011100101110111</p>counters,embedded matlab,gray,hdl,johnson,modulo counters,timers,timers,counters",35,0,1,0,31,implement various kind counter like johnson gray mod counter embed develop timer counter essential element hardware design timer measure elapse time counter count number external event hardware circuit demo show build timer counter embed attached contains implementation follow counter gray counter johnson counter mod counter counter enable preset clear counter call count detector gray counter gray code binary numeral two successive value differ one digit gray code widely facilitate error correction digital communication digital terrestrial television cable bite gray code counter follow binary sequence output johnson counter ring counter type counter compose circular shift register output last shift register feed input first register johnson counter also call walk ring counter wherein output last shift register invert feed back input first shift register bit johnson counter follow binary sequence output modulo counter total number stable state counter indicate modulus mod counter follow binary sequence output,"['implement', 'various', 'kind', 'counter', 'like', 'johnson', 'gray', 'mod', 'counter', 'embed', 'develop', 'timer', 'counter', 'essential', 'element', 'hardware', 'design', 'timer', 'measure', 'elapse', 'time', 'counter', 'count', 'number', 'external', 'event', 'hardware', 'circuit', 'demo', 'show', 'build', 'timer', 'counter', 'embed', 'attached', 'contains', 'implementation', 'follow', 'counter', 'gray', 'counter', 'johnson', 'counter', 'mod', 'counter', 'counter', 'enable', 'preset', 'clear', 'counter', 'call', 'count', 'detector', 'gray', 'counter', 'gray', 'code', 'binary', 'numeral', 'two', 'successive', 'value', 'differ', 'one', 'digit', 'gray', 'code', 'widely', 'facilitate', 'error', 'correction', 'digital', 'communication', 'digital', 'terrestrial', 'television', 'cable', 'bite', 'gray', 'code', 'counter', 'follow', 'binary', 'sequence', 'output', 'johnson', 'counter', 'ring', 'counter', 'type', 'counter', 'compose', 'circular', 'shift', 'register', 'output', 'last', 'shift', 'register', 'feed', 'input', 'first', 'register', 'johnson', 'counter', 'also', 'call', 'walk', 'ring', 'counter', 'wherein', 'output', 'last', 'shift', 'register', 'invert', 'feed', 'back', 'input', 'first', 'shift', 'register', 'bit', 'johnson', 'counter', 'follow', 'binary', 'sequence', 'output', 'modulo', 'counter', 'total', 'number', 'stable', 'state', 'counter', 'indicate', 'modulus', 'mod', 'counter', 'follow', 'binary', 'sequence', 'output']",5
109,16317,"First principles dynamic simulator of a yeast fermentation bioreactor for ethanol production.<p>This is a nonlinear system of differential and algebriac equations, that describe the dynamics of a continuous bioreactor.  The bioreactor simulates the production of ethanol through yeast fermentation.  The model is described in:Z. K. Nagy, Model Based Control of a Fermentation Bioreactor using Optimally Designed Artificial Neural Networks, Chemical Engineering Journal, 127, 95-109, 2007.Additional nonlinear, first principles models can be found at:<a href=""http://www.hedengren.net/research/models.htmSpecial"">http://www.hedengren.net/research/models.htmSpecial</a> thanks to Zoltan Nagy for his submission to this collection of models.</p>bioreactor,biotech,continuous,ethanol,fermentation,pharmaceutical,yeast,zagy",44,5,2,0,47,first principle dynamic yeast fermentation bioreactor ethanol production nonlinear differential algebriac equation describe dynamic continuous bioreactor bioreactor production ethanol yeast fermentation describe nagy base control fermentation bioreactor optimally design artificial neural network chemical engineering journal additional nonlinear first principle find http hedengren net research htmspecial thanks zoltan nagy submission collection,"['first', 'principle', 'dynamic', 'yeast', 'fermentation', 'bioreactor', 'ethanol', 'production', 'nonlinear', 'differential', 'algebriac', 'equation', 'describe', 'dynamic', 'continuous', 'bioreactor', 'bioreactor', 'production', 'ethanol', 'yeast', 'fermentation', 'describe', 'nagy', 'base', 'control', 'fermentation', 'bioreactor', 'optimally', 'design', 'artificial', 'neural', 'network', 'chemical', 'engineering', 'journal', 'additional', 'nonlinear', 'first', 'principle', 'find', 'http', 'hedengren', 'net', 'research', 'htmspecial', 'thanks', 'zoltan', 'nagy', 'submission', 'collection']",5
110,16352,"Create and simulate up to fourth order trajectories for motion systems doing point-to-point moves.<p>Motion systems are widely used in industry; for instance for robotics and pick-and place units. In most cases they are characterized by a repetitive motion or sequence of motions between fixed positions. The actuator, or motor, is limited in speed and acceleration such that any decent motion control system should also generate an acceptable trajectory from one point to the other. This is done by generating âprofilesâ for speed and acceleration. In practice, motion systems are not rigidly connected to the load they are manipulating, resulting in dynamical behaviour. Motion control systems deal with this by applying appropriate feedback control, and also by generating a âsmoothâ trajectory. Feedforward control, based on the known trajectory also contributes greatly to achieving high performance positioning.The zip file contains MATLAB functions for calculating smooth trajectories. It also contains the Simulink library âmotionâ with several examples, including an implementation suitable for real-time application (rapid prototyping). Extensive documentation, based on a course in motion control lectured at Eindhoven University of Technology in The Netherlands, explains the use of second order up to fourth order trajectories for point-to-point motion, how to calculate them, and how to use them for effective feedforward control. Some exercises are also included.The functions and library are developed in Release 12; they also work in all later releases.</p>control design,demo,feedforward profile,motion control trajectory,motion control trajectory setpoint planning feedforward profile,setpoint planning,electric_motor_control,power_electronics_control",353,39,3,8,394,create fourth order trajectory motion point point move motion widely industry instance robotics pick place unit case characterize repetitive motion sequence motion fix position actuator motor limit speed acceleration decent motion control also generate acceptable trajectory one point generate profile speed acceleration practice motion rigidly connect load manipulate result dynamical behaviour motion control deal apply appropriate feedback control also generate smooth trajectory feedforward control base know trajectory also contribute greatly achieving high performance position zip file contain function calculate smooth trajectory also contain motion several example include implementation suitable real time application rapid prototyping extensive documentation base course motion control lecture eindhoven university technology netherlands explain second order fourth order trajectory point point motion calculate effective feedforward control exercise also include function develop release also work later release control profilemotion control control trajectory setpoint plan feedforward profilesetpoint motor controlpower electronics control,"['create', 'fourth', 'order', 'trajectory', 'motion', 'point', 'point', 'move', 'motion', 'widely', 'industry', 'instance', 'robotics', 'pick', 'place', 'unit', 'case', 'characterize', 'repetitive', 'motion', 'sequence', 'motion', 'fix', 'position', 'actuator', 'motor', 'limit', 'speed', 'acceleration', 'decent', 'motion', 'control', 'also', 'generate', 'acceptable', 'trajectory', 'one', 'point', 'generate', 'profile', 'speed', 'acceleration', 'practice', 'motion', 'rigidly', 'connect', 'load', 'manipulate', 'result', 'dynamical', 'behaviour', 'motion', 'control', 'deal', 'apply', 'appropriate', 'feedback', 'control', 'also', 'generate', 'smooth', 'trajectory', 'feedforward', 'control', 'base', 'know', 'trajectory', 'also', 'contribute', 'greatly', 'achieving', 'high', 'performance', 'position', 'zip', 'file', 'contain', 'function', 'calculate', 'smooth', 'trajectory', 'also', 'contain', 'motion', 'several', 'example', 'include', 'implementation', 'suitable', 'real', 'time', 'application', 'rapid', 'prototyping', 'extensive', 'documentation', 'base', 'course', 'motion', 'control', 'lecture', 'eindhoven', 'university', 'technology', 'netherlands', 'explain', 'second', 'order', 'fourth', 'order', 'trajectory', 'point', 'point', 'motion', 'calculate', 'effective', 'feedforward', 'control', 'exercise', 'also', 'include', 'function', 'develop', 'release', 'also', 'work', 'later', 'release', 'control', 'profilemotion', 'control', 'control', 'trajectory', 'setpoint', 'plan', 'feedforward', 'profilesetpoint', 'motor', 'controlpower', 'electronics', 'control']",4
111,16363,"This demo shows how to use Embedded MATLAB block parameters to control the algorithm behavior<p>The attached Simulink model implements a Forward Euler Integrator in Embedded MATLAB. It illustrates the use of parameters in Embedded MATLAB. The algorithm has three sections; Setup, Output and Update. At every sample time hit the block keeps accumulating the the value of the input at time instant 't' in a state register and emits value accumulated value until time instant 't-1'. The output value is clipped if falls above an upper limit or falls below a lower limit. A flag is raised when the value is clipped. The upper and lower limits and the gain of the integrator can be changed via Embedded MATLAB block parameters.Like any other block in Simulink the Embedded MATLAB block also supports mask parameters. Simulink parameters can be tunable or non-tunable. Tunable parameter values can be changed during the simulation run in MATLAB workspace and can be used to affect the current Simulink simulation run in progress. Non-tunable parameters are also defined in MATLAB workspace but are fixed for a single simulation run.In the attached model the variables 'gain_val', 'upper_limit', 'lower_limit' used in the Embedded MATLAB script are non-tunable parameters. They are declared as any other inputs in the function declaration associated with the block. However they do not appear as block inputs. The values and types of these variables can be defined and changed in the MATLAB between simulation runs.</p>discrete,embedded matlab,fpga,hdl,integrator,parameters,simulink",16,0,1,0,19,demo show embed block parameter control algorithm behaviorthe attached implement forward euler integrator embed illustrate parameter embed algorithm three section setup output update every sample time hit block keep accumulate value input time instant state register emit value accumulate value time instant output value clip fall upper limit fall low limit flag raise value clip upper low limit gain integrator change via embedded block parameter like block embed block also support mask parameter parameter tunable non tunable tunable parameter value change run workspace affect current run progress non tunable parameter also define workspace fix single run attach variable gain val upper limit low limit embed script non tunable parameter declare input function declaration associate block however appear block input value type variable define change run,"['demo', 'show', 'embed', 'block', 'parameter', 'control', 'algorithm', 'behaviorthe', 'attached', 'implement', 'forward', 'euler', 'integrator', 'embed', 'illustrate', 'parameter', 'embed', 'algorithm', 'three', 'section', 'setup', 'output', 'update', 'every', 'sample', 'time', 'hit', 'block', 'keep', 'accumulate', 'value', 'input', 'time', 'instant', 'state', 'register', 'emit', 'value', 'accumulate', 'value', 'time', 'instant', 'output', 'value', 'clip', 'fall', 'upper', 'limit', 'fall', 'low', 'limit', 'flag', 'raise', 'value', 'clip', 'upper', 'low', 'limit', 'gain', 'integrator', 'change', 'via', 'embedded', 'block', 'parameter', 'like', 'block', 'embed', 'block', 'also', 'support', 'mask', 'parameter', 'parameter', 'tunable', 'non', 'tunable', 'tunable', 'parameter', 'value', 'change', 'run', 'workspace', 'affect', 'current', 'run', 'progress', 'non', 'tunable', 'parameter', 'also', 'define', 'workspace', 'fix', 'single', 'run', 'attach', 'variable', 'gain', 'val', 'upper', 'limit', 'low', 'limit', 'embed', 'script', 'non', 'tunable', 'parameter', 'declare', 'input', 'function', 'declaration', 'associate', 'block', 'however', 'appear', 'block', 'input', 'value', 'type', 'variable', 'define', 'change', 'run']",7
112,16642,"OFDM Implementation using QPSK Modulation<p>OFDM Signal generation and decoding using QPSK as the modulation technique. This type of OFDM is particularly useful for WiMAX and other Wireless and Multimedia Standards. QAM4 and QPSK is same modulation technique. Just run the Model and with different SNRs in the Channel Block observe the performance of the OFDM. Please leave your feedback for the model so that we can improve it.</p>popular file 2009,modulation technique,ofdm,qam,qpsk,signal generation,wimax,wirel,wireless,modulation technique,wirel,wireless,ofdm,ofdm using qpsk,ofdm,wireless,ofdm using orthognality matrix,ofdm using qpsk,ofdm using qpsk,ofdm using qpsk,modulation technique,ofdm using qpsk",71,7,2,0,74,ofdm implementation qpsk modulationofdm signal generation decode qpsk modulation technique type ofdm particularly useful wimax wireless multimedia standard qam qpsk modulation technique run different snrs channel block observe performance ofdm please leave feedback improve popular file modulation orthognality matrixofdm qpskofdm qpskofdm qpskmodulation techniqueofdm qpsk,"['ofdm', 'implementation', 'qpsk', 'modulationofdm', 'signal', 'generation', 'decode', 'qpsk', 'modulation', 'technique', 'type', 'ofdm', 'particularly', 'useful', 'wimax', 'wireless', 'multimedia', 'standard', 'qam', 'qpsk', 'modulation', 'technique', 'run', 'different', 'snrs', 'channel', 'block', 'observe', 'performance', 'ofdm', 'please', 'leave', 'feedback', 'improve', 'popular', 'file', 'modulation', 'orthognality', 'matrixofdm', 'qpskofdm', 'qpskofdm', 'qpskmodulation', 'techniqueofdm', 'qpsk']",5
113,16855,"This demos shows to serialize an image and apply sobel operators on it to detect its its edges<p>The attached model implements a Sobel edge detection algorithm in Embedded MATLAB. This demo shows how to read in an image operate on the serialized data and reconstruct the image back from serialized data after applying Sobel operators. The demo detects edges of a stop sign in the source image.Please note that both the behavioral and hardware implementations of the Sobel operators are implemented in Embedded MATLAB in the attached model. The hardware implementation operates on the serial data and is fully pipelined.</p>edge detection,embedded matlab,hdl,serialized image,sobel,edge detection",32,4,2,0,27,demo show serialize image apply sobel operator detect edgesthe attach implement sobel edge detection algorithm embed demo show read image operate serialize data reconstruct image back serialize data apply sobel operator demo detects edge stop sign source image please note behavioral hardware implementation sobel operator implement embed attach hardware implementation operate serial data fully pipelined edge imagesobeledge detection,"['demo', 'show', 'serialize', 'image', 'apply', 'sobel', 'operator', 'detect', 'edgesthe', 'attach', 'implement', 'sobel', 'edge', 'detection', 'algorithm', 'embed', 'demo', 'show', 'read', 'image', 'operate', 'serialize', 'data', 'reconstruct', 'image', 'back', 'serialize', 'data', 'apply', 'sobel', 'operator', 'demo', 'detects', 'edge', 'stop', 'sign', 'source', 'image', 'please', 'note', 'behavioral', 'hardware', 'implementation', 'sobel', 'operator', 'implement', 'embed', 'attach', 'hardware', 'implementation', 'operate', 'serial', 'data', 'fully', 'pipelined', 'edge', 'imagesobeledge', 'detection']",0
114,17233,"Model Based Design Demonstration Based on a Motion Control Case Study<p>This demonstration is developed for use with the experimental motion system that you see in the picture, but also makes sense when you do not have this hardware available.It contains a script that guides you through a fairly complete Model Based Design cycle, starting with a problem formulation as you may encounter in a real industrial production machine, showing you how to set up a model using measured data, first principles modelling and physical modeling tools, and also showing you the setting up, tuning and testing of a new feedback controller with highly improved performance.A lot can be learned from this demo and the used models: about how the different products/tools can be used in an actual design workflow, but also about motion control in general (modelling, feedback control, trajectory generation, feedforward control, controller tuning, loop-shaping.) Furthermore, if you investigate the models a little deeper, you will find examples of control logic using Stateflow, triggered subsystems, configurable subsystems, using masks, using self-made library models, embedded MATLAB, graphical user interfaces and virtual reality animation.For more information on the used trajectory generation and feedforward techniques, seehttp://<a href=""http://www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=16352&amp;objectType=file"">www.mathworks.com/matlabcentral/fileexchange/loadFile.do?objectId=16352&amp;objectType=file</a> Unpack the zipfile in any directory and open the Readme.html file in a browser.The listed required products are an absolute minimum; recommended are also: Simulink 3D Animation (in older releases: Virtual Reality Toolbox;) System Identification Toolbox; Simulink Design Optimization (in older releases Simulink Parameter Estimation;) Simulink Control Design. Also demonstrated are: Simscape; SimMechanics; SimDriveline; Simulink Verification and Validation.To learn more about MathWorks Physical Modeling products go to: <a href=""http://physical-modeling.mathworks.com/"">http://physical-modeling.mathworks.com/</a></p>control design,demo,feedforward,modelbased design,modeling,motion control,motor,robot,simulation,simulink,simulink model,system identification,trajectory planning,motor,control design,demo,robot,simulation,simulink model",62,8,3,0,48,base design demonstration base motion control case studythis demonstration develop experimental motion see picture also make sense hardware available contains script guide fairly complete base design cycle start problem formulation may encounter real industrial production machine show set measure data first principle physical modeling tool also show set tune test new feedback controller highly improve performance lot learn demo different product tool actual design workflow also motion control general feedback control trajectory generation feedforward control controller tune loop shape furthermore investigate little deep find example control logic stateflow trigger subsystem configurable subsystem mask self make embed graphical user interface virtual reality animation information trajectory generation feedforward technique seehttp mathworks com matlabcentral fileexchange loadfile objectid amp objecttype file unpack zipfile directory open readme html file browser list required product absolute minimum recommend also animation old release virtual reality toolbox identification toolbox design optimization older release parameter estimation control design also demonstrate simscape simmechanics simdriveline verification validation learn mathworks physical modeling product http physical modeling mathworks com control modelsystem,"['base', 'design', 'demonstration', 'base', 'motion', 'control', 'case', 'studythis', 'demonstration', 'develop', 'experimental', 'motion', 'see', 'picture', 'also', 'make', 'sense', 'hardware', 'available', 'contains', 'script', 'guide', 'fairly', 'complete', 'base', 'design', 'cycle', 'start', 'problem', 'formulation', 'may', 'encounter', 'real', 'industrial', 'production', 'machine', 'show', 'set', 'measure', 'data', 'first', 'principle', 'physical', 'modeling', 'tool', 'also', 'show', 'set', 'tune', 'test', 'new', 'feedback', 'controller', 'highly', 'improve', 'performance', 'lot', 'learn', 'demo', 'different', 'product', 'tool', 'actual', 'design', 'workflow', 'also', 'motion', 'control', 'general', 'feedback', 'control', 'trajectory', 'generation', 'feedforward', 'control', 'controller', 'tune', 'loop', 'shape', 'furthermore', 'investigate', 'little', 'deep', 'find', 'example', 'control', 'logic', 'stateflow', 'trigger', 'subsystem', 'configurable', 'subsystem', 'mask', 'self', 'make', 'embed', 'graphical', 'user', 'interface', 'virtual', 'reality', 'animation', 'information', 'trajectory', 'generation', 'feedforward', 'technique', 'seehttp', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'loadfile', 'objectid', 'amp', 'objecttype', 'file', 'unpack', 'zipfile', 'directory', 'open', 'readme', 'html', 'file', 'browser', 'list', 'required', 'product', 'absolute', 'minimum', 'recommend', 'also', 'animation', 'old', 'release', 'virtual', 'reality', 'toolbox', 'identification', 'toolbox', 'design', 'optimization', 'older', 'release', 'parameter', 'estimation', 'control', 'design', 'also', 'demonstrate', 'simscape', 'simmechanics', 'simdriveline', 'verification', 'validation', 'learn', 'mathworks', 'physical', 'modeling', 'product', 'http', 'physical', 'modeling', 'mathworks', 'com', 'control', 'modelsystem']",7
115,17238,"Simscape tutorial exercises from hands-on workshop events.<p>The models in this zip file can be used as tutorial examples. They are the models used in the Simscape Hands-on Workshop events offered by the MathWorks.   The examples here are models in Simscape, Simscape Multibody, Simscape Driveline, Simscape Electrical, and Simscape Fluids that you can build starting with an empty Simulink model. One example focuses on the Simscape language. There are also examples showing you how to use these tools with Simulink Design Optimization, and Stateflow.  See how to model a DC motor using Simscape in this video (4 min):<a href=""https://www.mathworks.com/videos/modeling-a-dc-motor-68852.html"">https://www.mathworks.com/videos/modeling-a-dc-motor-68852.html</a>  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>  Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>physical modeling,simdriveline,simhydraulics,simmechanics,simmechanics2g,simpowersystems,simscape,simscape simmechanics simdriveline simhydraulics simpowersystems,simulation,simhydraulics,physical modeling,simscape simmechanics simdriveline simhydraulics simpowersystems,physical modeling,simmechanics,simhydraulics,electric_motor_control,power_conversion_control,power_electronics_control,physical modeling",4635,243,3,30,4248,simscape tutorial exercise hand workshop event zip file tutorial example simscape hand workshop event offer mathworks example simscape simscape multibody simscape driveline simscape electrical simscape fluid build start empty one example focus simscape language also examples show tool design optimization stateflow see motor simscape video min mathworks com videos motor html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling physical simmechanics simdriveline simhydraulics simmechanics simdriveline simhydraulics motor controlpower conversion controlpower electronics controlphysical modeling,"['simscape', 'tutorial', 'exercise', 'hand', 'workshop', 'event', 'zip', 'file', 'tutorial', 'example', 'simscape', 'hand', 'workshop', 'event', 'offer', 'mathworks', 'example', 'simscape', 'simscape', 'multibody', 'simscape', 'driveline', 'simscape', 'electrical', 'simscape', 'fluid', 'build', 'start', 'empty', 'one', 'example', 'focus', 'simscape', 'language', 'also', 'examples', 'show', 'tool', 'design', 'optimization', 'stateflow', 'see', 'motor', 'simscape', 'video', 'min', 'mathworks', 'com', 'videos', 'motor', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'physical', 'simmechanics', 'simdriveline', 'simhydraulics', 'simmechanics', 'simdriveline', 'simhydraulics', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlphysical', 'modeling']",7
116,17287,"A small simulink library to provide performance index measurements.<p>The small Simulink library includes three performance index measurements: the integral of the sequared error (ISE), the integral of the absolute value of error (IAE) and the integral of time multiplied by the absolute value of error. A example Simulink model is included to show how to use these blocks.The model and library are saved for Simulink 6.0 (R14) and thereafter. To install, unzip the file into a folder then add this folder to MATLAB path. Then, this library should be seen from the Simulink Library Browser.</p>iae,ise,itae,performance index,simulink,simulink blockset,iae,simulink blockset,iae,iae",25,3,2,0,22,small provide performance index measurement small include three performance index measurement integral sequared error ise integral absolute value error iae integral time multiply absolute value error example include show block save thereafter install unzip file folder add folder path see browser blocksetiaeiae,"['small', 'provide', 'performance', 'index', 'measurement', 'small', 'include', 'three', 'performance', 'index', 'measurement', 'integral', 'sequared', 'error', 'ise', 'integral', 'absolute', 'value', 'error', 'iae', 'integral', 'time', 'multiply', 'absolute', 'value', 'error', 'example', 'include', 'show', 'block', 'save', 'thereafter', 'install', 'unzip', 'file', 'folder', 'add', 'folder', 'path', 'see', 'browser', 'blocksetiaeiae']",0
117,17395,"Cycloconverter using thyristors<p>A cycloconverter using thyristors- model in Matlab 7.0 using simulink toolbbox. It converts 50Hz frequency to 25 Hz.</p>cycloconverter,electronics,frequency changes,power electronics,cycloconverter,cycloconverter,cycloconverter,cycloconverter",17,0,1,0,20,cycloconverter thyristorsa cycloconverter thyristors toolbbox convert frequency changespower,"['cycloconverter', 'thyristorsa', 'cycloconverter', 'thyristors', 'toolbbox', 'convert', 'frequency', 'changespower']",8
118,17429,"This ZIP-file contains the models used in the webinar entitled Stateflow Design Patterns (Part III).<p>This ZIP-file contains the models used in the webinar entitled Stateflow Design Patterns (Part III).  Highlights include the Stateflow Pattern Wizard and continuous-time modeling in Stateflow.</p>simulation,stateflow design patterns wizard pattern tool,stateflow design patterns wizard pattern tool",97,10,3,0,98,zip file contain webinar entitle stateflow design pattern part zip file contain webinar entitle stateflow design pattern part highlight include stateflow pattern wizard continuous time stateflow design pattern wizard pattern toolstateflow design pattern wizard pattern tool,"['zip', 'file', 'contain', 'webinar', 'entitle', 'stateflow', 'design', 'pattern', 'part', 'zip', 'file', 'contain', 'webinar', 'entitle', 'stateflow', 'design', 'pattern', 'part', 'highlight', 'include', 'stateflow', 'pattern', 'wizard', 'continuous', 'time', 'stateflow', 'design', 'pattern', 'wizard', 'pattern', 'toolstateflow', 'design', 'pattern', 'wizard', 'pattern', 'tool']",7
119,17556,"This demo shows how to model a fixed point NCO using an embedded MATLAB block<p>The NCO block in the Embedded MATLAB contains the following stages1. accumulate phase2. apply phase offset3. apply dither4. quarter wave lookup table</p>embedded matlab,fpga,hdl,nco,fpga,embedded matlab,fpga",7,0,1,0,11,demo show fix point nco embed blockthe nco block embed contains follow stage accumulate phase apply phase offset apply dither quarter wave lookup tableembedded matlabfpga,"['demo', 'show', 'fix', 'point', 'nco', 'embed', 'blockthe', 'nco', 'block', 'embed', 'contains', 'follow', 'stage', 'accumulate', 'phase', 'apply', 'phase', 'offset', 'apply', 'dither', 'quarter', 'wave', 'lookup', 'tableembedded', 'matlabfpga']",0
120,17912,"Demos used in webinar ""Analog Circuit Effects in Signal Processing and Communication System Models""<p>Demos from webinar of same title I give live on December 6th, 2007.Note added Sept 2009: Subsequently I have moved to Agilent and am now at <a href=""http://signal-integrity.tm.agilent.comIn"">http://signal-integrity.tm.agilent.comIn</a> this webinar you'll learn how to use Simscape to simulate the effects of analog baseband circuits in the context of signal processing and communication system models. Simscape extends SimulinkÂ® with tools for modeling and simulating multidomain physical systems, including the effect of analog circuits. Using these techniques you be able to determine implementation loss due to analog circuit impairments, and will have a test environment in which you can develop mitigating algorithms.To view on-demand webinar recording, please visithttp://<a href=""http://www.mathworks.com/webinars"">www.mathworks.com/webinars</a></p>keysight,analog,circuit effect,communic,signal processing,simscape,webinar,wireless,circuit effect,webinar,analog,communic",144,14,3,2,145,demo webinar analog circuit effect signal processing communication demo webinar title give live december note add sept subsequently move agilent http signal integrity agilent comin webinar learn simscape effect analog baseband circuit context signal processing communication simscape extend tool multidomain physical include effect analog circuit technique able determine implementation loss due analog circuit impairment test environment develop mitigate algorithms view demand webinar record please visithttp mathworks com,"['demo', 'webinar', 'analog', 'circuit', 'effect', 'signal', 'processing', 'communication', 'demo', 'webinar', 'title', 'give', 'live', 'december', 'note', 'add', 'sept', 'subsequently', 'move', 'agilent', 'http', 'signal', 'integrity', 'agilent', 'comin', 'webinar', 'learn', 'simscape', 'effect', 'analog', 'baseband', 'circuit', 'context', 'signal', 'processing', 'communication', 'simscape', 'extend', 'tool', 'multidomain', 'physical', 'include', 'effect', 'analog', 'circuit', 'technique', 'able', 'determine', 'implementation', 'loss', 'due', 'analog', 'circuit', 'impairment', 'test', 'environment', 'develop', 'mitigate', 'algorithms', 'view', 'demand', 'webinar', 'record', 'please', 'visithttp', 'mathworks', 'com']",0
121,17969,"Probes for viewing physical variables<p>These probes are for use with the Simscape multi-domain physical modeling tools (Simscape, Sim Driveline, SimHydraulics and SimElectronics).  The ssc_Probes.m file calls the library file containing probes for viewing the through and across variable for each domain.  The ssc_dc_motor.slx model file is an example of how to use.  See Help block for additional usage notes.To learn more about MathWorks Physical Modeling products go to: <a href=""https://www.mathworks.com/solutions/physical-modeling.htmlThis"">https://www.mathworks.com/solutions/physical-modeling.htmlThis</a> toolbox was developed by Tom Egel from the [Consulting Services](<a href=""http://www.mathworks.com/services/consulting/"">http://www.mathworks.com/services/consulting/</a>) group at MathWorks</p>scopes,modeling,multidomain,physical,pick of the week,potw,probes,simdriveline,simelectronics,simhydraulics,simscape,simulink,utilities,electric_motor_control,power_conversion_control,power_electronics_control",49,8,2,1,41,probe view physical variablesthese probe simscape multi domain physical modeling tool simscape sim driveline simhydraulics simelectronics ssc probe file call file contain probe view across variable domain ssc motor slx file example see help block additional usage note learn mathworks physical modeling product mathworks com solution physical htmlthis toolbox develop tom egel consulting service http mathworks com service consult group motor controlpower conversion controlpower electronics control,"['probe', 'view', 'physical', 'variablesthese', 'probe', 'simscape', 'multi', 'domain', 'physical', 'modeling', 'tool', 'simscape', 'sim', 'driveline', 'simhydraulics', 'simelectronics', 'ssc', 'probe', 'file', 'call', 'file', 'contain', 'probe', 'view', 'across', 'variable', 'domain', 'ssc', 'motor', 'slx', 'file', 'example', 'see', 'help', 'block', 'additional', 'usage', 'note', 'learn', 'mathworks', 'physical', 'modeling', 'product', 'mathworks', 'com', 'solution', 'physical', 'htmlthis', 'toolbox', 'develop', 'tom', 'egel', 'consulting', 'service', 'http', 'mathworks', 'com', 'service', 'consult', 'group', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",7
122,17994,"This code evaluates the determinant of a 3 by 3  matrix in simulink<p>This simulink block evaluates the determinant of a 3 by 3  matrix.</p>3 by 3,determinant,linear algebra,matrix,simulink",51,1,2,0,48,code evaluate determinant matrix block evaluate determinant matrix,"['code', 'evaluate', 'determinant', 'matrix', 'block', 'evaluate', 'determinant', 'matrix']",0
123,18017,"This is a Simulink Block to plot 3-phase graph during simulation<p>This is a tiny project just to show how we can build a useful tools from the available graphics commands in MATLAB .  In this project I had been used the ""Plot Annotation"" Commands to write a program in Simulink using ""Embedded MATLAB Function""block to plot the vectors in 3-phase systems.  In general this block is useful for power engineers &amp; educational purposes .</p>annotation,customization,graphics,phases,plot,power systems",36,10,4,2,31,block plot phase graph tiny project show build useful tool available graphic command project plot annotation command write program embedded function block plot vector phase general block useful power engineer amp educational purpose,"['block', 'plot', 'phase', 'graph', 'tiny', 'project', 'show', 'build', 'useful', 'tool', 'available', 'graphic', 'command', 'project', 'plot', 'annotation', 'command', 'write', 'program', 'embedded', 'function', 'block', 'plot', 'vector', 'phase', 'general', 'block', 'useful', 'power', 'engineer', 'amp', 'educational', 'purpose']",7
124,18075,"This set of Simulink models demonstrates how to create a reusable Embedded MATLAB function for scala<p>The three Simulink models provided demonstrate how to develop a reusable Embedded MATLAB function that can be used on scalars and vectors.  The Embedded MATLAB function, a simple quadratic equation, is implemented in the model my_eml_func.mdl.  This model is referenced as a Model Reference in the library my_lib.mdl.  The library contains a configurable subsystem that can be set to either a scalar or vector choice.  The scalar choice contains just the reference model for the Embedded MATLAB function and the vector choice contains the same reference model plus a for iterator, vector selector blocks and a vector assignment block.  The latter subsystem allows the Embedded MATLAB function to operate in a for loop that addapts to the size of the input signals.  A third model, eml_mr_inherited_dim.mdl, includes three instances of the library block to demostrate how the single Embedded MATLAB function can be used for a scalar input, a vector input of width 3 and a vector input of width 5. This example does have two limitations.  This first limitation is that all inputs to the function must have the same vector width. The second limitation is that the Embedded MATLAB function cannot contain any persistent variables.This technique allows a reusable Embedded MATLAB function to be built and tested once, then the function can be reused many times in other models on any size input vector.For more information about the Embedded MATLAB subset, please visit the MathWorks web-site:<a href=""http://www.mathworks.com/products/featured/embeddedmatlab/"">http://www.mathworks.com/products/featured/embeddedmatlab/</a></p>embedded matlab,modelbased design,scalars,simulink",24,3,1,0,20,set demonstrate create reusable embedded function scalathe three provide demonstrate develop reusable embed function scalar vector embed function simple quadratic equation implement eml func mdl reference reference lib mdl contain configurable subsystem set either scalar vector choice scalar choice contains reference embed function vector choice contain reference plus iterator vector selector block vector assignment block latter subsystem allow embed function operate loop addapts size input signal third eml inherited dim mdl include three instance block demostrate single embed function scalar input vector input width vector input width example two limitation first limitation input function must vector width second limitation embed function contain persistent variable technique allow reusable embedded function build test function reuse many time size input vector information embed subset please visit mathworks web site http mathworks com product feature embeddedmatlab embed,"['set', 'demonstrate', 'create', 'reusable', 'embedded', 'function', 'scalathe', 'three', 'provide', 'demonstrate', 'develop', 'reusable', 'embed', 'function', 'scalar', 'vector', 'embed', 'function', 'simple', 'quadratic', 'equation', 'implement', 'eml', 'func', 'mdl', 'reference', 'reference', 'lib', 'mdl', 'contain', 'configurable', 'subsystem', 'set', 'either', 'scalar', 'vector', 'choice', 'scalar', 'choice', 'contains', 'reference', 'embed', 'function', 'vector', 'choice', 'contain', 'reference', 'plus', 'iterator', 'vector', 'selector', 'block', 'vector', 'assignment', 'block', 'latter', 'subsystem', 'allow', 'embed', 'function', 'operate', 'loop', 'addapts', 'size', 'input', 'signal', 'third', 'eml', 'inherited', 'dim', 'mdl', 'include', 'three', 'instance', 'block', 'demostrate', 'single', 'embed', 'function', 'scalar', 'input', 'vector', 'input', 'width', 'vector', 'input', 'width', 'example', 'two', 'limitation', 'first', 'limitation', 'input', 'function', 'must', 'vector', 'width', 'second', 'limitation', 'embed', 'function', 'contain', 'persistent', 'variable', 'technique', 'allow', 'reusable', 'embedded', 'function', 'build', 'test', 'function', 'reuse', 'many', 'time', 'size', 'input', 'vector', 'information', 'embed', 'subset', 'please', 'visit', 'mathworks', 'web', 'site', 'http', 'mathworks', 'com', 'product', 'feature', 'embeddedmatlab', 'embed']",7
125,18402,"MATLAB Code used in the Jan 2008 Digest Article<p>Dowloadable code used in the Jan 2008 MATLAB Digest Article 'Designing for Reliability and Robustness'Article location:<a href=""https://www.mathworks.com/company/newsletters/articles/designing-for-reliability-and-robustness.html"">https://www.mathworks.com/company/newsletters/articles/designing-for-reliability-and-robustness.html</a> </p>durability,opt,optimization,probability,realiability,robust design,uncertainty,robust design,uncertainty",104,6,3,0,122,code jan digest code jan digest article design reliability robustness article location mathworks com company newsletter article design reliability robustness html,"['code', 'jan', 'digest', 'code', 'jan', 'digest', 'article', 'design', 'reliability', 'robustness', 'article', 'location', 'mathworks', 'com', 'company', 'newsletter', 'article', 'design', 'reliability', 'robustness', 'html']",0
126,18403,"This set of models and word documents show an echo canceller development workflow.<p>The purpose of this workflow is to bring new users up to speed as quickly as possible on Simulink and Model-Based Design. It does this in the context of an echo canceller example targeted for a Microchip DSP. We concentrate on good modeling practices, C code generation, MATLAB integration in Simulink, how to target a Microchip dsPIC, and code verification using Simulink test benches. Itâs important to point out that the steps required to target a dsPIC are similar to those for targeting any DSP. This workflow does all of this using an integrated set of Word files, M-files, and Simulink models. We hope you find it useful. This echo canceller workflow is broken into a series of 10 chapters.</p>audio processing,echo cancellation dspic simulink tutorial fixedpoint,video processing",2502,273,5,19,2345,set word document show echo canceller development workflow purpose workflow bring new user speed quickly possible base design context echo canceller example target microchip dsp concentrate good modeling practice code generation integration target microchip dspic code verification test bench important point step require target dspic similar target dsp workflow integrate set word file file hope find useful echo canceller workflow broken series chapter audio processingecho cancellation dspic tutorial fixedpointvideo processing,"['set', 'word', 'document', 'show', 'echo', 'canceller', 'development', 'workflow', 'purpose', 'workflow', 'bring', 'new', 'user', 'speed', 'quickly', 'possible', 'base', 'design', 'context', 'echo', 'canceller', 'example', 'target', 'microchip', 'dsp', 'concentrate', 'good', 'modeling', 'practice', 'code', 'generation', 'integration', 'target', 'microchip', 'dspic', 'code', 'verification', 'test', 'bench', 'important', 'point', 'step', 'require', 'target', 'dspic', 'similar', 'target', 'dsp', 'workflow', 'integrate', 'set', 'word', 'file', 'file', 'hope', 'find', 'useful', 'echo', 'canceller', 'workflow', 'broken', 'series', 'chapter', 'audio', 'processingecho', 'cancellation', 'dspic', 'tutorial', 'fixedpointvideo', 'processing']",0
127,18451,"A dynamic model of a steam condenser with PID control.<p>The zip file includes the model description in a pdf file, a simulink model of the steam condenser, a function to perform Reaction Curve PID tuning and an m-file to run the model.The m-file can be used to learn how to use the Reaction Curve approach to tune a PID controler. The model itself can be used to test various control design approaches, e.g. MPC.The model was developed under R14SP3 (MATLAB 7.1, Simulink 6.3). If there is any requirement to work with previous version of MATLAB/Simulink, please drop me an email.</p>pid controller,simulink model,steam condenser",38,2,2,0,51,dynamic steam condenser pid control zip file include description pdf file steam condenser function perform reaction curve pid tune file run file learn reaction curve approach tune pid controler test various control design approach mpc develop requirement work previous version please drop email pid modelsteam condenser,"['dynamic', 'steam', 'condenser', 'pid', 'control', 'zip', 'file', 'include', 'description', 'pdf', 'file', 'steam', 'condenser', 'function', 'perform', 'reaction', 'curve', 'pid', 'tune', 'file', 'run', 'file', 'learn', 'reaction', 'curve', 'approach', 'tune', 'pid', 'controler', 'test', 'various', 'control', 'design', 'approach', 'mpc', 'develop', 'requirement', 'work', 'previous', 'version', 'please', 'drop', 'email', 'pid', 'modelsteam', 'condenser']",0
128,18465,"A Simulink model to learn the Kalman filter for Gassian processes.<p>The zip file contains a Simulink model, which describes a Gassian process and the Kalman filter. A m-script is provided to show how to use this model from the command window. Two examples taken from the File Exchange are included in the m-file to explain how the Kalman filter works.The package provides a way for beginners to learn the Kalman filter by just editting the model parameters without the need to know the details of calculation. By looking into masked subsystems, you will also be albe to learn how it can be implemented in Simulink. The model is developed in R14SP1 (MATLAB 7.0.1, Simulink 6.1). If you require it to work with previous version, please let me know.The new version removes a bug so that it can correctly work with non-zero D.</p>filter analysis,filter design,gaussian process,kalman filter,simulink,state observer,state space control,kalman filter,kalman filter,kalman filter,filter design,kalman filter,kalman filter",48,2,2,0,55,learn kalman filter gassian process zip file contain describes gassian process kalman filter script provide show command window two example take file exchange include file explain kalman filter work package provide way beginner learn kalman filter editting parameter without need know detail calculation look mask subsystem also albe learn implement developed require work previous version please let know new version remove bug correctly work non zero filter analysisfilter designgaussian processkalman observerstate space controlkalman filterkalman filterkalman filterfilter designkalman filterkalman filter,"['learn', 'kalman', 'filter', 'gassian', 'process', 'zip', 'file', 'contain', 'describes', 'gassian', 'process', 'kalman', 'filter', 'script', 'provide', 'show', 'command', 'window', 'two', 'example', 'take', 'file', 'exchange', 'include', 'file', 'explain', 'kalman', 'filter', 'work', 'package', 'provide', 'way', 'beginner', 'learn', 'kalman', 'filter', 'editting', 'parameter', 'without', 'need', 'know', 'detail', 'calculation', 'look', 'mask', 'subsystem', 'also', 'albe', 'learn', 'implement', 'developed', 'require', 'work', 'previous', 'version', 'please', 'let', 'know', 'new', 'version', 'remove', 'bug', 'correctly', 'work', 'non', 'zero', 'filter', 'analysisfilter', 'designgaussian', 'processkalman', 'observerstate', 'space', 'controlkalman', 'filterkalman', 'filterkalman', 'filterfilter', 'designkalman', 'filterkalman', 'filter']",0
129,18485,"A Simulink model to learn the continuous-time Kalman-Bucy Filter<p>This model simulates the continuous-time version of Kalman filter, i.e. Kalman-Bucy filter working with a continuous-time Gassian process. An m-file is developed to provide several examples to show how the Simulink model can be used. The package is suitable for beginner to learn the Kalman-Bucy filter by just changing the model parameters without to know the details of calculations. By looking into masked subsystems, you will also be albe to learn how it can be implemented in Simulink.The model is developed in MATLAB R14SP1 (MATLAB 7.0.1, Simulink 6.1). If there is a need to work with previous version, please let me know.</p>continuoustime filter,filter analysis,filter design,kalman filter,kalmanbucy filter",43,2,2,0,50,learn continuous time kalman bucy filterthis continuous time version kalman filter kalman bucy filter work continuous time gassian process file develop provide several example show used package suitable beginner learn kalman bucy filter change parameter without know detail calculation look mask subsystem also albe learn implement develop need work previous version please let know continuoustime filterfilter analysisfilter designkalman filter,"['learn', 'continuous', 'time', 'kalman', 'bucy', 'filterthis', 'continuous', 'time', 'version', 'kalman', 'filter', 'kalman', 'bucy', 'filter', 'work', 'continuous', 'time', 'gassian', 'process', 'file', 'develop', 'provide', 'several', 'example', 'show', 'used', 'package', 'suitable', 'beginner', 'learn', 'kalman', 'bucy', 'filter', 'change', 'parameter', 'without', 'know', 'detail', 'calculation', 'look', 'mask', 'subsystem', 'also', 'albe', 'learn', 'implement', 'develop', 'need', 'work', 'previous', 'version', 'please', 'let', 'know', 'continuoustime', 'filterfilter', 'analysisfilter', 'designkalman', 'filter']",7
130,18628,"A feedback view of Kalman filter to gain more useful insights.<p>The Kalman filter is a feedback system. A Simulink model is developed to view this more clearly. From the feedback blocks, it is clear the normal Kalman filter is a linear time-variant system. By replacing the time-varying filter gain with its steady-state values, a simple linear time-invariant version of Kalman filter is provided in Simulink as well. Examples show that all these models provide similar performance.</p>feedback control,filter analysis,filter design,gaussian process,kalman filter,simulink,timeinva,kalman filter induction motor",111,8,3,0,120,feedback view kalman filter gain useful insight kalman filter feedback develop view clearly feedback block clear normal kalman filter linear time variant replacing time vary filter gain steady state value simple linear time invariant version kalman filter provide well examples show provide similar performance feedback controlfilter analysisfilter designgaussian processkalman filter induction motor,"['feedback', 'view', 'kalman', 'filter', 'gain', 'useful', 'insight', 'kalman', 'filter', 'feedback', 'develop', 'view', 'clearly', 'feedback', 'block', 'clear', 'normal', 'kalman', 'filter', 'linear', 'time', 'variant', 'replacing', 'time', 'vary', 'filter', 'gain', 'steady', 'state', 'value', 'simple', 'linear', 'time', 'invariant', 'version', 'kalman', 'filter', 'provide', 'well', 'examples', 'show', 'provide', 'similar', 'performance', 'feedback', 'controlfilter', 'analysisfilter', 'designgaussian', 'processkalman', 'filter', 'induction', 'motor']",0
131,18727,"This demo shows how to use embedded MATLAB to compute mod3 of a number in a hardware friendly fashio<p>Hardware design and implementation of an algorithm is all about finding alternatives to achieve some design goals like higher performance, low area or low power etc.,Often when designing hardware algorithms one would stumble upon an expensive operation like division or modulo and would be hard pressed to replace it with  a low cost alternative like repeated subtraction to meet the design goals.Consider (m mod n) operation as shown below  (m mod n) = (m - (n * floor(m/n))In the above expression division operator consumes lots of FPGA resources and creates long critical paths reducing performance of the algorithm.This demo shows how to compute modulo of in a hardware friendly fashion by avoiding expensive division. It shows how to compute mod3 of a 32 bit number as a tree of mod3 operations on a 4bit numbers which can be implemented as an inexpensive multiplexer.This algorithm breaks the binary number (m) into equal number of chunks and computes modulo(n) on the smaller chunks, concatenates the resultant values and repeats; This algorithm uses bitslice and bitconcat functions to extract smaller chunks (nibbles in this case) and a simple switch to calculate the mod3 of a 4bit slice;</p>embedded matlab,fpga,hdl,modulo",18,2,2,0,17,demo show embed compute mod number hardware friendly fashiohardware design implementation algorithm find alternative achieve design goal like high performance low area low power etc often design hardware algorithm one would stumble upon expensive operation like division modulo would hard pressed replace low cost alternative like repeat subtraction meet design goal consider mod operation show mod floor expression division operator consume lot fpga resource create long critical path reduce performance algorithm demo show compute modulo hardware friendly fashion avoid expensive division show compute mod bit number tree mod operation bite number implement inexpensive multiplexer algorithm break binary number equal number chunk compute modulo small chunk concatenates resultant value repeat algorithm bitslice bitconcat function extract small chunk nibble case simple switch calculate mod bit slice embed,"['demo', 'show', 'embed', 'compute', 'mod', 'number', 'hardware', 'friendly', 'fashiohardware', 'design', 'implementation', 'algorithm', 'find', 'alternative', 'achieve', 'design', 'goal', 'like', 'high', 'performance', 'low', 'area', 'low', 'power', 'etc', 'often', 'design', 'hardware', 'algorithm', 'one', 'would', 'stumble', 'upon', 'expensive', 'operation', 'like', 'division', 'modulo', 'would', 'hard', 'pressed', 'replace', 'low', 'cost', 'alternative', 'like', 'repeat', 'subtraction', 'meet', 'design', 'goal', 'consider', 'mod', 'operation', 'show', 'mod', 'floor', 'expression', 'division', 'operator', 'consume', 'lot', 'fpga', 'resource', 'create', 'long', 'critical', 'path', 'reduce', 'performance', 'algorithm', 'demo', 'show', 'compute', 'modulo', 'hardware', 'friendly', 'fashion', 'avoid', 'expensive', 'division', 'show', 'compute', 'mod', 'bit', 'number', 'tree', 'mod', 'operation', 'bite', 'number', 'implement', 'inexpensive', 'multiplexer', 'algorithm', 'break', 'binary', 'number', 'equal', 'number', 'chunk', 'compute', 'modulo', 'small', 'chunk', 'concatenates', 'resultant', 'value', 'repeat', 'algorithm', 'bitslice', 'bitconcat', 'function', 'extract', 'small', 'chunk', 'nibble', 'case', 'simple', 'switch', 'calculate', 'mod', 'bit', 'slice', 'embed']",5
132,18812,"Model of action potential firing by an A-type nodose neuron<p>Simulink implementation of nodose neuron action potential firing with parameters from the following studies:Schild,J.H., Clark,J.W., Hay,M., Mendelowitz,D., Andresen,M.C., and Kunze,D.L. (1994). A- and C-type rat nodose sensory neurons: model interpretations of dynamic discharge characteristics. J. Neurophysiol. 71, 2338-2358.Schild,J.H., and Kunze,D.L. (1997). Experimental and modeling study of Na+ current heterogeneity in rat nodose neurons and its impact on neuronal discharge. J. Neurophysiol. 78, 3198-3209.The screenshot image is the response to 0.04 nA current injection from the resting membrane potential at 37C.</p>action potential,biotech,hodgkinhuxley model,neuron,neuroscience,nodose neuron,pharmaceutical,simulink,action potential,action potential",214,17,2,0,268,action potential firing type nodose implementation nodose neuron action potential firing parameter follow study schildj clarkj haym mendelowitzd andresenm kunzed type rat nodose sensory neuron interpretation dynamic discharge characteristic neurophysiol schildj kunzed experimental modeling study current heterogeneity rat nodose neuron impact neuronal discharge neurophysiol screenshot image response current injection rest membrane potential action potentialaction potential,"['action', 'potential', 'firing', 'type', 'nodose', 'implementation', 'nodose', 'neuron', 'action', 'potential', 'firing', 'parameter', 'follow', 'study', 'schildj', 'clarkj', 'haym', 'mendelowitzd', 'andresenm', 'kunzed', 'type', 'rat', 'nodose', 'sensory', 'neuron', 'interpretation', 'dynamic', 'discharge', 'characteristic', 'neurophysiol', 'schildj', 'kunzed', 'experimental', 'modeling', 'study', 'current', 'heterogeneity', 'rat', 'nodose', 'neuron', 'impact', 'neuronal', 'discharge', 'neurophysiol', 'screenshot', 'image', 'response', 'current', 'injection', 'rest', 'membrane', 'potential', 'action', 'potentialaction', 'potential']",8
133,18833,"A Simulink model configurable to buck, boost and buck-boost  DC-DC converters with PWM PI control<p>This package includes a configurable Simulink model for three different types of DC-DC converters (Buck, Boost and Buck-Boost converters) with a PWM PI controller. The example provided shows a case to boost voltage from 5 volts to 25 volts. It can be used to learn DC-DC converters and their control. The model itself also provides an example how to mask a subsystem in Simulink. A HTML and a pdf files are provided to explain the principles of the unform Simulink model for three different types of DC-DC converters. The model does not require other Simulink blocks, such as SimPowerSystems.</p>buck converter,dc converter,electronics,pi control,pwm control,pick of the week,potw,pi controller,boost regulator,electric_motor_control,power_conversion_control,power_electronics_control",98,8,3,0,122,configurable buck boost buck boost converter pwm controlthis package include configurable three different type converter buck boost buck boost converter pwm controller example provide show case boost voltage volt volt learn converter control also provide example mask subsystem html pdf file provide explain principle unform three different type converter require block simpowersystems buck converterdc controlpwm controlpick weekpotwpi controllerboost motor controlpower conversion controlpower electronics control,"['configurable', 'buck', 'boost', 'buck', 'boost', 'converter', 'pwm', 'controlthis', 'package', 'include', 'configurable', 'three', 'different', 'type', 'converter', 'buck', 'boost', 'buck', 'boost', 'converter', 'pwm', 'controller', 'example', 'provide', 'show', 'case', 'boost', 'voltage', 'volt', 'volt', 'learn', 'converter', 'control', 'also', 'provide', 'example', 'mask', 'subsystem', 'html', 'pdf', 'file', 'provide', 'explain', 'principle', 'unform', 'three', 'different', 'type', 'converter', 'require', 'block', 'simpowersystems', 'buck', 'converterdc', 'controlpwm', 'controlpick', 'weekpotwpi', 'controllerboost', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
134,18942,"Shell extension describing an MDL file's contents (created using Real-Time Workshop and Stateflow)<p>By default, the tooltip which is shown in Windows Explorer when you hold the mouse over an MDL-file icon says only ""Simulink Model File"".  This is misleading in the case where the MDL file contains a Simulink Library.  With this shell extension, the Windows Explorer distinguishes between these two types of file and also includes the Description field, if the file includes one.The code to extract the description from an MDL file has been generated from a Stateflow chart using the Real-Time Workshop.  The model containing the chart is included.Source code is provided, including a Visual Studio 2005 project.  Some header files from the Real-Time Workshop installation are required, and it may be necessary to edit the project file if your MATLAB installation is in a different location from mine.  It has been tested on Windows XP, using Microsoft Visual Studio 2005.  At runtime, the extension is independent of MATLAB and Simulink.This shell extension is based heavily on an example published in The Code Project's ""Idiot's Guide to Writing Shell Extensions"":<a href=""https://www.codeproject.com/Articles/441/The-Complete-Idiot-s-Guide-to-Writing-Shell-Extens"">https://www.codeproject.com/Articles/441/The-Complete-Idiot-s-Guide-to-Writing-Shell-Extens</a>  Also included in the ZIP file is the pre-compiled DLL, MdlInfo.dll.  To use this without compiling it yourself, copy it to a permanent location on your machine and run the DOS command: ""regsvr32 MdlInfo.dll"" in the directory containing the DLL.To uninstall the extension run ""regsvr32 /U MdlInfo.dll"".</p>simulink,simulink stateflow codegen mdl windows explorer tooltip shell ex",2,0,1,0,1,shell extension describe mdl file content create real time workshop stateflow default tooltip show window explorer hold mouse mdl file icon say file mislead case mdl file contain shell extension window explorer distinguishes two type file also include description field file include one code extract description mdl file generate stateflow chart real time workshop contain chart include source code provide include visual studio project header file real time workshop installation require may necessary edit project file installation different location mine test window microsoft visual studio runtime extension independent shell extension base heavily example publish code project idiot guide write shell extension codeproject com article complete idiot guide write shell extens also include zip file pre compile dll mdlinfo dll without compile copy permanent location machine run dos command regsvr mdlinfo dll directory contain dll uninstall extension run regsvr mdlinfo dll stateflow codegen mdl windows explorer tooltip shell,"['shell', 'extension', 'describe', 'mdl', 'file', 'content', 'create', 'real', 'time', 'workshop', 'stateflow', 'default', 'tooltip', 'show', 'window', 'explorer', 'hold', 'mouse', 'mdl', 'file', 'icon', 'say', 'file', 'mislead', 'case', 'mdl', 'file', 'contain', 'shell', 'extension', 'window', 'explorer', 'distinguishes', 'two', 'type', 'file', 'also', 'include', 'description', 'field', 'file', 'include', 'one', 'code', 'extract', 'description', 'mdl', 'file', 'generate', 'stateflow', 'chart', 'real', 'time', 'workshop', 'contain', 'chart', 'include', 'source', 'code', 'provide', 'include', 'visual', 'studio', 'project', 'header', 'file', 'real', 'time', 'workshop', 'installation', 'require', 'may', 'necessary', 'edit', 'project', 'file', 'installation', 'different', 'location', 'mine', 'test', 'window', 'microsoft', 'visual', 'studio', 'runtime', 'extension', 'independent', 'shell', 'extension', 'base', 'heavily', 'example', 'publish', 'code', 'project', 'idiot', 'guide', 'write', 'shell', 'extension', 'codeproject', 'com', 'article', 'complete', 'idiot', 'guide', 'write', 'shell', 'extens', 'also', 'include', 'zip', 'file', 'pre', 'compile', 'dll', 'mdlinfo', 'dll', 'without', 'compile', 'copy', 'permanent', 'location', 'machine', 'run', 'dos', 'command', 'regsvr', 'mdlinfo', 'dll', 'directory', 'contain', 'dll', 'uninstall', 'extension', 'run', 'regsvr', 'mdlinfo', 'dll', 'stateflow', 'codegen', 'mdl', 'windows', 'explorer', 'tooltip', 'shell']",0
135,19065,"A modified version of the shipping demo rf_amp_qam16<p>The shipping demo is modified to include a measurement on the transmitter of the phase rotation due to the amplifier.  This measurement is fed back to the Tx and the signal is pre-rotated prior to transmission to compensate for this at the Transmitter.In order to get a low BER, need to lower slider gain to about 1 and throw switch to top position.</p>predistortion,rf,predistortion",48,4,3,0,46,modify version ship demo amp qam ship demo modify include measurement transmitter phase rotation due amplifier measurement feed back signal pre rotate prior transmission compensate transmitter order get low ber need low slider gain throw switch top position,"['modify', 'version', 'ship', 'demo', 'amp', 'qam', 'ship', 'demo', 'modify', 'include', 'measurement', 'transmitter', 'phase', 'rotation', 'due', 'amplifier', 'measurement', 'feed', 'back', 'signal', 'pre', 'rotate', 'prior', 'transmission', 'compensate', 'transmitter', 'order', 'get', 'low', 'ber', 'need', 'low', 'slider', 'gain', 'throw', 'switch', 'top', 'position']",0
136,19147,"NXTway-GS Model-Based Design based on Embedded Coder Robot NXT.<p>NXTway-GS is a self-balancing two-wheeled robot built with LEGO Mindstorms NXT and a Hitechnic gyro sensor. This demo presents sample models and documents describe the following contents.How to Build NXTway-GSMathematical Dynamics Model of NXTway-GSController Design for Balance and Drive ControlNXTway-GS Model IllustrationSimulation and Experimental ResultsYou can simulate NXTway-GS model and generate controller program that can be executed on the NXT. You can watch the movies of NXTway-GS simulation and control experiment at the following URL.<a href=""http://www.youtube.com/watch?v=EHPlGTLQHRchttp://www.youtube.com/watch?v=4ulBRQKCwd4This"">http://www.youtube.com/watch?v=EHPlGTLQHRchttp://www.youtube.com/watch?v=4ulBRQKCwd4This</a> demo uses Embedded Coder Robot NXT Demo as MBD environment. You need to download it from the following URL before trying this demo.<a href=""http://www.mathworks.com/matlabcentral/fileexchange/13399LEGO(R)"">http://www.mathworks.com/matlabcentral/fileexchange/13399LEGO(R)</a> is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this demo. LEGO(R) and Mindstorms(R) are registered trademarks of The LEGO Group.</p>robotics,pick of the week,ecrobot,embed,model,modeling,potw,control,embedded code,lego,legway,mindstorms,nxt,nxtway,realtime workshop,robot,segway,verification",1855,166,8,0,1353,nxtway base design base embedded coder robot nxt nxtway self balance two wheel robot build lego mindstorms nxt hitechnic gyro sensor demo present sample document describe follow content build nxtway gsmathematical dynamic nxtway gscontroller design balance drive controlnxtway experimental resultsyou nxtway generate controller program execute nxt watch movie nxtway control experiment follow url http youtube com watch ehplgtlqhrchttp youtube com watch ulbrqkcwd demo embed coder robot nxt demo mbd environment need download follow url try demo http mathworks com matlabcentral fileexchange lego trademark lego group company sponsor authorize endorse demo lego mindstorms register trademark lego group roboticspick,"['nxtway', 'base', 'design', 'base', 'embedded', 'coder', 'robot', 'nxt', 'nxtway', 'self', 'balance', 'two', 'wheel', 'robot', 'build', 'lego', 'mindstorms', 'nxt', 'hitechnic', 'gyro', 'sensor', 'demo', 'present', 'sample', 'document', 'describe', 'follow', 'content', 'build', 'nxtway', 'gsmathematical', 'dynamic', 'nxtway', 'gscontroller', 'design', 'balance', 'drive', 'controlnxtway', 'experimental', 'resultsyou', 'nxtway', 'generate', 'controller', 'program', 'execute', 'nxt', 'watch', 'movie', 'nxtway', 'control', 'experiment', 'follow', 'url', 'http', 'youtube', 'com', 'watch', 'ehplgtlqhrchttp', 'youtube', 'com', 'watch', 'ulbrqkcwd', 'demo', 'embed', 'coder', 'robot', 'nxt', 'demo', 'mbd', 'environment', 'need', 'download', 'follow', 'url', 'try', 'demo', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'lego', 'trademark', 'lego', 'group', 'company', 'sponsor', 'authorize', 'endorse', 'demo', 'lego', 'mindstorms', 'register', 'trademark', 'lego', 'group', 'roboticspick']",0
137,19269,"A Simulink model of an evaporator with gradient control<p>This package includes a Simulink model of the evaportaor described by Newell and Lee (1989) together with a gradient control system which achieves self-optimizing operation in terms of minimizing the operation cost. The work has been published in International Journal of Automation and Computing, Vol. 2, No. 1, pp. 13ï¿½19, 2005. A preprint version of the paper is enclosed in the zip file.Gradient control is an approach to achieve optimal operation. The basic idea is that if the gradient of the cost function can be controlled at zero, then the overall system will operate at optimal condition. Anothernovalty of the work is to propose a cascade structure to deal with conditionally active constraints in optimizing control. To work with constraints, anti-windup PID controllers are used in the model.The evaporator of Newell and Lee is a popular example used in process control. Theerfore, the Simulink model of the evaporator can also be used for other control studies, for example, linear or nonlinear MPC.</p>evaporator,gradien,optimizing control,pid control,simulation model,gradien,evaporator",221,17,3,0,249,evaporator gradient controlthis package include evaportaor describe newell lee together gradient control achieve self optimize operation term minimize operation cost work publish international journal automation compute vol preprint version paper enclose zip file gradient control approach achieve optimal operation basic idea gradient cost function control zero overall operate optimal condition anothernovalty work propose cascade structure deal conditionally active constraint optimize control work constraint anti windup pid controller evaporator newell lee popular example process control theerfore evaporator also control study example linear nonlinear mpc controlpid,"['evaporator', 'gradient', 'controlthis', 'package', 'include', 'evaportaor', 'describe', 'newell', 'lee', 'together', 'gradient', 'control', 'achieve', 'self', 'optimize', 'operation', 'term', 'minimize', 'operation', 'cost', 'work', 'publish', 'international', 'journal', 'automation', 'compute', 'vol', 'preprint', 'version', 'paper', 'enclose', 'zip', 'file', 'gradient', 'control', 'approach', 'achieve', 'optimal', 'operation', 'basic', 'idea', 'gradient', 'cost', 'function', 'control', 'zero', 'overall', 'operate', 'optimal', 'condition', 'anothernovalty', 'work', 'propose', 'cascade', 'structure', 'deal', 'conditionally', 'active', 'constraint', 'optimize', 'control', 'work', 'constraint', 'anti', 'windup', 'pid', 'controller', 'evaporator', 'newell', 'lee', 'popular', 'example', 'process', 'control', 'theerfore', 'evaporator', 'also', 'control', 'study', 'example', 'linear', 'nonlinear', 'mpc', 'controlpid']",5
138,19600,"A pulse generator with amplitude, pulse width, and pulse period inputs.<p>The pulse generator included in Simulink does not provide the ability to programmatically set the parameters. This block provides inputs that allow the amplitude, pulse width, and pulse period to be set. It's fairly simple, but wasn't obvious to me so I thought I'd share it.</p>pulse generator signal,pulse generator signal,pulse generator signal,pulse generator signal,pulse generator signal,pulse generator signal,pulse generator signal,pulse generator signal",17,1,2,0,17,pulse generator amplitude pulse width pulse period input pulse generator include provide ability set parameter block provide input allow amplitude pulse width pulse period set fairly simple obvious think share pulse generator signalpulse generator signalpulse generator signalpulse generator signalpulse generator signalpulse generator signalpulse generator signalpulse generator signal,"['pulse', 'generator', 'amplitude', 'pulse', 'width', 'pulse', 'period', 'input', 'pulse', 'generator', 'include', 'provide', 'ability', 'set', 'parameter', 'block', 'provide', 'input', 'allow', 'amplitude', 'pulse', 'width', 'pulse', 'period', 'set', 'fairly', 'simple', 'obvious', 'think', 'share', 'pulse', 'generator', 'signalpulse', 'generator', 'signalpulse', 'generator', 'signalpulse', 'generator', 'signalpulse', 'generator', 'signalpulse', 'generator', 'signalpulse', 'generator', 'signalpulse', 'generator', 'signal']",4
139,19608,"Calculation of trigonometrical(sin and cos) functions by CORDIC<p>Design  of the CORDIC algorithm in System Generator of Xilinx, for the calculation both of sin(?) and cos(?) functions</p>cordic,xilinx",145,9,2,0,179,calculation trigonometrical sin function cordicdesign cordic algorithm generator xilinx calculation sin,"['calculation', 'trigonometrical', 'sin', 'function', 'cordicdesign', 'cordic', 'algorithm', 'generator', 'xilinx', 'calculation', 'sin']",5
140,19749,"Applications of CORDIC algorithm<p>Direct digital synthesis is a method to generate waveforms directly in the digital domain.</p>cordic,dds,system generator,xilinx,system generator,dds,dds,cordic,cordic,dds,cordic,cordic",172,12,3,0,217,application cordic algorithmdirect digital synthesis method generate waveform directly digital domain cordicddssystem,"['application', 'cordic', 'algorithmdirect', 'digital', 'synthesis', 'method', 'generate', 'waveform', 'directly', 'digital', 'domain', 'cordicddssystem']",5
141,19756,"Modeling and simulating mechanical friction in the SimulinkÂ® and Physical Modeling environment<p>Stephen Lunzman (Caterpillar), Dallas Kennedy and Steve Miller (The MathWorks)Systems modeled include clutches, transmission, and pistons. The friction is continuous or hybrid continuous-locking type. Locking friction requires mode iteration and algebraic loops.NOTE: If you receive MATLABÂ® command line warnings upon opening these models in a later version of Simulink, resave, close, and reopen the models in the later version.</p>friction,friction,friction,mechanical,mechanical modeling,mechanics,physical modeling,simulink",407,33,3,0,427,mechanical friction physical modeling lunzman caterpillar dallas kennedy steve miller mathworks include clutch transmission piston friction continuous hybrid continuous lock type lock friction require mode iteration algebraic loop note receive command line warning upon open later version resave close reopen later version,"['mechanical', 'friction', 'physical', 'modeling', 'lunzman', 'caterpillar', 'dallas', 'kennedy', 'steve', 'miller', 'mathworks', 'include', 'clutch', 'transmission', 'piston', 'friction', 'continuous', 'hybrid', 'continuous', 'lock', 'type', 'lock', 'friction', 'require', 'mode', 'iteration', 'algebraic', 'loop', 'note', 'receive', 'command', 'line', 'warning', 'upon', 'open', 'later', 'version', 'resave', 'close', 'reopen', 'later', 'version']",5
142,19835,"Tips on fixed-point modeling and code generation for R2008a. Includes referenced model files.<p>There are challenges to face when programming in fixed-point code manually. Similarly, care is required in automatically generating fixed-point code. The developer must pay attention to design tradeoffs, namely: accuracy, efficiency, ROM, RAM, execution time, and readability.The MathWorks tools allow you to find and understand proven remedies to these difficulties, using the ""General Solutions"" in this white paper. But the heart of this document is the rich collection of Tips it provides. The tips are the result of the combined expertise of MathWorks developers and experienced customers. The systematic application of these tips will produce optimum code.Note that this document is a major update to the previous two versions based on SimulinkÂ® 5, written by Siva Nadarajah, and Simulink 6, written by Vinod Reddy.</p>code,embedded,embedded code,eml,fixedpoint,generation,production,realtime workshop,tips,verification,code,embedded",453,26,5,0,433,tip fix point code generation include referenced file challenge face program fix point code manually similarly care require automatically generate fix point code developer must pay attention design tradeoff namely accuracy efficiency rom ram execution time readability mathworks tool allow find understand proven remedy difficulty general solution white paper heart document rich collection tip provide tip result combine expertise mathworks developer experience customer systematic application tip produce optimum code note document major update previous two version base write siva nadarajah write vinod reddy,"['tip', 'fix', 'point', 'code', 'generation', 'include', 'referenced', 'file', 'challenge', 'face', 'program', 'fix', 'point', 'code', 'manually', 'similarly', 'care', 'require', 'automatically', 'generate', 'fix', 'point', 'code', 'developer', 'must', 'pay', 'attention', 'design', 'tradeoff', 'namely', 'accuracy', 'efficiency', 'rom', 'ram', 'execution', 'time', 'readability', 'mathworks', 'tool', 'allow', 'find', 'understand', 'proven', 'remedy', 'difficulty', 'general', 'solution', 'white', 'paper', 'heart', 'document', 'rich', 'collection', 'tip', 'provide', 'tip', 'result', 'combine', 'expertise', 'mathworks', 'developer', 'experience', 'customer', 'systematic', 'application', 'tip', 'produce', 'optimum', 'code', 'note', 'document', 'major', 'update', 'previous', 'two', 'version', 'base', 'write', 'siva', 'nadarajah', 'write', 'vinod', 'reddy']",0
143,19921,"Target both cores of a BF561 microprocessor with Real-Time Workshop Embedded Coder<p>This example application shows you how to use Real-Time Workshop Embedded Coder to target a dual core Blackfin microprocessor. The complete build is managed by a template makefile and control over the memory regions is provided by custom storage classes. The example imposes a top level architecture on the model to define the split of model code between the two cores. This document describes a complete run-through of the model from Simulink simulation to code simulation using VisualDSP. I think it will take about 1 hour to go through the example once you have VisualDSP installed. The submission contains a file readme.html that gives a full description of the application example.</p>bf561,blackfin,dual core,embedded code,multiprocessor,production code,realtime workshop,target,verification",63,12,4,0,38,target core microprocessor real time workshop embed coderthis example application show real time workshop embed coder target dual core blackfin microprocessor complete build manage template makefile control memory region provide custom storage class example impose top level architecture define split code two core document describes complete run code visualdsp think take hour example visualdsp instal submission contains file readme html give full description application example blackfindual coreembedded coderealtime,"['target', 'core', 'microprocessor', 'real', 'time', 'workshop', 'embed', 'coderthis', 'example', 'application', 'show', 'real', 'time', 'workshop', 'embed', 'coder', 'target', 'dual', 'core', 'blackfin', 'microprocessor', 'complete', 'build', 'manage', 'template', 'makefile', 'control', 'memory', 'region', 'provide', 'custom', 'storage', 'class', 'example', 'impose', 'top', 'level', 'architecture', 'define', 'split', 'code', 'two', 'core', 'document', 'describes', 'complete', 'run', 'code', 'visualdsp', 'think', 'take', 'hour', 'example', 'visualdsp', 'instal', 'submission', 'contains', 'file', 'readme', 'html', 'give', 'full', 'description', 'application', 'example', 'blackfindual', 'coreembedded', 'coderealtime']",0
144,19977,"This block outputs a given element of a matrix defined by the raw and the column indices of the elem<p>This block outputs a given element of a matrix defined by the raw and the column indices of the element.Submatrix doesn't allow the user to define the indices outside the block, while this simple block does.</p>column,indices,linear algebra,matrix element,raw,simulink,column,matrix element,column",6,0,1,0,4,block output give element matrix define raw column index elemthis block output give element matrix define raw column index element submatrix allow user define index outside block simple block algebramatrix elementcolumn,"['block', 'output', 'give', 'element', 'matrix', 'define', 'raw', 'column', 'index', 'elemthis', 'block', 'output', 'give', 'element', 'matrix', 'define', 'raw', 'column', 'index', 'element', 'submatrix', 'allow', 'user', 'define', 'index', 'outside', 'block', 'simple', 'block', 'algebramatrix', 'elementcolumn']",0
145,20069,"A Shaper is presented whose parameters are tuned with Genetic Alg. suitable for unknown dynamics<p>The purpose of Input Shaping is to filter out big changes (typically steps) in the reference signal of a closed-loop system which excite all the modes of the plant causing relevant snap overshoots and oscillations in the response.The underlying working principle is to apply the step in subsequent portions with a proper amplitude and time instants so that the modes are excited in counter-phase (posicast) and the resulting oscillations are reduced as much as possible. In case of a plant with a known dynamics, the coefficients C and time instant T of the shaper are computed in literature by a pole-zeros analysis.Genetic Algorithm is used here to train the shaper parameters accounting for plant uncertainties and even when no a priori knowledge is given about the dynamic. GA approach turn out to be extremely effective and is capable of improving the performances also in conditions when standard techniques are usually adopted.The Shaper is designed as a state machine in order to be easily coded within embedded systems, e.g. through Real Time Embedded Coder.The function implementing the GA optimization is  in the M-file shaperScan: it tunes the shaper parameters for the plant given in the model Plant.mdl (a 3-modes plant is given as an example).Ugo</p>input shaping genetic algorithm,system identification,system identification",538,16,3,0,631,shaper present whose parameter tune genetic alg suitable unknown dynamicsthe purpose input shape filter big change typically step reference signal close loop excite mode plant cause relevant snap overshoot oscillation response underlie work principle apply step subsequent portion proper amplitude time instant mode excite counter phase posicast result oscillation reduce much possible case plant know dynamic coefficient time instant shaper compute literature pole zero analysis genetic algorithm train shaper parameter accounting plant uncertainty even priori knowledge give dynamic approach turn extremely effective capable improve performance also condition standard technique usually adopt shaper design state machine order easily cod within embed real time embed coder function implement optimization file shaperscan tune shaper parameter plant give plant mdl mode plant give example ugoinput shape genetic algorithmsystem identification,"['shaper', 'present', 'whose', 'parameter', 'tune', 'genetic', 'alg', 'suitable', 'unknown', 'dynamicsthe', 'purpose', 'input', 'shape', 'filter', 'big', 'change', 'typically', 'step', 'reference', 'signal', 'close', 'loop', 'excite', 'mode', 'plant', 'cause', 'relevant', 'snap', 'overshoot', 'oscillation', 'response', 'underlie', 'work', 'principle', 'apply', 'step', 'subsequent', 'portion', 'proper', 'amplitude', 'time', 'instant', 'mode', 'excite', 'counter', 'phase', 'posicast', 'result', 'oscillation', 'reduce', 'much', 'possible', 'case', 'plant', 'know', 'dynamic', 'coefficient', 'time', 'instant', 'shaper', 'compute', 'literature', 'pole', 'zero', 'analysis', 'genetic', 'algorithm', 'train', 'shaper', 'parameter', 'accounting', 'plant', 'uncertainty', 'even', 'priori', 'knowledge', 'give', 'dynamic', 'approach', 'turn', 'extremely', 'effective', 'capable', 'improve', 'performance', 'also', 'condition', 'standard', 'technique', 'usually', 'adopt', 'shaper', 'design', 'state', 'machine', 'order', 'easily', 'cod', 'within', 'embed', 'real', 'time', 'embed', 'coder', 'function', 'implement', 'optimization', 'file', 'shaperscan', 'tune', 'shaper', 'parameter', 'plant', 'give', 'plant', 'mdl', 'mode', 'plant', 'give', 'example', 'ugoinput', 'shape', 'genetic', 'algorithmsystem', 'identification']",0
146,20112,"simulink realization of Morris-Lecar neuron model<p>This is a simulink realization of Morris-Lecar neuron model.Run the ML_parameter.m first to load the parameters to the Workspace,and then run the ML.mdl to simulate the ML neuron model.The parameters and ode algorithm,step length,can be changed to your own interest. See""<a href=""http://www.scholarpedia.org/article/Morris-Lecar_model"">www.scholarpedia.org/article/Morris-Lecar_model</a>"" for more detail</p>biotech,ml,ml neuron model,morris lecar,neuron,neuron model,pharmaceutical,ml,ml neuron model",33,3,2,0,36,realization morris lecar neuron modelthis realization morris lecar neuron run parameter first load parameter workspaceand run mdl neuron parameter ode algorithmstep lengthcan change interest see scholarpedia org article morris lecar neuron modelmorris neuron,"['realization', 'morris', 'lecar', 'neuron', 'modelthis', 'realization', 'morris', 'lecar', 'neuron', 'run', 'parameter', 'first', 'load', 'parameter', 'workspaceand', 'run', 'mdl', 'neuron', 'parameter', 'ode', 'algorithmstep', 'lengthcan', 'change', 'interest', 'see', 'scholarpedia', 'org', 'article', 'morris', 'lecar', 'neuron', 'modelmorris', 'neuron']",5
147,20160,"Files for the joint MathWorks and Xilinx seminar: Video Surveillance System Design<p>This zip file includes Simulink models and Xilinx files used in the joint MathWorks and Xilinx seminar: Video Surveillance System Design with SimulinkÂ® and XilinxÂ® FPGAs.</p>fpga,generator,hdl,simulink,system,verilog,vhdl,video,vip,hdl,verilog,vhdl,generator,fpga",2556,202,5,0,2891,file joint mathworks xilinx seminar video surveillance designthis zip file include xilinx file joint mathworks xilinx seminar video surveillance design xilinx fpgas,"['file', 'joint', 'mathworks', 'xilinx', 'seminar', 'video', 'surveillance', 'designthis', 'zip', 'file', 'include', 'xilinx', 'file', 'joint', 'mathworks', 'xilinx', 'seminar', 'video', 'surveillance', 'design', 'xilinx', 'fpgas']",0
148,20291,"Modeling of DC-DC Boost Converter using Simlink Tools with Open Loop PWM<p>A DC/DC Boost Converter was developed using the simulink tool box. The converter can be analysed with variation of duty ratio k with the increasing output voltage. PWM generation with open loop strategy gives idea to develop in closed loop technique. Analysis can be made for percentage ripple in the output voltage.</p>boost converter,boost converter,buck converter,dcdc converter,pulse width mod,pwm,simulation,dcdc converter,boost converter,boost converter,boost converter,boost converter,boost converter,boost converter,boost converter,boost converter,boost converter,boost converter,pwm,simulation,electric_motor_control,power_conversion_control,power_electronics_control,boost converter,boost converter",35,4,3,0,32,boost converter simlink tool open loop pwma boost converter develop tool box converter analyse variation duty ratio increase output voltage pwm generation open loop strategy give idea develop close loop technique analysis make percentage ripple output voltage boost converterboost converterbuck converterdcdc converterpulse width converterboost converterboost converterboost converterboost converterboost converterboost converterboost converterboost converterboost converterboost motor controlpower conversion controlpower electronics controlboost converterboost converter,"['boost', 'converter', 'simlink', 'tool', 'open', 'loop', 'pwma', 'boost', 'converter', 'develop', 'tool', 'box', 'converter', 'analyse', 'variation', 'duty', 'ratio', 'increase', 'output', 'voltage', 'pwm', 'generation', 'open', 'loop', 'strategy', 'give', 'idea', 'develop', 'close', 'loop', 'technique', 'analysis', 'make', 'percentage', 'ripple', 'output', 'voltage', 'boost', 'converterboost', 'converterbuck', 'converterdcdc', 'converterpulse', 'width', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'converterboost', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterboost', 'converter']",3
149,20415,"A step-by-step tutorial on how to create custom device drivers for xPC Target using xpcdrivertool.<p>Roll up your sleeves and dive into the world of device drivers; follow along to create custom driver blocks, or look at the provided solutions. This tutorial contains step-by-step instructions on how to write and build custom device drivers for xPC Target. Using the xPC Target Driver Authoring Tool, creating your own device drivers has never been easier. The tool creates a template, allowing you to add your own custom code and this demonstration shows you how. The tutorial begins with the file Tutorial.pdf.</p>ddk,drivers,xpc target,xpcdrivertool,ddk",7,0,1,0,4,step step tutorial create custom device driver xpc target xpcdrivertool roll sleeve dive world device driver follow along create custom driver block look provided solution tutorial contains step step instruction write build custom device driver xpc target xpc target driver author tool create device driver never easy tool creates template allow add custom code demonstration show tutorial begin file tutorial pdf ddkdriversxpc,"['step', 'step', 'tutorial', 'create', 'custom', 'device', 'driver', 'xpc', 'target', 'xpcdrivertool', 'roll', 'sleeve', 'dive', 'world', 'device', 'driver', 'follow', 'along', 'create', 'custom', 'driver', 'block', 'look', 'provided', 'solution', 'tutorial', 'contains', 'step', 'step', 'instruction', 'write', 'build', 'custom', 'device', 'driver', 'xpc', 'target', 'xpc', 'target', 'driver', 'author', 'tool', 'create', 'device', 'driver', 'never', 'easy', 'tool', 'creates', 'template', 'allow', 'add', 'custom', 'code', 'demonstration', 'show', 'tutorial', 'begin', 'file', 'tutorial', 'pdf', 'ddkdriversxpc']",0
150,20731,"Mittag-Leffler function, M-file, cmex DLL, and S-function<p>The code in this .zip file provides a m-file, cmex dll, and a s-function block for a Mittag-Leffler function in two parameters. For details download the .zip file and go throuhg the readme.pdf</p>cmex,fractional calculus,mfile,mittag leffler,mittag leffler,mittag leffler function",7,0,1,0,6,mittag leffler function file cmex dll functionthe code zip file provide file cmex dll function block mittag leffler function two parameter detail download zip file throuhg readme lefflermittag lefflermittag leffler function,"['mittag', 'leffler', 'function', 'file', 'cmex', 'dll', 'functionthe', 'code', 'zip', 'file', 'provide', 'file', 'cmex', 'dll', 'function', 'block', 'mittag', 'leffler', 'function', 'two', 'parameter', 'detail', 'download', 'zip', 'file', 'throuhg', 'readme', 'lefflermittag', 'lefflermittag', 'leffler', 'function']",7
151,20879,"The Histogram Overlay Block plots a histogram onto your video in SimulinkÂ®<p>The Histogram Overlay block adds a histogram overlay onto your video stream.   It will operate with both grayscale and RGB images as well as varying data types.  It also allows you to specify the frame color to help make the plot more visible.You can add this block to the Video and Image Processing Blocksetâ¢ library so that it is available with other Text and Graphics blocks.</p>blockset,graphics,histogram overlay,image,text,video",123,17,5,0,129,histogram overlay block plot histogram onto video histogram overlay block add histogram overlay onto video stream operate grayscale rgb image well vary data type also allow specify frame color help make plot visible add block video image processing blockset available text graphic block,"['histogram', 'overlay', 'block', 'plot', 'histogram', 'onto', 'video', 'histogram', 'overlay', 'block', 'add', 'histogram', 'overlay', 'onto', 'video', 'stream', 'operate', 'grayscale', 'rgb', 'image', 'well', 'vary', 'data', 'type', 'also', 'allow', 'specify', 'frame', 'color', 'help', 'make', 'plot', 'visible', 'add', 'block', 'video', 'image', 'processing', 'blockset', 'available', 'text', 'graphic', 'block']",0
152,21039,"WiMAX Physical and MAC Layer<p>Matlab source code for the test vectors and Simulink model for physical layer with MAC Layer addition to the previous model. This model is based on Physical Layer Specification of IEEE 802.16e and ETSI HiperMAN. Run Data.m to copy data to workspace and then run the WiMAX_Test_4.mdl model.</p>coding,modulation,ofdm,qam,qpsk,viterbi,wimax 80216,wireless,coding,coding,wimax 80216,wimax 80216,wireless,modulation,coding",141,20,2,0,131,wimax physical mac layermatlab source code test vector physical layer mac layer addition previous base physical layer specification iee etsi hiperman run data copy data workspace run wimax test mdl wimax,"['wimax', 'physical', 'mac', 'layermatlab', 'source', 'code', 'test', 'vector', 'physical', 'layer', 'mac', 'layer', 'addition', 'previous', 'base', 'physical', 'layer', 'specification', 'iee', 'etsi', 'hiperman', 'run', 'data', 'copy', 'data', 'workspace', 'run', 'wimax', 'test', 'mdl', 'wimax']",0
153,21261,"This file contains a guide_simulink_sfunction interface. It is a fairly easy and simple application.<p>This file contains a guide_simulink_sfunction interface. It is a fairly easy and simple application.  It was mainly created as a reply for a question from one of the students on âhow to display the simulink results in real time in a gui interface, outside the boundries of simulink?â the gui(simulink_gui_interface) is a simple one. It calls the simulink model(simulink_model.mdl), which in return uses an s-function(sfun.m) to plot the data. I tried to make this example as simple as possible so that more people would benefit from this application. One more important observation, if you run the simulink model (simulink_model.mdl) from simulink, it will take more time than running the simulink model from the interface itself (simulink_gui_interface)!!To run, just type in the Matlab workspace:simulink_gui_interfaceSubmitted by Nassim KhaledPhD CandidateWayne State UniversityUSA</p>gui,real time data,scope,sfunction,simulink,gui,scope",4,0,1,0,3,file contains guide sfunction interface fairly easy simple application file contain guide sfunction interface fairly easy simple application mainly create reply question one student display result real time gui interface outside boundries gui gui interface simple one call mdl return function sfun plot data try make example simple possible people would benefit application one important observation run mdl take time run interface gui interface run type workspace gui nassim khaledphd candidatewayne state time,"['file', 'contains', 'guide', 'sfunction', 'interface', 'fairly', 'easy', 'simple', 'application', 'file', 'contain', 'guide', 'sfunction', 'interface', 'fairly', 'easy', 'simple', 'application', 'mainly', 'create', 'reply', 'question', 'one', 'student', 'display', 'result', 'real', 'time', 'gui', 'interface', 'outside', 'boundries', 'gui', 'gui', 'interface', 'simple', 'one', 'call', 'mdl', 'return', 'function', 'sfun', 'plot', 'data', 'try', 'make', 'example', 'simple', 'possible', 'people', 'would', 'benefit', 'application', 'one', 'important', 'observation', 'run', 'mdl', 'take', 'time', 'run', 'interface', 'gui', 'interface', 'run', 'type', 'workspace', 'gui', 'nassim', 'khaledphd', 'candidatewayne', 'state', 'time']",7
154,21311,"Real time upadate of simulink scope data on GUI (Gauge and Axes)<p>This example basically explains the real time update of simulink variables in GUI. The example displays the updated data in gauge and axes. Copy the files in your workspace.Type ""my_gui"" in command window.Press ""Start"".</p>activex,example,gauge,gui,gui tools,real time,simulink,gauge,simulink,gauge",7,0,1,0,6,real time upadate scope data gui gauge example basically explain real time update variable gui example display update data gauge copy file workspace type gui command window press start toolsreal,"['real', 'time', 'upadate', 'scope', 'data', 'gui', 'gauge', 'example', 'basically', 'explain', 'real', 'time', 'update', 'variable', 'gui', 'example', 'display', 'update', 'data', 'gauge', 'copy', 'file', 'workspace', 'type', 'gui', 'command', 'window', 'press', 'start', 'toolsreal']",7
155,21439,"Simulation of a one-legged hopping robot<p>This model simulates a robot jumping on one leg. I saw this robot at the MIT Museum last winter and after discussing with few colleagues at The MathWorksâ¢ we decided that it would be cool to have a SimulinkÂ® model of this robot.This submission contains 2 models. They both use SimulinkÂ® and SimMechanicsâ¢ and the second model uses SimulinkÂ® 3D Animationâ¢. This second version of the model allows you to click in the virtual reality scene to bring the robot where you want. This functionality is inspired by the inverted pendulum demo provided with the Simulink 3D animation.Have fun, and let me know if you have any idea to make it better, or if you decide to add more legs ;-)</p>3d,animation,hopping,leg,mechanical modeling,reality,robot,robotics,simmechanics,simulink,virtual,3d,animation,reality,simulink,virtual,3d",1700,146,7,0,1878,one legged hop robotthis robot jump one leg saw robot mit museum last winter discuss colleague mathworks decide would cool robot submission contains simmechanics second animation second version allow click virtual reality scene bring robot want functionality inspire inverted pendulum demo provide animation fun let know idea make good decide add leg,"['one', 'legged', 'hop', 'robotthis', 'robot', 'jump', 'one', 'leg', 'saw', 'robot', 'mit', 'museum', 'last', 'winter', 'discuss', 'colleague', 'mathworks', 'decide', 'would', 'cool', 'robot', 'submission', 'contains', 'simmechanics', 'second', 'animation', 'second', 'version', 'allow', 'click', 'virtual', 'reality', 'scene', 'bring', 'robot', 'want', 'functionality', 'inspire', 'inverted', 'pendulum', 'demo', 'provide', 'animation', 'fun', 'let', 'know', 'idea', 'make', 'good', 'decide', 'add', 'leg']",5
156,21458,"Simulating a 2-D system for multiple initial points<p>In reachability analysis, one is interested in computing the set of states that can be reach by the system from a set of initial states. A straightforward way to approximate this set is to simulate the system for all the boundary points of the initial set. This demo illustrate how Simulink S-function can be used to perform such simulation. The result is plotted in 3-D to show the reachable set along time.</p>control design,controls,linear systems,reachability,systems",17,2,2,0,17,multiple initial pointsin reachability analysis one interested compute set state reach set initial state straightforward way approximate set boundary point initial set demo illustrate function perform result plot show reachable set along time control,"['multiple', 'initial', 'pointsin', 'reachability', 'analysis', 'one', 'interested', 'compute', 'set', 'state', 'reach', 'set', 'initial', 'state', 'straightforward', 'way', 'approximate', 'set', 'boundary', 'point', 'initial', 'set', 'demo', 'illustrate', 'function', 'perform', 'result', 'plot', 'show', 'reachable', 'set', 'along', 'time', 'control']",0
157,21468,"These are the files from the Image and Video Processing with Simulink webinar.<p>This model presents how one may be able to detect whether an image is in or out of focus using the FFT.  StateflowÂ® is used to manage state behavior; the model also makes use of Embedded MATLAB and integration of legacy C code.  When running the model, you may need to configure the Image Acquisition block to operate with your camera.  If you do not have a camera but would like to experiment with the out-of-focus detection model, you can use the included video file.</p>fft,model,out of focus,outoffocus,sept 2008,september,text,video,fft",69,8,4,0,63,file image video process webinar present one may able detect whether image focus fft stateflow manage state behavior also make embedded integration legacy code run may need configure image acquisition block operate camera camera would like experiment focus detection include video file fftmodelout,"['file', 'image', 'video', 'process', 'webinar', 'present', 'one', 'may', 'able', 'detect', 'whether', 'image', 'focus', 'fft', 'stateflow', 'manage', 'state', 'behavior', 'also', 'make', 'embedded', 'integration', 'legacy', 'code', 'run', 'may', 'need', 'configure', 'image', 'acquisition', 'block', 'operate', 'camera', 'camera', 'would', 'like', 'experiment', 'focus', 'detection', 'include', 'video', 'file', 'fftmodelout']",7
158,21570,"Example timeout for long simulations<p>A sample simulink model including timeout based on tic-toc functions. Simulation taking more than defined time (wall-clock time) is stopped. Tic is executed by InitFcn callback.</p>clock,fun,simulink,timeout,utilities,timeout,clock",13,1,2,0,10,example timeout long sample include timeout base tic toc function take defined time wall clock time stop tic execute initfcn callback,"['example', 'timeout', 'long', 'sample', 'include', 'timeout', 'base', 'tic', 'toc', 'function', 'take', 'defined', 'time', 'wall', 'clock', 'time', 'stop', 'tic', 'execute', 'initfcn', 'callback']",5
159,21716,"Metronome<p>I started with the demo of a simple pendulum: mech_spen in MATLABÂ® and simply added joints and bodies as they exist for the pendulum stand. To get the sliding motion with friction I used a Prismatic joint and used the velocity to compute a force dampening the sliding motion. So my model does not explicitly model the rollers on which the pendulum stand rocks.Now the problem is that the synchronization does not happen and I am not sure what goes into a metronome that synchronizes the pendulums. Any comments/suggestions are welcome.</p>mechanical modeling,metronome simmechanics simple,mechanical modeling",33,0,1,0,32,metronomei start demo simple pendulum mech spen simply added joint body exist pendulum stand get sliding motion friction prismatic joint velocity compute force dampen slide motion explicitly rollers pendulum stand rock problem synchronization happen sure metronome synchronizes pendulums comment suggestion welcome mechanical simmechanics,"['metronomei', 'start', 'demo', 'simple', 'pendulum', 'mech', 'spen', 'simply', 'added', 'joint', 'body', 'exist', 'pendulum', 'stand', 'get', 'sliding', 'motion', 'friction', 'prismatic', 'joint', 'velocity', 'compute', 'force', 'dampen', 'slide', 'motion', 'explicitly', 'rollers', 'pendulum', 'stand', 'rock', 'problem', 'synchronization', 'happen', 'sure', 'metronome', 'synchronizes', 'pendulums', 'comment', 'suggestion', 'welcome', 'mechanical', 'simmechanics']",8
160,21742,"Demonstrate synchronisation of five metronomes<p>Ok, my approach is very different from the ones I have seen. I followed four premises:a) The pendulum is essential linear, and the nonlinearity of the angle is not relevant. (This is an assumption, and I make no attempt to verify it.)b) Any coupling between n resonators creates n resonance frequencies that are diverging with increasing coupling, so no synchronisation here.c) A metronome is driven by a spring to compensate for the friction, and the direction of the force switches a bit after the metronome has passed angle 0.d) Synchronisation happens because the shared based shifts this switching point to earlier or later (the angle remains the same). Just run the file, and you will see it happening pretty soon. This model is based on the Simulink model of xianfa zeng, which is a really nice framework. The pendulum model is very different, though. Both are inspired by ""Challenge: Metronome and Cart Equations of Motion"" on Seth's blog.</p>controls,metronome,modeling,simulation,simulation models,systems,metronome",105,6,2,0,118,demonstrate synchronisation five metronomesok approach different one see follow four premise pendulum essential linear nonlinearity angle relevant assumption make attempt verify couple resonator create resonance frequency diverge increase couple synchronisation metronome driven spring compensate friction direction force switch bite metronome pass angle synchronisation happen share base shift switch point earlier later angle remain run file see happen pretty soon base xianfa zeng really nice framework pendulum different though inspired challenge metronome cart equation motion seth blog,"['demonstrate', 'synchronisation', 'five', 'metronomesok', 'approach', 'different', 'one', 'see', 'follow', 'four', 'premise', 'pendulum', 'essential', 'linear', 'nonlinearity', 'angle', 'relevant', 'assumption', 'make', 'attempt', 'verify', 'couple', 'resonator', 'create', 'resonance', 'frequency', 'diverge', 'increase', 'couple', 'synchronisation', 'metronome', 'driven', 'spring', 'compensate', 'friction', 'direction', 'force', 'switch', 'bite', 'metronome', 'pass', 'angle', 'synchronisation', 'happen', 'share', 'base', 'shift', 'switch', 'point', 'earlier', 'later', 'angle', 'remain', 'run', 'file', 'see', 'happen', 'pretty', 'soon', 'base', 'xianfa', 'zeng', 'really', 'nice', 'framework', 'pendulum', 'different', 'though', 'inspired', 'challenge', 'metronome', 'cart', 'equation', 'motion', 'seth', 'blog']",5
161,21748,"The 5 pendulums, in a vectorized approach<p>I do not have the perfect solution, but I want to add little something in  the challenge. Simulating that kind of coupled non-linear system seems to be tricky in SimulinkÂ®.At first I thought this challenge was going to be easy, I assembled a SimMechanics model, clicked playâ¦ but the pendulums are not synchronizing, as mentioned by Parasar in his post.Then I thought, letâs try with SimulinkÂ®. I implemented the equations provided and then face two choices:- By default, the coupling of the equations results in an algebraic loop. I try to let the algebraic loop solver resolving the algebraic loop, and the results are similar to the ones from SiMemchanicsâ¢. It looks like the SimulinkÂ® algebraic loop solver is doing a job similar to the SimMechanicsâ¢ solver. I cannot explain the exact reason, my guess is that the algebraic loop solver removes the non-linearity that makes the pendulums synchronize in real life. - My standard way to remove algebraic loops is to introduce a delay in the feedback path. In that case, the pendulums synchronize but the model becomes instable. The maximum sample time of the SimulinkÂ® solver must be adjusted to an appropriate value to obtain an acceptable tradeoff between synchronization and stability.I implemented the model using a vector approach. It allows easily changing the number of pendulums and modifying the algorithm.  From what I understand, the pendulum equations are non-linear and it should not be required to add any nonlinear limits, like bump stops in a metronome.I hope Seth will provide explanations on why no one has been able to obtain the synchronization using SimMechanicsâ¢.Guy</p>mechanical modeling,metronome,synchronizing,systems",42,2,2,0,48,pendulum vectorized approachi perfect solution want add little something challenge kind couple non linear seem tricky first thought challenge easy assembled simmechanics click play pendulum synchronize mention parasar post think let try implemented equation provide face two choice default couple equation result algebraic loop try let algebraic loop solver resolve algebraic loop result similar one simemchanics look like algebraic loop solver job similar simmechanics solver explain exact reason guess algebraic loop solver remove non linearity make pendulum synchronize real life standard way remove algebraic loop introduce delay feedback path case pendulum synchronize becomes instable maximum sample time solver must adjust appropriate value obtain acceptable tradeoff synchronization stability implement vector approach allow easily change number pendulum modify algorithm understand pendulum equation non linear require add nonlinear limit like bump stop metronome hope seth provide explanation one able obtain synchronization simmechanics guymechanical,"['pendulum', 'vectorized', 'approachi', 'perfect', 'solution', 'want', 'add', 'little', 'something', 'challenge', 'kind', 'couple', 'non', 'linear', 'seem', 'tricky', 'first', 'thought', 'challenge', 'easy', 'assembled', 'simmechanics', 'click', 'play', 'pendulum', 'synchronize', 'mention', 'parasar', 'post', 'think', 'let', 'try', 'implemented', 'equation', 'provide', 'face', 'two', 'choice', 'default', 'couple', 'equation', 'result', 'algebraic', 'loop', 'try', 'let', 'algebraic', 'loop', 'solver', 'resolve', 'algebraic', 'loop', 'result', 'similar', 'one', 'simemchanics', 'look', 'like', 'algebraic', 'loop', 'solver', 'job', 'similar', 'simmechanics', 'solver', 'explain', 'exact', 'reason', 'guess', 'algebraic', 'loop', 'solver', 'remove', 'non', 'linearity', 'make', 'pendulum', 'synchronize', 'real', 'life', 'standard', 'way', 'remove', 'algebraic', 'loop', 'introduce', 'delay', 'feedback', 'path', 'case', 'pendulum', 'synchronize', 'becomes', 'instable', 'maximum', 'sample', 'time', 'solver', 'must', 'adjust', 'appropriate', 'value', 'obtain', 'acceptable', 'tradeoff', 'synchronization', 'stability', 'implement', 'vector', 'approach', 'allow', 'easily', 'change', 'number', 'pendulum', 'modify', 'algorithm', 'understand', 'pendulum', 'equation', 'non', 'linear', 'require', 'add', 'nonlinear', 'limit', 'like', 'bump', 'stop', 'metronome', 'hope', 'seth', 'provide', 'explanation', 'one', 'able', 'obtain', 'synchronization', 'simmechanics', 'guymechanical']",5
162,21882,"This demo shows how to implement an adaptive median filter in hardware; <p>The adaptive median filter is discussed in recent designline article about embedded MATLAB block <a href=""http://www.dspdesignline.com/howto/207800676Also"">http://www.dspdesignline.com/howto/207800676Also</a> attached is a power point presentation that explains the concept of serialization which is an important design consideration when implementing such an image processing algorithm in hardware.</p>embedded matlab,hdl,image processig,serialization,simulink,image processig,simulink",31,1,2,0,42,demo show implement adaptive median filter hardware adaptive median filter discuss recent designline article embed block http dspdesignline com howto also attach power point presentation explain concept serialization important design consideration implement image processing algorithm hardware embed matlabhdlimage,"['demo', 'show', 'implement', 'adaptive', 'median', 'filter', 'hardware', 'adaptive', 'median', 'filter', 'discuss', 'recent', 'designline', 'article', 'embed', 'block', 'http', 'dspdesignline', 'com', 'howto', 'also', 'attach', 'power', 'point', 'presentation', 'explain', 'concept', 'serialization', 'important', 'design', 'consideration', 'implement', 'image', 'processing', 'algorithm', 'hardware', 'embed', 'matlabhdlimage']",0
163,21885,"Solution of differential equation through S-Function<p>Basic example for beginners, that shows how to solve the  differential equation through S-Function****************DIFFERENTIAL EQ. SOLUTION THROUGH S-FUNCTION*********************************""Instructions for Simulink""*************************1.Goto simulink library browser and expand ""Simulink""2.Goto ""user defined function"" and expand it3.Drag ""S-Function"" in the simulink enviorment 4.Double click and name the ""S-Function name"" as your save S-Function file, like ""example""   in this case(**Make sure your both files are saved in same directory and their name dont overlap with any other file name)*************Instruction for Matlab*******************1.Type ""open sfunctmpl"" in command to open new S-Function2.Save it as your own file,like ""example"" in this case;3.Change the function name as your file name4.In ""function   sys=mdlDerivatives(t,x,u)"" you will define the differential eq 5.In ""function [sys,x0,str,ts]=mdlInitializeSizes"" you will define the continous states,   inputs from simulink block and output.6.In ""function   [sys,x0,str,ts]=mdlInitializeSizes"" you will define Initial conditions of   differential eq 7.In ""function sys=mdlOutputs(t,x,u)"", you will declare the outputs *************************************************************************************</p>differential equation,differential equation solution,mathematics,sfunction,mechanical engineering,physics,mathematics",2,0,1,0,1,solution differential equation functionbasic example beginner show solve differential equation function differential solution function instruction goto browser expand goto user define function expand drag function enviorment double click name function name save function file like example case make sure file save directory name dont overlap file name instruction type open sfunctmpl command open new function save filelike example case change function name file name function sys mdlderivatives txu define differential function sysx strts define continous state input block output function sysx strts define initial condition differential function sys mdloutputs txu declare output differential equation,"['solution', 'differential', 'equation', 'functionbasic', 'example', 'beginner', 'show', 'solve', 'differential', 'equation', 'function', 'differential', 'solution', 'function', 'instruction', 'goto', 'browser', 'expand', 'goto', 'user', 'define', 'function', 'expand', 'drag', 'function', 'enviorment', 'double', 'click', 'name', 'function', 'name', 'save', 'function', 'file', 'like', 'example', 'case', 'make', 'sure', 'file', 'save', 'directory', 'name', 'dont', 'overlap', 'file', 'name', 'instruction', 'type', 'open', 'sfunctmpl', 'command', 'open', 'new', 'function', 'save', 'filelike', 'example', 'case', 'change', 'function', 'name', 'file', 'name', 'function', 'sys', 'mdlderivatives', 'txu', 'define', 'differential', 'function', 'sysx', 'strts', 'define', 'continous', 'state', 'input', 'block', 'output', 'function', 'sysx', 'strts', 'define', 'initial', 'condition', 'differential', 'function', 'sys', 'mdloutputs', 'txu', 'declare', 'output', 'differential', 'equation']",0
164,22136,"Design patterns for SimulinkÂ® functions inside StateflowÂ® (requires R2008b or later)<p>This ZIP file contains the model files related to Sateflow Design PatternsThese model files contain three different design patterns for modeling Simulink functions inside of Stateflow.  The design patterns are for calling algorithms, switching tasks, and switching components.</p>design pattern,design patterns,simulink,simulink functions,stateflow,webinar",75,7,4,0,80,design pattern function inside stateflow require later zip file contains file relate sateflow design patternsthese file contain three different design pattern function inside stateflow design pattern call algorithms switch task switch component design patterndesign,"['design', 'pattern', 'function', 'inside', 'stateflow', 'require', 'later', 'zip', 'file', 'contains', 'file', 'relate', 'sateflow', 'design', 'patternsthese', 'file', 'contain', 'three', 'different', 'design', 'pattern', 'function', 'inside', 'stateflow', 'design', 'pattern', 'call', 'algorithms', 'switch', 'task', 'switch', 'component', 'design', 'patterndesign']",7
165,22166,"A Simulink model implementing a DIF FFT algorithm modeled completely using embedded MATLAB blocks.<p>Attached zip file contains a Simulink model implementing a high speed Radix2 Decimation in Frequency (DIF) FFT algorithm modeled using embedded MATLAB blocks.The Simulink model contains two subsystems one with a reference FFT block from Signal processing blockset and other subsystem with the high speed DIF FFT R2 algorithm modeled using embedded MATLAB blocks. In order to make the streaming interface identical, the behavioral model is placed between Deserialize and Serialize subsystems.See reference paper in the attached zip file that is used when developing the DIF FFT algorithm using embedded MATLAB blocks.embedded MATLAB block is a versatile block in Simulink to develop custom algorithms quickly within the Simulink simulation modeling infrastructure; By using the embeddable subset of MATLAB language in embedded MATLAB block one can quickly verify the timed algorithm behavior in Simulink and then  use C or HDL code generation capability to implement the design in s/w or h/w.</p>embedded matlab,simulink",329,33,5,0,360,implement dif fft algorithm completely embed block attach zip file contain implement high speed radix decimation frequency dif fft algorithm embedded block contain two subsystem one reference fft block signal processing blockset subsystem high speed dif fft algorithm embed block order make stream interface identical behavioral place deserialize serialize subsystem see reference paper attach zip file develop dif fft algorithm embed block embed block versatile block develop custom algorithms quickly within infrastructure embeddable subset language embed block one quickly verify timed algorithm behavior hdl code generation capability implement design embed,"['implement', 'dif', 'fft', 'algorithm', 'completely', 'embed', 'block', 'attach', 'zip', 'file', 'contain', 'implement', 'high', 'speed', 'radix', 'decimation', 'frequency', 'dif', 'fft', 'algorithm', 'embedded', 'block', 'contain', 'two', 'subsystem', 'one', 'reference', 'fft', 'block', 'signal', 'processing', 'blockset', 'subsystem', 'high', 'speed', 'dif', 'fft', 'algorithm', 'embed', 'block', 'order', 'make', 'stream', 'interface', 'identical', 'behavioral', 'place', 'deserialize', 'serialize', 'subsystem', 'see', 'reference', 'paper', 'attach', 'zip', 'file', 'develop', 'dif', 'fft', 'algorithm', 'embed', 'block', 'embed', 'block', 'versatile', 'block', 'develop', 'custom', 'algorithms', 'quickly', 'within', 'infrastructure', 'embeddable', 'subset', 'language', 'embed', 'block', 'one', 'quickly', 'verify', 'timed', 'algorithm', 'behavior', 'hdl', 'code', 'generation', 'capability', 'implement', 'design', 'embed']",7
166,22297,"Simple use case of the xPC Target Driver Authoring Tool.<p>In addition to device drivers, the xPC Target Driver Authoring tool, xpcdrivertool, can also be used to create utility functions. This example describes how to use xpcdrivertool to create a time delay block.</p>ddk,drivers,tool,xpc target,xpcdrivertool,drivers,tool,xpc target",17,2,2,0,13,simple case xpc target driver author tool addition device driver xpc target driver author tool xpcdrivertool also create utility function example describe xpcdrivertool create time delay block target,"['simple', 'case', 'xpc', 'target', 'driver', 'author', 'tool', 'addition', 'device', 'driver', 'xpc', 'target', 'driver', 'author', 'tool', 'xpcdrivertool', 'also', 'create', 'utility', 'function', 'example', 'describe', 'xpcdrivertool', 'create', 'time', 'delay', 'block', 'target']",7
167,22316,"These files show how to match expected theoretical results by Monte Carlo simulations.<p>BER/SER CurvesThe files in this demo are designed to generate a number of performance curves for various well-known systems.  This is not meant to be a comprehensive list; it's merely a set of reference models that show how some well-established results can be generated using Simulink models.  It contains the following systems:- PSK and QAM over AWGN Channel (BER and SER)- BPSK over Rayleigh fading channel (BER)- Convolutional Coded BPSK over AWGN (BER)To go through the demos, run the following command at the MATLAB prompt:example_sel2html('RefCurvesSel.txt')Required Products:MATLAB R2008aSimulinkCommunications ToolboxCommunications BlocksetFor feedback on these models, email:Idin <a href=""mailto:Motedayen-Avalimoteday@mathworks.com"">Motedayen-Avalimoteday@mathworks.com</a></p>awgn,ber,communications,convolutional code,demo,fading channel,rayleigh,simulink,wireless,communications,awgn,awgn,communications",301,47,3,0,240,file show match expect theoretical result monte carlo ber ser curvesthe file demo design generate number performance curve various well know meant comprehensive list merely set reference show well establish result generate contain follow psk qam awgn channel ber ser bpsk rayleigh fading channel ber convolutional cod bpsk awgn ber demo run follow command prompt example sel html refcurvessel txt require product blocksetfor feedback email idin motedayen avalimoteday mathworks codedemofading,"['file', 'show', 'match', 'expect', 'theoretical', 'result', 'monte', 'carlo', 'ber', 'ser', 'curvesthe', 'file', 'demo', 'design', 'generate', 'number', 'performance', 'curve', 'various', 'well', 'know', 'meant', 'comprehensive', 'list', 'merely', 'set', 'reference', 'show', 'well', 'establish', 'result', 'generate', 'contain', 'follow', 'psk', 'qam', 'awgn', 'channel', 'ber', 'ser', 'bpsk', 'rayleigh', 'fading', 'channel', 'ber', 'convolutional', 'cod', 'bpsk', 'awgn', 'ber', 'demo', 'run', 'follow', 'command', 'prompt', 'example', 'sel', 'html', 'refcurvessel', 'txt', 'require', 'product', 'blocksetfor', 'feedback', 'email', 'idin', 'motedayen', 'avalimoteday', 'mathworks', 'codedemofading']",0
168,22486,"Classical envelope detector with diode and RC group and its discretized implementation.<p>The classical envelope detector with diode and RC group is compared with its discretized implementation.A reset input is also given in order to discharge the capacitance.Ugo </p>detector,discretization,detector,discretization,envelope,signal processing,envelope detector,rectifier,detector,detector,envelope detector,detector,discretization,detector,discretization,envelope,envelope detector,detector",41,3,2,0,47,classical envelope detector diode group discretized implementation classical envelope detector diode group compare discretized implementation reset input also give order discharge capacitance ugo,"['classical', 'envelope', 'detector', 'diode', 'group', 'discretized', 'implementation', 'classical', 'envelope', 'detector', 'diode', 'group', 'compare', 'discretized', 'implementation', 'reset', 'input', 'also', 'give', 'order', 'discharge', 'capacitance', 'ugo']",5
169,22513,"2-Goods 2-Consumers General Economic Equilibrium<p>Simulink implementation of a General Economic Equilibrium with 2 firms and 2 consumers. The model features two general level-2 masked s-functions. The first one implements the consumer, which maximizes his utility function, and the second implements the firm, which maximizes its profit.This was taken from: ""Economics: a Mathematical Introduction"", C.J. McKenna and Ray Rees, Chapter 14.</p>economics,equilibrium,modeling,simulation,simulink,economics,equilibrium",47,5,2,0,51,good consumer general economic implementation general economic equilibrium firm consumer feature two general level mask function first one implement consumer maximize utility function second implement firm maximize profit take economics mathematical introduction mckenna ray rees chapter,"['good', 'consumer', 'general', 'economic', 'implementation', 'general', 'economic', 'equilibrium', 'firm', 'consumer', 'feature', 'two', 'general', 'level', 'mask', 'function', 'first', 'one', 'implement', 'consumer', 'maximize', 'utility', 'function', 'second', 'implement', 'firm', 'maximize', 'profit', 'take', 'economics', 'mathematical', 'introduction', 'mckenna', 'ray', 'rees', 'chapter']",5
170,22637,"the project describes a link between simmechanics and virtual reality to simulate a robot arm<p>the project demonstrates a robot arm architecture with control subsystem and the relation to virtual reality</p>robotics,robot,simmechanics,virtual reality,simmechanics,robot,robot,robot,simmechanics,robot,robot,simmechanics",136,7,3,0,131,project describe link simmechanics virtual reality robot armthe project demonstrate robot arm architecture control subsystem relation virtual,"['project', 'describe', 'link', 'simmechanics', 'virtual', 'reality', 'robot', 'armthe', 'project', 'demonstrate', 'robot', 'arm', 'architecture', 'control', 'subsystem', 'relation', 'virtual']",0
171,22674,"These files accompany the Seth On SimulinkÂ® blog post of the same name.<p>In this blog post, I will show you one example of modeling semantics that lead to copies of a bus signal in the generated code.  The semantics at work are not specific to bus signals, and actually apply to any atomic subsystem that passes a signal directly from the input to the output.</p>bus signals,seth on simulink,simulink",38,8,2,0,54,file accompany seth blog post name blog post show one example semantics lead copy bus signal generate code semantics work specific bus signal actually apply atomic subsystem pass signal directly input output bus signalsseth,"['file', 'accompany', 'seth', 'blog', 'post', 'name', 'blog', 'post', 'show', 'one', 'example', 'semantics', 'lead', 'copy', 'bus', 'signal', 'generate', 'code', 'semantics', 'work', 'specific', 'bus', 'signal', 'actually', 'apply', 'atomic', 'subsystem', 'pass', 'signal', 'directly', 'input', 'output', 'bus', 'signalsseth']",0
172,22695,"Demonstration showing how to log data computed by the SimulinkÂ® solver at minor time steps.<p>This submission is an example showing how a Level 2 M-file S-function can be used to help debugging models and vizualize the values computed by the SimulinkÂ® solver at minor time steps.This submission contains a Level-2 M-file S-function that logs the minor time step data of a signal into the MATLABÂ® workspace and displays it in a figure at the end of the simulation.The block is in a library and includes an slblocks.m file. Just place it on your MATLAB path and you should see it appear in the Simulink Library Browser. One example model is also included to demonstrate typical usage.</p>pick of the week,potw,debugging,simulation,simulink",14,0,1,0,16,demonstration show log data compute solver minor time step submission example show level file function help debug vizualize value compute solver minor time step submission contain level file function log minor time step data signal workspace display figure end block include slblocks file place path see appear browser one example also include demonstrate typical usage pick,"['demonstration', 'show', 'log', 'data', 'compute', 'solver', 'minor', 'time', 'step', 'submission', 'example', 'show', 'level', 'file', 'function', 'help', 'debug', 'vizualize', 'value', 'compute', 'solver', 'minor', 'time', 'step', 'submission', 'contain', 'level', 'file', 'function', 'log', 'minor', 'time', 'step', 'data', 'signal', 'workspace', 'display', 'figure', 'end', 'block', 'include', 'slblocks', 'file', 'place', 'path', 'see', 'appear', 'browser', 'one', 'example', 'also', 'include', 'demonstrate', 'typical', 'usage', 'pick']",7
173,22887,"This is a general purpose controller that I have built using the Fuzzy Logic Rules. <p>This is a general purpose controller that I have built using the Fuzzy Logic Rules. You don't need to have any mathematical background in fuzzy logic to run this  model.You don't need to have fuzzy logic toolbox to run it aswell.It contains both  linear and a nonlinear examples. It also has a read me that explains how to make use of it to your own benefit.</p>control design,controller,fuzzy logic,nonlinear,plant,simulation,simulink,fuzzy,simulink,but i want you to help me because i intend to construct acontrol,if you can send to me a simulation model describing my demands,thank you again,thank you sir,controller,if you can send to me a simulation model describing my demands",36,1,2,0,39,general purpose controller build fuzzy logic rule general purpose controller build fuzzy logic rule need mathematical background fuzzy logic run need fuzzy logic toolbox run aswell contain linear nonlinear example also read explains make benefit control want help intend construct acontrolif send describe demandsthank againthank sircontrollerif send describe demand,"['general', 'purpose', 'controller', 'build', 'fuzzy', 'logic', 'rule', 'general', 'purpose', 'controller', 'build', 'fuzzy', 'logic', 'rule', 'need', 'mathematical', 'background', 'fuzzy', 'logic', 'run', 'need', 'fuzzy', 'logic', 'toolbox', 'run', 'aswell', 'contain', 'linear', 'nonlinear', 'example', 'also', 'read', 'explains', 'make', 'benefit', 'control', 'want', 'help', 'intend', 'construct', 'acontrolif', 'send', 'describe', 'demandsthank', 'againthank', 'sircontrollerif', 'send', 'describe', 'demand']",0
174,22989,"Example model that shows hierarchical symbol resolution in action.<p>This model is used in my blog post titled ""Where Does That Variable Come From?""  The model uses subsystems, constant blocks and displays to show how variables get resolved in the model hierarchy.see: <a href=""http://blogs.mathworks.com/seth/2009/02/15/where-does-that-variable-come-from/"">http://blogs.mathworks.com/seth/2009/02/15/where-does-that-variable-come-from/</a></p>seth on simulink,simulink",16,2,3,0,7,example show hierarchical symbol resolution action blog post title variable come subsystems constant block display show variable get resolve hierarchy see http blog mathworks com seth variable come seth,"['example', 'show', 'hierarchical', 'symbol', 'resolution', 'action', 'blog', 'post', 'title', 'variable', 'come', 'subsystems', 'constant', 'block', 'display', 'show', 'variable', 'get', 'resolve', 'hierarchy', 'see', 'http', 'blog', 'mathworks', 'com', 'seth', 'variable', 'come', 'seth']",7
175,23007,A block library containing utility blocks to play music over the internal speaker of a target PC.<p>Two blocks are included in this library to play music over the internal speaker of a target PC. The âSpeakerâ block plays the frequencies supplied to its input port over the PC speaker. The âSongâ block generates the frequencies for the âSpeakerâ block. The âSongâ block can generate frequencies from vectors of time &amp; frequency or from a string of ânotesâ using the âsongâ function. Open speakerlib.pdf for installation instructions and examples.</p>xpc target,4,0,1,2,3,block contain utility block play music internal speaker target two block include play music internal speaker target speaker block play frequency supply input port speaker song block generates frequency speaker block song block generate frequency vector time amp frequency string note song function open speakerlib pdf installation instruction examples xpc target,"['block', 'contain', 'utility', 'block', 'play', 'music', 'internal', 'speaker', 'target', 'two', 'block', 'include', 'play', 'music', 'internal', 'speaker', 'target', 'speaker', 'block', 'play', 'frequency', 'supply', 'input', 'port', 'speaker', 'song', 'block', 'generates', 'frequency', 'speaker', 'block', 'song', 'block', 'generate', 'frequency', 'vector', 'time', 'amp', 'frequency', 'string', 'note', 'song', 'function', 'open', 'speakerlib', 'pdf', 'installation', 'instruction', 'examples', 'xpc', 'target']",0
176,23042,"This file contains an approximation of the saturation of a function  between the values [-1,1]. <p>This file contains a funtion (mfile) and a simulink block. They both give the approximation of the saturation of a function  between the values [-1,1]. The main advantage and purpose of designing this simple yet powerful function is to obtain a smooth funtion that has a continous derivative.It can be easily adjusted to different lower and upper bounds by alterning the value ""5"" in the formula. Play around with it as you desire and as suitable to your application.It can be used in control applications like sliding mode control (that uses the saturation) and other control schemes.</p>approximation,continous,control,derivavtive,mfile,mode,saturation,simulink,sliding,saturation",5,0,1,0,5,file contain approximation saturation function value file contains funtion mfile block give approximation saturation function value main advantage purpose design simple yet powerful function obtain smooth funtion continous derivative easily adjust different low upper bound alterning value formula play around desire suitable application control application like slide mode control saturation control scheme,"['file', 'contain', 'approximation', 'saturation', 'function', 'value', 'file', 'contains', 'funtion', 'mfile', 'block', 'give', 'approximation', 'saturation', 'function', 'value', 'main', 'advantage', 'purpose', 'design', 'simple', 'yet', 'powerful', 'function', 'obtain', 'smooth', 'funtion', 'continous', 'derivative', 'easily', 'adjust', 'different', 'low', 'upper', 'bound', 'alterning', 'value', 'formula', 'play', 'around', 'desire', 'suitable', 'application', 'control', 'application', 'like', 'slide', 'mode', 'control', 'saturation', 'control', 'scheme']",0
177,23079,"A group of Delta-Sigma SIMULINK- models with DWA mismatch shaping.<p>The SIMULINK- models of multibit Delta-Sigma ADC and Delta-Sigma DAC all have a non-ideal D/A-converter. The DAC mismatch noise will be shaped according to a general Data Weighted Averaging (DWA) transfer function 1Â±z^(-D), where D is a positive integer.The DWA element selection logic calculates a selection vector. The selection vector chooses, which of the unit DACs will be used according to DAC input. The DWA block is constructed using mainly fixed-point blocks. Models for Incremental DWA (IDWA) were also added.This package also includes a spurious tone estimator: the spurs can be estimated using the DS input signal and the DNL error shape.</p>data converters,data weighted averaging,delta sigma,digital to analog conversion,dwa,simulink",81,9,3,0,79,group delta sigma dwa mismatch shaping multibit delta sigma adc delta sigma dac non ideal converter dac mismatch noise shape accord general data weight average dwa transfer function positive integer dwa element selection logic calculate selection vector selection vector choose unit dacs accord dac input dwa block construct mainly fix point block incremental dwa idwa also add package also include spurious tone estimator spur estimate input signal dnl error shape data convertersdata weight averagingdelta sigmadigital analog,"['group', 'delta', 'sigma', 'dwa', 'mismatch', 'shaping', 'multibit', 'delta', 'sigma', 'adc', 'delta', 'sigma', 'dac', 'non', 'ideal', 'converter', 'dac', 'mismatch', 'noise', 'shape', 'accord', 'general', 'data', 'weight', 'average', 'dwa', 'transfer', 'function', 'positive', 'integer', 'dwa', 'element', 'selection', 'logic', 'calculate', 'selection', 'vector', 'selection', 'vector', 'choose', 'unit', 'dacs', 'accord', 'dac', 'input', 'dwa', 'block', 'construct', 'mainly', 'fix', 'point', 'block', 'incremental', 'dwa', 'idwa', 'also', 'add', 'package', 'also', 'include', 'spurious', 'tone', 'estimator', 'spur', 'estimate', 'input', 'signal', 'dnl', 'error', 'shape', 'data', 'convertersdata', 'weight', 'averagingdelta', 'sigmadigital', 'analog']",5
178,23126,"This model implements a double pendulum both in SimMechanicsâ¢ and using basic SimulinkÂ® blocks.<p>This model implements a double pendulum both in SimMechanicsâ¢ and using basic SimulinkÂ® blocks.You can see how easier it is using SimMechanicsâ¢!</p>simmechanics,simulink",74,3,2,0,94,implement double pendulum simmechanics basic block implement double pendulum simmechanics basic block see easy simmechanics,"['implement', 'double', 'pendulum', 'simmechanics', 'basic', 'block', 'implement', 'double', 'pendulum', 'simmechanics', 'basic', 'block', 'see', 'easy', 'simmechanics']",7
179,23507,"Techniques for managing xPC Target CPU overloads.<p>CPU overloads are generally a result of unexpected events or trying to do too much with too little.  The default configuration of the xPC Target real-time kernel will stop model execution when a CPU overload is detected.  This guarantees hard real-time performance.  Nevertheless, it is possible to continue model execution in the presence of CPU overloads.  Also, blocks are available that can sense and control the CPU overload counter.  This allows for implementing exception handling when CPU overloads occur.  These capabilities are described and test models are included to demonstrate.</p>cpu overload,cpu overload,real time,xpc target,cpu overload",158,17,2,8,125,technique manage xpc target cpu overload cpu overload generally result unexpected event try much little default configuration xpc target real time kernel stop execution cpu overload detect guarantee hard real time performance nevertheless possible continue execution presence cpu overload also block available sense control cpu overload counter allow implement exception handle cpu overload occur capability describe test include demonstrate cpu overloadcpu overloadreal timexpc targetcpu overload,"['technique', 'manage', 'xpc', 'target', 'cpu', 'overload', 'cpu', 'overload', 'generally', 'result', 'unexpected', 'event', 'try', 'much', 'little', 'default', 'configuration', 'xpc', 'target', 'real', 'time', 'kernel', 'stop', 'execution', 'cpu', 'overload', 'detect', 'guarantee', 'hard', 'real', 'time', 'performance', 'nevertheless', 'possible', 'continue', 'execution', 'presence', 'cpu', 'overload', 'also', 'block', 'available', 'sense', 'control', 'cpu', 'overload', 'counter', 'allow', 'implement', 'exception', 'handle', 'cpu', 'overload', 'occur', 'capability', 'describe', 'test', 'include', 'demonstrate', 'cpu', 'overloadcpu', 'overloadreal', 'timexpc', 'targetcpu', 'overload']",5
180,23541,"These files accompany my blog post of the same name.<p>These files demonstrate the use of Parallel Computing Toolboxâ¢ to speed up model reference SimTarget builds. Watch the video on my blog post for full details:<a href=""http://blogs.mathworks.com/seth/2009/03/31/parallel-computing-with-simulink-model-reference-builds/"">http://blogs.mathworks.com/seth/2009/03/31/parallel-computing-with-simulink-model-reference-builds/</a></p>model reference,parallel computing,pct,seth on simulink,simulink",1660,0,2,0,330,file accompany blog post name file demonstrate parallel compute toolbox speed reference simtarget build watch video blog post full detail http blog mathworks com seth parallel compute reference build,"['file', 'accompany', 'blog', 'post', 'name', 'file', 'demonstrate', 'parallel', 'compute', 'toolbox', 'speed', 'reference', 'simtarget', 'build', 'watch', 'video', 'blog', 'post', 'full', 'detail', 'http', 'blog', 'mathworks', 'com', 'seth', 'parallel', 'compute', 'reference', 'build']",7
181,23861,"This SimMechanicsâ¢ model implements a 4 wheels rover with suspension and a robotic arm.<p>I was developping the model of a car suspension. After implementing one quarter of the car, I thought it might be cool to combine four ""quarter car"" models and a simple arm to create a rover equipped with a robotic arm.The contact dynamics for the wheel is very simple. A spring-damper that is enabled when the wheels touch the ground.All comments/suggestions are welcome</p>automotive,automative,automotive,car,rover,simmechanics,simulink,suspension,car",710,62,5,0,751,simmechanics implement wheel rover suspension robotic arm developping car suspension implement one quarter car think might cool combine four quarter car simple arm create rover equip robotic arm contact dynamic wheel simple spring damper enable wheel touch ground comment suggestion,"['simmechanics', 'implement', 'wheel', 'rover', 'suspension', 'robotic', 'arm', 'developping', 'car', 'suspension', 'implement', 'one', 'quarter', 'car', 'think', 'might', 'cool', 'combine', 'four', 'quarter', 'car', 'simple', 'arm', 'create', 'rover', 'equip', 'robotic', 'arm', 'contact', 'dynamic', 'wheel', 'simple', 'spring', 'damper', 'enable', 'wheel', 'touch', 'ground', 'comment', 'suggestion']",5
182,23887,"Supplemental set of MATLAB M-files and Simulink models.<p>""Simulink 7.2 - Guia Pratico"": Written for students, teachers, and engineers, this book is designed to get the reader started quickly and easily in Simulink. Concepts and features are presented based on tutorials and practical exercises. Topics covered include an introduction to the concepts of modeling, simulation, and analysis of dynamic systems using Simulink. MATLAB and Simulink are used throughout the book to solve many application examples.For additional book and ordering information, please visit:<a href=""http://www.mathworks.com/support/books/book19541.html?language=17&amp;language=17"">http://www.mathworks.com/support/books/book19541.html?language=17&amp;language=17</a></p>portugues,portuguese,simulink,simulink 72",472,17,2,0,463,supplemental set file guia pratico write student teacher engineer book design get reader start quickly easily concepts feature present base tutorial practical exercise topic cover include introduction concept analysis dynamic throughout book solve many application example additional book order information please visit http mathworks com support book book html language amp language,"['supplemental', 'set', 'file', 'guia', 'pratico', 'write', 'student', 'teacher', 'engineer', 'book', 'design', 'get', 'reader', 'start', 'quickly', 'easily', 'concepts', 'feature', 'present', 'base', 'tutorial', 'practical', 'exercise', 'topic', 'cover', 'include', 'introduction', 'concept', 'analysis', 'dynamic', 'throughout', 'book', 'solve', 'many', 'application', 'example', 'additional', 'book', 'order', 'information', 'please', 'visit', 'http', 'mathworks', 'com', 'support', 'book', 'book', 'html', 'language', 'amp', 'language']",7
183,23931,"NXT Ballbot Model-Based Design based on Embedded Coder Robot NXT.<p>NXT Ballbot is a LEGO Mindstorms NXT version of Ballbot that is developed by Ralph Hollis at Carnegie Mellon University. The Ballbot is designed to balance itself on its single spherical wheel while traveling about. Please refer the following URL to know more detailed information about Ballbot.<a href=""http://en.wikipedia.org/wiki/BallbotThis"">http://en.wikipedia.org/wiki/BallbotThis</a> demo presents sample models and documents describe the following contents.How to Build NXT BallbotMathematical Dynamics Model of NXT BallbotController Design for Balance and Drive ControlNXT Ballbot Model IllustrationSimulation and Experimental ResultsYou can simulate NXT Ballbot model and generate controller program that can be executed on the NXT. Furthermore, you can watch movies of NXT Ballbot simulation and control experiment at the following URL.<a href=""http://www.youtube.com/watch?v=1MfiAZBsWachttp://www.youtube.com/watch?v=f8jxGsg3p0YThis"">http://www.youtube.com/watch?v=1MfiAZBsWachttp://www.youtube.com/watch?v=f8jxGsg3p0YThis</a> demo requires Embedded Coder Robot NXT Demo as MBD environment. You need to download it from the following URL before trying this demo.<a href=""http://www.mathworks.com/matlabcentral/fileexchange/13399LEGO(R)"">http://www.mathworks.com/matlabcentral/fileexchange/13399LEGO(R)</a> is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this demo. LEGO(R) and Mindstorms(R) are registered trademarks of The LEGO Group.</p>ecrobot,control design,embedded code,lego,mindstorms,modeling,nxt,robot,simulation,simulation",1538,131,8,0,974,nxt ballbot base design base embedded coder robot nxt nxt ballbot lego mindstorms nxt version ballbot develop ralph hollis carnegie mellon university ballbot design balance single spherical wheel travel please refer follow url know detailed information ballbot http wikipedia org wiki ballbotthis demo present sample document describe follow content build nxt dynamic nxt design balance drive controlnxt ballbot experimental resultsyou nxt ballbot generate controller program execute nxt furthermore watch movie nxt ballbot control experiment follow url http youtube com watch mfiazbswachttp youtube com watch jxgsg ythis demo require embed coder robot nxt demo mbd environment need download follow url try demo http mathworks com matlabcentral fileexchange lego trademark lego group company sponsor authorize endorse demo lego mindstorms register trademark lego group ecrobotcontrol designembedded,"['nxt', 'ballbot', 'base', 'design', 'base', 'embedded', 'coder', 'robot', 'nxt', 'nxt', 'ballbot', 'lego', 'mindstorms', 'nxt', 'version', 'ballbot', 'develop', 'ralph', 'hollis', 'carnegie', 'mellon', 'university', 'ballbot', 'design', 'balance', 'single', 'spherical', 'wheel', 'travel', 'please', 'refer', 'follow', 'url', 'know', 'detailed', 'information', 'ballbot', 'http', 'wikipedia', 'org', 'wiki', 'ballbotthis', 'demo', 'present', 'sample', 'document', 'describe', 'follow', 'content', 'build', 'nxt', 'dynamic', 'nxt', 'design', 'balance', 'drive', 'controlnxt', 'ballbot', 'experimental', 'resultsyou', 'nxt', 'ballbot', 'generate', 'controller', 'program', 'execute', 'nxt', 'furthermore', 'watch', 'movie', 'nxt', 'ballbot', 'control', 'experiment', 'follow', 'url', 'http', 'youtube', 'com', 'watch', 'mfiazbswachttp', 'youtube', 'com', 'watch', 'jxgsg', 'ythis', 'demo', 'require', 'embed', 'coder', 'robot', 'nxt', 'demo', 'mbd', 'environment', 'need', 'download', 'follow', 'url', 'try', 'demo', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'lego', 'trademark', 'lego', 'group', 'company', 'sponsor', 'authorize', 'endorse', 'demo', 'lego', 'mindstorms', 'register', 'trademark', 'lego', 'group', 'ecrobotcontrol', 'designembedded']",0
184,23965,"This SIMULINK block contains a PID controller with anti-windup<p>Although many aspects of a control system can be understood based on linear theory, some nonlinear effects must be accounted for in practically all controllers. Windup is such a phenomena, which is caused by the interaction of integral action and saturations. All actuators have limitations: a motor has limited speed, a valve cannot be more than fully opened or fully closed, etc. For a control system with a wide range of operating conditions, it may happen that the control variable reaches the actuator limits. When this happens the feedback loop is broken and the system runs as an open loop because the actuator will remain at its limit independently of the process output. If a controller with integrating action is used, the error will continue to be integrated. This means that the integral term may become very large or, colloquially, it âwinds upâ. It is then required that the error has opposite sign for a long period before things return to normal. The consequence is that any controller with integral action may give large transients when the actuator saturates.Ref: <a href=""http://www.cds.caltech.edu/~murray/courses/cds101/fa02/caltech/astrom-ch6.pdf"">http://www.cds.caltech.edu/~murray/courses/cds101/fa02/caltech/astrom-ch6.pdf</a></p>anti windup,antiwindup,control,control design,dynamics,feedback,nonlinear,pid,saturation,simulink,windup,electric_motor_control,power_electronics_control",14,1,2,0,16,block contains pid controller anti windupalthough many aspect control understood base linear theory nonlinear effect must account practically controller windup phenomenon cause interaction integral action saturation actuator limitation motor limit speed valve fully open fully close etc control wide range operate condition may happen control variable reach actuator limit happen feedback loop broken run open loop actuator remain limit independently process output controller integrate action error continue integrate mean integral term may become large colloquially wind required error opposite sign long period thing return normal consequence controller integral action may give large transient actuator saturate ref http caltech edu murray course cds caltech astrom pdfanti motor controlpower electronics control,"['block', 'contains', 'pid', 'controller', 'anti', 'windupalthough', 'many', 'aspect', 'control', 'understood', 'base', 'linear', 'theory', 'nonlinear', 'effect', 'must', 'account', 'practically', 'controller', 'windup', 'phenomenon', 'cause', 'interaction', 'integral', 'action', 'saturation', 'actuator', 'limitation', 'motor', 'limit', 'speed', 'valve', 'fully', 'open', 'fully', 'close', 'etc', 'control', 'wide', 'range', 'operate', 'condition', 'may', 'happen', 'control', 'variable', 'reach', 'actuator', 'limit', 'happen', 'feedback', 'loop', 'broken', 'run', 'open', 'loop', 'actuator', 'remain', 'limit', 'independently', 'process', 'output', 'controller', 'integrate', 'action', 'error', 'continue', 'integrate', 'mean', 'integral', 'term', 'may', 'become', 'large', 'colloquially', 'wind', 'required', 'error', 'opposite', 'sign', 'long', 'period', 'thing', 'return', 'normal', 'consequence', 'controller', 'integral', 'action', 'may', 'give', 'large', 'transient', 'actuator', 'saturate', 'ref', 'http', 'caltech', 'edu', 'murray', 'course', 'cds', 'caltech', 'astrom', 'pdfanti', 'motor', 'controlpower', 'electronics', 'control']",4
185,23997,"Simplified model of an electric wheelchair in SimPowerSystems.<p>This demo is based on a homework assignment for a Power Electronics Circuits course taught by Professor Giri Venkataramanan at the University of Wisconsin, Madison.Professor Giri Venkataramanan's webpage is here:<a href=""http://www.engr.wisc.edu/ece/faculty/venkataramanan_giri.html"">http://www.engr.wisc.edu/ece/faculty/venkataramanan_giri.html</a></p>electric,power electronics,simpowersystems,torque regulator,traction motor,wheelchair,power_conversion_control,power_electronics_control",102,3,3,0,106,simplify electric wheelchair simpowersystems demo base homework assignment power electronics circuit course taught professor giri venkataramanan university wisconsin madison professor giri venkataramanan webpage http engr wisc edu ece faculty venkataramanan giri conversion controlpower electronics control,"['simplify', 'electric', 'wheelchair', 'simpowersystems', 'demo', 'base', 'homework', 'assignment', 'power', 'electronics', 'circuit', 'course', 'taught', 'professor', 'giri', 'venkataramanan', 'university', 'wisconsin', 'madison', 'professor', 'giri', 'venkataramanan', 'webpage', 'http', 'engr', 'wisc', 'edu', 'ece', 'faculty', 'venkataramanan', 'giri', 'conversion', 'controlpower', 'electronics', 'control']",4
186,24216,"Allows to read input keyboard during Simulink simulation<p>Improvements respect original ""Simulink Keyboard Input"":- second output for triggering key arrival (for Subsystems and Char)- inherited sampling time- close window on close- handle of window as state so faster response- Level-2 S-Function</p>keyboard input,simulink,user input,utilities,keyboard input,user input,keyboard input",4,0,1,0,3,allows read input keyboard respect original keyboard input second output trigger key arrival subsystem char inherit sampling time close window close handle window state faster response level inputuser inputkeyboard input,"['allows', 'read', 'input', 'keyboard', 'respect', 'original', 'keyboard', 'input', 'second', 'output', 'trigger', 'key', 'arrival', 'subsystem', 'char', 'inherit', 'sampling', 'time', 'close', 'window', 'close', 'handle', 'window', 'state', 'faster', 'response', 'level', 'inputuser', 'inputkeyboard', 'input']",5
187,24294,"This demo shows how to use block listeners to view model signals in a MATLAB user interface.<p>This application demonstrates how listeners can be attached to the blocks in a Simulink model, and how those listeners can be used to display block inputs and outputs on a MATLAB user interface.  (The main function for achieving this is called add_exec_event_listener.)The model can be executed either as a standard simulation or after being built into a generic real-time target (for those users with an RTW license).  In the later case, RTW's External Mode and TCP/IP is used to transfer data from the running executable to the model and thence to the UI.The use of listeners to view signals rather than the traditional approach of writing a custom S-Function block has at least 2 advantages: firstly the model is not ""corrupted"" by having to add any special viewing block (this is particularly advantageous if the model is also to be used with RTW); and secondly the same UI could be used to view signals from different models.Specifically this application works with a simple model called 'simpleModel.mdl', that contains the three blocks               Sine Wave --&gt; Gain --&gt; ScopeThe UI allows the model to be started and stopped, and allows the value of the gain to be tuned.  The value of the signal being fed into the Scope block is displayed on an axis on the UI.  The model does not have to be open to use the UI (and it's recommended for it to be closed).The UI allows the model to be run in either simulation mode (requiring a Simulink license) or as a generic real-time (GRT) executable (since the model must be ""built"" this requires an RTW license).It is intended as a demonstration program to show various aspects of using MATLAB, Simulink and RTW: - how to create a MATLAB UI using command line functionality - how to start/stop a Simulink model using command line functionality - how to add a listener to a Simulink block so that signals can be viewed from a MATLAB UI. - how to build a GRT executable using command line functionality - how to interface with code running in ""real-time"" (For the purposes of this UI the grt code is running on the host machine, so it is not running in hard real-time, however it is using External Mode to communicate with the code and hence shows how communication would be performed if the code was truly running on an RTOS.</p>add_exec_event_listener,event listeners,grt,rtw,simulink,ui,user interface,pick of the week,potw",3,0,1,0,2,demo show block listener view signal user interface application demonstrate listener attach block listener display block input output user interface main function achieve call add exec event listener execute either standard build generic real time target user rtw license later case rtw external mode tcp transfer data run executable thence listener view signal rather traditional approach write custom function block least advantage firstly corrupt add special view block particularly advantageous also rtw secondly could view signal different specifically application work simple call simplemodel mdl contain three block sine wave gain scopethe allows start stop allows value gain tune value signal feed scope block display axis open recommend closed allows run either mode require license generic real time grt executable since must build require rtw license intend demonstration program show various aspect rtw create command line functionality start stop command line functionality add listener block signal view build grt executable command line functionality interface code run real time purpose grt code run host machine run hard real time however external mode communicate code hence show communication would perform code truly run rtos add exec event listenerevent interfacepick weekpotw,"['demo', 'show', 'block', 'listener', 'view', 'signal', 'user', 'interface', 'application', 'demonstrate', 'listener', 'attach', 'block', 'listener', 'display', 'block', 'input', 'output', 'user', 'interface', 'main', 'function', 'achieve', 'call', 'add', 'exec', 'event', 'listener', 'execute', 'either', 'standard', 'build', 'generic', 'real', 'time', 'target', 'user', 'rtw', 'license', 'later', 'case', 'rtw', 'external', 'mode', 'tcp', 'transfer', 'data', 'run', 'executable', 'thence', 'listener', 'view', 'signal', 'rather', 'traditional', 'approach', 'write', 'custom', 'function', 'block', 'least', 'advantage', 'firstly', 'corrupt', 'add', 'special', 'view', 'block', 'particularly', 'advantageous', 'also', 'rtw', 'secondly', 'could', 'view', 'signal', 'different', 'specifically', 'application', 'work', 'simple', 'call', 'simplemodel', 'mdl', 'contain', 'three', 'block', 'sine', 'wave', 'gain', 'scopethe', 'allows', 'start', 'stop', 'allows', 'value', 'gain', 'tune', 'value', 'signal', 'feed', 'scope', 'block', 'display', 'axis', 'open', 'recommend', 'closed', 'allows', 'run', 'either', 'mode', 'require', 'license', 'generic', 'real', 'time', 'grt', 'executable', 'since', 'must', 'build', 'require', 'rtw', 'license', 'intend', 'demonstration', 'program', 'show', 'various', 'aspect', 'rtw', 'create', 'command', 'line', 'functionality', 'start', 'stop', 'command', 'line', 'functionality', 'add', 'listener', 'block', 'signal', 'view', 'build', 'grt', 'executable', 'command', 'line', 'functionality', 'interface', 'code', 'run', 'real', 'time', 'purpose', 'grt', 'code', 'run', 'host', 'machine', 'run', 'hard', 'real', 'time', 'however', 'external', 'mode', 'communicate', 'code', 'hence', 'show', 'communication', 'would', 'perform', 'code', 'truly', 'run', 'rtos', 'add', 'exec', 'event', 'listenerevent', 'interfacepick', 'weekpotw']",0
188,24320,"M-file scripts and Simulink models from webinar on 28 May 2009<p>These are the files and some of the data that I used in my recent webinar on Algorithmic Trading. Data has been shortened for size reasons. Included are:MARISANearest Neighbour modelTrailing stop-loss codean illustration of Takens TheoremAlso included are Simulink models showing:Moving Average crossover modelSimple tracking of the FTSE 100 - intro to basket tradingA bollinger band model using StateflowA simple market making system based on a paper by Sanmay Das</p>algorithmic trading,algorithmic trading,nearest neighbour,market making,algorithmic trading,algorithmic trading,bollinger bands,finance,high frequency,market making,signal processing,simulation,simulink,systematic trading,algorithmic trading,algorithmic trading,algorithmic trading,algorithmic trading,high frequency,market making,algorithmic trading,algorithmic trading,nearest neighbour,algorithmic trading,algorithmic trading,gui,high frequency,finance,algorithmic trading,algorithmic trading,systematic trading,algorithmic trading,high frequency,algorithmic trading,algorithmic trading,algorithmic trading,algorithmic trading,algorithmic trading,bollinger bands,finance,gui,high frequency,market making,nearest neighbour,signal processing,simulation,simulink,systematic trading",88,6,2,0,104,file script webinar may file data recent webinar algorithmic trading data shorten size reason include marisanearest neighbour modeltrailing stop loss codean illustration takens theoremalso include show move average crossover modelsimple track ftse intro basket tradinga bollinger band stateflowa simple market make base paper sanmay dasalgorithmic tradingnearest neighbourmarket frequencymarket makingsignal tradinghigh frequencymarket tradingnearest tradingguihigh tradinghigh frequencymarket makingnearest neighboursignal trading,"['file', 'script', 'webinar', 'may', 'file', 'data', 'recent', 'webinar', 'algorithmic', 'trading', 'data', 'shorten', 'size', 'reason', 'include', 'marisanearest', 'neighbour', 'modeltrailing', 'stop', 'loss', 'codean', 'illustration', 'takens', 'theoremalso', 'include', 'show', 'move', 'average', 'crossover', 'modelsimple', 'track', 'ftse', 'intro', 'basket', 'tradinga', 'bollinger', 'band', 'stateflowa', 'simple', 'market', 'make', 'base', 'paper', 'sanmay', 'dasalgorithmic', 'tradingnearest', 'neighbourmarket', 'frequencymarket', 'makingsignal', 'tradinghigh', 'frequencymarket', 'tradingnearest', 'tradingguihigh', 'tradinghigh', 'frequencymarket', 'makingnearest', 'neighboursignal', 'trading']",8
189,24353,"The examples provided in this file can be used to teach signal processing courses.<p>The zip files contains SimulinkÂ®  models that can be used for Teaching Signal Processing Concepts interactively. The models can be used for demonstrations or with modern teaching methods.  The examples build on the ideas presented in the paper ""Interactive models for teaching digital signal processing"", Proc. IEEE DSP Workshop 2009.  The paper can be downloaded from the IEEE website over here: <a href=""http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4785928"">http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=4785928</a></p>classroom,education,signal processing,simulink,teaching,classroom,communications,education,signal processing,signal processing examples,signals and systems,simulink,teaching,signal processing,signal processing examples,education",1025,89,6,0,1065,example provide file teach signal processing course zip file contains teach signal processing concept interactively demonstration modern teach method example build idea present paper interactive teach digital signal processing proc iee dsp workshop paper download iee website http ieexplore iee org xpl freeabs jsp arnumber process examplessignals process,"['example', 'provide', 'file', 'teach', 'signal', 'processing', 'course', 'zip', 'file', 'contains', 'teach', 'signal', 'processing', 'concept', 'interactively', 'demonstration', 'modern', 'teach', 'method', 'example', 'build', 'idea', 'present', 'paper', 'interactive', 'teach', 'digital', 'signal', 'processing', 'proc', 'iee', 'dsp', 'workshop', 'paper', 'download', 'iee', 'website', 'http', 'ieexplore', 'iee', 'org', 'xpl', 'freeabs', 'jsp', 'arnumber', 'process', 'examplessignals', 'process']",0
190,24396,"Neste modelo foi simulado a tecnica de modulaÃ§Ã£o por largura de pulso senoidal (SPWM).<p>A partir dos conceitos de modulaÃ§Ã£o por largura de pulso senoidal (SPWM), foi implementado um modelo da logica de chaveamento, do inversor trifasico de dois niveis e um subsystem para as mediÃ§Ãµes das grandezas (Van, Vcb, etc).</p>inversor,modulation pwm,simulink,spwm,third harmonic",112,3,2,0,110,neste modelo foi tecnica modulaÃ§Ã£o por largura pulso senoidal spwm partir conceitos modulaÃ§Ã£o por largura pulso senoidal spwm foi implementado modelo logica chaveamento inversor trifasico doi niveis subsystem para mediÃ§Ãµes grandezas van vcb etc harmonic,"['neste', 'modelo', 'foi', 'tecnica', 'modulaÃ§Ã£o', 'por', 'largura', 'pulso', 'senoidal', 'spwm', 'partir', 'conceitos', 'modulaÃ§Ã£o', 'por', 'largura', 'pulso', 'senoidal', 'spwm', 'foi', 'implementado', 'modelo', 'logica', 'chaveamento', 'inversor', 'trifasico', 'doi', 'niveis', 'subsystem', 'para', 'mediÃ§Ãµes', 'grandezas', 'van', 'vcb', 'etc', 'harmonic']",8
191,24403,"SimulaÃ§Ã£o do motor de induÃ§Ã£o trifÃ¡sico a partir das equaÃ§Ãµes diferenciais.<p>A partir das equaÃ§Ãµes diferenciais que modelam o comportamento dinÃ¢mico do motor de induÃ§Ã£o, foi desenvolvido o modelo do motor no simulink.A simulaÃ§Ã£o pode ser configurada para diferentes sistemas de referencia (estacionaria, sÃ­ncrona, etc.)</p>induction motor,induction motor,simulink,stationary,synchronous and arbitrary reference frame,induction motor,dtc induction motor drive,motor ac,electric_motor_control,power_electronics_control",180,9,3,0,238,motor induÃ§Ã£o trifÃ¡sico partir equaÃ§Ãµes diferenciais partir equaÃ§Ãµes diferenciais que modelam comportamento dinÃ¢mico motor induÃ§Ã£o foi desenvolvido modelo motor pode ser configurada para diferentes sistemas referencia estacionaria sÃ­ncrona etc induction motorinduction arbitrary reference frameinduction motordtc induction motor drivemotor acelectric motor controlpower electronics control,"['motor', 'induÃ§Ã£o', 'trifÃ¡sico', 'partir', 'equaÃ§Ãµes', 'diferenciais', 'partir', 'equaÃ§Ãµes', 'diferenciais', 'que', 'modelam', 'comportamento', 'dinÃ¢mico', 'motor', 'induÃ§Ã£o', 'foi', 'desenvolvido', 'modelo', 'motor', 'pode', 'ser', 'configurada', 'para', 'diferentes', 'sistemas', 'referencia', 'estacionaria', 'sÃ­ncrona', 'etc', 'induction', 'motorinduction', 'arbitrary', 'reference', 'frameinduction', 'motordtc', 'induction', 'motor', 'drivemotor', 'acelectric', 'motor', 'controlpower', 'electronics', 'control']",8
192,24413,"Variable R and X for a catenary system model<p>This file is implemented in order to simulate a catenary system with a train which is running. The R and the X parts of Z is so variable (depending with the distance x)</p>train,automotive,catenary,electric chain,train",23,3,3,0,22,variable catenary modelthis file implement order catenary train run part variable depend distance chaintrain,"['variable', 'catenary', 'modelthis', 'file', 'implement', 'order', 'catenary', 'train', 'run', 'part', 'variable', 'depend', 'distance', 'chaintrain']",0
193,24629,"Excellent Single Phase Active power Filter with Closed loop control<p>The model describes the Active power Filter for High Voltage DC power Supply. The Active Filter can be used in any other applications also.</p>control design,simpower systems,this possible on hard warei am trying so,control design,simpower systems,control design,simpower systems,this possible on hard warei am trying so,control design,simpower systems,control design,simpower systems,power_conversion_control,power_electronics_control",80,3,2,0,81,excellent single phase active power filter close loop controlthe describes active power filter high voltage power supply active filter application also control designsimpower systemsthis possible hard warei try socontrol designsimpower systemscontrol designsimpower systemsthis possible hard warei try socontrol designsimpower systemscontrol designsimpower systemspower conversion controlpower electronics control,"['excellent', 'single', 'phase', 'active', 'power', 'filter', 'close', 'loop', 'controlthe', 'describes', 'active', 'power', 'filter', 'high', 'voltage', 'power', 'supply', 'active', 'filter', 'application', 'also', 'control', 'designsimpower', 'systemsthis', 'possible', 'hard', 'warei', 'try', 'socontrol', 'designsimpower', 'systemscontrol', 'designsimpower', 'systemsthis', 'possible', 'hard', 'warei', 'try', 'socontrol', 'designsimpower', 'systemscontrol', 'designsimpower', 'systemspower', 'conversion', 'controlpower', 'electronics', 'control']",4
194,24648,"Selective Harmonic Elimination PWM for 3-Phase Inverters<p>Selective harmonic Pulse Width Modulated Pulses are presented in this model. Six dominant harmonics are removed in this simulink model which are present in three-phase PWM inverter. See the FFT for the output voltage waveform and current waveforms. Interestingly you can see that 5th, 7th, 11th, 13th, 17th and 19th harmonic content is zero.</p>simpowersystems,simpowersystems,simpowersystems,electric_motor_control,power_conversion_control,power_electronics_control,simpowersystems",82,5,3,0,80,selective harmonic elimination pwm phase harmonic pulse width modulate pulse present six dominant harmonic remove present three phase pwm inverter see fft output voltage waveform current waveform interestingly see harmonic content zero motor controlpower conversion controlpower electronics,"['selective', 'harmonic', 'elimination', 'pwm', 'phase', 'harmonic', 'pulse', 'width', 'modulate', 'pulse', 'present', 'six', 'dominant', 'harmonic', 'remove', 'present', 'three', 'phase', 'pwm', 'inverter', 'see', 'fft', 'output', 'voltage', 'waveform', 'current', 'waveform', 'interestingly', 'see', 'harmonic', 'content', 'zero', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
195,24653,"Simulation of a direct operated hydraulic relief valve<p>Modeling and Simulation of a Hydraulic Relief ValveThe attached file presents a simulation of a direct-operated hydraulic relief valve with built-in damper. The study of the valve included the following:â¢Construction and operation of the valveâ¢Mathematical modelingâ¢Computer simulation using Simulinkâ¢A discussion of the static and dynamic characteristics of the valve, based on the simulation results.The theoretical analysis is presented in the following book, pages 198 to 205:M Galal Rabie, Fluid Power Engineering, McGraw-Hill, NY, May 18, 2009.</p>aerospace,automotive,control design,fluid power engineering,optimization,simulation,simulink",262,21,4,0,294,direct operate hydraulic relief valvemodeling hydraulic relief valvethe attach file present direct operate hydraulic relief valve build damper study valve include follow construction operation discussion static dynamic characteristic valve base result theoretical analysis present follow book page galal rabie fluid power engineering mcgraw hill may designfluid power,"['direct', 'operate', 'hydraulic', 'relief', 'valvemodeling', 'hydraulic', 'relief', 'valvethe', 'attach', 'file', 'present', 'direct', 'operate', 'hydraulic', 'relief', 'valve', 'build', 'damper', 'study', 'valve', 'include', 'follow', 'construction', 'operation', 'discussion', 'static', 'dynamic', 'characteristic', 'valve', 'base', 'result', 'theoretical', 'analysis', 'present', 'follow', 'book', 'page', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'designfluid', 'power']",0
196,24656,"Cleans Simulink models of all Scope and Display blocks by replacing them with Terminator blocks.<p>Simulink developers may use scope and display blocks during model development. However, these blocks sometimes get buried deep inside subsystems and consequently never removed during model clean-up. These lost blocks can effect the run-time of the model according to The Mathworks: <a href=""http://www.mathworks.com/support/solutions/data/1-18AAG.html?solution=1-18AAG"">http://www.mathworks.com/support/solutions/data/1-18AAG.html?solution=1-18AAG</a> This m-class file loads a simulink model, searches it for scope and display blocks (including inside subsystems and masked blocks), and replaces each instance with a Terminator block. The reverse process is also possible should the user desire to recover the original scope &amp; display blocks at some time in the future. This is done without disturbing the integrity of the simulink model itself or any other blocks within the model.Includes a simulink model and an example of how to run the code.Files Included:simulinkModelCleaner.msmcTest.mfallingBallExample.mdl</p>clean,model,replace_blocks,scrub,simulink",19,2,2,0,16,clean scope display block replace terminator block developer may scope display block development however block sometimes get buried deep inside subsystem consequently never remove clean lost block effect run time accord mathworks http mathworks com support solution data aag html solution aag class file load search scope display block include inside subsystem mask block replaces instance terminator block reverse process also possible user desire recover original scope amp display block time future without disturb integrity block within include example run code file include msmctest,"['clean', 'scope', 'display', 'block', 'replace', 'terminator', 'block', 'developer', 'may', 'scope', 'display', 'block', 'development', 'however', 'block', 'sometimes', 'get', 'buried', 'deep', 'inside', 'subsystem', 'consequently', 'never', 'remove', 'clean', 'lost', 'block', 'effect', 'run', 'time', 'accord', 'mathworks', 'http', 'mathworks', 'com', 'support', 'solution', 'data', 'aag', 'html', 'solution', 'aag', 'class', 'file', 'load', 'search', 'scope', 'display', 'block', 'include', 'inside', 'subsystem', 'mask', 'block', 'replaces', 'instance', 'terminator', 'block', 'reverse', 'process', 'also', 'possible', 'user', 'desire', 'recover', 'original', 'scope', 'amp', 'display', 'block', 'time', 'future', 'without', 'disturb', 'integrity', 'block', 'within', 'include', 'example', 'run', 'code', 'file', 'include', 'msmctest']",7
197,24687,"I have tried my hand at drawing up a simulink block set *VERY BASIC* of jpec2000 compression.<p>My problem is the DWT wavelet asks for a frame input but I cant seem to resolve the issue. Please have a look someone and check. Think I might have made a very beginner mistake :)Kindest RegardsJacques KleynhansKindest RegardsJacques KleynhansCurrently working on my MSc building a FPGA based camera system for a Satellite, Image compression is necessary.</p>can this model file convert into hdl,image compression,jpeg2000,simulink,image compression,jpeg2000",56,6,6,0,54,tried hand draw block set basic jpec compression problem dwt wavelet ask frame input cant seem resolve issue please look someone check think might make beginner mistake kind regardsjacques regardsjacques work msc build fpga base camera satellite image compression necessary file convert hdlimage compressionjpeg compressionjpeg,"['tried', 'hand', 'draw', 'block', 'set', 'basic', 'jpec', 'compression', 'problem', 'dwt', 'wavelet', 'ask', 'frame', 'input', 'cant', 'seem', 'resolve', 'issue', 'please', 'look', 'someone', 'check', 'think', 'might', 'make', 'beginner', 'mistake', 'kind', 'regardsjacques', 'regardsjacques', 'work', 'msc', 'build', 'fpga', 'base', 'camera', 'satellite', 'image', 'compression', 'necessary', 'file', 'convert', 'hdlimage', 'compressionjpeg', 'compressionjpeg']",5
198,24745,"This demo shows a self modifying masked subsystem to split out the correct subbus from the superbus.<p>Here is the situation. Suppose you have a model that can analyze the properties of a meteor to track its trajectory. You want to use it in a larger model  which tracks many such meteors at the same time. You now need a block that can accept a superbus called Mainbus (that contains a lot of subbuses called meteorbus) and split out the relevant subbus (metoerbus). This block should be able to handles any changes in MainBus and meteorbus automatically on model update (no manual intervention).Solution:  Look at the example âArrayofBus_example.mdlâ.  I created a masked subsystem âMeteor Selectorâ which automatically looks at the Bus Objects (MainBus and meteorbus), figures out how many meteors are in the âMainBusâ and the structure of the âmisbusâ and pulls out the correct meteor.  I simply used a Bus Selector which splits out ALL the meteors and then use a Multiport Switch to pass through the correct meteor(based on input frm the mask) to the outport.  The tricky part is to get this to work if the number of meteors in MainBus changes. I got this to happen by writing a script that figures out what needs to be done (at the time of model update) and put that in Mask Initialization callback. Essentially you have to set the correct number of ports for the Bus Selector and the Multiport Switch, delete the existing signal lines and add the required lines.  Instructions:Open the model âArrayofBus_example.mdlâ and follow the instructions in the annotation.</p>self_rating,array of buses,building models from the command line,self modifying masks,self_rating",8,1,2,0,8,demo show self modify masked subsystem split correct subbus superbus situation suppose analyze property meteor track trajectory want large track many meteor time need block accept superbus call mainbus contain lot subbuses call meteorbus split relevant subbus metoerbus block able handle change mainbus meteorbus automatically update manual intervention solution look example arrayofbus example mdl create masked subsystem meteor selector automatically look bus object mainbus meteorbus figure many meteor mainbus structure misbus pull correct meteor simply bus selector split meteor multiport switch pas correct meteor base input frm mask outport tricky part get work number meteor mainbus change get happen write script figure need time update put mask initialization callback essentially set correct number port bus selector multiport switch delete exist signal line add require line instruction open arrayofbus example mdl follow instruction annotation self ratingarray busesbuilding command lineself modify masksself rating,"['demo', 'show', 'self', 'modify', 'masked', 'subsystem', 'split', 'correct', 'subbus', 'superbus', 'situation', 'suppose', 'analyze', 'property', 'meteor', 'track', 'trajectory', 'want', 'large', 'track', 'many', 'meteor', 'time', 'need', 'block', 'accept', 'superbus', 'call', 'mainbus', 'contain', 'lot', 'subbuses', 'call', 'meteorbus', 'split', 'relevant', 'subbus', 'metoerbus', 'block', 'able', 'handle', 'change', 'mainbus', 'meteorbus', 'automatically', 'update', 'manual', 'intervention', 'solution', 'look', 'example', 'arrayofbus', 'example', 'mdl', 'create', 'masked', 'subsystem', 'meteor', 'selector', 'automatically', 'look', 'bus', 'object', 'mainbus', 'meteorbus', 'figure', 'many', 'meteor', 'mainbus', 'structure', 'misbus', 'pull', 'correct', 'meteor', 'simply', 'bus', 'selector', 'split', 'meteor', 'multiport', 'switch', 'pas', 'correct', 'meteor', 'base', 'input', 'frm', 'mask', 'outport', 'tricky', 'part', 'get', 'work', 'number', 'meteor', 'mainbus', 'change', 'get', 'happen', 'write', 'script', 'figure', 'need', 'time', 'update', 'put', 'mask', 'initialization', 'callback', 'essentially', 'set', 'correct', 'number', 'port', 'bus', 'selector', 'multiport', 'switch', 'delete', 'exist', 'signal', 'line', 'add', 'require', 'line', 'instruction', 'open', 'arrayofbus', 'example', 'mdl', 'follow', 'instruction', 'annotation', 'self', 'ratingarray', 'busesbuilding', 'command', 'lineself', 'modify', 'masksself', 'rating']",5
199,24746,"Modeling Traffic Management on a Cisco Router<p>Using Simlink Blocks I tried to model the below configuration used on a Cisco router for traffic management purposes =========================================policy-map COS-OUT-S1/0.1  class DSCP-OUT-D1   bandwidth percent 50   random-detect dscp-based   random-detect dscp 26   39    117   20   random-detect dscp 28   19    38    20   service-policy COS-OUT-D1-S1/0.1  class DSCP-OUT-D2   bandwidth percent 25   random-detect dscp-based   random-detect dscp 18   61    122   20   random-detect dscp 20   34    68    20   service-policy COS-OUT-D2-S1/0.1  class DSCP-OUT-D3   bandwidth percent 25   random-detect dscp-based   random-detect dscp 10   78    156   20   random-detect dscp 12   51    102   20   service-policy COS-OUT-D3-S1/0.1=========================================Below are the actions taken to build and verify the model :    1- Investigated in details all counters of the router (related to traffic) deducing in which way they are correlated to each other      2- Translated every line in the configuration into a block   3- I have set the parameters of my model and of a router simulated with Dynamips to the same values and exposed them to same traffic rate for the same period of time and compared the resultsNote :    1 - Attached with the MDL file a detailed  presentation of my work          2 - If there were any abnormal behaviour while simulating the model , make sure that there is no               unconnected connection , As I faced this problem  multiple times</p>cbwfq,cbwfq,cos,qos,queuing,router,switch,wfq,qos,cbwfq,router",801,72,4,0,880,traffic management cisco routerusing simlink block try configuration cisco router traffic management purpose policy map cos class dscp bandwidth percent random detect dscp base random detect dscp random detect dscp service policy class dscp bandwidth percent random detect dscp base random detect dscp random detect dscp service policy class dscp bandwidth percent random detect dscp base random detect dscp random detect dscp service policy action take build verify investigate detail counter router relate traffic deduce way correlate translated every line configuration block set parameter router dynamips value expose traffic rate period time compare resultsnote attached mdl file detailed presentation work abnormal behaviour make sure unconnected connection face problem multiple,"['traffic', 'management', 'cisco', 'routerusing', 'simlink', 'block', 'try', 'configuration', 'cisco', 'router', 'traffic', 'management', 'purpose', 'policy', 'map', 'cos', 'class', 'dscp', 'bandwidth', 'percent', 'random', 'detect', 'dscp', 'base', 'random', 'detect', 'dscp', 'random', 'detect', 'dscp', 'service', 'policy', 'class', 'dscp', 'bandwidth', 'percent', 'random', 'detect', 'dscp', 'base', 'random', 'detect', 'dscp', 'random', 'detect', 'dscp', 'service', 'policy', 'class', 'dscp', 'bandwidth', 'percent', 'random', 'detect', 'dscp', 'base', 'random', 'detect', 'dscp', 'random', 'detect', 'dscp', 'service', 'policy', 'action', 'take', 'build', 'verify', 'investigate', 'detail', 'counter', 'router', 'relate', 'traffic', 'deduce', 'way', 'correlate', 'translated', 'every', 'line', 'configuration', 'block', 'set', 'parameter', 'router', 'dynamips', 'value', 'expose', 'traffic', 'rate', 'period', 'time', 'compare', 'resultsnote', 'attached', 'mdl', 'file', 'detailed', 'presentation', 'work', 'abnormal', 'behaviour', 'make', 'sure', 'unconnected', 'connection', 'face', 'problem', 'multiple']",5
200,24763,"modeling the water surface<p>this model show the water surface You can change the amplitude and speed of wavesH: height of waveb: depth</p>water surface modeling,water surface modeling",39,1,2,0,32,water surfacethis show water surface change amplitude speed wavesh height waveb depthwater surface modelingwater surface modeling,"['water', 'surfacethis', 'show', 'water', 'surface', 'change', 'amplitude', 'speed', 'wavesh', 'height', 'waveb', 'depthwater', 'surface', 'modelingwater', 'surface', 'modeling']",8
201,24767,"Simple method to convert Single phase to Three-phase by minimum number of switches<p>This is a simple method to convert Single-Phase to Three-Phase with minimum number of switches for low power applications.Check the output currents and voltages.Reference title is included in this submission</p>control design,simpowersystems,power_conversion_control,power_electronics_control",33,4,2,0,26,simple method convert single phase three phase minimum number switchesthis simple method convert single phase three phase minimum number switch low power application check output current voltages reference title include conversion controlpower electronics control,"['simple', 'method', 'convert', 'single', 'phase', 'three', 'phase', 'minimum', 'number', 'switchesthis', 'simple', 'method', 'convert', 'single', 'phase', 'three', 'phase', 'minimum', 'number', 'switch', 'low', 'power', 'application', 'check', 'output', 'current', 'voltages', 'reference', 'title', 'include', 'conversion', 'controlpower', 'electronics', 'control']",1
202,24802,"Getting the BER out of a multipath, non-LOS channel with BPSK modulation.<p>I'm actually having trouble with the equalization of the channel, because the doppler effect introduces phase rotation, which I don't know how to correct. If anyone could help me, I' d be really thankful.</p>bpsk,communications,rayleigh,simulink,rayleigh,bpsk",10,0,1,0,12,get ber multipath non los channel bpsk modulation actually trouble equalization channel doppler effect introduce phase rotation know correct anyone could help really thankful,"['get', 'ber', 'multipath', 'non', 'los', 'channel', 'bpsk', 'modulation', 'actually', 'trouble', 'equalization', 'channel', 'doppler', 'effect', 'introduce', 'phase', 'rotation', 'know', 'correct', 'anyone', 'could', 'help', 'really', 'thankful']",5
203,24823,"Simulating Simple pendulum in Simulink<p>A very simple simulation of pendulum in simulink</p>control design,control design,control design,control design,control design",9,0,1,0,10,simple pendulum simple pendulum designcontrol designcontrol designcontrol designcontrol design,"['simple', 'pendulum', 'simple', 'pendulum', 'designcontrol', 'designcontrol', 'designcontrol', 'designcontrol', 'design']",5
204,24830,"Torque of electro magnetic torque motor considering magnetic hysterisis<p>The electromagnetic torque motors are widely used in electrohydraulic servovalves. They serve to convert the control current into a proportional torque. For more details about this issue, please refer to my book:M Galal Rabie, Fluid Power Engineering, McGraw-Hill, NY, May 18, 2009, pp 336-340This program calculates the torque of an electromagnetic torque motor, considering the ferromagnetic hysteresis. The calculation algorithm is based on the following paper:Hay J.L. and Chaplin R.I., 'Dynamic Simulation of Ferromagnetic Hysteretic Behavior by Digital Computer,' Simulation, December 1975, pp 185-191.</p>aerospace,automotive,communications,control design,demo,fluid power engineering,simulation,simulink,electric_motor_control,power_electronics_control",32,1,2,0,37,torque electro magnetic torque motor consider magnetic hysterisisthe electromagnetic torque motor widely servovalves serve convert control current proportional torque detail issue please refer book galal rabie fluid power engineering mcgraw hill may program calculates torque electromagnetic torque motor consider ferromagnetic hysteresis calculation algorithm base follow paper hay chaplin dynamic ferromagnetic hysteretic behavior digital computer december designdemofluid power motor controlpower electronics control,"['torque', 'electro', 'magnetic', 'torque', 'motor', 'consider', 'magnetic', 'hysterisisthe', 'electromagnetic', 'torque', 'motor', 'widely', 'servovalves', 'serve', 'convert', 'control', 'current', 'proportional', 'torque', 'detail', 'issue', 'please', 'refer', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'program', 'calculates', 'torque', 'electromagnetic', 'torque', 'motor', 'consider', 'ferromagnetic', 'hysteresis', 'calculation', 'algorithm', 'base', 'follow', 'paper', 'hay', 'chaplin', 'dynamic', 'ferromagnetic', 'hysteretic', 'behavior', 'digital', 'computer', 'december', 'designdemofluid', 'power', 'motor', 'controlpower', 'electronics', 'control']",4
205,24833,"Transient response of electromagnetic torque motor neglecting magnetic hysterisis<p>The electromagnetic torque motors are widely used in electrohydraulic servovalves. They serve to convert the control current into a proportional torque. For more details about the steady state and transient response calculation, please refer to my book:M Galal Rabie, Fluid Power Engineering, McGraw-Hill, NY, May 18, 2009, pp 336-340 and 349-352</p>fluid power engineering,aerospace,automotive,communications,control design,demo,fluid power engineering,simulation,simulink,electric_motor_control,power_electronics_control",17,1,2,0,19,transient response electromagnetic torque motor neglect magnetic hysterisisthe electromagnetic torque motor widely servovalves serve convert control current proportional torque detail steady state transient response calculation please refer book galal rabie fluid power engineering mcgraw hill may fluid power designdemofluid power motor controlpower electronics control,"['transient', 'response', 'electromagnetic', 'torque', 'motor', 'neglect', 'magnetic', 'hysterisisthe', 'electromagnetic', 'torque', 'motor', 'widely', 'servovalves', 'serve', 'convert', 'control', 'current', 'proportional', 'torque', 'detail', 'steady', 'state', 'transient', 'response', 'calculation', 'please', 'refer', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'fluid', 'power', 'designdemofluid', 'power', 'motor', 'controlpower', 'electronics', 'control']",4
206,24836,"Transient response of the exit pressures of first stage of electrohydraulic servovalve <p>The electrohydraulic servovalves are mostly multi-stage. They incorporate, mostly, a first stage which serves to convert the command current into a proportional pressure difference. For more details about the steady state and transient response calculation, please refer to my book:M Galal Rabie, Fluid Power Engineering, McGraw-Hill, NY, May 18, 2009, pp 336-342 and 352-354</p>aerospace,automotive,communications,control design,fluid power engineering,optimization,simulation,simulink",252,12,4,0,282,transient response exit pressure first stage servovalve servovalves mostly multi stage incorporate mostly first stage serf convert command current proportional pressure difference detail steady state transient response calculation please refer book galal rabie fluid power engineering mcgraw hill may designfluid power,"['transient', 'response', 'exit', 'pressure', 'first', 'stage', 'servovalve', 'servovalves', 'mostly', 'multi', 'stage', 'incorporate', 'mostly', 'first', 'stage', 'serf', 'convert', 'command', 'current', 'proportional', 'pressure', 'difference', 'detail', 'steady', 'state', 'transient', 'response', 'calculation', 'please', 'refer', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'designfluid', 'power']",5
207,24841,"Transient responses of two-stage of servovalve, calculated by a transfer function and detailed model<p>Electrohydraulic servo systems provide one of the best controllers from the point of view of precision and speed of response. They are used to control almost all hydraulic and mechanical parameters, such as the pressure, pressure difference, angular speed, displacement, angular displacement, strain, force, and others. The electrohydraulic servovalves are mostly multi-stage. This file presents a simulation program of a two-stage servovalve. It includes also a representative model of the servovalve, a second order transfer function.For more details about the transient response calculation, please refer to my book:M Galal Rabie, Fluid Power Engineering, McGraw-Hill, NY, May 18, 2009, pp 340-350 and 354-357</p>aerospace,automotive,communications,control design,fluid power engineering,simulation,simulink,aerospace,simulink",158,12,5,0,172,transient response two stage servovalve calculate transfer function detail servo provide one best controller point view precision speed response control almost hydraulic mechanical parameter pressure pressure difference angular speed displacement angular displacement strain force others servovalves mostly multi stage file present program two stage servovalve include also representative servovalve second order transfer function detail transient response calculation please refer book galal rabie fluid power engineering mcgraw hill may designfluid power,"['transient', 'response', 'two', 'stage', 'servovalve', 'calculate', 'transfer', 'function', 'detail', 'servo', 'provide', 'one', 'best', 'controller', 'point', 'view', 'precision', 'speed', 'response', 'control', 'almost', 'hydraulic', 'mechanical', 'parameter', 'pressure', 'pressure', 'difference', 'angular', 'speed', 'displacement', 'angular', 'displacement', 'strain', 'force', 'others', 'servovalves', 'mostly', 'multi', 'stage', 'file', 'present', 'program', 'two', 'stage', 'servovalve', 'include', 'also', 'representative', 'servovalve', 'second', 'order', 'transfer', 'function', 'detail', 'transient', 'response', 'calculation', 'please', 'refer', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'designfluid', 'power']",0
208,24897,"The simulation for Cellular Neural Networks (CNN) is built in Simulink/Matlab. <p>Nowadays, CNN becomes more and more useful in solving engineering issues. This simulation is to help you understand the original idea proposed by L.O. Chua and Yang. Please read thorough Readme.txt, original papers before changing the values of parameters.</p>cellular neural network,cnn,paradigm,parallel computing,cellular neural network,cnn,parallel computing,paradigm",1121,16,2,0,1396,cellular neural network cnn build nowadays cnn becomes useful solve engineering issue help understand original idea propose chua yang please read thorough readme txt original paper change value parameter cellular neural neural,"['cellular', 'neural', 'network', 'cnn', 'build', 'nowadays', 'cnn', 'becomes', 'useful', 'solve', 'engineering', 'issue', 'help', 'understand', 'original', 'idea', 'propose', 'chua', 'yang', 'please', 'read', 'thorough', 'readme', 'txt', 'original', 'paper', 'change', 'value', 'parameter', 'cellular', 'neural', 'neural']",0
209,24917,"Unscented Kalman filtering tutorial: Simulink and tilt sensor case study.<p>This engineering note is the first of two parts: Part 1 Design and Simulation.Part 2 Real-World System Realization. (Being written)It aims at demonstrating how you may use Matlab/Simulink together with Rapid STM32 blockset and ARM Cortex-M3 processors (STM32) to develop digital signal processing systems; using a tilt sensor as a case study. It covers the development process from design, simulation, hardware-in-the-loop testing, and creating a stand-alone embedded system. The content is supposed to be as simple/introductory as possible.In this first part:1. The motivation for using Simulink for embedded system development is explained. 2. A simplified model of tilt sensor system is developed. 3. Kalman filtering and Unscented Kalman filtering (UKF) theory is summarized. 4. Graphical instructions are then provided to guide you through the whole process of implementing a Simulink model to design, simulate, and evaluate the performance of an UKF for a tilt sensor system.Note: Source code is also provided to perform Monte Carlo simulation based on Simulink model to evaluate UKF performance using covariance analysis.In the second part, graphical instructions will be provided to guide you through the process of transferring your design from Simulink model to real-world stand-alone tilt sensor system based on Rapid STM32 - R1 Stamp board.Visit <a href=""http://www.rapidstm32.com"">www.rapidstm32.com</a> for more information.</p>aerospace,arm,code generation,cortex m3,embedded system,estimation,kalman filter,microcontroller,nonlinear,realtime workshop embedded coder,signal processing,simulink,tilt sensor,estimation",57,1,2,0,62,unscented kalman filter tutorial tilt sensor case study engineering note first two part part design part real world realization write aim demonstrate may together rapid stm blockset arm cortex processor stm develop digital signal processing tilt sensor case study cover development process design hardware loop test create stand alone embed content suppose simple introductory possible first part motivation embed development explain simplified tilt sensor develop kalman filtering unscented kalman filter ukf theory summarize graphical instruction provide guide whole process implement design evaluate performance ukf tilt sensor note source code also provide perform monte carlo base evaluate ukf performance covariance analysis second part graphical instruction provide guide process transfer design real world stand alone tilt sensor base rapid stm stamp board visit rapidstm com information embed workshop embed codersignal,"['unscented', 'kalman', 'filter', 'tutorial', 'tilt', 'sensor', 'case', 'study', 'engineering', 'note', 'first', 'two', 'part', 'part', 'design', 'part', 'real', 'world', 'realization', 'write', 'aim', 'demonstrate', 'may', 'together', 'rapid', 'stm', 'blockset', 'arm', 'cortex', 'processor', 'stm', 'develop', 'digital', 'signal', 'processing', 'tilt', 'sensor', 'case', 'study', 'cover', 'development', 'process', 'design', 'hardware', 'loop', 'test', 'create', 'stand', 'alone', 'embed', 'content', 'suppose', 'simple', 'introductory', 'possible', 'first', 'part', 'motivation', 'embed', 'development', 'explain', 'simplified', 'tilt', 'sensor', 'develop', 'kalman', 'filtering', 'unscented', 'kalman', 'filter', 'ukf', 'theory', 'summarize', 'graphical', 'instruction', 'provide', 'guide', 'whole', 'process', 'implement', 'design', 'evaluate', 'performance', 'ukf', 'tilt', 'sensor', 'note', 'source', 'code', 'also', 'provide', 'perform', 'monte', 'carlo', 'base', 'evaluate', 'ukf', 'performance', 'covariance', 'analysis', 'second', 'part', 'graphical', 'instruction', 'provide', 'guide', 'process', 'transfer', 'design', 'real', 'world', 'stand', 'alone', 'tilt', 'sensor', 'base', 'rapid', 'stm', 'stamp', 'board', 'visit', 'rapidstm', 'com', 'information', 'embed', 'workshop', 'embed', 'codersignal']",0
210,24918,"Condensating heat exchanger<p>This heat exchanger exists of a pipe with a cold fluid that is heated up by means of a convective heat transfer from a hot condensate. </p>simscape,aerospace,thermalm heat exchanger,aerospace,aerospace",30,1,2,0,29,condensating heat exchangerthis heat exchanger exist pipe cold fluid heat mean convective heat transfer hot condensate heat,"['condensating', 'heat', 'exchangerthis', 'heat', 'exchanger', 'exist', 'pipe', 'cold', 'fluid', 'heat', 'mean', 'convective', 'heat', 'transfer', 'hot', 'condensate', 'heat']",8
211,24935,"Model which changes the parameter of a block with every time step â without using S-functions.<p>I needed a simple model which could change the parameter of a block (say Gain block) with every time step â without using S-functions. There are numerous ways to do this. After trying out a couple of things, I came up with a simple model which demonstrates this.Open the âupdating_simâ model, and run the simulation. Open the scope and notice how the input Sine wave is multiplied by an increasing Gain amount at each time step (0.2s). The final value of Gain is 51 (since in 10s there will by 51 time steps).Here I have used the ""add_exec_event_listener"" within my StartFcn model callback, which triggers a listener function called ""update_param"" whenever the event ""PostOutputs"" is hit for the block ""updating_sim/Gain"". Also note that the Gain value is reset to '0' for each simulation run using the InitFcn callback.</p>parameter tuning,simulink,tuning,updating at runtime",3,0,1,0,2,change parameter block every time step without function need simple could change parameter block say gain block every time step without function numerous way try couple thing come simple demonstrates open update sim run open scope notice input sine wave multiply increase gain amount time step final value gain since time step add exec event listener within startfcn callback trigger listener function call update param whenever event postoutputs hit block update sim gain also note gain value reset run initfcn callback parameter runtime,"['change', 'parameter', 'block', 'every', 'time', 'step', 'without', 'function', 'need', 'simple', 'could', 'change', 'parameter', 'block', 'say', 'gain', 'block', 'every', 'time', 'step', 'without', 'function', 'numerous', 'way', 'try', 'couple', 'thing', 'come', 'simple', 'demonstrates', 'open', 'update', 'sim', 'run', 'open', 'scope', 'notice', 'input', 'sine', 'wave', 'multiply', 'increase', 'gain', 'amount', 'time', 'step', 'final', 'value', 'gain', 'since', 'time', 'step', 'add', 'exec', 'event', 'listener', 'within', 'startfcn', 'callback', 'trigger', 'listener', 'function', 'call', 'update', 'param', 'whenever', 'event', 'postoutputs', 'hit', 'block', 'update', 'sim', 'gain', 'also', 'note', 'gain', 'value', 'reset', 'run', 'initfcn', 'callback', 'parameter', 'runtime']",0
212,24961,"2 suspended masses linked by springs and dampers demonstrating basic SimMechanics features.<p>This model shows how SimMechanicsâ¢ can be used for both Forward dynamics and Inverse Dynamics analysis. This model demonstrates how to:- Specify the motion (position, velocity and acceleration) of a joint and measure the force necessary to generate this motion. - Measure the force generated by Joint spring and damper blocks.- Generate a motion signal using Integrator blocks. I recommend defining the acceleration signal and integrating it twice. Specify the position and deriving it twice might lead to problems as the derivative block is more likely to produce infinite derivate at initialization.- How to define bodies in adjoining coordinates. Open one of the Body blocks, you will notice that CS1 position is [0 0 0] in the adjoining coordinates system. Other coordinates are relative to CS1. This allows copying this block and connecting it to another joint without any modification. Defining bodies using adjoining coordinates helps creating reusable systems.- The effect of SimMechanicsâ¢ visualization on simulation speed. Try to turn on and off the SimMechanics visualization from the simulation configuration parameters panel. You will see a huge impact on the simulation speed. You can control the refresh rate of the SimMechanics visualization by clicking âControl simulation speedâ from the simulation menu of the SimMechanics visualization window. </p>dynamics,inverse dynamics,simmechanics,simulink,dynamics,dynamics,inverse dynamics,simmechanics,simmechanics",33,2,2,0,36,suspend mass link spring damper demonstrate basic simmechanics feature show simmechanics forward dynamic inverse dynamic analysis demonstrate specify motion position velocity acceleration joint measure force necessary generate motion measure force generate joint spring damper block generate motion signal integrator block recommend define acceleration signal integrating twice specify position derive twice might lead problem derivative block likely produce infinite derivate initialization define body adjoin coordinate open one body block notice position adjoin coordinate coordinate relative allows copy block connect another joint without modification define body adjoin coordinate help create reusable effect simmechanics visualization speed try turn simmechanics visualization configuration parameter panel see huge impact speed control refresh rate simmechanics visualization click control speed menu simmechanics visualization window dynamicsinverse,"['suspend', 'mass', 'link', 'spring', 'damper', 'demonstrate', 'basic', 'simmechanics', 'feature', 'show', 'simmechanics', 'forward', 'dynamic', 'inverse', 'dynamic', 'analysis', 'demonstrate', 'specify', 'motion', 'position', 'velocity', 'acceleration', 'joint', 'measure', 'force', 'necessary', 'generate', 'motion', 'measure', 'force', 'generate', 'joint', 'spring', 'damper', 'block', 'generate', 'motion', 'signal', 'integrator', 'block', 'recommend', 'define', 'acceleration', 'signal', 'integrating', 'twice', 'specify', 'position', 'derive', 'twice', 'might', 'lead', 'problem', 'derivative', 'block', 'likely', 'produce', 'infinite', 'derivate', 'initialization', 'define', 'body', 'adjoin', 'coordinate', 'open', 'one', 'body', 'block', 'notice', 'position', 'adjoin', 'coordinate', 'coordinate', 'relative', 'allows', 'copy', 'block', 'connect', 'another', 'joint', 'without', 'modification', 'define', 'body', 'adjoin', 'coordinate', 'help', 'create', 'reusable', 'effect', 'simmechanics', 'visualization', 'speed', 'try', 'turn', 'simmechanics', 'visualization', 'configuration', 'parameter', 'panel', 'see', 'huge', 'impact', 'speed', 'control', 'refresh', 'rate', 'simmechanics', 'visualization', 'click', 'control', 'speed', 'menu', 'simmechanics', 'visualization', 'window', 'dynamicsinverse']",0
213,24983,"This tool finds optimal gain settings for input devices used in selection/tracking tasks.<p>The code performs a minimax optimization on a Simulinkk model consisting of empirically-derived human operator informatic parameters and real world nonlinearities.  The tool finds solutions for the design of an input device (design variables are control gains) that interfaces human operators with nonlinear machines during selection/tracking tasks of weighted complexity.</p>control design,human operator inormatic model,input device,minimax,simulation,user interfac",46,4,3,0,42,tool find optimal gain setting input device selection track task code performs minimax optimization consist empirically derive human operator informatic parameter real world nonlinearities tool find solution design input device design variable control gain interface human operator nonlinear machine selection track task weighted complexity control designhuman operator inormatic modelinput interfac,"['tool', 'find', 'optimal', 'gain', 'setting', 'input', 'device', 'selection', 'track', 'task', 'code', 'performs', 'minimax', 'optimization', 'consist', 'empirically', 'derive', 'human', 'operator', 'informatic', 'parameter', 'real', 'world', 'nonlinearities', 'tool', 'find', 'solution', 'design', 'input', 'device', 'design', 'variable', 'control', 'gain', 'interface', 'human', 'operator', 'nonlinear', 'machine', 'selection', 'track', 'task', 'weighted', 'complexity', 'control', 'designhuman', 'operator', 'inormatic', 'modelinput', 'interfac']",5
214,25014,"Simscapeâ¢ language electromechanical example defining a simple DC motor.<p>This file contains examples of using Simscape language to define a DC motor. The test model includes schematic, equation, and composite component implementations so that you can see various methods of creating a custom component.  To find other Simscape language examples, search for posts with the keyword ""simscape language"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22simscape+language%22For"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22simscape+language%22For</a> more information on the Simscape language, watch the Simscape language webinar: <a href=""http://www.mathworks.com/videos/physical-modeling-with-the-simscape-language-81733.htmlTo"">http://www.mathworks.com/videos/physical-modeling-with-the-simscape-language-81733.htmlTo</a> learn more about MathWorks Simscape Products, go to: <a href=""http://physical-modeling.mathworks.com/"">http://physical-modeling.mathworks.com/</a></p>electromechanical,motor,simscape,simscape language,electric_motor_control,power_conversion_control,power_electronics_control,simscape language",32,3,2,0,28,simscape language example define simple motor file contain example simscape language define motor test include schematic equation composite component implementation see various method create custom component find simscape language example search post keyword simscape language http mathworks com matlabcentral fileexchange term simscape language information simscape language watch simscape language webinar http mathworks com videos physical modeling simscape language htmlto learn mathworks simscape product http physical modeling mathworks com motor controlpower conversion controlpower electronics controlsimscape language,"['simscape', 'language', 'example', 'define', 'simple', 'motor', 'file', 'contain', 'example', 'simscape', 'language', 'define', 'motor', 'test', 'include', 'schematic', 'equation', 'composite', 'component', 'implementation', 'see', 'various', 'method', 'create', 'custom', 'component', 'find', 'simscape', 'language', 'example', 'search', 'post', 'keyword', 'simscape', 'language', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'simscape', 'language', 'information', 'simscape', 'language', 'watch', 'simscape', 'language', 'webinar', 'http', 'mathworks', 'com', 'videos', 'physical', 'modeling', 'simscape', 'language', 'htmlto', 'learn', 'mathworks', 'simscape', 'product', 'http', 'physical', 'modeling', 'mathworks', 'com', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsimscape', 'language']",7
215,25032,"Slides and demo files from the webinar ""Introduction to Simulink (Portuguese).<p>Slides and demo files from the webinar ""Introduction to Simulink (Portuguese).</p>portugues,simulink,webinar",93,1,2,0,64,slide demo file webinar introduction portuguese slide demo file webinar introduction portuguese,"['slide', 'demo', 'file', 'webinar', 'introduction', 'portuguese', 'slide', 'demo', 'file', 'webinar', 'introduction', 'portuguese']",0
216,25062,"Demo files from July 21, 2009 webinar<p>Describes development of a failure boundary mapping algorithm and application to a Airfoil Flutter model.Demo files from July 21, 2009 webinar ""Using Statistics and Optimization to Support Design Activities""Development of the failure boundary mapping algoirthm using MATLAB and Statistics Toolbox (Clustering) is described in boundaryMapping.m.  The algorithm is capable of detecting and mapping failure regions that are disconnected (multiple failure regions).Application of the algorithm is applied to a Simulink model of flutter, orginially developed by Cole Stephens:  <a href=""http://www.mathworks.com/matlabcentral/fileexchange/3938"">http://www.mathworks.com/matlabcentral/fileexchange/3938</a></p>clustering,optimization,pattern search,sensitivity analysis,simulation,statistics",205,21,5,0,185,demo file july development failure boundary mapping algorithm application airfoil flutter demo file july webinar statistic optimization support design activity development failure boundary mapping algoirthm statistic toolbox cluster described boundarymapping algorithm capable detect mapping failure region disconnect multiple failure region application algorithm apply flutter orginially developed cole stephen http mathworks com matlabcentral fileexchange,"['demo', 'file', 'july', 'development', 'failure', 'boundary', 'mapping', 'algorithm', 'application', 'airfoil', 'flutter', 'demo', 'file', 'july', 'webinar', 'statistic', 'optimization', 'support', 'design', 'activity', 'development', 'failure', 'boundary', 'mapping', 'algoirthm', 'statistic', 'toolbox', 'cluster', 'described', 'boundarymapping', 'algorithm', 'capable', 'detect', 'mapping', 'failure', 'region', 'disconnect', 'multiple', 'failure', 'region', 'application', 'algorithm', 'apply', 'flutter', 'orginially', 'developed', 'cole', 'stephen', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange']",5
217,25082,"This is simulation for memristor, a memory resistor<p>Memory resistor or memristor is a nonlinear, fourth basic, passive element beside on conventional elements, R, L and C. Memristor was discovered by L.O. Chua in 1971, but it has been aroused recently by researchers at HP Labs. It is expected to make a huge change not only in literatures but also in nanoelectronic industry.This is simulation for a Memristor run in Simulink/Matlab and built with values of parameters given in two recently published papers by Dmitri B. Strukov et.al. on Nature and by Yogesh N. Joglekar et.al on European Journal of Physics. </p>circuit,fourth basic element,memory resistor,memristor,nonlinear circuits,simulation,simulink,circuit,fourth basic element,memory resistor,memristor",50,1,2,0,67,memristor memory resistormemory resistor memristor nonlinear fourth basic passive element beside conventional element memristor discover chua arouse recently researcher labs expect make huge change literature also nanoelectronic industry memristor run build value parameter give two recently publish paper dmitri strukov nature yogesh joglekar european journal physic circuitfourth basic elementmemory basic elementmemory,"['memristor', 'memory', 'resistormemory', 'resistor', 'memristor', 'nonlinear', 'fourth', 'basic', 'passive', 'element', 'beside', 'conventional', 'element', 'memristor', 'discover', 'chua', 'arouse', 'recently', 'researcher', 'labs', 'expect', 'make', 'huge', 'change', 'literature', 'also', 'nanoelectronic', 'industry', 'memristor', 'run', 'build', 'value', 'parameter', 'give', 'two', 'recently', 'publish', 'paper', 'dmitri', 'strukov', 'nature', 'yogesh', 'joglekar', 'european', 'journal', 'physic', 'circuitfourth', 'basic', 'elementmemory', 'basic', 'elementmemory']",8
218,25101,"Delta-Sigma Modulated Three-Phase Inverter Implementing Space Vector Approach<p>An Advanced Simple Configuration Delta-Sigma Modulation Three-Phase Inverter Implementing Space Voltage Vector Approach. To miniaturize and enhance the performance of a variety type of switching mode inverters and converters, researchers have developed with great efforts so far. In these switching nodeconverters, pulse width modulation (PWM) technique is commonlymade use of voltage regulation. In case of using PWM processingscheme, noise peaks appear at the whole number of carrier frequency. And this causes bad influence to the electronic information, telecommunication, consumer and medical equipments nearthe converter. On the contrary, in case of applying a delta-sigmamodulation scheme to switching power converters, no noise peaksappear in the high frequency bands. In this paper, an advancedthree-phase delta-sigma modulation inverter introducing spacevoltage vector modulation scheme is presented and evaluated.Though the proposed modulation inverter consists of simple con-figuration, the proposed scheme can suppress noise level effectivelywith low switching operation number.</p>3 phase delta sigma inverter,3 phase inverter,delta sigma,delta sigma modulator,noise peaks characteristic,signal band,simulation,simulink,space voltage vector,three phase inverter,3 phase delta sigma inverter,delta sigma,delta sigma modulator,electric_motor_control,power_conversion_control,power_electronics_control,simulink",115,10,5,0,144,delta sigma modulate three phase inverter implement space vector approachan advance simple configuration delta sigma modulation three phase inverter implement space voltage vector approach miniaturize enhance performance variety type switch mode inverter converter researcher develop great effort far switch nodeconverters pulse width modulation pwm technique commonlymade voltage regulation case pwm noise peak appear whole number carrier frequency cause bad influence electronic information consumer medical equipment nearthe converter contrary case apply delta sigmamodulation scheme switch power converter noise peaksappear high frequency band paper advancedthree phase delta sigma modulation inverter introduce spacevoltage vector modulation scheme present evaluate though proposed modulation inverter consist simple con figuration propose scheme suppress noise level effectivelywith low switch operation number phase delta sigma inverter phase inverterdelta sigmadelta sigma modulatornoise peak voltage vectorthree phase inverter phase delta sigma inverterdelta sigmadelta sigma motor controlpower conversion controlpower electronics,"['delta', 'sigma', 'modulate', 'three', 'phase', 'inverter', 'implement', 'space', 'vector', 'approachan', 'advance', 'simple', 'configuration', 'delta', 'sigma', 'modulation', 'three', 'phase', 'inverter', 'implement', 'space', 'voltage', 'vector', 'approach', 'miniaturize', 'enhance', 'performance', 'variety', 'type', 'switch', 'mode', 'inverter', 'converter', 'researcher', 'develop', 'great', 'effort', 'far', 'switch', 'nodeconverters', 'pulse', 'width', 'modulation', 'pwm', 'technique', 'commonlymade', 'voltage', 'regulation', 'case', 'pwm', 'noise', 'peak', 'appear', 'whole', 'number', 'carrier', 'frequency', 'cause', 'bad', 'influence', 'electronic', 'information', 'consumer', 'medical', 'equipment', 'nearthe', 'converter', 'contrary', 'case', 'apply', 'delta', 'sigmamodulation', 'scheme', 'switch', 'power', 'converter', 'noise', 'peaksappear', 'high', 'frequency', 'band', 'paper', 'advancedthree', 'phase', 'delta', 'sigma', 'modulation', 'inverter', 'introduce', 'spacevoltage', 'vector', 'modulation', 'scheme', 'present', 'evaluate', 'though', 'proposed', 'modulation', 'inverter', 'consist', 'simple', 'con', 'figuration', 'propose', 'scheme', 'suppress', 'noise', 'level', 'effectivelywith', 'low', 'switch', 'operation', 'number', 'phase', 'delta', 'sigma', 'inverter', 'phase', 'inverterdelta', 'sigmadelta', 'sigma', 'modulatornoise', 'peak', 'voltage', 'vectorthree', 'phase', 'inverter', 'phase', 'delta', 'sigma', 'inverterdelta', 'sigmadelta', 'sigma', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",4
219,25128,"Voltage quality of grid connected windmills can be resolved using Dynamic VAR Technology.<p>To control the active and reactive power we use a AC-DC-AC model using PWM switching. The proposed wind farm controller using PWM is implimented, simulated using matlab simulink, tested and analyzed. Switching frequencies between 200Hz-2MHz can been used and total harmonic distortion THD, FFT, active power and the reactive power analysis can be made.</p>active power,dynamic var,reactive power,simulink,statcom,total harmonic distortion,voltage quality,wind farm,wind turbine,windmill,active power,total harmonic distortion,statcom,statcom,simulink,electric_motor_control,power_conversion_control,power_electronics_control",120,11,4,0,143,voltage quality grid connect windmill resolve dynamic var technology control active reactive power pwm switch propose wind farm controller pwm implimented test analyzed switching frequency mhz total harmonic distortion thd fft active power reactive power analysis make active powerdynamic varreactive harmonic qualitywind farmwind powertotal harmonic motor controlpower conversion controlpower electronics control,"['voltage', 'quality', 'grid', 'connect', 'windmill', 'resolve', 'dynamic', 'var', 'technology', 'control', 'active', 'reactive', 'power', 'pwm', 'switch', 'propose', 'wind', 'farm', 'controller', 'pwm', 'implimented', 'test', 'analyzed', 'switching', 'frequency', 'mhz', 'total', 'harmonic', 'distortion', 'thd', 'fft', 'active', 'power', 'reactive', 'power', 'analysis', 'make', 'active', 'powerdynamic', 'varreactive', 'harmonic', 'qualitywind', 'farmwind', 'powertotal', 'harmonic', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
220,25139,"This sample this sample show the simple Inverted Pendulum control with lqr<p>Hi guys this is my Simple Pendulum model and control using SimMechanics and Control toolbox, later I will include also the SolidWorks files to show how to use SolidWorks link.Anyone who finds that I should do things in another way please fell free to post any comment and help me :)This sample was modelled with SimMechanics and control was made with lqr command.First I've imported the pendulum from solidworks withmech_import;&gt;&gt; mgrPend = MECH_STATEVECTORMGR;&gt;&gt; mgrPend.StateNamesans =     'InvertedPendulumModel/Pendulo_Invertido/Revolute:R1:Position'    'InvertedPendulumModel/Pendulo_Invertido/Prismatic:P1:Position'    'InvertedPendulumModel/Pendulo_Invertido/Revolute:R1:Velocity'    'InvertedPendulumModel/Pendulo_Invertido/Prismatic:P1:Velocity'&gt;&gt; [A,B,C,D] = linmod('InvertedPendulumModel');&gt;&gt; eig(A)ans =         0         0    2.3132   -2.3132&gt;&gt; open_plant = ss(A,B,C,D);&gt;&gt; impulse(open_plant);&gt;&gt; Q = diag([ 0 100 0 100]);&gt;&gt; K = lqr(A,B,Q,R)K =  284.3487  -10.0000  126.1560  -23.6582&gt;&gt; Ac = [(A-B*K)];&gt;&gt; Bc = [B];&gt;&gt; Cc = [C];&gt;&gt; Dc = [D];&gt;&gt; sys_cl=ss(Ac,Bc,Cc,Dc);&gt;&gt; T=0:0.01:50;&gt;&gt; U=0.2*ones(size(T));&gt;&gt; [Y,T,X]=lsim(sys_cl,U,T);&gt;&gt; plot(T,Y)</p>lqr,mimo,pid,simmechanics,simulink,solidworks,how to write a matlab program for two inputs in lqr give some ex,how to write a matlab program for two inputs in lqrgive some exa,how to convert lqr to pid with matlab program,how to write matlab program for tunning pid with optimal control,simulink,power_conversion_control,power_electronics_control",67,3,2,0,69,sample sample show simple inverted pendulum control lqrhi guy simple pendulum control simmechanics control toolbox later include also solidworks file show solidworks link anyone find thing another way please fell free post comment help sample modelled simmechanics control make lqr command first import pendulum solidworks withmech import mgrpend mech statevectormgr mgrpend statenamesans pendulo invertido revolute position pendulo invertido prismatic position pendulo invertido revolute velocity pendulo invertido prismatic velocity abcd linmod eig open plant abcd impulse open plant diag lqr abqr sys acbccdc one size ytx lsim sys clut plot write program two input lqr give exhow write program two input lqrgive exahow convert lqr pid programhow write program tunning pid optimal conversion controlpower electronics control,"['sample', 'sample', 'show', 'simple', 'inverted', 'pendulum', 'control', 'lqrhi', 'guy', 'simple', 'pendulum', 'control', 'simmechanics', 'control', 'toolbox', 'later', 'include', 'also', 'solidworks', 'file', 'show', 'solidworks', 'link', 'anyone', 'find', 'thing', 'another', 'way', 'please', 'fell', 'free', 'post', 'comment', 'help', 'sample', 'modelled', 'simmechanics', 'control', 'make', 'lqr', 'command', 'first', 'import', 'pendulum', 'solidworks', 'withmech', 'import', 'mgrpend', 'mech', 'statevectormgr', 'mgrpend', 'statenamesans', 'pendulo', 'invertido', 'revolute', 'position', 'pendulo', 'invertido', 'prismatic', 'position', 'pendulo', 'invertido', 'revolute', 'velocity', 'pendulo', 'invertido', 'prismatic', 'velocity', 'abcd', 'linmod', 'eig', 'open', 'plant', 'abcd', 'impulse', 'open', 'plant', 'diag', 'lqr', 'abqr', 'sys', 'acbccdc', 'one', 'size', 'ytx', 'lsim', 'sys', 'clut', 'plot', 'write', 'program', 'two', 'input', 'lqr', 'give', 'exhow', 'write', 'program', 'two', 'input', 'lqrgive', 'exahow', 'convert', 'lqr', 'pid', 'programhow', 'write', 'program', 'tunning', 'pid', 'optimal', 'conversion', 'controlpower', 'electronics', 'control']",5
221,25163,"Converts the 32 bits hex input into FLOAT, WITHOUT using Embedded Matlab Functions<p>Converts the 32 bits hex input into the corresponding FLOAT using the IEEE 32 bits float format.Entering 4 bytes input (HEX), the block gives us the corresponding float.There is not any Embedded Matlab Function, so this example can be used in External Mode.</p>hex float converter conversion bits bytes",214,1,2,0,260,convert bit hex input float without embed bit hex input correspond float iee bit float format enter byte input hex block give correspond float embed function example external mode hex float converter conversion bit byte,"['convert', 'bit', 'hex', 'input', 'float', 'without', 'embed', 'bit', 'hex', 'input', 'correspond', 'float', 'iee', 'bit', 'float', 'format', 'enter', 'byte', 'input', 'hex', 'block', 'give', 'correspond', 'float', 'embed', 'function', 'example', 'external', 'mode', 'hex', 'float', 'converter', 'conversion', 'bit', 'byte']",0
222,25198,"Receive serial data from an instrument or processor and decode it to apply on a plant model<p>This blockreceives serial data from an instrument or processor and decode it to apply on a plant model. You can see how serial receive block works and other blocks like ASCII Decode and Data type conversion . After receiving the data and decoding, it is applied to the plant model (transfer function of the plant). You can see the realtime plant response on oscilloscope block. Out put of various stages is recorded in workspace which can be examined after the simulation. The reader can learn interfacing hardware to the simulink by going through settings of serial configuration block and serial receive block. God knows the best.</p>ascii decode,data type conversion,embedded control,real time plant response,serial,workspace",12,0,1,0,10,receive serial data instrument processor decode apply plant modelthis blockreceives serial data instrument processor decode apply plant see serial receive block work block like ascii decode data type conversion receive data decode applied plant transfer function plant see realtime plant response oscilloscope block put various stage record workspace examine reader learn interfacing hardware setting serial configuration block serial receive block god know best ascii decodedata type controlreal time plant,"['receive', 'serial', 'data', 'instrument', 'processor', 'decode', 'apply', 'plant', 'modelthis', 'blockreceives', 'serial', 'data', 'instrument', 'processor', 'decode', 'apply', 'plant', 'see', 'serial', 'receive', 'block', 'work', 'block', 'like', 'ascii', 'decode', 'data', 'type', 'conversion', 'receive', 'data', 'decode', 'applied', 'plant', 'transfer', 'function', 'plant', 'see', 'realtime', 'plant', 'response', 'oscilloscope', 'block', 'put', 'various', 'stage', 'record', 'workspace', 'examine', 'reader', 'learn', 'interfacing', 'hardware', 'setting', 'serial', 'configuration', 'block', 'serial', 'receive', 'block', 'god', 'know', 'best', 'ascii', 'decodedata', 'type', 'controlreal', 'time', 'plant']",0
223,25238,"Simscapeâ¢ language example of nonlinear mechanical springs<p>This file contains Simscape language source code for nonlinear springs.  One example uses a custom equation and the other uses a lookup table.To view a video (3 minutes) showing a nonlinear spring example, go to: <a href=""http://www.mathworks.com/videos/simscape-language-mechanical-example-68868.htmlTo"">http://www.mathworks.com/videos/simscape-language-mechanical-example-68868.htmlTo</a> view a webinar (35 minutes) about the Simscape language, go to: <a href=""http://www.mathworks.com/videos/physical-modeling-with-the-simscape-language-81733.htmlTo"">http://www.mathworks.com/videos/physical-modeling-with-the-simscape-language-81733.htmlTo</a> learn more about MathWorks Simscape products, go to: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>pick of the week,potw,mechanical,pick of the week,potw,simscape,simscape language,spring",24,2,2,0,21,simscape language example nonlinear mechanical springsthis file contain simscape language source code nonlinear spring one example custom equation lookup table view video minute show nonlinear spring example http mathworks com videos simscape language mechanical example htmlto view webinar minute simscape language http mathworks com videos physical modeling simscape language htmlto learn mathworks simscape product http mathworks com physical modeling pick languagespring,"['simscape', 'language', 'example', 'nonlinear', 'mechanical', 'springsthis', 'file', 'contain', 'simscape', 'language', 'source', 'code', 'nonlinear', 'spring', 'one', 'example', 'custom', 'equation', 'lookup', 'table', 'view', 'video', 'minute', 'show', 'nonlinear', 'spring', 'example', 'http', 'mathworks', 'com', 'videos', 'simscape', 'language', 'mechanical', 'example', 'htmlto', 'view', 'webinar', 'minute', 'simscape', 'language', 'http', 'mathworks', 'com', 'videos', 'physical', 'modeling', 'simscape', 'language', 'htmlto', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'pick', 'languagespring']",7
224,25270,"Valve-cylinder-piston-spring with hydraulic pump <p>This mdl file is an example for Pneumatic cylinder with valve control.Please note that you must write the Time vector and the Flow vector in matlab command. Because it must be saved in workspace.In this example are all parameters = 1So you should write your own parameters in Parameter Block.</p>mechanic,pneumatic,mechanic,pneumatic,pressure,pneumatic,mechanic,pneumatic",31,2,2,0,35,valve cylinder piston spring hydraulic pump mdl file example pneumatic cylinder valve control please note must write time vector flow vector command must save workspace example parameter write parameter parameter block,"['valve', 'cylinder', 'piston', 'spring', 'hydraulic', 'pump', 'mdl', 'file', 'example', 'pneumatic', 'cylinder', 'valve', 'control', 'please', 'note', 'must', 'write', 'time', 'vector', 'flow', 'vector', 'command', 'must', 'save', 'workspace', 'example', 'parameter', 'write', 'parameter', 'parameter', 'block']",7
225,25547,"This is a video of an introduction crash course for simulink(the simulink file is included too)<p>This is a video recording of an introduction crash course for Simulink. It contains the video plus the Simulink file used in the lecture. The example contains basic building blocks of Simulink such as the step function, the scope, the gain, the transfer function and the gain.The lecturer shows how to drop the blocks and change some important configuration parameters for better accuracy. He also shows how to change the parameters of the scope to be able to transfer data from Simulink to Matlab's workspace.</p>closed loop,control,introduction,scope,simulink,step,video",6,0,1,0,6,video introduction crash course file include video record introduction crash course contain video plus file lecture example contain basic building block step function scope gain transfer function gain lecturer show drop block change important configuration parameter well accuracy also show change parameter scope able transfer data workspace close,"['video', 'introduction', 'crash', 'course', 'file', 'include', 'video', 'record', 'introduction', 'crash', 'course', 'contain', 'video', 'plus', 'file', 'lecture', 'example', 'contain', 'basic', 'building', 'block', 'step', 'function', 'scope', 'gain', 'transfer', 'function', 'gain', 'lecturer', 'show', 'drop', 'block', 'change', 'important', 'configuration', 'parameter', 'well', 'accuracy', 'also', 'show', 'change', 'parameter', 'scope', 'able', 'transfer', 'data', 'workspace', 'close']",7
226,25585,"The .m file contains the pendulum parameters and .mdl is the simulink model for the pendulum.<p>First run the .m file to have the parameters in workspace and then run the simulink model to generate the plots...</p>controls,feedback,full state feedback,full state feedback control furuta pendulum,furuta pendulum,simulink",21,0,1,0,25,file contains pendulum parameter mdl pendulum first run file parameter workspace run generate plot state feedbackfull state feedback control furuta pendulumfuruta,"['file', 'contains', 'pendulum', 'parameter', 'mdl', 'pendulum', 'first', 'run', 'file', 'parameter', 'workspace', 'run', 'generate', 'plot', 'state', 'feedbackfull', 'state', 'feedback', 'control', 'furuta', 'pendulumfuruta']",7
227,25628,"This Simulink model of  Magnetic Suspension System <p>This Simulation model simulates Exercise problem 1.18 of Non Linear Systems by Hassan H.Khalil.Details About the parameters can be seen from the Model.</p>control design,simulink,control design,control design",27,0,1,0,33,magnetic suspension exercise problem non linear hassan khalil detail parameter see control designcontrol design,"['magnetic', 'suspension', 'exercise', 'problem', 'non', 'linear', 'hassan', 'khalil', 'detail', 'parameter', 'see', 'control', 'designcontrol', 'design']",0
228,25631,"Simple Radar_system_simulation<p>Simple Radar_system_simulation*run RADAR.mdl file.*use Enter button to continue, always. *receiving delay*noise addition*correlation between the transmission and receivingis indicated..leave your comments....tnx..</p>communications,simulation,simulink,statistics,simulation,i cannot download the file from link watching this file can you",9,0,1,0,9,simple radar radar run radar mdl file enter button continue always receive delay noise addition correlation transmission receivingis indicate leave comment tnx download file link watch file,"['simple', 'radar', 'radar', 'run', 'radar', 'mdl', 'file', 'enter', 'button', 'continue', 'always', 'receive', 'delay', 'noise', 'addition', 'correlation', 'transmission', 'receivingis', 'indicate', 'leave', 'comment', 'tnx', 'download', 'file', 'link', 'watch', 'file']",0
229,25639,"Simscape language example showing how to implement and solve a nonlinear second-order ODE.<p>This file contains the Simscape language source code implementing Van Der Polâs equation (xâ²â² - Î¼(1-x2)xâ² + x = 0). We rewrite the equation as a system of first-order ordinary differential equations (ODE), and then implement them as a vector. This file also contains a Simulink model that can be used to plot the solution to this equation in time. To find other Simscape language examples, search for posts with the keyword ""simscape language"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22simscape+language%22To"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22simscape+language%22To</a> view a webinar (35 minutes) about the Simscape language, go to: <a href=""http://www.mathworks.com/videos/physical-modeling-with-the-simscape-language-81733.htmlTo"">http://www.mathworks.com/videos/physical-modeling-with-the-simscape-language-81733.htmlTo</a> learn more about MathWorks Simscape products, go to: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>ode,simscape,simscape language,vectorized",6,0,1,0,7,simscape language example show implement solve nonlinear second order ode file contain simscape language source code implement van der pol equation rewrite equation first order ordinary differential equation ode implement vector file also contain plot solution equation time find simscape language example search post keyword simscape language http mathworks com matlabcentral fileexchange term simscape language view webinar minute simscape language http mathworks com videos physical modeling simscape language htmlto learn mathworks simscape product http mathworks com physical modeling,"['simscape', 'language', 'example', 'show', 'implement', 'solve', 'nonlinear', 'second', 'order', 'ode', 'file', 'contain', 'simscape', 'language', 'source', 'code', 'implement', 'van', 'der', 'pol', 'equation', 'rewrite', 'equation', 'first', 'order', 'ordinary', 'differential', 'equation', 'ode', 'implement', 'vector', 'file', 'also', 'contain', 'plot', 'solution', 'equation', 'time', 'find', 'simscape', 'language', 'example', 'search', 'post', 'keyword', 'simscape', 'language', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'simscape', 'language', 'view', 'webinar', 'minute', 'simscape', 'language', 'http', 'mathworks', 'com', 'videos', 'physical', 'modeling', 'simscape', 'language', 'htmlto', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling']",7
230,25674,"A conventional vehicle electrical system model with alternator, battery, loads, and idle control.<p>This model shows an example of a conventional vehicle electrical system model, which was shown in the webinar ""Optimizing Vehicle Electrical Design through System-Level Simulation"".  The model is intended to study component sizing, selection, and control.    <a href=""http://www.mathworks.com/videos/optimizing-vehicle-electrical-design-through-system-level-simulation-81919.htmlThe"">http://www.mathworks.com/videos/optimizing-vehicle-electrical-design-through-system-level-simulation-81919.htmlThe</a> electrical system model contains a Simscape lead-acid battery model as described in SAE Paper 2007-01-0778.  There are two choices for battery size.  <a href=""https://www.mathworks.com/content/dam/mathworks/tag-team/Objects/s/40542_SAE-2007-01-0778-Battery-Modeling-Process.pdf"">https://www.mathworks.com/content/dam/mathworks/tag-team/Objects/s/40542_SAE-2007-01-0778-Battery-Modeling-Process.pdf</a> The model also contains data-driven alternator model options using either look-up tables or Model-Based Calibration Toolbox blocks.  The alternator model is described in SAE Paper 2007-01-3471.Control may be added to monitor the system condition, and increase idle speed to compensate for bad conditions in the vehicle charging system.Vehicle loads are modeled as variable resistive elements.----------------------------------------------------------------------------Simulink Design Optimization can be used to estimate battery parameters from experimental battery data. To see how, please watch this video (5 min):<a href=""http://www.mathworks.com/videos/estimating-parameters-of-a-battery-68957.htmlParameter"">http://www.mathworks.com/videos/estimating-parameters-of-a-battery-68957.htmlParameter</a> estimation for these models from measured data sets at different temperature and current data is a complex task. To learn how MathWorks Consulting can teach you this technique, please contact us or see:MathWorks Consulting: Battery Simulation and Controlshttp://<a href=""http://www.mathworks.com/services/consulting/proven-solutions/battery-simulation-and-controls.html----------------------------------------------------------------------------"">www.mathworks.com/services/consulting/proven-solutions/battery-simulation-and-controls.html----------------------------------------------------------------------------</a></p>alternator,automotive,battery,demo,electrical,simulink,alternator,automotive,battery,control design,demo,electrical,lead acid,leadacid,optimization,simulation,simulink,vehicle,battery,battery,alternator,battery,battery,alternator,battery,automotive,electrical,alternator,battery_system_management,power_electronics_control,battery,alternator",212,29,2,20,193,conventional vehicle electrical alternator battery load idle control show example conventional vehicle electrical show webinar optimize vehicle electrical design level intend study component size selection control http mathworks com videos optimize vehicle electrical design level htmlthe electrical contains simscape lead acid battery describe sae paper two choice battery size mathworks com content dam mathworks tag team object sae battery modeling process pdf also contain data driven alternator option either look table base calibration toolbox block alternator described sae paper control may add monitor condition increase idle speed compensate bad condition vehicle charge vehicle load variable resistive element design optimization estimate battery parameter experimental battery data see please watch video min http mathworks com videos estimate parameter battery htmlparameter estimation measure data set different temperature current data complex task learn mathworks consult teach technique please contact see mathworks consult battery controlshttp mathworks com service consult proven solution battery control html managementpower electronics,"['conventional', 'vehicle', 'electrical', 'alternator', 'battery', 'load', 'idle', 'control', 'show', 'example', 'conventional', 'vehicle', 'electrical', 'show', 'webinar', 'optimize', 'vehicle', 'electrical', 'design', 'level', 'intend', 'study', 'component', 'size', 'selection', 'control', 'http', 'mathworks', 'com', 'videos', 'optimize', 'vehicle', 'electrical', 'design', 'level', 'htmlthe', 'electrical', 'contains', 'simscape', 'lead', 'acid', 'battery', 'describe', 'sae', 'paper', 'two', 'choice', 'battery', 'size', 'mathworks', 'com', 'content', 'dam', 'mathworks', 'tag', 'team', 'object', 'sae', 'battery', 'modeling', 'process', 'pdf', 'also', 'contain', 'data', 'driven', 'alternator', 'option', 'either', 'look', 'table', 'base', 'calibration', 'toolbox', 'block', 'alternator', 'described', 'sae', 'paper', 'control', 'may', 'add', 'monitor', 'condition', 'increase', 'idle', 'speed', 'compensate', 'bad', 'condition', 'vehicle', 'charge', 'vehicle', 'load', 'variable', 'resistive', 'element', 'design', 'optimization', 'estimate', 'battery', 'parameter', 'experimental', 'battery', 'data', 'see', 'please', 'watch', 'video', 'min', 'http', 'mathworks', 'com', 'videos', 'estimate', 'parameter', 'battery', 'htmlparameter', 'estimation', 'measure', 'data', 'set', 'different', 'temperature', 'current', 'data', 'complex', 'task', 'learn', 'mathworks', 'consult', 'teach', 'technique', 'please', 'contact', 'see', 'mathworks', 'consult', 'battery', 'controlshttp', 'mathworks', 'com', 'service', 'consult', 'proven', 'solution', 'battery', 'control', 'html', 'managementpower', 'electronics']",7
231,25709,"How to use a switcher in Simulink when inputs are different sizes?<p>When I design a communication system, I wanna make a switch in the channel coder and modulator. The puzzle is that if the inputs size of the switcher are different, there comes the error. I try the eml.varsize function in the embedded Matlab function and failed finally. I consult to everyone.</p>switcher",8,0,1,0,9,switcher inputs different size design communication wan make switch channel coder modulator puzzle input size switcher different come error try eml varsize function embed function fail finally consult everyone switcher,"['switcher', 'inputs', 'different', 'size', 'design', 'communication', 'wan', 'make', 'switch', 'channel', 'coder', 'modulator', 'puzzle', 'input', 'size', 'switcher', 'different', 'come', 'error', 'try', 'eml', 'varsize', 'function', 'embed', 'function', 'fail', 'finally', 'consult', 'everyone', 'switcher']",5
232,25750,"ASK, OOK, FSK, QPSK modulators and demodulators.<p>Digital Modulations and demodulations in SIMULINK: ASK, OOK, FSK, QPSK.</p>ask,demodulation,digital communications,digital modulation,fsk,ook,qpsk,powerline communication",180,23,4,0,185,ask ook fsk qpsk modulators demodulator digital modulation demodulation ask ook fsk qpsk communication,"['ask', 'ook', 'fsk', 'qpsk', 'modulators', 'demodulator', 'digital', 'modulation', 'demodulation', 'ask', 'ook', 'fsk', 'qpsk', 'communication']",8
233,25752,"Wind turbine model including blades, nacelle, pitch and yaw actuation, generator and control system.<p>This file contains a wind turbine model. It includes a three-dimensional mechanical model of the tower, nacelle, and blades modeled in Simscape Multibody, hydraulic pitch actuators, electrical yaw actuators, a simple generator and electrical grid model. Supporting models show how to develop each of the systems separately and integrate them into the overall model. The level of fidelity for each subsystem can be varied as you work through the design.  Please read the README.txt file to get started.  Learn about this model in a four-part webinar series:<a href=""https://www.mathworks.com/videos/series/developing-wind-power-systems-using-matlab-and-simulink-95153.html"">https://www.mathworks.com/videos/series/developing-wind-power-systems-using-matlab-and-simulink-95153.html</a> Request a trial to get the products needed to simulate this example: <a href=""https://www.mathworks.com/programs/trials/trial_request.html?s_cid=cta_trials&amp;prodcode=SS,MS,LD,SH,SN,PS,ML,SL,SF"">https://www.mathworks.com/programs/trials/trial_request.html?s_cid=cta_trials&amp;prodcode=SS,MS,LD,SH,SN,PS,ML,SL,SF</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>physical modeling,power generation,simdriveline,simelectronics,simhydraulics,simmechanics,simmechanics2g,simpowersystems,simscape,wind,wind turbine,wind turbine model,simdriveline,simelectronics,simhydraulics,simmechanics,simpowersystems,simscape,physical modeling,wind,physical modeling,wind,wind turbine,wind turbine model,wind,physical modeling,physical modeling,wind turbine model,physical modeling,physical modeling,power generation,simdriveline,simelectronics,simhydraulics,simmechanics,simpowersystems,simscape,wind,wind turbine,wind turbine model,physical modeling,wind turbine model,simdriveline,wind turbine model,physical modeling,wind,wind turbine model,physical modeling,physical modeling,power generation,simdriveline,physical modeling,physical modeling,physical modeling,physical modeling,wind turbine model,power generation",5628,1090,4,199,4857,wind turbine include blade nacelle pitch yaw actuation generator control file contain wind turbine include three dimensional mechanical tower nacelle blade simscape multibody hydraulic pitch actuator electrical yaw actuator simple generator electrical grid support show develop separately integrate overall level fidelity subsystem vary work design please read readme txt file get start learn four part webinar series mathworks com videos series develop wind power html request trial get product need example mathworks com program trial trial request html cid cta trial amp prodcode find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling physical modelingpower turbinewind turbine turbinewind turbine modelingwind turbine modelphysical modelingpower turbinewind turbine modelphysical modelingwind turbine turbine modelphysical turbine modelphysical modelingpower modelingwind turbine modelpower generation,"['wind', 'turbine', 'include', 'blade', 'nacelle', 'pitch', 'yaw', 'actuation', 'generator', 'control', 'file', 'contain', 'wind', 'turbine', 'include', 'three', 'dimensional', 'mechanical', 'tower', 'nacelle', 'blade', 'simscape', 'multibody', 'hydraulic', 'pitch', 'actuator', 'electrical', 'yaw', 'actuator', 'simple', 'generator', 'electrical', 'grid', 'support', 'show', 'develop', 'separately', 'integrate', 'overall', 'level', 'fidelity', 'subsystem', 'vary', 'work', 'design', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'learn', 'four', 'part', 'webinar', 'series', 'mathworks', 'com', 'videos', 'series', 'develop', 'wind', 'power', 'html', 'request', 'trial', 'get', 'product', 'need', 'example', 'mathworks', 'com', 'program', 'trial', 'trial', 'request', 'html', 'cid', 'cta', 'trial', 'amp', 'prodcode', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'physical', 'modelingpower', 'turbinewind', 'turbine', 'turbinewind', 'turbine', 'modelingwind', 'turbine', 'modelphysical', 'modelingpower', 'turbinewind', 'turbine', 'modelphysical', 'modelingwind', 'turbine', 'turbine', 'modelphysical', 'turbine', 'modelphysical', 'modelingpower', 'modelingwind', 'turbine', 'modelpower', 'generation']",7
234,25770,"the Rotatory Gantry of Quanser is Simulated with the controller in SimMechanics<p>the rotator gantry is simulated in SimMechanics and supplied with state feedback controller</p>control design,simmechanics,simulink",128,7,3,0,131,rotatory gantry quanser controller simmechanicsthe rotator gantry simmechanics supply state feedback,"['rotatory', 'gantry', 'quanser', 'controller', 'simmechanicsthe', 'rotator', 'gantry', 'simmechanics', 'supply', 'state', 'feedback']",8
235,25847,"Servomotor modeling with SimMechanics and SimElectronics<p>In the file we have the servomotor CAD model (SolidWorks), for more information (Videos, text) <a href=""http://www.tutoriaisengenharia.comSmall"">http://www.tutoriaisengenharia.comSmall</a> videohttp://<a href=""http://www.youtube.com/watch?v=rREE-2W19cA"">www.youtube.com/watch?v=rREE-2W19cA</a></p>engineering tutorials,robotics,servo motor,servomotor,simelectronics,simmechanics,simulink,solidworks,engineering tutorials,servo motor",56,6,3,0,53,servomotor simmechanics file servomotor cad solidworks information video text http comsmall videohttp youtube com watch rree caengineering tutorialsservo motor,"['servomotor', 'simmechanics', 'file', 'servomotor', 'cad', 'solidworks', 'information', 'video', 'text', 'http', 'comsmall', 'videohttp', 'youtube', 'com', 'watch', 'rree', 'caengineering', 'tutorialsservo', 'motor']",0
236,25864,"This helps you get started with Simulink 3D Animation formerly known as Virtual Reality Toolbox. <p>The main goal of this demo is to show how you can improve your visualization and understanding of a dynamic system that has simple second order differential equations but complex to visualize due to switching between them. By using 3D animation, you can get a much better understanding of the deformation of the ball.The zip file contains:1. PDf document: This walks through the modeling equations for free fall , the collision and the deformation. 2. The mdl file contains the SimulinkÂ®  model that represents the above equations. We use Embedded MATLABÂ®  to model contact and collision equations.3. The WRL file contains the 3D world built with V-Realm Builder. The videos walking through these steps are available here:1. Building a Simulink Modelhttp://<a href=""http://www.mathworks.com/videos/getting-started-with-simulink-3d-animation-part-1-build-a-simulink-model-68731.html2"">www.mathworks.com/videos/getting-started-with-simulink-3d-animation-part-1-build-a-simulink-model-68731.html2</a>. Building a 3D Worldhttp://<a href=""http://www.mathworks.com/videos/getting-started-with-simulink-3d-animation-part-2-build-a-3d-world-in-vrml-68732.html3"">www.mathworks.com/videos/getting-started-with-simulink-3d-animation-part-2-build-a-3d-world-in-vrml-68732.html3</a>. Connect SImulink Model to 3D Worldhttp://<a href=""http://www.mathworks.com/videos/getting-started-with-simulink-3d-animation-part-3-connect-simulink-model-with-3d-world-68733.htmlCheck"">www.mathworks.com/videos/getting-started-with-simulink-3d-animation-part-3-connect-simulink-model-with-3d-world-68733.htmlCheck</a> out some other videos and product demos here:</p>3d animation,3d modeling,collision,deformation,getting started,modeling,simulink 3d animation,virtual reality toolbox,vrealm editor,vrml",9,0,1,0,12,help get started animation formerly know virtual reality toolbox main goal demo show improve visualization understand dynamic simple second order differential equation complex visualize due switch animation get much well understanding deformation ball zip file contain pdf document walk equation free fall collision deformation mdl file contain represent equation embed contact collision equation wrl file contains world build realm builder video walk step available build modelhttp mathworks com video get start animation part build html build worldhttp mathworks com video get start animation part build world vrml html connect worldhttp mathworks com video get start animation part connect world htmlcheck videos product demo animation reality toolboxvrealm editorvrml,"['help', 'get', 'started', 'animation', 'formerly', 'know', 'virtual', 'reality', 'toolbox', 'main', 'goal', 'demo', 'show', 'improve', 'visualization', 'understand', 'dynamic', 'simple', 'second', 'order', 'differential', 'equation', 'complex', 'visualize', 'due', 'switch', 'animation', 'get', 'much', 'well', 'understanding', 'deformation', 'ball', 'zip', 'file', 'contain', 'pdf', 'document', 'walk', 'equation', 'free', 'fall', 'collision', 'deformation', 'mdl', 'file', 'contain', 'represent', 'equation', 'embed', 'contact', 'collision', 'equation', 'wrl', 'file', 'contains', 'world', 'build', 'realm', 'builder', 'video', 'walk', 'step', 'available', 'build', 'modelhttp', 'mathworks', 'com', 'video', 'get', 'start', 'animation', 'part', 'build', 'html', 'build', 'worldhttp', 'mathworks', 'com', 'video', 'get', 'start', 'animation', 'part', 'build', 'world', 'vrml', 'html', 'connect', 'worldhttp', 'mathworks', 'com', 'video', 'get', 'start', 'animation', 'part', 'connect', 'world', 'htmlcheck', 'videos', 'product', 'demo', 'animation', 'reality', 'toolboxvrealm', 'editorvrml']",7
237,25885,"Amplitude Modulation and Demodulation<p>Amplitude modulation and demodulation is implemented with basic equations. It can be run without having communication toolbox.</p>modulation,modulation,modulation",768,8,3,0,1004,amplitude modulation modulation demodulation implement basic equation run without communication toolbox,"['amplitude', 'modulation', 'modulation', 'demodulation', 'implement', 'basic', 'equation', 'run', 'without', 'communication', 'toolbox']",7
238,25908,"cardiology,simulink,model cardiac cells,heart model,relaxation oscillator,create new blocks<p>It is my new block function of model pacemaker VI1 for cardiac cells with simulink.</p>sicardiology",15,0,1,0,17,cardiac cellsheart modelrelaxation new blocksit new block function pacemaker cardiac cell sicardiology,"['cardiac', 'cellsheart', 'modelrelaxation', 'new', 'blocksit', 'new', 'block', 'function', 'pacemaker', 'cardiac', 'cell', 'sicardiology']",5
239,25936,"Example showing a workaround for ""Input Bounds are out of range"" using BusObjects.<p>When automatically generating S-functions with RTW, if a BusObject is not used by Bus Creators, the S-function does not handle Bus inside C code, but through block interface. To see that, right click and select Look Under Mask in the resulting Block.This may pose a problem if the Bus is somehow big.This is because the automatic S-function/Bus definition interface has so many outputs (1 for each signal in the Bus) that it goes beyond block position limit in Simulink.To workaround this problem, we may use BusObject in the Bus Creators, allowing then RTW to handle Buses in the C code, without needing to create a huge Block interface outside. Thus a Bus is treat as an unique output signal  from S-functions.</p>bus busobject sfunctions rtw position limit,bus busobject sfunctions rtw position limit,bus busobject sfunctions rtw position limit",32,9,3,3,30,example show workaround input bound range busobjects automatically generate function rtw busobject bus creator function handle bus inside code block interface see right click select look mask result block may pose problem bus somehow big automatic function bus definition interface many output signal bus beyond block position limit workaround problem may busobject bus creator allow rtw handle bus code without need create huge block interface outside thus bus treat unique output signal function bus busobject sfunctions rtw position limitbus busobject sfunctions rtw position limitbus busobject sfunctions rtw position limit,"['example', 'show', 'workaround', 'input', 'bound', 'range', 'busobjects', 'automatically', 'generate', 'function', 'rtw', 'busobject', 'bus', 'creator', 'function', 'handle', 'bus', 'inside', 'code', 'block', 'interface', 'see', 'right', 'click', 'select', 'look', 'mask', 'result', 'block', 'may', 'pose', 'problem', 'bus', 'somehow', 'big', 'automatic', 'function', 'bus', 'definition', 'interface', 'many', 'output', 'signal', 'bus', 'beyond', 'block', 'position', 'limit', 'workaround', 'problem', 'may', 'busobject', 'bus', 'creator', 'allow', 'rtw', 'handle', 'bus', 'code', 'without', 'need', 'create', 'huge', 'block', 'interface', 'outside', 'thus', 'bus', 'treat', 'unique', 'output', 'signal', 'function', 'bus', 'busobject', 'sfunctions', 'rtw', 'position', 'limitbus', 'busobject', 'sfunctions', 'rtw', 'position', 'limitbus', 'busobject', 'sfunctions', 'rtw', 'position', 'limit']",0
240,26013,"it is heart VI1 with simulink new block function.<p>It is the heart VI1 model with simulink new block  function library coding the global functionment of the 3 parts of heart,the sinus,the atrial ,the his canal,and the ventricular.There are inputs for electrical stimulation of the 3 parts.The programmable cardiac parameters are rational corfficiants.I begin my animation for this training cardiac center,distribut a free film video,and feedback in my site web,<a href=""http://www.cardiorythmor-vibrator.com"">www.cardiorythmor-vibrator.com</a>.</p>cardiac simulations,cardiology",69,4,2,0,75,heart new block function heart new block function cod global functionment part heartthe sinusthe atrial canaland ventricular input electrical stimulation part programmable cardiac parameter rational corfficiants begin animation training cardiac centerdistribut free film videoand feedback site webww cardiorythmor vibrator com cardiac,"['heart', 'new', 'block', 'function', 'heart', 'new', 'block', 'function', 'cod', 'global', 'functionment', 'part', 'heartthe', 'sinusthe', 'atrial', 'canaland', 'ventricular', 'input', 'electrical', 'stimulation', 'part', 'programmable', 'cardiac', 'parameter', 'rational', 'corfficiants', 'begin', 'animation', 'training', 'cardiac', 'centerdistribut', 'free', 'film', 'videoand', 'feedback', 'site', 'webww', 'cardiorythmor', 'vibrator', 'com', 'cardiac']",5
241,26028,"new block library simulink<p>It is a new block library simulink in a function Square.We have equation to solve given input X find the value output Y=Square(X) orY^2 -X = 0 It is the stationary value of this ODE dY/dt=Y^2 -X ,dY/dt=0=Y^2-X,solved with ODE45 and filtring output with Bessel filter so stability and time setting.</p>block library simulink,block library simulink",6,0,1,0,6,new block new block function square equation solve give input find value output square ory stationary value ode xsolved ode filtring output bessel filter stability time set block,"['new', 'block', 'new', 'block', 'function', 'square', 'equation', 'solve', 'give', 'input', 'find', 'value', 'output', 'square', 'ory', 'stationary', 'value', 'ode', 'xsolved', 'ode', 'filtring', 'output', 'bessel', 'filter', 'stability', 'time', 'set', 'block']",7
242,26029,"new block library simulink detection frequency<p>It is a new block library simulink called Detection of Frequency of periodic signal.</p>new block library simulink detection frequency,signal",13,0,1,0,15,new block detection frequencyit new block call detection frequency periodic signal new block detection frequencysignal,"['new', 'block', 'detection', 'frequencyit', 'new', 'block', 'call', 'detection', 'frequency', 'periodic', 'signal', 'new', 'block', 'detection', 'frequencysignal']",7
243,26037,"new block library simulink heart VI1<p>It is tutorial investigation of annihilation of cardiac rhythm of new block library simulink ,Block Heart VI1,by changing sinus parameters and inducing annihilation of cardiac rhythm,meaning that sudden death can be caused by electrical party.</p>cardiac simulation,simulink library",70,4,2,0,75,new block heart tutorial investigation annihilation cardiac rhythm new block block heart change sinus parameter induce annihilation cardiac rhythmmeaning sudden death cause electrical party cardiac,"['new', 'block', 'heart', 'tutorial', 'investigation', 'annihilation', 'cardiac', 'rhythm', 'new', 'block', 'block', 'heart', 'change', 'sinus', 'parameter', 'induce', 'annihilation', 'cardiac', 'rhythmmeaning', 'sudden', 'death', 'cause', 'electrical', 'party', 'cardiac']",5
244,26046,"block library simulink heartVI1<p>After publishing my new block library simulink HEARTVI1,i show case of a no normal heart beat FS</p>biotech,control design,mathematics,signal processing,simulation,simulink",71,4,2,0,75,block heartvi publish new block heartvi show case normal heart beat,"['block', 'heartvi', 'publish', 'new', 'block', 'heartvi', 'show', 'case', 'normal', 'heart', 'beat']",0
245,26047,"detector frequency new block simulink<p>After publishing my new block library simulink Detector of Frequency Signal,I calibrate for having linearity,so in input F=1HZ out is F=1HZ.</p>biotech,control design,mathematics,signal processing,simulation,simulink",15,0,1,0,16,detector frequency new block publish new block detector frequency signali calibrate linearityso input biotechcontrol,"['detector', 'frequency', 'new', 'block', 'publish', 'new', 'block', 'detector', 'frequency', 'signali', 'calibrate', 'linearityso', 'input', 'biotechcontrol']",0
246,26048,"new block simulink library<p>After publishing my new block simulink library Function Square,Y output ,and Xput i shoz lineqrity chqnging input vqlue.</p>biotech,control design,mathematics,signal processing,simulation,simulink",7,0,1,0,6,new block libraryafter publish new block function squarey output xput shoz lineqrity chqnging input vqlue biotechcontrol,"['new', 'block', 'libraryafter', 'publish', 'new', 'block', 'function', 'squarey', 'output', 'xput', 'shoz', 'lineqrity', 'chqnging', 'input', 'vqlue', 'biotechcontrol']",5
247,26052,"training new block library simulink in cardiology<p>It is a training with sinusoidal input signal to sinusoidal relaxation oscillator VI1 with simulink.Students in computer science can take input Asinwt and get variation A amplitude and frequency w=3.14*F and set curve input/output. </p>control design,mathematics,signal processing,simulation,simulink",14,0,1,0,15,train new block cardiologyit training sinusoidal input signal sinusoidal relaxation oscillator student computer science take input asinwt get variation amplitude frequency set curve input output control,"['train', 'new', 'block', 'cardiologyit', 'training', 'sinusoidal', 'input', 'signal', 'sinusoidal', 'relaxation', 'oscillator', 'student', 'computer', 'science', 'take', 'input', 'asinwt', 'get', 'variation', 'amplitude', 'frequency', 'set', 'curve', 'input', 'output', 'control']",4
248,26055,"training for students new block library in cardiology with simulink.<p>It is a Training for students with a ramp periodic input signal to sinusoidal relaxation oscillator VI1 with a new block library simulink.</p>control design,mathematics,optimization,signal processing,simulation,simulink",14,0,1,0,15,train student new block cardiology training student ramp periodic input signal sinusoidal relaxation oscillator new block control,"['train', 'student', 'new', 'block', 'cardiology', 'training', 'student', 'ramp', 'periodic', 'input', 'signal', 'sinusoidal', 'relaxation', 'oscillator', 'new', 'block', 'control']",0
249,26076,"block simulink signal library called phase filter<p>It is a new block simulink signal library called the Phase Filter.The transfert function is F(p)=(1+T1p)/(1+T2p).Students can change parameters T1 and T2 time constants of filter.The phase filter in automatic control is for Corrector block and also in PLL oscillator application.</p>biotech,control design,mathematics,signal processing,simulation,simulink",13,1,2,0,12,block signal call phase filterit new block signal call phase filter transfert function student change parameter time constant filter phase filter automatic control corrector block also pll oscillator application biotechcontrol,"['block', 'signal', 'call', 'phase', 'filterit', 'new', 'block', 'signal', 'call', 'phase', 'filter', 'transfert', 'function', 'student', 'change', 'parameter', 'time', 'constant', 'filter', 'phase', 'filter', 'automatic', 'control', 'corrector', 'block', 'also', 'pll', 'oscillator', 'application', 'biotechcontrol']",7
250,26098,"Extension of the bouncing ball demo for the getting started series demos.<p>In this demo, we show how you can model the damping and energy loss of a bouncing ball by modifying the contact equations. We compute the cumulative energy loss to the floor as a function of time and use resetting of the integrator to compute the bursts of energy transferred to the floor after each bounce. We then use a simplified heat equation with special conditions to model the temperature rise of the floor. We also show how you can create your own color dynamics of the visualization by changing from a cold color(blue) to a warm color(red).Note that Simulink 3D Animation was formerly called as Virtual Reality Toolbox.The Getting Started videos of which this demo is an extension are available here:</p>3d,animation,ball,bouncing,equation,getting,heat,integrator,modeling,reality,reset,simulink,started,temperature,virtual,vrealm,vrml,3d",13,0,1,0,19,extension bounce ball demo get started series demo demo show damp energy loss bounce ball modifying contact equation compute cumulative energy loss floor function time reset integrator compute burst energy transfer floor bounce simplify heat equation special condition temperature rise floor also show create color dynamic visualization change cold color blue warm color red note animation formerly call virtual reality toolbox get start video demo extension available,"['extension', 'bounce', 'ball', 'demo', 'get', 'started', 'series', 'demo', 'demo', 'show', 'damp', 'energy', 'loss', 'bounce', 'ball', 'modifying', 'contact', 'equation', 'compute', 'cumulative', 'energy', 'loss', 'floor', 'function', 'time', 'reset', 'integrator', 'compute', 'burst', 'energy', 'transfer', 'floor', 'bounce', 'simplify', 'heat', 'equation', 'special', 'condition', 'temperature', 'rise', 'floor', 'also', 'show', 'create', 'color', 'dynamic', 'visualization', 'change', 'cold', 'color', 'blue', 'warm', 'color', 'red', 'note', 'animation', 'formerly', 'call', 'virtual', 'reality', 'toolbox', 'get', 'start', 'video', 'demo', 'extension', 'available']",0
251,26134,"This demo file shows new capabilities for PID Controller design and tuning in MATLAB and Simullink.<p>This is the demo file for September 2009 MathWorks webinar and November 2009 MATLAB Digest article ""PID Control Design Made Easy"":<a href=""http://www.mathworks.com/company/newsletters/digest/2009/nov/pid-control-design.htmlThe"">http://www.mathworks.com/company/newsletters/digest/2009/nov/pid-control-design.htmlThe</a> demo shows the PID Controller block in Simulink and  PID Tuner in Simulink Control Design:<a href=""http://www.mathworks.com/products/simcontrol/PID"">http://www.mathworks.com/products/simcontrol/PID</a> Controller is used to control a four bar linkage mechanism modeled in SimMechanics.To see how to tune the PID Controller, please see the webinar, read the MATLAB Digest article, and visit the page with resources on PID Control Design and Tuning: <a href=""http://www.mathworks.com/discovery/pid-control.html"">http://www.mathworks.com/discovery/pid-control.html</a></p>control design,pid control,pid controller,simulink,simulink control design,control design,simulink control design",202,26,5,0,208,demo file show new capability pid controller design tune demo file september mathworks webinar november digest article pid control design make easy http mathworks com company newsletter digest nov pid control design htmlthe demo show pid controller block pid tuner control design http mathworks com product simcontrol pid controller control four bar linkage mechanism simmechanics see tune pid controller please see webinar read digest article visit page resource pid control design tune http mathworks com discovery pid control htmlcontrol designpid controlpid control designcontrol control design,"['demo', 'file', 'show', 'new', 'capability', 'pid', 'controller', 'design', 'tune', 'demo', 'file', 'september', 'mathworks', 'webinar', 'november', 'digest', 'article', 'pid', 'control', 'design', 'make', 'easy', 'http', 'mathworks', 'com', 'company', 'newsletter', 'digest', 'nov', 'pid', 'control', 'design', 'htmlthe', 'demo', 'show', 'pid', 'controller', 'block', 'pid', 'tuner', 'control', 'design', 'http', 'mathworks', 'com', 'product', 'simcontrol', 'pid', 'controller', 'control', 'four', 'bar', 'linkage', 'mechanism', 'simmechanics', 'see', 'tune', 'pid', 'controller', 'please', 'see', 'webinar', 'read', 'digest', 'article', 'visit', 'page', 'resource', 'pid', 'control', 'design', 'tune', 'http', 'mathworks', 'com', 'discovery', 'pid', 'control', 'htmlcontrol', 'designpid', 'controlpid', 'control', 'designcontrol', 'control', 'design']",7
252,26141,"PLLVI1 new block simulink<p>It is a new block simulink Phase Loop Control called the PLLVI1.The PLL control is utilized to synthetize frequency or phase control.You set a frequency input signal and VCOVI1,the volt control oscillator block simulink track the frequency input signal.The program has a problem of dimension of an output of an integrator.You can solve that easy.</p>biotech,control design,mathematics,signal processing,simulation,simulink",48,3,2,0,53,pllvi new block new block phase loop control call pllvi pll control utilized synthetize frequency phase control set frequency input signal vcovi volt control oscillator block track frequency input signal program problem dimension output integrator solve easy biotechcontrol,"['pllvi', 'new', 'block', 'new', 'block', 'phase', 'loop', 'control', 'call', 'pllvi', 'pll', 'control', 'utilized', 'synthetize', 'frequency', 'phase', 'control', 'set', 'frequency', 'input', 'signal', 'vcovi', 'volt', 'control', 'oscillator', 'block', 'track', 'frequency', 'input', 'signal', 'program', 'problem', 'dimension', 'output', 'integrator', 'solve', 'easy', 'biotechcontrol']",4
253,26142,"new block simulink chao control<p>It is a new block simulink of a CHAO emetter and receptor called the CHAOVI1ETRT.The program will be well outliner in other versions by controlling the linear part and the non linear part of my chao systemVI1.</p>control design,demo,signal processing,simulation,simulink",35,2,2,0,38,new block chao controlit new block chao emetter receptor call chaovi etrt program well outliner version control linear part non linear part chao systemvi control,"['new', 'block', 'chao', 'controlit', 'new', 'block', 'chao', 'emetter', 'receptor', 'call', 'chaovi', 'etrt', 'program', 'well', 'outliner', 'version', 'control', 'linear', 'part', 'non', 'linear', 'part', 'chao', 'systemvi', 'control']",0
254,26149,"new block simulink of heart frequency and blood pressure<p>It is the HEARTVI1FP1 block simulink of global functionnement of the heart with frequency and blood pressure.Training this block you will see that can happen a problem.One subsystem is the detection of frequency signal,and this block run well if utilized independantly,and this block runs well with the block square function.If i utilize secundly this block appear error dimension after integrator,and we konow that simulink accepts 2 port outputs.For animation i decide to publish now One File per 2 weeks for HEARTVI1(electrical part of heart) and for the global heart with frequency and blood pressure. </p>biotech,cardiac applications,control design",125,8,3,0,133,new block heart frequency blood pressureit heartvi block global functionnement heart frequency blood pressure training block see happen problem one subsystem detection frequency signaland block run well utilized block run well block square function utilize secundly block appear error dimension integratorand konow accept port output animation decide publish one file per week heartvi electrical part heart global heart frequency blood pressure biotechcardiac design,"['new', 'block', 'heart', 'frequency', 'blood', 'pressureit', 'heartvi', 'block', 'global', 'functionnement', 'heart', 'frequency', 'blood', 'pressure', 'training', 'block', 'see', 'happen', 'problem', 'one', 'subsystem', 'detection', 'frequency', 'signaland', 'block', 'run', 'well', 'utilized', 'block', 'run', 'well', 'block', 'square', 'function', 'utilize', 'secundly', 'block', 'appear', 'error', 'dimension', 'integratorand', 'konow', 'accept', 'port', 'output', 'animation', 'decide', 'publish', 'one', 'file', 'per', 'week', 'heartvi', 'electrical', 'part', 'heart', 'global', 'heart', 'frequency', 'blood', 'pressure', 'biotechcardiac', 'design']",0
255,26204,"block to simulate the effect of pressure and temperature on the hydraulic fluids.<p>Part of a hydraulic tool box to generalize the hydraulic system simulation. The outcome of the block are a global hydraulic fluid variables based on the current system pressure and temperature.</p>aerospace,automotive,control design,embedded code,simulation",43,4,3,0,43,block effect pressure temperature hydraulic fluid part hydraulic tool box generalize hydraulic outcome block global hydraulic fluid variable base current pressure temperature designembedded,"['block', 'effect', 'pressure', 'temperature', 'hydraulic', 'fluid', 'part', 'hydraulic', 'tool', 'box', 'generalize', 'hydraulic', 'outcome', 'block', 'global', 'hydraulic', 'fluid', 'variable', 'base', 'current', 'pressure', 'temperature', 'designembedded']",0
256,26206,"Part of a tool box to generalize the simulation of a hydraulic system<p>The model includes simulation of hydraulic line, general fitting and an orifice.</p>aerospace,automotive,control design,embedded code,simulation,simulink",135,9,3,0,141,part tool box generalize hydraulic systemthe include hydraulic line general fitting orifice designembedded,"['part', 'tool', 'box', 'generalize', 'hydraulic', 'systemthe', 'include', 'hydraulic', 'line', 'general', 'fitting', 'orifice', 'designembedded']",5
257,26243,"Simulation for chua's system<p>Simulation for chua's system using Simulink</p>chaos,chuas system,nonlinear",18,0,1,0,23,chua chua systemnonlinear,"['chua', 'chua', 'systemnonlinear']",2
258,26244,"Cascade of 5 chua's systems and application in secure communications<p>Cascade of 5 chua's systems and application in secure communications</p>chaos,chaotic secure communications,chuas system,nonlinear",549,41,3,0,671,cascade chua application secure chua application secure secure systemnonlinear,"['cascade', 'chua', 'application', 'secure', 'chua', 'application', 'secure', 'secure', 'systemnonlinear']",8
259,26246,"Simulink model for observer based synchronization in chua's systems<p>Simulink model for observer based synchronization in chua's systems</p>chaos,chaotic synchronization,chuas systems,observer based synchronization",76,5,3,0,88,observer base synchronization chua observer base synchronization chua systemsobserver base synchronization,"['observer', 'base', 'synchronization', 'chua', 'observer', 'base', 'synchronization', 'chua', 'systemsobserver', 'base', 'synchronization']",5
260,26275,"This file shows PID Controller tuning in MATLAB and Simullink for DC Motor control.<p>This is the demo file for video demo:<a href=""http://www.mathworks.com/videos/pid-controller-design-for-a-dc-motor-68881.htmland"">http://www.mathworks.com/videos/pid-controller-design-for-a-dc-motor-68881.htmland</a> ""Seth on Simulink"" blog post ""PID Control Made Easy"":<a href=""http://blogs.mathworks.com/seth/2009/12/24/pid-control-made-easy/The"">http://blogs.mathworks.com/seth/2009/12/24/pid-control-made-easy/The</a> demo shows the PID Controller block in Simulink and PID Tuner in Simulink Control Design: <a href=""http://www.mathworks.com/products/simcontrol/PID"">http://www.mathworks.com/products/simcontrol/PID</a> Controller is used to control a simple DC Motor modeled in Simulink.To see how to tune the PID Controller, please see the video demo and/or read the blog post. You can also visit the web page with resources for designing and tuning PID controllers:<a href=""http://www.mathworks.com/discovery/pid-control.html"">http://www.mathworks.com/discovery/pid-control.html</a></p>control design,pid control,pid controller,pid tuning,simulink,simulink control design,electric_motor_control,power_conversion_control,power_electronics_control,pid tuning",17,2,2,0,15,file show pid controller tune motor control demo file video demo http mathworks com videos pid controller design motor htmland seth blog post pid control make easy http blog mathworks com seth pid control make easy demo show pid controller block pid tuner control design http mathworks com product simcontrol pid controller control simple motor see tune pid controller please see video demo read blog post also visit web page resource design tune pid controller http mathworks com discovery pid control htmlcontrol designpid controlpid controllerpid control designelectric motor controlpower conversion controlpower electronics controlpid tune,"['file', 'show', 'pid', 'controller', 'tune', 'motor', 'control', 'demo', 'file', 'video', 'demo', 'http', 'mathworks', 'com', 'videos', 'pid', 'controller', 'design', 'motor', 'htmland', 'seth', 'blog', 'post', 'pid', 'control', 'make', 'easy', 'http', 'blog', 'mathworks', 'com', 'seth', 'pid', 'control', 'make', 'easy', 'demo', 'show', 'pid', 'controller', 'block', 'pid', 'tuner', 'control', 'design', 'http', 'mathworks', 'com', 'product', 'simcontrol', 'pid', 'controller', 'control', 'simple', 'motor', 'see', 'tune', 'pid', 'controller', 'please', 'see', 'video', 'demo', 'read', 'blog', 'post', 'also', 'visit', 'web', 'page', 'resource', 'design', 'tune', 'pid', 'controller', 'http', 'mathworks', 'com', 'discovery', 'pid', 'control', 'htmlcontrol', 'designpid', 'controlpid', 'controllerpid', 'control', 'designelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpid', 'tune']",7
261,26298,"HeartVI19 simulink new version<p>It is sinusal stimulation of HEARTVI19 simulink with input signal Asinwt,A=1,w=2.You can observe polymorphic arrythmias like Wakenbach Syndrom.</p>biotech,control design,mathematics,simulation,simulink",72,4,2,0,75,heartvi new versionit sinusal stimulation heartvi input signal asinwta observe polymorphic arrythmias like wakenbach syndrom biotechcontrol,"['heartvi', 'new', 'versionit', 'sinusal', 'stimulation', 'heartvi', 'input', 'signal', 'asinwta', 'observe', 'polymorphic', 'arrythmias', 'like', 'wakenbach', 'syndrom', 'biotechcontrol']",8
262,26351,"Model of a hybrid-electric vehicle that can be configured for real-time simulation.<p>This submission has been merged with the File Exchange Submission ""Hybrid-Electric Vehicle Model in Simulink""<a href=""http://www.mathworks.com/matlabcentral/fileexchange/28441-hybrid-electric-vehicle-model-in-simulinkPlease"">http://www.mathworks.com/matlabcentral/fileexchange/28441-hybrid-electric-vehicle-model-in-simulinkPlease</a> refer to that submission for the model and details.</p>good time can you send me the model code in c language,hev,hil,physical modeling,real time,vehicle,hev,hev,hev,good time can you send me the model code in c language,good time can you send me the model code in c language,hev,good time can you send me the model code in c language",306,32,4,0,274,hybrid electric vehicle configure real time submission merge file exchange submission hybrid electric vehicle http mathworks com matlabcentral fileexchange hybrid electric vehicle refer submission detail good time send code modelingreal time send code languagegood time send code languagehevgood time send code language,"['hybrid', 'electric', 'vehicle', 'configure', 'real', 'time', 'submission', 'merge', 'file', 'exchange', 'submission', 'hybrid', 'electric', 'vehicle', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'hybrid', 'electric', 'vehicle', 'refer', 'submission', 'detail', 'good', 'time', 'send', 'code', 'modelingreal', 'time', 'send', 'code', 'languagegood', 'time', 'send', 'code', 'languagehevgood', 'time', 'send', 'code', 'language']",7
263,26405,"Puedes usarlo para ver que funcion tiene cada bloque para obtener un codigo manchester<p>Diagrama de bloques en simulink que sirve para obtener un codigo manchester</p>simulink,simulink,demo,simulink,simulink",12,0,1,0,12,puedes usarlo para ver que funcion tiene cada bloque para obtener codigo bloques que sirve para obtener codigo,"['puedes', 'usarlo', 'para', 'ver', 'que', 'funcion', 'tiene', 'cada', 'bloque', 'para', 'obtener', 'codigo', 'bloques', 'que', 'sirve', 'para', 'obtener', 'codigo']",8
264,26438,"heart VI1 simulator simulink<p>It is investigation NÂ°12 of my Heart VI1 simulator simulink with Monitoring Scope(Vs,Va,Vhis,Vv,PQRST).COMMENTS1)CNS electrical stimulation only of sinus input signal Assinwt--As=-206-Fs=0.3rd/s2)Scope set +2,-2 for time 2.4 to 3s3)observations of sinusa arhythmias and normal rhythm at atrial and ventricularSo i decide to publish 3 files by week,and so my virtual cardiac training center on 4 years publish free 500 files for heart simulator.I think to us patent of Eami Romi of heart simulator.I set myself in a frame of international business like IBM,and the work of Bob Marley and wailers who begin at trenchtown his original business machine.Positively is a natural adaptation to Small Business act.l</p>biotech,mathematics,signal processing,simulation",69,4,2,0,75,heart investigation heart monitor scope vsvavhisvvpqrst comment cns electrical stimulation sinus input signal assinwt scope set time observation sinusa arhythmias normal rhythm atrial ventricularso decide publish file weekand virtual cardiac training center year publish free file heart think patent eami romi heart set frame international business like ibmand work bob marley wailer begin trenchtown original business machine positively natural adaptation small business act,"['heart', 'investigation', 'heart', 'monitor', 'scope', 'vsvavhisvvpqrst', 'comment', 'cns', 'electrical', 'stimulation', 'sinus', 'input', 'signal', 'assinwt', 'scope', 'set', 'time', 'observation', 'sinusa', 'arhythmias', 'normal', 'rhythm', 'atrial', 'ventricularso', 'decide', 'publish', 'file', 'weekand', 'virtual', 'cardiac', 'training', 'center', 'year', 'publish', 'free', 'file', 'heart', 'think', 'patent', 'eami', 'romi', 'heart', 'set', 'frame', 'international', 'business', 'like', 'ibmand', 'work', 'bob', 'marley', 'wailer', 'begin', 'trenchtown', 'original', 'business', 'machine', 'positively', 'natural', 'adaptation', 'small', 'business', 'act']",8
265,26440,"Involves translation of Matlab/Simulink models to Spec C specification models.<p>This project deals with the translation of a Simulink models to SpecC specificationmodels. Matlab is one of the leading softwares in model based and algorithmic designing. SpecC (close to ANSI C) is a high level language which can be implemented on hardware usingSystem on Chip Environment(SCE). Having the features of both procedural languages like C,C++ and Hardware Description languages like VHDL and Verilog and even more, SpecC can beconsidered as superior System Level Design Language which can be realized on hardware. Theease of translating Matlab/Simulink models to SpecC can show how algorithmic and modelbased designs can be realized on hardware.SimulinkÂ® Cruise control model and Matlab water-marker models were chosen astargets for being implemented in SpecC. In automobiles cruise control enables driver to avoidacceleration and slowing down of the car irregularly and maintain a steady speed. The systemtakes the speed of the vehicle and reference speed as inputs and computes the output velocity.The SpecC implementation of this Simulink model involves translation of Simulink blocks toSpecC behaviors, feedback to while loops and communication between blocks to shared variablecommunication in SpecC. The Matlab model will show how different functions can be translatedto SpecC which involves reading and writing text and audio files. The execution of thesebehaviors might vary from sequential to parallel and finite state machines. Thus this project dealswith the execution semantics in both Matlab/Simulink and in SpecC and investigates thetranslation of Matlab/Simulink models to SpecC.</p>self_rating,automotive,control design,modelbased design,simulation,spec c,specification models,translator",31,0,1,0,34,involves translation spec specification project deal translation specc one lead software base algorithmic design specc close ansi high level language implement hardware usingsystem chip environment sce feature procedural language like hardware description languages like vhdl verilog even specc beconsidered superior level design language realize hardware theease translate specc show algorithmic modelbased design realize hardware cruise control water marker choose astargets implement specc automobile cruise control enable driver slow car irregularly maintain steady speed systemtakes speed vehicle reference speed input compute output velocity specc implementation involve translation block tospecc behavior feedback loops communication block share specc show different function translatedto specc involves read write text audio file execution thesebehaviors might vary sequential parallel finite state machine thus project dealswith execution semantics specc investigate thetranslation specc self cspecification,"['involves', 'translation', 'spec', 'specification', 'project', 'deal', 'translation', 'specc', 'one', 'lead', 'software', 'base', 'algorithmic', 'design', 'specc', 'close', 'ansi', 'high', 'level', 'language', 'implement', 'hardware', 'usingsystem', 'chip', 'environment', 'sce', 'feature', 'procedural', 'language', 'like', 'hardware', 'description', 'languages', 'like', 'vhdl', 'verilog', 'even', 'specc', 'beconsidered', 'superior', 'level', 'design', 'language', 'realize', 'hardware', 'theease', 'translate', 'specc', 'show', 'algorithmic', 'modelbased', 'design', 'realize', 'hardware', 'cruise', 'control', 'water', 'marker', 'choose', 'astargets', 'implement', 'specc', 'automobile', 'cruise', 'control', 'enable', 'driver', 'slow', 'car', 'irregularly', 'maintain', 'steady', 'speed', 'systemtakes', 'speed', 'vehicle', 'reference', 'speed', 'input', 'compute', 'output', 'velocity', 'specc', 'implementation', 'involve', 'translation', 'block', 'tospecc', 'behavior', 'feedback', 'loops', 'communication', 'block', 'share', 'specc', 'show', 'different', 'function', 'translatedto', 'specc', 'involves', 'read', 'write', 'text', 'audio', 'file', 'execution', 'thesebehaviors', 'might', 'vary', 'sequential', 'parallel', 'finite', 'state', 'machine', 'thus', 'project', 'dealswith', 'execution', 'semantics', 'specc', 'investigate', 'thetranslation', 'specc', 'self', 'cspecification']",5
266,26459,"Video Communication system with MPEG-1 & stages of source & Channel Encoding, Modulation & Channel <p>This system is based on the DVB demo &amp; Video Compression Demo to implement a simulation of Digital Video Communication system over Wireless ChannelMPEG-1 ENCODER, RS ENCODER, CONVOLUTIONAL INTERLEAVER, CONVOLUTONAL ENCODER, THEN, QAM MODULATION, OFDM, AWGN CHANNEL, THEN THE REVERSE STEPS GOES AFTER FOR DECODINGThe MPEG-1 Encoder output was reshaped from a matrix to a column vector, to be proper use with the RS encoderThe blocks outputs the right dimensions, However, I HAVE A PROBLEM WITH THE INPUT COMING FROM THE MPEG-1 ENCODER, TO THE SOURCE ENCODERthe run of this model, gives an error, that the input to the RS Encoder is not correct, I WOULD APPRECIATE IF THERE IS ANYONE WHO CAN HELP ME WITH IT, CAUSE MY THESIS DEPENDS ON ITIF THERE IS ALSO ANYMORE CORRECTIONS, I WOULD APPRECIATE YOUR HELP ...</p>convolutional ofdm channel decoder,video encoder communication mpeg1 rs encoder,convolutional ofdm channel decoder,video encoder communication mpeg1 rs encoder,convolutional ofdm channel decoder,video encoder communication mpeg1 rs encoder",221,27,7,0,200,video communication mpeg stage source channel encode modulation channel base dvb demo amp video compression demo implement digital video communication wireless channelmpeg encoder encoder convolutional interleaver convolutonal encoder qam modulation ofdm awgn channel reverse step decodingthe mpeg encoder output reshape matrix column vector proper encoderthe block outputs right dimension however problem input come mpeg encoder source encoderthe run give error input encoder correct would appreciate anyone help cause thesis depend itif also anymore correction would appreciate help convolutional ofdm channel decodervideo encoder communication mpeg ofdm channel decodervideo encoder communication mpeg ofdm channel decodervideo encoder communication mpeg encoder,"['video', 'communication', 'mpeg', 'stage', 'source', 'channel', 'encode', 'modulation', 'channel', 'base', 'dvb', 'demo', 'amp', 'video', 'compression', 'demo', 'implement', 'digital', 'video', 'communication', 'wireless', 'channelmpeg', 'encoder', 'encoder', 'convolutional', 'interleaver', 'convolutonal', 'encoder', 'qam', 'modulation', 'ofdm', 'awgn', 'channel', 'reverse', 'step', 'decodingthe', 'mpeg', 'encoder', 'output', 'reshape', 'matrix', 'column', 'vector', 'proper', 'encoderthe', 'block', 'outputs', 'right', 'dimension', 'however', 'problem', 'input', 'come', 'mpeg', 'encoder', 'source', 'encoderthe', 'run', 'give', 'error', 'input', 'encoder', 'correct', 'would', 'appreciate', 'anyone', 'help', 'cause', 'thesis', 'depend', 'itif', 'also', 'anymore', 'correction', 'would', 'appreciate', 'help', 'convolutional', 'ofdm', 'channel', 'decodervideo', 'encoder', 'communication', 'mpeg', 'ofdm', 'channel', 'decodervideo', 'encoder', 'communication', 'mpeg', 'ofdm', 'channel', 'decodervideo', 'encoder', 'communication', 'mpeg', 'encoder']",5
267,26460,"heart vi1 simulator simulink<p>It is investigation 17 of my Heart VI1 simulator simulink with Monitoring scope.</p>biotech,mathematics,signal processing,simulation,simulink",69,4,2,0,75,heart investigation heart monitoring scope,"['heart', 'investigation', 'heart', 'monitoring', 'scope']",8
268,26463,"heart VI1 simulator simulink<p>It is Heart Vi1 Simulator Simulink in Investigation 20 with Monitoring.</p>biotech,mathematics,signal processing,simulation,simulink",70,4,2,0,75,heart heart investigation monitoring,"['heart', 'heart', 'investigation', 'monitoring']",8
269,26467,"This is A Video Communication System with Encoding, Modulation & Channel models<p>This system implements the video communication system using Simulink blocks from Communication Blockset &amp; blocks from Video Processing blockset, based on MPEG-1 demo &amp; DVB demo, it goes from Source Encoding, to Channel Encoding (RS Encoder, Convolutional Encoder) Modulation (QAM, OFDM), channel &amp; then the reverse of the entire process, at the receiver sideHOWEVER, THERE IS A PROBLEM, WHERE THE OUTPUT OF THE VIDEO SOURCE ENCODER GOES TO THE CHANNEL ENCODER, WHEN RUNNING THE SYSTEM, AN ERROR OCCURS, STATING THAT THE INPUT OF THE RS-ENCODER IS NOT CORRECT, THIS INPUT PROBLEM I THINK WITH THE COMING VIDEO OUTPUTI WOULD APRRECIATE YOUR HELP ABOUT THIS PROBLEM &amp; WHAT SHOULD BE THE INPUT SIZE OF THE RS-ENCODER?CAUSE THIS IS MY MASTERS THESIS DEISGN &amp; I MUST COMPLETE IT CORRECTLYANY HELP YOU GIVE, MAY BENEFIT FROM, SO I APPRECIATE YOUR CONCERN ..</p>communication video encoder modulation mpeg1 rs encoder convolut,communication video encoder modulation mpeg1 rs encoder convolut",211,26,7,0,190,video communication encode modulation channel modelsthis implement video communication block communication blockset amp block video process blockset base mpeg demo amp dvb demo source encode channel encode encoder convolutional encoder modulation qam ofdm channel amp reverse entire process receiver sidehowever problem output video source encoder channel encoder run error occur state input encoder correct input problem think come video outputi would aprreciate help problem amp input size encoder cause master thesis deisgn amp must complete correctlyany help give may benefit appreciate concern communication video encoder modulation mpeg encoder video encoder modulation mpeg encoder convolut,"['video', 'communication', 'encode', 'modulation', 'channel', 'modelsthis', 'implement', 'video', 'communication', 'block', 'communication', 'blockset', 'amp', 'block', 'video', 'process', 'blockset', 'base', 'mpeg', 'demo', 'amp', 'dvb', 'demo', 'source', 'encode', 'channel', 'encode', 'encoder', 'convolutional', 'encoder', 'modulation', 'qam', 'ofdm', 'channel', 'amp', 'reverse', 'entire', 'process', 'receiver', 'sidehowever', 'problem', 'output', 'video', 'source', 'encoder', 'channel', 'encoder', 'run', 'error', 'occur', 'state', 'input', 'encoder', 'correct', 'input', 'problem', 'think', 'come', 'video', 'outputi', 'would', 'aprreciate', 'help', 'problem', 'amp', 'input', 'size', 'encoder', 'cause', 'master', 'thesis', 'deisgn', 'amp', 'must', 'complete', 'correctlyany', 'help', 'give', 'may', 'benefit', 'appreciate', 'concern', 'communication', 'video', 'encoder', 'modulation', 'mpeg', 'encoder', 'video', 'encoder', 'modulation', 'mpeg', 'encoder', 'convolut']",0
270,26511,"heart VI1 simulator simulink<p>It is the version in global Heart VI1 simulator simulink where the electrical part of heart is followed by a frequency detector to pilot the feedback of CNS,central nervous system who loop and control sinus.Sometime you can have pile-cache problems compiling before computing. </p>biotech,mathematics,simulation,simulink",119,8,3,0,129,heart version global heart electrical part heart follow frequency detector pilot feedback cnscentral nervous loop control sinus sometime pile cache problem compile compute,"['heart', 'version', 'global', 'heart', 'electrical', 'part', 'heart', 'follow', 'frequency', 'detector', 'pilot', 'feedback', 'cnscentral', 'nervous', 'loop', 'control', 'sinus', 'sometime', 'pile', 'cache', 'problem', 'compile', 'compute']",5
271,26513,"Simulink model of a monopod hopper with 5 degrees of freedom. <p>Monopod hopperâ Ground modelÂ¤ Normal compliance modelÂ¤ Friction force modelâ Actuation modelÂ¤ Model of brushed DC motorsÂ¤ Ball screw and gearing modelsÂ¤ Springs and dampersâ Robot model and dynamics calculation routinesâ Energy calculation unitAnimations:<a href=""http://www.youtube.com/watch?v=yNZ323NqTo0http://www.youtube.com/watch?v=B-0ixgcJRNU"">http://www.youtube.com/watch?v=yNZ323NqTo0http://www.youtube.com/watch?v=B-0ixgcJRNU</a></p>ground models,hopping robot,legged robots,monopod hopper,electric_motor_control,power_conversion_control,power_electronics_control",327,22,4,1,369,monopod hopper degree freedom monopod hopper ground normal compliance friction force actuation brush motor ball screw gearing spring damper robot dynamic calculation routine energy calculation unitanimations http youtube com watch ynz nqto http youtube com watch ixgcjrnuground modelshopping robotlegged robotsmonopod hopperelectric motor controlpower conversion controlpower electronics control,"['monopod', 'hopper', 'degree', 'freedom', 'monopod', 'hopper', 'ground', 'normal', 'compliance', 'friction', 'force', 'actuation', 'brush', 'motor', 'ball', 'screw', 'gearing', 'spring', 'damper', 'robot', 'dynamic', 'calculation', 'routine', 'energy', 'calculation', 'unitanimations', 'http', 'youtube', 'com', 'watch', 'ynz', 'nqto', 'http', 'youtube', 'com', 'watch', 'ixgcjrnuground', 'modelshopping', 'robotlegged', 'robotsmonopod', 'hopperelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
272,26558," The objective is to produce an output of bipolar 150V, and a current of 4amps(bipolar).<p>In this model i have used H-bridge mosfets for switching, and an inductor as a filter, R and C as a load(C=90% and R=10% which is a piezo actuator).I have used PWM generator to control the switches, in that i have used internal genration of signals. In every condition the model output should be bipolar 150V by using PWM control and if possible help me to implement the  effective  control loop for this. Please help me ... thanks in advance.......... </p>pwm control,pwm control,electric_motor_control,power_conversion_control,power_electronics_control,pwm control,pwm control,pwm control",22,0,1,0,25,objective produce output bipolar current amp bipolar bridge mosfets switch inductor filter load piezo actuator pwm generator control switch internal genration signal every condition output bipolar pwm control possible help implement effective control loop please help thanks advance pwm controlpwm controlelectric motor controlpower conversion controlpower electronics controlpwm controlpwm controlpwm control,"['objective', 'produce', 'output', 'bipolar', 'current', 'amp', 'bipolar', 'bridge', 'mosfets', 'switch', 'inductor', 'filter', 'load', 'piezo', 'actuator', 'pwm', 'generator', 'control', 'switch', 'internal', 'genration', 'signal', 'every', 'condition', 'output', 'bipolar', 'pwm', 'control', 'possible', 'help', 'implement', 'effective', 'control', 'loop', 'please', 'help', 'thanks', 'advance', 'pwm', 'controlpwm', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpwm', 'controlpwm', 'controlpwm', 'control']",3
273,26561,"heart VI1 simulator simulink <p>It is going on investigations of Heart VI1 simulator simulink,in case of Frequency Cardiac Controled, with unic monitoring scope and compiling problems:1)Problems 1:i think that syntax of simulink accept serial Block Connection2)Problem 2:i think that simulink syntax aceepts easily in feedback blocks not complicated3)Problem 3:I click run for HEA VI1-12  simulator and time calcul is 1mn:50 (2mn man time calcul.With HEARTVI1FP2 when i click run the program run in the first step of Initialisation code procedure,and message ispile-cache insuffisant memory cache with my processor celeron 900MHZ?</p>biotech,mathematics,signal processing,simulation,simulink",121,8,3,0,130,heart investigation heart case frequency cardiac control unic monitoring scope compile problem problem think syntax accept serial block connection problem think syntax aceepts easily feedback block complicate problem click run hea time calcul man time calcul heartvi click run program run first step initialisation code procedureand message ispile cache insuffisant memory cache processor celeron mhz,"['heart', 'investigation', 'heart', 'case', 'frequency', 'cardiac', 'control', 'unic', 'monitoring', 'scope', 'compile', 'problem', 'problem', 'think', 'syntax', 'accept', 'serial', 'block', 'connection', 'problem', 'think', 'syntax', 'aceepts', 'easily', 'feedback', 'block', 'complicate', 'problem', 'click', 'run', 'hea', 'time', 'calcul', 'man', 'time', 'calcul', 'heartvi', 'click', 'run', 'program', 'run', 'first', 'step', 'initialisation', 'code', 'procedureand', 'message', 'ispile', 'cache', 'insuffisant', 'memory', 'cache', 'processor', 'celeron', 'mhz']",5
274,26578,"cardiac reentrance VI1 block simulink<p>It is a new block simulink,Reentrance VI1 ,a version of heart VI1 simulator simulink.Cardiac reentrance is when the cardiac excitation return back for re propagation.</p>mathematics,signal processing,simulation,simulink",71,4,2,0,77,cardiac reentrance block new block version heart cardiac reentrance cardiac excitation return back propagation,"['cardiac', 'reentrance', 'block', 'new', 'block', 'version', 'heart', 'cardiac', 'reentrance', 'cardiac', 'excitation', 'return', 'back', 'propagation']",5
275,26585,"Use STOP block to stop a simulation in steady state condition<p>Using the STOP block and a delay block, you can compute the error difference between successive values of a variable of interest. When the error in nth decimal place falls below the threshold, you can use the Compare to Constant block to activate the STOP block. The STOP block can be used in a powerful manner: For example, by setting the time of simulation to infinite, you can control how long the simulation runs depending on dynamics of the computation within the model.</p>simulation,simulink,state,steady,stop,tolerance",14,1,2,0,13,stop block stop steady state conditionusing stop block delay block compute error difference successive value variable interest error nth decimal place fall threshold compare constant block activate stop block stop block powerful manner example set time infinite control long run depend dynamic computation within,"['stop', 'block', 'stop', 'steady', 'state', 'conditionusing', 'stop', 'block', 'delay', 'block', 'compute', 'error', 'difference', 'successive', 'value', 'variable', 'interest', 'error', 'nth', 'decimal', 'place', 'fall', 'threshold', 'compare', 'constant', 'block', 'activate', 'stop', 'block', 'stop', 'block', 'powerful', 'manner', 'example', 'set', 'time', 'infinite', 'control', 'long', 'run', 'depend', 'dynamic', 'computation', 'within']",0
276,26609,"simulink block and PDE application theory<p>It is application of of Simulink Block to Cardiac PDE VI1 system of 2 non linear coupled equations of PDE and try to design solution with dicretized space and time and issue in 1D.I associate a Doc file to introduction theory.Just see this page simulink and not for run.I will next time develop application simulink and files to run.</p>biotech,mathematics,simulation,simulink",7,0,1,0,0,block pde application theoryit application block cardiac pde non linear couple equation pde try design solution dicretized space time issue associate doc file introduction theory see page run next time develop application file run,"['block', 'pde', 'application', 'theoryit', 'application', 'block', 'cardiac', 'pde', 'non', 'linear', 'couple', 'equation', 'pde', 'try', 'design', 'solution', 'dicretized', 'space', 'time', 'issue', 'associate', 'doc', 'file', 'introduction', 'theory', 'see', 'page', 'run', 'next', 'time', 'develop', 'application', 'file', 'run']",7
277,26635,"Achieving quality direct connectivity PI-regulator<p>The system of automatic control of vapor pressure in the boiler with the PI-regulator, taking into account the level of delay and non-linear element.</p>calculation of standard controllers for local control systems,calculation of standard controllers for local control systems",22,0,1,0,21,achieve quality direct connectivity regulatorthe automatic control vapor pressure boiler regulator take account level delay non linear element calculation standard controller local control standard controller local control,"['achieve', 'quality', 'direct', 'connectivity', 'regulatorthe', 'automatic', 'control', 'vapor', 'pressure', 'boiler', 'regulator', 'take', 'account', 'level', 'delay', 'non', 'linear', 'element', 'calculation', 'standard', 'controller', 'local', 'control', 'standard', 'controller', 'local', 'control']",4
278,26683,"Problems with torque measurement with simelectronics induction drive, drive a simhydraulics pump<p>Hi Arnaud,here is on of the files I mentioned.I drive a pump with the simelectronics induction motor. when it comes to measuring the torque, the power output totally changes.i did not connect the torque measurement tool yet. so you can run the model first, and then connect the tool and see the difference in the results.Thank you.P.S.: the other model will be uploaded next</p>simelectronics,simhydraulics,torque measurement,electric_motor_control,power_electronics_control",47,3,1,0,54,problem torque measurement simelectronics induction drive drive simhydraulics pumphi arnaudhere file mention drive pump simelectronics induction motor come measure torque power output totally change connect torque measurement tool yet run first connect tool see difference result thank uploaded motor controlpower electronics control,"['problem', 'torque', 'measurement', 'simelectronics', 'induction', 'drive', 'drive', 'simhydraulics', 'pumphi', 'arnaudhere', 'file', 'mention', 'drive', 'pump', 'simelectronics', 'induction', 'motor', 'come', 'measure', 'torque', 'power', 'output', 'totally', 'change', 'connect', 'torque', 'measurement', 'tool', 'yet', 'run', 'first', 'connect', 'tool', 'see', 'difference', 'result', 'thank', 'uploaded', 'motor', 'controlpower', 'electronics', 'control']",4
279,26684,"Issues with running a pump via speed from asynchronous motor<p>Hi Arnaud,this is the 2nd file you wished to see. The uploaded file is the one that works, the output of the asynchronous simpowersystems motor is torque. i measure the speed at the pumps end, an feed it back to the motor. the scenarios which are not working are.run pump with speed, and feed back torque or feed back speedrun pump with torque, feed back torque.thx for your helpcheersjerome</p>asynchronous machine,simhydraulics,simpowersystems,electric_motor_control,power_electronics_control,asynchronous motor fed with pump storage system",84,5,2,0,93,issue run pump via speed asynchronous motorhi arnaudthis file wish see uploaded file one work output asynchronous simpowersystems motor torque measure speed pump end fee back motor scenario work run pump speed feed back torque feed back speedrun pump torque feed back torque thx motor controlpower electronics motor feed pump storage,"['issue', 'run', 'pump', 'via', 'speed', 'asynchronous', 'motorhi', 'arnaudthis', 'file', 'wish', 'see', 'uploaded', 'file', 'one', 'work', 'output', 'asynchronous', 'simpowersystems', 'motor', 'torque', 'measure', 'speed', 'pump', 'end', 'fee', 'back', 'motor', 'scenario', 'work', 'run', 'pump', 'speed', 'feed', 'back', 'torque', 'feed', 'back', 'speedrun', 'pump', 'torque', 'feed', 'back', 'torque', 'thx', 'motor', 'controlpower', 'electronics', 'motor', 'feed', 'pump', 'storage']",4
280,26705,"simulateur cardiaque VI1 simulink<p>C'est l'investigation NÂ°25 du simulateur cardiaque VI1 simulink et de son general scope monitoring.Il utilise 2 niveaux d'encapuslation,cause pourquoi une fois telechargee etrun le temps de compilation et calcul est a peu pres 2mn avec un pentium 4.</p>biotech,mathematics,simulation,simulink",73,4,2,0,75,cardiaque est investigation cardiaque son general scope monitoring utilise niveaux pourquoi une fois telechargee etrun temp compilation calcul est peu pres avec pentium,"['cardiaque', 'est', 'investigation', 'cardiaque', 'son', 'general', 'scope', 'monitoring', 'utilise', 'niveaux', 'pourquoi', 'une', 'fois', 'telechargee', 'etrun', 'temp', 'compilation', 'calcul', 'est', 'peu', 'pres', 'avec', 'pentium']",8
281,26762,"Accumulator application for protection against water hammer<p>The remarkable advance in hydraulic and electrohydraulic power systems resulted in producing control valves of very short settling time. The rapid closure of hydraulic transmission lines leads to severe pressure surge. The attached Simulink file is developed to evaluate the applicability of oleo-pneumatic accumulators for the protection against this phenomenon. A lumped parameter model was developed for the transmission line, assuming four lumps, considering the effect of line resistance, inertia and capacitance. The validity of lumped parameter models is evaluated by comparing theoretical results with published experimental results. This part is also available on the Matlab file exchange. The theory and results discussion are published in my paper: M. Galal Rabie, "" On the Application of Oleo-Pneumatic Accumulators for the Protection of Hydraulic Transmission Lines against Water Hammer"", IJFP, Vol.8, Nr. 1, March 2007, pp 39-50, and my book: M Galal Rabie, Fluid Power Engineering, McGraw-Hill, NY, May 2009.</p>aerospace,automotive,control design",143,12,3,0,157,accumulator application protection water hammerthe remarkable advance hydraulic power result produce control valves short settling time rapid closure hydraulic transmission line lead severe pressure surge attach file develop evaluate applicability oleo pneumatic accumulator protection phenomenon lump parameter develop transmission line assume four lump consider effect line resistance inertia capacitance validity lump parameter evaluate compare theoretical result publish experimental result part also available file exchange theory result discussion publish paper galal rabie application oleo pneumatic accumulator protection hydraulic transmission line water hammer ijfp vol march book galal rabie fluid power engineering mcgraw hill may design,"['accumulator', 'application', 'protection', 'water', 'hammerthe', 'remarkable', 'advance', 'hydraulic', 'power', 'result', 'produce', 'control', 'valves', 'short', 'settling', 'time', 'rapid', 'closure', 'hydraulic', 'transmission', 'line', 'lead', 'severe', 'pressure', 'surge', 'attach', 'file', 'develop', 'evaluate', 'applicability', 'oleo', 'pneumatic', 'accumulator', 'protection', 'phenomenon', 'lump', 'parameter', 'develop', 'transmission', 'line', 'assume', 'four', 'lump', 'consider', 'effect', 'line', 'resistance', 'inertia', 'capacitance', 'validity', 'lump', 'parameter', 'evaluate', 'compare', 'theoretical', 'result', 'publish', 'experimental', 'result', 'part', 'also', 'available', 'file', 'exchange', 'theory', 'result', 'discussion', 'publish', 'paper', 'galal', 'rabie', 'application', 'oleo', 'pneumatic', 'accumulator', 'protection', 'hydraulic', 'transmission', 'line', 'water', 'hammer', 'ijfp', 'vol', 'march', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'design']",5
282,26763,"Calculation of equivalent bulk modulus of oil-air mixture<p>Here is a simple Simulink file to calculate the bulk modulus of oil-air mixture.The theory is explained in my book: M Galal Rabie, Fluid power Engineering, McGraw-Hill, NY, 2009, pp </p>aerospace,automotive,control design",18,0,1,0,27,calculation equivalent bulk modulus oil air mixturehere simple file calculate bulk modulus oil air mixture theory explain book galal rabie fluid power engineering mcgraw hill design,"['calculation', 'equivalent', 'bulk', 'modulus', 'oil', 'air', 'mixturehere', 'simple', 'file', 'calculate', 'bulk', 'modulus', 'oil', 'air', 'mixture', 'theory', 'explain', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'design']",5
283,26764,"Simulation of hydraulic servo actuator<p>Hydraulic servo actuators (HSAs) are used to precisely control displacement in a wide range of equipment. Generally, a hydraulic servo actuator consists of a hydraulic actuator controlled by a directional control valve of an infinite number of positions and equipped with a feedback arrangement. This simulink file simulated the dynamic behavior of a hydraulic servoactuator. The simulation program is based upon a detailed nonlinear model and a transfer function. The construction, operation, applications and mathematical models are given in my book: M Galal Rabie, Fluid power Engineering, McGraw-Hill, NY, May 2009.</p>aerospace,automotive,control design",119,9,2,0,143,hydraulic servo servo actuator hsas precisely control displacement wide range equipment generally hydraulic servo actuator consist hydraulic actuator control directional control valve infinite number position equip feedback arrangement file dynamic behavior hydraulic servoactuator program base upon detailed nonlinear transfer function construction operation application mathematical give book galal rabie fluid power engineering mcgraw hill may design,"['hydraulic', 'servo', 'servo', 'actuator', 'hsas', 'precisely', 'control', 'displacement', 'wide', 'range', 'equipment', 'generally', 'hydraulic', 'servo', 'actuator', 'consist', 'hydraulic', 'actuator', 'control', 'directional', 'control', 'valve', 'infinite', 'number', 'position', 'equip', 'feedback', 'arrangement', 'file', 'dynamic', 'behavior', 'hydraulic', 'servoactuator', 'program', 'base', 'upon', 'detailed', 'nonlinear', 'transfer', 'function', 'construction', 'operation', 'application', 'mathematical', 'give', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'may', 'design']",5
284,26765,"Calculation of the stiffness of a hydraulic spring<p>Here is a simple Simulink file to calculate the stiffness of hydraulic spring.The theory is explained in my book: M Galal Rabie, Fluid power Engineering, McGraw-Hill, NY, 2009, pp 235-237</p>aerospace,automotive,control design",9,0,1,0,9,calculation stiffness hydraulic springhere simple file calculate stiffness hydraulic spring theory explain book galal rabie fluid power engineering mcgraw hill design,"['calculation', 'stiffness', 'hydraulic', 'springhere', 'simple', 'file', 'calculate', 'stiffness', 'hydraulic', 'spring', 'theory', 'explain', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'design']",5
285,26766,"Simulation of hydraulic pipe, based on lumped parameter model<p>Here is a lumped parameter model of a hydraulic transmission line. The line is modeled by one, two, three, four and ten lump models. The simulation program presents the transient response in addition to experimental results.The theory is explained in my book: M Galal Rabie, Fluid power Engineering, McGraw-Hill, NY, 2009, pp 19-20, 29-30, 33-37 and 72-76 </p>aerospace,automotive,biotech,control design",336,29,3,0,374,hydraulic pipe base lump parameter modelhere lump parameter hydraulic transmission line line one two three four ten lump program present transient response addition experimental result theory explain book galal rabie fluid power engineering mcgraw hill design,"['hydraulic', 'pipe', 'base', 'lump', 'parameter', 'modelhere', 'lump', 'parameter', 'hydraulic', 'transmission', 'line', 'line', 'one', 'two', 'three', 'four', 'ten', 'lump', 'program', 'present', 'transient', 'response', 'addition', 'experimental', 'result', 'theory', 'explain', 'book', 'galal', 'rabie', 'fluid', 'power', 'engineering', 'mcgraw', 'hill', 'design']",0
286,26768,"This file contains a subsystem that performs a one-to-one mapping from  [-pi,pi] to [0,2*pi]. <p>This Simulink file contains a subsystem that performs the on-to-one mapping from  [-pi,pi] to [0,2*pi]. The file contains four different cases to illustrate the various possibilities.</p>angle,map,mapping,math,trigonometric,trigonometry",44,4,2,0,40,file contains subsystem perform one one mapping pipi file contain subsystem performs one mapping pipi file contain four different case illustrate various possibility,"['file', 'contains', 'subsystem', 'perform', 'one', 'one', 'mapping', 'pipi', 'file', 'contain', 'subsystem', 'performs', 'one', 'mapping', 'pipi', 'file', 'contain', 'four', 'different', 'case', 'illustrate', 'various', 'possibility']",7
287,26862,"Kalman filtering algorithm to track an object and generating C source code for implementation<p>This entry contains the demo presented as part of two separate MathWorks webinars related to MATLAB-to-C code generation. In this demo, we feature a Kalman filtering algorithm for tracking moving objects and will demonstrate how to automatically generate C code from MATLAB functions.Automatic MATLAB-to-C code generation is available for a subset of the MATLAB language called Embedded MATLABÂ®, which consists of more than 310 MATLAB operators and functions, 110 Fixed-Point Toolbox functions, and 35 Signal Processing Toolbox functions and new System objects in Signal Processing Blockset and Video and Image Processing Blockset.You will learn how to develop a MATLAB algorithm based on Kalman filtering to track the trajectory of an object moving in Cartesian 2-D space. You also learn how to use specific features of MATLAB, Fixed-Point Toolbox, Simulink, Real-Time Workshop, and related products to:-  Develop and validate MATLAB algorithms compliant with the Embedded MATLAB subset-   Automatically generate C code from your designs in MATLAB and Simulink-   Iterate and elaborate your algorithm to to handle typical design patterns like use of variable-size data &amp; fixed-point dataLatest Submitted Version Download: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/admin/download/26862"">http://www.mathworks.com/matlabcentral/fileexchange/admin/download/26862</a> </p>embedded matlab,emlc,emlmex,kalman filter,matlab to c,embedded matlab,emlc,kalman filter,kalman filter,kalman filter",9,0,1,0,10,kalman filter algorithm track object generate source code entry contain demo presented part two separate mathworks webinars related code generation demo feature kalman filter algorithm track move object demonstrate automatically generate code function automatic code generation available subset language call embed consists operator function fix point toolbox function signal processing toolbox function new object signal processing blockset video image processing blockset learn develop algorithm base kalman filter track trajectory object move cartesian space also learn specific feature fix point toolbox real time workshop relate product develop validate algorithm compliant embed subset automatically generate code design iterate elaborate algorithm handle typical design pattern like variable size data amp fix point datalatest submit version download http mathworks com matlabcentral fileexchange admin download embed filtermatlab cembedded filterkalman filterkalman filter,"['kalman', 'filter', 'algorithm', 'track', 'object', 'generate', 'source', 'code', 'entry', 'contain', 'demo', 'presented', 'part', 'two', 'separate', 'mathworks', 'webinars', 'related', 'code', 'generation', 'demo', 'feature', 'kalman', 'filter', 'algorithm', 'track', 'move', 'object', 'demonstrate', 'automatically', 'generate', 'code', 'function', 'automatic', 'code', 'generation', 'available', 'subset', 'language', 'call', 'embed', 'consists', 'operator', 'function', 'fix', 'point', 'toolbox', 'function', 'signal', 'processing', 'toolbox', 'function', 'new', 'object', 'signal', 'processing', 'blockset', 'video', 'image', 'processing', 'blockset', 'learn', 'develop', 'algorithm', 'base', 'kalman', 'filter', 'track', 'trajectory', 'object', 'move', 'cartesian', 'space', 'also', 'learn', 'specific', 'feature', 'fix', 'point', 'toolbox', 'real', 'time', 'workshop', 'relate', 'product', 'develop', 'validate', 'algorithm', 'compliant', 'embed', 'subset', 'automatically', 'generate', 'code', 'design', 'iterate', 'elaborate', 'algorithm', 'handle', 'typical', 'design', 'pattern', 'like', 'variable', 'size', 'data', 'amp', 'fix', 'point', 'datalatest', 'submit', 'version', 'download', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'admin', 'download', 'embed', 'filtermatlab', 'cembedded', 'filterkalman', 'filterkalman', 'filter']",7
288,27034,MODELING OF DEPHOSPHYLLATION AND PHOSHYLLATION <p>Stability of the system obtained from the a typical biochemical network was checked using simulink</p>biochemical network modelling,34,0,1,0,46,phoshyllation stability obtain typical biochemical network check network,"['phoshyllation', 'stability', 'obtain', 'typical', 'biochemical', 'network', 'check', 'network']",5
289,27193,"Three level diode clamped PWM based inverter<p>The model simulates the three level diode clamped single phase inverter. Power GUI shows the FFT analysis.</p>control design,drive,inverter,inverters,multilevel inverter,power electronics,pwm,single phase,zsource inverter fed induction motor drives â a space vector p,electric_motor_control,power_conversion_control,power_electronics_control,multilevel single phase",58,1,2,0,55,three level diode clamp pwm base inverterthe three level diode clamp single phase inverter power gui show fft analysis control inverterpower phasezsource inverter feed induction motor drive space vector pelectric motor controlpower conversion controlpower electronics single phase,"['three', 'level', 'diode', 'clamp', 'pwm', 'base', 'inverterthe', 'three', 'level', 'diode', 'clamp', 'single', 'phase', 'inverter', 'power', 'gui', 'show', 'fft', 'analysis', 'control', 'inverterpower', 'phasezsource', 'inverter', 'feed', 'induction', 'motor', 'drive', 'space', 'vector', 'pelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'single', 'phase']",1
290,27197,"Single phase square wave inverter<p>The model simulates the single phase square wave inverter</p>control design,inverter,square wave",27,1,2,0,26,single phase square wave inverterthe single phase square wave invertercontrol wave,"['single', 'phase', 'square', 'wave', 'inverterthe', 'single', 'phase', 'square', 'wave', 'invertercontrol', 'wave']",3
291,27198,"Unipolar Sinosoidal PWM based single phase inverter<p>This model simulates unipolar sinosoidal based single phase inverter. </p>control design,drives,inverter,power electronics,pwm,spwm,unipolar,electric_motor_control,power_conversion_control,power_electronics_control",47,1,2,0,46,unipolar sinosoidal pwm base single phase inverterthis unipolar sinosoidal base single phase inverter control motor controlpower conversion controlpower electronics control,"['unipolar', 'sinosoidal', 'pwm', 'base', 'single', 'phase', 'inverterthis', 'unipolar', 'sinosoidal', 'base', 'single', 'phase', 'inverter', 'control', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
292,27199,"Sinosoidal PWM based single phase inverter<p>This model simulates single phase bipolar sinosoidal PWM base inverter. </p>bipolar,drives,inverter,power electronics,simulink,spwm,electric_motor_control,power_conversion_control,power_electronics_control",48,1,2,0,47,sinosoidal pwm base single phase inverterthis single phase bipolar sinosoidal pwm base inverter motor controlpower conversion controlpower electronics control,"['sinosoidal', 'pwm', 'base', 'single', 'phase', 'inverterthis', 'single', 'phase', 'bipolar', 'sinosoidal', 'pwm', 'base', 'inverter', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
293,27201,"180 degree conduction based three phase inverter<p>The model simulates the 180 degree conduction based three phase inverter. FFT analysis is also performed.</p>control design,drives,inverter,power electronics,simulation,simulink,three phase inverter,inverter,inverter,simulation",73,3,2,0,76,degree conduction base three phase inverterthe degree conduction base three phase inverter fft analysis also perform control phase,"['degree', 'conduction', 'base', 'three', 'phase', 'inverterthe', 'degree', 'conduction', 'base', 'three', 'phase', 'inverter', 'fft', 'analysis', 'also', 'perform', 'control', 'phase']",3
294,27247,"Single Phase Cyclo converter 50Hz to lower frequencies conversion<p>The model simulates single phase cycloconverter. Output frequency can be adjusted. The input frequency must be changed in sources of both of the bridges if required.</p>cyclo converter,drives,power electronics,power systems,cyclo converter",30,0,1,0,26,single phase cyclo converter low frequency conversionthe single phase cycloconverter output frequency adjust input frequency must change source bridge require cyclo systemscyclo converter,"['single', 'phase', 'cyclo', 'converter', 'low', 'frequency', 'conversionthe', 'single', 'phase', 'cycloconverter', 'output', 'frequency', 'adjust', 'input', 'frequency', 'must', 'change', 'source', 'bridge', 'require', 'cyclo', 'systemscyclo', 'converter']",3
295,27260,"Models and white paper on obtaining realistic parameter values from data sheets and measured data.<p>This submission was created by Valery Tchkalov and Steve Miller to help engineers understand parameterization of hydraulic valves.  The included white paper, simulation models, and MATLAB scripts cover the structure of a valve model, examples of how to use optimization algorithms to tune your valve parameters so that your simulations match characteristics on manufacturerâs data sheets, and how to use experimental data to determine realistic parameter values. The power stage and control device of valves are discussed, and the models include steady-state, transient response, and frequency domain examples. Please read the README.txt file to get started.For an explanation of valve modeling and several of the examples contained in this submission, please watch, âHydraulic Valve Parameters From Data Sheets and Measured Dataâ <a href=""http://www.mathworks.com/videos/hydraulic-valve-parameters-from-data-sheets-and-measured-data-81734.htmlThree"">http://www.mathworks.com/videos/hydraulic-valve-parameters-from-data-sheets-and-measured-data-81734.htmlThree</a> of the examples are shown in videos:1. Tuning hydraulic valve parameters to match flow rate characteristics:<a href=""http://www.mathworks.com/videos/hydraulic-valve-parameters-flow-rate-68835.html2"">http://www.mathworks.com/videos/hydraulic-valve-parameters-flow-rate-68835.html2</a>. Tuning hydraulic valve parameters to match transient characteristics:<a href=""http://www.mathworks.com/videos/hydraulic-valve-parameters-transient-response-68837.html3"">http://www.mathworks.com/videos/hydraulic-valve-parameters-transient-response-68837.html3</a>. Tuning hydraulic valve parameters to match frequency characteristics:<a href=""http://www.mathworks.com/videos/hydraulic-valve-parameters-frequency-response-68836.htmlTo"">http://www.mathworks.com/videos/hydraulic-valve-parameters-frequency-response-68836.htmlTo</a> find other Simscape examples, search for posts with the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To</a> learn more about MathWorks Simscape Products, go to: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>data sheet,hydraulic,optimization,physical modeling,valve,data sheet",198,31,3,0,187,white paper obtain realistic parameter value data sheet measure data submission create valery tchkalov steve miller help engineer understand hydraulic valve include white paper script cover structure valve examples optimization algorithm tune valve parameter match characteristic manufacturer data sheet experimental data determine realistic parameter value power stage control device valve discuss include steady state transient response frequency domain example please read readme txt file get start explanation valve several example contain submission please watch hydraulic valve parameter data sheet measure data http mathworks com videos hydraulic valve parameter data sheet measure data htmlthree example show video tune hydraulic valve parameter match flow rate characteristic http mathworks com videos hydraulic valve parameter flow rate html tune hydraulic valve parameter match transient characteristic http mathworks com videos hydraulic valve parameter transient response html tune hydraulic valve parameter match frequency characteristic http mathworks com videos hydraulic valve parameter frequency response htmlto find simscape example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product http mathworks com physical modeling data sheet,"['white', 'paper', 'obtain', 'realistic', 'parameter', 'value', 'data', 'sheet', 'measure', 'data', 'submission', 'create', 'valery', 'tchkalov', 'steve', 'miller', 'help', 'engineer', 'understand', 'hydraulic', 'valve', 'include', 'white', 'paper', 'script', 'cover', 'structure', 'valve', 'examples', 'optimization', 'algorithm', 'tune', 'valve', 'parameter', 'match', 'characteristic', 'manufacturer', 'data', 'sheet', 'experimental', 'data', 'determine', 'realistic', 'parameter', 'value', 'power', 'stage', 'control', 'device', 'valve', 'discuss', 'include', 'steady', 'state', 'transient', 'response', 'frequency', 'domain', 'example', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'explanation', 'valve', 'several', 'example', 'contain', 'submission', 'please', 'watch', 'hydraulic', 'valve', 'parameter', 'data', 'sheet', 'measure', 'data', 'http', 'mathworks', 'com', 'videos', 'hydraulic', 'valve', 'parameter', 'data', 'sheet', 'measure', 'data', 'htmlthree', 'example', 'show', 'video', 'tune', 'hydraulic', 'valve', 'parameter', 'match', 'flow', 'rate', 'characteristic', 'http', 'mathworks', 'com', 'videos', 'hydraulic', 'valve', 'parameter', 'flow', 'rate', 'html', 'tune', 'hydraulic', 'valve', 'parameter', 'match', 'transient', 'characteristic', 'http', 'mathworks', 'com', 'videos', 'hydraulic', 'valve', 'parameter', 'transient', 'response', 'html', 'tune', 'hydraulic', 'valve', 'parameter', 'match', 'frequency', 'characteristic', 'http', 'mathworks', 'com', 'videos', 'hydraulic', 'valve', 'parameter', 'frequency', 'response', 'htmlto', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'data', 'sheet']",7
296,27309,"SVPWM based three phase inverter<p>The model simulates the Space Vector PWM based three phase inverter. Line voltages, phase voltages and filtered voltages can be seen on scope. Parameters such as modulation index, DC voltages and frequency can be changed from the callback function in model properties.</p>control design,drives,inverters,power electronics,power system,pwm,svpwm,three phase inverters,control design,control design,three phase inverters,electric_motor_control,power_conversion_control,power_electronics_control",97,3,2,0,107,svpwm base three phase inverterthe space vector pwm base three phase inverter line voltage phase voltage filter voltage see scope parameter modulation index voltage frequency change callback function property control phase designcontrol designthree phase motor controlpower conversion controlpower electronics control,"['svpwm', 'base', 'three', 'phase', 'inverterthe', 'space', 'vector', 'pwm', 'base', 'three', 'phase', 'inverter', 'line', 'voltage', 'phase', 'voltage', 'filter', 'voltage', 'see', 'scope', 'parameter', 'modulation', 'index', 'voltage', 'frequency', 'change', 'callback', 'function', 'property', 'control', 'phase', 'designcontrol', 'designthree', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
297,27310,"SVPWM based inverter -- state space filter model<p>The model simulates space vector based three phase inverter with the state space model of thefilter. The model parameters such as frequency, switching frequency, load parameters, voltage, modulation index and filter A,B,C,D parameters. </p>control design,filter,inverters,power electronics,power system,pwm,svpwm,three phase inverters,inverters,control design,svpwm,electric_motor_control,power_conversion_control,power_electronics_control,control design",49,2,3,0,65,svpwm base inverter state space filter modelthe space vector base three phase inverter state space thefilter parameter frequency switch frequency load parameter voltage modulation index filter abcd parameter control phase motor controlpower conversion controlpower electronics controlcontrol design,"['svpwm', 'base', 'inverter', 'state', 'space', 'filter', 'modelthe', 'space', 'vector', 'base', 'three', 'phase', 'inverter', 'state', 'space', 'thefilter', 'parameter', 'frequency', 'switch', 'frequency', 'load', 'parameter', 'voltage', 'modulation', 'index', 'filter', 'abcd', 'parameter', 'control', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'design']",1
298,27313,"Three phase three level SPWM inverter<p>The model simulates three phase three level diode clamped inverter using sinosoidal pulse width modulation. FFT analysis of output voltage is performed using power GUI. Switching frequency and output frequency can be adjusted using the initilzing callback function in the model properties. </p>control design,diode clamped inverter,drives,inverters,power electronics,power system,pwm,spwm,three level inverter,three phase inverters",121,3,2,0,123,three phase three level spwm inverterthe three phase three level diode clamp inverter sinosoidal pulse width modulation fft analysis output voltage perform power gui switch frequency output frequency adjust initilzing callback function property control designdiode clamp level inverterthree phase inverter,"['three', 'phase', 'three', 'level', 'spwm', 'inverterthe', 'three', 'phase', 'three', 'level', 'diode', 'clamp', 'inverter', 'sinosoidal', 'pulse', 'width', 'modulation', 'fft', 'analysis', 'output', 'voltage', 'perform', 'power', 'gui', 'switch', 'frequency', 'output', 'frequency', 'adjust', 'initilzing', 'callback', 'function', 'property', 'control', 'designdiode', 'clamp', 'level', 'inverterthree', 'phase', 'inverter']",3
299,27320,"Here is a three phase inverter block diagram as your reference<p>I've created a three phase inverter for users to download. Thanks.</p>power electronics,simulink,power electronics,simulink",27,0,1,0,34,three phase inverter block diagram referencei create three phase inverter user download thanks power,"['three', 'phase', 'inverter', 'block', 'diagram', 'referencei', 'create', 'three', 'phase', 'inverter', 'user', 'download', 'thanks', 'power']",3
300,27354,"Pulse analysis<p>Sub-system generates the pulses centered at defined angle with specified width at particular frequency.Input of sub-systems are1. Frequency2. Center of the pulse3. Half width (in terms of angles)This model was developed to study the FFT of particular pulse sequence. Two subsystem used generates the waveform which may be the output of an inverter.Provides a way to understand the FFT of the output wave of an inverter.</p>fft analysis of a waveform,power electronics,pulse,pulse analysis",36,2,2,0,38,pulse analysissub generates pulse center defined angle specify width particular frequency input sub frequency center pulse half width term angle develop study fft particular pulse sequence two subsystem generates waveform may output inverter provide way understand fft output wave inverter fft analysis waveformpower analysis,"['pulse', 'analysissub', 'generates', 'pulse', 'center', 'defined', 'angle', 'specify', 'width', 'particular', 'frequency', 'input', 'sub', 'frequency', 'center', 'pulse', 'half', 'width', 'term', 'angle', 'develop', 'study', 'fft', 'particular', 'pulse', 'sequence', 'two', 'subsystem', 'generates', 'waveform', 'may', 'output', 'inverter', 'provide', 'way', 'understand', 'fft', 'output', 'wave', 'inverter', 'fft', 'analysis', 'waveformpower', 'analysis']",4
301,27362,"This cycloconverter converts the ac frequency to ac frequency without the use of DC link. <p>This cycloconverter is  a step down cycloconverter. It converts the incoming line frequency to a lower frequency by the use of SCRs. The two bridge type controlled rectifiers are connected in anti parallel direction via 4 ideal switches. The time period of the ideal switches control the output frequency and the voltage can be varied by the firing angle of the SCRs. By using 4 switches the grounds of both the converter is isolated. </p>cycloconverter,simulink,ac ac converter,cycloconverter,industrial electronics,power electronics,simulink,power electronics,simulink,power_conversion_control,power_electronics_control,17395",37,0,1,0,30,cycloconverter convert frequency frequency without link cycloconverter step cycloconverter convert incoming line frequency lower frequency scrs two bridge type control rectifier connect anti parallel direction via ideal switch time period ideal switch control output frequency voltage vary fire angle scrs switch ground converter isolate conversion controlpower electronics control,"['cycloconverter', 'convert', 'frequency', 'frequency', 'without', 'link', 'cycloconverter', 'step', 'cycloconverter', 'convert', 'incoming', 'line', 'frequency', 'lower', 'frequency', 'scrs', 'two', 'bridge', 'type', 'control', 'rectifier', 'connect', 'anti', 'parallel', 'direction', 'via', 'ideal', 'switch', 'time', 'period', 'ideal', 'switch', 'control', 'output', 'frequency', 'voltage', 'vary', 'fire', 'angle', 'scrs', 'switch', 'ground', 'converter', 'isolate', 'conversion', 'controlpower', 'electronics', 'control']",3
302,27363,"This model drives a single phase motor with the help of Quasi square wave inverter <p>A single phase motor is is operated using a quasi square wave inverter with third harmonic cancellation. A dead band of 60 degree has eliminated almost all the third harmonic component. </p>3rd harmonic,dc ac converters,inverters,power electronics,quasi square wave inverter,simulink,3rd harmonic,electric_motor_control,power_electronics_control",33,2,2,0,34,drive single phase motor help quasi square wave inverter single phase motor operate quasi square wave inverter third harmonic cancellation dead band degree eliminate almost third harmonic component harmonicdc square wave motor controlpower electronics control,"['drive', 'single', 'phase', 'motor', 'help', 'quasi', 'square', 'wave', 'inverter', 'single', 'phase', 'motor', 'operate', 'quasi', 'square', 'wave', 'inverter', 'third', 'harmonic', 'cancellation', 'dead', 'band', 'degree', 'eliminate', 'almost', 'third', 'harmonic', 'component', 'harmonicdc', 'square', 'wave', 'motor', 'controlpower', 'electronics', 'control']",3
303,27372,"Five level three phase inverter<p>This model simulates three phase five level diode clamped PWM inverter. FFT analysis is performed using the power GUI tool of power system. </p>control design,inverter,multilevel inverter,power electronics,power system,pwm,simulation,simulink,spwm,three phase inverter,electric_motor_control,power_conversion_control,power_electronics_control",240,6,2,0,250,five level three phase inverterthis three phase five level diode clamp pwm inverter fft analysis perform power gui tool power control inverterpower phase motor controlpower conversion controlpower electronics control,"['five', 'level', 'three', 'phase', 'inverterthis', 'three', 'phase', 'five', 'level', 'diode', 'clamp', 'pwm', 'inverter', 'fft', 'analysis', 'perform', 'power', 'gui', 'tool', 'power', 'control', 'inverterpower', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
304,27373,"This file is about the working of modified sub oscillation method of generating PWM.<p>Sinusoidal PWM is widely used in power electronics. Modified Sub Oscillation method has zero sequence component added in the reference sine waves to make sure the efficient use of DC bus voltages available. This method is an improved form of Sinusoidal PWM and yields better results.</p>3 phase dc ac inverter,industrial electronics,inverter,power electronics,pwm,simulation,simulink,spwm,sub oscillation method,third harmonic,zero sequence component,inverter,3 phase dc ac inverter,electric_motor_control,power_conversion_control,power_electronics_control",52,0,1,0,74,file work modify sub oscillation method generate pwm sinusoidal pwm widely power electronics modify sub oscillation method zero sequence component add reference sine wave make sure efficient bus voltage available method improve form sinusoidal pwm yield well result phase oscillation methodthird harmoniczero sequence phase motor controlpower conversion controlpower electronics control,"['file', 'work', 'modify', 'sub', 'oscillation', 'method', 'generate', 'pwm', 'sinusoidal', 'pwm', 'widely', 'power', 'electronics', 'modify', 'sub', 'oscillation', 'method', 'zero', 'sequence', 'component', 'add', 'reference', 'sine', 'wave', 'make', 'sure', 'efficient', 'bus', 'voltage', 'available', 'method', 'improve', 'form', 'sinusoidal', 'pwm', 'yield', 'well', 'result', 'phase', 'oscillation', 'methodthird', 'harmoniczero', 'sequence', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
305,27379,"Buck Converter<p>The model simulates buck converter using different approaches. Parameters can be change from the initializing callback function in the model properties. First circuit implements buck using a MOSFET and diode, second implements using two MOSFETs and third implements using the model equation. Power switches voltage drop is neglected in the third implementation, that's why output voltage is higher than the first two implementations. The model can be simulated for different duty ratio to clear the concept of buck converters.</p>buck converter,control design,converter,dcdc converter,duty ratio,power electronics,power system,power_conversion_control,power_electronics_control,buck converter,buck converter,buck converter",64,4,2,0,71,buck converterthe buck converter different approach parameter change initialize callback function property first circuit implement buck mosfet diode second implement two mosfets third implement equation power switch voltage drop neglect third implementation output voltage high first two implementation different duty ratio clear concept buck converter buck converterduty ratiopower systempower conversion controlpower electronics controlbuck converterbuck converterbuck converter,"['buck', 'converterthe', 'buck', 'converter', 'different', 'approach', 'parameter', 'change', 'initialize', 'callback', 'function', 'property', 'first', 'circuit', 'implement', 'buck', 'mosfet', 'diode', 'second', 'implement', 'two', 'mosfets', 'third', 'implement', 'equation', 'power', 'switch', 'voltage', 'drop', 'neglect', 'third', 'implementation', 'output', 'voltage', 'high', 'first', 'two', 'implementation', 'different', 'duty', 'ratio', 'clear', 'concept', 'buck', 'converter', 'buck', 'converterduty', 'ratiopower', 'systempower', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converterbuck', 'converterbuck', 'converter']",3
306,27381,"Buck Converter<p>The model simulates buck converter using different approaches. Parameters can be change from the initializing callback function in the model properties. First circuit implements buck using a MOSFET and diode, second implements using two MOSFETs and third implements using the model equation. Power switches voltage drop is neglected in the third implementation, that's why output voltage is higher than the first two implementations.The model can be simulated for different duty ratio to clear the concept of buck converters.Integral gain can be adjusted to adjust the response.</p>buck converter,close loop,control design,converter,dcdc converter,duty ratio,power electronics,power system,control design,buck converter,close loop,control design,power_conversion_control,power_electronics_control",72,4,2,0,84,buck converterthe buck converter different approach parameter change initialize callback function property first circuit implement buck mosfet diode second implement two mosfets third implement equation power switch voltage drop neglect third implementation output voltage high first two implementation different duty ratio clear concept buck converter integral gain adjust adjust response buck converterclose loopcontrol converterduty ratiopower systemcontrol designbuck converterclose loopcontrol designpower conversion controlpower electronics control,"['buck', 'converterthe', 'buck', 'converter', 'different', 'approach', 'parameter', 'change', 'initialize', 'callback', 'function', 'property', 'first', 'circuit', 'implement', 'buck', 'mosfet', 'diode', 'second', 'implement', 'two', 'mosfets', 'third', 'implement', 'equation', 'power', 'switch', 'voltage', 'drop', 'neglect', 'third', 'implementation', 'output', 'voltage', 'high', 'first', 'two', 'implementation', 'different', 'duty', 'ratio', 'clear', 'concept', 'buck', 'converter', 'integral', 'gain', 'adjust', 'adjust', 'response', 'buck', 'converterclose', 'loopcontrol', 'converterduty', 'ratiopower', 'systemcontrol', 'designbuck', 'converterclose', 'loopcontrol', 'designpower', 'conversion', 'controlpower', 'electronics', 'control']",4
307,27382,"Digitally Controlled Buck Converter with and without load transients<p>The models simulates digitally controlled buck converters. There are two files; one with load transients and other without load transients.</p>converter,dcdc converter,digitally controlled converter,duty ratio,load transients,power electronics,power system,power_conversion_control,power_electronics_control",106,10,3,0,110,digitally control buck converter without load transientsthe digitally control buck converter two file one load transient without load transient converterdcdc control converterduty ratioload transientspower systempower conversion controlpower electronics control,"['digitally', 'control', 'buck', 'converter', 'without', 'load', 'transientsthe', 'digitally', 'control', 'buck', 'converter', 'two', 'file', 'one', 'load', 'transient', 'without', 'load', 'transient', 'converterdcdc', 'control', 'converterduty', 'ratioload', 'transientspower', 'systempower', 'conversion', 'controlpower', 'electronics', 'control']",3
308,27392,"Space vector PWM for three phase inverter<p>The model simulates the three phase inverter with space vector pulse width modulation. The SVPWM idea has been used from the Matlab drive library.</p>control design,inverter,power electronics,power system,pwm,svpwm,three phase inverter,svpwm,electric_motor_control,power_conversion_control,power_electronics_control",226,14,3,0,267,space vector pwm three phase inverterthe three phase inverter space vector pulse width modulation svpwm idea drive control phase motor controlpower conversion controlpower electronics control,"['space', 'vector', 'pwm', 'three', 'phase', 'inverterthe', 'three', 'phase', 'inverter', 'space', 'vector', 'pulse', 'width', 'modulation', 'svpwm', 'idea', 'drive', 'control', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
309,27410,"A simple Diode based  Cycloconverter with only frequency control. The output is twice as the input.<p>This is a cycloconverter with no thyristors. Voltage control is not being taken into consideration. Diodes are used as bridge in anti parallel direction. It yields twice the frequency of input supply.</p>acac converter,cycloconverter,diodes,frequency converter,industrial electronics,power electronics,simulation,simulink,step up cycloconverter",25,0,1,0,22,simple diode base cycloconverter frequency control output twice input cycloconverter thyristors voltage control take consideration diode bridge anti parallel direction yield twice frequency input supply acac cycloconverter,"['simple', 'diode', 'base', 'cycloconverter', 'frequency', 'control', 'output', 'twice', 'input', 'cycloconverter', 'thyristors', 'voltage', 'control', 'take', 'consideration', 'diode', 'bridge', 'anti', 'parallel', 'direction', 'yield', 'twice', 'frequency', 'input', 'supply', 'acac', 'cycloconverter']",4
310,27417,"Boost Converter<p>The model simulates two open loop boost converter. One converts 24V to 48V with 240W rating while the other converts 5V to 12V with low watt rating. </p>boost converter,control design,converter,open loop converter,power electronics,power system,switch mode power supply,power_conversion_control,power_electronics_control",35,2,2,0,41,boost converterthe two open loop boost converter one convert rating convert low watt rating boost loop converterpower systemswitch mode power supplypower conversion controlpower electronics control,"['boost', 'converterthe', 'two', 'open', 'loop', 'boost', 'converter', 'one', 'convert', 'rating', 'convert', 'low', 'watt', 'rating', 'boost', 'loop', 'converterpower', 'systemswitch', 'mode', 'power', 'supplypower', 'conversion', 'controlpower', 'electronics', 'control']",1
311,27420,"Boost converter<p>The model simulates two boost converters in close loop.</p>boost,boost converter,control design,converter,dcdc converter,electronics,power electronics,boost,boost converter,converter,dcdc converter,boost,power_conversion_control,power_electronics_control,control design,converter,inverter,power electronics,boo,boost,boost converter",44,2,2,0,52,boost converterthe two boost converter close loop boostboost conversion controlpower electronics controlcontrol converter,"['boost', 'converterthe', 'two', 'boost', 'converter', 'close', 'loop', 'boostboost', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'converter']",6
312,27459,"Shows the working of an inverter with a boost converter<p>An ideal solar array is considered as input that is fed to a  boost converter. The output of the boost converter is used as an input for a three phase IGBT based inverter. The laod is an induction motor. The transients in the DC link voltages is evident in the said model.</p>boost converter,dc dc converter,dcac,igbt based inverter,industrial electronics,inverter,power electronics,pv system,pwm,sim power system,simulink,pv system,inverter,power electronics,pv system,electric_motor_control,power_conversion_control,power_electronics_control,inverter,igbt based inverter",29,0,1,0,40,show work inverter boost converteran ideal solar array consider input feed boost converter output boost converter input three phase igbt base inverter laod induction motor transient link voltage evident say boost converterdc base electronicspv systempwmsim power electronicspv systemelectric motor controlpower conversion controlpower electronics base inverter,"['show', 'work', 'inverter', 'boost', 'converteran', 'ideal', 'solar', 'array', 'consider', 'input', 'feed', 'boost', 'converter', 'output', 'boost', 'converter', 'input', 'three', 'phase', 'igbt', 'base', 'inverter', 'laod', 'induction', 'motor', 'transient', 'link', 'voltage', 'evident', 'say', 'boost', 'converterdc', 'base', 'electronicspv', 'systempwmsim', 'power', 'electronicspv', 'systemelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'base', 'inverter']",1
313,27474,"induction motor<p>this induction motor is designed by an equation </p>simulation,simulation,simulation,electric_motor_control,power_electronics_control,simulation",63,5,2,0,73,induction motorthis induction motor design equation motor controlpower electronics,"['induction', 'motorthis', 'induction', 'motor', 'design', 'equation', 'motor', 'controlpower', 'electronics']",6
314,27528,"REAL EFFICIENCY through Modelling of Solar panel<p>First of all you should gather the information from your solar panel datasheet/manual:1)Short Circuit Current2)Maximum Power Point Current @ STC3)Open Circuit Voltage4)Maximum Power Point Voltage @ STC5)Thermal coefficient of Short Circuit Current6)Thermal coefficient of Open Circuit VoltageTo model the solar panel there is a function of the form I=f(V).If you take a look to the math expression you would see some constants and two variables (the global solar irradiation and ambient temperature) which play a role in the function.The constants are determined from the above information. Use the file ""twoDiode.mdl"" to calculate them.What you have now is the I-V characteristic of the solar panel which is depended from solar irradiation and ambient temperature. The I-V characteristic of your solar panel is implemented in the file ""solarpanel.mdl"". So you double click the model to define the constants and then you see three inputs. 1)global irradiation 2)temperature 3)Voltage. And you get the current.For example you keep global irradiation and temperature steady and change the voltage from 0 to the open circuit voltage and you get the nice I-V curve that you would see in your datasheet or manual of your solar panel product.If you want to connect this box with some resistance or a more complex circuit you would get the electrical behaviour of your solar panel.But in case you are only interested in power I have also uploaded the file ""solarpanel_power.mdl"" which has only two inputs: 1) global irradiation and 2) temperature. The solar panel is supposed to be working at Maximum Power Point instantaneously all of the time.Ok now let's see why we got in all this trouble.Let's say that your panel has a peak performance of 15%. But noone really cares about STC conditions. In case your country is a bit north maybe there not any time in the year where solar irradiation is 1000W/m^2 so your solar panel would never reach this performance. What you really care is the mean performance for your own territory.This is easy. You simple go to this website: <a href=""http://www.soda-is.com/You"">http://www.soda-is.com/You</a> get fill a form of where you live and in what inclination you have installed your panels and you get the irradiation that the surface of your panels receive in a hourly basis for all the year. Yes you get 8760 values. And another 8760 values for the temperature.There you have to play a little bit with Matlab to extract the values from the excel. Use the xlsread(). Don;t worry you only do this once unless you move to a different area or change the inclination of your panels.Time to get the results.Use the irradiation and temperature values as inputs and let the Simulink simulate your solar panel for a whole year. As output is the power of your panel at each time. Try to integrate that (use the integration block) and you get the energy that came out of your solar panel in a year period. The energy that was received is the integration of solar irradiation. But this is expressed in W/m^2 so calculate it with your solar panel's area (width x length).So now the REAL mean efficiency of this solar panel in YOUR specific area of the world is Energy Out/Energy InI do not know if have been more thorough or less than I should have but I believe this is good way to compare solar panels.Get the info and calculate the constants from first solar panel and then simulate to get real mean efficiency.Do the same for the second, third etc solar panel of the market.Compare the efficiencies and choose the one with the best efficiency!Be ware that efficiency is not the only factor. A good guarantee of 25years of operation should be preferred than a 20 years guarantee with slightly less performance!</p>matlab code for improving transient stability of multimachine po,mppt,real efficiency,solar cell,solar panel,two diode model,9bus power system,matlab code for improving transient stability of multimachine po,matlab code for transient stability of multimachine3machines,9bus power system",184,2,2,0,254,real efficiency solar panelfirst gather information solar panel datasheet manual short circuit current maximum power point current stc open circuit voltage maximum power point voltage stc thermal coefficient short circuit current thermal coefficient open circuit voltageto solar panel function form take look math expression would see constant two variable global solar irradiation ambient temperature play role function constant determine information file twodiode mdl calculate characteristic solar panel depend solar irradiation ambient temperature characteristic solar panel implement file solarpanel mdl double click define constant see three input global irradiation temperature voltage get current example keep global irradiation temperature steady change voltage open circuit voltage get nice curve would see datasheet manual solar panel product want connect box resistance complex circuit would get electrical behaviour solar panel case interested power also upload file solarpanel power mdl two input global irradiation temperature solar panel suppose work maximum power point instantaneously time let see get trouble let say panel peak performance noone really care stc condition case country bite north maybe time year solar irradiation solar panel would never reach performance really care mean performance territory easy simple website http soda com get fill form live inclination instal panel get irradiation surface panel receive hourly basis year yes get value another value temperature play little bit extract value excel xlsread worry unless move different area change inclination panel time get result irradiation temperature value input let solar panel whole year output power panel time try integrate integration block get energy come solar panel year period energy receive integration solar irradiation express calculate solar panel area width length real mean efficiency solar panel specific area world energy energy ini know thorough less believe good way compare solar panel get info calculate constant first solar panel get real mean efficiency second third etc solar panel market compare efficiency choose one best efficiency ware efficiency factor good guarantee year operation prefer year guarantee slightly less performance code improve transient stability multimachine pompptreal efficiencysolar cellsolar paneltwo diode bus power systemmatlab code improve transient stability multimachine pomatlab code transient stability multimachine machine bus power,"['real', 'efficiency', 'solar', 'panelfirst', 'gather', 'information', 'solar', 'panel', 'datasheet', 'manual', 'short', 'circuit', 'current', 'maximum', 'power', 'point', 'current', 'stc', 'open', 'circuit', 'voltage', 'maximum', 'power', 'point', 'voltage', 'stc', 'thermal', 'coefficient', 'short', 'circuit', 'current', 'thermal', 'coefficient', 'open', 'circuit', 'voltageto', 'solar', 'panel', 'function', 'form', 'take', 'look', 'math', 'expression', 'would', 'see', 'constant', 'two', 'variable', 'global', 'solar', 'irradiation', 'ambient', 'temperature', 'play', 'role', 'function', 'constant', 'determine', 'information', 'file', 'twodiode', 'mdl', 'calculate', 'characteristic', 'solar', 'panel', 'depend', 'solar', 'irradiation', 'ambient', 'temperature', 'characteristic', 'solar', 'panel', 'implement', 'file', 'solarpanel', 'mdl', 'double', 'click', 'define', 'constant', 'see', 'three', 'input', 'global', 'irradiation', 'temperature', 'voltage', 'get', 'current', 'example', 'keep', 'global', 'irradiation', 'temperature', 'steady', 'change', 'voltage', 'open', 'circuit', 'voltage', 'get', 'nice', 'curve', 'would', 'see', 'datasheet', 'manual', 'solar', 'panel', 'product', 'want', 'connect', 'box', 'resistance', 'complex', 'circuit', 'would', 'get', 'electrical', 'behaviour', 'solar', 'panel', 'case', 'interested', 'power', 'also', 'upload', 'file', 'solarpanel', 'power', 'mdl', 'two', 'input', 'global', 'irradiation', 'temperature', 'solar', 'panel', 'suppose', 'work', 'maximum', 'power', 'point', 'instantaneously', 'time', 'let', 'see', 'get', 'trouble', 'let', 'say', 'panel', 'peak', 'performance', 'noone', 'really', 'care', 'stc', 'condition', 'case', 'country', 'bite', 'north', 'maybe', 'time', 'year', 'solar', 'irradiation', 'solar', 'panel', 'would', 'never', 'reach', 'performance', 'really', 'care', 'mean', 'performance', 'territory', 'easy', 'simple', 'website', 'http', 'soda', 'com', 'get', 'fill', 'form', 'live', 'inclination', 'instal', 'panel', 'get', 'irradiation', 'surface', 'panel', 'receive', 'hourly', 'basis', 'year', 'yes', 'get', 'value', 'another', 'value', 'temperature', 'play', 'little', 'bit', 'extract', 'value', 'excel', 'xlsread', 'worry', 'unless', 'move', 'different', 'area', 'change', 'inclination', 'panel', 'time', 'get', 'result', 'irradiation', 'temperature', 'value', 'input', 'let', 'solar', 'panel', 'whole', 'year', 'output', 'power', 'panel', 'time', 'try', 'integrate', 'integration', 'block', 'get', 'energy', 'come', 'solar', 'panel', 'year', 'period', 'energy', 'receive', 'integration', 'solar', 'irradiation', 'express', 'calculate', 'solar', 'panel', 'area', 'width', 'length', 'real', 'mean', 'efficiency', 'solar', 'panel', 'specific', 'area', 'world', 'energy', 'energy', 'ini', 'know', 'thorough', 'less', 'believe', 'good', 'way', 'compare', 'solar', 'panel', 'get', 'info', 'calculate', 'constant', 'first', 'solar', 'panel', 'get', 'real', 'mean', 'efficiency', 'second', 'third', 'etc', 'solar', 'panel', 'market', 'compare', 'efficiency', 'choose', 'one', 'best', 'efficiency', 'ware', 'efficiency', 'factor', 'good', 'guarantee', 'year', 'operation', 'prefer', 'year', 'guarantee', 'slightly', 'less', 'performance', 'code', 'improve', 'transient', 'stability', 'multimachine', 'pompptreal', 'efficiencysolar', 'cellsolar', 'paneltwo', 'diode', 'bus', 'power', 'systemmatlab', 'code', 'improve', 'transient', 'stability', 'multimachine', 'pomatlab', 'code', 'transient', 'stability', 'multimachine', 'machine', 'bus', 'power']",0
315,27533,"Model of DC motor<p>The file simulates the model of separately excited DC motor. Parameters can be varied from the initializing function in model properties.</p>dc motor,electrical drives,machines,model,power system,electric_motor_control,power_conversion_control,power_electronics_control",13,0,1,0,15,motorthe file separately excite motor parameter vary initialize function property motorelectrical systemelectric motor controlpower conversion controlpower electronics control,"['motorthe', 'file', 'separately', 'excite', 'motor', 'parameter', 'vary', 'initialize', 'function', 'property', 'motorelectrical', 'systemelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
316,27547,"Provides a rudimentary implementation of the Foxboro I/A Series PIDA Block.<p>This block implements the PID control equations found on page 1680 of the Foxboro I/A Series Integrated Control Block Descriptions Manual Volume 3, dated May 31 2006.  Use this block when the target platform for a PID control design is a Foxboro I/A Series DCS.These blocks have been field verified by the author and are designed to be directly compatible with the Foxboro equivalent PIDA blocks.Depending on the level of interest, the block may be developed in the future to add further functionality.</p>control design,modeling,optimization,simulink",277,24,3,0,282,provide rudimentary implementation foxboro series pida block block implement pid control equation find page foxboro series integrate control block description manual volume date may block target platform pid control design foxboro series block field verify author design directly compatible foxboro equivalent pida block depend level interest block may develop future add functionality control,"['provide', 'rudimentary', 'implementation', 'foxboro', 'series', 'pida', 'block', 'block', 'implement', 'pid', 'control', 'equation', 'find', 'page', 'foxboro', 'series', 'integrate', 'control', 'block', 'description', 'manual', 'volume', 'date', 'may', 'block', 'target', 'platform', 'pid', 'control', 'design', 'foxboro', 'series', 'block', 'field', 'verify', 'author', 'design', 'directly', 'compatible', 'foxboro', 'equivalent', 'pida', 'block', 'depend', 'level', 'interest', 'block', 'may', 'develop', 'future', 'add', 'functionality', 'control']",0
317,27589,"A block to generate velocity and acceleration from a position signal.<p>One way to actuate a SimMechanics model is by providing its Actuator blocks with 'Motion' signals.  The input to a 'Motion' actuator is a three-element vector containing position, velocity and acceleration signals.In many applications, the only data that is available is the position.  This raises an interesting question: how can we calculate consistent velocity and position signals?  One way to actuate a SimMechanics model is by providing its Actuator blocks with 'Motion' signals.  The input to a 'Motion' actuator is a three-element vector containing position, velocity and acceleration signals.In many applications, the only data that is available is the position.  This raises an interesting question: how can we calculate consistent velocity and position signals?  Differentiating the position signal sometimes works, but the velocity and acceleration signals tend to become very noisy.  A better - though less intuitive approach - is to create a second-order tracking filter and use its position, velocity and acceleration signals to drive the actuator.This file contains a small Simulink library, motdrv_lib and an example file, mech_motdrv.  To use these, copy the files to your computer, add the directory to the MATLAB search path (see addpath for help) and type mech_motdrv in the MATLAB Command Window.</p>modeling,simulation",10,2,2,1,8,block generate velocity acceleration position signal one way actuate simmechanics provide actuator block motion signal input motion actuator three element vector contain position velocity acceleration signal many application data available position raise interesting question calculate consistent velocity position signal one way actuate simmechanics provide actuator block motion signal input motion actuator three element vector contain position velocity acceleration signal many application data available position raise interesting question calculate consistent velocity position signal differentiate position signal sometimes work velocity acceleration signal tend become noisy well though less intuitive approach create second order track filter position velocity acceleration signal drive actuator file contain small motdrv lib example file mech motdrv copy file computer add directory search path see addpath help type mech motdrv command window,"['block', 'generate', 'velocity', 'acceleration', 'position', 'signal', 'one', 'way', 'actuate', 'simmechanics', 'provide', 'actuator', 'block', 'motion', 'signal', 'input', 'motion', 'actuator', 'three', 'element', 'vector', 'contain', 'position', 'velocity', 'acceleration', 'signal', 'many', 'application', 'data', 'available', 'position', 'raise', 'interesting', 'question', 'calculate', 'consistent', 'velocity', 'position', 'signal', 'one', 'way', 'actuate', 'simmechanics', 'provide', 'actuator', 'block', 'motion', 'signal', 'input', 'motion', 'actuator', 'three', 'element', 'vector', 'contain', 'position', 'velocity', 'acceleration', 'signal', 'many', 'application', 'data', 'available', 'position', 'raise', 'interesting', 'question', 'calculate', 'consistent', 'velocity', 'position', 'signal', 'differentiate', 'position', 'signal', 'sometimes', 'work', 'velocity', 'acceleration', 'signal', 'tend', 'become', 'noisy', 'well', 'though', 'less', 'intuitive', 'approach', 'create', 'second', 'order', 'track', 'filter', 'position', 'velocity', 'acceleration', 'signal', 'drive', 'actuator', 'file', 'contain', 'small', 'motdrv', 'lib', 'example', 'file', 'mech', 'motdrv', 'copy', 'file', 'computer', 'add', 'directory', 'search', 'path', 'see', 'addpath', 'help', 'type', 'mech', 'motdrv', 'command', 'window']",0
318,27620,"A DC DC Converter capable of buck/ Boost input voltage<p>Below 50 % duty cycle it steps down the DC Voltages and from 50 -99% of duty cycle it steps up the input voltage</p>dc dc converter,buckboost converter,dc dc converter,power electronics,simulink,smps,buckboost converter,simulink,smps,buckboost converter,buckboost converter,can u provide a simulink model for sepic converter,power_conversion_control,power_electronics_control,power electronics,buckboost converter,buckboost converter,hadeed sher",10,0,1,0,9,converter capable buck boost input voltagebelow duty cycle step voltage duty cycle step input voltagedc converterdc converterpower convertercan provide sepic converterpower conversion controlpower electronics controlpower converterhadeed sher,"['converter', 'capable', 'buck', 'boost', 'input', 'voltagebelow', 'duty', 'cycle', 'step', 'voltage', 'duty', 'cycle', 'step', 'input', 'voltagedc', 'converterdc', 'converterpower', 'convertercan', 'provide', 'sepic', 'converterpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'converterhadeed', 'sher']",3
319,27686,"Three phase inverter with triplen injection in reference<p>This model simulates three phase inverter. Sawtooth waveform has been used as the carrier. Triplen of level 1/6 of reference were injected in the reference to utilize the maximum DC link voltage. The output voltage range increases by injecting the triplen harmonics in the reference provided that two peaks of the new reference are equal to the peak of the fundamental of reference. </p>control design,converter,inverter,power electronics,three phase inverter,triplen injection,electric_motor_control,power_conversion_control,power_electronics_control",90,3,2,0,101,three phase inverter triplen injection referencethis three phase inverter sawtooth waveform carrier triplen level reference inject reference utilize maximum link voltage output voltage range increase inject triplen harmonic reference provide two peak new reference equal peak fundamental reference control phase invertertriplen motor controlpower conversion controlpower electronics control,"['three', 'phase', 'inverter', 'triplen', 'injection', 'referencethis', 'three', 'phase', 'inverter', 'sawtooth', 'waveform', 'carrier', 'triplen', 'level', 'reference', 'inject', 'reference', 'utilize', 'maximum', 'link', 'voltage', 'output', 'voltage', 'range', 'increase', 'inject', 'triplen', 'harmonic', 'reference', 'provide', 'two', 'peak', 'new', 'reference', 'equal', 'peak', 'fundamental', 'reference', 'control', 'phase', 'invertertriplen', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
320,27694,"NXTbike-GS Design based on Embedded Coder Robot NXT. and NXTway-GS<p>NXT Bike with a gyro sensor powered by nxtOSEK.Built by JTM Mutsaerts at Delft University of Technology,Bicycle Dynamics Lab, <a href=""http://www.bicycle.tudelft.nl.In"">http://www.bicycle.tudelft.nl.In</a> assignment of Jo W. Spronck, Associate professor.Using the same control environment as in NXTway-GSand the concept of steer-into-the fall.<a href=""http://www.youtube.com/watch?v=o7nSQ2ycGX4This"">http://www.youtube.com/watch?v=o7nSQ2ycGX4This</a> demo uses Embedded Coder Robot NXT Demo as MBD environment. You need to download it from the following URL before trying this demo.<a href=""http://www.mathworks.com/matlabcentral/fileexchange/13399LEGO(R)"">http://www.mathworks.com/matlabcentral/fileexchange/13399LEGO(R)</a> is a trademark of the LEGO Group of companies which does not sponsor, authorize or endorse this demo. LEGO(R) and Mindstorms(R) are registered trademarks of The LEGO Group.</p>bicycle,bike,control design,embedded coder,lego,nxt,nxtbicycle,nxtbike,nxtway,simulation,simulink,tudelf,bicycle",2518,228,8,0,1922,nxtbike design base embedded coder robot nxt nxtway gsnxt bike gyro sensor power nxtosek build jtm mutsaerts delft university dynamic lab http bicycle tudelft assignment spronck associate professor control environment nxtway gsand concept steer fall http youtube com watch nsq ycgx demo embed coder robot nxt demo mbd environment need download follow url try demo http mathworks com matlabcentral fileexchange lego trademark lego group company sponsor authorize endorse demo lego mindstorms register trademark lego group designembedded,"['nxtbike', 'design', 'base', 'embedded', 'coder', 'robot', 'nxt', 'nxtway', 'gsnxt', 'bike', 'gyro', 'sensor', 'power', 'nxtosek', 'build', 'jtm', 'mutsaerts', 'delft', 'university', 'dynamic', 'lab', 'http', 'bicycle', 'tudelft', 'assignment', 'spronck', 'associate', 'professor', 'control', 'environment', 'nxtway', 'gsand', 'concept', 'steer', 'fall', 'http', 'youtube', 'com', 'watch', 'nsq', 'ycgx', 'demo', 'embed', 'coder', 'robot', 'nxt', 'demo', 'mbd', 'environment', 'need', 'download', 'follow', 'url', 'try', 'demo', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'lego', 'trademark', 'lego', 'group', 'company', 'sponsor', 'authorize', 'endorse', 'demo', 'lego', 'mindstorms', 'register', 'trademark', 'lego', 'group', 'designembedded']",0
321,27735,"FUll bridge DC DC converter with bipolar switching<p>A simple DC DC bridge converter is used . it has a bipolar voltage switching thorough PWM. These kinds of converters are 4 quadrant converters </p>4 quadrant converters,bipolar pwm,bridge converters,dc dc converter,measurement,pwm,simulink,hi,i wish,it will help lot,naveen,thanx for this,electric_motor_control,power_conversion_control,power_electronics_control",25,1,2,0,27,full bridge converter bipolar switchinga simple bridge converter bipolar voltage switch thorough pwm kinds converter quadrant converter quadrant pwmbridge convertersdc wishit help lotnaveenthanx thiselectric motor controlpower conversion controlpower electronics control,"['full', 'bridge', 'converter', 'bipolar', 'switchinga', 'simple', 'bridge', 'converter', 'bipolar', 'voltage', 'switch', 'thorough', 'pwm', 'kinds', 'converter', 'quadrant', 'converter', 'quadrant', 'pwmbridge', 'convertersdc', 'wishit', 'help', 'lotnaveenthanx', 'thiselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
322,27736,"Full bridge DC DC converter with unipolar switching .<p>A dc dc converter is modeled that can operate in 2 quadrants. It is similar to the bipolar converter with a slight difference in PWM algorithm</p>2 quadrant converter,dc dc converter,measurement,pwm,simulink,unipolar pwm,dc dc converter,electric_motor_control,power_conversion_control,power_electronics_control,dc dc converter",30,1,2,0,32,full bridge converter unipolar switching converter operate quadrant similar bipolar converter slight difference pwm algorithm quadrant converterdc pwmdc motor controlpower conversion controlpower electronics controldc converter,"['full', 'bridge', 'converter', 'unipolar', 'switching', 'converter', 'operate', 'quadrant', 'similar', 'bipolar', 'converter', 'slight', 'difference', 'pwm', 'algorithm', 'quadrant', 'converterdc', 'pwmdc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'converter']",1
323,27738,"This is a suite of simple utilities that allow for efficient approximation of complex functions in a<p>This tool accepts a function handle for a ""well behaved"" function. It then automatically finds the best position for the knots for cubic spline approximation based on the error tolerance specified by the user. Areas of the approximation region with more rapid changes require more closely placed knots. Once the knots are positioned and the requested error tolerance is achieved, a computation is made to convert the coefficient tables to fixed point. The lookup operation is automatically coded in EML. Note that the best way to code the EML lookup operation is with a linear O(n) search, that will be further optimized by the synthesis tools. To demonstrate the utility of these functions, run the ""example.m""  function that is included with this submission. </p>approximation,fixed point,hdl,hdl coder,spline",19,2,2,0,25,suite simple utility allow efficient approximation complex function athis tool accepts function handle well behave function automatically find best position knot cubic spline approximation base error tolerance specify user area approximation region rapid change require closely place knot knot position requested error tolerance achieve computation make convert coefficient table fix point lookup operation automatically cod eml note best way code eml lookup operation linear search optimize synthesis tool demonstrate utility function run example function include submission pointhdlhdl coderspline,"['suite', 'simple', 'utility', 'allow', 'efficient', 'approximation', 'complex', 'function', 'athis', 'tool', 'accepts', 'function', 'handle', 'well', 'behave', 'function', 'automatically', 'find', 'best', 'position', 'knot', 'cubic', 'spline', 'approximation', 'base', 'error', 'tolerance', 'specify', 'user', 'area', 'approximation', 'region', 'rapid', 'change', 'require', 'closely', 'place', 'knot', 'knot', 'position', 'requested', 'error', 'tolerance', 'achieve', 'computation', 'make', 'convert', 'coefficient', 'table', 'fix', 'point', 'lookup', 'operation', 'automatically', 'cod', 'eml', 'note', 'best', 'way', 'code', 'eml', 'lookup', 'operation', 'linear', 'search', 'optimize', 'synthesis', 'tool', 'demonstrate', 'utility', 'function', 'run', 'example', 'function', 'include', 'submission', 'pointhdlhdl', 'coderspline']",0
324,27742,"Zero voltage switching Buck Converter <p>The model simulates the Buck Converter and ensures zero voltage switching.</p>buck converters,control design,converters,power electronics,zero voltage switching,power_conversion_control,power_electronics_control",19,0,1,0,23,zero voltage switch buck converter buck converter ensure zero voltage switch buck electronicszero voltage switchingpower conversion controlpower electronics control,"['zero', 'voltage', 'switch', 'buck', 'converter', 'buck', 'converter', 'ensure', 'zero', 'voltage', 'switch', 'buck', 'electronicszero', 'voltage', 'switchingpower', 'conversion', 'controlpower', 'electronics', 'control']",1
325,27748,"The Simulink blockset for CANUSB<p>In the .zip file, you can find a model , which can be used as a library (I'm lazy to put it as a proper Simulink library, forgive me).I implemented only Standard CAN, but you could extend it easily.There are mainly 3 blocks:CanConfig: Set the speed, mask, etc..CanRead: Read the data from CANUSBCanWrite: Write data to CANUSBYou need to install the canusb driver (could be downloaded from canusb website), and, of course, the CANUSB module to use with this blockset.Have a lot of fun with this!</p>can,can bus,can network,canusb,interface,simulink,usb",42,3,2,0,54,blockset canusbin zip file find lazy put proper forgive implement standard could extend easily mainly block canconfig set speed mask etc canread read data canusbcanwrite write data canusbyou need install canusb driver could download canusb website course canusb module blockset lot fun cancan buscan,"['blockset', 'canusbin', 'zip', 'file', 'find', 'lazy', 'put', 'proper', 'forgive', 'implement', 'standard', 'could', 'extend', 'easily', 'mainly', 'block', 'canconfig', 'set', 'speed', 'mask', 'etc', 'canread', 'read', 'data', 'canusbcanwrite', 'write', 'data', 'canusbyou', 'need', 'install', 'canusb', 'driver', 'could', 'download', 'canusb', 'website', 'course', 'canusb', 'module', 'blockset', 'lot', 'fun', 'cancan', 'buscan']",5
326,27843,"Slides for the webinar: ""Learning Basic Mechatronics Concepts Using the Arduino Board and MATLAB"".<p>This zip file some slides (and some MATLAB examples) explaining the Legacy MATLAB and Simulink Support for Arduino (formerly known as ""ArduinoIO package""). This legacy package allows the user to perform Analog and Digital Input and Output, as well as to control DC, Servo and Stepper Motors interactively from the MATLAB command window, without having to write, debug, compile, upload and run C programs.The examples included is this file are taken from the ""example"" folder of the Legacy MATLAB and Simulink Support for Arduino.NOTE: You can download the Legacy MATLAB and Simulink Support for Arduino from here: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/32374"">http://www.mathworks.com/matlabcentral/fileexchange/32374</a></p>motor,arduino,mechatronics,pick of the week,potw,analog,class,data export,data import,digital,measurements,pwm,robotics,xbee,electric_motor_control,power_conversion_control,power_electronics_control",124,10,2,0,94,slide webinar learn basic mechatronics concept arduino board zip file slide examples explain legacy support arduino formerly know arduinoio package legacy package allow user perform analog digital input output well control servo stepper motor interactively command window without write debug compile upload run program examples include file take example folder legacy support arduino note download legacy support arduino http mathworks com matlabcentral fileexchange exportdata motor controlpower conversion controlpower electronics control,"['slide', 'webinar', 'learn', 'basic', 'mechatronics', 'concept', 'arduino', 'board', 'zip', 'file', 'slide', 'examples', 'explain', 'legacy', 'support', 'arduino', 'formerly', 'know', 'arduinoio', 'package', 'legacy', 'package', 'allow', 'user', 'perform', 'analog', 'digital', 'input', 'output', 'well', 'control', 'servo', 'stepper', 'motor', 'interactively', 'command', 'window', 'without', 'write', 'debug', 'compile', 'upload', 'run', 'program', 'examples', 'include', 'file', 'take', 'example', 'folder', 'legacy', 'support', 'arduino', 'note', 'download', 'legacy', 'support', 'arduino', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'exportdata', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",7
327,27875,"AN EXCLUSIVE MODEL FOR BRUSH LESS DC MOTORS<p>PRESENTS EXQUISITE RESULTS UNLIKE OTHERS</p>bldc,bldc,bldc,bldc,bldc,bldc,electric_motor_control,power_conversion_control,power_electronics_control,bldc,bldc",101,5,3,0,139,exclusive brush less motorspresents exquisite result unlike motor controlpower conversion controlpower electronics controlbldcbldc,"['exclusive', 'brush', 'less', 'motorspresents', 'exquisite', 'result', 'unlike', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlbldcbldc']",1
328,27970,"Making using Model reference adaptive system the PMSM was modeled in simulink.  <p>PMSM was modeled in simulink with the help of model adaptive reference system. The position of rotor and speed can be estimated with out help of sensor technology. This is developed with the help of space vector pulse width modulation (SVPWM). Modeling is done with the help of d-q axis references. </p>current_plot,rotor position,speed,current_plot,current_plot,current_plot,rotor position,speed,current_plot,current_plot,current_plot,rotor position,speed,current_plot,electric_motor_control,power_conversion_control,power_electronics_control,current_plot",295,22,4,0,399,make reference adaptive pmsm pmsm help adaptive reference position rotor speed estimate help sensor technology develop help space vector pulse width modulation svpwm help axis reference current plotrotor plotcurrent plotcurrent plotrotor plotcurrent plotcurrent plotrotor plotelectric motor controlpower conversion controlpower electronics controlcurrent plot,"['make', 'reference', 'adaptive', 'pmsm', 'pmsm', 'help', 'adaptive', 'reference', 'position', 'rotor', 'speed', 'estimate', 'help', 'sensor', 'technology', 'develop', 'help', 'space', 'vector', 'pulse', 'width', 'modulation', 'svpwm', 'help', 'axis', 'reference', 'current', 'plotrotor', 'plotcurrent', 'plotcurrent', 'plotrotor', 'plotcurrent', 'plotcurrent', 'plotrotor', 'plotelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcurrent', 'plot']",4
329,27977,"Simulation of control  in a gas separator process by membrane separation.<p>In this demo, control object (plant) is gas separator. Control Performance of Cascade PID control and Model Predictive Control are compared . This demo shows  following contents.[1] Plant modeling Governing rules of the plant are assumed and modeled on a formula basis. The governing rules are derived from mass balance equation and ideal gas equation.[2] System identificationIdentify parametric model from plant input and output response in time domain.[3] Control system design (PID control, Model Predictive Control)Design of PID control for the inner control system, and cascade PID control and Model Predictive Control for the outer control system. The control object is the above parametric model.[4] Evaluation of Control SystemPerformance of designed control system is evaluated in some diagram. Validity of Model Predictive Control is confirmed in this example for multi-inputs multi-outputs system.Plant model and control system in this example can be created in MATLAB&amp;Simulink and simulated. Logics of MATLAB&amp;Simulink can be changed and extended as a more detailed model, and improved gradually, a larger system can be constructed. It is also possible to embed experimental equation or table format if processes are difficult to equate theoretically. Efficient and intuitive modeling is possible in Simulinkâs graphical environment.</p>control design,model predictive control,modeling,pid,simulation,simulink,system identification,control design",1665,50,2,0,1889,control gas separator process membrane separation demo control object plant gas separator control performance cascade pid control predictive control compare demo show follow content plant govern rule plant assume formula basis governing rule derive mass balance equation ideal gas equation parametric plant input output response time domain control design pid control predictive control design pid control inner control cascade pid control predictive control outer control control object parametric evaluation control design control evaluate diagram validity predictive control confirm example multi input multi output plant control example create amp logic amp change extend detailed improve gradually large construct also possible embed experimental equation table format process difficult equate theoretically efficient intuitive modeling possible graphical environment control designmodel predictive design,"['control', 'gas', 'separator', 'process', 'membrane', 'separation', 'demo', 'control', 'object', 'plant', 'gas', 'separator', 'control', 'performance', 'cascade', 'pid', 'control', 'predictive', 'control', 'compare', 'demo', 'show', 'follow', 'content', 'plant', 'govern', 'rule', 'plant', 'assume', 'formula', 'basis', 'governing', 'rule', 'derive', 'mass', 'balance', 'equation', 'ideal', 'gas', 'equation', 'parametric', 'plant', 'input', 'output', 'response', 'time', 'domain', 'control', 'design', 'pid', 'control', 'predictive', 'control', 'design', 'pid', 'control', 'inner', 'control', 'cascade', 'pid', 'control', 'predictive', 'control', 'outer', 'control', 'control', 'object', 'parametric', 'evaluation', 'control', 'design', 'control', 'evaluate', 'diagram', 'validity', 'predictive', 'control', 'confirm', 'example', 'multi', 'input', 'multi', 'output', 'plant', 'control', 'example', 'create', 'amp', 'logic', 'amp', 'change', 'extend', 'detailed', 'improve', 'gradually', 'large', 'construct', 'also', 'possible', 'embed', 'experimental', 'equation', 'table', 'format', 'process', 'difficult', 'equate', 'theoretically', 'efficient', 'intuitive', 'modeling', 'possible', 'graphical', 'environment', 'control', 'designmodel', 'predictive', 'design']",4
330,27992,"The simulink model for sensorless PMSM was provided with the help of sliding model observer (SMO)<p>Permanent Magnet synchronous motor was modeled with the help of vector control technique and it was also made sensorless based on sliding model observer (SMO). controller parameters are given after tuning it with conventional gradient descent method. </p>rotor_position,actual_speed,estimated_speed,modeling,rotor_position,simulink,actual_speed,actual_speed,estimated_speed,modeling,rotor_position,simulink,actual_speed,estimated_speed,electric_motor_control,power_electronics_control",262,15,4,0,342,sensorless pmsm provide help slide observer smo permanent magnet synchronous motor help vector control technique also make sensorless base slide observer smo controller parameter give tune conventional gradient descent method rotor positionactual speedestimated speedactual speedestimated speedestimated speedelectric motor controlpower electronics control,"['sensorless', 'pmsm', 'provide', 'help', 'slide', 'observer', 'smo', 'permanent', 'magnet', 'synchronous', 'motor', 'help', 'vector', 'control', 'technique', 'also', 'make', 'sensorless', 'base', 'slide', 'observer', 'smo', 'controller', 'parameter', 'give', 'tune', 'conventional', 'gradient', 'descent', 'method', 'rotor', 'positionactual', 'speedestimated', 'speedactual', 'speedestimated', 'speedestimated', 'speedelectric', 'motor', 'controlpower', 'electronics', 'control']",4
331,28017,"zero voltage switching buck boost converter<p>by interchanging source and load. converter acts like buck and boost.</p>boost,buck,zvs,boost,buck,power_conversion_control,power_electronics_control,boost",147,17,3,0,132,zero voltage switch buck boost converterby interchange source load converter act like buck boost conversion controlpower electronics controlboost,"['zero', 'voltage', 'switch', 'buck', 'boost', 'converterby', 'interchange', 'source', 'load', 'converter', 'act', 'like', 'buck', 'boost', 'conversion', 'controlpower', 'electronics', 'controlboost']",1
332,28026,"Power Calculation through Conventional Theory and IEEE 1459-2000<p>This is a Thyristor Three Phase Rectifier. Power measurement is performed by phasor calculation and is compared with values of nonsinusoidal power definitions of Std. IEEE 1459-2000. Only Apparent Power is performed.</p>mathematics,measurement,modeling,simulation,simulink,mathematics",170,3,2,0,166,power calculation conventional theory iee thyristor three phase rectifier power measurement perform phasor calculation compare value nonsinusoidal power definition std iee apparent power perform,"['power', 'calculation', 'conventional', 'theory', 'iee', 'thyristor', 'three', 'phase', 'rectifier', 'power', 'measurement', 'perform', 'phasor', 'calculation', 'compare', 'value', 'nonsinusoidal', 'power', 'definition', 'std', 'iee', 'apparent', 'power', 'perform']",4
333,28034,"Trigonometric function using CORDIC algorithm is implemented to FPGA. <p>This sample model shows how to create model using Simulink primitive blocks.CORDICã¢ã«ã´ãªãºã ãä½¿ç¨ããä¸è§é¢æ°è¨ç®ãFPGAã«å®è£ãã¾ãããã®ãµã³ãã«ã¢ãã«ã¯Simulinkåºæ¬ãã­ãã¯ãä½¿ã£ã¦ã¢ãã«ãä½æããæ¹æ³ãç´¹ä»ãã¦ãã¾ãã</p>cordic fpga implementation trigonometric hdldsp builder systemge,cordic fpga implementation trigonometric hdldsp builder systemge",3398,236,4,0,4045,trigonometric function cordic algorithm implement fpga sample show create primitive block fpga implementation trigonometric hdldsp builder systemgecordic fpga implementation trigonometric hdldsp builder systemge,"['trigonometric', 'function', 'cordic', 'algorithm', 'implement', 'fpga', 'sample', 'show', 'create', 'primitive', 'block', 'fpga', 'implementation', 'trigonometric', 'hdldsp', 'builder', 'systemgecordic', 'fpga', 'implementation', 'trigonometric', 'hdldsp', 'builder', 'systemge']",5
334,28058,"Simple generation of PWM using a sin and asin block.<p>PWM generator for power electronics applications</p>power electronics,pwm,simulink,pwm,electric_motor_control,power_conversion_control,power_electronics_control",8,0,1,0,7,simple generation pwm sin asin block pwm generator power electronics motor controlpower conversion controlpower electronics control,"['simple', 'generation', 'pwm', 'sin', 'asin', 'block', 'pwm', 'generator', 'power', 'electronics', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
335,28059,"Another method of PWM generation.<p>Another method of PWM generation using user defined block</p>control,power electronics,pwm,sim power system,simulink,electric_motor_control,power_conversion_control,power_electronics_control",10,0,1,0,11,another method pwm generation another method pwm generation user define power motor controlpower conversion controlpower electronics control,"['another', 'method', 'pwm', 'generation', 'another', 'method', 'pwm', 'generation', 'user', 'define', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
336,28072,"SPWM technique on multilevel inverter -----capacitor clamped topology<p>3 level output of a capacitor clamped topology</p>jj,capacitor clamped,inverter,mutilevel inverters,windmill",118,2,2,0,131,spwm technique multilevel inverter capacitor clamp topology level output capacitor clamp,"['spwm', 'technique', 'multilevel', 'inverter', 'capacitor', 'clamp', 'topology', 'level', 'output', 'capacitor', 'clamp']",3
337,28117,"closed loop buck converter<p>closed loop buck converter</p>buck,dc to dc converter,simpower systems,simulation,simulink,power_conversion_control,power_electronics_control",16,0,1,0,19,closed loop buck converterclosed loop buck converterbuckdc conversion controlpower electronics control,"['closed', 'loop', 'buck', 'converterclosed', 'loop', 'buck', 'converterbuckdc', 'conversion', 'controlpower', 'electronics', 'control']",1
338,28173,"simulation of double side band (DSB) modulation & demodulation<p>Simulation of double side band (DSB) modulation &amp; demodulation by local oscillator. Input signal is your voice so speak into microphone. AWGN noise is added to signal. After filtering the noisy demodulated signal you can hear the received signal .</p>demodulation,dsb,filter,modulation,noise,modulation",13,0,1,0,12,double side band dsb modulation double side band dsb modulation amp demodulation local oscillator input signal voice speak microphone awgn noise add signal filtering noisy demodulate signal hear receive signal,"['double', 'side', 'band', 'dsb', 'modulation', 'double', 'side', 'band', 'dsb', 'modulation', 'amp', 'demodulation', 'local', 'oscillator', 'input', 'signal', 'voice', 'speak', 'microphone', 'awgn', 'noise', 'add', 'signal', 'filtering', 'noisy', 'demodulate', 'signal', 'hear', 'receive', 'signal']",5
339,28196,"Demo files to accompany the Introduction to Simulink webinar<p>This demo helps you apply the key features of Simulink that are discussed in the ""Introduction to Simulink"" webinarThe demo was specifically built using the features and concepts that are shown in the webinar; modeling a simple continuous system, adding nonlinearities, including documentation, using subsystems, masking, model reference, buses etc. If you are new to Simulink, it is recommended that you watch the webinar before you try out the exercises and look to implement new strategies for the game. Additional notes accompanying the demo. These notes have been intentionally kept fuzzy and listed in random order as it is expected that you will explore the model to understand all the components and their interaction with each other. 1. The demo simulates a 2 vs. 2 robot soccer match. The robots are assumed to be heavier than the football. Thus, any collision between the ball and the robots is perfectly elastic. The robotâs motion is not impacted by the collision. 2. Collision among robots is not implemented as they are considered as point masses. 3. Collision modeling in all cases is assumed to be as a spring contact model. When the object colliding with a boundary comes close to that boundary, a force proportional to the negative of the ""penetration distance"" is computed. 4. The strategy subsystems are implemented as referenced models. This was done intentionally so that competing teams could protect their strategies and run the simulation against each other. You can use the model reference protected mode to generate a mdlp file instead of mdl file (introduced in R2009b): &gt;&gt; Simulink.ModelReference.protect('Team_1_Strategy') and &gt;&gt; Simulink.ModelReference.protect('Team_2_Strategy') 5. Robot dynamics are simple dynamics of a point mass. However, the mass is inversely proportional to the battery power or ""stamina"" of the robot. Some damping is also put into the system to avoid too much overshoot. Also, each time the robot actuates itself or brakes, it incurs a small power loss thereby lowering its endurance in the game. 6. Positional coordinates in the system are 2D i.e. (x,y). The signal dimensions have been set explicitly. Click on any of the output ports-&gt;signal attributes of the masked subsystems to see the dimensions. 7. Ball dynamics has a simple implementation- same ""spring-based"" contact dynamics. From the ball's point of view, there are five contact forces to be accounted for: contacts with the 4 robots and those of the boundaries. 8. Observe that the solver has been changed to ode15s which is a stiff solver. The reason for this is that there is stiffness present in the system because of the contact/collision modeling with high spring constants. This can give rise to modes with relatively different dynamics. With a ode45 solver, the faster modes will force the adaptive solver to take smaller steps slowing the simulation down. ode15s ignores some of these fast dynamics. 9. All the icon drawing commands on the robot dynamics subsystems were implemented using the MATLAB patch commands. These were taken from the flags demo by Mike Woodward: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/8856-flags"">http://www.mathworks.com/matlabcentral/fileexchange/8856-flags</a> Use other flags to customize this. 10. 2D animation was done using Simulink 3D Animation. The field was textured with a grass image and a viewpoint was so selected so that it looked as 2D. The ""GOAL"" text was kept behind the field. The moment, a goal is scored, this text is translated to the front giving a TV effect. Texturing was also used to paint the bodies of the robots with the flags. You will have to change the images in order to change these. 11. Play around with the strategy subsystems to see if you can come up with efficient strategies to score goals early. Note that each of the teams has full knowledge of the others' positions and those of the ball. They also have knowledge of the remaining power in their team's batteries. There is no velocity information available. 12. You need Simulink 3D Animation installed to view animation.Exercises for you to try out: 1. How can you use Stateflow to implement a finite state machine that uses a mix of attack and defensive strategies based on ball location? 2. What block in Simulink should you use to input a new signal into these strategy subsystems so that time elapsed since the start of the game can be measured and hence be used as part of the strategy? 3. Identify the contents inside the MAT file used in the demo. What is the ""type"" of the contents of the data inside the file? Identify the function that loads this MAT file. Why did we need these data objects in our model? 4. Explore the possibility of using control strategies, like PID, to improve robot tracking</p>animation,ball,collaborative,control,football,game,introduction,machine,multagent,multiple,robocup,simulator,soccer,visualization,webinar,3d,animation,ball,collaborative,competition,control,fine,football,game,hockey,ice,introduction,machine,multagent,multiple,robocup,robot,robot soccer,robotics,simulator,simulink,soccer,state,theory,visualization,webinar,robot soccer,battery_system_management,power_electronics_control,football",125,7,3,0,145,demo file accompany introduction webinarthis demo help apply key feature discuss introduction webinarthe demo specifically build feature concept show webinar simple continuous add nonlinearities include documentation subsystem mask reference bus etc new recommend watch webinar try exercise look implement new strategy game additional note accompany demo note intentionally keep fuzzy list random order expect explore understand component interaction demo robot soccer match robot assume heavy football thus collision ball robot perfectly elastic robot motion impact collision collision among robot implement consider point mass collision case assume spring contact object collide boundary come close boundary force proportional negative penetration distance compute strategy subsystem implement referenced intentionally compete team could protect strategy run reference protected mode generate mdlp file instead mdl file introduce modelreference protect team strategy modelreference protect team strategy robot dynamic simple dynamic point mass however mass inversely proportional battery power stamen robot damp also put avoid much overshoot also time robot actuates brake incurs small power loss thereby lower endurance game positional coordinate signal dimension set explicitly click output port signal attribute mask subsystem see dimension ball dynamic simple implementation spring base contact dynamic ball point view five contact force account contact robots boundary observe solver change ode stiff solver reason stiffness present contact collision high spring constant give rise mode relatively different dynamic ode solver fast mode force adaptive solver take small step slow ode ignores fast dynamic icon draw command robot dynamic subsystem implement patch command take flag demo mike woodward http mathworks com matlabcentral fileexchange flag flag customize animation animation field textured grass image viewpoint select look goal text keep behind field moment goal score text translate front give effect texturing also paint body robots flag change image order change play around strategy subsystem see come efficient strategy score goal early note team full knowledge others position ball also knowledge remain power team battery velocity information available need animation instal view animation exercise try stateflow implement finite state machine mix attack defensive strategy base ball location block input new signal strategy subsystem time elapse since start game measure hence part strategy identify content inside mat file demo type content data inside file identify function load mat file need data object explore possibility control strategy like pid improve robot soccerbattery managementpower electronics controlfootball,"['demo', 'file', 'accompany', 'introduction', 'webinarthis', 'demo', 'help', 'apply', 'key', 'feature', 'discuss', 'introduction', 'webinarthe', 'demo', 'specifically', 'build', 'feature', 'concept', 'show', 'webinar', 'simple', 'continuous', 'add', 'nonlinearities', 'include', 'documentation', 'subsystem', 'mask', 'reference', 'bus', 'etc', 'new', 'recommend', 'watch', 'webinar', 'try', 'exercise', 'look', 'implement', 'new', 'strategy', 'game', 'additional', 'note', 'accompany', 'demo', 'note', 'intentionally', 'keep', 'fuzzy', 'list', 'random', 'order', 'expect', 'explore', 'understand', 'component', 'interaction', 'demo', 'robot', 'soccer', 'match', 'robot', 'assume', 'heavy', 'football', 'thus', 'collision', 'ball', 'robot', 'perfectly', 'elastic', 'robot', 'motion', 'impact', 'collision', 'collision', 'among', 'robot', 'implement', 'consider', 'point', 'mass', 'collision', 'case', 'assume', 'spring', 'contact', 'object', 'collide', 'boundary', 'come', 'close', 'boundary', 'force', 'proportional', 'negative', 'penetration', 'distance', 'compute', 'strategy', 'subsystem', 'implement', 'referenced', 'intentionally', 'compete', 'team', 'could', 'protect', 'strategy', 'run', 'reference', 'protected', 'mode', 'generate', 'mdlp', 'file', 'instead', 'mdl', 'file', 'introduce', 'modelreference', 'protect', 'team', 'strategy', 'modelreference', 'protect', 'team', 'strategy', 'robot', 'dynamic', 'simple', 'dynamic', 'point', 'mass', 'however', 'mass', 'inversely', 'proportional', 'battery', 'power', 'stamen', 'robot', 'damp', 'also', 'put', 'avoid', 'much', 'overshoot', 'also', 'time', 'robot', 'actuates', 'brake', 'incurs', 'small', 'power', 'loss', 'thereby', 'lower', 'endurance', 'game', 'positional', 'coordinate', 'signal', 'dimension', 'set', 'explicitly', 'click', 'output', 'port', 'signal', 'attribute', 'mask', 'subsystem', 'see', 'dimension', 'ball', 'dynamic', 'simple', 'implementation', 'spring', 'base', 'contact', 'dynamic', 'ball', 'point', 'view', 'five', 'contact', 'force', 'account', 'contact', 'robots', 'boundary', 'observe', 'solver', 'change', 'ode', 'stiff', 'solver', 'reason', 'stiffness', 'present', 'contact', 'collision', 'high', 'spring', 'constant', 'give', 'rise', 'mode', 'relatively', 'different', 'dynamic', 'ode', 'solver', 'fast', 'mode', 'force', 'adaptive', 'solver', 'take', 'small', 'step', 'slow', 'ode', 'ignores', 'fast', 'dynamic', 'icon', 'draw', 'command', 'robot', 'dynamic', 'subsystem', 'implement', 'patch', 'command', 'take', 'flag', 'demo', 'mike', 'woodward', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'flag', 'flag', 'customize', 'animation', 'animation', 'field', 'textured', 'grass', 'image', 'viewpoint', 'select', 'look', 'goal', 'text', 'keep', 'behind', 'field', 'moment', 'goal', 'score', 'text', 'translate', 'front', 'give', 'effect', 'texturing', 'also', 'paint', 'body', 'robots', 'flag', 'change', 'image', 'order', 'change', 'play', 'around', 'strategy', 'subsystem', 'see', 'come', 'efficient', 'strategy', 'score', 'goal', 'early', 'note', 'team', 'full', 'knowledge', 'others', 'position', 'ball', 'also', 'knowledge', 'remain', 'power', 'team', 'battery', 'velocity', 'information', 'available', 'need', 'animation', 'instal', 'view', 'animation', 'exercise', 'try', 'stateflow', 'implement', 'finite', 'state', 'machine', 'mix', 'attack', 'defensive', 'strategy', 'base', 'ball', 'location', 'block', 'input', 'new', 'signal', 'strategy', 'subsystem', 'time', 'elapse', 'since', 'start', 'game', 'measure', 'hence', 'part', 'strategy', 'identify', 'content', 'inside', 'mat', 'file', 'demo', 'type', 'content', 'data', 'inside', 'file', 'identify', 'function', 'load', 'mat', 'file', 'need', 'data', 'object', 'explore', 'possibility', 'control', 'strategy', 'like', 'pid', 'improve', 'robot', 'soccerbattery', 'managementpower', 'electronics', 'controlfootball']",0
340,28197,"Three different implementations of a kalman filter in Simulink(R).<p>The models included shows three different ways to implement a kalman filter in Simulink(R). The first uses the kalman function in control system toolbox to design a steady state kalman filter. The second is an embedded MATLAB(R) block implementation. The third is an implementation is pure basic Simulink(R) blocks. The last two implementations include calculation of the kalman gain.Use these models to learn about the kalman filter and how it can be implemented in Simulink(R). The filter is applied to a linear five-state dc motor model.</p>control systems,dc motor,filter analysis,filter design,kalman filter,simulation,simulink,state estimate,control systems,dc motor,filter analysis,filter design,kalman filter,simulation,simulink,state estimate,electric_motor_control,power_conversion_control,power_electronics_control",177,8,2,0,246,three different implementation kalman filter include show three different way implement kalman filter first kalman function control toolbox design steady state kalman filter second embed block implementation third implementation pure basic block last two implementation include calculation kalman gain learn kalman filter implement filter apply linear five state motor control systemsdc motorfilter analysisfilter designkalman estimatecontrol systemsdc motorfilter analysisfilter designkalman motor controlpower conversion controlpower electronics control,"['three', 'different', 'implementation', 'kalman', 'filter', 'include', 'show', 'three', 'different', 'way', 'implement', 'kalman', 'filter', 'first', 'kalman', 'function', 'control', 'toolbox', 'design', 'steady', 'state', 'kalman', 'filter', 'second', 'embed', 'block', 'implementation', 'third', 'implementation', 'pure', 'basic', 'block', 'last', 'two', 'implementation', 'include', 'calculation', 'kalman', 'gain', 'learn', 'kalman', 'filter', 'implement', 'filter', 'apply', 'linear', 'five', 'state', 'motor', 'control', 'systemsdc', 'motorfilter', 'analysisfilter', 'designkalman', 'estimatecontrol', 'systemsdc', 'motorfilter', 'analysisfilter', 'designkalman', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
341,28259,"""RTW-EC Tutorial (Japanese)"" Demo files.ãRTW-ECãç¨ããçµã¿è¾¼ã¿å¶å¾¡ãã­ã°ã©ã éçº ãã¥ã¼ããªã¢ã«ãã®ä¾é¡ãã¡ã¤ã«ã§ãã<p>Demo files used in ""RTW-EC Code Generation Tutorial (Japanese)"".Real-Time Workshop Embedded Coder(RTW-EC)ã¯ãSimulinkã¢ãã«ï¼ãµãã·ã¹ãã ããéç£ç¨çµã¿è¾¼ã¿ã³ã¼ããçæããèªåã³ã¼ãçæãã¼ã«ã§ããæ¬ãã¥ã¼ããªã¢ã«ã§ã¯RTW-ECã®æ¦è¦ããã³åºæ¬çãªä½¿ç¨æ¹æ³ã«ã¤ãã¦èª¬æãã¦ãã¾ãã</p>control design,embedded code,realtime workshop embedded coder,simulink",159,11,3,0,153,rtw tutorial japanese demo file rtw file rtw code generation tutorial japanese real time workshop embed coder rtw designembedded coderealtime workshop embed,"['rtw', 'tutorial', 'japanese', 'demo', 'file', 'rtw', 'file', 'rtw', 'code', 'generation', 'tutorial', 'japanese', 'real', 'time', 'workshop', 'embed', 'coder', 'rtw', 'designembedded', 'coderealtime', 'workshop', 'embed']",0
342,28260,"""SL Fixed-Point Tutorial"" demo files.ãSimulink Fixed Pointï¼RTW-ECãç¨ããåºå®å°æ°ç¹ã³ã¼ãçæ ãã¥ã¼ããªã¢ã«ãã®ä¾é¡ãã¡ã¤ã«ã§ãã<p>Simulink Fixed Pointã¯åºå®å°æ°ç¹æ°ãç¨ããSimulinkã·ãã¥ã¬ã¼ã·ã§ã³ããã³Real-Time Workshop Embedded Coder(RTW-EC)ã«ããåºå®å°æ°ç¹ã³ã¼ãçææ©è½ãæä¾ããSimulinkã®ãªãã·ã§ã³è£½åã§ããæ¬ãã¥ã¼ããªã¢ã«ã§ã¯Simulink Fixed Pointã®åºæ¬çãªä½¿ç¨æ¹æ³ããã³åºå®å°æ°ç¹ã³ã¼ãã®çææ¹æ³ã«ã¤ãã¦èª¬æãã¦ãã¾ãã</p>control design,embedded code,fixed point,simulink,stateflow",227,10,3,0,204,fix point tutorial demo file fix pointrtw fixed time workshop embed coder rtw fix designembedded codefixed,"['fix', 'point', 'tutorial', 'demo', 'file', 'fix', 'pointrtw', 'fixed', 'time', 'workshop', 'embed', 'coder', 'rtw', 'fix', 'designembedded', 'codefixed']",0
343,28261,"""Fixed-Point Toolbox Tutorial (Japanese)"" demo files.ãFixed-Point Toolbox ãã¥ã¼ããªã¢ã«ãã®ä¾é¡ãã¡ã¤ã«ã§ãã<p>Fixed-Point Toolboxã¯åºå®å°æ°ç¹æ°ãªãã¸ã§ã¯ãããã³åºå®å°æ°ç¹æ¼ç®æ©è½ãæä¾ããMATLABã®ãªãã·ã§ã³è£½åã§ããæ¬ãã¥ã¼ããªã¢ã«ã§ã¯Fixed-Point Toolboxã®åºæ¬çãªä½¿ç¨æ¹æ³ããã³åºå®å°æ°ç¹æ¼ç®ãã­ã°ã©ã ã®ä½ææ¹æ³ã«ã¤ãã¦èª¬æãã¦ãã¾ãã</p>fixed point,matlab,simulink",10,0,1,0,13,fix point toolbox tutorial japanese demo file fix point toolbox point point,"['fix', 'point', 'toolbox', 'tutorial', 'japanese', 'demo', 'file', 'fix', 'point', 'toolbox', 'point', 'point']",7
344,28262,"""SL Fixed-Point Tutorial R2008a (Japanese)"" demo files.ãSimulink åºå®å°æ°ç¹ãã¥ã¼ããªã¢ã« (R2008a)ãã®ä¾é¡ãã¡ã¤ã«ã§ãã<p>Demo files used in ""Simulink Fixed-Point Tutorial R2008a (Japanese)"".Simulink Fixed Pointã®åºæ¬çãªä½¿ç¨æ¹æ³ããã³åºå®å°æ°ç¹C/C++ã³ã¼ãã®çææ¹æ³ã«ã¤ãã¦èª¬æãã¦ãã¾ãã</p>control design,embedded code,fixed point,simulink,stateflow",228,8,3,0,213,fix point tutorial japanese demo file åºå®å°æ°ç¹ãã¥ã¼ããªã¢ã« ã®ä¾é¡ãã¡ã¤ã«ã§ãdemo file fix point tutorial japanese fix designembedded codefixed,"['fix', 'point', 'tutorial', 'japanese', 'demo', 'file', 'åºå®å°æ°ç¹ãã¥ã¼ããªã¢ã«', 'ã®ä¾é¡ãã¡ã¤ã«ã§ãdemo', 'file', 'fix', 'point', 'tutorial', 'japanese', 'fix', 'designembedded', 'codefixed']",0
345,28274,"This script rewires all from/goto based connections in a given subsystem or a complete model.<p>This script rewires all from/goto block connections. Therefore, it delete all from/goto blocks and draws regular lines between the relevant source and destination ports. The user can pass a subsystem or a complete model as an argument to specify the scope of work. Inport/Outports are created as needed when crossing subsystem boundaries.This script is compatible with all MATLAB releases since R2006a until R2010a. The models used for testing have been created with R2007b and are included in the package.</p>from,goto,modeling,redraw,refactoring,replace,rewire,simulink",107,13,4,0,74,script rewire goto base connection give subsystem complete script rewires goto block connection therefore delete goto block draw regular line relevant source destination port user pas subsystem complete argument specify scope work inport outport create need cross subsystem boundary script compatible release since test create included package,"['script', 'rewire', 'goto', 'base', 'connection', 'give', 'subsystem', 'complete', 'script', 'rewires', 'goto', 'block', 'connection', 'therefore', 'delete', 'goto', 'block', 'draw', 'regular', 'line', 'relevant', 'source', 'destination', 'port', 'user', 'pas', 'subsystem', 'complete', 'argument', 'specify', 'scope', 'work', 'inport', 'outport', 'create', 'need', 'cross', 'subsystem', 'boundary', 'script', 'compatible', 'release', 'since', 'test', 'create', 'included', 'package']",0
346,28321,"You can confirm difference betwwen hand writing code and auto  generation code. <p>This presentation introduces comparing between the hand coding and auto code generation with Simulink HDL.It uses simple communications models to mention merit/demerit. Additionally,The frame synchronization explained by the book was designed with Stateflow.The figure which is in the book and Statefow model are very similar.You can assume the book to be specifications.You can confirm the link function between specifications and the Simulink model and the coverages of the verification. Moreover, there are  examples of modeling to generate the code which conforms to STARC. These are models by which the person who wants to use Simulink HDL Coder can confirm the main function hereafter. ãã³ãã³ã¼ãã¨Simulink HDL Coderã«ãã£ã¦èªåçæãããã³ã¼ãã®ã¡ãªããããã¡ãªãããæ¯è¼ãã¾ããã¾ããæ¬ã«è¨è¼ããã¦ãããã¬ã¼ã åæã®ã¢ãã«ãä»æ§æ¸ã¨ãã¦Stateflowã§ã¢ããªã³ã°ããä¾ããããæ¬ã«è¨è¼ããã¦ããç¶æé·ç§»å³ã¨Stateflowã§è¨è¿°ãããã¢ãã«ãéå¸¸ã«ä¼¼ã¦ãããè¨è¿°ãããããäºããçè§£é ãã¾ããæ´ã«ãSTARCã«æºæ ãããããã®ä¸ä¾ãªã©ãåãä¸ãã¦ãããSimulink HDL Coder ãåãã¦ä½¿ç¨ããæ¹ã«ä¸é£ã®æ©è½ãç¢ºèªãã¦é ãã¾ãã</p>aerospace,automotive,communications,control design,image processing,simulink",306,28,3,0,319,confirm difference betwwen hand write code auto generation code presentation introduces compare hand cod auto code generation hdl simple communication mention merit demerit additionallythe frame synchronization explain book design stateflow figure book statefow similar assume book specification confirm link function specification coverages verification moreover examples generate code conforms starc person want hdl coder confirm main function hereafter hdl hdl coder designimage,"['confirm', 'difference', 'betwwen', 'hand', 'write', 'code', 'auto', 'generation', 'code', 'presentation', 'introduces', 'compare', 'hand', 'cod', 'auto', 'code', 'generation', 'hdl', 'simple', 'communication', 'mention', 'merit', 'demerit', 'additionallythe', 'frame', 'synchronization', 'explain', 'book', 'design', 'stateflow', 'figure', 'book', 'statefow', 'similar', 'assume', 'book', 'specification', 'confirm', 'link', 'function', 'specification', 'coverages', 'verification', 'moreover', 'examples', 'generate', 'code', 'conforms', 'starc', 'person', 'want', 'hdl', 'coder', 'confirm', 'main', 'function', 'hereafter', 'hdl', 'hdl', 'coder', 'designimage']",5
347,28325,"This model is specially for students who want to feel the working of dc motor.<p>The dc motor speed control system will show how the speed of the dc motor can be controlled based on PWM pulses.This model is specially made for students trying to know speed of the dc motor.</p>dc motor speed control,dc motor speed control,dc motor speed control,electric_motor_control,power_conversion_control,power_electronics_control,dc motor speed control",33,3,3,0,33,specially student want feel work motor motor speed control show speed motor control base pwm pulse specially make student try know speed motor motor speed controldc motor speed controldc motor speed controlelectric motor controlpower conversion controlpower electronics controldc motor speed control,"['specially', 'student', 'want', 'feel', 'work', 'motor', 'motor', 'speed', 'control', 'show', 'speed', 'motor', 'control', 'base', 'pwm', 'pulse', 'specially', 'make', 'student', 'try', 'know', 'speed', 'motor', 'motor', 'speed', 'controldc', 'motor', 'speed', 'controldc', 'motor', 'speed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motor', 'speed', 'control']",1
348,28386,"This demo shows plant modeling and controller design for a multi stage rolling mill process. <p>Sheet Rolling Mill processes involve progressive thickness reduction of continuous sheet metal in multiple stages. Some of the control variables of interest are exit thickness, throughput and the tension in the sheet as it passes from one stage to the other. Following page has links to the webinar series that cover plant modeling and controller design aspects: <a href=""http://www.mathworks.com/programs/rolling_mill_webinars/index.html"">http://www.mathworks.com/programs/rolling_mill_webinars/index.html</a> This demo model takes advantage of physical modeling tools to model interaction of the sheet with rollers (for thickness reduction) and looper mechanisms (for tension regulation) as well as electric and hydraulic actuators driving the different machine elements. The plant modeling builds on the single stage rolling mill model implemented by Alec Stothert: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/13978-simulink%C2%AE-for-industrial-control-of-a-sheet-metal-rolling-application"">http://www.mathworks.com/matlabcentral/fileexchange/13978-simulink%C2%AE-for-industrial-control-of-a-sheet-metal-rolling-application</a>   A multi loop control architecture[1] is used to control the process variables using a combination of PID and other higher order controllers. A supervisory logic for fault detection and recovery is also implemented using Stateflow. Simulink PLC Coder can be used to generate IEC 61131-3 structured text from the supervisory logic and other controllers to deply on a PLC controller. The plant modeling can be easily extended for a more general  web processing application involving any other material like paper, carpet, tape etc.                      [1] I.S. Choi, J.A. Rossiter and P.J. Fleming, âLooper and tension control in hot rolling mills: A survey,â Journal of Process Control 17 (2007) 509â521 </p>control design,industrial automation,machinery design,modeling,pid,plc,simulation,simulink,industrial automation,simulation,control design",473,39,5,4,447,demo show plant controller design multi stage roll mill process sheet roll mill process involve progressive thickness reduction continuous sheet metal multiple stage control variables interest exit thickness throughput tension sheet pass one stage follow page link webinar series cover plant controller design aspects http mathworks com program roll mill webinars index html demo take advantage physical modeling tool interaction sheet roller thickness reduction looper mechanism tension regulation well electric hydraulic actuator drive different machine element plant build single stage roll mill implement alec stothert http mathworks com matlabcentral fileexchange industrial control sheet metal roll application multi loop control architecture control process variable combination pid high order controller supervisory logic fault detection recovery also implement stateflow plc coder generate iec structure text supervisory logic controller deply plc controller plant easily extend general web processing application involve material like paper carpet tape etc choi rossiter fleming looper tension control hot roll mill survey journal process control control design,"['demo', 'show', 'plant', 'controller', 'design', 'multi', 'stage', 'roll', 'mill', 'process', 'sheet', 'roll', 'mill', 'process', 'involve', 'progressive', 'thickness', 'reduction', 'continuous', 'sheet', 'metal', 'multiple', 'stage', 'control', 'variables', 'interest', 'exit', 'thickness', 'throughput', 'tension', 'sheet', 'pass', 'one', 'stage', 'follow', 'page', 'link', 'webinar', 'series', 'cover', 'plant', 'controller', 'design', 'aspects', 'http', 'mathworks', 'com', 'program', 'roll', 'mill', 'webinars', 'index', 'html', 'demo', 'take', 'advantage', 'physical', 'modeling', 'tool', 'interaction', 'sheet', 'roller', 'thickness', 'reduction', 'looper', 'mechanism', 'tension', 'regulation', 'well', 'electric', 'hydraulic', 'actuator', 'drive', 'different', 'machine', 'element', 'plant', 'build', 'single', 'stage', 'roll', 'mill', 'implement', 'alec', 'stothert', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'industrial', 'control', 'sheet', 'metal', 'roll', 'application', 'multi', 'loop', 'control', 'architecture', 'control', 'process', 'variable', 'combination', 'pid', 'high', 'order', 'controller', 'supervisory', 'logic', 'fault', 'detection', 'recovery', 'also', 'implement', 'stateflow', 'plc', 'coder', 'generate', 'iec', 'structure', 'text', 'supervisory', 'logic', 'controller', 'deply', 'plc', 'controller', 'plant', 'easily', 'extend', 'general', 'web', 'processing', 'application', 'involve', 'material', 'like', 'paper', 'carpet', 'tape', 'etc', 'choi', 'rossiter', 'fleming', 'looper', 'tension', 'control', 'hot', 'roll', 'mill', 'survey', 'journal', 'process', 'control', 'control', 'design']",0
349,28403,"Simulation of Half bridge and Full bridge Inverter<p>The model simulates half bridge and full bridge inverter using the sinusoidal PWM pulses. Fourier analysis is performed and can be compared using power gui block as done. Moreover the effect of load inductance and resistance on total harmonic distortion can be observed. The model was developed considering the examples of Matlab.</p>converter,dc to ac converter,full bridge inverter,half bridge inverter,inverter,power electronics,power system,pwm,sinusoidal pwm,electric_motor_control,power_conversion_control,power_electronics_control",75,2,2,0,72,half bridge full bridge inverterthe half bridge full bridge inverter sinusoidal pwm pulse fourier analysis perform compare power gui block moreover effect load inductance resistance total harmonic distortion observe developed consider example converterdc converterfull bridge inverterhalf bridge pwmelectric motor controlpower conversion controlpower electronics control,"['half', 'bridge', 'full', 'bridge', 'inverterthe', 'half', 'bridge', 'full', 'bridge', 'inverter', 'sinusoidal', 'pwm', 'pulse', 'fourier', 'analysis', 'perform', 'compare', 'power', 'gui', 'block', 'moreover', 'effect', 'load', 'inductance', 'resistance', 'total', 'harmonic', 'distortion', 'observe', 'developed', 'consider', 'example', 'converterdc', 'converterfull', 'bridge', 'inverterhalf', 'bridge', 'pwmelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
350,28404,"Regular sampling at positive peak of the carrier -- Symmetric modulation<p>The model simulates three phase inverter with symmetric PWM modulation in which reference is sampled at the positive peak of the carrier and is held constant till the next positive peak of the carrier appears. The model demonstrates symmetric regular sampling at positive peaks of carrier and fourier analysis of three phase inverter with this modulation technique. Symmetric modulation can be observed on the scope used by zooming the waveforms to large scale on time axis.</p>control,converter,drives,electrical drives,electronics,inverter,power electronics,power system,pwm,regular sampling,sinusoidal pwm,symmetric pwm,three phase inverter,sin pwm inverter,electric_motor_control,power_conversion_control,power_electronics_control",100,3,2,0,112,regular sample positive peak carrier symmetric modulationthe three phase inverter symmetric pwm modulation reference sample positive peak carrier hold constant till next positive peak carrier appear demonstrate symmetric regular sample positive peak carrier fourier analysis three phase inverter modulation technique symmetric modulation observe scope zooming waveform large scale time axis pwmsymmetric pwmthree phase invertersin pwm motor controlpower conversion controlpower electronics control,"['regular', 'sample', 'positive', 'peak', 'carrier', 'symmetric', 'modulationthe', 'three', 'phase', 'inverter', 'symmetric', 'pwm', 'modulation', 'reference', 'sample', 'positive', 'peak', 'carrier', 'hold', 'constant', 'till', 'next', 'positive', 'peak', 'carrier', 'appear', 'demonstrate', 'symmetric', 'regular', 'sample', 'positive', 'peak', 'carrier', 'fourier', 'analysis', 'three', 'phase', 'inverter', 'modulation', 'technique', 'symmetric', 'modulation', 'observe', 'scope', 'zooming', 'waveform', 'large', 'scale', 'time', 'axis', 'pwmsymmetric', 'pwmthree', 'phase', 'invertersin', 'pwm', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
351,28405,"Regular sampling at positive and negative peak of carrier<p>The model simulates asymmetric modulation which can be observed at second scope by zooming the waveform on time axis. In this modulation technique the reference signal is sampled at positive as well as at negative peak of the carrier and held constant between two sampled points. Three phase inverter was used to demonstrate the effect of asymmetric modulation on the output and Fourier analysis is presented using GUI block.</p>asymmetric modulation,control,converter,dc to ac converter,drives,electrical drives,inverter,modulation,power electronics,power system,pwm,regular sampling,sinusoidal pwm,three phase inverter,electric_motor_control,power_conversion_control,power_electronics_control,ineverter",102,3,2,0,115,regular sample positive negative peak carrierthe asymmetric modulation observe second scope zoom waveform time axis modulation technique reference signal sample positive well negative peak carrier hold constant two sample point three phase inverter demonstrate effect asymmetric modulation output fourier analysis present gui block asymmetric pwmthree phase motor controlpower conversion controlpower electronics,"['regular', 'sample', 'positive', 'negative', 'peak', 'carrierthe', 'asymmetric', 'modulation', 'observe', 'second', 'scope', 'zoom', 'waveform', 'time', 'axis', 'modulation', 'technique', 'reference', 'signal', 'sample', 'positive', 'well', 'negative', 'peak', 'carrier', 'hold', 'constant', 'two', 'sample', 'point', 'three', 'phase', 'inverter', 'demonstrate', 'effect', 'asymmetric', 'modulation', 'output', 'fourier', 'analysis', 'present', 'gui', 'block', 'asymmetric', 'pwmthree', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",4
352,28441,"Model of a hybrid-electric vehicle with system-level and detailed variants of electrical system.<p>This file contains a hybrid-electric vehicle model built using Simscape, Simscape Electrical, and Simscape Driveline that can be configured for system-level tests or power quality analyses. Model variants for the electrical, battery, and vehicle dynamics systems can be selected using variant subsystems. A battery model created with the Simscape language is incorporated into the model. Supervisory logic is implemented with Stateflow. This model can be configured for hardware-in-the-loop testing.  Please read the README.txt file to get started. Learn about vehicle powertrain modeling with Simscape: <a href=""https://www.mathworks.com/videos/vehicle-powertrain-simulation-with-simscape-driveline-119545.html"">https://www.mathworks.com/videos/vehicle-powertrain-simulation-with-simscape-driveline-119545.html</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>popular file 2014,hev,hybrid electric vehicle,physical modeling,power quality,simdriveline,simelectronics,simscape,simscape language,power quality,hev,simdriveline,simelectronics,hev,hev,hev,simscape language,hybrid electric vehicle,battery_system_management,power_electronics_control,hev,physical modeling,through the road",8833,1056,5,52,8318,hybrid electric vehicle level detail variant electrical file contains hybrid electric vehicle build simscape simscape electrical simscape driveline configure level test power quality analyse variant electrical battery vehicle dynamic select variant subsystem battery create simscape language incorporate supervisory logic implement stateflow configure hardware loop test please read readme txt file get start learn vehicle powertrain simscape mathworks com videos vehicle powertrain simscape driveline html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling popular file hevhybrid electric vehiclephysical modelingpower languagepower languagehybrid electric vehiclebattery managementpower electronics modelingthrough road,"['hybrid', 'electric', 'vehicle', 'level', 'detail', 'variant', 'electrical', 'file', 'contains', 'hybrid', 'electric', 'vehicle', 'build', 'simscape', 'simscape', 'electrical', 'simscape', 'driveline', 'configure', 'level', 'test', 'power', 'quality', 'analyse', 'variant', 'electrical', 'battery', 'vehicle', 'dynamic', 'select', 'variant', 'subsystem', 'battery', 'create', 'simscape', 'language', 'incorporate', 'supervisory', 'logic', 'implement', 'stateflow', 'configure', 'hardware', 'loop', 'test', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'learn', 'vehicle', 'powertrain', 'simscape', 'mathworks', 'com', 'videos', 'vehicle', 'powertrain', 'simscape', 'driveline', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'popular', 'file', 'hevhybrid', 'electric', 'vehiclephysical', 'modelingpower', 'languagepower', 'languagehybrid', 'electric', 'vehiclebattery', 'managementpower', 'electronics', 'modelingthrough', 'road']",7
353,28451,"Simulink design pattern for solving differential equations, visualize results in MATLAB graphics<p>One of the readers who attended the introductory Simulink webinar asked me how to implement differential equations in Simulink and visualize the results in a MATLAB plot. This demo attempts to answer those kinds of questions.Notes on this submission:1. The approach is to represent the equations using Simulink blocks and then use MATLAB graphics to plot the results. The advantage of using the graphical approach is with the ability to customize the solver configurations and step through the solution in time. 2. The design pattern shows a two stage model in which the integrator plays the role of integrating the ODE.  The terms are collected and fed into this integrator. 3. As mentioned in the webinar, we use vector processing capabilities of the integrator to process the three terms simultaneously.4. The concept of feedback is important as the solver solves for the next step in the simulation based on its current states. 5. We use MATLAB S-Functions to incorporate visualization code for the MATLAB GUI. Also, observe that we move the camera around so that you get a good visual of how the 3D curve looks like. There is also a model that uses a Level-1 S-function for those who may be interested in it for legacy reasons.6. Look into the MATLAB S-Function code as to how a red marker that acts like a tracer is created.7. The S-Function block was modeled as a discrete block with a sampling time so that a high fidelity plot could be obtained(at the cost of performance). There is a performance trade-off that you should look out for when visualizing results.8. Look into the code for the various S-Functions and read the comments to understand how the code is structured.9. Notes on the Lorenz Attractor: The study of strange attractors began with the publication by E. N. Lorenz- ""Deterministic non-periodic flow""(Journal of Atmospheric Science, 20:130-141, 1963). In the process of investigating meteorological models, Edward Lorenz found that very small truncation or rounding errors in his algorithms produced large changes in the resulting predictions. This led to the study of ""strange"" or chaotic attractors. One crude way to visualize attractors is a set such that if during the evolution of the dynamics of the system, one of the states hits a point in that set, it will continue to remain in that set. From a simulation point of view, it is interesting to see the existence of such sets for certain nonlinear dynamical systems. If this attractor is chaotic meaning it has sensitive dependence on initial conditions, then it is called a strange attractor. It was particularly an interesting result which he observed that for parameter values sigma=10, beta=8/3, and rho=28, the solutions start revolving about two repelling equilibirum points at (sqrt(72), sqrt(72.27).The number of times the solution revolves around one equilibirum point before switching to the other has no discernible pattern. More information on this can be obtained in a standard introductory nonlinear systems text.10. Questions to ponder about:a. How would you project this 3D trajectory onto a arbitrary plane surface and visualize it during the simulation? Would the trajectory  intersect itself?b. How would you visualize the Poincare map?c. How would you compute the number of turns the red marker makes around the equilibrium point before switching to the other? Could this number be used to generate random numbers?  </p>3d,attractor,chaos,differential,equation,graphics,lorenz,matlab,ode,sfunction,simulink,visualization",42,2,2,0,54,design pattern solve differential equation visualize result graphicsone reader attend introductory webinar ask implement differential equation visualize result plot demo attempt answer kind question note submission approach represent equation block graphic plot result advantage graphical approach ability customize solver configuration step solution time design pattern show two stage integrator play role integrate ode term collect fed integrator mention webinar vector processing capability integrator process three term concept feedback important solver solves next step base current state function incorporate visualization code gui also observe move camera around get good visual curve look like also level function may interest legacy reason look function code red marker act like tracer create function block discrete block sample time high fidelity plot could obtain cost performance performance trade look visualize result look code various function read comment understand code structure note lorenz attractor study strange attractor begin publication lorenz deterministic non periodic flow journal atmospheric science process investigate meteorological edward lorenz find small truncation round error algorithms produce large change result prediction lead study strange chaotic attractor one crude way visualize attractor set evolution dynamic one state hit point set continue remain set point view interest see existence set certain nonlinear dynamical attractor chaotic meaning sensitive dependence initial condition call strange attractor particularly interesting result observe parameter value sigma beta rho solution start revolve two repel equilibirum point sqrt sqrt number time solution revolve around one equilibirum point switch discernible pattern information obtain standard introductory nonlinear text question ponder would project trajectory onto arbitrary plane surface visualize would trajectory intersect would visualize poincare map would compute number turn red marker make around equilibrium point switching could number generate random number,"['design', 'pattern', 'solve', 'differential', 'equation', 'visualize', 'result', 'graphicsone', 'reader', 'attend', 'introductory', 'webinar', 'ask', 'implement', 'differential', 'equation', 'visualize', 'result', 'plot', 'demo', 'attempt', 'answer', 'kind', 'question', 'note', 'submission', 'approach', 'represent', 'equation', 'block', 'graphic', 'plot', 'result', 'advantage', 'graphical', 'approach', 'ability', 'customize', 'solver', 'configuration', 'step', 'solution', 'time', 'design', 'pattern', 'show', 'two', 'stage', 'integrator', 'play', 'role', 'integrate', 'ode', 'term', 'collect', 'fed', 'integrator', 'mention', 'webinar', 'vector', 'processing', 'capability', 'integrator', 'process', 'three', 'term', 'concept', 'feedback', 'important', 'solver', 'solves', 'next', 'step', 'base', 'current', 'state', 'function', 'incorporate', 'visualization', 'code', 'gui', 'also', 'observe', 'move', 'camera', 'around', 'get', 'good', 'visual', 'curve', 'look', 'like', 'also', 'level', 'function', 'may', 'interest', 'legacy', 'reason', 'look', 'function', 'code', 'red', 'marker', 'act', 'like', 'tracer', 'create', 'function', 'block', 'discrete', 'block', 'sample', 'time', 'high', 'fidelity', 'plot', 'could', 'obtain', 'cost', 'performance', 'performance', 'trade', 'look', 'visualize', 'result', 'look', 'code', 'various', 'function', 'read', 'comment', 'understand', 'code', 'structure', 'note', 'lorenz', 'attractor', 'study', 'strange', 'attractor', 'begin', 'publication', 'lorenz', 'deterministic', 'non', 'periodic', 'flow', 'journal', 'atmospheric', 'science', 'process', 'investigate', 'meteorological', 'edward', 'lorenz', 'find', 'small', 'truncation', 'round', 'error', 'algorithms', 'produce', 'large', 'change', 'result', 'prediction', 'lead', 'study', 'strange', 'chaotic', 'attractor', 'one', 'crude', 'way', 'visualize', 'attractor', 'set', 'evolution', 'dynamic', 'one', 'state', 'hit', 'point', 'set', 'continue', 'remain', 'set', 'point', 'view', 'interest', 'see', 'existence', 'set', 'certain', 'nonlinear', 'dynamical', 'attractor', 'chaotic', 'meaning', 'sensitive', 'dependence', 'initial', 'condition', 'call', 'strange', 'attractor', 'particularly', 'interesting', 'result', 'observe', 'parameter', 'value', 'sigma', 'beta', 'rho', 'solution', 'start', 'revolve', 'two', 'repel', 'equilibirum', 'point', 'sqrt', 'sqrt', 'number', 'time', 'solution', 'revolve', 'around', 'one', 'equilibirum', 'point', 'switch', 'discernible', 'pattern', 'information', 'obtain', 'standard', 'introductory', 'nonlinear', 'text', 'question', 'ponder', 'would', 'project', 'trajectory', 'onto', 'arbitrary', 'plane', 'surface', 'visualize', 'would', 'trajectory', 'intersect', 'would', 'visualize', 'poincare', 'map', 'would', 'compute', 'number', 'turn', 'red', 'marker', 'make', 'around', 'equilibrium', 'point', 'switching', 'could', 'number', 'generate', 'random', 'number']",0
354,28455,"The angular control of the stepping motor was model base design. ã¹ãããã³ã°ã¢ã¼ã¿ã®è§åº¦å¶å¾¡ãã¢ãã«ãã¼ã¹éçºãã¾ããã<p>The model is composed of subsystem of controller and subsystem of numerical expression of stepping motor. The controller is composed of the Stateflow that generates driving pulse and Simulink that decides the direction of the rotation and the number of steps. The stepping motor model derives the expression of the stepping motor of the PM type of two phases. ã¢ãã«ã¯ãã³ã³ãã­ã¼ã©ã®ãµãã·ã¹ãã ã¨ã¹ãããã³ã°ã¢ã¼ã¿ã®æ°å¼ã¢ãã«ã®ãµãã·ã¹ãã ã§æ§æããã¦ãã¾ããã³ã³ãã­ã¼ã©ã¯ãåè»¢æ¹åã¨ã¹ãããæ°ãå¶å¾¡ããSimulinké¨ã¨ãé§åãã«ã¹ãçæããStateflowé¨ã§æ§æããã¦ãã¾ããã¹ãããã³ã°ã¢ã¼ã¿ã¢ãã«ã¯2ç¸ã®PMåã®ã¹ãããã³ã°ã¢ã¼ã¿ã®æ°å¼ãå°åºãã¦ãã¾ãã</p>model base design,simulink,stateflow,stepping motor,electric_motor_control,power_electronics_control",70,5,3,0,83,angular control step motor base design compose subsystem controller subsystem numerical expression step motor controller compose stateflow generates drive pulse decides direction rotation number step step motor derives expression step motor type two phase base motorelectric motor controlpower electronics control,"['angular', 'control', 'step', 'motor', 'base', 'design', 'compose', 'subsystem', 'controller', 'subsystem', 'numerical', 'expression', 'step', 'motor', 'controller', 'compose', 'stateflow', 'generates', 'drive', 'pulse', 'decides', 'direction', 'rotation', 'number', 'step', 'step', 'motor', 'derives', 'expression', 'step', 'motor', 'type', 'two', 'phase', 'base', 'motorelectric', 'motor', 'controlpower', 'electronics', 'control']",3
355,28487,"Files from the webinar: Speeding up optimization problems with parallel computing<p>Fiels from the webinar: Speeding up optimization problems with parallel computing Description: This download contains the MATLAB functions/scripts used in the August 10th webinar <a href=""http://www.mathworks.com/videos/speeding-up-optimization-problems-using-parallel-computing-81753.html"">http://www.mathworks.com/videos/speeding-up-optimization-problems-using-parallel-computing-81753.html</a> . There are five examples that show how to use parallel computing to speed up optimization problems.</p>aerospace,automotive,demo,finance,genetic algorithm,optimization,parallel,parallel computing,pick of the week,portfolio optimization,potw,pick of the week,potw",434,41,5,0,406,file webinar speed optimization problem parallel computingfiels webinar speed optimization problem parallel compute description download contain function script august webinar http mathworks com videos speed optimization problem parallel compute html five example show parallel compute speed optimization problem computingpick weekportfolio weekpotw,"['file', 'webinar', 'speed', 'optimization', 'problem', 'parallel', 'computingfiels', 'webinar', 'speed', 'optimization', 'problem', 'parallel', 'compute', 'description', 'download', 'contain', 'function', 'script', 'august', 'webinar', 'http', 'mathworks', 'com', 'videos', 'speed', 'optimization', 'problem', 'parallel', 'compute', 'html', 'five', 'example', 'show', 'parallel', 'compute', 'speed', 'optimization', 'problem', 'computingpick', 'weekportfolio', 'weekpotw']",7
356,28536,"PWM Rectifier<p>The model simulates a three phase Sinusoidal PWM rectifier. Applied Voltage, switching frequency and sampling factor can be changed from the model properties block.</p>control design,converter,electronics,power electronics,power system,pwm,rectifier,sinusoidal pwm,simulink,pwm,electric_motor_control,power_conversion_control,power_electronics_control",44,0,1,0,45,pwm rectifierthe three phase sinusoidal pwm rectifier applied voltage switch frequency sample factor change property block control motor controlpower conversion controlpower electronics control,"['pwm', 'rectifierthe', 'three', 'phase', 'sinusoidal', 'pwm', 'rectifier', 'applied', 'voltage', 'switch', 'frequency', 'sample', 'factor', 'change', 'property', 'block', 'control', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
357,28554,"Wprowadzenie do Simulinka w formie krÃ³tkiego kursu w jÄzyku polskim.<p>ZawartoÅÄ:1. WstÄp i pierwsze proste modele2. Lekcja tworzenia czytelnych modeli3. Pierwszy trudniejszy model4. Drugi trudniejszy model5. Tworzenie wÅasnych blokÃ³w6. Kilka sÅÃ³w o wÅasnych systemach7. Korzystanie z worskpace'u Matlaba8. Model gradacji owadÃ³w: Choristoneura fumiferanaOmawiane przykÅady znajdujÄ siÄ w katalogu examples.</p>kurs simulinka,simulink",61,4,2,0,69,wprowadzenie formie krÃ³tkiego kursu jÄzyku polskim zawartoÅÄ wstÄp pierwsze proste modele lekcja tworzenia czytelnych modeli pierwszy trudniejszy drugi trudniejszy tworzenie wÅasnych blokÃ³w kilka sÅÃ³w wÅasnych systemach korzystanie worskpace matlaba gradacji owadÃ³w choristoneura przykÅady znajdujÄ siÄ katalogu examples kurs,"['wprowadzenie', 'formie', 'krÃ³tkiego', 'kursu', 'jÄzyku', 'polskim', 'zawartoÅÄ', 'wstÄp', 'pierwsze', 'proste', 'modele', 'lekcja', 'tworzenia', 'czytelnych', 'modeli', 'pierwszy', 'trudniejszy', 'drugi', 'trudniejszy', 'tworzenie', 'wÅasnych', 'blokÃ³w', 'kilka', 'sÅÃ³w', 'wÅasnych', 'systemach', 'korzystanie', 'worskpace', 'matlaba', 'gradacji', 'owadÃ³w', 'choristoneura', 'przykÅady', 'znajdujÄ', 'siÄ', 'katalogu', 'examples', 'kurs']",2
358,28563,"Toolbox models rotating, elastic shafts with disks<p>The toolbox implements a simple (Timoshenko) beam with rigid disks. The model computes the eigenvectos (modes) at various speeds of rotation incorporating various effects like gyroscopics, stiffness of bearings.  The results are presented using 2d and 3d graphics.Please use this package for educational purposes only, I do not support industries (with this free code) and do not support ministries of âenergyâ anywhere. Students are welcome to ask questions and I will do my best to help beginners researching rotordynamics.  Please do not send long assignments to me because this would mean I will have less time to ride my mountain bike....  This software package was written mostly during the summers of 1995,1998 (and some bugs are thus 10 years old :-)   Do not despair! Some parts work correctly and the graphics is reasonably nice. I use the package myself during teaching (rotordynamics).      More seriously, I get occasional requests to send this package to people worldwide therefore I have decided to put it back onto the Mathworks usersâ area. It would be nice to be acknowledged (even by an email) when you create nice graphics/results/publication etc. with this package. Instructions:1) Unpack the package, maintain directory structure2)cd to   /Rotfe25x in Matlab3)type rotfeini (in Matlab) to add all the underneath directory to the path4)run the demo (slow) by typing demo_rotfe5)run the torsional vibration demo (somewhat incomplete, sorry) - tst_rotany.m6)edit an example model, e.g.   simple4s.m, run it using :a.modeplot2 simple4s  (use buttons to compute and manipulate display)b.compute and display the Campbell diagram (<a href=""http://en.wikipedia.org/wiki/Campbell_diagram"">http://en.wikipedia.org/wiki/Campbell_diagram</a>) via:   campbell simple4s, zoom with the mouse to see the lower frequency range  Good luck and enjoyIzhak Bucher,  <a href=""http://dynamics.technion.ac.il"">http://dynamics.technion.ac.il</a> </p>campbell diagram,eigenvectors,rotordynamics,vibration,whirling of shafts,toolbox",121,6,2,0,114,toolbox rotate elastic shaft disksthe toolbox implement simple timoshenko beam rigid disk computes eigenvectos mode various speed rotation incorporate various effect like gyroscopics stiffness bearing result present graphic please package educational purpose support industry free code support ministry energy anywhere student welcome ask question best help beginner research rotordynamics please send long assignment would mean less time ride mountain bike software package write mostly summer bug thus year old despair part work correctly graphic reasonably nice package teach rotordynamics seriously get occasional request send package people worldwide therefore decide put back onto mathworks user area would nice acknowledge even email create nice graphic result publication etc package instruction unpack package maintain directory structure rotfe type rotfeini add underneath directory path run demo slow type demo rotfe run torsional vibration demo somewhat incomplete sorry tst rotany edit example simple run modeplot simple button compute manipulate display compute display campbell diagram http wikipedia org wiki campbell diagram via campbell simple zoom mouse see low frequency range good luck enjoyizhak bucher http dynamic technion campbell shaftstoolbox,"['toolbox', 'rotate', 'elastic', 'shaft', 'disksthe', 'toolbox', 'implement', 'simple', 'timoshenko', 'beam', 'rigid', 'disk', 'computes', 'eigenvectos', 'mode', 'various', 'speed', 'rotation', 'incorporate', 'various', 'effect', 'like', 'gyroscopics', 'stiffness', 'bearing', 'result', 'present', 'graphic', 'please', 'package', 'educational', 'purpose', 'support', 'industry', 'free', 'code', 'support', 'ministry', 'energy', 'anywhere', 'student', 'welcome', 'ask', 'question', 'best', 'help', 'beginner', 'research', 'rotordynamics', 'please', 'send', 'long', 'assignment', 'would', 'mean', 'less', 'time', 'ride', 'mountain', 'bike', 'software', 'package', 'write', 'mostly', 'summer', 'bug', 'thus', 'year', 'old', 'despair', 'part', 'work', 'correctly', 'graphic', 'reasonably', 'nice', 'package', 'teach', 'rotordynamics', 'seriously', 'get', 'occasional', 'request', 'send', 'package', 'people', 'worldwide', 'therefore', 'decide', 'put', 'back', 'onto', 'mathworks', 'user', 'area', 'would', 'nice', 'acknowledge', 'even', 'email', 'create', 'nice', 'graphic', 'result', 'publication', 'etc', 'package', 'instruction', 'unpack', 'package', 'maintain', 'directory', 'structure', 'rotfe', 'type', 'rotfeini', 'add', 'underneath', 'directory', 'path', 'run', 'demo', 'slow', 'type', 'demo', 'rotfe', 'run', 'torsional', 'vibration', 'demo', 'somewhat', 'incomplete', 'sorry', 'tst', 'rotany', 'edit', 'example', 'simple', 'run', 'modeplot', 'simple', 'button', 'compute', 'manipulate', 'display', 'compute', 'display', 'campbell', 'diagram', 'http', 'wikipedia', 'org', 'wiki', 'campbell', 'diagram', 'via', 'campbell', 'simple', 'zoom', 'mouse', 'see', 'low', 'frequency', 'range', 'good', 'luck', 'enjoyizhak', 'bucher', 'http', 'dynamic', 'technion', 'campbell', 'shaftstoolbox']",5
359,28596,"4 DOF arm imported via SimMechanics generates dynamics for optimal pick-place control solved by DIDO<p>A 4 DOF arm based on the Motoman IA20 was built in AutoDesk Inventor. SimMechanics is used to generate a Simulink model. This model generates the dynamics for the robot implicitly, so there is no need to solve the equations of motion by hand. The dynamics are used by an control optimization software: DIDO, available commercially. Sample results are included along with a video and analysis which compares it against the traditional trajectory. </p>control design,optimal control,robot,optimal control",130,0,1,0,133,dof arm import via simmechanics generates dynamic optimal pick place control solve didoa dof arm base motoman build autodesk inventor simmechanics generate generates dynamic robot implicitly need solve equation motion hand dynamic control optimization software dido available commercially sample result include along video analysis compare traditional trajectory control designoptimal control,"['dof', 'arm', 'import', 'via', 'simmechanics', 'generates', 'dynamic', 'optimal', 'pick', 'place', 'control', 'solve', 'didoa', 'dof', 'arm', 'base', 'motoman', 'build', 'autodesk', 'inventor', 'simmechanics', 'generate', 'generates', 'dynamic', 'robot', 'implicitly', 'need', 'solve', 'equation', 'motion', 'hand', 'dynamic', 'control', 'optimization', 'software', 'dido', 'available', 'commercially', 'sample', 'result', 'include', 'along', 'video', 'analysis', 'compare', 'traditional', 'trajectory', 'control', 'designoptimal', 'control']",0
360,28597,"Pendulum imported via SimMechanics generates dynamics for optimal dampening solved by DIDO.<p>Suspended and inverted pendulums were built in AutoDesk Inventor. SimMechanics is used to generate a Simulink model. This model generates the dynamics implicitly, so there is no need to solve the equations of motion by hand. The dynamics are used by control optimization software: DIDO, available commercially. Sample results are included along with analysis which compares it against a linearly-optimal state transformation and the linear-quadratic-regulator.  In addition, optimality conditions are verified based on the explicit equations of motion. </p>control design,optimal control,pendulum",35,0,1,0,33,pendulum import via simmechanics generates dynamic optimal dampen solved dido suspend invert pendulum build autodesk inventor simmechanics generate generates dynamic implicitly need solve equation motion hand dynamic control optimization software dido available commercially sample result include along analysis compare linearly optimal state transformation linear quadratic regulator addition optimality condition verify base explicit equation motion control designoptimal controlpendulum,"['pendulum', 'import', 'via', 'simmechanics', 'generates', 'dynamic', 'optimal', 'dampen', 'solved', 'dido', 'suspend', 'invert', 'pendulum', 'build', 'autodesk', 'inventor', 'simmechanics', 'generate', 'generates', 'dynamic', 'implicitly', 'need', 'solve', 'equation', 'motion', 'hand', 'dynamic', 'control', 'optimization', 'software', 'dido', 'available', 'commercially', 'sample', 'result', 'include', 'along', 'analysis', 'compare', 'linearly', 'optimal', 'state', 'transformation', 'linear', 'quadratic', 'regulator', 'addition', 'optimality', 'condition', 'verify', 'base', 'explicit', 'equation', 'motion', 'control', 'designoptimal', 'controlpendulum']",5
361,28618,"Perspectives on nonlinear identification using a throttle valve modeling example.<p>Using an engine throttle valve modeling example, this demo shares some perspectives on creation of nonlinear models of dynamic systems from the measurements of its input and outputs. It describes useful workflows for approaching the task of data-based modeling using System Identification Toolboxâ¢ . Two modeling approaches are described:1. Black box modeling: case where you cannot derive the exact mathematical representation of the system from physical considerations; the form of the model as well as the values of its coefficients is extracted from data.2. Grey-box modeling: the equations of motion relating the input and output variables are known, but the values of various physical constants in the equations are unknown; the data is then used to find the values of those unknowns only.The emphasis is on the black box modeling approach. It is shown that even though no a priori knowledge of model structure is required, it is often helpful to have some intuition about the nature of the system and to use this knowledge to fine-tune the configuration of model structures. Contents: * A document titled ""DATA-BASED MODELING OF ENGINE THROTTLE VALVE DYNAMICS"" * MATLAB files for command line demo (see throttledemo.m)</p>black box,engine throttle,estimation,grey box,hammerstein wiener,modeling,narmax,neural network,nlarx,nlhw,regressor,system identification,toolbox,toolbox",10,0,1,0,12,perspective nonlinear identification throttle valve example engine throttle valve example demo share perspectives creation nonlinear dynamic measurement input output describes useful workflow approach task data base identification toolbox two modeling approach describe black box case derive exact mathematical representation physical consideration form well value coefficient extract data grey box equation motion relate input output variable know value various physical constant equation unknown data find values unknowns emphasis black box approach show even though priori knowledge structure require often helpful intuition nature knowledge fine tune configuration structure content document title data base engine throttle valve dynamic file command line demo see throttledemo black boxengine boxhammerstein,"['perspective', 'nonlinear', 'identification', 'throttle', 'valve', 'example', 'engine', 'throttle', 'valve', 'example', 'demo', 'share', 'perspectives', 'creation', 'nonlinear', 'dynamic', 'measurement', 'input', 'output', 'describes', 'useful', 'workflow', 'approach', 'task', 'data', 'base', 'identification', 'toolbox', 'two', 'modeling', 'approach', 'describe', 'black', 'box', 'case', 'derive', 'exact', 'mathematical', 'representation', 'physical', 'consideration', 'form', 'well', 'value', 'coefficient', 'extract', 'data', 'grey', 'box', 'equation', 'motion', 'relate', 'input', 'output', 'variable', 'know', 'value', 'various', 'physical', 'constant', 'equation', 'unknown', 'data', 'find', 'values', 'unknowns', 'emphasis', 'black', 'box', 'approach', 'show', 'even', 'though', 'priori', 'knowledge', 'structure', 'require', 'often', 'helpful', 'intuition', 'nature', 'knowledge', 'fine', 'tune', 'configuration', 'structure', 'content', 'document', 'title', 'data', 'base', 'engine', 'throttle', 'valve', 'dynamic', 'file', 'command', 'line', 'demo', 'see', 'throttledemo', 'black', 'boxengine', 'boxhammerstein']",0
362,28713,"This demo file shows capabilities for PID Controller design and tuning in MATLAB and Simullink.<p>This is the demo file for MathWorks webinar ""PID Control Made Easy"".The demo shows design and tuning of PID controllers in MATLAB and Simulink.PID Controller is used to control engine speed.To see how to tune the PID Controller, please see the webinar and visit the page with resources on PID design and tuning:<a href=""http://www.mathworks.com/discovery/pid-control.html"">http://www.mathworks.com/discovery/pid-control.html</a></p>control design,controls,engine control,pid,pid control,pid controller,pid tuning,controls,control design,engine control,control design,pid controller,pid control",201,23,4,0,214,demo file show capability pid controller design tune demo file mathworks webinar pid control make easy demo show design tune pid controller pid controller control engine speed see tune pid controller please see webinar visit page resource pid design tune http mathworks com discovery pid control htmlcontrol controlpidpid controlpid controllerpid designengine controlcontrol designpid controllerpid control,"['demo', 'file', 'show', 'capability', 'pid', 'controller', 'design', 'tune', 'demo', 'file', 'mathworks', 'webinar', 'pid', 'control', 'make', 'easy', 'demo', 'show', 'design', 'tune', 'pid', 'controller', 'pid', 'controller', 'control', 'engine', 'speed', 'see', 'tune', 'pid', 'controller', 'please', 'see', 'webinar', 'visit', 'page', 'resource', 'pid', 'design', 'tune', 'http', 'mathworks', 'com', 'discovery', 'pid', 'control', 'htmlcontrol', 'controlpidpid', 'controlpid', 'controllerpid', 'designengine', 'controlcontrol', 'designpid', 'controllerpid', 'control']",7
363,28839,"Simulink mdl file for pH modeling,<p>Most pH control processes are inherently high nonlinear and uncertainties with large time delay and therefore cannot be adequately controlled with a conventional PI control. In our term project, an approach to pH neutralization process control using switching ADRC with Smith Predictor will be presented. </p>adrc,process control,adrc,adrc,control,adrc",38,2,2,0,47,mdl file modelingmost control process inherently high nonlinear uncertainty large time delay therefore adequately controlled conventional control term project approach neutralization process control switch adrc smith predictor present adrcprocess,"['mdl', 'file', 'modelingmost', 'control', 'process', 'inherently', 'high', 'nonlinear', 'uncertainty', 'large', 'time', 'delay', 'therefore', 'adequately', 'controlled', 'conventional', 'control', 'term', 'project', 'approach', 'neutralization', 'process', 'control', 'switch', 'adrc', 'smith', 'predictor', 'present', 'adrcprocess']",4
364,28843,"This project aims to demonstrate speed control of a DC series motor.<p>This project aims to demonstrate speed control of a DC series motor. It involves the use of armature voltage control, to control the speed of the motor.  The speed of the motor is controlled for a typical speed profile of a washing machine. The PID  controller of the motor is optimized for a good response. SIMULINKÂ® is used for simulation. </p>dc motor,speed control,control design,demo,motor,simulink,control design,dc motor,demo,motor,simulink,speed control,electric_motor_control,power_conversion_control,power_electronics_control",55,1,2,0,64,project aim demonstrate speed control series motor project aim demonstrate speed control series motor involve armature voltage control control speed motor speed motor control typical speed profile wash machine pid controller motor optimize good response motorspeed controlcontrol designdc controlelectric motor controlpower conversion controlpower electronics control,"['project', 'aim', 'demonstrate', 'speed', 'control', 'series', 'motor', 'project', 'aim', 'demonstrate', 'speed', 'control', 'series', 'motor', 'involve', 'armature', 'voltage', 'control', 'control', 'speed', 'motor', 'speed', 'motor', 'control', 'typical', 'speed', 'profile', 'wash', 'machine', 'pid', 'controller', 'motor', 'optimize', 'good', 'response', 'motorspeed', 'controlcontrol', 'designdc', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
365,28855,"Single phase bridge rectifier<p>The model simulates single phase bridge rectifier with resistive and inductive load. simulation also demonstrate the role of free wheeling diode. Single phase pulse generator was developed to generate the pulses at required firing angle.</p>ac to dc converter,control,controlled rectifier,converter,drives,electrical drive,full converter,power electronics,power system,rectifier,single phase rectifier,converter",75,1,2,0,82,single phase bridge rectifierthe single phase bridge rectifier resistive inductive load also demonstrate role free wheel diode single phase pulse generator develop generate pulse require fire angle drivefull converterpower phase,"['single', 'phase', 'bridge', 'rectifierthe', 'single', 'phase', 'bridge', 'rectifier', 'resistive', 'inductive', 'load', 'also', 'demonstrate', 'role', 'free', 'wheel', 'diode', 'single', 'phase', 'pulse', 'generator', 'develop', 'generate', 'pulse', 'require', 'fire', 'angle', 'drivefull', 'converterpower', 'phase']",3
366,28952,"A benchmark problem for model based control system testing<p>Today safety critical flight control systems are tested using model based approach. The model blocks are proprietary and seldom shared in the open. A benchmark problem was designed as part of a research activity to test out certain test case generation techniques. This model was also used as a problem for the test case generation methodology training classes. Trainees, normally fresh graduates from colleges, were asked to design manual test cases to find out the errors embedded in the model. The control system blocks are typical of the ones used in a flight control system or an automobile control system. It is a combination of linear filters, integrators, non-linear blocks like rate limiters and lookup table. There is a combination of logic and time dependency in terms of persistence blocks. These are however more complex for generating test cases as explained below. The blocks have been selected and placed to ensure that the students exercise some thought process and understand the underlying functionality of the control system blocks.This problem is being provided as open source to the Control System test community. This we believe is a first of its kind and we hope to provide more benchmark problems as we go along comparing Taguchi method of testing. Users are free to try out the Matlab or other commercial test tools against this model. We would like to hear about your experience in using this benchmark problem.Benchmark ProblemThe benchmark model is called compete_2010.mdl. This is a Simulink model with a test harness, which takes in 10 inputs from the workspace named Inp1 to Inp10. It has 7 outputs, which come out as a vector in a variable simout (refer Figure 1). There is a Matlab code, which is an exact replica of the model in code form (file model00001.m). This has undergone more than 20,000 test runs and both model and code match very well. There is a variation of this with instrumentation for coverage called model00001_c.m. This file has a variable COVERAGE, which collects the line, condition and logic coverage. There is a Simulink model with 17 mutants injected into the model subsystems called compete.mdl. This has the model and the mutants in the same file. Each mutant block has a single mutant embedded into it. The output of the mutant block and the original model is compared and is available as error in the scope. The model output is Output in workspace and the mutant outputs are available as Output1 to Output17 in the workspace. Automated mutant generationThe model was used as a benchmark problem to verify random test case generation techniques. A novel method of test case generation using Taguchi was also used to generate test cases. An automated mutant generator was developed for the Simulink and Matlab code. These Matlab scripts generate all combinations of mutants for the Simulink and Matlab code. An OR gate, as an example, would be replaced by an AND gate, XOR gate etc in each mutant file. Each mutant file will have only one mutant. The mutant description is provided as a text file for the Simulink mutant models. The mutant Matlab code has the change description as the first line in the mutant. The script could generate 414 Simulink mutant and 7592 mutants for the Matlab code.</p>aerospace,automated tests,automotive,benchmark,coverage,metrics,model based,mutation,problem,random,simulink,testing,validation,verification",2045,66,4,0,2311,benchmark problem base control testingtoday safety critical flight control test base approach block proprietary seldom share open benchmark problem design part research activity test certain test case generation technique also problem test case generation methodology training class trainee normally fresh graduate college ask design manual test case find error embed control block typical one flight control automobile control combination linear filter integrator non linear block like rate limiter lookup table combination logic time dependency term persistence block however complex generate test case explain block select placed ensure student exercise think process understand underlie functionality control block problem provide open source control test community believe first kind hope provide benchmark problem along compare taguchi method test user free try commercial test tool would like hear experience benchmark problem benchmark problemthe benchmark call compete mdl test harness take input workspace name inp inp output come vector variable simout refer figure code exact replica code form file undergone test run code match well variation instrumentation coverage call file variable coverage collect line condition logic coverage mutant inject subsystem call compete mdl mutant file mutant block single mutant embed output mutant block original compare available error scope output output workspace mutant output available output output workspace automate mutant generationthe benchmark problem verify random test case generation technique novel method test case generation taguchi also generate test case automate mutant generator develop code script generate combination mutant code gate example would replace gate xor gate etc mutant file mutant file one mutant mutant description provide text file mutant mutant code change description first line mutant script could generate mutant mutant code,"['benchmark', 'problem', 'base', 'control', 'testingtoday', 'safety', 'critical', 'flight', 'control', 'test', 'base', 'approach', 'block', 'proprietary', 'seldom', 'share', 'open', 'benchmark', 'problem', 'design', 'part', 'research', 'activity', 'test', 'certain', 'test', 'case', 'generation', 'technique', 'also', 'problem', 'test', 'case', 'generation', 'methodology', 'training', 'class', 'trainee', 'normally', 'fresh', 'graduate', 'college', 'ask', 'design', 'manual', 'test', 'case', 'find', 'error', 'embed', 'control', 'block', 'typical', 'one', 'flight', 'control', 'automobile', 'control', 'combination', 'linear', 'filter', 'integrator', 'non', 'linear', 'block', 'like', 'rate', 'limiter', 'lookup', 'table', 'combination', 'logic', 'time', 'dependency', 'term', 'persistence', 'block', 'however', 'complex', 'generate', 'test', 'case', 'explain', 'block', 'select', 'placed', 'ensure', 'student', 'exercise', 'think', 'process', 'understand', 'underlie', 'functionality', 'control', 'block', 'problem', 'provide', 'open', 'source', 'control', 'test', 'community', 'believe', 'first', 'kind', 'hope', 'provide', 'benchmark', 'problem', 'along', 'compare', 'taguchi', 'method', 'test', 'user', 'free', 'try', 'commercial', 'test', 'tool', 'would', 'like', 'hear', 'experience', 'benchmark', 'problem', 'benchmark', 'problemthe', 'benchmark', 'call', 'compete', 'mdl', 'test', 'harness', 'take', 'input', 'workspace', 'name', 'inp', 'inp', 'output', 'come', 'vector', 'variable', 'simout', 'refer', 'figure', 'code', 'exact', 'replica', 'code', 'form', 'file', 'undergone', 'test', 'run', 'code', 'match', 'well', 'variation', 'instrumentation', 'coverage', 'call', 'file', 'variable', 'coverage', 'collect', 'line', 'condition', 'logic', 'coverage', 'mutant', 'inject', 'subsystem', 'call', 'compete', 'mdl', 'mutant', 'file', 'mutant', 'block', 'single', 'mutant', 'embed', 'output', 'mutant', 'block', 'original', 'compare', 'available', 'error', 'scope', 'output', 'output', 'workspace', 'mutant', 'output', 'available', 'output', 'output', 'workspace', 'automate', 'mutant', 'generationthe', 'benchmark', 'problem', 'verify', 'random', 'test', 'case', 'generation', 'technique', 'novel', 'method', 'test', 'case', 'generation', 'taguchi', 'also', 'generate', 'test', 'case', 'automate', 'mutant', 'generator', 'develop', 'code', 'script', 'generate', 'combination', 'mutant', 'code', 'gate', 'example', 'would', 'replace', 'gate', 'xor', 'gate', 'etc', 'mutant', 'file', 'mutant', 'file', 'one', 'mutant', 'mutant', 'description', 'provide', 'text', 'file', 'mutant', 'mutant', 'code', 'change', 'description', 'first', 'line', 'mutant', 'script', 'could', 'generate', 'mutant', 'mutant', 'code']",0
367,28999,"how to plot variation of frequecy of an ac signal in simulink using pll.<p>adding a 2nd order filter we can plot variation in frequency due to the faults or disturbances.</p>frequecy plotting,frequecy plotting,frequecy plotting,frequecy plotting,electric_motor_control,power_conversion_control,power_electronics_control",85,4,2,0,95,plot variation frequecy signal pll add order filter plot variation frequency due fault disturbance frequecy motor controlpower conversion controlpower electronics control,"['plot', 'variation', 'frequecy', 'signal', 'pll', 'add', 'order', 'filter', 'plot', 'variation', 'frequency', 'due', 'fault', 'disturbance', 'frequecy', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
368,29040,"A SimElectronics model of a 13.8v Power Supply<p>This model was developed in order to help repair a failed power supply.  I used the model as a reference against the actual hardware and succesfully managed to diagnose the likely problem before even using a test meter.  By using the model I was amazed with how familiar I felt with the circuit before even actually physically touching the real hardware.Not sure how useful this may be to other users - but it may be interesting to see a linear regulated power supply implemented in SimElectronics.Enjoy!</p>power supply,regulation,simelectronics,simulation,simulink,power_conversion_control,power_electronics_control",29,0,1,0,28,simelectronics power supplythis develop order help repair fail power supply reference actual hardware succesfully manage diagnose likely problem even test meter amaze familiar felt circuit even actually physically touch real hardware sure useful may user may interest see linear regulate power supply implement simelectronics enjoy power conversion controlpower electronics control,"['simelectronics', 'power', 'supplythis', 'develop', 'order', 'help', 'repair', 'fail', 'power', 'supply', 'reference', 'actual', 'hardware', 'succesfully', 'manage', 'diagnose', 'likely', 'problem', 'even', 'test', 'meter', 'amaze', 'familiar', 'felt', 'circuit', 'even', 'actually', 'physically', 'touch', 'real', 'hardware', 'sure', 'useful', 'may', 'user', 'may', 'interest', 'see', 'linear', 'regulate', 'power', 'supply', 'implement', 'simelectronics', 'enjoy', 'power', 'conversion', 'controlpower', 'electronics', 'control']",4
369,29094,"The program illustrates one chaos oscillator with heart shape phase portrait.<p>It is my present for my wife. Happy Vietnamese Women Day 20-10-2010.I would like to express my great appreciation to my wife for her constant understanding, love, support, and encouragement.It is also useful for people who want to study about chaos.</p>chaos,communications,simulink,chaos",8,0,1,0,10,program illustrate one chaos oscillator heart shape phase portrait present wife happy vietnamese woman day would like express great appreciation wife constant understanding love support encouragement also useful people want study chaos,"['program', 'illustrate', 'one', 'chaos', 'oscillator', 'heart', 'shape', 'phase', 'portrait', 'present', 'wife', 'happy', 'vietnamese', 'woman', 'day', 'would', 'like', 'express', 'great', 'appreciation', 'wife', 'constant', 'understanding', 'love', 'support', 'encouragement', 'also', 'useful', 'people', 'want', 'study', 'chaos']",5
370,29107,"Simulink block for forcing a simulation to run in real (wall clock) time<p>The RealTime Pacer block slows down (""paces"") simulation time so that it synchronizes with real elapsed time. The degree of slowdown is controllable via a Speedup parameter. 1) The block is implemented using an M S-function, so it works on any supported Simulink platform. It does not support code generation. 2) The block uses the MATLAB PAUSE function to slow down the simulation. The PAUSE command gives up the processor during the pause, so system performance does not degrade. 3) The M-S function illustrates how to use nested functions to simplify the code. The matching between simulation time and elapsed real time is approximate, with expected differences on the order of 10 to 30 milliseconds. This limitation is due to difficulties of precise timing with a multitasking operating system. --------RELATED FX ENTRIESThe following FX entries also implement ""real time"" functionality for Simulink. They are based on C S-functions and therefore support code generation. * Simulink Real Time Execution (Real-Time Slower) (Filex# 21908)* Real-Time Blockset 7.1 for Simulink (Filex# 3175)* RTsync Blockset (Filex# 24975)</p>pick of the week,potw,pace,real time,real time execution,real time simulation,real time sychronization,realtime,synchronization",9,0,1,2,6,block force run real wall clock timethe realtime pacer block slow pace time synchronize real elapsed time degree slowdown controllable via speedup parameter block implement function work support platform support code generation block pause function slow pause command give processor pause performance degrade function illustrate nested function simplify code matching time elapse real time approximate expect difference order millisecond limitation due difficulty precise time multitasking operating relate entriesthe follow entry also implement real time functionality base function therefore support code generation real time execution real time slow filex real time blockset filex rtsync blockset filex pick timereal time executionreal time time,"['block', 'force', 'run', 'real', 'wall', 'clock', 'timethe', 'realtime', 'pacer', 'block', 'slow', 'pace', 'time', 'synchronize', 'real', 'elapsed', 'time', 'degree', 'slowdown', 'controllable', 'via', 'speedup', 'parameter', 'block', 'implement', 'function', 'work', 'support', 'platform', 'support', 'code', 'generation', 'block', 'pause', 'function', 'slow', 'pause', 'command', 'give', 'processor', 'pause', 'performance', 'degrade', 'function', 'illustrate', 'nested', 'function', 'simplify', 'code', 'matching', 'time', 'elapse', 'real', 'time', 'approximate', 'expect', 'difference', 'order', 'millisecond', 'limitation', 'due', 'difficulty', 'precise', 'time', 'multitasking', 'operating', 'relate', 'entriesthe', 'follow', 'entry', 'also', 'implement', 'real', 'time', 'functionality', 'base', 'function', 'therefore', 'support', 'code', 'generation', 'real', 'time', 'execution', 'real', 'time', 'slow', 'filex', 'real', 'time', 'blockset', 'filex', 'rtsync', 'blockset', 'filex', 'pick', 'timereal', 'time', 'executionreal', 'time', 'time']",0
371,29143,"Developing a DC-DC Boost regulator to be used as a source of regulated DC voltage.<p>This circuit is an offshoot developed for my master's dissertion work. The DC output is intended to be used as a source for Grid tied Inverters for photovoltaic applications. This doesn't include MPPT controller, the circuit can be used as a source for Regulated DC Voltages  </p>simulink,simulink,power_conversion_control,power_electronics_control,acdcdc,simulink",41,1,2,0,34,develop boost regulator source regulate voltage circuit offshoot develop master dissertion work output intend source grid tie inverter photovoltaic application include mppt controller circuit source regulate voltage conversion controlpower electronics,"['develop', 'boost', 'regulator', 'source', 'regulate', 'voltage', 'circuit', 'offshoot', 'develop', 'master', 'dissertion', 'work', 'output', 'intend', 'source', 'grid', 'tie', 'inverter', 'photovoltaic', 'application', 'include', 'mppt', 'controller', 'circuit', 'source', 'regulate', 'voltage', 'conversion', 'controlpower', 'electronics']",3
372,29161,"Simulation models of marine automatics elements library for MATLAB/Simulink<p>The library has been created as a part of a master's thesis (supervisor Jerzy Brzozka, Ph. D. Eng.) on simulation models of marine automatics elements by a student of Maritime University in Szczecin. It contains 35 fully configurable models useful for design and simulation of onboard control systems.The library can be applied to wide variety of fields:- Teaching of mechatronics and automatics,- Scientific research on theory of control and regulation,- Design and simulation of control systems in design offices.Additionally, 6 demonstration systems have been included to the library to demonstrate its potential.Each model and demonstration system has a help file to intruduce its issues.Unpack the archive to C:\ and run the library by executing icon 'Marine Automatics', which is inside the folder.</p>automatics,control,control design,demo,elements,library,marine,mathematics,mechatronics,model,modeling,models,onboard,regulation,simulation,simulink,systems,theory",148,51,2,34,176,marine automatic element create part master thesis supervisor jerzy brzozka eng marine automatic element student maritime university szczecin contain fully configurable useful design onboard control apply wide variety field teach mechatronics automatic scientific research theory control regulation design control design office additionally demonstration include demonstrate potential demonstration help file intruduce issue unpack archive run execute icon marine automatic inside folder,"['marine', 'automatic', 'element', 'create', 'part', 'master', 'thesis', 'supervisor', 'jerzy', 'brzozka', 'eng', 'marine', 'automatic', 'element', 'student', 'maritime', 'university', 'szczecin', 'contain', 'fully', 'configurable', 'useful', 'design', 'onboard', 'control', 'apply', 'wide', 'variety', 'field', 'teach', 'mechatronics', 'automatic', 'scientific', 'research', 'theory', 'control', 'regulation', 'design', 'control', 'design', 'office', 'additionally', 'demonstration', 'include', 'demonstrate', 'potential', 'demonstration', 'help', 'file', 'intruduce', 'issue', 'unpack', 'archive', 'run', 'execute', 'icon', 'marine', 'automatic', 'inside', 'folder']",5
373,29238,"Here we have implemented multi featured music player  using T1  DSK 6713  .<p>MULTI FEATURED MUSIC PLAYERHere we have included  different effects. They are Karaoke.Surround Sound,Flanging,Reverb,Left/right Channel selection, Echo , Chorus,  Bass ,Treble using 10 band EQUALISER AND IMPIMENTED  IN  T1 DSK 6713  .PREPARED BY:SANGHANI HARDIKBHUCHARA KARTIKTUSHAR DAVEKACHA JAYSANGUIDED BY : PROF. BHAVIN S. SEDANI(V.V.P ENGG. CLG. RAJKOT.)1. ORIGINAL SONG AMPLIFIER:In this the original song is passed through a gain block and thus amplified without any alteration.2 KARAOKE:This is the facility which is useful  when we want to sing the song from the lyrics . whenever any audio recording is done music is recorded differently in the left and the right channel  due to the available Technique known as Multitrack recording  but vocals are recorded equally so that if we give 180 deg phase shift to the left and right channel  and than added so that the vocals are suppressed and only the  music will remain.3 BASS :In this the bass (low frequency e.g. Tablas, Drums etc.,) components of the audio signal while high frequency music components are significantly attenuated. For that, this we have used 10 IIR Band pass Butterworth (10 band equalizer)Filter of order 2(designed using FDA tool) which finally boost low frequency end. 4 TREBLE :In this the treble i.e. high frequency compoments are boosted while the bass components are reduced in amplitude.  For that,  we have used 10 IIR Band pass Butterworth (10 band equalizer)Filter of order 2(designed using FDA tool) which finally boost high frequency end. 5 LEFT ACTIVATE: Here from the two available channels i.e. left and right one of them LEFT  is selected and by using submatrix block and other is suppressed6 RIGHT ACTIVATE: Here from the two available channels i.e. left and right one of them RIGHT is selected and by using submatrix block and other is suppressed7 ECHO:Echo is repetition of a sound by reflection of sound waves from The place which is greater then 17m away .which can be produced by using the integer delay to the same sample after the time greater than 0.1 sec(perception of  human ear to store the sound heard by us)8 CHORUS:The chorus effect is especially easy to hear when listening to a choir or string ensemble. A choir has multiple people singing each part A string ensemble has multiple violinists and possibly multiples of other stringed instruments. When individual singers or violins play the same part, the chorus effect can be heard. Here we have implimented so as 3 different singers are singing with 3 different instruments we have done this repeating the same samples after giving the very small integer delays  9. REVERBERATION :Reverberation effect is experienced when any signal coming from the source instead of travellin acc. To the inverse square law reflected back at the distance less than 17m and the delay time between two same sample is less than 0.1 sec(perception of the human ear)10.SURROUND SOUND :Surround sound effect is one in which we can hear  the  sound like a goodest quality.At a time one is the original song which is available in one channel and after 20 ms delay sound is available in other channel. Here we are using the principle of  perception of  hearing.</p>audio processing,audio processing,audio processing",247,16,3,0,344,implement multi feature music player dsk multi feature music playerhere include different effect karaoke surround right channel selection echo chorus bass treble band equaliser impimented dsk prepared sanghani hardikbhuchara kartiktushar davekacha jaysanguided prof bhavin sedani engg clg rajkot original song amplifier original song pass gain block thus amplify without alteration karaoke facility useful want sing song lyric whenever audio record music record differently leave right channel due available technique know multitrack record vocal record equally give deg phase shift leave right channel add vocal suppress music remain bass bass low frequency tablas drum etc component audio signal high frequency music component significantly attenuate used iir band pas butterworth band equalizer filter order design fda tool finally boost low frequency end treble treble high frequency compoments boost bass component reduce amplitude iir band pas butterworth band equalizer filter order design fda tool finally boost high frequency end leave activate two available channel leave right one leave select submatrix block suppress right activate two available channel leave right one right select submatrix block suppress echo echo repetition sound reflection sound wave place great away produce integer delay sample time great sec perception human ear store sound heard chorus chorus effect especially easy hear listen choir string ensemble choir multiple people sing part string ensemble multiple violinist possibly multiple string instrument individual singer violin play part chorus effect heard implimented different singer sing different instrument repeat sample give small integer delay reverberation reverberation effect experience signal come source instead travellin acc inverse square law reflect back distance less delay time two sample sec perception human ear surround sound surround sound effect one hear sound like good quality time one original song available one channel delay sound available channel principle perception hearing audio processingaudio processingaudio processing,"['implement', 'multi', 'feature', 'music', 'player', 'dsk', 'multi', 'feature', 'music', 'playerhere', 'include', 'different', 'effect', 'karaoke', 'surround', 'right', 'channel', 'selection', 'echo', 'chorus', 'bass', 'treble', 'band', 'equaliser', 'impimented', 'dsk', 'prepared', 'sanghani', 'hardikbhuchara', 'kartiktushar', 'davekacha', 'jaysanguided', 'prof', 'bhavin', 'sedani', 'engg', 'clg', 'rajkot', 'original', 'song', 'amplifier', 'original', 'song', 'pass', 'gain', 'block', 'thus', 'amplify', 'without', 'alteration', 'karaoke', 'facility', 'useful', 'want', 'sing', 'song', 'lyric', 'whenever', 'audio', 'record', 'music', 'record', 'differently', 'leave', 'right', 'channel', 'due', 'available', 'technique', 'know', 'multitrack', 'record', 'vocal', 'record', 'equally', 'give', 'deg', 'phase', 'shift', 'leave', 'right', 'channel', 'add', 'vocal', 'suppress', 'music', 'remain', 'bass', 'bass', 'low', 'frequency', 'tablas', 'drum', 'etc', 'component', 'audio', 'signal', 'high', 'frequency', 'music', 'component', 'significantly', 'attenuate', 'used', 'iir', 'band', 'pas', 'butterworth', 'band', 'equalizer', 'filter', 'order', 'design', 'fda', 'tool', 'finally', 'boost', 'low', 'frequency', 'end', 'treble', 'treble', 'high', 'frequency', 'compoments', 'boost', 'bass', 'component', 'reduce', 'amplitude', 'iir', 'band', 'pas', 'butterworth', 'band', 'equalizer', 'filter', 'order', 'design', 'fda', 'tool', 'finally', 'boost', 'high', 'frequency', 'end', 'leave', 'activate', 'two', 'available', 'channel', 'leave', 'right', 'one', 'leave', 'select', 'submatrix', 'block', 'suppress', 'right', 'activate', 'two', 'available', 'channel', 'leave', 'right', 'one', 'right', 'select', 'submatrix', 'block', 'suppress', 'echo', 'echo', 'repetition', 'sound', 'reflection', 'sound', 'wave', 'place', 'great', 'away', 'produce', 'integer', 'delay', 'sample', 'time', 'great', 'sec', 'perception', 'human', 'ear', 'store', 'sound', 'heard', 'chorus', 'chorus', 'effect', 'especially', 'easy', 'hear', 'listen', 'choir', 'string', 'ensemble', 'choir', 'multiple', 'people', 'sing', 'part', 'string', 'ensemble', 'multiple', 'violinist', 'possibly', 'multiple', 'string', 'instrument', 'individual', 'singer', 'violin', 'play', 'part', 'chorus', 'effect', 'heard', 'implimented', 'different', 'singer', 'sing', 'different', 'instrument', 'repeat', 'sample', 'give', 'small', 'integer', 'delay', 'reverberation', 'reverberation', 'effect', 'experience', 'signal', 'come', 'source', 'instead', 'travellin', 'acc', 'inverse', 'square', 'law', 'reflect', 'back', 'distance', 'less', 'delay', 'time', 'two', 'sample', 'sec', 'perception', 'human', 'ear', 'surround', 'sound', 'surround', 'sound', 'effect', 'one', 'hear', 'sound', 'like', 'good', 'quality', 'time', 'one', 'original', 'song', 'available', 'one', 'channel', 'delay', 'sound', 'available', 'channel', 'principle', 'perception', 'hearing', 'audio', 'processingaudio', 'processingaudio', 'processing']",5
374,29240,"We have introduced various equalizer effects <p>Here by using the 10 band equalizer we have implemented various effects such as Bass, Treble, Booster, Jazz, Classical, Rock, Powerful, Soft, Dance, Pop, Vocal by the use of FDA tool / IIR FILTER Guided by.  Prof. Bhavin S. Sedani</p>audio processing",330,23,4,0,414,introduce various equalizer effect band equalizer implement various effect bass treble booster jazz classical rock powerful soft dance pop vocal fda tool iir filter guide prof bhavin sedaniaudio processing,"['introduce', 'various', 'equalizer', 'effect', 'band', 'equalizer', 'implement', 'various', 'effect', 'bass', 'treble', 'booster', 'jazz', 'classical', 'rock', 'powerful', 'soft', 'dance', 'pop', 'vocal', 'fda', 'tool', 'iir', 'filter', 'guide', 'prof', 'bhavin', 'sedaniaudio', 'processing']",8
375,29251,"Leave your computer unattended and get notification about the model's simulation progress by gmail.<p>Project name : SPEN (Simulation Progress Email Notifier)Date : 30-10-2010Developer : CyberWalker (Ioannis Mandourarakis)-------------------------------------------------------------------Purpose :------------To be able to leave unattended your computer processing a time consuming simulation project without any worries of its completion progress. Provided that you have a 3G mobile phone or a laptop with you, you can get notifications of your model's simulation progress, anywhere in the world, by connecting to your GMAIL account.'Installation'---------------This small project is consisted of two main files, one simulink model (.mdl) and one Matlab code program (.m).In order for them to work properly, they must co-exist in the MATLAB's assigned working folder (for example C:\Program Files\MATLAB\bin) or any other folder assigned as the main working folder for such a purpose.Intergration to your simulink project-----------------------------------------------Just copy the main subsystem block 'SPEM' on your open project.Then double click on the block in order to enter the notification values you wish. The 'Simulation Time' must correspond to the simulation time of your project, and the 'Notification Step Percentage' on the portion of elapsed time/percentage you wish to be notified. For example, if the Simulation Time is 73 (seconds) and the Notification Step Percentage is 5 (%) then you will be notified by email 20 times in total (each time for every 73/20=3.65 seconds of elapsed simulation time).Every email (starting from the one at 5%) will have one text file attached (progress.txt). This file will hold the value of the current percentage that the running simulation will be 'currently' processing. The last email notification will not have a text file attached but just a subject that will notify you about the simulation completion. ('Simulation Completed')Considerations--------------------The SPEM block is compatible with all GMAIL accounts, so provided that you have one, you just have to enter your email address and email password to the appropriate places into the .m file's code.You will have to replace the phrases '<a href=""mailto:your.account@gmail.com"">your.account@gmail.com</a>' and 'your_password' with the ones that correspond to your gmail account. There are in total 3 fields that you have to type your email address and 1 that you have to type your email password.The code lines with the associated fields begin with the following characters :* mail = '<a href=""mailto:your.account@gmail.com"">your.account@gmail.com</a>';* password = 'your_password';* sendmail('<a href=""mailto:your.account@gmail.com"">your.account@gmail.com</a>',...Please note that you MUST keep the quotes!</p>3g,email,gmail,iphone,mandourarakis,mobile,model,notification,percentage,progress,push,report,simulation,simulink,spem,unattended",7,1,2,0,5,leave computer unattended get notification progress gmail project name spen progress email notifier date developer cyberwalker ioannis mandourarakis purpose able leave unattended computer processing time consume project without worry completion progress provide mobile phone laptop get notification progress anywhere world connect gmail account installation small project consist two main file one mdl one code program order work properly must exist assigned work folder example program file bin folder assign main work folder purpose intergration project copy main subsystem block spem open project double click block order enter notification value wish time must correspond time project notification step percentage portion elapse time percentage wish notify example time second notification step percentage notify email time total time every second elapse time every email start one one text file attach progress txt file hold value current percentage run currently process last email notification text file attach subject notify completion complete consideration spem block compatible gmail account provide one enter email address email password appropriate place file code replace phrase account gmail com password one correspond gmail account total field type email address type email password code line associate field begin follow character mail account gmail com password password sendmail account gmail com please note must keep quote,"['leave', 'computer', 'unattended', 'get', 'notification', 'progress', 'gmail', 'project', 'name', 'spen', 'progress', 'email', 'notifier', 'date', 'developer', 'cyberwalker', 'ioannis', 'mandourarakis', 'purpose', 'able', 'leave', 'unattended', 'computer', 'processing', 'time', 'consume', 'project', 'without', 'worry', 'completion', 'progress', 'provide', 'mobile', 'phone', 'laptop', 'get', 'notification', 'progress', 'anywhere', 'world', 'connect', 'gmail', 'account', 'installation', 'small', 'project', 'consist', 'two', 'main', 'file', 'one', 'mdl', 'one', 'code', 'program', 'order', 'work', 'properly', 'must', 'exist', 'assigned', 'work', 'folder', 'example', 'program', 'file', 'bin', 'folder', 'assign', 'main', 'work', 'folder', 'purpose', 'intergration', 'project', 'copy', 'main', 'subsystem', 'block', 'spem', 'open', 'project', 'double', 'click', 'block', 'order', 'enter', 'notification', 'value', 'wish', 'time', 'must', 'correspond', 'time', 'project', 'notification', 'step', 'percentage', 'portion', 'elapse', 'time', 'percentage', 'wish', 'notify', 'example', 'time', 'second', 'notification', 'step', 'percentage', 'notify', 'email', 'time', 'total', 'time', 'every', 'second', 'elapse', 'time', 'every', 'email', 'start', 'one', 'one', 'text', 'file', 'attach', 'progress', 'txt', 'file', 'hold', 'value', 'current', 'percentage', 'run', 'currently', 'process', 'last', 'email', 'notification', 'text', 'file', 'attach', 'subject', 'notify', 'completion', 'complete', 'consideration', 'spem', 'block', 'compatible', 'gmail', 'account', 'provide', 'one', 'enter', 'email', 'address', 'email', 'password', 'appropriate', 'place', 'file', 'code', 'replace', 'phrase', 'account', 'gmail', 'com', 'password', 'one', 'correspond', 'gmail', 'account', 'total', 'field', 'type', 'email', 'address', 'type', 'email', 'password', 'code', 'line', 'associate', 'field', 'begin', 'follow', 'character', 'mail', 'account', 'gmail', 'com', 'password', 'password', 'sendmail', 'account', 'gmail', 'com', 'please', 'note', 'must', 'keep', 'quote']",0
376,29265,A Costas Loop for BPSK.<p>The parameter of costas loop is a typical value</p>communications,62,4,3,0,81,costa loop bpsk parameter costa loop typical,"['costa', 'loop', 'bpsk', 'parameter', 'costa', 'loop', 'typical']",4
377,29308,"Demo files to accompany the paper by the same name<p>These demo files are being uploaded to MATLAB Central based on several requests from readers of this 2008 SAE paper (2008-01-0085):Model-Based Design of Hybrid Electric VehiclesAn overview of the same ideas also appeared as an article in several magazines.</p>design,electric,electronics,gear,hybrid,modelbased,motor,planetary,power,synchronous,vehicle",3229,247,6,0,3527,demo file accompany paper namethese demo file upload central base several request reader sae paper base design hybrid electric vehiclesan overview idea also appear article several magazine,"['demo', 'file', 'accompany', 'paper', 'namethese', 'demo', 'file', 'upload', 'central', 'base', 'several', 'request', 'reader', 'sae', 'paper', 'base', 'design', 'hybrid', 'electric', 'vehiclesan', 'overview', 'idea', 'also', 'appear', 'article', 'several', 'magazine']",0
378,29369,"A couple of examples showing the pseudo-inverse and Jacobian transpose inverting the kinematics.<p>Two simple models are provided showing the characteristics of basic iterative algorithms for the inversion of kinematics, namely the Jacobian transpose, its pseudo-inverse and the damped least-squares (DLS). The pro's and con's can be compared interactively for a serial two-links and a three-links chains. For the latter the gradient-projection method is also given to couple a secondary task exploiting the redundancy of the manipulator.</p>dls,inverse kinematics,jacobian,pseudoinverse,robotics,transpose,inverse kinematics,inverse kinematics,inverse kinematics",153,14,2,0,193,couple example show pseudo inverse jacobian transpose invert kinematics two simple provide show characteristic basic iterative algorithm inversion kinematics namely jacobian transpose pseudo inverse damp least square dls pro con compare interactively serial two link three link chain latter gradient projection method also give couple secondary task exploit redundancy manipulator dlsinverse kinematics,"['couple', 'example', 'show', 'pseudo', 'inverse', 'jacobian', 'transpose', 'invert', 'kinematics', 'two', 'simple', 'provide', 'show', 'characteristic', 'basic', 'iterative', 'algorithm', 'inversion', 'kinematics', 'namely', 'jacobian', 'transpose', 'pseudo', 'inverse', 'damp', 'least', 'square', 'dls', 'pro', 'con', 'compare', 'interactively', 'serial', 'two', 'link', 'three', 'link', 'chain', 'latter', 'gradient', 'projection', 'method', 'also', 'give', 'couple', 'secondary', 'task', 'exploit', 'redundancy', 'manipulator', 'dlsinverse', 'kinematics']",5
379,29542,"Chaos synchronization in coupled lasersThis is run with Simulink<p>Chaos synchronization lasers is realized with the parameters chosen from some papers. This is useful for study and research,</p>chaos,chaotic,coupled,laser rate equations,lasers,synchronization,laser rate equations",190,9,3,0,225,chaos synchronization couple lasersthis run synchronization laser realize parameter choose paper useful study rate rate equation,"['chaos', 'synchronization', 'couple', 'lasersthis', 'run', 'synchronization', 'laser', 'realize', 'parameter', 'choose', 'paper', 'useful', 'study', 'rate', 'rate', 'equation']",0
380,29547,"Adder Circuit using Static CMOS<p>In electronics, an adder or summer is a digital circuit that performs addition of numbers. In modern computers adders reside in the arithmetic logic unit (ALU) where other operations are performed. This CMOS circuit is built using the SIMSCAPE toolbox with SPICE functionality. </p>self_rating,adder circuits,cmos,cmos inverter,computer arithmetic,digital circuits,digital electronics,nmos,pmos,ripple carry adder,self_rating,simscape,vlsi",282,24,3,0,453,adder circuit static cmosin electronics adder summer digital circuit performs addition number modern computer adder reside arithmetic logic unit alu operation perform cmos circuit build simscape toolbox spice functionality self ratingadder circuitsdigital carry adderself,"['adder', 'circuit', 'static', 'cmosin', 'electronics', 'adder', 'summer', 'digital', 'circuit', 'performs', 'addition', 'number', 'modern', 'computer', 'adder', 'reside', 'arithmetic', 'logic', 'unit', 'alu', 'operation', 'perform', 'cmos', 'circuit', 'build', 'simscape', 'toolbox', 'spice', 'functionality', 'self', 'ratingadder', 'circuitsdigital', 'carry', 'adderself']",5
381,29551,"Two thyristors and two diodes.<p>Single-Phase half-controlled bridge rectifier(ALPHA=120)</p>halfcontrolled,power electronics,rectifier,scr,simpowersystem,simulink,thyristor,half controlled bridge rectifier,halfcontrolled",22,0,1,0,21,two thyristors two diode single phase half control bridge rectifier alpha control bridge,"['two', 'thyristors', 'two', 'diode', 'single', 'phase', 'half', 'control', 'bridge', 'rectifier', 'alpha', 'control', 'bridge']",1
382,29583,"This function take the variables like acceleration, gear, speed, temperature, time and some other.<p>This function has been made to check a simulator of automobile race and to control this. This function take the variables from a  game like acceleration, gear, speed, temperature, time and some in real time (small latency but no evaluate).The game compatible are GTREvo and Race07.The varibles are: UserInput6, Rpm, MaxEngineRPM, FuelPressure, Fuel, FuelCapacityLiters, EngineWaterTemp, EengineOilTemp, EngineOilPressure, CarSpeed, NumberOfLaps, CmpletedLaps, LapTimeBest, LapTimePrevious, LapTimeCurrent, Position, NumCars, 18,'Gear, Tirefrontleft3, Tirefrontright3, Tirerearleft3, Tirerearright3, NumPenalties, CarCGLoc3, Pitch, Yaw, Roll, Lateral, Vertical, Longitudinal, LocalAcceleration3.</p>acceleration,acceleration,auto,automotive,car,data export,game,gtr,race07,simulation,simulator,telemetry",21,0,1,0,22,function take variable like acceleration gear speed temperature time function make check automobile race control function take variable game like acceleration gear speed temperature time real time small latency evaluate game compatible gtrevo race varibles userinput rpm maxenginerpm fuelpressure fuel enginewatertemp eengineoiltemp carspeed numberoflaps cmpletedlaps laptimebest laptimeprevious laptimecurrent position numcars gear tirefrontleft tirefrontright tirerearleft tirerearright numpenalties carcgloc pitch yaw roll lateral vertical longitudinal,"['function', 'take', 'variable', 'like', 'acceleration', 'gear', 'speed', 'temperature', 'time', 'function', 'make', 'check', 'automobile', 'race', 'control', 'function', 'take', 'variable', 'game', 'like', 'acceleration', 'gear', 'speed', 'temperature', 'time', 'real', 'time', 'small', 'latency', 'evaluate', 'game', 'compatible', 'gtrevo', 'race', 'varibles', 'userinput', 'rpm', 'maxenginerpm', 'fuelpressure', 'fuel', 'enginewatertemp', 'eengineoiltemp', 'carspeed', 'numberoflaps', 'cmpletedlaps', 'laptimebest', 'laptimeprevious', 'laptimecurrent', 'position', 'numcars', 'gear', 'tirefrontleft', 'tirefrontright', 'tirerearleft', 'tirerearright', 'numpenalties', 'carcgloc', 'pitch', 'yaw', 'roll', 'lateral', 'vertical', 'longitudinal']",5
383,29654,"CORDIC arctangent(atan) Simulink model. You can generate HDL from this model.<p>This Simulink sample model calculates arctangent(atan) trigonometric function with CORDIC algorithm, which you can automatically generate HDL using Simulink HDL Coder.ãã®Simulinkã¢ãã«ã¯CORDICã¢ã«ã´ãªãºã ã§ä¸è§é¢æ°ã®arctangent(atan)ã®è¨ç®ãè¡ãã¾ããSimulink HDL Coderãä½¿ãã¨ãã®ã¢ãã«ããHDLãçæãããã¨ãåºæ¥ã¾ãã</p>arc,asic,atan,cordic,fpga,hdl,simulink,tangent,verilog,vhdl,arc,asic,atan,cordic",544,24,5,0,830,cordic arctangent atan generate hdl sample calculate arctangent atan trigonometric function cordic algorithm automatically generate hdl hdl coder atan hdl,"['cordic', 'arctangent', 'atan', 'generate', 'hdl', 'sample', 'calculate', 'arctangent', 'atan', 'trigonometric', 'function', 'cordic', 'algorithm', 'automatically', 'generate', 'hdl', 'hdl', 'coder', 'atan', 'hdl']",5
384,29754,"Add-on library for SimEventsÂ® that provides blocks for modeling operations research systems.<p>NEW:  Updated for R2015a.NEW:  Example demonstrating the Reorder Point method.The library consists of a top-level SimEvents library called    se4_process.slx,eight sub-libraries:  1. se4_batching.slx,  2. se4_conveyor.slx,  3. se4_math.slx,  4. se4_utilities.slx,  5. se4_DateTime.slx,  6. se4_subsystem.slx  7. se4_examples.slx,  8. se4_test.slx,five test bench models:  1. test_accumulate.slx,   2. test_batching.slx,  3. test_conveyor.slx,  4. test_DateTime_days.slx, and  5. test_DateTime_minutes.slx.and three example models:  1. Goldratt_Dice.slx  2. Job_Shop.slx  3. Reorder_Point.slxRevision 08 (R2015a) - September 30, 2015</p>conveyor,pick of the week,potw,pick of the week,potw,batch,conveyor,des,discrete event,discrete event simulation,discrete event system,goldratt,industrial engineering,logistics,management science,manufacturing,manufacturing engineering,operations,operations research,pick of the week,potw,production,retail,simevents,supply chain,supply chain management,system dynamics,theory of constraints,toc,discrete event,batch",9,2,1,2,8,add simevents provide block operation research new updated new example demonstrate reorder point method consist top level simevents call process slxeight sub batch slx conveyor slx math slx utility slx datetime slx subsystem slx example slx test slxfive test bench test accumulate slx test batching slx test conveyor slx test datetime day slx test datetime minute slx three example goldratt dice slx job shop slx reorder point slxrevision september conveyorpick weekpotwpick eventdiscrete event event researchpick chainsupply chain dynamicstheory eventbatch,"['add', 'simevents', 'provide', 'block', 'operation', 'research', 'new', 'updated', 'new', 'example', 'demonstrate', 'reorder', 'point', 'method', 'consist', 'top', 'level', 'simevents', 'call', 'process', 'slxeight', 'sub', 'batch', 'slx', 'conveyor', 'slx', 'math', 'slx', 'utility', 'slx', 'datetime', 'slx', 'subsystem', 'slx', 'example', 'slx', 'test', 'slxfive', 'test', 'bench', 'test', 'accumulate', 'slx', 'test', 'batching', 'slx', 'test', 'conveyor', 'slx', 'test', 'datetime', 'day', 'slx', 'test', 'datetime', 'minute', 'slx', 'three', 'example', 'goldratt', 'dice', 'slx', 'job', 'shop', 'slx', 'reorder', 'point', 'slxrevision', 'september', 'conveyorpick', 'weekpotwpick', 'eventdiscrete', 'event', 'event', 'researchpick', 'chainsupply', 'chain', 'dynamicstheory', 'eventbatch']",5
385,29799,"The tool colors Simulink Model using PolySpace code verification.<p>The tool is used to color Simulink Model using PolySpace results to show directly which blocks contains or not run-time errors (like division by zero, overflow...).There are 4 colors:-green: free of run-time error-red: systematic run-time error-gray: unreachable code-orange: unproven code (potential error)</p>color,embedded code,generate code,link,model,polyspace,rtw,simulink,static analysis,verification,simulink,static analysis",12,0,1,0,11,tool color polyspace code verification tool color polyspace result show directly block contains run time error like division zero overflow color green free run time error red systematic run time error gray unreachable code orange unproven code potential error colorembedded codegenerate analysis,"['tool', 'color', 'polyspace', 'code', 'verification', 'tool', 'color', 'polyspace', 'result', 'show', 'directly', 'block', 'contains', 'run', 'time', 'error', 'like', 'division', 'zero', 'overflow', 'color', 'green', 'free', 'run', 'time', 'error', 'red', 'systematic', 'run', 'time', 'error', 'gray', 'unreachable', 'code', 'orange', 'unproven', 'code', 'potential', 'error', 'colorembedded', 'codegenerate', 'analysis']",0
386,29857,"A user-friendly Blockset for embedding real time Simulink designs on the LEGO Mindstorms NXT brick.<p>The Villanova University LEGO Real Time Target (VU-LRT) enables rapid implementation of Simulink-based designs on the LEGO Mindstorms NXT platform.  It is similar in aim to the Embedded Coder Robot (ECRobot) package by Takashi Chikamasa, but is more consistent with the Real Time Workshop development pathway, and is less constrained by ECRobot's function call / data store architecture.  An automated installer is shipped with VU-LRT - see the README.pdf in the download.  Examples include motor speed control, a line-following robot, and a re-implementation of the NXTway-GS self-balancing two-wheeled robot.***NOTE***VU-LRT was developed as an NSF and MathWorks funded project aimed at exploiting Simulink code generation tools and low-cost hardware platforms, (such as the LEGO MindStorms NXT), for educational purposes.  In R2012a, the MathWorks added code generation capabilities to core Simulink without the need for additional toolboxes thereby providing a more cost-effective solution for bringing rapid prototyping into the classroom.  The MathWorks also provided a free LEGO MindStorms NXT Target support package which delivers similar functionality to VU-LRT, but which is now professionally supported by the MathWorks.   As a result, VU-LRT will no longer be actively maintained after the R2011b release and the authors will be transitioning their own courses to the new R2012a Simulink and MathWorks LEGO MindStorms NXT Target support package.  The authors wish to thank the many enthusiastic supporters of VU-LRT who have developed so many creative projects with VU-LRT.  We hope and expect that this creativity will continue to expand and flourish using the new MathWorks tools that have become available.</p>ecrobot,embedded,lego,mindstorms,nxt,nxtway,real time workshop,robot,robotics,vulrt,electric_motor_control,power_electronics_control",41,6,2,12,33,user friendly blockset embed real time design lego mindstorms nxt brick villanova university lego real time target lrt enable rapid implementation base design lego mindstorms nxt platform similar aim embed coder robot ecrobot package takashi chikamasa consistent real time workshop development pathway less constrained ecrobot function call data store architecture automate installer ship lrt see readme pdf download example include motor speed control line follow robot implementation nxtway self balance two wheeled robot note lrt develop nsf mathworks fund project aim exploit code generation tool low cost hardware platform lego mindstorms nxt educational purpose mathworks added code generation capability core without need additional toolbox thereby provide cost effective solution bring rapid prototyping classroom mathworks also provide free lego mindstorms nxt target support package delivers similar functionality lrt professionally support mathworks result lrt longer actively maintain release author transition course new mathworks lego mindstorms nxt target support package author wish thank many enthusiastic supporter lrt develop many creative project lrt hope expect creativity continue expand flourish new mathworks tool become available time motor controlpower electronics control,"['user', 'friendly', 'blockset', 'embed', 'real', 'time', 'design', 'lego', 'mindstorms', 'nxt', 'brick', 'villanova', 'university', 'lego', 'real', 'time', 'target', 'lrt', 'enable', 'rapid', 'implementation', 'base', 'design', 'lego', 'mindstorms', 'nxt', 'platform', 'similar', 'aim', 'embed', 'coder', 'robot', 'ecrobot', 'package', 'takashi', 'chikamasa', 'consistent', 'real', 'time', 'workshop', 'development', 'pathway', 'less', 'constrained', 'ecrobot', 'function', 'call', 'data', 'store', 'architecture', 'automate', 'installer', 'ship', 'lrt', 'see', 'readme', 'pdf', 'download', 'example', 'include', 'motor', 'speed', 'control', 'line', 'follow', 'robot', 'implementation', 'nxtway', 'self', 'balance', 'two', 'wheeled', 'robot', 'note', 'lrt', 'develop', 'nsf', 'mathworks', 'fund', 'project', 'aim', 'exploit', 'code', 'generation', 'tool', 'low', 'cost', 'hardware', 'platform', 'lego', 'mindstorms', 'nxt', 'educational', 'purpose', 'mathworks', 'added', 'code', 'generation', 'capability', 'core', 'without', 'need', 'additional', 'toolbox', 'thereby', 'provide', 'cost', 'effective', 'solution', 'bring', 'rapid', 'prototyping', 'classroom', 'mathworks', 'also', 'provide', 'free', 'lego', 'mindstorms', 'nxt', 'target', 'support', 'package', 'delivers', 'similar', 'functionality', 'lrt', 'professionally', 'support', 'mathworks', 'result', 'lrt', 'longer', 'actively', 'maintain', 'release', 'author', 'transition', 'course', 'new', 'mathworks', 'lego', 'mindstorms', 'nxt', 'target', 'support', 'package', 'author', 'wish', 'thank', 'many', 'enthusiastic', 'supporter', 'lrt', 'develop', 'many', 'creative', 'project', 'lrt', 'hope', 'expect', 'creativity', 'continue', 'expand', 'flourish', 'new', 'mathworks', 'tool', 'become', 'available', 'time', 'motor', 'controlpower', 'electronics', 'control']",0
387,30047,"Power line communication with FSK mud/demud<p>This file simulation Power line communication with FSK mud/demud </p>power line,power line,power line,power line,power line,power line,power line,power line",197,20,3,0,200,power line communication fsk mud demudthis file power line communication fsk mud demud power linepower linepower linepower linepower linepower linepower linepower line,"['power', 'line', 'communication', 'fsk', 'mud', 'demudthis', 'file', 'power', 'line', 'communication', 'fsk', 'mud', 'demud', 'power', 'linepower', 'linepower', 'linepower', 'linepower', 'linepower', 'linepower', 'linepower', 'line']",5
388,30059,"Decimal to Binary in SIMULINK<p>Decimal to Binary in SIMULINK</p>simulink,simulink,simulink,simulink",3,0,1,0,2,decimal binary binary,"['decimal', 'binary', 'binary']",8
389,30165,"Simulation of a model of DC motor using Simulink.<p>Simulation of a model of DC motor, driven by constant input signal that approximates a pulse-width modulated(PWM) signal and look at the current and rotational motion at the motor output using Simulink. It uses SimElectronics and Simscape too.</p>dc motor,dc motor,simelectronics,simscape,simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control,simulink,simulink,simulink",13,0,1,0,15,motor motor drive constant input signal approximate pulse width modulate pwm signal look current rotational motion motor output simelectronics simscape motordc motor controlpower conversion controlpower electronics,"['motor', 'motor', 'drive', 'constant', 'input', 'signal', 'approximate', 'pulse', 'width', 'modulate', 'pwm', 'signal', 'look', 'current', 'rotational', 'motion', 'motor', 'output', 'simelectronics', 'simscape', 'motordc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
390,30166,"Simulation of Triangle wave generator, using Simelectronics.<p>Simulation of Triangle wave generator, using Simelectronics.</p>simelectronics,simulation,triangle wave generator",18,0,1,0,19,triangle wave generator simelectronics triangle wave generator simelectronics wave generator,"['triangle', 'wave', 'generator', 'simelectronics', 'triangle', 'wave', 'generator', 'simelectronics', 'wave', 'generator']",4
391,30224,"A very basic model of half wave controlled rectifier with three different loads. <p>The diode rectifier with R, RL and RC load is simulated. Best for those who are beginners in the field of power electronics.The results are plotted using the multimeter tool. </p>industrial electronics,power electronics,rectifier,sim power system,simulink,power_conversion_control,power_electronics_control",13,0,1,0,9,basic half wave control rectifier three different load diode rectifier load best beginner field power electronics result plot multimeter tool industrial power conversion controlpower electronics control,"['basic', 'half', 'wave', 'control', 'rectifier', 'three', 'different', 'load', 'diode', 'rectifier', 'load', 'best', 'beginner', 'field', 'power', 'electronics', 'result', 'plot', 'multimeter', 'tool', 'industrial', 'power', 'conversion', 'controlpower', 'electronics', 'control']",1
392,30225,"Fully functional single phase uncontrolled rectifier.<p>Gives a good understanding of using the linear transformer block to step down the given input voltages. GOTO and FROm blocks are also used for signal routing and selected measurements are plotted using multimeter and the scope.</p>bridge rectifier,diode rectifier,full wave uncontrolled rectifier,industrial electronics,power electronics",17,0,1,0,15,fully functional single phase uncontrolled rectifier give good understanding linear transformer block step give input voltage goto block also signal routing select measurement plot multimeter scope bridge rectifierdiode rectifierfull wave uncontrolled electronics,"['fully', 'functional', 'single', 'phase', 'uncontrolled', 'rectifier', 'give', 'good', 'understanding', 'linear', 'transformer', 'block', 'step', 'give', 'input', 'voltage', 'goto', 'block', 'also', 'signal', 'routing', 'select', 'measurement', 'plot', 'multimeter', 'scope', 'bridge', 'rectifierdiode', 'rectifierfull', 'wave', 'uncontrolled', 'electronics']",4
393,30237,"Simple tutorial of half wave rectifier with free wheeling diode . Best for beginners <p>This tutorial is a very simple one and the intended audience are the beginers in the field of power electronics and SIMULINK. Adjust the values of R and L and c the results .</p>diode,industrial electronics,power electronics,rectifiers,sim power system,simulation,simulink,uncontrolled rectifier,power_conversion_control,power_electronics_control",7,0,1,0,6,simple tutorial half wave rectifier free wheeling diode best beginner tutorial simple one intend audience beginers field power electronics adjust value result diodeindustrial power rectifierpower conversion controlpower electronics control,"['simple', 'tutorial', 'half', 'wave', 'rectifier', 'free', 'wheeling', 'diode', 'best', 'beginner', 'tutorial', 'simple', 'one', 'intend', 'audience', 'beginers', 'field', 'power', 'electronics', 'adjust', 'value', 'result', 'diodeindustrial', 'power', 'rectifierpower', 'conversion', 'controlpower', 'electronics', 'control']",3
394,30241,"Sinusoidal PWM using triangular waveform<p>Uses three sine wave blocks and a unique method of triangular waveform generation . Produces six output pulses to be used with any inverter</p>simulink,industrial electronics,pwm,sim power system,simulink,sinusoidal pwm,spwm,pwm,electric_motor_control,power_conversion_control,power_electronics_control,industrial electronics",15,0,1,0,19,sinusoidal pwm triangular waveformuses three sine wave block unique method triangular waveform generation produce six output pulse power motor controlpower conversion controlpower electronics electronics,"['sinusoidal', 'pwm', 'triangular', 'waveformuses', 'three', 'sine', 'wave', 'block', 'unique', 'method', 'triangular', 'waveform', 'generation', 'produce', 'six', 'output', 'pulse', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'electronics']",1
395,30248,"Customizes Simulink context menu with all blocks from a model file custom_context_menu_blocks.mdl. <p>Customizes Simulink context menu with all blocks from a model file custom_context_menu_blocks.mdl. These blocks are accessible through context menu: Add custom block / List of blocks. The chosen block is added at the position of the mouse click that initiated the context menu. Please feel free to modify custom_context_menu_blocks.mdl to meet your expectations and needs.It might be neccessary to run sl_refresh_customizations command to refresh Simulink context menu or set the Matlab path correctly.</p>pick of the week,potw,add block,context menu,custom menu,model,simulink,sl_customization",10,0,1,0,0,customizes context menu block file custom context menu block mdl customizes context menu block file custom context menu block mdl block accessible context menu add custom block list block choose block add position mouse click initiate context menu please feel free modify custom context menu block mdl meet expectation need might neccessary run refresh customizations command refresh context menu set path correctly pick weekpotwadd blockcontext menucustom customization,"['customizes', 'context', 'menu', 'block', 'file', 'custom', 'context', 'menu', 'block', 'mdl', 'customizes', 'context', 'menu', 'block', 'file', 'custom', 'context', 'menu', 'block', 'mdl', 'block', 'accessible', 'context', 'menu', 'add', 'custom', 'block', 'list', 'block', 'choose', 'block', 'add', 'position', 'mouse', 'click', 'initiate', 'context', 'menu', 'please', 'feel', 'free', 'modify', 'custom', 'context', 'menu', 'block', 'mdl', 'meet', 'expectation', 'need', 'might', 'neccessary', 'run', 'refresh', 'customizations', 'command', 'refresh', 'context', 'menu', 'set', 'path', 'correctly', 'pick', 'weekpotwadd', 'blockcontext', 'menucustom', 'customization']",5
396,30251,"Full wave rectifier using center tapped transformer.Good for beginners of SIMULINK and Electronics<p>Full wave rectifiers have much more efficiency than the half wave rectifiers. Two types of rectifiers used commonly are center tapped rectifiers and the bridge rectifiers. Here i am presenting a Full wave rectifier with center tapped transformer.</p>center tapped transformer,full wave rectifier,rectifier,sim power system,simulation,simulink,center tapped transformer",10,0,1,0,10,full wave rectifier center tap transformer good beginner electronicsfull wave rectifier much efficiency half wave rectifier two type rectifier commonly center tap rectifier bridge rectifier present full wave rectifier center tap transformer center tap transformerfull wave power tap transformer,"['full', 'wave', 'rectifier', 'center', 'tap', 'transformer', 'good', 'beginner', 'electronicsfull', 'wave', 'rectifier', 'much', 'efficiency', 'half', 'wave', 'rectifier', 'two', 'type', 'rectifier', 'commonly', 'center', 'tap', 'rectifier', 'bridge', 'rectifier', 'present', 'full', 'wave', 'rectifier', 'center', 'tap', 'transformer', 'center', 'tap', 'transformerfull', 'wave', 'power', 'tap', 'transformer']",4
397,30259,"Model to see the Stability of motor/ generator<p>In any power system, stability is always a important parameter. To check the stability of a synchronous generator which is connected with the grid is the power angle and freq need to know. With the help of this simulation model one can easily find Power angle and Freq.</p>control design,demo,electrical,generator,modeling,motor,power system,simulation,simulink,stability,electrical,simulation,generator,generator,electric_motor_control,power_electronics_control,stability,modeling,power system,simulink,stability,motor,power system",11,0,1,0,10,see stability motor generatorin power stability always important parameter check stability synchronous generator connect grid power angle freq need know help one easily find power angle freq control motor controlpower electronics,"['see', 'stability', 'motor', 'generatorin', 'power', 'stability', 'always', 'important', 'parameter', 'check', 'stability', 'synchronous', 'generator', 'connect', 'grid', 'power', 'angle', 'freq', 'need', 'know', 'help', 'one', 'easily', 'find', 'power', 'angle', 'freq', 'control', 'motor', 'controlpower', 'electronics']",3
398,30261,"It is a full wave center tapped rectifier with free wheeling diode <p>It presents the simple full wave rectifier that is center tapped and a free wheeling diode is used for inductive load. Best for beginners  </p>center tapped transformer,diode,power electronics,rectifier,sim power system,simulation,simulink",11,0,1,0,12,full wave center tap rectifier free wheeling diode present simple full wave rectifier center tap free wheeling diode inductive load best beginner center tap power,"['full', 'wave', 'center', 'tap', 'rectifier', 'free', 'wheeling', 'diode', 'present', 'simple', 'full', 'wave', 'rectifier', 'center', 'tap', 'free', 'wheeling', 'diode', 'inductive', 'load', 'best', 'beginner', 'center', 'tap', 'power']",4
399,30275,"Here is the illustration to solve the differential equation. <p>A differential equation can be solved by several methods. I have presented the simulink method to solve the differential equ. The que is showed in the screenshot.Queries and Comments are dearly invited.:)</p>control design,differential,differential equation,mathematics,simulation,simulink,tool box,differential,differential equation,mathematics,tool box",8,0,1,0,9,illustration solve differential equation differential equation solve several method present method solve differential equ que show screenshot query comment dearly invite control box,"['illustration', 'solve', 'differential', 'equation', 'differential', 'equation', 'solve', 'several', 'method', 'present', 'method', 'solve', 'differential', 'equ', 'que', 'show', 'screenshot', 'query', 'comment', 'dearly', 'invite', 'control', 'box']",5
400,30326,"PV panel is modeled from the equivalent circuit of PV cell equation.<p>PV panel is modeled from the equivalent circuit of PV cells in series and parallel. Each panel is designed with Short circuit current 1 Amp and Open circuit voltage (36x0.54 =) 19.44 Volts at 1000w/sqm, Enter Nos. of such panel to configure in series Ns and sets of panels in parallel Np (Pmp=13.7 at Vpv=15.12 Ipv=0.902)</p>mli,optimization,simpower,simulink,simulink,simulink,mli,simulink,optimization,simulation,simulation,simulink,simpower,mli,optimization,simpower,simulation,simulink",20,1,2,0,24,panel equivalent circuit cell equation panel equivalent circuit cell series parallel panel design short circuit current amp open circuit voltage volt sqm enter nos panel configure series set panels parallel pmp vpv ipv,"['panel', 'equivalent', 'circuit', 'cell', 'equation', 'panel', 'equivalent', 'circuit', 'cell', 'series', 'parallel', 'panel', 'design', 'short', 'circuit', 'current', 'amp', 'open', 'circuit', 'voltage', 'volt', 'sqm', 'enter', 'nos', 'panel', 'configure', 'series', 'set', 'panels', 'parallel', 'pmp', 'vpv', 'ipv']",4
401,30356,"Simscape models of electromechanical, hydraulic, and thermal systems from System Dynamics textbook.<p>This file includes models based on examples from the textbook, System Dynamics, 2e written by William Palm III and published by McGraw-Hill.  The models are built using Simscape and Simulink.  A free set of curriculum materials is available (for instructors) that includes a set of lecture slides that provides a step-by-step guide on how to build each of these models.  Instructors may request a free instructor evaluation copy from the publisher, McGraw-Hill. Learn more about these curriculum materials at:<a href=""https://www.mathworks.com/academia/courseware/system-dynamics.html?s_cid=0211_wrma_fex_239288To"">https://www.mathworks.com/academia/courseware/system-dynamics.html?s_cid=0211_wrma_fex_239288To</a> find other physical modeling examples, search for posts with the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To</a> learn more about MathWorks Physical Modeling Products, go to: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>book,companion software,electromechanical,hydraulic,ladder network,physical modeling,system dynamics,thermal,vibration",238,7,2,0,208,simscape hydraulic thermal dynamic textbook file include base example textbook dynamic write william palm publish mcgraw hill build simscape free set curriculum material available instructor include set lecture slide provide step step guide build instructor may request free instructor evaluation copy publisher mcgraw hill learn curriculum material mathworks com academia courseware dynamic html cid wrma fex find physical modeling example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks physical modeling product http mathworks com physical modeling bookcompanion networkphysical modelingsystem,"['simscape', 'hydraulic', 'thermal', 'dynamic', 'textbook', 'file', 'include', 'base', 'example', 'textbook', 'dynamic', 'write', 'william', 'palm', 'publish', 'mcgraw', 'hill', 'build', 'simscape', 'free', 'set', 'curriculum', 'material', 'available', 'instructor', 'include', 'set', 'lecture', 'slide', 'provide', 'step', 'step', 'guide', 'build', 'instructor', 'may', 'request', 'free', 'instructor', 'evaluation', 'copy', 'publisher', 'mcgraw', 'hill', 'learn', 'curriculum', 'material', 'mathworks', 'com', 'academia', 'courseware', 'dynamic', 'html', 'cid', 'wrma', 'fex', 'find', 'physical', 'modeling', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'physical', 'modeling', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'bookcompanion', 'networkphysical', 'modelingsystem']",7
402,30383,"These model files move from a system level GPS receiver channel to actual operating hardware.<p>This set of models elaborates a simple ""system level"" descrition of a GPS receiver channel all the way to operating hardware. Real world captured GPS signals are used to test the initial receiver design. Ultimatly, the design is elaborated to the point of being deployed on a Xilinx FPGA and TI DSP. NOTE: You do not have to have the tools to do this to use most of the models. </p>acquisition,cdma,fpga,gps,timing,tracking",2616,256,6,0,2850,file move level gps receiver channel actual operating hardware set elaborate simple level descrition gps receiver channel way operate hardware real world capture gps signal test initial receiver design ultimatly design elaborate point deploy xilinx fpga dsp note tool,"['file', 'move', 'level', 'gps', 'receiver', 'channel', 'actual', 'operating', 'hardware', 'set', 'elaborate', 'simple', 'level', 'descrition', 'gps', 'receiver', 'channel', 'way', 'operate', 'hardware', 'real', 'world', 'capture', 'gps', 'signal', 'test', 'initial', 'receiver', 'design', 'ultimatly', 'design', 'elaborate', 'point', 'deploy', 'xilinx', 'fpga', 'dsp', 'note', 'tool']",0
403,30443,"Simulation method to study the transmission line faults...<p>There are several methods to solve the transmission line fault problem. In this example i showed how to solve the transmission lines in simulink . . . The problem is taken from the Hadi Sadat power system. Page no 482 Ex-11.3keep Enjoying </p>all types of fault analysis in power system matlab,control design,demo,electrical engineering,fault analysis,power system,signal processing,simulink,fault analysis,fault analysis,fault analysis",15,0,1,0,16,method study transmission line fault several method solve transmission line fault problem example show solve transmission line problem take hadi sadat power page keep enjoy type fault analysis power matlabcontrol analysispower systemsignal analysisfault analysisfault analysis,"['method', 'study', 'transmission', 'line', 'fault', 'several', 'method', 'solve', 'transmission', 'line', 'fault', 'problem', 'example', 'show', 'solve', 'transmission', 'line', 'problem', 'take', 'hadi', 'sadat', 'power', 'page', 'keep', 'enjoy', 'type', 'fault', 'analysis', 'power', 'matlabcontrol', 'analysispower', 'systemsignal', 'analysisfault', 'analysisfault', 'analysis']",0
404,30473,"Full Wave rectifier with a free wheeling diode and inductive Load<p>Presents here the full wave bridge rectifier feeding an inductive load and using a free wheeling diode . Best for beginners .</p>diode based rectifier,full wave bridge rectifier,power electronics,simulink",11,0,1,0,11,full wave rectifier free wheeling diode inductive loadpresents full wave bridge rectifier feed inductive load free wheel diode best beginner diode base rectifierfull wave bridge rectifierpower,"['full', 'wave', 'rectifier', 'free', 'wheeling', 'diode', 'inductive', 'loadpresents', 'full', 'wave', 'bridge', 'rectifier', 'feed', 'inductive', 'load', 'free', 'wheel', 'diode', 'best', 'beginner', 'diode', 'base', 'rectifierfull', 'wave', 'bridge', 'rectifierpower']",4
405,30493,"Semiconductor switches mainly determine the overall price of power converters.so 2leg inverters best<p>two-leg inverters are the best option for high performance low power applications. It can be resolved by comparing the no of semiconductor switches usage in 2-leg and 3-leg inverters and moreover two leg inverters allow the asymmetrical voltages. To enable this, space vector pulse width modulation (SVPWM) technique for two-leg and three-leg inverters is presented.SVPWM is an advanced pulse width modulation (PWM) technique which is used to generate gating signals for the inverters. This PWM scheme requires only instantaneous phase reference voltages for its implementation in the full range. The time consuming task of sector identification is altogether avoided with this scheme and computational burden is also reduced. Also switching ripple is less and harmonic distortion of the output wave decreases by the SVM. </p>space vector pulse width modulation,svpwm,2 leg inverter,simulink,space vector pwm,svm for two leg inverter,electric_motor_control,power_conversion_control,power_electronics_control,2 leg inverter",162,7,4,0,174,semiconductor switch mainly determine overall price power converter leg inverter besttwo leg inverter best option high performance low power application resolve compare semiconductor switch usage leg leg inverter moreover two leg inverter allow asymmetrical voltage enable space vector pulse width modulation svpwm technique two leg three leg inverter present svpwm advance pulse width modulation pwm technique generate gating signal inverter pwm scheme require instantaneous phase reference voltage implementation full range time consume task sector identification altogether avoid scheme computational burden also reduce also switch ripple less harmonic distortion output wave decrease svm space vector pulse width modulationsvpwm leg vector pwmsvm two leg motor controlpower conversion controlpower electronics control leg inverter,"['semiconductor', 'switch', 'mainly', 'determine', 'overall', 'price', 'power', 'converter', 'leg', 'inverter', 'besttwo', 'leg', 'inverter', 'best', 'option', 'high', 'performance', 'low', 'power', 'application', 'resolve', 'compare', 'semiconductor', 'switch', 'usage', 'leg', 'leg', 'inverter', 'moreover', 'two', 'leg', 'inverter', 'allow', 'asymmetrical', 'voltage', 'enable', 'space', 'vector', 'pulse', 'width', 'modulation', 'svpwm', 'technique', 'two', 'leg', 'three', 'leg', 'inverter', 'present', 'svpwm', 'advance', 'pulse', 'width', 'modulation', 'pwm', 'technique', 'generate', 'gating', 'signal', 'inverter', 'pwm', 'scheme', 'require', 'instantaneous', 'phase', 'reference', 'voltage', 'implementation', 'full', 'range', 'time', 'consume', 'task', 'sector', 'identification', 'altogether', 'avoid', 'scheme', 'computational', 'burden', 'also', 'reduce', 'also', 'switch', 'ripple', 'less', 'harmonic', 'distortion', 'output', 'wave', 'decrease', 'svm', 'space', 'vector', 'pulse', 'width', 'modulationsvpwm', 'leg', 'vector', 'pwmsvm', 'two', 'leg', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'leg', 'inverter']",3
406,30503,"in a svm we have to use 6switches in 3 legs. overall outage increased by svm method.THD also reduced<p>1.for a good inverter gain must be a high, it possible in svm 15% more compare to normal pwm.2.inverter consumption power must be less. in svm at each sector only one switch varied. so total consumption will be reduced3.third harmonic can be effectively eliminated by svm method.4.no need of lookup tables for this method.</p>space vector pulse width modulation,svpwm,space vector pwm,pulse width modulation techniques,simulation,simulink,space vector pwm,svm for 3 leg inverter,space vector pwm,simulink,electric_motor_control,power_conversion_control,power_electronics_control",148,2,2,0,173,svm switch legs overall outage increase svm method thd also reduce good inverter gain must high possible svm compare normal pwm inverter consumption power must less svm sector one switch vary total consumption reduce third harmonic effectively eliminate svm method need lookup table method space vector pulse width vector pwmpulse width modulation vector pwmsvm leg inverterspace vector motor controlpower conversion controlpower electronics control,"['svm', 'switch', 'legs', 'overall', 'outage', 'increase', 'svm', 'method', 'thd', 'also', 'reduce', 'good', 'inverter', 'gain', 'must', 'high', 'possible', 'svm', 'compare', 'normal', 'pwm', 'inverter', 'consumption', 'power', 'must', 'less', 'svm', 'sector', 'one', 'switch', 'vary', 'total', 'consumption', 'reduce', 'third', 'harmonic', 'effectively', 'eliminate', 'svm', 'method', 'need', 'lookup', 'table', 'method', 'space', 'vector', 'pulse', 'width', 'vector', 'pwmpulse', 'width', 'modulation', 'vector', 'pwmsvm', 'leg', 'inverterspace', 'vector', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
407,30528,"carrier based inverters for unbalanced dc voltage sources<p>Recently,inverters have drawn a great attention of specialists in several applications.That is multiphase motor drives, which show be advantageous to three phase motor drive in some applications for reducing power demanding on each phase and having a better reliability.however developing a generalised PWM theory for multiphase inverter can be very use ful for applications since â¢it helps systematically and comfortably to deduce a proper PWM method for individual inverter topology. â¢ A generalised PWM approach can save time for solving PWM control of novel or hybrid inverter topologies.</p>self_rate,carrier wave 3 leg inverter,harmonic reduction techniques,inverter,pwm inverter,pwm technique for inverter,simulation,simulink,six step inverter,electric_motor_control,power_conversion_control,power_electronics_control",43,0,1,0,57,carrier base inverter unbalanced voltage drawn great attention specialist several application multiphase motor drive show advantageous three phase motor drive application reduce power demand phase well reliability however develop generalise pwm theory multiphase inverter ful application since help systematically comfortably deduce proper pwm method individual inverter topology generalise pwm approach save time solve pwm control novel hybrid inverter topology self ratecarrier wave leg reduction inverterpwm technique step motor controlpower conversion controlpower electronics control,"['carrier', 'base', 'inverter', 'unbalanced', 'voltage', 'drawn', 'great', 'attention', 'specialist', 'several', 'application', 'multiphase', 'motor', 'drive', 'show', 'advantageous', 'three', 'phase', 'motor', 'drive', 'application', 'reduce', 'power', 'demand', 'phase', 'well', 'reliability', 'however', 'develop', 'generalise', 'pwm', 'theory', 'multiphase', 'inverter', 'ful', 'application', 'since', 'help', 'systematically', 'comfortably', 'deduce', 'proper', 'pwm', 'method', 'individual', 'inverter', 'topology', 'generalise', 'pwm', 'approach', 'save', 'time', 'solve', 'pwm', 'control', 'novel', 'hybrid', 'inverter', 'topology', 'self', 'ratecarrier', 'wave', 'leg', 'reduction', 'inverterpwm', 'technique', 'step', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
408,30533,"Design and Testing of OCR on Power System.<p>File contains the design of a digital over current relay block (Directional and Non Directional) â a key component of any protection scheme â and its performance on SIMULINKÂ®. A 400V industrial distribution power system is used as a tutorial to simulate and test over-current relayâs performance results, with motor start up inrush current consideration and backup relay coordination for safe and reliable operation. Similarly, a 132kV loop network is used as tutorial to simulate and test the directional over-current relayâs performance.This is authorized work. Any modification in simulation need citation of work or prior permission from author.For Details Refer Journal Paper:M.M. Aman;, M.Q.A. Khan;, S.A. Qazi;, Digital Directional and Non-Directional Over Current Relays: Modelling and Performance Analysis, NED University Journal of Research, 8 (2011).<a href=""http://www.neduet.edu.pk/NED-Journal/pdf/11vol2paper7.pdf"">http://www.neduet.edu.pk/NED-Journal/pdf/11vol2paper7.pdf</a></p>simulink,directional ocr,ocr,electric_motor_control,power_electronics_control",736,35,6,0,795,design test ocr power file contain design digital current relay block directional non directional key component protection scheme performance industrial distribution power tutorial test current relay performance result motor start inrush current consideration backup relay coordination safe reliable operation similarly loop network tutorial test directional current relay performance authorize work modification need citation work prior permission author detail refer journal paper aman khan qazi digital directional non directional current relay performance analysis ned university journal research http neduet edu ned journal pdf vol paper ocrocrelectric motor controlpower electronics control,"['design', 'test', 'ocr', 'power', 'file', 'contain', 'design', 'digital', 'current', 'relay', 'block', 'directional', 'non', 'directional', 'key', 'component', 'protection', 'scheme', 'performance', 'industrial', 'distribution', 'power', 'tutorial', 'test', 'current', 'relay', 'performance', 'result', 'motor', 'start', 'inrush', 'current', 'consideration', 'backup', 'relay', 'coordination', 'safe', 'reliable', 'operation', 'similarly', 'loop', 'network', 'tutorial', 'test', 'directional', 'current', 'relay', 'performance', 'authorize', 'work', 'modification', 'need', 'citation', 'work', 'prior', 'permission', 'author', 'detail', 'refer', 'journal', 'paper', 'aman', 'khan', 'qazi', 'digital', 'directional', 'non', 'directional', 'current', 'relay', 'performance', 'analysis', 'ned', 'university', 'journal', 'research', 'http', 'neduet', 'edu', 'ned', 'journal', 'pdf', 'vol', 'paper', 'ocrocrelectric', 'motor', 'controlpower', 'electronics', 'control']",4
409,30599,"Load frequency control of single area system basic model<p>Base paper detail : ""Improved Particle Swarm Optimization Based Load Frequency Control In A Single Area Power System""Saumya Kr. Gautam, Nakul Goyal Department of Electrical Engineering, IT-BHUVaranasi,India.""This my first model, implementing IPSO/ Other Algorithm i will publish soon""</p>lfc,load frequency control,single area,lfc,lfc",9,0,1,0,10,load frequency control single area basic modelbase paper detail improve particle swarm optimization base load frequency control single area power saumya gautam nakul goyal department electrical engineering first implement ipso algorithm publish soon lfcload frequency controlsingle arealfclfc,"['load', 'frequency', 'control', 'single', 'area', 'basic', 'modelbase', 'paper', 'detail', 'improve', 'particle', 'swarm', 'optimization', 'base', 'load', 'frequency', 'control', 'single', 'area', 'power', 'saumya', 'gautam', 'nakul', 'goyal', 'department', 'electrical', 'engineering', 'first', 'implement', 'ipso', 'algorithm', 'publish', 'soon', 'lfcload', 'frequency', 'controlsingle', 'arealfclfc']",4
410,30700,"A simple simulation model for Power Electronics students, teachers and enthusiasts. <p>A simple simulation Model for DC DC step-down buck converter, the model allows measurments of output current/voltage, capacitor current, diode current. Ripples in each measurment can be observed very accurately using the scope</p>aerospace,automotive,buck,buck converter,control design,dc dc converter,distributed,gui,libya,mathematics,measurement,modeling,optimization,simulation,simulink,stepdown,buck converter,stepdown,power_conversion_control,power_electronics_control",20,0,1,0,20,simple power electronics student teacher enthusiast simple step buck converter allow measurments output current voltage capacitor current diode current ripple measurment observe accurately designdc conversion controlpower electronics control,"['simple', 'power', 'electronics', 'student', 'teacher', 'enthusiast', 'simple', 'step', 'buck', 'converter', 'allow', 'measurments', 'output', 'current', 'voltage', 'capacitor', 'current', 'diode', 'current', 'ripple', 'measurment', 'observe', 'accurately', 'designdc', 'conversion', 'controlpower', 'electronics', 'control']",1
411,30830,"This block for Simulink provides a chirp source for stimulating unknown system dynamics.<p>This block for Simulink provides a chirp source for stimulating unknown system dynamics.  The block has been developed specifically for the purpose of system identification, however it should be of interest to anyone looking for a robust and flexible chirp function.  The chirp function is modelled using a power equation and is suitable for discrete time applications.  The performance can be tuned to user requirements.  It appears to provide advanced performance over the default blocks provided in the Simulink and Signal Processing blocksets.</p>control design,modeling,simulink,system identification",25,1,2,0,26,block provide chirp source stimulate unknown dynamic block provide chirp source stimulate unknown dynamic block develop specifically purpose identification however interest anyone look robust flexible chirp function chirp function power equation suitable discrete time application performance tune user requirement appear provide advanced performance default block provide signal processing blocksets control identification,"['block', 'provide', 'chirp', 'source', 'stimulate', 'unknown', 'dynamic', 'block', 'provide', 'chirp', 'source', 'stimulate', 'unknown', 'dynamic', 'block', 'develop', 'specifically', 'purpose', 'identification', 'however', 'interest', 'anyone', 'look', 'robust', 'flexible', 'chirp', 'function', 'chirp', 'function', 'power', 'equation', 'suitable', 'discrete', 'time', 'application', 'performance', 'tune', 'user', 'requirement', 'appear', 'provide', 'advanced', 'performance', 'default', 'block', 'provide', 'signal', 'processing', 'blocksets', 'control', 'identification']",0
412,30953,"C-MEX S-function that reduces the execution speed of a model close to real time.<p>This block is a version of the block given in the submission ""Simulink Real Time Execution"" (File ID:#21908) with some enhanced features. These blocks could be used to reduce the speed of a Simulink model so that it can be observed running in real time. Compared to the previous submission this version takes the execution time between the calculation steps into account. Furthermore, a high-resolution performance counter is used to get the time that exceeds one microsecond accuracy. As last the remaining time is calculated and given as output.</p>real time simulation,simulink,simulink real time execution,simulink real time execution",4,0,1,0,2,mex function reduce execution speed close real time block version block give submission real time execution file enhance feature block could reduce speed observe run real time compare previous submission version take execution time calculation step account furthermore high resolution performance counter get time exceed one microsecond accuracy last remaining time calculate give output real time real time real time execution,"['mex', 'function', 'reduce', 'execution', 'speed', 'close', 'real', 'time', 'block', 'version', 'block', 'give', 'submission', 'real', 'time', 'execution', 'file', 'enhance', 'feature', 'block', 'could', 'reduce', 'speed', 'observe', 'run', 'real', 'time', 'compare', 'previous', 'submission', 'version', 'take', 'execution', 'time', 'calculation', 'step', 'account', 'furthermore', 'high', 'resolution', 'performance', 'counter', 'get', 'time', 'exceed', 'one', 'microsecond', 'accuracy', 'last', 'remaining', 'time', 'calculate', 'give', 'output', 'real', 'time', 'real', 'time', 'real', 'time', 'execution']",7
413,30961,"Three phase simple PWM inverter with 180 degree conduction<p>It simulates three phase simple PWM-180 degree conduction based inverter. Frequency and output voltage can be changed using slider gains block used.</p>180 degree conduction,control,duty cycle,inverters,power electronics,power systems,pwm,pwm inverter,variable frequency,electric_motor_control,power_conversion_control,power_electronics_control",122,6,4,0,134,three phase simple pwm inverter degree conductionit three phase simple pwm degree conduction base inverter frequency output voltage change slider gain block degree systemspwmpwm motor controlpower conversion controlpower electronics control,"['three', 'phase', 'simple', 'pwm', 'inverter', 'degree', 'conductionit', 'three', 'phase', 'simple', 'pwm', 'degree', 'conduction', 'base', 'inverter', 'frequency', 'output', 'voltage', 'change', 'slider', 'gain', 'block', 'degree', 'systemspwmpwm', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
414,30981,generation of twenty four pulses<p>this circuit describes the generation of twenty four pulses</p>simulation,210,25,5,0,219,generation twenty four pulsesthis circuit describe generation twenty four,"['generation', 'twenty', 'four', 'pulsesthis', 'circuit', 'describe', 'generation', 'twenty', 'four']",5
415,31020,"This example shows how to import Matlab Structs into Simulink by using BusObjects.<p>By configuring BusObjects in the signal type of a constant (might also work for input ports!), Simulink can import structure data from structure variables in workspace.Only for 2010b and later!!</p>bus,simulink,structures",6,0,1,0,5,example show import structs busobjects configure busobjects signal type constant might also work input port import structure data structure variable workspace later,"['example', 'show', 'import', 'structs', 'busobjects', 'configure', 'busobjects', 'signal', 'type', 'constant', 'might', 'also', 'work', 'input', 'port', 'import', 'structure', 'data', 'structure', 'variable', 'workspace', 'later']",0
416,31022,"it simulates behavior of core type transformer at different connections. <p>the behavior of transformer current is different at different, to learn how these currents behave I ve made a simulation so that students can make different connections to it and and observe different behaviors without any danger. because at the real transformer it would always a danger of shock and ordinary scholar can not afford it. This model is made quite easy and user friendly.  </p>demo,electrical engineering,simulink",398,37,4,0,438,behavior core type transformer different connection behavior transformer current different different learn current behave make student make different connection observe different behavior without danger real transformer would always danger shock ordinary scholar afford make quite easy user friendly demoelectrical,"['behavior', 'core', 'type', 'transformer', 'different', 'connection', 'behavior', 'transformer', 'current', 'different', 'different', 'learn', 'current', 'behave', 'make', 'student', 'make', 'different', 'connection', 'observe', 'different', 'behavior', 'without', 'danger', 'real', 'transformer', 'would', 'always', 'danger', 'shock', 'ordinary', 'scholar', 'afford', 'make', 'quite', 'easy', 'user', 'friendly', 'demoelectrical']",0
417,31026,"Simulink system that generates primes<p>This is a Simulink implementation of a dynamical system that generates a sequence of primes.</p>mathematics,simulink",42,4,3,0,54,generates primesthis implementation dynamical generates sequence prime,"['generates', 'primesthis', 'implementation', 'dynamical', 'generates', 'sequence', 'prime']",8
418,31041,"Position control of a DC motor<p>This model simulates the position control of a DC motor. Parameters can be changed from the model properties tag. </p>control,control design,control systems,current loop,dc machines,machine control,model,motor,pi controller,position control,power electronics,power system,simulink,speed loop,motor,control,it is good but why there is no position pi controller,control,electric_motor_control,power_conversion_control,power_electronics_control,control",44,3,2,0,49,position control motorthis position control motor parameter change property tag controlcontrol designcontrol systemscurrent loopdc machinesmachine controlpower good position motor controlpower conversion controlpower electronics controlcontrol,"['position', 'control', 'motorthis', 'position', 'control', 'motor', 'parameter', 'change', 'property', 'tag', 'controlcontrol', 'designcontrol', 'systemscurrent', 'loopdc', 'machinesmachine', 'controlpower', 'good', 'position', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",1
419,31107,"M-files for ""Mono- and Multivariable Control and Estimation: Linear, Quadratic and LMI Methods""<p>This archive contains the script files of the main program, ""MMCE.m"", and of 11 function files, used in the solved exercises of the book. They work with Matlab R2007b through R2009b It contains also three simulation diagrams to be used with Simulink, in two versions (for the two versions of Matlab mentioned above).These files allow the user to repeat the solutions proposed in the book, or to try other ones.Solving the LMI exercises of chapter 6 requires the solver SeDuMi and the friendly Matlab interface Yalmip, both freely downloadable.</p>control design,lmi,optimization,simulation,lmi",248,0,1,0,340,file mono multivariable control estimation linear quadratic lmi method archive contains script file main program mmce function file solve exercise book work contains also three diagram two version two version mention file allow user repeat solution propose book try one solve lmi exercise chapter require solver sedumi friendly interface yalmip freely downloadable control,"['file', 'mono', 'multivariable', 'control', 'estimation', 'linear', 'quadratic', 'lmi', 'method', 'archive', 'contains', 'script', 'file', 'main', 'program', 'mmce', 'function', 'file', 'solve', 'exercise', 'book', 'work', 'contains', 'also', 'three', 'diagram', 'two', 'version', 'two', 'version', 'mention', 'file', 'allow', 'user', 'repeat', 'solution', 'propose', 'book', 'try', 'one', 'solve', 'lmi', 'exercise', 'chapter', 'require', 'solver', 'sedumi', 'friendly', 'interface', 'yalmip', 'freely', 'downloadable', 'control']",0
420,31142,"Example that shows how you can visualize airline routes on the globe.<p>In this demo, with an ordered list of cities with latitudes and longitudes as input, the simulator computes the shortest path between the two consecutive cities and then animates the aircraft motion on 3D earth while tracing the trajectory. Observe that this is an example where the analysis of the data is done in MATLAB and the data is ""played back"" in Simulink.Also, attached to the plane is a North-East-Down (NED) frame, that gives a better understanding of aircraft coordinate systems.Key design considerations:1. The image of the earth that was used to texture the spherical earth was from NASA's 2002 Blue Marble imagesPlease note that calibrating the latitudes and longitudes on this spehrical earth requires that you use a mercator projection with aspect ratio 2:1. 2. The great circles joining any two cities were computed using the Mapping Toolbox's track2 function:<a href=""http://www.mathworks.com/help/toolbox/map/ref/track2.htmlThe"">http://www.mathworks.com/help/toolbox/map/ref/track2.htmlThe</a> number of sampling points chosen were scaled accordingly to allow for uniformity in airplane motion. 3. The set of latitudes and longitudes were input to a LLA to ECEF block to compute the translational coordinates of the aircraft with the NED frame attached:<a href=""http://www.mathworks.com/help/toolbox/aeroblks/llatoecefposition.html4"">http://www.mathworks.com/help/toolbox/aeroblks/llatoecefposition.html4</a>. To compute the orientation of the NED frame, the Direction Cosine Matrix to Quaternion block was used before mapping it to VRML rotational coordinates:<a href=""http://www.mathworks.com/help/toolbox/aeroblks/directioncosinematrixtoquaternions.htmlThe"">http://www.mathworks.com/help/toolbox/aeroblks/directioncosinematrixtoquaternions.htmlThe</a> use of quaternions avoids the issues such as those encountered in this demo:<a href=""http://www.mathworks.com/matlabcentral/fileexchange/261235"">http://www.mathworks.com/matlabcentral/fileexchange/261235</a>. The VR Tracer block from Simulink 3D Animation traces the trajectory in the 3D world. It is put inside an enabled subsystem to downsample the number of trajectory points and thus save memroy for visualization(each point plotted is a 3D object)Thought provoking questions:1. Observe how thethe orientation of the aircraft is computed in the NED frame. How does this accuracy depend on the largest allowable number of sampling points i.e. t_scaled?2. How accurate is the aircraft orientation for routes that pass over the poles? </p>pick of the week,potw,3d,aerospace,air,animation,blockset,ecef,flight,ned,pick of the week,planning,potw,reality,route,simulator,traffic,virtual",43,4,2,0,47,example show visualize airline route globe demo ordered list city latitudes longitude input compute short path two consecutive city animate aircraft motion earth trace trajectory observe example analysis data data play back also attach plane north east ned frame give well understand aircraft coordinate key design consideration image earth texture spherical earth nasa blue marble imagesplease note calibrate latitude longitudes spehrical earth require mercator projection aspect ratio great circle join two city compute map toolbox track function http mathworks com help toolbox map ref track htmlthe number sample point choose scaled accordingly allow uniformity airplane motion set latitude longitude input lla ecef block compute translational coordinate aircraft ned frame attach http mathworks com help toolbox aeroblks html compute orientation ned frame direction cosine matrix quaternion block mapping vrml rotational coordinate http mathworks com help toolbox aeroblks htmlthe quaternion avoids issue encounter demo http mathworks com matlabcentral fileexchange tracer block animation trace trajectory world put inside enabled subsystem downsample number trajectory point thus save memroy visualization point plot object thought provoke question observe thethe orientation aircraft compute ned frame accuracy depend large allowable number sample point scale accurate aircraft orientation route pass pole pick weekpotw,"['example', 'show', 'visualize', 'airline', 'route', 'globe', 'demo', 'ordered', 'list', 'city', 'latitudes', 'longitude', 'input', 'compute', 'short', 'path', 'two', 'consecutive', 'city', 'animate', 'aircraft', 'motion', 'earth', 'trace', 'trajectory', 'observe', 'example', 'analysis', 'data', 'data', 'play', 'back', 'also', 'attach', 'plane', 'north', 'east', 'ned', 'frame', 'give', 'well', 'understand', 'aircraft', 'coordinate', 'key', 'design', 'consideration', 'image', 'earth', 'texture', 'spherical', 'earth', 'nasa', 'blue', 'marble', 'imagesplease', 'note', 'calibrate', 'latitude', 'longitudes', 'spehrical', 'earth', 'require', 'mercator', 'projection', 'aspect', 'ratio', 'great', 'circle', 'join', 'two', 'city', 'compute', 'map', 'toolbox', 'track', 'function', 'http', 'mathworks', 'com', 'help', 'toolbox', 'map', 'ref', 'track', 'htmlthe', 'number', 'sample', 'point', 'choose', 'scaled', 'accordingly', 'allow', 'uniformity', 'airplane', 'motion', 'set', 'latitude', 'longitude', 'input', 'lla', 'ecef', 'block', 'compute', 'translational', 'coordinate', 'aircraft', 'ned', 'frame', 'attach', 'http', 'mathworks', 'com', 'help', 'toolbox', 'aeroblks', 'html', 'compute', 'orientation', 'ned', 'frame', 'direction', 'cosine', 'matrix', 'quaternion', 'block', 'mapping', 'vrml', 'rotational', 'coordinate', 'http', 'mathworks', 'com', 'help', 'toolbox', 'aeroblks', 'htmlthe', 'quaternion', 'avoids', 'issue', 'encounter', 'demo', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'tracer', 'block', 'animation', 'trace', 'trajectory', 'world', 'put', 'inside', 'enabled', 'subsystem', 'downsample', 'number', 'trajectory', 'point', 'thus', 'save', 'memroy', 'visualization', 'point', 'plot', 'object', 'thought', 'provoke', 'question', 'observe', 'thethe', 'orientation', 'aircraft', 'compute', 'ned', 'frame', 'accuracy', 'depend', 'large', 'allowable', 'number', 'sample', 'point', 'scale', 'accurate', 'aircraft', 'orientation', 'route', 'pass', 'pole', 'pick', 'weekpotw']",5
421,31202,"C based S-Function blocks implementing biderectional convertion single precision floats <=> uint32 <p>IEEE single precision floating point numbers are built from 32 bits. Sometimes especially when trying to cosimulate with an FPGA vendor provided floating point cores, it is need to represent these numbers as unsigned 32 bit integers. Standard Simulink ""type conversion"" block in ""stored integer"" mode does no do this well (all fractional parts are not propagated).Limitation:Does not support automatic HDL code generation.</p>control design,floating point core,fpga,ieee single,modeling,signal processing,simulation,simulink,uint32",25,2,3,0,22,base function block implement biderectional convertion single precision float uint iee single precision float point number build bit sometimes especially try fpga vendor provide float point core need represent number unsigned bit integer standard type conversion block store integer mode well fractional part propagate limitation support automatic hdl code generation control designfloating point corefpgaiee,"['base', 'function', 'block', 'implement', 'biderectional', 'convertion', 'single', 'precision', 'float', 'uint', 'iee', 'single', 'precision', 'float', 'point', 'number', 'build', 'bit', 'sometimes', 'especially', 'try', 'fpga', 'vendor', 'provide', 'float', 'point', 'core', 'need', 'represent', 'number', 'unsigned', 'bit', 'integer', 'standard', 'type', 'conversion', 'block', 'store', 'integer', 'mode', 'well', 'fractional', 'part', 'propagate', 'limitation', 'support', 'automatic', 'hdl', 'code', 'generation', 'control', 'designfloating', 'point', 'corefpgaiee']",0
422,31241,"Center alignment gives the less THD. so, i presented here three types of alignments. <p>In Space Vector PWM we will get the less Switching losses due to determination of sectors, by the center alignment we will get the less THD.in Space Vector Modulation became a standard for the switching power converters and important research effort has been dedicated to this topic.</p>inverter,pwm,pwm signals,simulation,simulink,space vector pulse width modulation,sv_pwm switching patterns,svm,thd,pwm signals,inverter,electric_motor_control,power_conversion_control,power_electronics_control",277,3,2,0,353,center alignment give less thd present three type alignment space vector pwm get less switching loss due determination sector center alignment get less thd space vector modulation become standard switch power converter important research effort dedicate topic inverterpwmpwm vector pulse width modulationsv pwm switch motor controlpower conversion controlpower electronics control,"['center', 'alignment', 'give', 'less', 'thd', 'present', 'three', 'type', 'alignment', 'space', 'vector', 'pwm', 'get', 'less', 'switching', 'loss', 'due', 'determination', 'sector', 'center', 'alignment', 'get', 'less', 'thd', 'space', 'vector', 'modulation', 'become', 'standard', 'switch', 'power', 'converter', 'important', 'research', 'effort', 'dedicate', 'topic', 'inverterpwmpwm', 'vector', 'pulse', 'width', 'modulationsv', 'pwm', 'switch', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
423,31249,"Basic infrastructure S-Function for hooking up a SimEvents model to Simulink 3D Animation<p>The demo uses one possible implementation of hooking up a SimEvents model with 3D animation using Simulink 3D Animation.A simple model of an entity generation is created in SimEvents. This entity generation is sampled in time to establish synchronism between the 3D objects created dynamically inside the Simulink 3D Animation environment and the SimEvents model.The attribute functions are used to randomly select the color of the balls thereby modeling two dimensional randomized events in the system (entity generation and their color in time)The 3D spheres that are created on the ""fly"" uses the PROTO definitions of similar objects contained in the ""vrmarkers.wrl"" file that ships with Simulink 3D Animation.These objects can be replaced with more complex objects such as luggage, machine parts etc. Also, the velocity of the balls is the same for all to maintain homogeneity. This is a parameter that can be modified in the S-Function. </p>3d,animation,assembly,automation,discrete,event,factory,line,reality,simevents,simulation,simulink,virtual",13,2,2,0,12,basic infrastructure function hook simevents animationthe demo one possible implementation hook simevents animation animation simple entity generation create simevents entity generation sample time establish synchronism object create dynamically inside animation environment simevents attribute function randomly select color ball thereby two dimensional randomized event entity generation color time sphere create fly proto definition similar object contain vrmarkers wrl file ship animation object replace complex object luggage machine part etc also velocity ball maintain homogeneity parameter modify function,"['basic', 'infrastructure', 'function', 'hook', 'simevents', 'animationthe', 'demo', 'one', 'possible', 'implementation', 'hook', 'simevents', 'animation', 'animation', 'simple', 'entity', 'generation', 'create', 'simevents', 'entity', 'generation', 'sample', 'time', 'establish', 'synchronism', 'object', 'create', 'dynamically', 'inside', 'animation', 'environment', 'simevents', 'attribute', 'function', 'randomly', 'select', 'color', 'ball', 'thereby', 'two', 'dimensional', 'randomized', 'event', 'entity', 'generation', 'color', 'time', 'sphere', 'create', 'fly', 'proto', 'definition', 'similar', 'object', 'contain', 'vrmarkers', 'wrl', 'file', 'ship', 'animation', 'object', 'replace', 'complex', 'object', 'luggage', 'machine', 'part', 'etc', 'also', 'velocity', 'ball', 'maintain', 'homogeneity', 'parameter', 'modify', 'function']",0
424,31321,"A buck converter is a step-down DC to DC converter<p>The operation of the buck converter is fairly simple, with an inductor and two switches (usually a transistor and a diode) that control the inductor. It alternates between connecting the inductor to source voltage to store energy in the inductor and discharging the inductor into the load.</p>automotive,power_conversion_control,power_electronics_control",28,3,2,0,30,buck converter step converterthe operation buck converter fairly simple inductor two switch usually transistor diode control inductor alternate connect inductor source voltage store energy inductor discharge inductor load automotivepower conversion controlpower electronics control,"['buck', 'converter', 'step', 'converterthe', 'operation', 'buck', 'converter', 'fairly', 'simple', 'inductor', 'two', 'switch', 'usually', 'transistor', 'diode', 'control', 'inductor', 'alternate', 'connect', 'inductor', 'source', 'voltage', 'store', 'energy', 'inductor', 'discharge', 'inductor', 'load', 'automotivepower', 'conversion', 'controlpower', 'electronics', 'control']",3
425,31327,Exporting Bus creator bus definitions to Bus objects automatically.<p>Very often we create Busses in Simulink blocks that later need to be treated more seriously with Busobjects. Here there is an example for doing the Bus Object automatically from the block definition without using Bus editor manually.</p>simulink,28,2,2,0,24,export bus creator bus definition bus object automatically often create bus block later need treat seriously busobjects example bus object automatically block definition without bus editor manually,"['export', 'bus', 'creator', 'bus', 'definition', 'bus', 'object', 'automatically', 'often', 'create', 'bus', 'block', 'later', 'need', 'treat', 'seriously', 'busobjects', 'example', 'bus', 'object', 'automatically', 'block', 'definition', 'without', 'bus', 'editor', 'manually']",0
426,31384,"Detect change in a signal and output a function call that can drive downstream dependant blocks<p>The ""Detect Change"" block works great for outputting a Simulink Signal, but oftentimes you may wish to output function-call to trigger some downstream logic of function-called subsystems. Here is an S-Function that does just that(Ensure your compiler is set up properly)mex sfun_detect2funcall.csim Model_detect2funcall</p>detect change,functioncall subsystem,sfunction",19,2,2,0,18,detect change signal output function call drive downstream dependant blocksthe detect change block work great output signal oftentimes may wish output function call trigger downstream logic function call subsystems function ensure compiler set properly mex sfun detect funcall csim detect funcalldetect,"['detect', 'change', 'signal', 'output', 'function', 'call', 'drive', 'downstream', 'dependant', 'blocksthe', 'detect', 'change', 'block', 'work', 'great', 'output', 'signal', 'oftentimes', 'may', 'wish', 'output', 'function', 'call', 'trigger', 'downstream', 'logic', 'function', 'call', 'subsystems', 'function', 'ensure', 'compiler', 'set', 'properly', 'mex', 'sfun', 'detect', 'funcall', 'csim', 'detect', 'funcalldetect']",0
427,31445,"The model simulates a quarter of vehicle employing Simulink and Simscape.<p>The model simulates a quarter of vehicle employing Simscape. The input to the model is the road profile. The outputs are the displacement and velocity of the sprung and unsprung masses. The current model uses a chirp signal from 0 to 25Hz as road profile, in order to test the frequency response of the system.In order to run the model, the Motor Drive Libraries for SimMechanics provided here are necessary: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/27589-motion-driver-for-simmechanicsSaid"">http://www.mathworks.com/matlabcentral/fileexchange/27589-motion-driver-for-simmechanicsSaid</a> files are employed in order to calculate the velocity and acceleration of the road profile and utilize a Simscape Ideal Velocity Source as input to the model.</p>car,quarter of vehicle,simscape,simulation,suspension,electric_motor_control,power_electronics_control",31,0,1,0,30,quarter vehicle employ simscape quarter vehicle employ simscape input road profile output displacement velocity sprung unsprung mass current chirp signal road profile order test frequency response order run motor drive simmechanics provide necessary http mathworks com matlabcentral fileexchange motion driver file employ order calculate velocity acceleration road profile utilize simscape ideal velocity source input carquarter motor controlpower electronics control,"['quarter', 'vehicle', 'employ', 'simscape', 'quarter', 'vehicle', 'employ', 'simscape', 'input', 'road', 'profile', 'output', 'displacement', 'velocity', 'sprung', 'unsprung', 'mass', 'current', 'chirp', 'signal', 'road', 'profile', 'order', 'test', 'frequency', 'response', 'order', 'run', 'motor', 'drive', 'simmechanics', 'provide', 'necessary', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'motion', 'driver', 'file', 'employ', 'order', 'calculate', 'velocity', 'acceleration', 'road', 'profile', 'utilize', 'simscape', 'ideal', 'velocity', 'source', 'input', 'carquarter', 'motor', 'controlpower', 'electronics', 'control']",7
428,31499,"Tutoriel vidÃ©o (d'environ 15 mn), qui comprend des dÃ©monstrations et exercices<p>Dans le cadre de la rÃ©forme STI2D qui entre en vigueur Ã  la rentrÃ©e 2011-2012, dÃ©couvrez ce tutoriel vidÃ©o (d'environ 15 mn), quicomprend des dÃ©monstrations et exercices.</p>sti2d,simmechanics sti2d,sti2d,sti2d,simmechanics sti2d,simmechanics sti2d,simmechanics sti2d,simmechanics sti2d",37,1,2,0,37,tutoriel vidÃ©o environ qui comprend dÃ©monstrations exercicesdans cadre rÃ©forme sti qui entre vigueur rentrÃ©e dÃ©couvrez tutoriel vidÃ©o environ quicomprend dÃ©monstrations exercices sti dsimmechanics sti dsti dsti dsimmechanics sti dsimmechanics sti dsimmechanics sti dsimmechanics sti,"['tutoriel', 'vidÃ©o', 'environ', 'qui', 'comprend', 'dÃ©monstrations', 'exercicesdans', 'cadre', 'rÃ©forme', 'sti', 'qui', 'entre', 'vigueur', 'rentrÃ©e', 'dÃ©couvrez', 'tutoriel', 'vidÃ©o', 'environ', 'quicomprend', 'dÃ©monstrations', 'exercices', 'sti', 'dsimmechanics', 'sti', 'dsti', 'dsti', 'dsimmechanics', 'sti', 'dsimmechanics', 'sti', 'dsimmechanics', 'sti', 'dsimmechanics', 'sti']",8
429,31503,"Tutoriel vidÃ©o (d'environ 15 mn), qui comprend des dÃ©monstrations et exercices<p>Dans le cadre de la rÃ©forme STI2D qui entre en vigueur Ã  la rentrÃ©e 2011-2012, dÃ©couvrez ce tutoriel vidÃ©o (d'environ 15 mn), qui comprend des dÃ©monstrations et exercices.</p>simulink sti2d,sti2d,sti2d",15,2,2,0,15,tutoriel vidÃ©o environ qui comprend dÃ©monstrations exercicesdans cadre rÃ©forme sti qui entre vigueur rentrÃ©e dÃ©couvrez tutoriel vidÃ©o environ qui comprend dÃ©monstrations exercices sti dsti dsti,"['tutoriel', 'vidÃ©o', 'environ', 'qui', 'comprend', 'dÃ©monstrations', 'exercicesdans', 'cadre', 'rÃ©forme', 'sti', 'qui', 'entre', 'vigueur', 'rentrÃ©e', 'dÃ©couvrez', 'tutoriel', 'vidÃ©o', 'environ', 'qui', 'comprend', 'dÃ©monstrations', 'exercices', 'sti', 'dsti', 'dsti']",8
430,31505,"Tutoriel vidÃ©o (d'environ 15 mn), qui comprend des dÃ©monstrations et exercices<p>Dans le cadre de la rÃ©forme STI2D qui entre en vigueur Ã  la rentrÃ©e 2011-2012, dÃ©couvrez ce tutoriel vidÃ©o (d'environ 15 mn), qui comprend des dÃ©monstrations et exercices.</p>simscape sti2d,sti2d,sti2d,simscape sti2d,simscape sti2d,simscape sti2d",8,0,1,0,8,tutoriel vidÃ©o environ qui comprend dÃ©monstrations exercicesdans cadre rÃ©forme sti qui entre vigueur rentrÃ©e dÃ©couvrez tutoriel vidÃ©o environ qui comprend dÃ©monstrations exercices simscape sti dsti dsti dsimscape sti dsimscape sti dsimscape sti,"['tutoriel', 'vidÃ©o', 'environ', 'qui', 'comprend', 'dÃ©monstrations', 'exercicesdans', 'cadre', 'rÃ©forme', 'sti', 'qui', 'entre', 'vigueur', 'rentrÃ©e', 'dÃ©couvrez', 'tutoriel', 'vidÃ©o', 'environ', 'qui', 'comprend', 'dÃ©monstrations', 'exercices', 'simscape', 'sti', 'dsti', 'dsti', 'dsimscape', 'sti', 'dsimscape', 'sti', 'dsimscape', 'sti']",8
431,31575,"Automatically resize MIMO blocks upon connection.<p>In Simulink, it is often the case where a user wants to connect multiple blocks to another block, particularly in case of mux, demux, and bus creator blocks. The typical practice is to select multiple blocks, hold control, and select the mux block (for example). This done, the blocks are all automatically connect. The next step is then typically a manual resize of the mux block by the user to make all of the lines just created straight.This functional will automatically resize the block when the lines are initially drawn to eliminate the manual step of doing so.Open the included model AutoSizeTest.mdl and follow the instructions to see an example of the functionality.</p>autoconnect,gui,modeling,simulink,autoconnect,modeling",10,0,1,0,0,automatically resize mimo block upon connection often case user want connect multiple block another block particularly case mux demux bus creator block typical practice select multiple block hold control select mux block example block automatically connect next step typically manual resize mux block user make line create straight functional automatically resize block line initially draw eliminate manual step open include autosizetest mdl follow instruction see example functionality,"['automatically', 'resize', 'mimo', 'block', 'upon', 'connection', 'often', 'case', 'user', 'want', 'connect', 'multiple', 'block', 'another', 'block', 'particularly', 'case', 'mux', 'demux', 'bus', 'creator', 'block', 'typical', 'practice', 'select', 'multiple', 'block', 'hold', 'control', 'select', 'mux', 'block', 'example', 'block', 'automatically', 'connect', 'next', 'step', 'typically', 'manual', 'resize', 'mux', 'block', 'user', 'make', 'line', 'create', 'straight', 'functional', 'automatically', 'resize', 'block', 'line', 'initially', 'draw', 'eliminate', 'manual', 'step', 'open', 'include', 'autosizetest', 'mdl', 'follow', 'instruction', 'see', 'example', 'functionality']",0
432,31588,"In Simulink, automatically names signals and blocks in certain use cases.<p>Very often in Simulink, it is desireable to have naming consistency between signals and certain blocks like inports, outports, tags, scopes, etc. These functions are examples of scripts that automatically apply such names according to certain stylistic rules explained in the sample model. This is partuclarly useful when used in a model's PreSaveFcn callback, as a way to reduce the manual effort of consistent naming while building a model.Open the included model AutoNameTest.mdl and follow the instructions therein to see an example of how this works. </p>autonaming,gui,modeling,simulink",17,1,2,0,9,automatically names signal block certain case often desireable name consistency signal certain block like inports outport tag scope etc function examples script automatically apply name accord certain stylistic rule explain sample partuclarly useful presavefcn callback way reduce manual effort consistent name building open include autonametest mdl follow instruction therein see example work,"['automatically', 'names', 'signal', 'block', 'certain', 'case', 'often', 'desireable', 'name', 'consistency', 'signal', 'certain', 'block', 'like', 'inports', 'outport', 'tag', 'scope', 'etc', 'function', 'examples', 'script', 'automatically', 'apply', 'name', 'accord', 'certain', 'stylistic', 'rule', 'explain', 'sample', 'partuclarly', 'useful', 'presavefcn', 'callback', 'way', 'reduce', 'manual', 'effort', 'consistent', 'name', 'building', 'open', 'include', 'autonametest', 'mdl', 'follow', 'instruction', 'therein', 'see', 'example', 'work']",0
433,31594,"Create model of DC motor with separate excitation. <p>Inductance of the armature L = 0,1H, resistance of the armature R = 2 W, voltage U = 110 V, load torque mz = 0,02 Nm, momentof inertia J = 0,1 kg/m2 and electro-mechanical constant of the motor k = 0,3 Vs. Create it asseparate block (subsystem) with one input (voltage) and two outputs (angular velocity andcurrent).</p>control,dc machines,electric_motor_control,power_conversion_control,power_electronics_control",21,1,2,0,25,create motor separate excitation inductance armature resistance armature voltage load torque momentof inertia electro mechanical constant motor create asseparate block subsystem one input voltage two output angular velocity andcurrent controldc motor controlpower conversion controlpower electronics control,"['create', 'motor', 'separate', 'excitation', 'inductance', 'armature', 'resistance', 'armature', 'voltage', 'load', 'torque', 'momentof', 'inertia', 'electro', 'mechanical', 'constant', 'motor', 'create', 'asseparate', 'block', 'subsystem', 'one', 'input', 'voltage', 'two', 'output', 'angular', 'velocity', 'andcurrent', 'controldc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
434,31609,"cmtdtool can reduce and automate manual operations required to perform model-based testing.<p>cmtdtool is an assistant tool for model-based testing in MBD processes. Initially, this tool is developed for JMAAB-CMTD-WG (JMAAB: Japan MBD Automotive Advisory Board, CMTD-WG: Control Model Test Design Working Group). After several improvements upon feedback from the JMAAB-CMTD-WG members, it is published to MATLAB Central.Test design, composing test model, test execution, and reporting are performed when you run tests for a controller model. This tool helps you to reduce and automate manual operations required to perform them.(1) Excel to SignalBuilder conversion (1-1) Create SignalBuilder block from Excel selection  Import, add, and replace time-dependent signals selected region in a Excel sheet into SignalBuilder block. (1-2) Import test vectors in Excel sheet to SignalBuilder block at once]  Import multiple time-dependent signals into a Excel sheet to a SignalBuilder block at once.(2) Excel to Truth Table block conversion (2-1) Generate Truth Table block from Excel]  Import a truth table represented in an Excel sheet to a Truth Table block. (2-2) Generate Truth Table for assertion verification  Import verification equations represented in a Excel sheet to a Truth Table block. (2-3) User defined test   Generate a block which enables to check relations between inputs and expected outputs represented in an Excel sheet.(3) Test Harness (3-1) Generate test harness   Generate a test harness model which is composed by SignalBuilder + Data Conversions + Controller model from a controller model. (3-2) Generate harness to compare with expected output   Generate a test harness model to compare outputs from a model with expected outputs for given test signals.(4) Reporting (4-1) Automatic test report generation   Run each set of signals in a SignalBuilder block in a test harness model and generate test report automatically.</p>pick of the week,potw,gui,pick of the week,potw,simulink,utility,verification",118,8,4,0,128,cmtdtool reduce automate manual operation require perform base test cmtdtool assistant tool base test mbd process initially tool develop jmaab cmtd jmaab japan mbd automotive advisory board cmtd control test design work group several improvement upon feedback jmaab cmtd member publish central test design compose test test execution reporting perform run test controller tool help reduce automate manual operation require perform excel signalbuilder conversion create signalbuilder block excel selection import add replace time dependent signal select region excel sheet signalbuilder block import test vector excel sheet signalbuilder block import multiple time dependent signal excel sheet signalbuilder block excel truth table block conversion generate truth table block excel import truth table represent excel sheet truth table block generate truth table assertion verification import verification equation represent excel sheet truth table block user define test generate block enables check relation input expect outputs represent excel sheet test harness generate test harness generate test harness compose signalbuilder data conversion controller controller generate harness compare expect output generate test harness compare output expect outputs give test signal report automatic test report generation run set signal signalbuilder block test harness generate test report automatically pick weekpotwguipick,"['cmtdtool', 'reduce', 'automate', 'manual', 'operation', 'require', 'perform', 'base', 'test', 'cmtdtool', 'assistant', 'tool', 'base', 'test', 'mbd', 'process', 'initially', 'tool', 'develop', 'jmaab', 'cmtd', 'jmaab', 'japan', 'mbd', 'automotive', 'advisory', 'board', 'cmtd', 'control', 'test', 'design', 'work', 'group', 'several', 'improvement', 'upon', 'feedback', 'jmaab', 'cmtd', 'member', 'publish', 'central', 'test', 'design', 'compose', 'test', 'test', 'execution', 'reporting', 'perform', 'run', 'test', 'controller', 'tool', 'help', 'reduce', 'automate', 'manual', 'operation', 'require', 'perform', 'excel', 'signalbuilder', 'conversion', 'create', 'signalbuilder', 'block', 'excel', 'selection', 'import', 'add', 'replace', 'time', 'dependent', 'signal', 'select', 'region', 'excel', 'sheet', 'signalbuilder', 'block', 'import', 'test', 'vector', 'excel', 'sheet', 'signalbuilder', 'block', 'import', 'multiple', 'time', 'dependent', 'signal', 'excel', 'sheet', 'signalbuilder', 'block', 'excel', 'truth', 'table', 'block', 'conversion', 'generate', 'truth', 'table', 'block', 'excel', 'import', 'truth', 'table', 'represent', 'excel', 'sheet', 'truth', 'table', 'block', 'generate', 'truth', 'table', 'assertion', 'verification', 'import', 'verification', 'equation', 'represent', 'excel', 'sheet', 'truth', 'table', 'block', 'user', 'define', 'test', 'generate', 'block', 'enables', 'check', 'relation', 'input', 'expect', 'outputs', 'represent', 'excel', 'sheet', 'test', 'harness', 'generate', 'test', 'harness', 'generate', 'test', 'harness', 'compose', 'signalbuilder', 'data', 'conversion', 'controller', 'controller', 'generate', 'harness', 'compare', 'expect', 'output', 'generate', 'test', 'harness', 'compare', 'output', 'expect', 'outputs', 'give', 'test', 'signal', 'report', 'automatic', 'test', 'report', 'generation', 'run', 'set', 'signal', 'signalbuilder', 'block', 'test', 'harness', 'generate', 'test', 'report', 'automatically', 'pick', 'weekpotwguipick']",0
435,31711,"Level-2 M-file S-function that acts as a ZOH sampler with sample times specified as a block input.<p>This submission demonstrates how to write a level-2 M-file S-function with a variable sample time.The block samples and holds an input signal were the inter-sample period is specified by another input signal (and may vary from time period to time period).Each step size must be positive or an error is thrown.</p>sfunction,simulink,sfunction,simulink",5,0,1,0,5,level file function act zoh sampler sample time specified block input submission demonstrate write level file function variable sample time block sample hold input signal inter sample period specify another input signal may vary time period time period step size must positive error thrown,"['level', 'file', 'function', 'act', 'zoh', 'sampler', 'sample', 'time', 'specified', 'block', 'input', 'submission', 'demonstrate', 'write', 'level', 'file', 'function', 'variable', 'sample', 'time', 'block', 'sample', 'hold', 'input', 'signal', 'inter', 'sample', 'period', 'specify', 'another', 'input', 'signal', 'may', 'vary', 'time', 'period', 'time', 'period', 'step', 'size', 'must', 'positive', 'error', 'thrown']",7
436,31717,"Simulink model for 1phase fully controlled scr harmonic elimination is made. its easy to understand.<p>Simulink model for 1phase fully controlled scr harmonic elimination is made. its easy to understand and efficient and u can learn the basics of rectification. It is intended to students who would like to simulate rectifiers. Here I used thyristors instead of diodes to get controlled rectification.</p>control design,simulink,control design,control design,simulink,control design",23,0,1,0,26,phase fully control scr harmonic elimination make easy understand phase fully control scr harmonic elimination make easy understand efficient learn basic rectification intend student would like rectifier thyristors instead diode get control rectification control designcontrol design,"['phase', 'fully', 'control', 'scr', 'harmonic', 'elimination', 'make', 'easy', 'understand', 'phase', 'fully', 'control', 'scr', 'harmonic', 'elimination', 'make', 'easy', 'understand', 'efficient', 'learn', 'basic', 'rectification', 'intend', 'student', 'would', 'like', 'rectifier', 'thyristors', 'instead', 'diode', 'get', 'control', 'rectification', 'control', 'designcontrol', 'design']",4
437,31747,"Its the 3 phase inverter build using GTOs.<p>Its the 3 phase inverter build using GTOs.Power Elctronics engineering Beginners can be easily acquainted in simulink with this file</p>automotive,simulink",27,0,1,0,25,phase inverter build gtos phase inverter build gtos power elctronics engineering beginner easily acquaint,"['phase', 'inverter', 'build', 'gtos', 'phase', 'inverter', 'build', 'gtos', 'power', 'elctronics', 'engineering', 'beginner', 'easily', 'acquaint']",3
438,31815," ""TunableVars""""TunableVarsStorageClass""and""TunableVarsTypeQualifier"" must be of same length""<p>It a plant which is connected one sensor and an output. it is a design for a car park. the plant is connected to a reference step at the entrance </p>signal processing,simulation",22,1,2,0,24,tunablevars must length plant connect one sensor output design car park plant connect reference step entrance signal,"['tunablevars', 'must', 'length', 'plant', 'connect', 'one', 'sensor', 'output', 'design', 'car', 'park', 'plant', 'connect', 'reference', 'step', 'entrance', 'signal']",4
439,31826,"MATLAB, Simulink, MuPAD, & Simscape models of 2nd order systems used in âTeaching System Dynamics.â<p>This zip archive contains the spring-mass-damper models used for the webinar âTeaching System Dynamics with MATLAB &amp; Simulink.â  The models were used to demonstrate the modeling and simulation capability of MathWorks products and to explore the behavior of 2nd order systems from a variety of perspectives.  This includes:* MATLAB: Cell Mode; Publish; Free Response Behavior as Damping Ratio Varies* Simulink: Forced Response to Sinusoidal Input* MuPAD: Symbolic Computation of Free Response and Step Response; Animation* Simscape: Forced Response to Sinusoidal Input using Physical Modeling* Simscape: Forced Response to Base Excitation using Physical Modeling; Input-Output BehaviorTo learn more about MathWorks Symbolic Computing Tools, go to:<a href=""http://www.mathworks.com/products/symbolic/To"">http://www.mathworks.com/products/symbolic/To</a> learn more about MathWorks Physical Modeling Products, go to: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>system dynamics,physical modeling,symbolic computing,system dynamics",82,15,2,0,65,mupad simscape order teach dynamic zip archive contains spring mass damper webinar teach dynamic amp demonstrate modeling capability mathworks product explore behavior order variety perspectives include cell mode publish free response behavior damp ratio varies force response sinusoidal input mupad symbolic computation free response step response animation simscape force response sinusoidal input physical modeling simscape force response base excitation physical modeling input output behaviorto learn mathworks symbolic computing tool http mathworks com product symbolic learn mathworks physical modeling product http mathworks com physical modeling computingsystem dynamic,"['mupad', 'simscape', 'order', 'teach', 'dynamic', 'zip', 'archive', 'contains', 'spring', 'mass', 'damper', 'webinar', 'teach', 'dynamic', 'amp', 'demonstrate', 'modeling', 'capability', 'mathworks', 'product', 'explore', 'behavior', 'order', 'variety', 'perspectives', 'include', 'cell', 'mode', 'publish', 'free', 'response', 'behavior', 'damp', 'ratio', 'varies', 'force', 'response', 'sinusoidal', 'input', 'mupad', 'symbolic', 'computation', 'free', 'response', 'step', 'response', 'animation', 'simscape', 'force', 'response', 'sinusoidal', 'input', 'physical', 'modeling', 'simscape', 'force', 'response', 'base', 'excitation', 'physical', 'modeling', 'input', 'output', 'behaviorto', 'learn', 'mathworks', 'symbolic', 'computing', 'tool', 'http', 'mathworks', 'com', 'product', 'symbolic', 'learn', 'mathworks', 'physical', 'modeling', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'computingsystem', 'dynamic']",7
440,31844,Regulation bang bang model of ball on beam.<p>Regulation bang bang model of ball on beam.</p>bang bang,15,1,2,0,18,regulation bang bang ball beam regulation bang bang ball beam bang bang,"['regulation', 'bang', 'bang', 'ball', 'beam', 'regulation', 'bang', 'bang', 'ball', 'beam', 'bang', 'bang']",8
441,31860,Es un ejemplo para la funcion de transferencia<p>Es un ejemplo para la funcion de transferencia</p>laplace,8,0,1,0,7,ejemplo para funcion transferenciaes ejemplo para funcion,"['ejemplo', 'para', 'funcion', 'transferenciaes', 'ejemplo', 'para', 'funcion']",8
442,31903,"Single Phase SPWM inverter modelled using simulink.<p>Single Phase SPWM inverter modelled using simulink.simulink beginners find it easy to understand and implement.</p>automotive,control design,power electronics,simulation,simulink",21,0,1,0,27,single phase spwm inverter single phase spwm inverter beginner find easy understand implement designpower,"['single', 'phase', 'spwm', 'inverter', 'single', 'phase', 'spwm', 'inverter', 'beginner', 'find', 'easy', 'understand', 'implement', 'designpower']",3
443,31908,"THE MODEL IS DESIGNED TO WORK AS A TRACTION LOAD WITH TWO DC MOTORS<p>THE MODEL IS SIMULATED BASED ON THE BOOK ELECTRICAL DRIVES BY G.K.DUBEY. </p>drive,traction,electric_motor_control,power_conversion_control,power_electronics_control",26,0,1,0,29,design work traction load two motorsthe base book electrical drive dubey motor controlpower conversion controlpower electronics control,"['design', 'work', 'traction', 'load', 'two', 'motorsthe', 'base', 'book', 'electrical', 'drive', 'dubey', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
444,31909,"THE MODEL IS SIMULATED TO WORK AS A TWO STAGE CONTROLLED DC TRACTION DRIVE EMPLYING FOUR DC MOTORS<p>THIS MODEL IS SIMULATED BASED ON THE BOOK ELECTRICAL DRIVES BY G.K.DUBEY</p>drive,traction,electric_motor_control,power_conversion_control,power_electronics_control",44,0,1,0,56,work two stage control traction drive emplying four motorsthis base book electrical drive motor controlpower conversion controlpower electronics control,"['work', 'two', 'stage', 'control', 'traction', 'drive', 'emplying', 'four', 'motorsthis', 'base', 'book', 'electrical', 'drive', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
445,32040,"functions and simulink block implement state space MPC using input increment<p>In tutorials II and III, the state space MPC needs to calculate an inverse matrix, which may not be feasible for some systems. In this tutorial, a different state space MPC formulation using input increment is implemented in both m-function and simulink. In this formulation, the inverse matrix is avoided. Hence, it is more generic.</p>control design,optimization,simulink",37,2,2,0,38,function block implement state space mpc input incrementin tutorial state space mpc need calculate inverse matrix may feasible tutorial different state space mpc formulation input increment implement function formulation inverse matrix avoid hence generic control,"['function', 'block', 'implement', 'state', 'space', 'mpc', 'input', 'incrementin', 'tutorial', 'state', 'space', 'mpc', 'need', 'calculate', 'inverse', 'matrix', 'may', 'feasible', 'tutorial', 'different', 'state', 'space', 'mpc', 'formulation', 'input', 'increment', 'implement', 'function', 'formulation', 'inverse', 'matrix', 'avoid', 'hence', 'generic', 'control']",0
446,32127,"Reed solomon coding with 16 PSK modulation in AWGN channel<p>Format of Reed-Solomon Codes The basic building block of Reed-Solomon codes is a symbol composed of m binary bits, where m can be any natural number greater than 2. For a given m, the length of all the Reed-Solomon codes composed of m-bit symbols is 2m - 1. For example, for 8-bit symbols, the length of the Reed-Solomon codes is 28 - 1 = 255. A complete Reed-Solomon code consists of two parts: the data part and the parity part. For a Reed-Solomon code of n symbols, the first k symbols is the data part, which is the information to be protected against corruption, and the following (n-k) symbols is the parity part, which is calculated based on the data part. Such a Reed-Solomon code is referred to as an (n, k) Reed-Solomon code, or RS(n,k) code. The number of parity symbols is (n-k), usually an even number represented as 2t. A Reed-Solomon code with 2t parity symbols has the capability of correcting up to t error symbols. </p>16psk,awgn,reed solomon",13,0,1,0,13,reed solomon cod psk modulation awgn channelformat reed solomon code basic build block reed solomon code symbol compose binary bit natural number great give length reed solomon code compose bit symbols example bit symbols length reed solomon code complete reed solomon code consist two part data part parity part reed solomon code symbol first symbol data part information protect corruption follow symbol parity part calculate base data part reed solomon code refer reed solomon code code number parity symbols usually even number represent reed solomon code parity symbols capability correct error symbol pskawgnreed solomon,"['reed', 'solomon', 'cod', 'psk', 'modulation', 'awgn', 'channelformat', 'reed', 'solomon', 'code', 'basic', 'build', 'block', 'reed', 'solomon', 'code', 'symbol', 'compose', 'binary', 'bit', 'natural', 'number', 'great', 'give', 'length', 'reed', 'solomon', 'code', 'compose', 'bit', 'symbols', 'example', 'bit', 'symbols', 'length', 'reed', 'solomon', 'code', 'complete', 'reed', 'solomon', 'code', 'consist', 'two', 'part', 'data', 'part', 'parity', 'part', 'reed', 'solomon', 'code', 'symbol', 'first', 'symbol', 'data', 'part', 'information', 'protect', 'corruption', 'follow', 'symbol', 'parity', 'part', 'calculate', 'base', 'data', 'part', 'reed', 'solomon', 'code', 'refer', 'reed', 'solomon', 'code', 'code', 'number', 'parity', 'symbols', 'usually', 'even', 'number', 'represent', 'reed', 'solomon', 'code', 'parity', 'symbols', 'capability', 'correct', 'error', 'symbol', 'pskawgnreed', 'solomon']",0
447,32141,"Tutoriel vidÃ©o (d'environ 15 mn), qui comprend des dÃ©monstrations et exercices<p>Dans le cadre de la rÃ©forme STI2D qui entre en vigueur Ã  la rentrÃ©e 2011-2012, dÃ©couvrez ce tutoriel vidÃ©o (d'environ 15 mn), quicomprend des dÃ©monstrations et exercices.</p>stateflow sti2d,sti2d,sti2d,stateflow sti2d,stateflow sti2d,sti2d",24,4,3,0,22,tutoriel vidÃ©o environ qui comprend dÃ©monstrations exercicesdans cadre rÃ©forme sti qui entre vigueur rentrÃ©e dÃ©couvrez tutoriel vidÃ©o environ quicomprend dÃ©monstrations exercices stateflow sti dsti dsti dstateflow sti dstateflow sti dsti,"['tutoriel', 'vidÃ©o', 'environ', 'qui', 'comprend', 'dÃ©monstrations', 'exercicesdans', 'cadre', 'rÃ©forme', 'sti', 'qui', 'entre', 'vigueur', 'rentrÃ©e', 'dÃ©couvrez', 'tutoriel', 'vidÃ©o', 'environ', 'quicomprend', 'dÃ©monstrations', 'exercices', 'stateflow', 'sti', 'dsti', 'dsti', 'dstateflow', 'sti', 'dstateflow', 'sti', 'dsti']",8
448,32149,"Five level inverter by SPWM<p>Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",212,13,4,0,257,five level inverter spwmcontrol develop spwm technique diode inverterspwm,"['five', 'level', 'inverter', 'spwmcontrol', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",4
449,32150,"7level inverter by SPWM<p>7level inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm,diode clamped,inverter,multilevel inverter,spwm,diode clamped",281,13,4,0,324,level inverter spwm level inverter control develop spwm technique diode clamp,"['level', 'inverter', 'spwm', 'level', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'clamp']",1
450,32151,"9 level inverter by SPWM<p>9 level inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm,abhishek",348,13,4,0,417,level inverter spwm level inverter control develop spwm technique diode,"['level', 'inverter', 'spwm', 'level', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode']",1
451,32152,"11 level inverter by SPWM<p>11 level inverter by SPWM Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",416,13,4,0,508,level inverter spwm level inverter spwm control develop spwm technique diode inverterspwm,"['level', 'inverter', 'spwm', 'level', 'inverter', 'spwm', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",1
452,32157,"Simple three phase space vector modulation for power inverters<p>This model simulates a simple technique to implement space vector modulation. This method does not require too much computation at run time thus feasible for implementation with simple processors. Space vector trajectory is also plotted and can be checked at different modulation indexes using the parameter defined in model properties.</p>control,control design,control system,drives,electric machine drives,inversion,inverter,power electronics,power inverters,power system,pulse width modulation,pwm,simulation,simulink,space vector pulse width modulation,svpwm,electric_motor_control,power_conversion_control,power_electronics_control,control design,power system,pulse width modulation,hello",93,3,2,0,101,simple three phase space vector modulation power invertersthis simple technique implement space vector modulation method require much computation run time thus feasible implementation simple processor space vector trajectory also plot checked different modulation index parameter define property controlcontrol designcontrol machine inverterspower systempulse width vector pulse width motor controlpower conversion controlpower electronics controlcontrol designpower systempulse width modulationhello,"['simple', 'three', 'phase', 'space', 'vector', 'modulation', 'power', 'invertersthis', 'simple', 'technique', 'implement', 'space', 'vector', 'modulation', 'method', 'require', 'much', 'computation', 'run', 'time', 'thus', 'feasible', 'implementation', 'simple', 'processor', 'space', 'vector', 'trajectory', 'also', 'plot', 'checked', 'different', 'modulation', 'index', 'parameter', 'define', 'property', 'controlcontrol', 'designcontrol', 'machine', 'inverterspower', 'systempulse', 'width', 'vector', 'pulse', 'width', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designpower', 'systempulse', 'width', 'modulationhello']",3
453,32169,"8-PSK with Rs Coding in Rayleigh fading channel<p>8-PSK with Rs Coding in Rayleigh fading channel</p>psk,rayleigh fading channel,reed solomon coding,psk,psk,reed solomon coding",17,0,1,0,17,psk cod rayleigh fading channel psk cod rayleigh fade fade channelreed solomon solomon cod,"['psk', 'cod', 'rayleigh', 'fading', 'channel', 'psk', 'cod', 'rayleigh', 'fade', 'fade', 'channelreed', 'solomon', 'solomon', 'cod']",8
454,32188,"13 level inverter by SPWM<p>13 level Inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",485,13,4,0,589,level inverter spwm level inverter control develop spwm technique diode inverterspwm,"['level', 'inverter', 'spwm', 'level', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",1
455,32189,"15 level inverter by SPWM<p>15 level inverter by SPWM Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",553,13,4,0,679,level inverter spwm level inverter spwm control develop spwm technique diode inverterspwm,"['level', 'inverter', 'spwm', 'level', 'inverter', 'spwm', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",1
456,32190,"Five level inverter by SPWM<p>Five level H-Bridge inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm,multilevel inverter",148,10,3,0,174,five level inverter spwmfive level bridge inverter control develop spwm technique diode inverter,"['five', 'level', 'inverter', 'spwmfive', 'level', 'bridge', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverter']",1
457,32191,"7-level inverter by SPWM<p>7 level H-Bridge inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm,diode clamped",190,13,3,0,241,level inverter spwm level bridge inverter control develop spwm technique diode clamp,"['level', 'inverter', 'spwm', 'level', 'bridge', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'clamp']",1
458,32192,"9-level inverter by SPWM<p>9-level H-Bridge inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",238,16,3,0,306,level inverter spwm level bridge inverter control develop spwm technique diode inverterspwm,"['level', 'inverter', 'spwm', 'level', 'bridge', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",1
459,32193,"11-level inverter by SPWM<p>11-level H-Bridge inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm,diode clamped",286,19,3,0,371,level inverter spwm level bridge inverter control develop spwm technique diode clamp,"['level', 'inverter', 'spwm', 'level', 'bridge', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'clamp']",1
460,32194,"13-level inverter by SPWM<p>13-level H-Bridge inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",334,22,3,0,438,level inverter spwm level bridge inverter control develop spwm technique diode inverterspwm,"['level', 'inverter', 'spwm', 'level', 'bridge', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",1
461,32195,"15-level inverter by SPWM<p>15-level H-Bridge inverter Control developed by SPWM technique.</p>diode clamped,inverter,multilevel inverter,spwm",382,25,3,0,504,level inverter spwm level bridge inverter control develop spwm technique diode inverterspwm,"['level', 'inverter', 'spwm', 'level', 'bridge', 'inverter', 'control', 'develop', 'spwm', 'technique', 'diode', 'inverterspwm']",1
462,32210,"Bifurcation analysis of dynamical systems. Integration of AUTO bifurcation software into MATLAB.<p>**Background**This is a MATLAB version of AUTO, where we have integrated AUTO into MATLAB via mex functions. This toolbox is aimed at researchers familiar with AUTO, but also engineers that would like toapply these techniques. One of the biggest reasons why Dynamical Systems Theory is not being applied widely in an engineering context, is mainly due to the lack of bifurcation software that integrates with relative ease with existing toolsets. We therefore tried to address this issue by incorporating AUTO into MATLAB, and thus the Dynamical Sytems Toolbox was built. We hope that it would be useful teaching tool and can help popularise the methods amongst the engineering community.Ample examples are also needed for a person new to the field, hence more aerospace examples will follow in future releases.At this stage we are still in the process of adding several engineering examples to the toolbox. Feel free to develop some examples for inclusion into the toolbox. There are template files that you can use for inclusion of your own examples.**Souce Control**Source files are controlled on github athttps://github.com/ecoetzee/Dynamical-Systems-Toolbox**System Requirements**1. MATLAB R2009A or higher2. Intel Visual Fortran 9.1 or higher for compiling on Windows, if needed.3. GCC 4.3.1 or higher for compiling on Linux.**Authors**This toolbox was written by Etienne Coetzee, Phani Thota and James Rankin from the University of Bristol. Obviously, credit must also be given to the authors of AUTO, Esebius Doedel et al.**Main features**1.  Look and feel of MATLAB. 2.  Extensive use of objects. 3.  Can be run in the new mode, or still with all the old AUTO files (.c,.7,.8.9) familiar     to the user. 4.  Robust error checking. 5.  Additional outputs can be detected and also passed out to MATLAB variables. 6.  Any of the MATLAB toolsets can be used, i.e. the Symbolic toolbox, Simulink etc. 7.  Similar notations to that of AUTO. A person familiar with AUTO should find it     straightforward to pick up the new toolsets. 8.  Also works with the student version of MATLAB. 9.  Ample documentation. 10. Templates files for people willing to contribute their own examples for inclusion     into the demos. **Drawbacks**1.  Limit Cycles are at least an order of magnitude slower. We had to make a trade-off     between robustness and speed. We therefore decided that if we want to popularise the methods,     then the code should work, and people should not have to struggle with decoding it. 2.  No ample enginering examples yet.**Installation Instructions**To install the toolbox follow these steps:1.  Download the toolbox and unzip.2.  Open MATLAB and change to the directory where the toolbox was unzipped.3.  Run the program  installdynasys.m; A user interface will appear.4.  If you have admin rights keep the default values and install. The toolbox will be     installed in the MATLAB installation directory.5.  If you do not have admin rights, install the toolbox to a directory where you have     access rights. A startup.m file will be created in this directory.6.  Close MATLAB, and restart.7.  Type dynasysroot and dynasyshelproot at the command line. If these commands are     working, it should indicate where the toolbox components were installed. If not,     something has gone wrong. Check that the paths are correctly defined.8.  The Dynamical Systems Toolbox should appear on the menu. If not, either the paths     were not defined correctly, or the info.xml file in the **$dynasysroot/toolbox/dynasys**     directory has the wrong information on line 10. Add the correct path to the documentation     directory **$dynasysdocroot/toolbox/dynasys**.9.  Close MATLAB and restart.**Restrictions**1.  We have only managed to compile on Windows with Intel Fortran 9.1 or higher. Also now     possible to use on Linux with gcc 4.3 or higher.2.  I am not able to make many updates because I am trying to finish my PhD, hence assume     that the software will not be frequently updated.**Additional Resources**The following link provides more information on aerospace applications at the University of Bristol.<a href=""http://seis.bris.ac.uk/~ec1099/"">http://seis.bris.ac.uk/~ec1099/</a></p>toolbox,aerospace,bifurcation,coninuation,dynamical systems,fold,hopf,limit cycle",180,9,3,0,225,bifurcation analysis dynamical integration auto bifurcation software background version auto integrated auto via mex function toolbox aim researcher familiar auto also engineer would like toapply technique one big reason dynamical theory apply widely engineering context mainly due lack bifurcation software integrate relative ease exist toolsets therefore try address issue incorporate auto thus dynamical sytems toolbox build hope would useful teach tool help popularise method amongst engineering community ample example also need person new field hence aerospace example follow future release stage still process add several engineering example toolbox feel free develop examples inclusion toolbox template file inclusion examples souce control source file control github github com ecoetzee dynamical toolbox requirement higher intel visual fortran higher compiling window need gcc higher compile linux author toolbox write etienne coetzee phani thota james rankin university bristol obviously credit must also give author auto esebius doedel main feature look feel extensive object run new mode still old auto file familiar user robust error check additional output detect also pass variable toolsets symbolic toolbox etc similar notation auto person familiar auto find straightforward pick new toolsets also work student version ample documentation templates file people willing contribute example inclusion demo drawback limit cycle least order magnitude slow make trade robustness speed therefore decide want popularise method code work people struggle decode ample enginering example yet installation instruction install toolbox follow step download toolbox unzip open change directory toolbox unzipped run program installdynasys user interface appear admin right keep default value install toolbox instal installation directory admin right install toolbox directory access right startup file create directory close restart type dynasysroot dynasyshelproot command line command work indicate toolbox component instal something wrong check path correctly define dynamical toolbox appear menu either path define correctly info xml file dynasysroot toolbox dynasys directory wrong information line add correct path documentation directory dynasysdocroot toolbox dynasys close restart restriction manage compile window intel fortran high also possible linux gcc higher able make many update try finish phd hence assume software frequently update additional resource follow link provide information aerospace application university bristol http seis bris cycle,"['bifurcation', 'analysis', 'dynamical', 'integration', 'auto', 'bifurcation', 'software', 'background', 'version', 'auto', 'integrated', 'auto', 'via', 'mex', 'function', 'toolbox', 'aim', 'researcher', 'familiar', 'auto', 'also', 'engineer', 'would', 'like', 'toapply', 'technique', 'one', 'big', 'reason', 'dynamical', 'theory', 'apply', 'widely', 'engineering', 'context', 'mainly', 'due', 'lack', 'bifurcation', 'software', 'integrate', 'relative', 'ease', 'exist', 'toolsets', 'therefore', 'try', 'address', 'issue', 'incorporate', 'auto', 'thus', 'dynamical', 'sytems', 'toolbox', 'build', 'hope', 'would', 'useful', 'teach', 'tool', 'help', 'popularise', 'method', 'amongst', 'engineering', 'community', 'ample', 'example', 'also', 'need', 'person', 'new', 'field', 'hence', 'aerospace', 'example', 'follow', 'future', 'release', 'stage', 'still', 'process', 'add', 'several', 'engineering', 'example', 'toolbox', 'feel', 'free', 'develop', 'examples', 'inclusion', 'toolbox', 'template', 'file', 'inclusion', 'examples', 'souce', 'control', 'source', 'file', 'control', 'github', 'github', 'com', 'ecoetzee', 'dynamical', 'toolbox', 'requirement', 'higher', 'intel', 'visual', 'fortran', 'higher', 'compiling', 'window', 'need', 'gcc', 'higher', 'compile', 'linux', 'author', 'toolbox', 'write', 'etienne', 'coetzee', 'phani', 'thota', 'james', 'rankin', 'university', 'bristol', 'obviously', 'credit', 'must', 'also', 'give', 'author', 'auto', 'esebius', 'doedel', 'main', 'feature', 'look', 'feel', 'extensive', 'object', 'run', 'new', 'mode', 'still', 'old', 'auto', 'file', 'familiar', 'user', 'robust', 'error', 'check', 'additional', 'output', 'detect', 'also', 'pass', 'variable', 'toolsets', 'symbolic', 'toolbox', 'etc', 'similar', 'notation', 'auto', 'person', 'familiar', 'auto', 'find', 'straightforward', 'pick', 'new', 'toolsets', 'also', 'work', 'student', 'version', 'ample', 'documentation', 'templates', 'file', 'people', 'willing', 'contribute', 'example', 'inclusion', 'demo', 'drawback', 'limit', 'cycle', 'least', 'order', 'magnitude', 'slow', 'make', 'trade', 'robustness', 'speed', 'therefore', 'decide', 'want', 'popularise', 'method', 'code', 'work', 'people', 'struggle', 'decode', 'ample', 'enginering', 'example', 'yet', 'installation', 'instruction', 'install', 'toolbox', 'follow', 'step', 'download', 'toolbox', 'unzip', 'open', 'change', 'directory', 'toolbox', 'unzipped', 'run', 'program', 'installdynasys', 'user', 'interface', 'appear', 'admin', 'right', 'keep', 'default', 'value', 'install', 'toolbox', 'instal', 'installation', 'directory', 'admin', 'right', 'install', 'toolbox', 'directory', 'access', 'right', 'startup', 'file', 'create', 'directory', 'close', 'restart', 'type', 'dynasysroot', 'dynasyshelproot', 'command', 'line', 'command', 'work', 'indicate', 'toolbox', 'component', 'instal', 'something', 'wrong', 'check', 'path', 'correctly', 'define', 'dynamical', 'toolbox', 'appear', 'menu', 'either', 'path', 'define', 'correctly', 'info', 'xml', 'file', 'dynasysroot', 'toolbox', 'dynasys', 'directory', 'wrong', 'information', 'line', 'add', 'correct', 'path', 'documentation', 'directory', 'dynasysdocroot', 'toolbox', 'dynasys', 'close', 'restart', 'restriction', 'manage', 'compile', 'window', 'intel', 'fortran', 'high', 'also', 'possible', 'linux', 'gcc', 'higher', 'able', 'make', 'many', 'update', 'try', 'finish', 'phd', 'hence', 'assume', 'software', 'frequently', 'update', 'additional', 'resource', 'follow', 'link', 'provide', 'information', 'aerospace', 'application', 'university', 'bristol', 'http', 'seis', 'bris', 'cycle']",5
463,32234,"     This system contains two identical circuits showing the operation of a single phase rectifier.<p>Open the Universal Bridge dialog box and notice that in order to obtain a four-diode bridge configuration, the Power electronic            devices field has been set to 'Diodes' and  that the number of arms has been set to 2. Also, observe that the Measurements            field has been set to 'Device currents', thus allowing measurement of  diode currents through the Multimeter block.                  Now, double click on the Multimeter block. The four diode currents are listed in the left column. Notice that only currents            in diodes 2 and 4 have been selected and transferred in the right column. The number of available signals at the multimeter            output (2) is displayed on the block icon.                  Open the two scopes and start the simulation. Compare the two load voltages Vd1 and Vd2 which are superimposed on Scope1.            Also, compare on Scope2 the currents flowing in diodes 2 and 4 for circuit 1 and circuit 2.                  Notice that the circuit has been discretized by means of the Powergui  block. The sample time (50e-6 s) appears on the block            icon.                  Now, open the Powergui block and  select the simulation type 'Continuous'. The continuous ode23t solver specified in the Simulation            parameters will now be used. Restart the simulation and compare the continuous simulation results with the previous simulation            results obtained with a discretized system.</p>rectifire",32,1,2,0,31,contains two identical circuit show operation single phase rectifier open universal bridge dialog box notice order obtain four diode bridge configuration power electronic device field set diode number arm set also observe measurement field set device current thus allow measurement diode current multimeter block double click multimeter block four diode current list left column notice current diodes select transfer right column number available signal multimeter output display block icon open two scope start compare two load voltage superimpose scope also compare scope current flow diode circuit circuit notice circuit discretized mean powergui block sample time appear block icon open powergui block select type continuous continuous ode solver specify parameter restart compare continuous result previous result obtain discretized rectifire,"['contains', 'two', 'identical', 'circuit', 'show', 'operation', 'single', 'phase', 'rectifier', 'open', 'universal', 'bridge', 'dialog', 'box', 'notice', 'order', 'obtain', 'four', 'diode', 'bridge', 'configuration', 'power', 'electronic', 'device', 'field', 'set', 'diode', 'number', 'arm', 'set', 'also', 'observe', 'measurement', 'field', 'set', 'device', 'current', 'thus', 'allow', 'measurement', 'diode', 'current', 'multimeter', 'block', 'double', 'click', 'multimeter', 'block', 'four', 'diode', 'current', 'list', 'left', 'column', 'notice', 'current', 'diodes', 'select', 'transfer', 'right', 'column', 'number', 'available', 'signal', 'multimeter', 'output', 'display', 'block', 'icon', 'open', 'two', 'scope', 'start', 'compare', 'two', 'load', 'voltage', 'superimpose', 'scope', 'also', 'compare', 'scope', 'current', 'flow', 'diode', 'circuit', 'circuit', 'notice', 'circuit', 'discretized', 'mean', 'powergui', 'block', 'sample', 'time', 'appear', 'block', 'icon', 'open', 'powergui', 'block', 'select', 'type', 'continuous', 'continuous', 'ode', 'solver', 'specify', 'parameter', 'restart', 'compare', 'continuous', 'result', 'previous', 'result', 'obtain', 'discretized', 'rectifire']",0
464,32246,"Model of a dual-clutch transmission with MATLAB scripts for optimizing the shift schedule.<p>This file contains a dual-clutch transmission model built using Simscape and Simscape Driveline that can be configured for control algorithm development or optimization tests. The clutch states and pre-selection of the gears via dog clutches is controlled by a state machine modeled in Stateflow. Model variants for the transmission and vehicle dynamics can be selected using configurable subsystems. MATLAB scripts demonstrate how to optimize a shift schedule for maximum fuel economy, and how to speed that process using parallel computing. This model can be configured for hardware-in-the-loop testing.  Please read the README.txt file to get started. See the optimization examples in this video (5 min): <a href=""https://www.mathworks.com/videos/optimizing-shift-schedule-to-maximize-fuel-economy-68820.html"">https://www.mathworks.com/videos/optimizing-shift-schedule-to-maximize-fuel-economy-68820.html</a> Learn about model tuning, parameter sweeps, and optimization tasks in this webinar: <a href=""https://www.mathworks.com/videos/shift-schedule-optimization-of-a-dual-clutch-transmission-81828.html"">https://www.mathworks.com/videos/shift-schedule-optimization-of-a-dual-clutch-transmission-81828.html</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>control,dual clutch,optimization,physical modeling,simdriveline,simscape,simulink 3d animation,transmission",2578,261,5,21,2622,dual clutch transmission script optimize shift schedule file contain dual clutch transmission build simscape simscape driveline configure control algorithm development optimization test clutch state pre selection gear via dog clutch control state machine stateflow variant transmission vehicle dynamic select configurable subsystem script demonstrate optimize shift schedule maximum fuel economy speed process parallel compute configured hardware loop test please read readme txt file get start see optimization example video min mathworks com videos optimize shift schedule maximize fuel economy html learn tune parameter sweep optimization task webinar mathworks com videos shift schedule optimization dual clutch transmission html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling controldual,"['dual', 'clutch', 'transmission', 'script', 'optimize', 'shift', 'schedule', 'file', 'contain', 'dual', 'clutch', 'transmission', 'build', 'simscape', 'simscape', 'driveline', 'configure', 'control', 'algorithm', 'development', 'optimization', 'test', 'clutch', 'state', 'pre', 'selection', 'gear', 'via', 'dog', 'clutch', 'control', 'state', 'machine', 'stateflow', 'variant', 'transmission', 'vehicle', 'dynamic', 'select', 'configurable', 'subsystem', 'script', 'demonstrate', 'optimize', 'shift', 'schedule', 'maximum', 'fuel', 'economy', 'speed', 'process', 'parallel', 'compute', 'configured', 'hardware', 'loop', 'test', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'optimization', 'example', 'video', 'min', 'mathworks', 'com', 'videos', 'optimize', 'shift', 'schedule', 'maximize', 'fuel', 'economy', 'html', 'learn', 'tune', 'parameter', 'sweep', 'optimization', 'task', 'webinar', 'mathworks', 'com', 'videos', 'shift', 'schedule', 'optimization', 'dual', 'clutch', 'transmission', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'controldual']",7
465,32254,"The demo is about a airport conveyer belt modeled in Simulink, with controls modelled in Stateflow.<p>The model shows how Simulink and Stateflow can be used to model plant and control algorithms for an airport conveyer belt. MATLAB is used for animation. Coverage analysis can be used to detect uncovered areas in the controller during specific tests [Simulink Verification &amp; Validation]. Automatic testcase generation can be performed to reach 100% MCDC coverage [Simulink Design Verifier].Finally PLC or C-Code can be generated from the controller model to deploy it [MATLAB Coder, Simulink Coder or Simulink PLC Coder]. </p>airport,animation,belt,conveyer,coverage,logistics,luggage,plc code,transport",532,67,5,14,554,demo airport conveyer belt control stateflow show stateflow plant control algorithms airport conveyer belt animation coverage analysis detect uncovered area controller specific test verification amp validation automatic testcase generation perform reach mcdc coverage design verifier finally plc code generate controller deploy coder coder plc coder codetransport,"['demo', 'airport', 'conveyer', 'belt', 'control', 'stateflow', 'show', 'stateflow', 'plant', 'control', 'algorithms', 'airport', 'conveyer', 'belt', 'animation', 'coverage', 'analysis', 'detect', 'uncovered', 'area', 'controller', 'specific', 'test', 'verification', 'amp', 'validation', 'automatic', 'testcase', 'generation', 'perform', 'reach', 'mcdc', 'coverage', 'design', 'verifier', 'finally', 'plc', 'code', 'generate', 'controller', 'deploy', 'coder', 'coder', 'plc', 'coder', 'codetransport']",5
466,32281,"this is based on RMS control of voltage<p>control circuit developed by RMS method. the phase voltage is set at 231V....</p>inverter,rms method,spwm controller",185,12,4,0,222,base rms control voltagecontrol circuit develop rms method phase voltage set inverterrms methodspwm controller,"['base', 'rms', 'control', 'voltagecontrol', 'circuit', 'develop', 'rms', 'method', 'phase', 'voltage', 'set', 'inverterrms', 'methodspwm', 'controller']",3
467,32299,"DC voltage controlled by Rectifier<p>controllable 3-phase Rectifier.</p>acdc,converter,rectifier,rectifire,power_conversion_control,power_electronics_control",32,1,2,0,40,voltage control phase rectifier conversion controlpower electronics control,"['voltage', 'control', 'phase', 'rectifier', 'conversion', 'controlpower', 'electronics', 'control']",6
468,32318,"Simulink Support for Kinect is a set of Simulink blocks interfaced with OpenNI and Kinect SDK.<p>Simulink Support for Kinect consists of IMAQ, Image, IR, Depth, Motion and Skeleton blocks to achieve real-time image data acquisition from Kinect devices such as Microsoft Kinect or ASUS Xtion PRO under Simulink simulation environment.It works with 32bit/64bit version of MATLAB R2010b or later in Windows7 32bit/64bit and it requires the following 3rd party software:[C MEX Compiler]- Microsoft Visual Studio 2010 Express Edition (VC++)- Microsoft Windows SDK 7.1[To use OpenNI]- OpenNI- PrimeSense NITE- PrimeSensor Module[To use Microsoft Kinect SDK <a href=""https://developer.microsoft.com/en-us/windows/kinect"">https://developer.microsoft.com/en-us/windows/kinect</a> ]- Microsoft Kinect for Windows SDK v1.6For more detailed information, please refer to document in the zip file and help of the blocks.[Optional MATLAB products]- Computer Vision System Toolbox (highly recommended)- DSP System Toolbox (to acquire Kinect Microphone Array data)- Simulink Coder (to generate *.exe file)</p>pick of the week,potw,game,demo,image processing,instrument driver,kinect,measurement,medical,robot,robotics,signal processing,simulation,simulink,stuck on step 5",110,0,1,34,125,support kinect set block interfaced openni kinect sdk support kinect consist imaq image depth motion skeleton block achieve real time image data acquisition kinect device microsoft kinect asus xtion pro environment work bit bit version later windows bit bit require follow party software mex compiler microsoft visual studio express edition microsoft windows sdk openni openni primesense nite primesensor module microsoft kinect sdk developer microsoft com window kinect microsoft kinect windows sdk detailed information please refer document zip file help block optional product computer vision toolbox highly recommend dsp toolbox acquire kinect microphone array data coder generate exe file pick step,"['support', 'kinect', 'set', 'block', 'interfaced', 'openni', 'kinect', 'sdk', 'support', 'kinect', 'consist', 'imaq', 'image', 'depth', 'motion', 'skeleton', 'block', 'achieve', 'real', 'time', 'image', 'data', 'acquisition', 'kinect', 'device', 'microsoft', 'kinect', 'asus', 'xtion', 'pro', 'environment', 'work', 'bit', 'bit', 'version', 'later', 'windows', 'bit', 'bit', 'require', 'follow', 'party', 'software', 'mex', 'compiler', 'microsoft', 'visual', 'studio', 'express', 'edition', 'microsoft', 'windows', 'sdk', 'openni', 'openni', 'primesense', 'nite', 'primesensor', 'module', 'microsoft', 'kinect', 'sdk', 'developer', 'microsoft', 'com', 'window', 'kinect', 'microsoft', 'kinect', 'windows', 'sdk', 'detailed', 'information', 'please', 'refer', 'document', 'zip', 'file', 'help', 'block', 'optional', 'product', 'computer', 'vision', 'toolbox', 'highly', 'recommend', 'dsp', 'toolbox', 'acquire', 'kinect', 'microphone', 'array', 'data', 'coder', 'generate', 'exe', 'file', 'pick', 'step']",5
469,32364,"The cascade Multilevel Inverter has 21 stage .<p>This cascade inverter very useful for research scholar. </p>simulink,simulink",52,0,1,0,60,cascade multilevel inverter stage cascade inverter useful research scholar,"['cascade', 'multilevel', 'inverter', 'stage', 'cascade', 'inverter', 'useful', 'research', 'scholar']",3
470,32368,"Space Vector Representation of Three Phase Signals in Stationary and Rotating Frames<p>This demonstration illustrates the use of a complex space vector to represent a three-phase signal . It also shows the transformation of the 3-phase signal 'ABC' into an equivalent 2-phase system 'alpha_beta'. The only restriction to the 3-phase signal is that the zero-sequence component is zero i.e. fA+fB+fC=0.The complex space vector in the stationary frame is defined asFs = 2/3 (fA + fB*exp(j2*pi/3) + fC*exp(-2j*pi/3)whose cartesian components are                 fa = Re (Fs)                 fb = Im (Fs)When expressed in a rotating frame at frequency wk, the space vector becomes                 Fk = Fs*exp(-jwk*t)whose cartesian components are                 fd = Re(Fk)                 fq = Im(Fk) The inverse transformation from complex space vector back to the 3-phase signal is also demonstrated.Finally, the real transformations of  the ABC components to the components ab (in the stationary frame) and then dq (in the rotating frame) are shown. </p>control,machines,power electronics,simulation,simulink,space vector,space vector generation,space vectors,vectors,machines",43,3,2,0,50,space vector representation three phase signal stationary rotate framesthis demonstration illustrate complex space vector represent three phase signal also show transformation phase signal abc equivalent phase alpha beta restriction phase signal zero sequence component zero complex space vector stationary frame define asfs exp exp whose cartesian component express rotate frame frequency space vector become exp jwk whose cartesian component inverse transformation complex space vector back phase signal also demonstrate finally real transformation abc component component stationary frame rotate frame show vectorspace vector generationspace,"['space', 'vector', 'representation', 'three', 'phase', 'signal', 'stationary', 'rotate', 'framesthis', 'demonstration', 'illustrate', 'complex', 'space', 'vector', 'represent', 'three', 'phase', 'signal', 'also', 'show', 'transformation', 'phase', 'signal', 'abc', 'equivalent', 'phase', 'alpha', 'beta', 'restriction', 'phase', 'signal', 'zero', 'sequence', 'component', 'zero', 'complex', 'space', 'vector', 'stationary', 'frame', 'define', 'asfs', 'exp', 'exp', 'whose', 'cartesian', 'component', 'express', 'rotate', 'frame', 'frequency', 'space', 'vector', 'become', 'exp', 'jwk', 'whose', 'cartesian', 'component', 'inverse', 'transformation', 'complex', 'space', 'vector', 'back', 'phase', 'signal', 'also', 'demonstrate', 'finally', 'real', 'transformation', 'abc', 'component', 'component', 'stationary', 'frame', 'rotate', 'frame', 'show', 'vectorspace', 'vector', 'generationspace']",4
471,32389,Arccircuit with s function and simpower<p>Arccircuit with s function and simpower</p>s function simpower,36,1,2,0,37,arccircuit function function simpowers function simpower,"['arccircuit', 'function', 'function', 'simpowers', 'function', 'simpower']",7
472,32394,"Induction motor model in rotor flux frame with three phase sinusoidal excitation<p>This model simulates three phase induction motor model in rotor frame of reference.It is helpful in simulation of induction motor drives. Electrical  system equations: Vs = Rs is + (1/wb) (dfs/dt) + wf M(pi/2) fs      where the variables is, vs, and fs are 2-dimensional space vectors and M(pi/2) represents a 90 degree space rotator namely [0 -1;1 0]wf = wm + wr;wr = Rr Lm/Lr (iqs / fdr)1/wb Lr/Rr (dfdr/dt) + fdr = Lm idsfqr = 0 The flux linkage current relations:fs = Ls is + Lm irfr = Lm is  + Lr ir        Ls= Lm + Lls;Lr = Lm + LrlMechanical system equations:Te = 2H (dwm/dt) + Bm wm + Tl where Te = Lm/Lr (iqs fdr)   </p>ac machines,control,control system,drives,dynamic model,electric machines,electrical drives,induction motor,model,motors,power electronics,power system,electric_motor_control,power_electronics_control",83,7,3,0,93,induction motor rotor flux frame three phase sinusoidal excitationthis three phase induction motor rotor frame reference helpful induction motor drive electrical equation dfs variable dimensional space vector represent degree space rotator namely iqs fdr dfdr fdr idsfqr flux linkage current relation irfr lls lrlmechanical equation dwm iqs fdr modelelectric drivesinduction systemelectric motor controlpower electronics control,"['induction', 'motor', 'rotor', 'flux', 'frame', 'three', 'phase', 'sinusoidal', 'excitationthis', 'three', 'phase', 'induction', 'motor', 'rotor', 'frame', 'reference', 'helpful', 'induction', 'motor', 'drive', 'electrical', 'equation', 'dfs', 'variable', 'dimensional', 'space', 'vector', 'represent', 'degree', 'space', 'rotator', 'namely', 'iqs', 'fdr', 'dfdr', 'fdr', 'idsfqr', 'flux', 'linkage', 'current', 'relation', 'irfr', 'lls', 'lrlmechanical', 'equation', 'dwm', 'iqs', 'fdr', 'modelelectric', 'drivesinduction', 'systemelectric', 'motor', 'controlpower', 'electronics', 'control']",4
473,32403,"A simple template that combines SimEvents, Stateflow, Simulink and Simulink 3D Animation.<p>The goal of this demo is to establish a general template for simulating and animating simple assembly lines. In this example, we have two conveyor belts that have motions perpendicular to each other. Furthermore, a package needs to be mounted onto the conveyors and transferred across them as well by three gantries.Key points to keep in mind:1. The SimEvents model is used to model the environmental input to the conveyor belt system. A gated release of the packages is obtained through control from the assemly line that signals if the conveyor_x is indeed free. Furthermore, each entity is assigned a unique identification number (UID) to keep track of its flow through the statechart. 2. The Stateflow chart is used as a diagram to sequence the states. All concurrent motions of the various elements in the system are modeled as parallel states.3. The transfers are also modeled as parallel states with timed delays to create a simple loading motion. Observe how the uid values are reset only after the sequence is done to keep the various states of the system in synchronous.4. The Integration subsystem is a placeholder for modeling additional dynamics that can be incorporated by the modeler.5. The Animation Logic MATLAB function has been designed to simply the animation. At any point in time, there are only two blocks possible on the assembly line. By switching on/off the transparencies of the blocks, a uniform motion of the blocks can be obtained. This is much simpler than having to create a new block dynamically using the PROTO function.Questions to ponder about:1. The maximum queue capacity is 25. At what value of the velocities(forward &amp; backward) for both the conveyors will the queue length never exceed 10?2. How does the result in (1) change if you use a uniform distribution for the time-based entity generation? </p>des,descrete event simulation,discrete event,3d,animation,assembly,automation,conveyor,des,descrete event simulation,diagram,discrete,discrete event,event,eventbased,factory,flow,industrial,line,manufacturing,network,packaging,plc,queue,reality,sequence,simevents,traffic,virtual,visualization,workshop,3d,conveyor",34,1,2,0,50,simple template combine simevents stateflow animation goal demo establish general template animate simple assembly line example two conveyor belt motion perpendicular furthermore package need mount onto conveyor transfer across well three gantry key point keep mind simevents environmental input conveyor belt gate release package obtain control assemly line signal conveyor indeed free furthermore entity assign unique identification number uid keep track flow statechart stateflow chart diagram sequence state concurrent motion various element parallel state transfer also parallel state time delay create simple loading motion observe uid value reset sequence keep various state synchronous integration subsystem placeholder additional dynamic incorporate modeler animation logic function design simply animation point time two block possible assembly line switch transparency block uniform motion block obtain much simple create new block dynamically proto function question ponder maximum queue capacity value velocities forward amp backward conveyor queue length never exceed result change uniform distribution time base entity generation desdescrete event event event dconveyor,"['simple', 'template', 'combine', 'simevents', 'stateflow', 'animation', 'goal', 'demo', 'establish', 'general', 'template', 'animate', 'simple', 'assembly', 'line', 'example', 'two', 'conveyor', 'belt', 'motion', 'perpendicular', 'furthermore', 'package', 'need', 'mount', 'onto', 'conveyor', 'transfer', 'across', 'well', 'three', 'gantry', 'key', 'point', 'keep', 'mind', 'simevents', 'environmental', 'input', 'conveyor', 'belt', 'gate', 'release', 'package', 'obtain', 'control', 'assemly', 'line', 'signal', 'conveyor', 'indeed', 'free', 'furthermore', 'entity', 'assign', 'unique', 'identification', 'number', 'uid', 'keep', 'track', 'flow', 'statechart', 'stateflow', 'chart', 'diagram', 'sequence', 'state', 'concurrent', 'motion', 'various', 'element', 'parallel', 'state', 'transfer', 'also', 'parallel', 'state', 'time', 'delay', 'create', 'simple', 'loading', 'motion', 'observe', 'uid', 'value', 'reset', 'sequence', 'keep', 'various', 'state', 'synchronous', 'integration', 'subsystem', 'placeholder', 'additional', 'dynamic', 'incorporate', 'modeler', 'animation', 'logic', 'function', 'design', 'simply', 'animation', 'point', 'time', 'two', 'block', 'possible', 'assembly', 'line', 'switch', 'transparency', 'block', 'uniform', 'motion', 'block', 'obtain', 'much', 'simple', 'create', 'new', 'block', 'dynamically', 'proto', 'function', 'question', 'ponder', 'maximum', 'queue', 'capacity', 'value', 'velocities', 'forward', 'amp', 'backward', 'conveyor', 'queue', 'length', 'never', 'exceed', 'result', 'change', 'uniform', 'distribution', 'time', 'base', 'entity', 'generation', 'desdescrete', 'event', 'event', 'event', 'dconveyor']",5
474,32433,"DC to DC converter by using full Bridge<p>DC to DC converter with simple full bridge converter</p>converter,dc to dc converter,full bridge,inverter,rectifier,power_conversion_control,power_electronics_control,full bridge",28,0,1,0,28,converter full bridgedc converter simple full bridge converterfull conversion controlpower electronics controlfull bridge,"['converter', 'full', 'bridgedc', 'converter', 'simple', 'full', 'bridge', 'converterfull', 'conversion', 'controlpower', 'electronics', 'controlfull', 'bridge']",1
475,32434,"dc to dc converter  <p>dc to dc converter using dual bridge</p>converter,dc to dc converter,dual bridge,inverter,rectifier,power_conversion_control,power_electronics_control",30,0,1,0,38,converter converter dual converterdual conversion controlpower electronics control,"['converter', 'converter', 'dual', 'converterdual', 'conversion', 'controlpower', 'electronics', 'control']",6
476,32461,"closed loop dc to dc converter<p>controllable dc to dc converter</p>closed loop,converter,dc to dc converter,dual bridge,inverter,invertre,power_conversion_control,power_electronics_control",139,11,4,0,137,closed loop converterclosed loopconverterdc converterdual conversion controlpower electronics control,"['closed', 'loop', 'converterclosed', 'loopconverterdc', 'converterdual', 'conversion', 'controlpower', 'electronics', 'control']",1
477,32492,"This Simulink model will track a laser dot<p>According to my specific need for a robot vision project, i developed this model which will track in real time through the Blob Analysis a red laser dot.It is easy to modify it, according to your needs.If you have some questions, feel free with me.Enjoy,Chris </p>image processing,laser dot,robot vision,simulink,tracking",10,0,1,0,17,track laser dotaccording specific need robot vision project develop track real time blob analysis red laser dot easy modify accord need question feel free enjoychris image processinglaser dotrobot,"['track', 'laser', 'dotaccording', 'specific', 'need', 'robot', 'vision', 'project', 'develop', 'track', 'real', 'time', 'blob', 'analysis', 'red', 'laser', 'dot', 'easy', 'modify', 'accord', 'need', 'question', 'feel', 'free', 'enjoychris', 'image', 'processinglaser', 'dotrobot']",5
478,32588,stochastic<p>stochastic control</p>stochastic,20,1,2,0,27,,[],2
479,32590,"12 pulse controllable rectifier<p>closed loop control of 12 pulse rectifier</p>12 pulse,ac to dc,converter,rectifier",42,0,1,0,56,pulse controllable rectifierclosed loop control pulse rectifier pulseac,"['pulse', 'controllable', 'rectifierclosed', 'loop', 'control', 'pulse', 'rectifier', 'pulseac']",3
480,32591,"Different types of Rectifiers<p>1-phase Full Bridge Rectifiers</p>ac to dc converter,converter,rectifier",69,0,1,0,71,different type rectifier phase full bridge rectifiersac,"['different', 'type', 'rectifier', 'phase', 'full', 'bridge', 'rectifiersac']",3
481,32592,"1-phase full wave inverters<p>Inverterts</p>converter,dc to ac converter,inverter,spwm",57,0,1,0,66,phase full wave,"['phase', 'full', 'wave']",1
482,32593,"Different configurations of Half Wave Rectifiers.  <p>Different types of 1-Phase Rectifiers</p>ac to dc,converter,freewheeling diode,rectifier,rectifier,rectifier",47,0,1,0,47,different configuration half wave rectifier different type phase rectifiersac,"['different', 'configuration', 'half', 'wave', 'rectifier', 'different', 'type', 'phase', 'rectifiersac']",3
483,32642,"full pwm controlled rectifier <p>the low frequency current is normally filtered using a bulk capacitor. the active ripple energy storage capacitance</p>simulink,electric_motor_control,power_conversion_control,power_electronics_control",50,1,2,0,51,full pwm control rectifier low frequency current normally filter bulk capacitor active ripple energy storage motor controlpower conversion controlpower electronics control,"['full', 'pwm', 'control', 'rectifier', 'low', 'frequency', 'current', 'normally', 'filter', 'bulk', 'capacitor', 'active', 'ripple', 'energy', 'storage', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
484,32672,"A to Ac Converter view Zeta Converter<p>out put ac rms is fixed, we can change the input from 80 to 300V rms.DC voltage is regulated at 400V by PI controller.</p>ac to ac converter,boost converter,buck converter,buckboost,dc to dc converter,inverter,rectifier,power_conversion_control,power_electronics_control,boost converter",48,1,2,0,50,converter view zeta converterout put rms fix change input rms voltage regulate controller converterboost converterbuck conversion controlpower electronics controlboost converter,"['converter', 'view', 'zeta', 'converterout', 'put', 'rms', 'fix', 'change', 'input', 'rms', 'voltage', 'regulate', 'controller', 'converterboost', 'converterbuck', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converter']",3
485,32688,"A test model to understand how to generate multiple entities per time step.<p>This is a simple test model intended to understand how to generate multiple SimEvents entities with a function call events from a Stateflow chart.  Since they are distinct entities, it is assumed they can have different attributes and other functions in the model should be able to distinguish these entities.</p>simevents,stateflow",19,0,1,0,21,test understand generate multiple entity per time step simple test intend understand generate multiple simevents entities function call event stateflow chart since distinct entity assume different attribute function able distinguish entity,"['test', 'understand', 'generate', 'multiple', 'entity', 'per', 'time', 'step', 'simple', 'test', 'intend', 'understand', 'generate', 'multiple', 'simevents', 'entities', 'function', 'call', 'event', 'stateflow', 'chart', 'since', 'distinct', 'entity', 'assume', 'different', 'attribute', 'function', 'able', 'distinguish', 'entity']",0
486,32692,"This is another test model to try to generate multiple SimEvents entities per sample time.<p>This is a simplified model to try to generate multiple SimEvents entities per time step.  Each entity that is generated should have different values.  The entities are generated by a Stateflow chart calling a Event based Entity Generator via a function-call.</p>simevents,simulink,stateflow",8,0,1,0,8,another test try generate multiple simevents entity per sample time simplify try generate multiple simevents entity per time step entity generate different value entity generate stateflow chart call event base entity generator via function call,"['another', 'test', 'try', 'generate', 'multiple', 'simevents', 'entity', 'per', 'sample', 'time', 'simplify', 'try', 'generate', 'multiple', 'simevents', 'entity', 'per', 'time', 'step', 'entity', 'generate', 'different', 'value', 'entity', 'generate', 'stateflow', 'chart', 'call', 'event', 'base', 'entity', 'generator', 'via', 'function', 'call']",0
487,32712,"This is a simulink model of tolerance band control method of PWM simulated on single phase inverter.<p>A single phase inverter is simulated using a very simple and good method known as Hysteresis band current control. This method comes under current controlled modulation techniques of PWM. It is famous for its fast dynamic response and easy implementation. It controls the current level despite of the load conditions. </p>band control,band control,current controlled,dcac converter,hadeed,hysteresis,industrial electronics,ksu,power electronics,pulse width modulation,pwm,simulink,single phase inverter,electric_motor_control,power_conversion_control,power_electronics_control,band control",15,0,1,0,22,tolerance band control method pwm single phase inverter single phase inverter simple good method know hysteresis band current control method come current controlled modulation technique pwm famous fast dynamic response easy implementation control current level despite load condition band controlband controlcurrent controlleddcac width phase motor controlpower conversion controlpower electronics controlband control,"['tolerance', 'band', 'control', 'method', 'pwm', 'single', 'phase', 'inverter', 'single', 'phase', 'inverter', 'simple', 'good', 'method', 'know', 'hysteresis', 'band', 'current', 'control', 'method', 'come', 'current', 'controlled', 'modulation', 'technique', 'pwm', 'famous', 'fast', 'dynamic', 'response', 'easy', 'implementation', 'control', 'current', 'level', 'despite', 'load', 'condition', 'band', 'controlband', 'controlcurrent', 'controlleddcac', 'width', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlband', 'control']",3
488,32714,"This simulation simulates a CUk converter<p>CUk converter is an extension of buck/boost converter and is capable of either buck or boost the input voltage. The current of input and output have very low ripple content.</p>cuk converter,dcdc converter,ksu,power electronics,simulink",14,0,1,0,16,cuk convertercuk converter extension buck boost converter capable either buck boost input voltage current input output low ripple content cuk converterdcdc,"['cuk', 'convertercuk', 'converter', 'extension', 'buck', 'boost', 'converter', 'capable', 'either', 'buck', 'boost', 'input', 'voltage', 'current', 'input', 'output', 'low', 'ripple', 'content', 'cuk', 'converterdcdc']",3
489,32730,"This model presents a unipolar switching of hysteresis band current controlled inverter<p>A single phase inverter with unipolar PWM is presented.The PWM is generated using the hysteresis band current controlled method.</p>current controlled,hysteresis band,igbt,inverter,power electronics,pwm,simulink,current controlled,electric_motor_control,power_conversion_control,power_electronics_control",18,0,1,0,25,present unipolar switch hysteresis band current control invertera single phase inverter unipolar pwm present pwm generate hysteresis band current control method current motor controlpower conversion controlpower electronics control,"['present', 'unipolar', 'switch', 'hysteresis', 'band', 'current', 'control', 'invertera', 'single', 'phase', 'inverter', 'unipolar', 'pwm', 'present', 'pwm', 'generate', 'hysteresis', 'band', 'current', 'control', 'method', 'current', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
490,32742,"Transmission of digital modulated Baseband signals through simulink and Analysis through Agilent vsa<p>Hi,These programs are for generating signal through matlab-simulink and simultaneously analyzing them through vector signal analyzer fromAgilent Technoloiges.Agilent Technologies ""Vector signal Analyzer"" (VSA) 89600 version has simulink support. Any BaseBand data of any wireless standards  (few are given below) generated through Simulink and can be analyzed on the VSA on PC/Laptop.1. WLAN (802.11 a/b/g/n) &amp; Hiperlan2. wimax (802.16d  or 802.16e)3. LTE4. OFDM 5. TD-SCDMA6. Any digital modulation scheme.7. Any Analog modulation scheme.Apart from analysis can be done on Agilent VSA1. Eye diagram2. Band power3. EVM.4. PAPR and many others.A Trial license of 14 days can be obtained and within that duration it can be used for decoding/analysis of various baseband signals. Although Many standards are supported on VSA (for decoding and analysis), i am able to list a few above..Currently included files are compatible with agilent version 12.00Agilent VSA can be downloaded from this linkhttp://<a href=""http://www.home.agilent.com/agilent/editorial.jspx?cc=US&amp;lc=eng&amp;ckey=1303376&amp;nid=-11143.0.00&amp;id=1303376Apart"">www.home.agilent.com/agilent/editorial.jspx?cc=US&amp;lc=eng&amp;ckey=1303376&amp;nid=-11143.0.00&amp;id=1303376Apart</a> from downloading, during installation care has to be taken to install SIMULINK Drivers also and after installation of VSASimulink drivers, in MATLAB Simulink library browser..you can find AGILENT SOURCE/SINK modules ..that can be used for drag and drop.Regarding files================On the transmitter side, files are given in form of simulink models (.mdl format) and on the receiver side VSA files (.set format).1. oN Simulink, please load the given .mdl format file. in this folder please load vsa_test_qpsk.mdl2. on Agilent, VSA go to FILE--&gt;Recall--&gt;Recall Setup please browse to file vsa_qpsk.set3. when simulink file is put into run mode, the modulated data generated (by simulink) is pumped into vsa sink blockset in simulink.4. the vsa sink blockset transfer the data to the vsa.5. the vsa setup file (.set format file) will have appropriate settings to decode data and analyse the signal.Currently with this submission, i am enclosing .set and .mdl files for demodulation/analysis of1. msk2. qpsk3. 8pskThanksRC Reddy</p>keysight,communications,signal processing",19,0,1,0,16,transmission digital modulate baseband signal analysis agilent vsahithese program generate signal analyze vector signal analyzer fromagilent technoloiges agilent technology vector signal analyzer vsa version support baseband data wireless standard give generate analyzed vsa laptop wlan amp hiperlan wimax lte ofdm scdma digital modulation scheme analog modulation scheme apart analysis agilent vsa eye diagram band power evm papr many others trial license day obtain within duration decode analysis various baseband signal although many standard support vsa decode analysis able list currently include file compatible agilent version agilent vsa download linkhttp home agilent com agilent editorial jspx amp eng amp ckey amp nid amp apart download installation care take install driver also installation driver browser find agilent source sink module drag drop regard file transmitter side file give form mdl format receiver side vsa file set format please load give mdl format file folder please load vsa test qpsk mdl agilent vsa file recall recall setup please browse file vsa qpsk set file put run mode modulate data generate pumped vsa sink blockset vsa sink blockset transfer data vsa vsa setup file set format file appropriate setting decode data analyse signal currently submission enclose set mdl file demodulation analysis msk qpsk pskthanksrc processing,"['transmission', 'digital', 'modulate', 'baseband', 'signal', 'analysis', 'agilent', 'vsahithese', 'program', 'generate', 'signal', 'analyze', 'vector', 'signal', 'analyzer', 'fromagilent', 'technoloiges', 'agilent', 'technology', 'vector', 'signal', 'analyzer', 'vsa', 'version', 'support', 'baseband', 'data', 'wireless', 'standard', 'give', 'generate', 'analyzed', 'vsa', 'laptop', 'wlan', 'amp', 'hiperlan', 'wimax', 'lte', 'ofdm', 'scdma', 'digital', 'modulation', 'scheme', 'analog', 'modulation', 'scheme', 'apart', 'analysis', 'agilent', 'vsa', 'eye', 'diagram', 'band', 'power', 'evm', 'papr', 'many', 'others', 'trial', 'license', 'day', 'obtain', 'within', 'duration', 'decode', 'analysis', 'various', 'baseband', 'signal', 'although', 'many', 'standard', 'support', 'vsa', 'decode', 'analysis', 'able', 'list', 'currently', 'include', 'file', 'compatible', 'agilent', 'version', 'agilent', 'vsa', 'download', 'linkhttp', 'home', 'agilent', 'com', 'agilent', 'editorial', 'jspx', 'amp', 'eng', 'amp', 'ckey', 'amp', 'nid', 'amp', 'apart', 'download', 'installation', 'care', 'take', 'install', 'driver', 'also', 'installation', 'driver', 'browser', 'find', 'agilent', 'source', 'sink', 'module', 'drag', 'drop', 'regard', 'file', 'transmitter', 'side', 'file', 'give', 'form', 'mdl', 'format', 'receiver', 'side', 'vsa', 'file', 'set', 'format', 'please', 'load', 'give', 'mdl', 'format', 'file', 'folder', 'please', 'load', 'vsa', 'test', 'qpsk', 'mdl', 'agilent', 'vsa', 'file', 'recall', 'recall', 'setup', 'please', 'browse', 'file', 'vsa', 'qpsk', 'set', 'file', 'put', 'run', 'mode', 'modulate', 'data', 'generate', 'pumped', 'vsa', 'sink', 'blockset', 'vsa', 'sink', 'blockset', 'transfer', 'data', 'vsa', 'vsa', 'setup', 'file', 'set', 'format', 'file', 'appropriate', 'setting', 'decode', 'data', 'analyse', 'signal', 'currently', 'submission', 'enclose', 'set', 'mdl', 'file', 'demodulation', 'analysis', 'msk', 'qpsk', 'pskthanksrc', 'processing']",0
491,32748,"It generates ac output of 27 level per phase.<p>It is designed to generate ac output of 27 levels/ phase. Three H bridges are used with three unequal distributed DC sources (1:3:9). ""A"" represents the no. of level in the output and ""F"" indicates the output frequency. Sinusoidal PWM used to vary the output voltage and frequency. So the model can be used for other applications like drives, DVR, grid tied inverter etc., </p>control design,multilevel inverter,control design,multilevel inverter,simulation,electric_motor_control,power_conversion_control,power_electronics_control,control design,control design,seven level,control design,control design",1167,27,3,0,1771,generates output level per phase design generate output level phase three bridge three unequal distribute source represent level output indicate output frequency sinusoidal pwm vary output voltage frequency application like drive dvr grid tie inverter etc control invertercontrol motor controlpower conversion controlpower electronics controlcontrol designcontrol designseven levelcontrol designcontrol design,"['generates', 'output', 'level', 'per', 'phase', 'design', 'generate', 'output', 'level', 'phase', 'three', 'bridge', 'three', 'unequal', 'distribute', 'source', 'represent', 'level', 'output', 'indicate', 'output', 'frequency', 'sinusoidal', 'pwm', 'vary', 'output', 'voltage', 'frequency', 'application', 'like', 'drive', 'dvr', 'grid', 'tie', 'inverter', 'etc', 'control', 'invertercontrol', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designcontrol', 'designseven', 'levelcontrol', 'designcontrol', 'design']",1
492,32787,"The default 1D Simulink edge detector is not HDl Coder compatible, so here's an alternative.<p>The default 1D Simulink edge detector is not HDl Coder compatible, so here's an alternative. A simple, basic logic cell based subsystem.</p>edge,hdl coder,logic,verilog,vhdl",13,2,2,0,13,default edge detector hdl coder compatible alternative default edge detector hdl coder compatible alternative simple basic logic cell base subsystem edgehdl,"['default', 'edge', 'detector', 'hdl', 'coder', 'compatible', 'alternative', 'default', 'edge', 'detector', 'hdl', 'coder', 'compatible', 'alternative', 'simple', 'basic', 'logic', 'cell', 'base', 'subsystem', 'edgehdl']",5
493,32807,"Half wave rectifier with RL load using thyristor with suitable waveform<p>Half wave rectifier with RL load using thyristor.</p>power electronics,rectifier,sim power,simulation,simulink,thyristor,power_conversion_control,power_electronics_control",19,0,1,0,19,half wave rectifier load thyristor suitable waveformhalf wave rectifier load thyristor power conversion controlpower electronics control,"['half', 'wave', 'rectifier', 'load', 'thyristor', 'suitable', 'waveformhalf', 'wave', 'rectifier', 'load', 'thyristor', 'power', 'conversion', 'controlpower', 'electronics', 'control']",1
494,32808,"y2dot = u<p>Tracking backstepping</p>simulink,simulink,simulink,simulink,simulink,simulink",22,0,1,0,22,dot utracking,"['dot', 'utracking']",2
495,32813,"three phase three level space vector based pulse width modulation with optimal switching<p>three phase three level space vector based pulse width modulation with optimal switchingauthor: ankush laddhaOrganisation : IIT - Bombaycomments are invited!!</p>inverter,simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control",624,40,4,0,739,three phase three level space vector base pulse width modulation optimal switchingthree phase three level space vector base pulse width modulation optimal switchingauthor ankush iit bombaycomments invite motor controlpower conversion controlpower electronics control,"['three', 'phase', 'three', 'level', 'space', 'vector', 'base', 'pulse', 'width', 'modulation', 'optimal', 'switchingthree', 'phase', 'three', 'level', 'space', 'vector', 'base', 'pulse', 'width', 'modulation', 'optimal', 'switchingauthor', 'ankush', 'iit', 'bombaycomments', 'invite', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
496,32814,"Modeling of induction Motor..<p>simulink model of Induction Motor</p>induction motor ac motor asynchronous motor motor,modeling,induction motor ac motor asynchronous motor motor,induction motor ac motor asynchronous motor motor,electric_motor_control,power_electronics_control,induction motor ac motor asynchronous motor motor,modeling,modeling,induction motor ac motor asynchronous motor motor,modeling",129,6,3,0,133,induction motor induction motorinduction motor motor asynchronous motor motor motor asynchronous motor motorinduction motor motor asynchronous motor motorelectric motor controlpower electronics motor motor asynchronous motor motor motor asynchronous motor motormodeling,"['induction', 'motor', 'induction', 'motorinduction', 'motor', 'motor', 'asynchronous', 'motor', 'motor', 'motor', 'asynchronous', 'motor', 'motorinduction', 'motor', 'motor', 'asynchronous', 'motor', 'motorelectric', 'motor', 'controlpower', 'electronics', 'motor', 'motor', 'asynchronous', 'motor', 'motor', 'motor', 'asynchronous', 'motor', 'motormodeling']",6
497,32819,freespace propagation Attenuation code writen in simulink<p>freespace propagation Attenuation code writen in simulink</p>simulink code,25,1,2,0,23,freespace propagation attenuation code writen propagation attenuation code writen code,"['freespace', 'propagation', 'attenuation', 'code', 'writen', 'propagation', 'attenuation', 'code', 'writen', 'code']",5
498,32820,"Half wave rectifier with RL load using diode with suitable waveform<p>Half wave rectifier with RL load using diode</p>power electronics,simpower,simulation,simulink,power electronics",18,0,1,0,17,half wave rectifier load diode suitable waveformhalf wave rectifier load diodepower electronics,"['half', 'wave', 'rectifier', 'load', 'diode', 'suitable', 'waveformhalf', 'wave', 'rectifier', 'load', 'diodepower', 'electronics']",3
499,32835,"Additional discrete modeling enhancements to the demo<p>This demo is an extension of the following demo:<a href=""http://www.mathworks.com/matlabcentral/fileexchange/28196-robot-soccer-an-exercise-in-learning-the-key-features-of-simulinkThe"">http://www.mathworks.com/matlabcentral/fileexchange/28196-robot-soccer-an-exercise-in-learning-the-key-features-of-simulinkThe</a> key Simulink concepts on how to build this demo discussed in the ""Introduction to Simulink"" webinar:Please note that the webinar does not cover the Stateflow and SimEvents portions.Key points to consider in this demo:1. Team 1 has a strategy that is implemented as different modes in a state chart where the collective behavior of the two robots switches between aggressive and passive plays. The criteria that determines the switching is based on opponent positions and residual energy. Team 2 uses a rather simple strategy with one robot always attacking and the other simply defending by blocking shots. 2. For each team, both robots upload their energy values on a shared channel and download actuator command signals on another shared channel from a centralized station.3. Observe that the outcomes and game play are different each time you run the simulation. How can you explain this paradox given that all the initial positions and strategy of the robots are the same? What is causing the non-deterministic system level behavior in the system?4. Under the non-deterministic circumstances outlined above, is it possible to design (assuming existence) an algorithm that guarantees a 90% confidence that team 1 will always win? If such an algorithm does not exist, can you prove why?Please make sure you use R2011b as SimEvents underwent a major update that requires new blocks (gateway block) for this demo to work.</p>3d,animation,ball,collaborative,competition,control,fine,football,game,hockey,ice,introduction,machine,multagent,multiple,robocup,robot,robot soccer,robotics,simevents,simulator,simulink,soccer,state,theory,visualization,webinar",360,43,3,0,378,additional discrete enhancement demothis demo extension follow demo http mathworks com matlabcentral fileexchange robot soccer exercise learn key feature key concept build demo discuss introduction webinar please note webinar cover stateflow simevents portion key point consider demo team strategy implement different mode state chart collective behavior two robot switch aggressive passive play criteria determines switch base opponent position residual energy team rather simple strategy one robot always attack simply defend block shot team robot upload energy value share channel download actuator command signal another share channel centralize station observe outcome game play different time run explain paradox give initial position strategy robot cause non deterministic level behavior non deterministic circumstance outline possible design assume existence algorithm guarantee confidence team always win algorithm exist prove please make sure simevents underwent major update require new block gateway block demo work,"['additional', 'discrete', 'enhancement', 'demothis', 'demo', 'extension', 'follow', 'demo', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'robot', 'soccer', 'exercise', 'learn', 'key', 'feature', 'key', 'concept', 'build', 'demo', 'discuss', 'introduction', 'webinar', 'please', 'note', 'webinar', 'cover', 'stateflow', 'simevents', 'portion', 'key', 'point', 'consider', 'demo', 'team', 'strategy', 'implement', 'different', 'mode', 'state', 'chart', 'collective', 'behavior', 'two', 'robot', 'switch', 'aggressive', 'passive', 'play', 'criteria', 'determines', 'switch', 'base', 'opponent', 'position', 'residual', 'energy', 'team', 'rather', 'simple', 'strategy', 'one', 'robot', 'always', 'attack', 'simply', 'defend', 'block', 'shot', 'team', 'robot', 'upload', 'energy', 'value', 'share', 'channel', 'download', 'actuator', 'command', 'signal', 'another', 'share', 'channel', 'centralize', 'station', 'observe', 'outcome', 'game', 'play', 'different', 'time', 'run', 'explain', 'paradox', 'give', 'initial', 'position', 'strategy', 'robot', 'cause', 'non', 'deterministic', 'level', 'behavior', 'non', 'deterministic', 'circumstance', 'outline', 'possible', 'design', 'assume', 'existence', 'algorithm', 'guarantee', 'confidence', 'team', 'always', 'win', 'algorithm', 'exist', 'prove', 'please', 'make', 'sure', 'simevents', 'underwent', 'major', 'update', 'require', 'new', 'block', 'gateway', 'block', 'demo', 'work']",0
500,32844,"a fast 2 level space vector modulationauthor:ankush laddha (IIT - Bombay)please rate this file<p>a fast 2 level space vector modulationauthor:ankush laddha (IIT - Bombay)please rate this filedont include optimal switching</p>svpwm,inverter,simulationpulse width modulation,simulink,statcom,electric_motor_control,power_conversion_control,power_electronics_control,inverter,simulationpulse width modulation",144,3,2,0,172,fast level space vector ankush laddha iit bombay please rate filea fast level space vector ankush laddha iit bombay please rate filedont include optimal width motor controlpower conversion controlpower electronics width modulation,"['fast', 'level', 'space', 'vector', 'ankush', 'laddha', 'iit', 'bombay', 'please', 'rate', 'filea', 'fast', 'level', 'space', 'vector', 'ankush', 'laddha', 'iit', 'bombay', 'please', 'rate', 'filedont', 'include', 'optimal', 'width', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'width', 'modulation']",3
501,32859,"full wave rectifier with R-L load using thyristor<p>full wave rectifier with R-L load using thyristor with suitable waveform</p>full wave rectifier,power electronics,sim power,simulation,simulink,thyristor",18,0,1,0,21,full wave rectifier load thyristorfull wave rectifier load thyristor suitable waveformfull wave rectifierpower electronicssim,"['full', 'wave', 'rectifier', 'load', 'thyristorfull', 'wave', 'rectifier', 'load', 'thyristor', 'suitable', 'waveformfull', 'wave', 'rectifierpower', 'electronicssim']",4
502,32860,"full wave bridge rectifier with RL load with thyristor<p>full wave bridge rectifier with RL load with thyristor with suitable waveform</p>full wave bridge rectifier,power electronics,simpower,simulation,simullink,thyristor,power_conversion_control,power_electronics_control",16,0,1,0,20,full wave bridge rectifier load thyristorfull wave bridge rectifier load thyristor suitable waveformfull wave bridge rectifierpower conversion controlpower electronics control,"['full', 'wave', 'bridge', 'rectifier', 'load', 'thyristorfull', 'wave', 'bridge', 'rectifier', 'load', 'thyristor', 'suitable', 'waveformfull', 'wave', 'bridge', 'rectifierpower', 'conversion', 'controlpower', 'electronics', 'control']",1
503,32861,"ToFile block with custom dynamic filename and metadata variables plus autoversioning.<p>Enhances ToFile block with:- input based filename version- autoversioning if file exists (optional)- parameter stores metadata- input stores metadataLimitations:- only Array based storage, no Timeseries- only inherit sample time- no decimation</p>simulink",14,1,2,0,11,tofile block custom dynamic filename metadata variable plus autoversioning enhances tofile block input base filename version autoversioning file exists optional parameter store metadata input store array base storage timeseries inherit sample time,"['tofile', 'block', 'custom', 'dynamic', 'filename', 'metadata', 'variable', 'plus', 'autoversioning', 'enhances', 'tofile', 'block', 'input', 'base', 'filename', 'version', 'autoversioning', 'file', 'exists', 'optional', 'parameter', 'store', 'metadata', 'input', 'store', 'array', 'base', 'storage', 'timeseries', 'inherit', 'sample', 'time']",5
504,32888,"A tutorial on integrating GUI developed in GUIDE with SIMULINK model<p>The concept is explained in a document with a simple example. This method would be very useful for those who develop complex controller models and want to perform effective functional testing of them. </p>aerospace,automotive,gui,simulation,simulink,pick of the week,potw,gui,automotive,aerospace",10,0,1,0,8,tutorial integrate gui develop guide modelthe concept explain document simple example method would useful develop complex controller want perform effective functional testing,"['tutorial', 'integrate', 'gui', 'develop', 'guide', 'modelthe', 'concept', 'explain', 'document', 'simple', 'example', 'method', 'would', 'useful', 'develop', 'complex', 'controller', 'want', 'perform', 'effective', 'functional', 'testing']",0
505,32904,"Single phase half bridge voltage source inverter  with R load<p>Single phase half bridge voltage source inverter  with R load with suitable waveform</p>powerelectronics,sim power,single phase half bridge voltage source inverter with r load,voltage source inverter",27,0,1,0,21,single phase half bridge voltage source inverter loadsingle phase half bridge voltage source inverter load suitable powersingle phase half bridge voltage source inverter loadvoltage source inverter,"['single', 'phase', 'half', 'bridge', 'voltage', 'source', 'inverter', 'loadsingle', 'phase', 'half', 'bridge', 'voltage', 'source', 'inverter', 'load', 'suitable', 'powersingle', 'phase', 'half', 'bridge', 'voltage', 'source', 'inverter', 'loadvoltage', 'source', 'inverter']",1
506,32919,"Lynch files to accompany the book.<p>Lynch_Chaps.zip contains the MATLAB files, Simulink model files and a Tutorial Introduction to MATLAB for the new book, ""Applications of Chaos and Nonlinear Dynamics in Engineering - Vol. 1"". The book is published by Springer and edited by S.Banerjee, M.Mitra and L.Rondoni.</p>chemistry,mathematics,modeling,physics,simulink",27,0,1,0,37,lynch file accompany book lynch chap zip contain file file tutorial introduction new book application chaos nonlinear dynamic engineering vol book publish springer edit banerjee mitra rondoni,"['lynch', 'file', 'accompany', 'book', 'lynch', 'chap', 'zip', 'contain', 'file', 'file', 'tutorial', 'introduction', 'new', 'book', 'application', 'chaos', 'nonlinear', 'dynamic', 'engineering', 'vol', 'book', 'publish', 'springer', 'edit', 'banerjee', 'mitra', 'rondoni']",0
507,32936,"It generates ac output voltage of 27levels with fixed voltage and fixed frequency.<p>Three H bridges are used with three unequal distributed DC sources (1:3:9). Embedded Matlab function is used to generate switching pulse for generating 230V, 50Hz. The model can be used for the applications like drives, inverter etc., </p>simulink,simpowersystem,simulink,power_conversion_control,power_electronics_control",25,0,1,0,37,generates output voltage level fix voltage fix frequency three bridge three unequal distribute source embed function generate switch pulse generate application like drive inverter etc conversion controlpower electronics control,"['generates', 'output', 'voltage', 'level', 'fix', 'voltage', 'fix', 'frequency', 'three', 'bridge', 'three', 'unequal', 'distribute', 'source', 'embed', 'function', 'generate', 'switch', 'pulse', 'generate', 'application', 'like', 'drive', 'inverter', 'etc', 'conversion', 'controlpower', 'electronics', 'control']",1
508,32937,"The hysteresis control of DC to DC converter is designed to improve the dynamic response.<p>Â Â Â Â Â Â Â A DC-DC converter is designed with hsteresis control. This control technique provides better dynamic reponse compared with PWM technique.</p>simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control,highig",28,0,1,0,35,hysteresis control converter design improve dynamic response converter design hsteresis control control technique provide good dynamic reponse compare pwm technique motor controlpower conversion controlpower electronics controlhighig,"['hysteresis', 'control', 'converter', 'design', 'improve', 'dynamic', 'response', 'converter', 'design', 'hsteresis', 'control', 'control', 'technique', 'provide', 'good', 'dynamic', 'reponse', 'compare', 'pwm', 'technique', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlhighig']",1
509,32938,"The output frequency and the voltage can controlled.<p>Â Â Â Â Â Â Â A single phase cyclcoconverter is designed with center tapped transformer.By giving the proper input command, the output voltage and frequency can be controlled.</p>simulation,simulink",25,1,2,0,36,output frequency voltage control single phase cyclcoconverter design center tap transformer give proper input command output voltage frequency control,"['output', 'frequency', 'voltage', 'control', 'single', 'phase', 'cyclcoconverter', 'design', 'center', 'tap', 'transformer', 'give', 'proper', 'input', 'command', 'output', 'voltage', 'frequency', 'control']",3
510,32939,"This circuit helps to generate all kinds of sag.<p>Â Â Â Â Â Â Â Â The circuit is designed to generate all kinds of sag. This circuit can be used measure the performance of adjustable speed drives and dynamic voltage restorer etc.,</p>simulation,simulink",99,5,4,0,106,circuit help generate kind sag circuit design generate kind sag circuit measure performance adjustable speed drive dynamic voltage restorer etc,"['circuit', 'help', 'generate', 'kind', 'sag', 'circuit', 'design', 'generate', 'kind', 'sag', 'circuit', 'measure', 'performance', 'adjustable', 'speed', 'drive', 'dynamic', 'voltage', 'restorer', 'etc']",4
511,32958,"three phase PLLauthor Ankush Laddha (IIT-Bombay)please rate this file & also send me comments<p>this is three phase PLL easily get locked to fundamental component of voltage even in presence of harmonics. please check notation used for q &amp; d vector...its bit different then conventional..</p>control design,control design,inverter,pll,simulation,simulink,inverter,inverter,simulink",65,5,2,0,72,three phase pllauthor ankush laddha iit bombay please rate file also send commentsthis three phase pll easily get locked fundamental component voltage even presence harmonic please check notation amp vector bit different conventional control designcontrol,"['three', 'phase', 'pllauthor', 'ankush', 'laddha', 'iit', 'bombay', 'please', 'rate', 'file', 'also', 'send', 'commentsthis', 'three', 'phase', 'pll', 'easily', 'get', 'locked', 'fundamental', 'component', 'voltage', 'even', 'presence', 'harmonic', 'please', 'check', 'notation', 'amp', 'vector', 'bit', 'different', 'conventional', 'control', 'designcontrol']",4
512,32959,"based on delta control & has constant switching freqAuthor : Ankush Laddha (IIT-BOMBAY)<p>it is based on varing the delta of space vector pulse width modulator.Basic description is also given in file itself</p>inverter,reactive power,simulationpower system,simulink,statcom,power_conversion_control,power_electronics_control",341,20,4,0,382,base delta control constant switch freqauthor ankush laddha iit bombay base varing delta space vector pulse width modulator basic description also give file conversion controlpower electronics control,"['base', 'delta', 'control', 'constant', 'switch', 'freqauthor', 'ankush', 'laddha', 'iit', 'bombay', 'base', 'varing', 'delta', 'space', 'vector', 'pulse', 'width', 'modulator', 'basic', 'description', 'also', 'give', 'file', 'conversion', 'controlpower', 'electronics', 'control']",3
513,32960,"based on hysteresis current controlAuthor : Ankush Laddha (IIT-BOMBAY)rate this file<p>change in Vdc are sensed &amp; are used to generate the current reference only at zero crossing of voltage. otherwise may cause imbalance</p>hysteresis current control,inverter,simulation,simulink,statcom,hysteresis current control",49,0,1,0,62,base hysteresis current controlauthor ankush laddha iit bombay rate filechange vdc sense amp generate current reference zero cross voltage otherwise may cause current current control,"['base', 'hysteresis', 'current', 'controlauthor', 'ankush', 'laddha', 'iit', 'bombay', 'rate', 'filechange', 'vdc', 'sense', 'amp', 'generate', 'current', 'reference', 'zero', 'cross', 'voltage', 'otherwise', 'may', 'cause', 'current', 'current', 'control']",4
514,32967,"pll is implemented using d q refernce theory<p>pll is implemented using d q refernce theory</p>simulation,simulation",75,3,2,0,90,pll implement refernce theorypll implement refernce,"['pll', 'implement', 'refernce', 'theorypll', 'implement', 'refernce']",5
515,32968,"Cell model connected to battery<p>Is a cell model that represents a PV module connected to a battery... </p>cell model,pv module,pv module,cell model,battery_system_management,power_electronics_control",49,1,2,0,54,cell connect batteryis cell represent module connect battery cell modelpv modulepv modulecell modelbattery managementpower electronics control,"['cell', 'connect', 'batteryis', 'cell', 'represent', 'module', 'connect', 'battery', 'cell', 'modelpv', 'modulepv', 'modulecell', 'modelbattery', 'managementpower', 'electronics', 'control']",4
516,32976,"current control is implement using hexagonal hysteresis current error band<p>here current error is converter to hexagonal band. inner &amp; outer band corresponds to medium &amp; large vector. here voltage vectors are 30 degree shifted to what is have in case of normal space vector</p>current control,simulation,simulink,three level inverter,current control",242,4,2,0,302,current control implement hexagonal hysteresis current error bandhere current error converter hexagonal band inner amp band correspond medium amp large vector voltage vector degree shifted case normal space vectorcurrent level invertercurrent control,"['current', 'control', 'implement', 'hexagonal', 'hysteresis', 'current', 'error', 'bandhere', 'current', 'error', 'converter', 'hexagonal', 'band', 'inner', 'amp', 'band', 'correspond', 'medium', 'amp', 'large', 'vector', 'voltage', 'vector', 'degree', 'shifted', 'case', 'normal', 'space', 'vectorcurrent', 'level', 'invertercurrent', 'control']",4
517,32983,"Space Vector pulse width modulation based three phase rectifier<p>This model simulates a three phase rectifier based on space vector pulse width modulation. Parameters can be adjusted from Model properties initial call back function.</p>ac drives,control,control system,dc drives,drives,electrical drives,full wave rectifier,machines,power electronics,power system,rectifier,space vector pulse width modulation,svpwm,electric_motor_control,power_conversion_control,power_electronics_control",67,2,3,0,68,space vector pulse width modulation base three phase rectifierthis three phase rectifier base space vector pulse width modulation parameter adjust property initial call back function systemdc drivesfull wave vector pulse width motor controlpower conversion controlpower electronics control,"['space', 'vector', 'pulse', 'width', 'modulation', 'base', 'three', 'phase', 'rectifierthis', 'three', 'phase', 'rectifier', 'base', 'space', 'vector', 'pulse', 'width', 'modulation', 'parameter', 'adjust', 'property', 'initial', 'call', 'back', 'function', 'systemdc', 'drivesfull', 'wave', 'vector', 'pulse', 'width', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
518,32995,"Series electrical circuit of consisting of Resistance, Inductance, Capacitance is simulated.<p>Well This is very basic circuit designed for budding students who are not familiar  with Matlab/Simulink. Series electrical circuit of consisting of Resistance, Inductance, Capacitance is simulated with the help of Simulink.</p>control design,matlab electircal ciruit,measurement,power system,rlc circuit simulation,simulation,simulink,ada,matlab electircal ciruit",5,0,1,0,4,series electrical circuit consist resistance inductance capacitance well basic circuit design budding student familiar series electrical circuit consist resistance inductance capacitance help control designmatlab electircal systemrlc circuit electircal ciruit,"['series', 'electrical', 'circuit', 'consist', 'resistance', 'inductance', 'capacitance', 'well', 'basic', 'circuit', 'design', 'budding', 'student', 'familiar', 'series', 'electrical', 'circuit', 'consist', 'resistance', 'inductance', 'capacitance', 'help', 'control', 'designmatlab', 'electircal', 'systemrlc', 'circuit', 'electircal', 'ciruit']",4
519,32996,"Single Phase Half wave Rectifier, with the help of SCR is demonstrated.<p>In this simulation file,Single Phase Half wave Rectifier is simulated. The firing angle is controlled thought pulse generator using the Source voltage signal. The firing angle of two different thyristor is made differ by ""phase delay"" in the properties of pulse generator. Comment and queries are dearly invited.Thanks for visiting me :)</p>automotive,control design,power electronics,rectifier,signal processing,simulation,simulink,single phase half wave rectifier simulation,thyristor simulation,simulation",9,0,1,0,10,single phase half wave rectifier help scr demonstrate filesingle phase half wave rectifier fire angle control thought pulse generator source voltage signal fire angle two different thyristor make differ phase delay property pulse generator comment query dearly invite thanks visit designpower phase half wave rectifier,"['single', 'phase', 'half', 'wave', 'rectifier', 'help', 'scr', 'demonstrate', 'filesingle', 'phase', 'half', 'wave', 'rectifier', 'fire', 'angle', 'control', 'thought', 'pulse', 'generator', 'source', 'voltage', 'signal', 'fire', 'angle', 'two', 'different', 'thyristor', 'make', 'differ', 'phase', 'delay', 'property', 'pulse', 'generator', 'comment', 'query', 'dearly', 'invite', 'thanks', 'visit', 'designpower', 'phase', 'half', 'wave', 'rectifier']",3
520,32997,"The simulation of Single Phase Semi converter is explained to help in the studies.<p>The simulation of Single Phase Semi converter is explained to help in the studying the various effects of changing of the firing angle. This illustration is important from the learning of power electronics basics point of view.Comments and queries are dearly invited.Thanks for visiting me have a good day :)</p>automotive,communications,control design,firing angle,measurement,power electronics,signal processing,simulation,simulink,single phase semi converter,thyristor simulation,power_conversion_control,power_electronics_control",16,0,1,0,22,single phase semi converter explain help study single phase semi converter explain help study various effect change fire angle illustration important learn power electronics basic point view comment query dearly invite thanks visit good day designfiring phase semi conversion controlpower electronics control,"['single', 'phase', 'semi', 'converter', 'explain', 'help', 'study', 'single', 'phase', 'semi', 'converter', 'explain', 'help', 'study', 'various', 'effect', 'change', 'fire', 'angle', 'illustration', 'important', 'learn', 'power', 'electronics', 'basic', 'point', 'view', 'comment', 'query', 'dearly', 'invite', 'thanks', 'visit', 'good', 'day', 'designfiring', 'phase', 'semi', 'conversion', 'controlpower', 'electronics', 'control']",3
521,33011,"      It is a 4 level 4 phase switched capacitor DC DC converter.<p>Â Â Â Â Â It is switched capacitor DC DC converter. It has 4 level 4 phase used to reduce the input current harmonics and ripple content in the output voltage. It has the gain of 4.Zero Current Switching technique (ZCS) is used to minimize the switching losses.</p>simulation,simulink,zero current switching,power_conversion_control,power_electronics_control",138,4,2,0,185,level phase switch capacitor converter switch capacitor converter level phase reduce input current harmonic ripple content output voltage gain zero current switch technique zcs minimize switching loss current switchingpower conversion controlpower electronics control,"['level', 'phase', 'switch', 'capacitor', 'converter', 'switch', 'capacitor', 'converter', 'level', 'phase', 'reduce', 'input', 'current', 'harmonic', 'ripple', 'content', 'output', 'voltage', 'gain', 'zero', 'current', 'switch', 'technique', 'zcs', 'minimize', 'switching', 'loss', 'current', 'switchingpower', 'conversion', 'controlpower', 'electronics', 'control']",1
522,33056,"Thyristor is simulated with different firing angles.<p>In this illustration, thyristor is demonstrated with a firing angle of 30*. This firing angle can be changed with the help of Pulse generator.Pulse generator data should be in the terms of time...because it doesn't work in phase.So equivalent value of phase in terms of time need to be entered. </p>converter,firing angle,matlab simulation,power electronics,thyristor,power_conversion_control,power_electronics_control",9,0,1,0,10,thyristor different firing angle illustration thyristor demonstrate fire angle fire angle change help pulse generator pulse generator data term time work phase equivalent value phase term time need enter converterfiring anglematlab conversion controlpower electronics control,"['thyristor', 'different', 'firing', 'angle', 'illustration', 'thyristor', 'demonstrate', 'fire', 'angle', 'fire', 'angle', 'change', 'help', 'pulse', 'generator', 'pulse', 'generator', 'data', 'term', 'time', 'work', 'phase', 'equivalent', 'value', 'phase', 'term', 'time', 'need', 'enter', 'converterfiring', 'anglematlab', 'conversion', 'controlpower', 'electronics', 'control']",3
523,33061,"A basic introduction to power electronics devices and power system is illustrated here.<p>Various quantities related to the thyristor and power system is illustrated here.Some very  basic questions like how to change the firing angle of the thyristor, how to measure the voltage waveform..etc are answered here.Firing angle: THis is changed with the help of pulse generator. The input angle must be in the form of time i.e. not in omega*t. </p>control design,power electronics,power system,simulink,thyristor simulation in matlab,power_conversion_control,power_electronics_control",9,0,1,0,10,basic introduction power electronics device power illustrate various quantity relate thyristor power illustrate basic question like change fire angle thyristor measure voltage waveform etc answer fire angle change help pulse generator input angle must form time omega control designpower matlabpower conversion controlpower electronics control,"['basic', 'introduction', 'power', 'electronics', 'device', 'power', 'illustrate', 'various', 'quantity', 'relate', 'thyristor', 'power', 'illustrate', 'basic', 'question', 'like', 'change', 'fire', 'angle', 'thyristor', 'measure', 'voltage', 'waveform', 'etc', 'answer', 'fire', 'angle', 'change', 'help', 'pulse', 'generator', 'input', 'angle', 'must', 'form', 'time', 'omega', 'control', 'designpower', 'matlabpower', 'conversion', 'controlpower', 'electronics', 'control']",3
524,33074,"Modeling of Dc motor is demonstrated <p>Dc motor is simulation is needed to design a real time machine. Here the DC motor is simulated for a separately  excited machine.The data for the machine input is take from Electrical Drives, G.K. Dubey.Feel free in case of doubt...Email: <a href=""mailto:satendra.svnit@gmail.com"">satendra.svnit@gmail.com</a></p>dc motor,electric drives,power electronics,separately excited machine,simulink,dc motor,electric_motor_control,power_conversion_control,power_electronics_control",15,0,1,0,16,motor demonstrate motor need design real time machine motor separately excite machine data machine input take electrical drive dubey feel free case doubt email satendra svnit gmail comdc motorelectric drivespower excite motorelectric motor controlpower conversion controlpower electronics control,"['motor', 'demonstrate', 'motor', 'need', 'design', 'real', 'time', 'machine', 'motor', 'separately', 'excite', 'machine', 'data', 'machine', 'input', 'take', 'electrical', 'drive', 'dubey', 'feel', 'free', 'case', 'doubt', 'email', 'satendra', 'svnit', 'gmail', 'comdc', 'motorelectric', 'drivespower', 'excite', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
525,33100,"Modeling of Rectifier is demonstrated in Simulink <p>Modeling of Rectifier is demonstrated in Simulink. Rectifier is a device which convert the alternating quantity in DC quantity. The results can very on changing the nature of the load viz. RLC, RL, LC, LR etc... </p>matlab,modelling,power electronics,power system,rectifier,simulink,power_conversion_control,power_electronics_control,power electronics",11,0,1,0,8,rectifier demonstrate rectifier demonstrate rectifier device convert alternate quantity quantity result change nature load viz rlc etc conversion controlpower electronics controlpower electronics,"['rectifier', 'demonstrate', 'rectifier', 'demonstrate', 'rectifier', 'device', 'convert', 'alternate', 'quantity', 'quantity', 'result', 'change', 'nature', 'load', 'viz', 'rlc', 'etc', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",3
526,33106,"this model provides a dsb sc modulation and demodulation.<p>this model provides a dsb sc modulation and demodulation using a real input i.e.any audio signal.</p>communications,communications,communications",11,0,1,0,11,provide dsb modulation demodulation provide dsb modulation demodulation real input audio signal,"['provide', 'dsb', 'modulation', 'demodulation', 'provide', 'dsb', 'modulation', 'demodulation', 'real', 'input', 'audio', 'signal']",0
527,33110,"Three phase rectifier is modeled in Simulink.<p>This illustration show the modeling of 3-phase rectifier. Instead of rectifier, Thyristor can also be used for better control.For thyristor controlled converter visit my other submitted files.</p>converter,model,rectifier,simulink,simulink",12,0,1,0,16,three phase rectifier illustration show phase rectifier instead rectifier thyristor also good control thyristor control converter visit submit file,"['three', 'phase', 'rectifier', 'illustration', 'show', 'phase', 'rectifier', 'instead', 'rectifier', 'thyristor', 'also', 'good', 'control', 'thyristor', 'control', 'converter', 'visit', 'submit', 'file']",3
528,33145,Programa que mediante la funcion de transferencia  Jose Luis Sanchez<p>Programa que mediante la funcion de transferencia </p>control design,11,0,1,0,11,programa que mediante funcion transferencia jose luis sanchezprograma que mediante funcion transferencia control design,"['programa', 'que', 'mediante', 'funcion', 'transferencia', 'jose', 'luis', 'sanchezprograma', 'que', 'mediante', 'funcion', 'transferencia', 'control', 'design']",8
529,33189,it is used mostly in railways<p>reactive power compensation using active impedance concept.it is used mostly in railways.</p>simulation,40,0,1,0,50,mostly power compensation active impedance concept mostly railway,"['mostly', 'power', 'compensation', 'active', 'impedance', 'concept', 'mostly', 'railway']",8
530,33232,"Impulse generator in demonstrated <p>Simulation of Impulse generator in Matlab is demonstrated. </p>impulse generator,matlab,power system,simpowersys,simulink",15,0,1,0,14,impulse generator demonstrate impulse generator demonstrate impulse,"['impulse', 'generator', 'demonstrate', 'impulse', 'generator', 'demonstrate', 'impulse']",4
531,33233,"Supply through three wire to a balance load is demonstrated <p>Supply through three wire to a balance load is demonstrated.  </p>matlab,power system,simpowersystem,simulink,transmission",12,0,1,0,14,supply three wire balance load demonstrate supply three wire balance load demonstrate matlabpower,"['supply', 'three', 'wire', 'balance', 'load', 'demonstrate', 'supply', 'three', 'wire', 'balance', 'load', 'demonstrate', 'matlabpower']",4
532,33234,"Transmission through three phase three wire to an unbalanced load is Demonstrated <p>Transmission through three phase three wire to an unbalanced load is Demonstrated </p>fault,power system,simulink,sympowersystem,three phase three wire unbalanced supply,transmission lines,unbalanced",15,0,1,0,16,transmission three phase three wire unbalance load demonstrate transmission three phase three wire unbalance load demonstrate faultpower phase three wire unbalance linesunbalanced,"['transmission', 'three', 'phase', 'three', 'wire', 'unbalance', 'load', 'demonstrate', 'transmission', 'three', 'phase', 'three', 'wire', 'unbalance', 'load', 'demonstrate', 'faultpower', 'phase', 'three', 'wire', 'unbalance', 'linesunbalanced']",3
533,33235,"Three phase - Three wire supply Transmission lines under Unbalanced Load (Delta), is demonstrated. <p>Three phase - Three wire supply Transmission lines under Unbalanced Load (Delta), is demonstrated. </p>faults,matlab,power system,simulink,three phase three wire unbalanced supply,transmission lines,three phase three wire unbalanced supply",18,0,1,0,24,three phase three wire supply transmission line unbalance load delta demonstrate three phase three wire supply transmission line unbalance load delta demonstrate phase three wire unbalance linesthree phase three wire unbalance supply,"['three', 'phase', 'three', 'wire', 'supply', 'transmission', 'line', 'unbalance', 'load', 'delta', 'demonstrate', 'three', 'phase', 'three', 'wire', 'supply', 'transmission', 'line', 'unbalance', 'load', 'delta', 'demonstrate', 'phase', 'three', 'wire', 'unbalance', 'linesthree', 'phase', 'three', 'wire', 'unbalance', 'supply']",3
534,33236,"After fault restriking voltage of Circuit breaker is demonstrated <p>After fault restriking voltage of Circuit breaker is demonstrated </p>circuit breaker,power system,restriking voltage,simulink,sympowersystem,restriking voltage",8,0,1,0,10,fault restriking voltage circuit breaker demonstrate fault restriking voltage circuit breaker demonstrate circuit breakerpower voltage,"['fault', 'restriking', 'voltage', 'circuit', 'breaker', 'demonstrate', 'fault', 'restriking', 'voltage', 'circuit', 'breaker', 'demonstrate', 'circuit', 'breakerpower', 'voltage']",4
535,33237,"Model: Four wire Balanced Transmission line<p>Model: Four wire Balanced Transmission line</p>balanced supply,syspowersystem,transmission line",13,0,1,0,15,four wire balance transmission linemodel four wire balance transmission linebalanced line,"['four', 'wire', 'balance', 'transmission', 'linemodel', 'four', 'wire', 'balance', 'transmission', 'linebalanced', 'line']",5
536,33238,"Model of ""Four wire unbalanced Transmission line""<p>Model of ""Four wire unbalanced Transmission line""</p>four wire unbalanced transmission line,matlab,power system,sympowersystem",16,0,1,0,17,four wire unbalanced transmission line four wire unbalanced transmission line four wire unbalanced transmission linematlabpower,"['four', 'wire', 'unbalanced', 'transmission', 'line', 'four', 'wire', 'unbalanced', 'transmission', 'line', 'four', 'wire', 'unbalanced', 'transmission', 'linematlabpower']",5
537,33253,"pushâpull converter<p>When Q1 is turned on,Vs appears across one-half of the primary.When Q2 is turned on,Vs is applied across the oyher half of the transformer.The voltage of a primary winding swings from -Vs to Vs. </p>dc converter,dc dc converter,dc power supply,inverter,push pull converter,pushpull converter,rectifier,simulation,simulink",27,0,1,0,35,pushpull converterwhen turn onvs appear across one half primary turn onvs applied across oyher half transformer voltage primary winding swing converterdc converterdc power pull,"['pushpull', 'converterwhen', 'turn', 'onvs', 'appear', 'across', 'one', 'half', 'primary', 'turn', 'onvs', 'applied', 'across', 'oyher', 'half', 'transformer', 'voltage', 'primary', 'winding', 'swing', 'converterdc', 'converterdc', 'power', 'pull']",8
538,33270,"Numerical solution for obtaining correct root of an equation<p>This is a newton raphson algorithm implemented in simulink. Based on the initial guess it calculates the accurate solution in that time step itself. The user can enter the function of his choice, but has to calculate the derivative manually. Not the best implementation ... working on it...</p>newtonraphson,mathematics,mathematics",15,1,2,0,18,numerical solution obtain correct root equationthis newton raphson algorithm implement base initial guess calculates accurate solution time step user enter function choice calculate derivative manually best implementation work,"['numerical', 'solution', 'obtain', 'correct', 'root', 'equationthis', 'newton', 'raphson', 'algorithm', 'implement', 'base', 'initial', 'guess', 'calculates', 'accurate', 'solution', 'time', 'step', 'user', 'enter', 'function', 'choice', 'calculate', 'derivative', 'manually', 'best', 'implementation', 'work']",0
539,33279,"Two stage circuit breaker breaks the circuit in two stage, therefore optimising the passive elements<p>In two stage circuit breaking, the energy stored in the circuit is dissipated in two stages. This results in low voltage fluctuation, whereas in single stage circuit breakers it is not possible to limit overvoltage less then 3.5 p.u. unless we increase the capacitance value. So, two stage thyristor circuit breaker absorbs all the inductive energy in two stages which thereby  the commutation capacitorcapacitance value is less, and voltage fluctuation is also reduces.</p>measurement,simulation",34,1,1,0,34,two stage circuit breaker break circuit two stage therefore optimise passive elementsin two stage circuit break energy store circuit dissipate two stage result low voltage fluctuation whereas single stage circuit breaker possible limit overvoltage less unless increase capacitance value two stage thyristor circuit breaker absorb inductive energy two stage thereby commutation value less voltage fluctuation also reduces,"['two', 'stage', 'circuit', 'breaker', 'break', 'circuit', 'two', 'stage', 'therefore', 'optimise', 'passive', 'elementsin', 'two', 'stage', 'circuit', 'break', 'energy', 'store', 'circuit', 'dissipate', 'two', 'stage', 'result', 'low', 'voltage', 'fluctuation', 'whereas', 'single', 'stage', 'circuit', 'breaker', 'possible', 'limit', 'overvoltage', 'less', 'unless', 'increase', 'capacitance', 'value', 'two', 'stage', 'thyristor', 'circuit', 'breaker', 'absorb', 'inductive', 'energy', 'two', 'stage', 'thereby', 'commutation', 'value', 'less', 'voltage', 'fluctuation', 'also', 'reduces']",4
540,33309,"Demonstration of a Fuel Cell Vehicle (FCV) power train using SimPowerSystems and SimDriveline.<p>The demonstration shows different operating modes of the FCV over one complete cycle: accelerating, cruising, recharging the battery while accelerating and regenerative braking.The FCV Electrical Subsystem is composed of four parts: The electrical motor, the battery, the fuel cell and the DC/DC converter.The FCV Vehicle Dynamics Subsystem models all the mechanical parts of the vehicle.The Energy Management Subsystem (EMS) determines the reference signals for the electric motor drives, the fuel cell system and the DC/DC converter in order to distribute accurately the power from the two electrical sources. These signals are calculated using mainly the position of the accelerator, which is between -100% and 100%, and the measured FCV speed.This demonstration was previously available in SimPowerSystems Version 5.4 (R2011a). The authors of this work are: Olivier Tremblay, Souleman Njoya Motapon, Louis-A. Dessaint (Ecole de Technologie Superieure, Montreal).</p>automotive,electric car,energy managment subsystem,fuel cell,automotive,automotiveelectric carenergy managment subsystemfuel cell,electric car,energy managment subsystem,fuel cell,physical modeling,automotive,electric car,energy managment subsystem,fuel cell,fuel cell,physical modeling,fuel cell,battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,fuel cell",330,25,5,0,381,demonstration fuel cell vehicle fcv power train simpowersystems simdriveline demonstration show different operate mode fcv one complete cycle accelerate cruise recharge battery accelerate regenerative braking fcv electrical subsystem compose four part electrical motor battery fuel cell converter fcv vehicle dynamic subsystem mechanical part vehicle energy management subsystem ems determines reference signal electric motor drive fuel cell converter order distribute accurately power two electrical source signal calculate mainly position accelerator measure fcv speed demonstration previously available simpowersystems version author work olivier tremblay souleman njoya motapon louis dessaint ecole technologie superieure montreal carenergy managment subsystemfuel carenergy managment subsystemfuel cellelectric carenergy managment subsystemfuel cellphysical carenergy managment subsystemfuel cellfuel cellphysical modelingfuel cellbattery motor controlpower conversion controlpower electronics controlfuel cell,"['demonstration', 'fuel', 'cell', 'vehicle', 'fcv', 'power', 'train', 'simpowersystems', 'simdriveline', 'demonstration', 'show', 'different', 'operate', 'mode', 'fcv', 'one', 'complete', 'cycle', 'accelerate', 'cruise', 'recharge', 'battery', 'accelerate', 'regenerative', 'braking', 'fcv', 'electrical', 'subsystem', 'compose', 'four', 'part', 'electrical', 'motor', 'battery', 'fuel', 'cell', 'converter', 'fcv', 'vehicle', 'dynamic', 'subsystem', 'mechanical', 'part', 'vehicle', 'energy', 'management', 'subsystem', 'ems', 'determines', 'reference', 'signal', 'electric', 'motor', 'drive', 'fuel', 'cell', 'converter', 'order', 'distribute', 'accurately', 'power', 'two', 'electrical', 'source', 'signal', 'calculate', 'mainly', 'position', 'accelerator', 'measure', 'fcv', 'speed', 'demonstration', 'previously', 'available', 'simpowersystems', 'version', 'author', 'work', 'olivier', 'tremblay', 'souleman', 'njoya', 'motapon', 'louis', 'dessaint', 'ecole', 'technologie', 'superieure', 'montreal', 'carenergy', 'managment', 'subsystemfuel', 'carenergy', 'managment', 'subsystemfuel', 'cellelectric', 'carenergy', 'managment', 'subsystemfuel', 'cellphysical', 'carenergy', 'managment', 'subsystemfuel', 'cellfuel', 'cellphysical', 'modelingfuel', 'cellbattery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlfuel', 'cell']",4
541,33310,"Demonstration of a hybrid electric vehicle (HEV) power train using SimPowerSystems and SimDriveline<p>The demonstration shows different operating modes of the HEV over one complete cycle: accelerating, cruising, recharging the battery while accelerating and regenerative braking.The Electrical Subsystem is composed of four parts: The electrical motor, the generator, the battery, and the DC/DC converter.The Planetary Gear Subsystem models the power split device. It uses a planetary device, which transmits the mechanical motive force from the engine, the motor and the generator by allocating and combining them.The Internal Combustion Engine subsystem models a 57 kW @ 6000 rpm gasoline fuel engine with speed governor.The Vehicle Dynamics subsystem models all the mechanical parts of the vehicle.The Energy Management Subsystem (EMS) determines the reference signals for the electric motor drive, the electric generator drive and the internal combustion engine in order to distribute accurately the power from these three sources.This demonstration was previously available in SimPowerSystems Version 5.4 (R2011a). The authors of this work are Olivier Tremblay, Louis-A. Dessaint (Ecole de Technologie Superieure).</p>automotive,energy management subsystem,hybrid electric vehicle,automotiveenergy management subsystemhybrid electric vehiclephys,physical modeling,energy management subsystem,hybrid electric vehicle,hybrid electric vehicle,battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,automotive,33",841,54,6,0,1018,demonstration hybrid electric vehicle hev power train simpowersystems simdrivelinethe demonstration show different operate mode hev one complete cycle accelerate cruise recharge battery accelerate regenerative brake electrical subsystem compose four part electrical motor generator battery converter planetary gear subsystem power split device planetary device transmits mechanical motive force engine motor generator allocate combine internal combustion engine subsystem rpm gasoline fuel engine speed governor vehicle dynamic subsystem mechanical part vehicle energy management subsystem ems determines reference signal electric motor drive electric generator drive internal combustion engine order distribute accurately power three source demonstration previously available simpowersystems version author work olivier tremblay louis dessaint ecole technologie superieure management subsystemhybrid electric management subsystemhybrid electric modelingenergy management subsystemhybrid electric vehiclehybrid electric vehiclebattery motor controlpower conversion controlpower electronics,"['demonstration', 'hybrid', 'electric', 'vehicle', 'hev', 'power', 'train', 'simpowersystems', 'simdrivelinethe', 'demonstration', 'show', 'different', 'operate', 'mode', 'hev', 'one', 'complete', 'cycle', 'accelerate', 'cruise', 'recharge', 'battery', 'accelerate', 'regenerative', 'brake', 'electrical', 'subsystem', 'compose', 'four', 'part', 'electrical', 'motor', 'generator', 'battery', 'converter', 'planetary', 'gear', 'subsystem', 'power', 'split', 'device', 'planetary', 'device', 'transmits', 'mechanical', 'motive', 'force', 'engine', 'motor', 'generator', 'allocate', 'combine', 'internal', 'combustion', 'engine', 'subsystem', 'rpm', 'gasoline', 'fuel', 'engine', 'speed', 'governor', 'vehicle', 'dynamic', 'subsystem', 'mechanical', 'part', 'vehicle', 'energy', 'management', 'subsystem', 'ems', 'determines', 'reference', 'signal', 'electric', 'motor', 'drive', 'electric', 'generator', 'drive', 'internal', 'combustion', 'engine', 'order', 'distribute', 'accurately', 'power', 'three', 'source', 'demonstration', 'previously', 'available', 'simpowersystems', 'version', 'author', 'work', 'olivier', 'tremblay', 'louis', 'dessaint', 'ecole', 'technologie', 'superieure', 'management', 'subsystemhybrid', 'electric', 'management', 'subsystemhybrid', 'electric', 'modelingenergy', 'management', 'subsystemhybrid', 'electric', 'vehiclehybrid', 'electric', 'vehiclebattery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",4
542,33315,"Model-based design approach for complex electric vehicles<p>This demonstration shows how the simulation could help the system designer in decision making. The simulation is a very complex art. It can represent simple model with precision which can be arguable whereas complex models can be represented with accurate precision, very close to reality. The developer of models must always make a compromise between the complexity of the models and the required precision. Of course, it is always preferable to have an ultra-accurate model, but the parameters required by these models are usually difficult to determine, especially during the first phases of system development.This demonstration is described in details in the SimPowerSystems User Guide. The files was previously available in Version Version 5.4 (R2011a). The authors of this work are Olivier Tremblay, Louis-A. Dessaint (Ecole de Technologie Superieure).</p>automotive,energy management system,hybrid electric vehicle,modelbased design,physical modeling,ev",275,17,4,0,338,base design approach complex electric vehiclesthis demonstration show could help designer decision make complex art represent simple precision arguable whereas complex represent accurate precision close reality developer must always make compromise complexity require precision course always preferable ultra accurate parameter require usually difficult determine especially first phase development demonstration describe detail simpowersystems user guide file previously available version version author work olivier tremblay louis dessaint ecole technologie superieure management systemhybrid electric designphysical modelingev,"['base', 'design', 'approach', 'complex', 'electric', 'vehiclesthis', 'demonstration', 'show', 'could', 'help', 'designer', 'decision', 'make', 'complex', 'art', 'represent', 'simple', 'precision', 'arguable', 'whereas', 'complex', 'represent', 'accurate', 'precision', 'close', 'reality', 'developer', 'must', 'always', 'make', 'compromise', 'complexity', 'require', 'precision', 'course', 'always', 'preferable', 'ultra', 'accurate', 'parameter', 'require', 'usually', 'difficult', 'determine', 'especially', 'first', 'phase', 'development', 'demonstration', 'describe', 'detail', 'simpowersystems', 'user', 'guide', 'file', 'previously', 'available', 'version', 'version', 'author', 'work', 'olivier', 'tremblay', 'louis', 'dessaint', 'ecole', 'technologie', 'superieure', 'management', 'systemhybrid', 'electric', 'designphysical', 'modelingev']",5
543,33375,"Simscape model of a on-line tap changing (OLTC) regulating transformer in SimPowerSystems.<p>This demo illustrates use of both SimPowerSystems and Simscape to model a On-Load Tap Changing (OLTC) 120/25 kV transformer regulating voltage on a three-phase 25-kV distribution network.The demo is similar to the power_OLTCregtransformer demo of SimPowerSystems. However, instead of using Multi-Winding Transformer and Breaker blocks to perform tap selection, the OLTC regulating transformer provided in this model exploits Simscape flexibility to model a variable ratio transformer, thus avoiding use of switches. With this new model you can easily change the number of taps.The model is connected to the SimPowerSystems network through Simscape Interface Elements blocks of powerlib library.Author: Gilbert Sybille, Hydro-QuÃ©bec (IREQ)</p>oltc,regulating transformer,simscape simpowersystems interface element,tap changer,physical modeling",116,6,4,0,128,simscape line tap change oltc regulate transformer simpowersystems demo illustrate simpowersystems simscape load tap change oltc transformer regulating voltage three phase distribution network demo similar power demo simpowersystems however instead multi wind transformer breaker block perform tap selection oltc regulate transformer provide exploit simscape flexibility variable ratio transformer thus avoid switch new easily change number tap connect simpowersystems network simscape interface element block powerlib author gilbert sybille hydro quÃ©bec ireq oltcregulating simpowersystems interface elementtap changerphysical modeling,"['simscape', 'line', 'tap', 'change', 'oltc', 'regulate', 'transformer', 'simpowersystems', 'demo', 'illustrate', 'simpowersystems', 'simscape', 'load', 'tap', 'change', 'oltc', 'transformer', 'regulating', 'voltage', 'three', 'phase', 'distribution', 'network', 'demo', 'similar', 'power', 'demo', 'simpowersystems', 'however', 'instead', 'multi', 'wind', 'transformer', 'breaker', 'block', 'perform', 'tap', 'selection', 'oltc', 'regulate', 'transformer', 'provide', 'exploit', 'simscape', 'flexibility', 'variable', 'ratio', 'transformer', 'thus', 'avoid', 'switch', 'new', 'easily', 'change', 'number', 'tap', 'connect', 'simpowersystems', 'network', 'simscape', 'interface', 'element', 'block', 'powerlib', 'author', 'gilbert', 'sybille', 'hydro', 'quÃ©bec', 'ireq', 'oltcregulating', 'simpowersystems', 'interface', 'elementtap', 'changerphysical', 'modeling']",0
544,33439,"This is a complete simulink model of a three phase induction motor.<p>This model depicts all the aspects of a three phase induction motor starting from input three phases up to the electromagnetically generated torque and speed.</p>starting of motor,dq model,induction motor,torque,electric_motor_control,power_electronics_control,simulation",109,4,2,0,135,complete three phase induction motor depicts aspects three phase induction motor start input three phase generate torque speed start motordq modelinduction motor controlpower electronics,"['complete', 'three', 'phase', 'induction', 'motor', 'depicts', 'aspects', 'three', 'phase', 'induction', 'motor', 'start', 'input', 'three', 'phase', 'generate', 'torque', 'speed', 'start', 'motordq', 'modelinduction', 'motor', 'controlpower', 'electronics']",1
545,33531,"Simulink Design Verifier finds a force control profile to stamp a component onto a circuit board.<p>When mounting a component onto a circuit board, the component must be held against the board with a low acceleration for a specific duration. To satisfy this requirement, an appropriate control force profile must be determined.The stamping operation comprises three modes: (i) the movement of the component toward the board, (ii) the holding against the board, and (iii) the release of the component.In the holding mode, the numerical simulation must handle the large reaction force that is exerted by the board. This results in a time constant much faster than in the two other modes. So, the system is considered numerically stiff.A variable step solver that is necessary to efficiently handle stiff behavior is explicitly modeled. Because the solver model is discrete, Simulink Design Verifier can be applied to the problem of finding a required control force profile.Details about the theoretical background can be found in the article ""A Computational Model of Time for Stiff Hybrid Systems Applied to Control Synthesis"" by P.J. Mosterman, J. Zander, G. Hamon, and B. Denckla as published in the August 2011 issue of the IFAC journal Control Engineering Practice.</p>control design,control synthesis,hybrid systems,manufacturing,model checking,modeling,numerical integration,simulation",825,88,6,0,725,design verifier find force control profile stamp component onto circuit board mount component onto circuit board component must hold board low acceleration specific duration satisfy requirement appropriate control force profile must determine stamp operation comprises three mode movement component toward board hold board release component hold mode numerical must handle large reaction force exert board result time constant much fast two mode consider numerically stiff variable step solver necessary efficiently handle stiff behavior explicitly solver discrete design verifier apply problem find require control force profile detail theoretical background find article computational time stiff hybrid apply control synthesis mosterman zander hamon denckla publish august issue ifac journal control engineering practice control designcontrol synthesishybrid,"['design', 'verifier', 'find', 'force', 'control', 'profile', 'stamp', 'component', 'onto', 'circuit', 'board', 'mount', 'component', 'onto', 'circuit', 'board', 'component', 'must', 'hold', 'board', 'low', 'acceleration', 'specific', 'duration', 'satisfy', 'requirement', 'appropriate', 'control', 'force', 'profile', 'must', 'determine', 'stamp', 'operation', 'comprises', 'three', 'mode', 'movement', 'component', 'toward', 'board', 'hold', 'board', 'release', 'component', 'hold', 'mode', 'numerical', 'must', 'handle', 'large', 'reaction', 'force', 'exert', 'board', 'result', 'time', 'constant', 'much', 'fast', 'two', 'mode', 'consider', 'numerically', 'stiff', 'variable', 'step', 'solver', 'necessary', 'efficiently', 'handle', 'stiff', 'behavior', 'explicitly', 'solver', 'discrete', 'design', 'verifier', 'apply', 'problem', 'find', 'require', 'control', 'force', 'profile', 'detail', 'theoretical', 'background', 'find', 'article', 'computational', 'time', 'stiff', 'hybrid', 'apply', 'control', 'synthesis', 'mosterman', 'zander', 'hamon', 'denckla', 'publish', 'august', 'issue', 'ifac', 'journal', 'control', 'engineering', 'practice', 'control', 'designcontrol', 'synthesishybrid']",5
546,33580,"Displays video from USB camera connected to target PC.<p>This is a simple model that allows you to display video from a USB camera connected to the target PC.</p>real time,usb camera,video,xpc target",8,0,1,0,5,display video usb camera connect target simple allow display video usb camera connect target real timeusb cameravideoxpc target,"['display', 'video', 'usb', 'camera', 'connect', 'target', 'simple', 'allow', 'display', 'video', 'usb', 'camera', 'connect', 'target', 'real', 'timeusb', 'cameravideoxpc', 'target']",0
547,33612,MATLAB EXPO 2011 Signal Processing Workflow Demo Files<p>EXPO 2011è¬æ¼ãå·ä½ä¾ã§å­¦ã¶ä¿¡å·å¦çã¯ã¼ã¯ãã­ã¼ï½ããã«ä½¿ãããã¯ããã¯ï¼å®è·µç·¨ï½ãã®ãã¢ãã¡ã¤ã«ä¸å¼ã§ãã</p>expo 2011 signal processing workflow asio spectrum filter fft,216,13,3,0,218,expo signal processing workflow demo filesexpo signal processing workflow asio spectrum filter fft,"['expo', 'signal', 'processing', 'workflow', 'demo', 'filesexpo', 'signal', 'processing', 'workflow', 'asio', 'spectrum', 'filter', 'fft']",5
548,33657,"Simulink Model of Adaptive Equalizer http://adaptivefilterapplications.blogspot.com<p>You can refer my Blog <a href=""http://adaptivefilterapplications.blogspot.com"">http://adaptivefilterapplications.blogspot.com</a> for more information. In this model we have shown how adaptive filter can perform and correct up the channel effect on signal. This model is showing how filter is adapting itself to channel at each iteration. You can see different scopes displayed on model screen like adaptive filter weights, scatter plots for message symbols, frequency response of filter.. It shows you the results: how gradually filter is changing its weights according to channel. More to that, It is very useful for analysis and study. If you want to make any particular application you can make an analysis like,, which algorithm, what should be the value of step size and so on.. Thank you all.. ans your valuable suggestions are always welcomed... Keep posting!!</p>adaptive channel equalization,adaptive channel equalizer,adaptive equalizer,adaptive filter,adaptive signal processing,channel equalizer,lms algorithm,signal processing,simulation,simulink,adaptive channel equalizer,adaptive equalizer,adaptive channel equalization,please send the coding and details of channel equalization using",21,1,2,0,21,adaptive equalizer http blogspot comyou refer blog http blogspot com information show adaptive filter perform correct channel effect signal showing filter adapt channel iteration see different scope display screen like adaptive filter weight scatter plots message symbol frequency response filter show result gradually filter change weight accord channel useful analysis study want make particular application make analysis like algorithm value step size thank valuable suggestion always welcome keep posting adaptive channel channel filteradaptive signal equalizerlms algorithmsignal channel channel send cod detail channel equalization,"['adaptive', 'equalizer', 'http', 'blogspot', 'comyou', 'refer', 'blog', 'http', 'blogspot', 'com', 'information', 'show', 'adaptive', 'filter', 'perform', 'correct', 'channel', 'effect', 'signal', 'showing', 'filter', 'adapt', 'channel', 'iteration', 'see', 'different', 'scope', 'display', 'screen', 'like', 'adaptive', 'filter', 'weight', 'scatter', 'plots', 'message', 'symbol', 'frequency', 'response', 'filter', 'show', 'result', 'gradually', 'filter', 'change', 'weight', 'accord', 'channel', 'useful', 'analysis', 'study', 'want', 'make', 'particular', 'application', 'make', 'analysis', 'like', 'algorithm', 'value', 'step', 'size', 'thank', 'valuable', 'suggestion', 'always', 'welcome', 'keep', 'posting', 'adaptive', 'channel', 'channel', 'filteradaptive', 'signal', 'equalizerlms', 'algorithmsignal', 'channel', 'channel', 'send', 'cod', 'detail', 'channel', 'equalization']",0
549,33662,"Simulation of Matsuoka oscillator using Simulink.<p>Please refer to these papers:Xu, W.; Fang, F. C.; Bronlund, J. &amp; Potgieter, J. Generation of rhythmic and voluntary patterns of mastication using Matsuoka oscillator for a humanoid chewing robot Mechatronics, 2009, 19, 205 - 217Liu, G.; Habib, M.; Watanabe, K. &amp; Izumi, K. Central pattern generators based on Matsuoka oscillators for the locomotion of biped robots Artificial Life and Robotics, Springer Japan, 2008, 12, 264-269</p>matsuoka,oscillator,simulation,simulink",38,2,2,0,42,matsuoka oscillator please refer paper fang bronlund amp potgieter generation rhythmic voluntary pattern mastication matsuoka oscillator humanoid chew robot mechatronics liu habib watanabe amp izumi central pattern generator base matsuoka oscillator locomotion biped robot artificial life robotics springer japan,"['matsuoka', 'oscillator', 'please', 'refer', 'paper', 'fang', 'bronlund', 'amp', 'potgieter', 'generation', 'rhythmic', 'voluntary', 'pattern', 'mastication', 'matsuoka', 'oscillator', 'humanoid', 'chew', 'robot', 'mechatronics', 'liu', 'habib', 'watanabe', 'amp', 'izumi', 'central', 'pattern', 'generator', 'base', 'matsuoka', 'oscillator', 'locomotion', 'biped', 'robot', 'artificial', 'life', 'robotics', 'springer', 'japan']",8
550,33727,"Generating Sine PWM.Triangular wave generator is not used from library browser<p>Instead of Triangular wave generator from Library browser Embedded Matlab func (user defined) is used. Make sure that tha amplitude of sine and triangle wave are equal.and also the freq of triangular is not less than twice the freq of sine wave.(remember sampling theorem?) And to increase the simulation speed decrease the sampling time value in unit delay block.</p>sine pwm,communications,demo,embedded code,pwm,signal processing,simulation,sine,sine pwm,triangle wave,waveform generator,electric_motor_control,power_conversion_control,power_electronics_control",19,1,2,0,23,generate sine pwm triangular wave generator browserinstead triangular wave generator browser embed func user define make sure tha amplitude sine triangle wave equal also freq triangular less twice freq sine wave remember sample theorem increase speed decrease sample time value unit delay block sine codepwmsignal pwmtriangle wavewaveform motor controlpower conversion controlpower electronics control,"['generate', 'sine', 'pwm', 'triangular', 'wave', 'generator', 'browserinstead', 'triangular', 'wave', 'generator', 'browser', 'embed', 'func', 'user', 'define', 'make', 'sure', 'tha', 'amplitude', 'sine', 'triangle', 'wave', 'equal', 'also', 'freq', 'triangular', 'less', 'twice', 'freq', 'sine', 'wave', 'remember', 'sample', 'theorem', 'increase', 'speed', 'decrease', 'sample', 'time', 'value', 'unit', 'delay', 'block', 'sine', 'codepwmsignal', 'pwmtriangle', 'wavewaveform', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
551,33738,"It generates 31 level output of 230V, 50Hz<p>Four half H bridges are used with four (binary logic) distributed DC sources (1:2:4:8). Level shift sinusoidal modulation scheme used to obtain the desired level and output voltage. The model can be used for the applications like drives, inverter etc</p>simulation,simulink,power_conversion_control,power_electronics_control",437,31,3,0,701,generates level output hzfour half bridge four binary logic distribute source level shift sinusoidal modulation scheme obtain desired level output voltage application like drive inverter conversion controlpower electronics control,"['generates', 'level', 'output', 'hzfour', 'half', 'bridge', 'four', 'binary', 'logic', 'distribute', 'source', 'level', 'shift', 'sinusoidal', 'modulation', 'scheme', 'obtain', 'desired', 'level', 'output', 'voltage', 'application', 'like', 'drive', 'inverter', 'conversion', 'controlpower', 'electronics', 'control']",1
552,33740,"It gives three phase output voltage of 27Levels with single DC input.<p>It gives three phase output voltage of 27Levels. Usually mulitlevel inverter needs more number of DC source. But here the single DC source used with multi winding transformer. The level shift multicarrier PWM allows to obtain the desired number of voltage and frequency.The model can be used for the applications like drives, inverter etc.,</p>simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control",3590,92,4,0,5330,give three phase output voltage level single input give three phase output voltage level usually mulitlevel inverter need number source single source multi wind transformer level shift multicarrier pwm allows obtain desired number voltage frequency application like drive inverter etc motor controlpower conversion controlpower electronics control,"['give', 'three', 'phase', 'output', 'voltage', 'level', 'single', 'input', 'give', 'three', 'phase', 'output', 'voltage', 'level', 'usually', 'mulitlevel', 'inverter', 'need', 'number', 'source', 'single', 'source', 'multi', 'wind', 'transformer', 'level', 'shift', 'multicarrier', 'pwm', 'allows', 'obtain', 'desired', 'number', 'voltage', 'frequency', 'application', 'like', 'drive', 'inverter', 'etc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
553,33741,"It gives three phase output voltage of 27Levels with single DC source and a buck boost converter.<p>It gives three phase output voltage of 27Levels with single dc input. A buck boost converter is used to regulate the dc source.  The level shift multicarrier PWM allows to obtain the desired number of voltage and frequency.The model can be used for the applications like drives, inverter etc.,</p>simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control",3563,92,4,0,5185,give three phase output voltage level single source buck boost converter give three phase output voltage level single input buck boost converter regulate source level shift multicarrier pwm allows obtain desired number voltage frequency application like drive inverter etc motor controlpower conversion controlpower electronics control,"['give', 'three', 'phase', 'output', 'voltage', 'level', 'single', 'source', 'buck', 'boost', 'converter', 'give', 'three', 'phase', 'output', 'voltage', 'level', 'single', 'input', 'buck', 'boost', 'converter', 'regulate', 'source', 'level', 'shift', 'multicarrier', 'pwm', 'allows', 'obtain', 'desired', 'number', 'voltage', 'frequency', 'application', 'like', 'drive', 'inverter', 'etc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
554,33750,"a.Construct a SIMULINK block diagram to obtain the response of the frequency deviation, mechanical <p>Task for the primary projectThe data for a three area system is tabulated in the following table. The base MVA is 1000MVA.PsijÏtÏgRHDAreai â j1.9180.50.20.0550.611 â 21.7200.60.30.062540.922 â 31.8610.40.250.0860.833 â 1        The Three units are operating in parallel at the nominal frequency of 60Hz. A load change of 200MW (0.2pu) occurs at area 2.a.Construct a SIMULINK block diagram to obtain the response of the frequency deviation, mechanical power deviation, and tie line power deviation responses for the two types of control; the primary LFC control, and the tie line bias control (ACE).b.Comment on your results.sana' adel YU / hijjawi </p>control design,simulation",43,0,1,0,59,construct block diagram obtain response frequency deviation mechanical task primary projectthe data three area tabulate follow table base mva mva three unit operate parallel nominal frequency load change occur area construct block diagram obtain response frequency deviation mechanical power deviation tie line power deviation response two type control primary lfc control tie line bias control ace comment result sana adel hijjawi control,"['construct', 'block', 'diagram', 'obtain', 'response', 'frequency', 'deviation', 'mechanical', 'task', 'primary', 'projectthe', 'data', 'three', 'area', 'tabulate', 'follow', 'table', 'base', 'mva', 'mva', 'three', 'unit', 'operate', 'parallel', 'nominal', 'frequency', 'load', 'change', 'occur', 'area', 'construct', 'block', 'diagram', 'obtain', 'response', 'frequency', 'deviation', 'mechanical', 'power', 'deviation', 'tie', 'line', 'power', 'deviation', 'response', 'two', 'type', 'control', 'primary', 'lfc', 'control', 'tie', 'line', 'bias', 'control', 'ace', 'comment', 'result', 'sana', 'adel', 'hijjawi', 'control']",4
555,33911,"Generation of various waveforms without using Simulink Library blocks.<p>In this block generation of Sawtooth,Square wave,Triangular wave,Flipped sawtooth wave,and Sine PWM is done using embedded block(user defined) and without using any blocks from Simulink Library.For better understanding of the code,read the comments in the embedded block.Anyone can make use of this as a library file and can use it for various simulation. Varying the amplitude and frequency of the all waveforms becomes simpler.They can also be varied for a specific waveform.</p>pwm,sawtooth,triangular,embedded,signal processing,simulation,sine pwm,user defined,wave,waveform generator,waveforms,electric_motor_control,power_conversion_control,power_electronics_control,triangular",50,4,3,0,53,generation various waveform without block block generation sawtoothsquare wavetriangular waveflipped sawtooth waveand sine pwm embedded block user define without block well understand coderead comment embed block anyone make file various vary amplitude frequency waveform become simpler also vary specific waveform pwmuser motor controlpower conversion controlpower electronics,"['generation', 'various', 'waveform', 'without', 'block', 'block', 'generation', 'sawtoothsquare', 'wavetriangular', 'waveflipped', 'sawtooth', 'waveand', 'sine', 'pwm', 'embedded', 'block', 'user', 'define', 'without', 'block', 'well', 'understand', 'coderead', 'comment', 'embed', 'block', 'anyone', 'make', 'file', 'various', 'vary', 'amplitude', 'frequency', 'waveform', 'become', 'simpler', 'also', 'vary', 'specific', 'waveform', 'pwmuser', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",4
556,33914,"0.61 DUTY CYCLE100KHZ FREQ<p>0.61 DUTY CYCLE100KHZ FREQ</p>converter,power_conversion_control,power_electronics_control",12,0,1,0,13,duty cycle khz freq duty cycle khz conversion controlpower electronics control,"['duty', 'cycle', 'khz', 'freq', 'duty', 'cycle', 'khz', 'conversion', 'controlpower', 'electronics', 'control']",1
557,33952,"Active Power , Reactive Power & Power Factor in Three Phase System can be measured by this simulink<p>Active Power , Reactive Power &amp; Power Factor in Three Phase System can be measured by this simulink model.Connect Vabc and Iabc to the first block and enjoy!</p>power factor,measurement,power,power electronics,measurement,power,power electronics,power factor,simulation,simulink,measurement,power,power electronics,power factor,simulation,simulink,measurement,power,power,power electronics,power factor",16,1,2,0,12,active power reactive power power factor three phase measure power reactive power amp power factor three phase measure connect vabc iabc first block enjoy power factor,"['active', 'power', 'reactive', 'power', 'power', 'factor', 'three', 'phase', 'measure', 'power', 'reactive', 'power', 'amp', 'power', 'factor', 'three', 'phase', 'measure', 'connect', 'vabc', 'iabc', 'first', 'block', 'enjoy', 'power', 'factor']",3
558,33960,"the simulation converts the low level dc voltage to a higher level specified.<p>this simulation simulates a basic boost converter.run the boost.m file and specify the parameters then run the model file.</p>boost,dc to dc,powersystem,simulation,power_conversion_control,power_electronics_control",20,0,1,0,20,convert low level voltage high level specify basic boost converter run boost file specify parameter run file boostdc conversion controlpower electronics control,"['convert', 'low', 'level', 'voltage', 'high', 'level', 'specify', 'basic', 'boost', 'converter', 'run', 'boost', 'file', 'specify', 'parameter', 'run', 'file', 'boostdc', 'conversion', 'controlpower', 'electronics', 'control']",3
559,34106,"Single Phase Quasi Square Wave Inverter Using Two Cascaded Square Wave Bridge<p>This model simulates a quasi square wave inverter developed using two cascaded square wave inverter. </p>ac drives,control,control systems,converter,dc drives,electrical drives,electronics,inverter,machine control,modulation,power converter,power electronics,power system,quasi square wave inverter,single phase inverter,square wave inverter",47,2,2,0,48,single phase quasi square wave inverter two cascade square wave bridgethis quasi square wave inverter develop two cascade square wave inverter converterpower systemquasi square wave invertersingle phase invertersquare wave inverter,"['single', 'phase', 'quasi', 'square', 'wave', 'inverter', 'two', 'cascade', 'square', 'wave', 'bridgethis', 'quasi', 'square', 'wave', 'inverter', 'develop', 'two', 'cascade', 'square', 'wave', 'inverter', 'converterpower', 'systemquasi', 'square', 'wave', 'invertersingle', 'phase', 'invertersquare', 'wave', 'inverter']",3
560,34128,"A simple way to model Buffer and UnBuffer blocks, using just Simulink Blocks. Contains also a test.<p>This model shows how you can model simple Buffer and UnBufferusing just Simulink blocks.A simple utility I''ve created to aid in building Simulink models.You can test the correctness of the models in comparison to an idealImplementation. The scope shows the input and output signals, and the difference between them.After ""N"" samples, the signals should look the same, and the error shouldbe zero.You can control the Buffer size and sample time, by double clicking it.</p>buffer,delay,parallel,serial,signal processing,simulink,unbuffer",36,6,3,0,32,simple way buffer unbuffer block block contains also test show simple buffer unbufferusing block simple utility create aid building test correctness comparison scope show input output signal difference sample signal look error shouldbe zero control buffer size sample time double clicking,"['simple', 'way', 'buffer', 'unbuffer', 'block', 'block', 'contains', 'also', 'test', 'show', 'simple', 'buffer', 'unbufferusing', 'block', 'simple', 'utility', 'create', 'aid', 'building', 'test', 'correctness', 'comparison', 'scope', 'show', 'input', 'output', 'signal', 'difference', 'sample', 'signal', 'look', 'error', 'shouldbe', 'zero', 'control', 'buffer', 'size', 'sample', 'time', 'double', 'clicking']",0
561,34130,"If you want to learn and love Simulink, follow these six documented steps with models.<p>If you want to begin with Simulink, but not really sure how, this can be a good point to start with. You have an HTML to show the steps you need to follow, and 6+ models to show some of the basic abilities of Simulink.This example starts slow, and then picks up toward the end. There are six ""Begin Here Models"", a few tasks to accomplish, and the complete models of the results.Also includes a model for Stateflow, and one for Code Generation - if you have the licenses for those.Based in part on the ""sldemo_househeat.mdl"" which ships with Simulink.Instructions: Simply unpack, and run ""start_LearnSimulink"".</p>easy steps,guide,how to,learn,prepared models,simulink,stateflow,guide",331,42,3,0,308,want learn love follow six documented step want begin really sure good point start html show step need follow show basic ability example start slow pick toward end six begin task accomplish complete result also include stateflow one code generation license base part sldemo househeat mdl ship instruction simply unpack run start easy stepsguidehow tolearnprepared,"['want', 'learn', 'love', 'follow', 'six', 'documented', 'step', 'want', 'begin', 'really', 'sure', 'good', 'point', 'start', 'html', 'show', 'step', 'need', 'follow', 'show', 'basic', 'ability', 'example', 'start', 'slow', 'pick', 'toward', 'end', 'six', 'begin', 'task', 'accomplish', 'complete', 'result', 'also', 'include', 'stateflow', 'one', 'code', 'generation', 'license', 'base', 'part', 'sldemo', 'househeat', 'mdl', 'ship', 'instruction', 'simply', 'unpack', 'run', 'start', 'easy', 'stepsguidehow', 'tolearnprepared']",0
562,34185,Problem to tune PIC Controllers under matlab 2010b (Linux x86_64)<p>If iam try to tune the PID some errors occurs.</p>simulink,26,1,2,0,29,problem tune pic controller linux iam try tune pid error occur,"['problem', 'tune', 'pic', 'controller', 'linux', 'iam', 'try', 'tune', 'pid', 'error', 'occur']",5
563,34215,"A library of useful Digital components, to use with Simulink, along with Test models.<p>If you are modeling digital or mixed-signal models, then you know what are Full-Adders, D/A and A/D converters, Latches, 8-Bit words and counters, one-shot and SAR A/D.This is a library which contains all these blocks, ready to use within Simulink, along with a few models that show how to use these blocks, and how to connect them.These models/blocks can be used to create higher bit-level blocks, such as 16bit, or 12bit.</p>8bit,ad,adder,analog,counter,da,digital,duty,electrical,latch,mixed signal,modeling,one shot,oneshot,pwm,resettable,sar,simulation,simulink,sub,modeling",902,108,5,10,1019,useful digital component along test digital mixed signal know full adder converter latch bite word counter one shot sar contain block ready within along show block connect block create higher bit level block bite bit,"['useful', 'digital', 'component', 'along', 'test', 'digital', 'mixed', 'signal', 'know', 'full', 'adder', 'converter', 'latch', 'bite', 'word', 'counter', 'one', 'shot', 'sar', 'contain', 'block', 'ready', 'within', 'along', 'show', 'block', 'connect', 'block', 'create', 'higher', 'bit', 'level', 'block', 'bite', 'bit']",0
564,34245,"Error in signal with & without Hamming Code<p>The program shows the error in the signal normally and after error correction through hamming code model.</p>communication,code,communication,correction,error,hamming,signal,simulation,system",10,0,1,0,12,error signal without ham codethe program show error signal normally error correction hamming code,"['error', 'signal', 'without', 'ham', 'codethe', 'program', 'show', 'error', 'signal', 'normally', 'error', 'correction', 'hamming', 'code']",0
565,34268,"The scripts show 5 ways of solving IVP ODEs in MATLAB environment<p>Solving IVP ODEs using Symbolic MATH ""dsolve"", Laplace Transforms and MuPAD for analytic solutions and ODE45, ODE113 and Simulink for numeric solutions of the given 2nd order ODE is shown in this script. To execute the files PUT all 3 files in MATLAB current directory and execute the *.m file called IVP_ODEsols_5_ways.m </p>demo,mathematics,modeling,simulation,simulink",7,0,1,0,8,script show way solve ivp ode ivp ode symbolic math dsolve laplace transforms mupad analytic solution ode ode numeric solution give order ode show script execute file put file current directory execute file call ivp odesols way,"['script', 'show', 'way', 'solve', 'ivp', 'ode', 'ivp', 'ode', 'symbolic', 'math', 'dsolve', 'laplace', 'transforms', 'mupad', 'analytic', 'solution', 'ode', 'ode', 'numeric', 'solution', 'give', 'order', 'ode', 'show', 'script', 'execute', 'file', 'put', 'file', 'current', 'directory', 'execute', 'file', 'call', 'ivp', 'odesols', 'way']",0
566,34272,"SimPowerSystems model of a three-phase PWM VSC-based power supply.<p>A 50 kW, 380 V, 50 Hz load is connected to a 25 kV, 60 Hz grid through a AC-DC-AC power supply.  This power supply consists of two voltage source converters, VSC1 and VSC2, connected through a DC link.VSC1 connected on 60Hz grid is operating as a rectifier. It regulates the DC link voltage at 680 V and keeps unity power factor on AC grid. The PWM chopping frequency is 1980 Hz. VSC2 connected on 50 Hz load is operating as an inverter. It generates a 50 Hz frequency and regulates load voltage at 380 Vrms. The PWM chopping frequency is 2000 Hz.The electrical circuit is discretized at 2 microseconds. The sampling time of the VSC1 and VSC2 control systems is 100 microseconds.Authors: Gilbert Sybille &amp; Pierre Giroux, Hydro-QuÃ©bec (IREQ)</p>acdcac converter,power supply,pwm,voltage source converter,vsc,electric_motor_control,power_conversion_control,power_electronics_control,power supply,acdcac converter,acdcac converter",147,7,3,0,157,simpowersystems three phase pwm vsc base power supply load connect grid power supply power supply consist two voltage source converter vsc vsc connect link vsc connect grid operate rectifier regulate link voltage keep unity power factor grid pwm chop frequency vsc connect load operate inverter generates frequency regulate load voltage vrms pwm chop frequency electrical circuit discretized microsecond sample time vsc vsc control microseconds author gilbert sybille amp pierre giroux hydro quÃ©bec ireq acdcac converterpower source motor controlpower conversion controlpower electronics controlpower supplyacdcac converteracdcac converter,"['simpowersystems', 'three', 'phase', 'pwm', 'vsc', 'base', 'power', 'supply', 'load', 'connect', 'grid', 'power', 'supply', 'power', 'supply', 'consist', 'two', 'voltage', 'source', 'converter', 'vsc', 'vsc', 'connect', 'link', 'vsc', 'connect', 'grid', 'operate', 'rectifier', 'regulate', 'link', 'voltage', 'keep', 'unity', 'power', 'factor', 'grid', 'pwm', 'chop', 'frequency', 'vsc', 'connect', 'load', 'operate', 'inverter', 'generates', 'frequency', 'regulate', 'load', 'voltage', 'vrms', 'pwm', 'chop', 'frequency', 'electrical', 'circuit', 'discretized', 'microsecond', 'sample', 'time', 'vsc', 'vsc', 'control', 'microseconds', 'author', 'gilbert', 'sybille', 'amp', 'pierre', 'giroux', 'hydro', 'quÃ©bec', 'ireq', 'acdcac', 'converterpower', 'source', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'supplyacdcac', 'converteracdcac', 'converter']",3
567,34331,"characteristic of PV system<p>PV system simulink</p>pv system solar system irradiance,pv system solar system irradiance,pv system solar system irradiance,pv system solar system irradiance,pv system solar system irradiance,pv system solar system irradiance,pv system solar system irradiance",10,0,1,0,14,characteristic systempv solar irradiancepv solar irradiancepv solar irradiancepv solar irradiancepv solar irradiancepv solar irradiancepv solar irradiance,"['characteristic', 'systempv', 'solar', 'irradiancepv', 'solar', 'irradiancepv', 'solar', 'irradiancepv', 'solar', 'irradiancepv', 'solar', 'irradiancepv', 'solar', 'irradiancepv', 'solar', 'irradiance']",5
568,34505,"OptimPID is a MATLAB based interface and it can be used to optimize PID parameters <p>PID Controller Optimizer is a MATLAB based interface written by the author and it can be used to optimize PID parameters for the plant model defined by the user. In the package, Simulink is used in modelling the plant, which can be SISO continuous/discrete/hybrid, and linear/nonlinear systems of any complexity. For details, see the tutorial *.htm file or the paper PDF attached</p>actuator saturation,global optimization,graphical userinterface,integral performance indices,itae criterion,optimal control,optimization,optimum pid,pid controller",135,0,1,0,145,optimpid base interface optimize pid parameter pid controller optimizer base interface write author optimize pid parameter plant define user package modelling plant siso continuous discrete hybrid linear nonlinear complexity detail see tutorial htm file paper pdf performance indicesitae pidpid controller,"['optimpid', 'base', 'interface', 'optimize', 'pid', 'parameter', 'pid', 'controller', 'optimizer', 'base', 'interface', 'write', 'author', 'optimize', 'pid', 'parameter', 'plant', 'define', 'user', 'package', 'modelling', 'plant', 'siso', 'continuous', 'discrete', 'hybrid', 'linear', 'nonlinear', 'complexity', 'detail', 'see', 'tutorial', 'htm', 'file', 'paper', 'pdf', 'performance', 'indicesitae', 'pidpid', 'controller']",0
569,34521,"Equations of motion for a pendulum mounted on rotating base are compared to SimMechanics.<p>SimMechanics is used to simulate a pendulum at the tip of a rotating arm, called a furuta pendulum. The equation of motion are then simulated by ode45 to show they are the same. All nonlinear dynamics are simulated (only one on file exchange I've seen that does that), so the equations can be used to design swing up controller. Also shows how to use function handles so to use ode with a single file. Simulation does NOT include friction or inertia besides the axial inertia. File still works without SimMechanics, but cannot show comparison. If there's interest for a mat file with an example output, just let me know. </p>dynamics,modeling,nonlinear,pendulum,simulation",35,0,1,0,37,equation motion pendulum mount rotate base compare simmechanics simmechanics pendulum tip rotate arm call furuta pendulum equation motion ode show nonlinear dynamic one file exchange see equation design swing controller also show function handle ode single file include friction inertia besides axial inertia file still work without simmechanics show comparison interest mat file example output let know,"['equation', 'motion', 'pendulum', 'mount', 'rotate', 'base', 'compare', 'simmechanics', 'simmechanics', 'pendulum', 'tip', 'rotate', 'arm', 'call', 'furuta', 'pendulum', 'equation', 'motion', 'ode', 'show', 'nonlinear', 'dynamic', 'one', 'file', 'exchange', 'see', 'equation', 'design', 'swing', 'controller', 'also', 'show', 'function', 'handle', 'ode', 'single', 'file', 'include', 'friction', 'inertia', 'besides', 'axial', 'inertia', 'file', 'still', 'work', 'without', 'simmechanics', 'show', 'comparison', 'interest', 'mat', 'file', 'example', 'output', 'let', 'know']",7
570,34525,"SimPowerSystems model of a 25-kW regulated power supply tapping power from OHGW of a 735-kV line.<p>When a high voltage transmission line crosses remote areas where no distribution network is available, it is possible to tap power from the overhead ground wires (OHGW) protecting the line against lighting strokes. Hydro-Quebec developed the IVACE technology to provide power to telecommunication towers located in the northern part of its network. This SimPowerSystems model illustrates principle of operation of a IVACE-based 25 kW power supply connected to one of the two OHGW of a 735 kV transmission line. Authors: Leonard Bolduc, Yves Brissette, Jean Lemay, Gilbert Sybille; Hydro-Quebec Research Institute(IREQ).</p>capacitive coupling,inductance variable autocontrle entrefers,ivace,magnetic voltage regulator,ohgw,ohgw supply,overhead ground wire,selfregulating variable reactor,tapping power",93,2,2,0,98,simpowersystems regulate power supply tap power ohgw line high voltage transmission line cross remote area distribution network available possible tap power overhead ground wire ohgw protect line light stroke hydro quebec develop ivace technology provide power tower locate northern part network simpowersystems illustrate principle operation ivace base power supply connect one two ohgw transmission line author leonard bolduc yves brissette jean lemay gilbert sybille hydro quebec research institute ireq capacitive variable autocontrle voltage supplyoverhead ground variable reactortapping power,"['simpowersystems', 'regulate', 'power', 'supply', 'tap', 'power', 'ohgw', 'line', 'high', 'voltage', 'transmission', 'line', 'cross', 'remote', 'area', 'distribution', 'network', 'available', 'possible', 'tap', 'power', 'overhead', 'ground', 'wire', 'ohgw', 'protect', 'line', 'light', 'stroke', 'hydro', 'quebec', 'develop', 'ivace', 'technology', 'provide', 'power', 'tower', 'locate', 'northern', 'part', 'network', 'simpowersystems', 'illustrate', 'principle', 'operation', 'ivace', 'base', 'power', 'supply', 'connect', 'one', 'two', 'ohgw', 'transmission', 'line', 'author', 'leonard', 'bolduc', 'yves', 'brissette', 'jean', 'lemay', 'gilbert', 'sybille', 'hydro', 'quebec', 'research', 'institute', 'ireq', 'capacitive', 'variable', 'autocontrle', 'voltage', 'supplyoverhead', 'ground', 'variable', 'reactortapping', 'power']",5
571,34551,"This demo realized a simulation frame of Vector Conrol of Induction Machine Supplied by SVPWM Invert<p>Torque and flux are controlled independantly,with closed loop of observed currents and speed.Controllers are ordinary PI controller,with modified controlling parameters.For your convenience in simulation or design process of motor controllers.</p>induction machine,svpwm,vector control,electric_motor_control,power_electronics_control,direct torque control of induction motor using matlab simulinks,i this simulink",152,10,4,0,166,demo realize frame vector conrol induction machine supply svpwm inverttorque flux control close loop observe current speed controller ordinary controllerwith modify control parameter convenience design process motor controller induction controlelectric motor controlpower electronics controldirect torque control induction motor,"['demo', 'realize', 'frame', 'vector', 'conrol', 'induction', 'machine', 'supply', 'svpwm', 'inverttorque', 'flux', 'control', 'close', 'loop', 'observe', 'current', 'speed', 'controller', 'ordinary', 'controllerwith', 'modify', 'control', 'parameter', 'convenience', 'design', 'process', 'motor', 'controller', 'induction', 'controlelectric', 'motor', 'controlpower', 'electronics', 'controldirect', 'torque', 'control', 'induction', 'motor']",3
572,34585,"Simulates single phase AC voltage controller with two back to back connected thyristors<p>This model simulates single phase AC voltage controller. Firing angle can be adjusted from zero to 180 degree. Supply voltage and frequency can be adjusted from model properties. Resistive and inductive loads were used for demonstration.</p>ac voltage controller,control,control system,electronics,machines control,power electronics,power system,voltage controller,3 phase ac voltage controller,electric_motor_control,power_conversion_control,power_electronics_control",58,2,3,0,65,single phase voltage controller two back back connect thyristorsthis single phase voltage controller fire angle adjust zero degree supply voltage frequency adjust property resistive inductive load demonstration voltage controlpower systemvoltage controller phase voltage motor controlpower conversion controlpower electronics control,"['single', 'phase', 'voltage', 'controller', 'two', 'back', 'back', 'connect', 'thyristorsthis', 'single', 'phase', 'voltage', 'controller', 'fire', 'angle', 'adjust', 'zero', 'degree', 'supply', 'voltage', 'frequency', 'adjust', 'property', 'resistive', 'inductive', 'load', 'demonstration', 'voltage', 'controlpower', 'systemvoltage', 'controller', 'phase', 'voltage', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
573,34686,"A custon display (like simulink display block) using masked subsystem.<p>A custon display (like simulink display block) using masked subsystem.</p>matlab,mydisplay,simulink",5,1,2,0,3,custon display like display block mask subsystem custon display like display block mask subsystem,"['custon', 'display', 'like', 'display', 'block', 'mask', 'subsystem', 'custon', 'display', 'like', 'display', 'block', 'mask', 'subsystem']",7
574,34688,"Physical layer implementation (PI/4-DQPSK) of TETRA acording to ETSI EN 300 392-2 V3.4.1<p>TETRA is the digital version of the ""Walky Talky"" used by departmets like police, fire-fighters or ambulance in some countries.This simulink model implements parts of the physical layer as described in the specification ETSI EN 300 392-2 V3.4.1. It includes:- convolutional encoding- scrambling- timeslot generation- modulation / demodulation- bit error rate comparisonIt is not though NOT complete! Be aware of the fact that convolutional encoding is a different one than in the specification and block encoding and interleaving are missing.This model includes PI/4-DQPSK modulation. The specification also includes other modulation schemes.</p>physical layer,communications,physical layer,qpsk,scrambling,simulink,tetra",79,5,2,0,66,physical layer implementation dqpsk tetra acording etsi tetra digital version walky talky departmets like police fire fighter ambulance country implement part physical layer describe specification etsi include convolutional encode scramble timeslot generation modulation demodulation bit error rate comparisonit though complete aware fact convolutional encode different one specification block encode interleave miss include dqpsk modulation specification also include modulation scheme physical,"['physical', 'layer', 'implementation', 'dqpsk', 'tetra', 'acording', 'etsi', 'tetra', 'digital', 'version', 'walky', 'talky', 'departmets', 'like', 'police', 'fire', 'fighter', 'ambulance', 'country', 'implement', 'part', 'physical', 'layer', 'describe', 'specification', 'etsi', 'include', 'convolutional', 'encode', 'scramble', 'timeslot', 'generation', 'modulation', 'demodulation', 'bit', 'error', 'rate', 'comparisonit', 'though', 'complete', 'aware', 'fact', 'convolutional', 'encode', 'different', 'one', 'specification', 'block', 'encode', 'interleave', 'miss', 'include', 'dqpsk', 'modulation', 'specification', 'also', 'include', 'modulation', 'scheme', 'physical']",5
575,34690,"Model which connects a translational to a rotational system. But only works with ode 14x<p>This model works, but only when the solver ode14x is used. Solver ode 23t generates many warnings.</p>modeling,rotational,simscape,simulink,translational",17,0,1,0,15,connects translational rotational work ode xthis work solver ode solver ode generates many warning,"['connects', 'translational', 'rotational', 'work', 'ode', 'xthis', 'work', 'solver', 'ode', 'solver', 'ode', 'generates', 'many', 'warning']",5
576,34692,"Physical layer implementation (4-QAM) of TETRA acording to ETSI EN 300 392-2 V3.4.1<p>TETRA is the digital version of the ""Walky Talky"" used by departmets like police, fire-fighters or ambulance in some countries.This simulink model implements parts of the physical layer as described in the specification. It includes:- convolutional encoding- scrambling- timeslot generation- modulation / demodulation- bit error rate comparisonIt is not though NOT complete! Be aware of the fact that convolutional encoding is a different one than in the specification and block encoding and interleaving are missing.This is the 4-QAM modulation model. There is also a model applying the PI/4-DQPSK modulation</p>communication,physical layer,qam,simulink,tetra",110,10,2,0,96,physical layer implementation qam tetra acording etsi tetra digital version walky talky departmets like police fire fighter ambulance country implement part physical layer describe specification include convolutional encode scramble timeslot generation modulation demodulation bit error rate comparisonit though complete aware fact convolutional encode different one specification block encode interleave miss qam modulation also apply dqpsk,"['physical', 'layer', 'implementation', 'qam', 'tetra', 'acording', 'etsi', 'tetra', 'digital', 'version', 'walky', 'talky', 'departmets', 'like', 'police', 'fire', 'fighter', 'ambulance', 'country', 'implement', 'part', 'physical', 'layer', 'describe', 'specification', 'include', 'convolutional', 'encode', 'scramble', 'timeslot', 'generation', 'modulation', 'demodulation', 'bit', 'error', 'rate', 'comparisonit', 'though', 'complete', 'aware', 'fact', 'convolutional', 'encode', 'different', 'one', 'specification', 'block', 'encode', 'interleave', 'miss', 'qam', 'modulation', 'also', 'apply', 'dqpsk']",5
577,34704,"model using Simulink<p>Displaying the system of differential equations for the spatial model of the car and shows you how to make using the software MATLAB / Simulink.</p>full car model,automotive,automotive,automotive,full car model,automotive,haha,haha nevermind i found the picture that explains",731,60,4,0,808,differential equation spatial car show make software full car car nevermind find picture explains,"['differential', 'equation', 'spatial', 'car', 'show', 'make', 'software', 'full', 'car', 'car', 'nevermind', 'find', 'picture', 'explains']",0
578,34718," modeling vehicle movement in MATLAB/SIMULINK<p>Â mathematical model taking into account the human body</p>automotive,automotive",306,25,3,0,354,vehicle movement mathematical take account human,"['vehicle', 'movement', 'mathematical', 'take', 'account', 'human']",5
579,34735,"Connects translational to rotational system;initial conditions problem with pneumatic piston chamber<p>Converts translational into rotational movement, but has an initial conditions problem when a pneumatic piston chamber is connected. It does not run, but generates an error saying, that there is an initial condition problem with the custom block, mass and inertia.</p>pneumatic piston chamber,rotational,simscape,translational",29,0,1,0,26,connects translational rotational initial condition problem pneumatic piston chamberconverts translational rotational movement initial condition problem pneumatic piston chamber connect run generates error say initial condition problem custom block mass inertia pneumatic piston,"['connects', 'translational', 'rotational', 'initial', 'condition', 'problem', 'pneumatic', 'piston', 'chamberconverts', 'translational', 'rotational', 'movement', 'initial', 'condition', 'problem', 'pneumatic', 'piston', 'chamber', 'connect', 'run', 'generates', 'error', 'say', 'initial', 'condition', 'problem', 'custom', 'block', 'mass', 'inertia', 'pneumatic', 'piston']",5
580,34752,"Two demonstrations of a grid-connected PV array using SimPowerSystems.<p>The following two models are included in the package:â¢PVarray_Grid_IncCondReg_det.mdl is a detailed model of a 100-kW array connected to a 25-kV grid via a DC-DC boost converter and a three-phase three-level Voltage Source Converter (VSC). Maximum Power Point Tracking (MPPT) is implemented in the boost converter by means of a Simulink model using the âIncremental Conductance + Integral Regulatorâ technique.â¢PVarray_Grid_PandO_avg.mdl is an average model of a 200-kW array connected to a 25-kV grid via two DC-DC boost converters and a single three-phase VSC. The MPPT controller based on the âPerturb and Observeâ technique is implemented by means of a MATLAB Function block that generates embeddable C code.A Help file containing useful information on the two models is also included. Authors: Pierre Giroux, Gilbert Sybille, Hydro-Quebec Research Institute (IREQ)Carlos Osorio, Shripad Chandrachood, The Mathworks</p>boost converter,pv array,boost converter,mppt,power grid,pv array,three level inverter,dcdc,photovoltaic,power_conversion_control,power_electronics_control,boost converter,mppt,mppt,boost converter,dcdc,mppt,photovoltaic,mppt,boost converter,mppt,pv array,regulators,pv",592,37,3,0,615,two demonstration grid connected array simpowersystems follow two include package pvarray grid inccondreg det mdl detailed array connect grid via boost converter three phase three level voltage source converter vsc maximum power point track mppt implement boost converter mean incremental conductance integral regulator technique pvarray grid pando avg mdl average array connect grid via two boost converter single three phase vsc mppt controller base perturb observe technique implement mean function block generates embeddable code help file contain useful information two also include author pierre giroux gilbert sybille hydro quebec research institute ireq carlos osorio shripad chandrachood mathworksboost converterpv arrayboost gridpv arraythree level conversion controlpower electronics controlboost convertermpptpv,"['two', 'demonstration', 'grid', 'connected', 'array', 'simpowersystems', 'follow', 'two', 'include', 'package', 'pvarray', 'grid', 'inccondreg', 'det', 'mdl', 'detailed', 'array', 'connect', 'grid', 'via', 'boost', 'converter', 'three', 'phase', 'three', 'level', 'voltage', 'source', 'converter', 'vsc', 'maximum', 'power', 'point', 'track', 'mppt', 'implement', 'boost', 'converter', 'mean', 'incremental', 'conductance', 'integral', 'regulator', 'technique', 'pvarray', 'grid', 'pando', 'avg', 'mdl', 'average', 'array', 'connect', 'grid', 'via', 'two', 'boost', 'converter', 'single', 'three', 'phase', 'vsc', 'mppt', 'controller', 'base', 'perturb', 'observe', 'technique', 'implement', 'mean', 'function', 'block', 'generates', 'embeddable', 'code', 'help', 'file', 'contain', 'useful', 'information', 'two', 'also', 'include', 'author', 'pierre', 'giroux', 'gilbert', 'sybille', 'hydro', 'quebec', 'research', 'institute', 'ireq', 'carlos', 'osorio', 'shripad', 'chandrachood', 'mathworksboost', 'converterpv', 'arrayboost', 'gridpv', 'arraythree', 'level', 'conversion', 'controlpower', 'electronics', 'controlboost', 'convertermpptpv']",4
581,34810,Control random numbers in Simulink matlab function and random number generator<p>This is in addition to solution ID 1-47NH41.  It shows additional methods for controlling random numbers inside Simulink.</p>simulink signal processing statistics,8,0,1,0,6,control random number function random number generatorthis addition solution show additional method control random number inside signal processing statistic,"['control', 'random', 'number', 'function', 'random', 'number', 'generatorthis', 'addition', 'solution', 'show', 'additional', 'method', 'control', 'random', 'number', 'inside', 'signal', 'processing', 'statistic']",0
582,34819,"Controllable AC voltage control<p>Pulses are generated based on Desired output voltage</p>ac voltage control,acac converter,electric_motor_control,power_conversion_control,power_electronics_control,ac voltage control",117,6,4,0,123,controllable voltage controlpulses generate base desire output voltageac voltage controlacac motor controlpower conversion controlpower electronics controlac voltage control,"['controllable', 'voltage', 'controlpulses', 'generate', 'base', 'desire', 'output', 'voltageac', 'voltage', 'controlacac', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'voltage', 'control']",1
583,34915,"NFC model with simple ASK modulation scheme and AGC<p>This NFC model uses only a standard ASK modulation scheme (provided by Diego Orlando at <a href=""http://www.mathworks.se/matlabcentral/fileexchange/25750-ask-ook-fsk-qpsk-digital-modulations-and-demodulations-in-simulink"">http://www.mathworks.se/matlabcentral/fileexchange/25750-ask-ook-fsk-qpsk-digital-modulations-and-demodulations-in-simulink</a>) and includes also an AGC support (provided by Martin Kumm at <a href=""http://www.martin-kumm.de/matlab_simulink_pll_lib.php"">http://www.martin-kumm.de/matlab_simulink_pll_lib.php</a>). The model has been realized within a university course on the simulation in communication systems. </p>agc,ask,nfc",45,5,3,0,39,nfc simple ask modulation scheme agcthis nfc standard ask modulation scheme provide diego orlando http mathworks matlabcentral fileexchange ask ook fsk qpsk digital modulation demodulation include also agc support provide martin kumm http martin kumm pll lib php realize within university course communication agcasknfc,"['nfc', 'simple', 'ask', 'modulation', 'scheme', 'agcthis', 'nfc', 'standard', 'ask', 'modulation', 'scheme', 'provide', 'diego', 'orlando', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'ask', 'ook', 'fsk', 'qpsk', 'digital', 'modulation', 'demodulation', 'include', 'also', 'agc', 'support', 'provide', 'martin', 'kumm', 'http', 'martin', 'kumm', 'pll', 'lib', 'php', 'realize', 'within', 'university', 'course', 'communication', 'agcasknfc']",0
584,34931,"Simple model for Electronics students, teachers and enthusiasts.  <p>The model's main component is a linear transformer, with 380/220 Vrms ratio. It steps down any AC signal in the same ratio and displays its rms value.   </p>down,electronics,libya,power,power electronics,rms,step,transformer",10,0,1,0,11,simple electronics student teacher enthusiast main component linear transformer vrms ratio step signal ratio display rms value,"['simple', 'electronics', 'student', 'teacher', 'enthusiast', 'main', 'component', 'linear', 'transformer', 'vrms', 'ratio', 'step', 'signal', 'ratio', 'display', 'rms', 'value']",4
585,34940,"Simple circuit for simulink amatuers<p>A simple circuit to illustrate how to display multiple signals on a scope display with only 1 axe using the 'Mux Block' function. </p>control,electronics,power,singal routing,electronics",6,0,1,0,4,simple circuit amatuersa simple circuit illustrate display multiple signal scope display axe mux block function,"['simple', 'circuit', 'amatuersa', 'simple', 'circuit', 'illustrate', 'display', 'multiple', 'signal', 'scope', 'display', 'axe', 'mux', 'block', 'function']",7
586,35121,"This is for simulink amatuers and Elecrical/Electronics students. <p>Simple model of a bridge rectifier cricuit using simulink Universal Bridge </p>acdc,education,electronics,power,smps",15,0,1,0,13,amatuers elecrical electronics student simple bridge rectifier cricuit universal bridge,"['amatuers', 'elecrical', 'electronics', 'student', 'simple', 'bridge', 'rectifier', 'cricuit', 'universal', 'bridge']",4
587,35130,"The matlab code of the solution of ""FDI Design Competition for Wind Turbines"" (winning 1st place)<p>This code presents the best solution of the international competition to design an automatic fault detection and isolation for windturbines, For more informations about this competition please refer to:<a href=""http://www.kk-electronic.com/Default.aspx?ID=9495A"">http://www.kk-electronic.com/Default.aspx?ID=9495A</a> fault diagnosis approach based on Support Vector Machines(SVM) is designed for wind Turbines case, The article written about this approach is:N. Laouti, N. Sheibat-Othman, and S. Othman. Support vector machines for fault detection in wind turbines. In Proceedings of IFAC World Congress 2011, pages 7067â7072, Milan, Italy, August-September 2011.Please indicate this reference if you use the code to publish any information The Paper montioning wind turbines model(Benchmark) and faults requirements si:Peter Fogh Odgaard, Jakob Stoustrup, and Michel Kinnaert. Fault tolerant control of wind turbines a benchmark model. In Proc.7th IFAC Symposium on Fault Detection, Supervision and Safety of Technical Processes, pages 155â160, Barcelona, Spain, 2009.It is recommended to read above articles before starting the simulation.Phd student Nassim Laoutihttps://sites.google.com/site/nassimlaouti/</p>svm,fault detection,fault diagnosis,signal processing,simulation,simulink,support vector machines,wind turbines",819,42,5,0,975,code solution fdi design competition wind turbine win place code present best solution international competition design automatic fault detection isolation windturbines information competition please refer http electronic com default aspx fault diagnosis approach base support vector machine svm design wind turbine case article write approach laouti sheibat othman othman support vector machine fault detection wind turbine proceeding ifac world congress page milan italy august september please indicate reference code publish information paper montioning wind turbine benchmark fault requirement peter fogh odgaard jakob stoustrup michel kinnaert fault tolerant control wind turbine benchmark proc ifac symposium fault detection supervision safety technical process page barcelona spain recommend read article start phd student nassim laouti sit google com site nassimlaouti svmfault detectionfault diagnosissignal vector machineswind turbine,"['code', 'solution', 'fdi', 'design', 'competition', 'wind', 'turbine', 'win', 'place', 'code', 'present', 'best', 'solution', 'international', 'competition', 'design', 'automatic', 'fault', 'detection', 'isolation', 'windturbines', 'information', 'competition', 'please', 'refer', 'http', 'electronic', 'com', 'default', 'aspx', 'fault', 'diagnosis', 'approach', 'base', 'support', 'vector', 'machine', 'svm', 'design', 'wind', 'turbine', 'case', 'article', 'write', 'approach', 'laouti', 'sheibat', 'othman', 'othman', 'support', 'vector', 'machine', 'fault', 'detection', 'wind', 'turbine', 'proceeding', 'ifac', 'world', 'congress', 'page', 'milan', 'italy', 'august', 'september', 'please', 'indicate', 'reference', 'code', 'publish', 'information', 'paper', 'montioning', 'wind', 'turbine', 'benchmark', 'fault', 'requirement', 'peter', 'fogh', 'odgaard', 'jakob', 'stoustrup', 'michel', 'kinnaert', 'fault', 'tolerant', 'control', 'wind', 'turbine', 'benchmark', 'proc', 'ifac', 'symposium', 'fault', 'detection', 'supervision', 'safety', 'technical', 'process', 'page', 'barcelona', 'spain', 'recommend', 'read', 'article', 'start', 'phd', 'student', 'nassim', 'laouti', 'sit', 'google', 'com', 'site', 'nassimlaouti', 'svmfault', 'detectionfault', 'diagnosissignal', 'vector', 'machineswind', 'turbine']",5
588,35138,"cuk converter with 34.5V as i/p<p>SpecificationInput Voltage (Vs) 20-48VInput Current (Is) 0-5A (&lt; 5% ripple)Output Voltage (Vo) 12-30V (&lt; 5% ripple)Output Current (Io) 0-5A (&lt; 5% ripple)Maximum Output Power (Pmax) 150WSwitching Frequency (f) 50KHzDuty Cycle (D) 0.1 &lt; D &lt; 0.6</p>simpowersm,power_conversion_control,power_electronics_control,simpowersm",21,0,1,0,23,cuk converter voltage vinput current ripple output voltage ripple output current ripple maximum output power pmax wswitching frequency khzduty cycle simpowersmpower conversion controlpower electronics,"['cuk', 'converter', 'voltage', 'vinput', 'current', 'ripple', 'output', 'voltage', 'ripple', 'output', 'current', 'ripple', 'maximum', 'output', 'power', 'pmax', 'wswitching', 'frequency', 'khzduty', 'cycle', 'simpowersmpower', 'conversion', 'controlpower', 'electronics']",1
589,35180,"Two quadrant phase controlled DC motor drive<p>This model simulates current control of DC motor using three phase fully controlled rectifier. Basically it is a two quadrant converter which is controlling a DC motor.</p>control,control systems,current control,dc machines,dc motor,dc motor drives,drives,electrical drives,electronics,feed back control,industrial electronics,machines,motor drives,phase contro,power electronics,three phase controlled rectifier,electric_motor_control,power_conversion_control,power_electronics_control",29,0,1,0,33,two quadrant phase control motor drivethis current control motor three phase fully control rectifier basically two quadrant converter control motor controlcontrol systemscurrent controldc machinesdc motordc motor back drivesphase contropower phase control motor controlpower conversion controlpower electronics control,"['two', 'quadrant', 'phase', 'control', 'motor', 'drivethis', 'current', 'control', 'motor', 'three', 'phase', 'fully', 'control', 'rectifier', 'basically', 'two', 'quadrant', 'converter', 'control', 'motor', 'controlcontrol', 'systemscurrent', 'controldc', 'machinesdc', 'motordc', 'motor', 'back', 'drivesphase', 'contropower', 'phase', 'control', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
590,35181,"Speed control of DC motor using Hysteresis pulse width modulation.<p>This model simulates the speed and current control of DC motor using the Hysteresis pulse width modulation. The current band is defined and relay ensures that that the current remains between the upper and lower limit i.e. Hysteresis current control. </p>chopper,control,control systems,current control,dc motor,dc motor drives,drives,electric machines,electric motors,feedback control,hysteresis pwm,industrial electronics,machines,power electronics,power systems,pwm,speed control,control,control systems,electric_motor_control,power_conversion_control,power_electronics_control,hysteresis pwm,dc motor,pwm,feedback control",30,3,3,0,33,speed control motor hysteresis pulse width modulation speed current control motor hysteresis pulse width modulation current band define relay ensures current remain upper low limit hysteresis current control systemscurrent controldc motordc motor motorsfeedback pwmindustrial systemspwmspeed systemselectric motor controlpower conversion controlpower electronics pwmdc control,"['speed', 'control', 'motor', 'hysteresis', 'pulse', 'width', 'modulation', 'speed', 'current', 'control', 'motor', 'hysteresis', 'pulse', 'width', 'modulation', 'current', 'band', 'define', 'relay', 'ensures', 'current', 'remain', 'upper', 'low', 'limit', 'hysteresis', 'current', 'control', 'systemscurrent', 'controldc', 'motordc', 'motor', 'motorsfeedback', 'pwmindustrial', 'systemspwmspeed', 'systemselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'pwmdc', 'control']",1
591,35196,"Chopper Fed DC motor drive -- Speed control of Dc motor<p>The model simulates Chopper fed DC motor drive for speed control of DC motor. Actual speed is compared with reference speed command and error is manipulated by a PI controller whose output is the duty cycle. Duty cycle in converted in PWM by comparing the duty cycle voltage with sawtooth waveform. Pulses are applied to MOSFET controlling the chopper circuit. Chopper circuit is basically a first quadrant buck converter. </p>buck converter,chopper,control,control of dc motor,control systems,dc motor,dc motor drives,drives,electric machines,feed back control,industrial electronics,machines,power electronics,power systems,pwm,speed control,electric_motor_control,power_conversion_control,power_electronics_control,buck converter,buck converter,buck converter,speed control",22,0,1,0,27,chopper feed motor drive speed control motorthe chopper feed motor drive speed control motor actual speed compare reference speed command error manipulate controller whose output duty cycle duty cycle convert pwm compare duty cycle voltage sawtooth waveform pulse apply mosfet control chopper circuit chopper circuit basically first quadrant buck converter buck motorcontrol systemsdc motordc motor machinesfeed back systemspwmspeed controlelectric motor controlpower conversion controlpower electronics controlbuck converterbuck converterbuck converterspeed control,"['chopper', 'feed', 'motor', 'drive', 'speed', 'control', 'motorthe', 'chopper', 'feed', 'motor', 'drive', 'speed', 'control', 'motor', 'actual', 'speed', 'compare', 'reference', 'speed', 'command', 'error', 'manipulate', 'controller', 'whose', 'output', 'duty', 'cycle', 'duty', 'cycle', 'convert', 'pwm', 'compare', 'duty', 'cycle', 'voltage', 'sawtooth', 'waveform', 'pulse', 'apply', 'mosfet', 'control', 'chopper', 'circuit', 'chopper', 'circuit', 'basically', 'first', 'quadrant', 'buck', 'converter', 'buck', 'motorcontrol', 'systemsdc', 'motordc', 'motor', 'machinesfeed', 'back', 'systemspwmspeed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converterbuck', 'converterbuck', 'converterspeed', 'control']",3
592,35328,"This is an HDL Coder compatible Fetal ECG extraction algorithm.<p>This is an HDL Coder compatible Fetal ECG extraction algorithm. The Simulink model follows the floating point MATLAB algorithm with some changes forced by the HDL Coder compatibility.The ""blue"" subsystem is HDL Coder compatible.* Note: this is only a demonstration of tools' capabilities and not a commercial grade algorithm!</p>pick of the week,potw,biotech,demo,hdl,medical,signal processing,simulation,simulink",29,3,3,0,32,hdl coder compatible fetal ecg extraction algorithm hdl coder compatible fetal ecg extraction algorithm follow float point algorithm change force hdl coder compatibility blue subsystem hdl coder compatible note demonstration tool capability commercial grade algorithm pick,"['hdl', 'coder', 'compatible', 'fetal', 'ecg', 'extraction', 'algorithm', 'hdl', 'coder', 'compatible', 'fetal', 'ecg', 'extraction', 'algorithm', 'follow', 'float', 'point', 'algorithm', 'change', 'force', 'hdl', 'coder', 'compatibility', 'blue', 'subsystem', 'hdl', 'coder', 'compatible', 'note', 'demonstration', 'tool', 'capability', 'commercial', 'grade', 'algorithm', 'pick']",5
593,35358,"An Excel file contains information about time and number of units to dispatch - use in SimEvents.<p>This model shows how you can acquire data from Excel files, and use it to generate multiple entities at specific times. The idea is that if you have information stored in Excel on number on entities generated, you want to bring it to SimEvents for your specific model. For example, thenumber of aircraft/cars to dispatch to each task/mission.</p>entities,excel,import,intergeneration,multiple,simevents",16,2,2,0,14,excel file contain information time number unit dispatch simevents show acquire data excel file generate multiple entity specific time idea information store excel number entity generate want bring simevents specific example thenumber aircraft car dispatch task mission,"['excel', 'file', 'contain', 'information', 'time', 'number', 'unit', 'dispatch', 'simevents', 'show', 'acquire', 'data', 'excel', 'file', 'generate', 'multiple', 'entity', 'specific', 'time', 'idea', 'information', 'store', 'excel', 'number', 'entity', 'generate', 'want', 'bring', 'simevents', 'specific', 'example', 'thenumber', 'aircraft', 'car', 'dispatch', 'task', 'mission']",0
594,35692,"Half-car model using Simscape<p>Half-car model using Simscape</p>automotive,halfcar",41,4,2,0,33,half car simscapehalf car,"['half', 'car', 'simscapehalf', 'car']",5
595,35701,"Controller designed based on SVPWM<p>space vector pulse width modulation based inverter control</p>converter,inverter,pwm,space vector,svpwm,electric_motor_control,power_conversion_control,power_electronics_control",111,6,3,0,174,controller design base svpwmspace vector pulse width modulation base inverter motor controlpower conversion controlpower electronics control,"['controller', 'design', 'base', 'svpwmspace', 'vector', 'pulse', 'width', 'modulation', 'base', 'inverter', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
596,35704,"Power Rating 1.2Kw, PV is From Sinosolar of China, Power Converter for MPPT is Buck-Boost Converter <p>Charger is Boost converter, supply CC and CV mode to charging for Battery Li-PO 100Ah, 48V. </p>battery_system_management,power_conversion_control,power_electronics_control,power electronics,33",1656,165,6,0,1675,power rating sinosolar china power converter mppt buck boost converter charger boost converter supply mode charge battery battery managementpower conversion controlpower electronics controlpower electronics,"['power', 'rating', 'sinosolar', 'china', 'power', 'converter', 'mppt', 'buck', 'boost', 'converter', 'charger', 'boost', 'converter', 'supply', 'mode', 'charge', 'battery', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",1
597,35735,"Run with two Mode Current constans and Voltage constanst.<p>Charging two mode CC and CVCC mode : current is kept at 100A and voltage limit is 58.4V.CV mode: Voltage is kept at 58.4V and Current cut off is 5A.</p>battery charger,cccv charging mode,battery_system_management,power_conversion_control,power_electronics_control,power electronics,power electronics",57,6,3,0,60,run two mode current constans voltage constanst charge two mode cvcc mode current kept voltage limit mode voltage keep current cut battery chargerccv charge modebattery managementpower conversion controlpower electronics controlpower electronics,"['run', 'two', 'mode', 'current', 'constans', 'voltage', 'constanst', 'charge', 'two', 'mode', 'cvcc', 'mode', 'current', 'kept', 'voltage', 'limit', 'mode', 'voltage', 'keep', 'current', 'cut', 'battery', 'chargerccv', 'charge', 'modebattery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",3
598,35736,"Simulation Solar Panel and trying MPPT algorithm, with P&O method<p>Simulation PV 250W and MPPT algorithm with P&amp;O method.</p>power electronics,power electronics,solar and mppt,power electronics,power electronics,power_conversion_control,power_electronics_control,power electronics,power electronics,power electronics,power electronics",53,4,3,0,55,solar panel try mppt algorithm mppt algorithm amp method power mpptpower conversion controlpower electronics controlpower electronics,"['solar', 'panel', 'try', 'mppt', 'algorithm', 'mppt', 'algorithm', 'amp', 'method', 'power', 'mpptpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",1
599,35737,"Controlled Boost converter with PID<p>Simulated DC - DC converter Boost topology closeloop with PID block, Voltage output is controlled at 80V, input voltage is 12V and power output lower 300W.</p>power_conversion_control,power_electronics_control,power electronics,power electronics,power electronics,power electronics,power electronics",20,0,1,0,19,control boost converter converter boost topology closeloop pid block voltage output control input voltage power output low power conversion controlpower electronics controlpower electronics,"['control', 'boost', 'converter', 'converter', 'boost', 'topology', 'closeloop', 'pid', 'block', 'voltage', 'output', 'control', 'input', 'voltage', 'power', 'output', 'low', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",6
600,35745,"motion tractor semitrailer in MATLAB SIMULINK <p>This article describes the process of modeling and simulation of motion tractor semitrailer in MATLAB SIMULINK and its mathematical model.</p>automotive,automotive,automotive",380,1,1,0,365,motion tractor semitrailer article describe process motion tractor semitrailer mathematical,"['motion', 'tractor', 'semitrailer', 'article', 'describe', 'process', 'motion', 'tractor', 'semitrailer', 'mathematical']",5
601,35769,"Interleaved, Successive Approximation, and Pipelined Sub-Ranging ADC models. <p>These models are typical of the architectures used for high speed analog to digital converters. </p>a to d,adc,analog to digital converter,data converter,mixedsignal",752,68,4,0,767,interleave successive approximation pipelined sub range adc typical architecture high speed analog digital converter dadcanalog digital converterdata,"['interleave', 'successive', 'approximation', 'pipelined', 'sub', 'range', 'adc', 'typical', 'architecture', 'high', 'speed', 'analog', 'digital', 'converter', 'dadcanalog', 'digital', 'converterdata']",8
602,35781,"Multilayer Perceptron Neural Network Model and Backpropagation Algorithm for Simulink.<p>Multilayer Perceptron Neural Network Model and Backpropagation Algorithm for Simulink.Marcelo Augusto Costa FernandesDCA - CT - <a href=""mailto:UFRNmfernandes@dca.ufrn.br"">UFRNmfernandes@dca.ufrn.br</a></p>ann,artificial neural network,backpropagation,mlp,multilayer perceptron,neural networks,simulink,ann,artificial neural network,backpropagation,ann,artificial neural network,multilayer perceptron,multilayer perceptron",164,12,3,0,178,multilayer perceptron neural network backpropagation algorithm multilayer perceptron neural network backpropagation algorithm marcelo augusto costa fernandesdca ufrnmfernandes dca ufrn brannartificial neural neural neural perceptron,"['multilayer', 'perceptron', 'neural', 'network', 'backpropagation', 'algorithm', 'multilayer', 'perceptron', 'neural', 'network', 'backpropagation', 'algorithm', 'marcelo', 'augusto', 'costa', 'fernandesdca', 'ufrnmfernandes', 'dca', 'ufrn', 'brannartificial', 'neural', 'neural', 'neural', 'perceptron']",8
603,35794,"Simulink model that predicts US population in 2100 AD: visualization and animation included<p>This Simulink model predicts the population of the United States over the course of the 21st century. Population is defined as a function of age and gender in the year 2010 based on US Census Bureau data. Birth, death, and immigration rates are also defined as a function of age and gender. A fixed rate projection is calculated, enabling the user to produce several demographic charts for the year 2100. MATLAB code is included to produce a population pyramid and animation showing population as a function of age over time. An aging population of 412 million is predicted.</p>model,population,simulink",44,4,2,0,43,predicts population visualization animation includedthis predict population united state course century population define function age gender year base census bureau data birth death immigration rate also define function age gender fix rate projection calculate enable user produce several demographic chart year code include produce population pyramid animation show population function age time age population million predict,"['predicts', 'population', 'visualization', 'animation', 'includedthis', 'predict', 'population', 'united', 'state', 'course', 'century', 'population', 'define', 'function', 'age', 'gender', 'year', 'base', 'census', 'bureau', 'data', 'birth', 'death', 'immigration', 'rate', 'also', 'define', 'function', 'age', 'gender', 'fix', 'rate', 'projection', 'calculate', 'enable', 'user', 'produce', 'several', 'demographic', 'chart', 'year', 'code', 'include', 'produce', 'population', 'pyramid', 'animation', 'show', 'population', 'function', 'age', 'time', 'age', 'population', 'million', 'predict']",5
604,35796,"Building Demo System contain PV working at MPP. Battery charger use energy off PV at MPP to charging<p>PV have maximum power 1250W, Battery 48V 100Ah. MPPT algorithm is P&amp;O. Charger works with three mode : CV, CC and Floating. In this model we use Floating mode to store all of PV energy into battery.</p>battery_system_management,power_conversion_control,power_electronics_control,power electronics,power electronics,power electronics,power electronics,power electronics",284,34,5,0,283,building demo contain work mpp battery charger energy mpp chargingpv maximum power battery mppt algorithm amp charger work three mode float float mode store energy battery battery managementpower conversion controlpower electronics controlpower electronics,"['building', 'demo', 'contain', 'work', 'mpp', 'battery', 'charger', 'energy', 'mpp', 'chargingpv', 'maximum', 'power', 'battery', 'mppt', 'algorithm', 'amp', 'charger', 'work', 'three', 'mode', 'float', 'float', 'mode', 'store', 'energy', 'battery', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",3
605,35798,"Twelve pulse converter for DC motor control.<p>The model simulates twelve pulse converter for DC motor drive. Wye and Delta converters were connected in series to get the twelve pulses for the DC motor. Any firing angle can be be adjusted for the pulse generating block. The basic concept is that the there exist the angle of 30 degree in voltages of wye and delta connected circuits, so two converters connected with wye and delta windings can provide 12 pulses in the cycle of power frequency; described in this simulation.</p>control,control systems,converter,dc motor,dc motor control,dc motor drive,drives,industrial electronics,machines,power electronics,power system,simulation,simulink,transformer,twelve pulse converter,wyedelta converter,electric_motor_control,power_conversion_control,power_electronics_control",38,0,1,0,68,twelve pulse converter motor control twelve pulse converter motor drive wye delta converter connect series get twelve pulse motor fire angle adjust pulse generate block basic concept exist angle degree voltage wye delta connect circuit two converter connect wye delta winding provide pulse cycle power frequency describe controlcontrol motordc motor controldc motor pulse motor controlpower conversion controlpower electronics control,"['twelve', 'pulse', 'converter', 'motor', 'control', 'twelve', 'pulse', 'converter', 'motor', 'drive', 'wye', 'delta', 'converter', 'connect', 'series', 'get', 'twelve', 'pulse', 'motor', 'fire', 'angle', 'adjust', 'pulse', 'generate', 'block', 'basic', 'concept', 'exist', 'angle', 'degree', 'voltage', 'wye', 'delta', 'connect', 'circuit', 'two', 'converter', 'connect', 'wye', 'delta', 'winding', 'provide', 'pulse', 'cycle', 'power', 'frequency', 'describe', 'controlcontrol', 'motordc', 'motor', 'controldc', 'motor', 'pulse', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
606,35799,"This is a simulation of an 8 tank lorenze water wheel. The water speed is manually controlled. <p>The Lorenz water wheel is a simple demonstration of chaotic systems. This simulaiton displays the chaotic nature of the Lorenz water wheel using a graphic. My intention is to develope a fast non linear controller to provide feedback control for this system, but I thought this simulation could be useful to others as well.  </p>chaotic system,lorenz water wheel",7,0,1,0,7,tank lorenze water wheel water speed manually control lorenz water wheel simple demonstration chaotic display chaotic nature lorenz water wheel graphic intention develope fast non linear controller provide feedback control thought could useful others well chaotic systemlorenz water wheel,"['tank', 'lorenze', 'water', 'wheel', 'water', 'speed', 'manually', 'control', 'lorenz', 'water', 'wheel', 'simple', 'demonstration', 'chaotic', 'display', 'chaotic', 'nature', 'lorenz', 'water', 'wheel', 'graphic', 'intention', 'develope', 'fast', 'non', 'linear', 'controller', 'provide', 'feedback', 'control', 'thought', 'could', 'useful', 'others', 'well', 'chaotic', 'systemlorenz', 'water', 'wheel']",5
607,35803,"approach for fm-cw radar system <p>the model explain the basic principle of frequency modulated continouse wave radar system and it contains how effect of noise affected on system </p>simulink,simulink",15,0,1,0,15,approach radar explain basic principle frequency modulate continouse wave radar contains effect noise affect,"['approach', 'radar', 'explain', 'basic', 'principle', 'frequency', 'modulate', 'continouse', 'wave', 'radar', 'contains', 'effect', 'noise', 'affect']",5
608,35841,compensador Boost <p>se trata de un convertidor boost con compensador en simulink</p>simulink,50,2,2,0,57,compensador boost trata convertidor boost con compensador,"['compensador', 'boost', 'trata', 'convertidor', 'boost', 'con', 'compensador']",8
609,35844,"speed control of PMSM based on SVPWM<p>design SVPWM for 3 level inverter for speed control of PMSM</p>3 level,inverter,multilevel inverter,pmsm,speed control,svm,svpwm,synchronous motor,electric_motor_control,power_electronics_control,3 level,inverter,3 level,inverter,pmsm,speed control,3 level",136,6,3,0,212,speed control pmsm base svpwmdesign svpwm level inverter speed control pmsm motorelectric motor controlpower electronics control levelinverter control level,"['speed', 'control', 'pmsm', 'base', 'svpwmdesign', 'svpwm', 'level', 'inverter', 'speed', 'control', 'pmsm', 'motorelectric', 'motor', 'controlpower', 'electronics', 'control', 'levelinverter', 'control', 'level']",1
610,35862,"this project correct the error which occur in the previous project   <p>One of the most disadvantages of continues radar system that it cannot calculate range  because the time of  transmitting  the signal is unknown so we   used one of communication system techniques that is frequency modulated wave  signal which we can sweep frequency for a certain  period  so if signal is hit stationary target then it back to the station of radar with the same transmitted frequency and we now that frequency at what time have been transmitted so we can calculate beat frequency  then range </p>signal processing,simulink",15,0,1,0,15,project correct error occur previous project one disadvantage continue radar calculate range time transmit signal unknown one communication technique frequency modulate wave signal sweep frequency certain period signal hit stationary target back station radar transmit frequency frequency time transmit calculate beat frequency range signal,"['project', 'correct', 'error', 'occur', 'previous', 'project', 'one', 'disadvantage', 'continue', 'radar', 'calculate', 'range', 'time', 'transmit', 'signal', 'unknown', 'one', 'communication', 'technique', 'frequency', 'modulate', 'wave', 'signal', 'sweep', 'frequency', 'certain', 'period', 'signal', 'hit', 'stationary', 'target', 'back', 'station', 'radar', 'transmit', 'frequency', 'frequency', 'time', 'transmit', 'calculate', 'beat', 'frequency', 'range', 'signal']",0
611,35879,"Mathematical model of a mini-helicopter robot<p>Mathematical model of a mini-helicopter robot using Simulink blocks, which allows the automatic code generation without using c-code S-functions. There is a complete toolbox that includes more subsystems and more features: detailed help in every block, governor model, actuator dynamics, analysis and design tools, PID control (with bumpless tranfer and anti-windup), trajectory planning tool, Kalman filter estimation, rapid software prototyping possibilities (QNX OS, SIL, HIL), virtual reality animation, other.The project is being developed by Universidad EAFIT, MedellÃ­n, Colombia.All comments and corrections are welcome.</p>aerospace,control design,helicopter,modeling,simulation,simulink,simulation",1408,91,7,0,1893,mathematical mini helicopter mini helicopter robot block allow automatic code generation without code function complete toolbox include subsystems feature detail help every block governor actuator dynamic analysis design tool pid control bumpless tranfer anti windup trajectory plan tool kalman filter estimation rapid software prototyping possibility qnx sil hil virtual reality animation project develop universidad eafit medellÃ­n colombia comment correction welcome,"['mathematical', 'mini', 'helicopter', 'mini', 'helicopter', 'robot', 'block', 'allow', 'automatic', 'code', 'generation', 'without', 'code', 'function', 'complete', 'toolbox', 'include', 'subsystems', 'feature', 'detail', 'help', 'every', 'block', 'governor', 'actuator', 'dynamic', 'analysis', 'design', 'tool', 'pid', 'control', 'bumpless', 'tranfer', 'anti', 'windup', 'trajectory', 'plan', 'tool', 'kalman', 'filter', 'estimation', 'rapid', 'software', 'prototyping', 'possibility', 'qnx', 'sil', 'hil', 'virtual', 'reality', 'animation', 'project', 'develop', 'universidad', 'eafit', 'medellÃ­n', 'colombia', 'comment', 'correction', 'welcome']",0
612,35911,"design SVPWM for 3 level inverter for speed control of Induction motor based on V/F method<p>V/F control of Induction motor with SVPWM based 3-level inverter</p>induction motor,inverter,multilevel,speed control,svm,svpwm,vf,electric_motor_control,power_electronics_control,vf,induction motor,httpwwwmathworkscoukmatlabcentralfileexchangetermtag3a22inverter,svm,svpwm,induction motor,multilevel",142,6,3,0,222,design svpwm level inverter speed control induction motor base methodv control induction motor svpwm base level motor controlpower electronics motor motormultilevel,"['design', 'svpwm', 'level', 'inverter', 'speed', 'control', 'induction', 'motor', 'base', 'methodv', 'control', 'induction', 'motor', 'svpwm', 'base', 'level', 'motor', 'controlpower', 'electronics', 'motor', 'motormultilevel']",6
613,35922,"The proposed Pulse Generator offers full tunability of its parameters on runtime.<p>Following steps explain the working principle of the proposed Programmable Pulse Generator:1. Taking the modulus of the free running simulation ""Clock"" with the ""Period"", gives a triangular wave whose frequency is set by the ""Period"" input.2. The multiplication of the ""Period"" with ""PulseWidth""(in fraction instead of percentage), gives the On-Period of the Pulse.3. Comparing the above generated triangular wave with this On-Period results into the Pulse waveform of desired frequency and pulse width. This is further scaled by the ""Amplitude"" input to achieve the desired peak magnitude.4. The desired phase shift is achieved simply by:   a) subtracting the ""PhaseDelay"" input from the ""Clock"" and   b) using a switch to turn the ""Amplitude"" to zero till the ""Clock"" gets greater than the ""PhaseDelay"".With special thanks to Pravallika Vinnakota, Mathworks Application Support Engineer.</p>programmable,pulse generator,simulink",23,1,2,0,23,propose pulse generator offer full tunability parameter runtime follow step explain work principle propose programmable pulse generator take modulus free run clock period give triangular wave whose frequency set period input multiplication period pulsewidth fraction instead percentage give period pulse comparing generate triangular wave period result pulse waveform desire frequency pulse width scaled amplitude input achieve desire peak magnitude desire phase shift achieve simply subtract phasedelay input clock switch turn amplitude zero till clock get great phasedelay special thanks pravallika vinnakota mathworks application support engineer,"['propose', 'pulse', 'generator', 'offer', 'full', 'tunability', 'parameter', 'runtime', 'follow', 'step', 'explain', 'work', 'principle', 'propose', 'programmable', 'pulse', 'generator', 'take', 'modulus', 'free', 'run', 'clock', 'period', 'give', 'triangular', 'wave', 'whose', 'frequency', 'set', 'period', 'input', 'multiplication', 'period', 'pulsewidth', 'fraction', 'instead', 'percentage', 'give', 'period', 'pulse', 'comparing', 'generate', 'triangular', 'wave', 'period', 'result', 'pulse', 'waveform', 'desire', 'frequency', 'pulse', 'width', 'scaled', 'amplitude', 'input', 'achieve', 'desire', 'peak', 'magnitude', 'desire', 'phase', 'shift', 'achieve', 'simply', 'subtract', 'phasedelay', 'input', 'clock', 'switch', 'turn', 'amplitude', 'zero', 'till', 'clock', 'get', 'great', 'phasedelay', 'special', 'thanks', 'pravallika', 'vinnakota', 'mathworks', 'application', 'support', 'engineer']",4
614,35929,"A HVDC load flow algorithm in Simulink  treated separately from an AC load flow in SimPowerSystems.<p>This demo illustrates a sequential AC-DC load flow method involving iteration between DC and AC solutions. The AC load flow is performed by the load flow tool of the Powergui. The DC load flow solution is computed running a simulation using the HVDC Link Steady-State block that represents the HVDC Link in steady-state operation. It is now possible (but not demonstrated here) to include a second HVDC link in the network. A script controls the whole process and iterates until the convergence criteria for the AC and DC load flows have been reached simultaneously. The parameters used by the script are defined in the block Sequential Load Flow Param embedded in the network model LF_AC29bus_HVDCdemo_V2_1.slx.The load flows results are printed in report file(s) specified by the user. To execute the script, open the model and click âComputeâ in the block Sequential Load Flow Para. Open the Demo Info block to get a description of the AC-DC network as well as info on the sequential method.This solution technique can be extended to any number of HVDC links connected inside the same AC system or between isolated AC systems</p>electric_motor_control,power_conversion_control,power_electronics_control,ac generators,acdc,converters,dc grid,hvdc transmission,load flow",2907,183,8,0,3096,hvdc load flow algorithm treat separately load flow simpowersystems demo illustrate sequential load flow method involve iteration solution load flow perform load flow tool powergui load flow solution compute run hvdc link steady state block represent hvdc link steady state operation possible demonstrated include second hvdc link network script control whole process iterates convergence criterion load flow reach parameter script define block sequential load flow param embed network bus hvdcdemo slx load flow result printed report file specify user execute script open click compute block sequential load flow para open demo info block get description network well info sequential method solution technique extend number hvdc link connect inside isolated systemselectric motor controlpower conversion controlpower electronics controlac gridhvdc flow,"['hvdc', 'load', 'flow', 'algorithm', 'treat', 'separately', 'load', 'flow', 'simpowersystems', 'demo', 'illustrate', 'sequential', 'load', 'flow', 'method', 'involve', 'iteration', 'solution', 'load', 'flow', 'perform', 'load', 'flow', 'tool', 'powergui', 'load', 'flow', 'solution', 'compute', 'run', 'hvdc', 'link', 'steady', 'state', 'block', 'represent', 'hvdc', 'link', 'steady', 'state', 'operation', 'possible', 'demonstrated', 'include', 'second', 'hvdc', 'link', 'network', 'script', 'control', 'whole', 'process', 'iterates', 'convergence', 'criterion', 'load', 'flow', 'reach', 'parameter', 'script', 'define', 'block', 'sequential', 'load', 'flow', 'param', 'embed', 'network', 'bus', 'hvdcdemo', 'slx', 'load', 'flow', 'result', 'printed', 'report', 'file', 'specify', 'user', 'execute', 'script', 'open', 'click', 'compute', 'block', 'sequential', 'load', 'flow', 'para', 'open', 'demo', 'info', 'block', 'get', 'description', 'network', 'well', 'info', 'sequential', 'method', 'solution', 'technique', 'extend', 'number', 'hvdc', 'link', 'connect', 'inside', 'isolated', 'systemselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'gridhvdc', 'flow']",0
615,35954,"Adder, Instrument amplifier, High Pass filter & low pass filter and many others<p>There are a number of basic OP-AMP circuits using SIMSCAPE blockset. Adder, Instrument amplifier, High Pass filter &amp; low pass filter and many others!!</p>adder,biotech,communications,control design,data export,data import,demo,embedded code,hpf,instrument driver,lpf,measurement,modeling,simulation,simulink,system identification",85,0,1,0,87,adder instrument amplifier high pas filter low pas filter many othersthere number basic amp circuit simscape blockset adder instrument amplifier high pas filter amp low pas filter many others designdata exportdata identification,"['adder', 'instrument', 'amplifier', 'high', 'pas', 'filter', 'low', 'pas', 'filter', 'many', 'othersthere', 'number', 'basic', 'amp', 'circuit', 'simscape', 'blockset', 'adder', 'instrument', 'amplifier', 'high', 'pas', 'filter', 'amp', 'low', 'pas', 'filter', 'many', 'others', 'designdata', 'exportdata', 'identification']",0
616,35955,"This model demonstrates a scheme of AM modulation & demodulation.<p>This model demonstrates a scheme of AM modulation &amp; demodulation. The design is done in SIMSCAPE &amp; normal SIMULINK hypercombination. Running the model is FUN!!</p>am,am,communications,data export,data import,demo,demodulation,modulation,signal processing,simulation,simulink,wireless",24,1,2,0,25,demonstrates scheme modulation demodulation demonstrate scheme modulation amp demodulation design simscape amp normal run fun exportdata,"['demonstrates', 'scheme', 'modulation', 'demodulation', 'demonstrate', 'scheme', 'modulation', 'amp', 'demodulation', 'design', 'simscape', 'amp', 'normal', 'run', 'fun', 'exportdata']",0
617,35963,"IEEE 1459-2000 Power Definitions<p><a href=""http://riunet.upv.es/handle/10251/8345Link"">http://riunet.upv.es/handle/10251/8345Link</a> above describes a Phd Thesis, I've extracted chapter 5, sinusoidal power supply and desbalanced resistive load.I've performed all IEEE power definitions</p>simulation",528,0,1,0,490,iee power definitionshttp riunet upv handle link describe phd thesis extract chapter sinusoidal power supply desbalanced resistive load perform iee power,"['iee', 'power', 'definitionshttp', 'riunet', 'upv', 'handle', 'link', 'describe', 'phd', 'thesis', 'extract', 'chapter', 'sinusoidal', 'power', 'supply', 'desbalanced', 'resistive', 'load', 'perform', 'iee', 'power']",4
618,35966,"In this model SPWM based inverter is shown.<p>A Simple SPWM based single phase bridge inverter.</p>harmonics reduction,inverter,spwm,spwm,spwm,inverter",30,0,1,0,33,spwm base inverter show simple spwm base single phase bridge inverter harmonic,"['spwm', 'base', 'inverter', 'show', 'simple', 'spwm', 'base', 'single', 'phase', 'bridge', 'inverter', 'harmonic']",1
619,35967,"Real-time software concerning the domains of the signal processing, feedback and regulation<p>Ces logiciels fonctionnent avec une carte d'acquisition en entrÃ©es et sorties, en temps rÃ©el.Description: On peut classer ces logiciels en 4 catÃ©gories :   * Enregistrement   * Asservissements   * Identification de processus   * Traitement du signal-1- EnregistrementOn peut :*Faire des enregistrements Y = f(t), de 1 Ã  4 voies simultanÃ©ment. Les tensions visualisÃ©es peuvent Ãªtre rÃ©fÃ©rencÃ©es Ã  la masse ou Ãªtre diffÃ©rentielles.*Faire des enregistrements Y = f(X). Les tensions peuvent Ãªtre Ã©galement rÃ©fÃ©rencÃ©es Ã  la masse ou diffÃ©rentielles.-2- AsservissementsCette catÃ©gorie regroupe 3 logiciels  *Correcteurs analogiques programmÃ©s    (PID, PIR, prÃ©dicteur de Smith, R(p) quelconque, correction tachymÃ©trique)  *Correcteurs numÃ©riques  *Reconstruction du flux d'une machine asynchroneIl est possible d'enregistrer la rÃ©ponse du systÃ¨me bouclÃ© et d'imprimer cette rÃ©ponse, sans interrompre le fonctionnement du correcteur.-3- IdentificationCette catÃ©gorie regroupe 3 logiciels   *Identification Ã  partir de la rÃ©ponse indicielle par exemple : processus d'ordre n avec ou sans retard   *RÃ©ponse impulsionnelle (corrÃ©lation avec un bruit blanc ou une sÃ©quence binaire pseudo-alÃ©atoire)   *ModÃ¨le : comparaison processus et modÃ¨le (Simulink par exemple)-4- Traitement du signalCette catÃ©gorie regroupe 5 logiciels   *Filtres numÃ©riques(FIR ou IIR)   *FFT (d'un signal acquis ou simulÃ© ou de 2 signaux)   *FFT inverse (reconstruction d'un signal visible Ã  l'oscilloscope Ã  partir de son spectre bilatÃ©ral)   *Harmoniques(reconstruction d'un signal visible Ã  l'oscilloscope en ajoutant petit Ã  petit lesharmoniques)   *SynthÃ¨se de filtres actifs (ne fonctionne pas en temps rÃ©el) </p>signal processingcontrol and regulationreal time,matlab,matlab coder,realtime windows target,simulink",1998,234,4,7,1782,real time software concern domain signal processing feedback regulationces logiciels fonctionnent avec une carte acquisition entrÃ©es sortie temps rÃ©el description peut classer logiciels catÃ©gories enregistrement asservissements identification processus traitement signal peut faire des enregistrements voies les tension visualisÃ©es peuvent Ãªtre rÃ©fÃ©rencÃ©es masse Ãªtre diffÃ©rentielles faire enregistrements tension peuvent Ãªtre Ã©galement rÃ©fÃ©rencÃ©es masse diffÃ©rentielles catÃ©gorie regroupe logiciels correcteurs analogiques programmÃ©s pid pir prÃ©dicteur smith quelconque correction tachymÃ©trique correcteurs numÃ©riques reconstruction flux une machine asynchroneil est possible enregistrer rÃ©ponse systÃ¨me bouclÃ© imprimer cette rÃ©ponse sans interrompre fonctionnement correcteur catÃ©gorie regroupe logiciels identification partir rÃ©ponse indicielle par exemple processus ordre avec sans retard rÃ©ponse impulsionnelle corrÃ©lation avec bruit blanc une sÃ©quence binaire pseudo alÃ©atoire modÃ¨le comparaison processus modÃ¨le par exemple traitement signalcette catÃ©gorie regroupe logiciels filtres numÃ©riques fir iir fft signal acquis signaux fft inverse reconstruction signal visible oscilloscope partir son spectre bilatÃ©ral harmoniques reconstruction signal visible oscilloscope ajoutant petit petit lesharmoniques synthÃ¨se filtres actifs fonctionne temp rÃ©el signal regulationreal coderrealtime window,"['real', 'time', 'software', 'concern', 'domain', 'signal', 'processing', 'feedback', 'regulationces', 'logiciels', 'fonctionnent', 'avec', 'une', 'carte', 'acquisition', 'entrÃ©es', 'sortie', 'temps', 'rÃ©el', 'description', 'peut', 'classer', 'logiciels', 'catÃ©gories', 'enregistrement', 'asservissements', 'identification', 'processus', 'traitement', 'signal', 'peut', 'faire', 'des', 'enregistrements', 'voies', 'les', 'tension', 'visualisÃ©es', 'peuvent', 'Ãªtre', 'rÃ©fÃ©rencÃ©es', 'masse', 'Ãªtre', 'diffÃ©rentielles', 'faire', 'enregistrements', 'tension', 'peuvent', 'Ãªtre', 'Ã©galement', 'rÃ©fÃ©rencÃ©es', 'masse', 'diffÃ©rentielles', 'catÃ©gorie', 'regroupe', 'logiciels', 'correcteurs', 'analogiques', 'programmÃ©s', 'pid', 'pir', 'prÃ©dicteur', 'smith', 'quelconque', 'correction', 'tachymÃ©trique', 'correcteurs', 'numÃ©riques', 'reconstruction', 'flux', 'une', 'machine', 'asynchroneil', 'est', 'possible', 'enregistrer', 'rÃ©ponse', 'systÃ¨me', 'bouclÃ©', 'imprimer', 'cette', 'rÃ©ponse', 'sans', 'interrompre', 'fonctionnement', 'correcteur', 'catÃ©gorie', 'regroupe', 'logiciels', 'identification', 'partir', 'rÃ©ponse', 'indicielle', 'par', 'exemple', 'processus', 'ordre', 'avec', 'sans', 'retard', 'rÃ©ponse', 'impulsionnelle', 'corrÃ©lation', 'avec', 'bruit', 'blanc', 'une', 'sÃ©quence', 'binaire', 'pseudo', 'alÃ©atoire', 'modÃ¨le', 'comparaison', 'processus', 'modÃ¨le', 'par', 'exemple', 'traitement', 'signalcette', 'catÃ©gorie', 'regroupe', 'logiciels', 'filtres', 'numÃ©riques', 'fir', 'iir', 'fft', 'signal', 'acquis', 'signaux', 'fft', 'inverse', 'reconstruction', 'signal', 'visible', 'oscilloscope', 'partir', 'son', 'spectre', 'bilatÃ©ral', 'harmoniques', 'reconstruction', 'signal', 'visible', 'oscilloscope', 'ajoutant', 'petit', 'petit', 'lesharmoniques', 'synthÃ¨se', 'filtres', 'actifs', 'fonctionne', 'temp', 'rÃ©el', 'signal', 'regulationreal', 'coderrealtime', 'window']",8
620,35980,"A SimPowerSystems model is used to calculate switching and conduction losses in a buck converter.<p>A 12-kW buck converter is implemented by a half-bridge IGBT detailed model. Based on the thermal characteristics of the selected IGBT module, both switching and conduction losses are calculated. Thermal blocks of the Simscape foundation library are used to model the heat dissipation provided by the heat sink.  The simulation illustrates the impact of switching frequency and load on the total losses of the buck converter.You can select among three different commercial IGBT modules. A procedure given in .m files allows you to add your own device characteristics in the provided component libraries.A Help file containing useful information on the model is also included. Authors: Pierre Giroux, Gilbert Sybille, Olivier TremblayHydro-Quebec Research Institute (IREQ)</p>pick of the week,potw,buck converter,conduction losses,diode,igbt module,loss calculation,switching losses,thermal model,power_conversion_control,power_electronics_control",85,6,3,1,73,simpowersystems calculate switch conduction loss buck converter buck converter implement half bridge igbt detail base thermal characteristic select igbt module switch conduction loss calculate thermal block simscape foundation heat dissipation provide heat sink illustrate impact switch frequency load total loss buck converter select among three different commercial igbt module procedure give file allow add device characteristic provide component help file contain useful information also include author pierre giroux gilbert sybille olivier tremblayhydro quebec research institute ireq pick weekpotwbuck lossesdiodeigbt moduleloss lossesthermal modelpower conversion controlpower electronics control,"['simpowersystems', 'calculate', 'switch', 'conduction', 'loss', 'buck', 'converter', 'buck', 'converter', 'implement', 'half', 'bridge', 'igbt', 'detail', 'base', 'thermal', 'characteristic', 'select', 'igbt', 'module', 'switch', 'conduction', 'loss', 'calculate', 'thermal', 'block', 'simscape', 'foundation', 'heat', 'dissipation', 'provide', 'heat', 'sink', 'illustrate', 'impact', 'switch', 'frequency', 'load', 'total', 'loss', 'buck', 'converter', 'select', 'among', 'three', 'different', 'commercial', 'igbt', 'module', 'procedure', 'give', 'file', 'allow', 'add', 'device', 'characteristic', 'provide', 'component', 'help', 'file', 'contain', 'useful', 'information', 'also', 'include', 'author', 'pierre', 'giroux', 'gilbert', 'sybille', 'olivier', 'tremblayhydro', 'quebec', 'research', 'institute', 'ireq', 'pick', 'weekpotwbuck', 'lossesdiodeigbt', 'moduleloss', 'lossesthermal', 'modelpower', 'conversion', 'controlpower', 'electronics', 'control']",4
621,35984,"this simple system illustrates  the effect of Doppler frequency on signal <p>transmitter : transmitted sin wave with freq kHztarget :changes the the freq of transmitted signal receiver: receive the signal and produce Doppler frequency </p>signal processing,simulink",16,3,2,0,14,simple illustrate effect doppler frequency signal transmitter transmit sin wave freq khztarget change freq transmit signal receiver receive signal produce doppler frequency signal,"['simple', 'illustrate', 'effect', 'doppler', 'frequency', 'signal', 'transmitter', 'transmit', 'sin', 'wave', 'freq', 'khztarget', 'change', 'freq', 'transmit', 'signal', 'receiver', 'receive', 'signal', 'produce', 'doppler', 'frequency', 'signal']",0
622,35990,"1-ph controllable and uncontrollable rectifiers and Inverters with and without Freewheeling diode<p>controllable and uncontrollable bridge rectifiers are designed with and without freewheeling diode and considered both R and RL load. Inverter model presents based on PWM and SPWM technique. from this file we can compare R and RL load and also with and without freewheeling diode effects in rectifiers and also PWM and SPWM in inverter with R and RL load</p>freewheeling diode,inverter,pwm,r and rl load,rectifiers,spwm,electric_motor_control,power_conversion_control,power_electronics_control",166,0,1,0,177,controllable uncontrollable rectifier inverter without freewheel uncontrollable bridge rectifier design without freewheel diode consider load inverter present base pwm spwm technique file compare load also without freewheel diode effect rectifier also pwm spwm inverter motor controlpower conversion controlpower electronics control,"['controllable', 'uncontrollable', 'rectifier', 'inverter', 'without', 'freewheel', 'uncontrollable', 'bridge', 'rectifier', 'design', 'without', 'freewheel', 'diode', 'consider', 'load', 'inverter', 'present', 'base', 'pwm', 'spwm', 'technique', 'file', 'compare', 'load', 'also', 'without', 'freewheel', 'diode', 'effect', 'rectifier', 'also', 'pwm', 'spwm', 'inverter', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
623,35999,"Controlling the 4-tank problem using a non linear controller<p>This simulaiton demonstrates the capabilities of the APmonitor non linear controller on the non-linear 4 tank process. The goal of the project is to develope a fast non linear controller (to replace the traditional PID or state space controller). This simulation was able to run at 5 Hz near the server, but is set to 2Hz because of overhead associated with internet connections. The goal is to develope a non linear controller that can operate near 50 Hz. </p>control design,non linear controls,optimization,simulation,simulink,simulation,simulation",80,3,2,0,83,control tank problem non linear controllerthis demonstrate capability apmonitor non linear controller non linear tank process goal project develope fast non linear controller replace traditional pid state space controller able run near server set overhead associated internet connection goal develope non linear controller operate near control designnon linear,"['control', 'tank', 'problem', 'non', 'linear', 'controllerthis', 'demonstrate', 'capability', 'apmonitor', 'non', 'linear', 'controller', 'non', 'linear', 'tank', 'process', 'goal', 'project', 'develope', 'fast', 'non', 'linear', 'controller', 'replace', 'traditional', 'pid', 'state', 'space', 'controller', 'able', 'run', 'near', 'server', 'set', 'overhead', 'associated', 'internet', 'connection', 'goal', 'develope', 'non', 'linear', 'controller', 'operate', 'near', 'control', 'designnon', 'linear']",4
624,36018,"Want to change your Mask fields based on a mask value when (pull down) when you select it?<p>This demo shows how to use the mask button callback to edit the ""visibility"" field of the mask parameters, essentially 'storing' the 'hidden' values of the other fields.  The effect is that the fields of the mask change based on the selection of some other mask variable.Oh yeah.. its also pretty handy dandy(please leave feedback)</p>pick of the week,potw,mask field pulldown simulink callback,mask field pulldown simulink callback",5,1,2,0,3,want change mask field base mask value pull select demo show mask button callback edit visibility field mask parameter essentially store hidden value field effect field mask change base selection mask variable yeah also pretty handy dandy please leave feedback pick weekpotwmask field pulldown callbackmask field pulldown callback,"['want', 'change', 'mask', 'field', 'base', 'mask', 'value', 'pull', 'select', 'demo', 'show', 'mask', 'button', 'callback', 'edit', 'visibility', 'field', 'mask', 'parameter', 'essentially', 'store', 'hidden', 'value', 'field', 'effect', 'field', 'mask', 'change', 'base', 'selection', 'mask', 'variable', 'yeah', 'also', 'pretty', 'handy', 'dandy', 'please', 'leave', 'feedback', 'pick', 'weekpotwmask', 'field', 'pulldown', 'callbackmask', 'field', 'pulldown', 'callback']",5
625,36037,"Cyclo-converter is a device which controls the input frequency to a desired level of frequency.<p>Cyclo-converters have great demand in the present modern control systems where speed control of induction motors in electric traction(v/f method) is carried out using cyclo-converters.Cyclo-converters are of two types 1. Step Up cycloconverter 2. Step Down cycloconverter.The submission is regarding step up cyclo-converter where i/p freq. 50Hz is stepped up to 300Hz,converter consists of GTO's which are carefully triggered using signal builder.Simulink users can always feel free to convey there criticism and suggestions !!</p>power electronics,electric_motor_control,power_electronics_control",22,1,1,0,27,cyclo converter device control input frequency desire level frequency cyclo converter great demand present modern control speed control induction motor electric traction method carry cyclo converter cyclo converter two type step cycloconverter step cycloconverter submission regard step cyclo converter freq step hzconverter consist gto carefully trigger signal builder user always feel free convey criticism suggestion power motor controlpower electronics control,"['cyclo', 'converter', 'device', 'control', 'input', 'frequency', 'desire', 'level', 'frequency', 'cyclo', 'converter', 'great', 'demand', 'present', 'modern', 'control', 'speed', 'control', 'induction', 'motor', 'electric', 'traction', 'method', 'carry', 'cyclo', 'converter', 'cyclo', 'converter', 'two', 'type', 'step', 'cycloconverter', 'step', 'cycloconverter', 'submission', 'regard', 'step', 'cyclo', 'converter', 'freq', 'step', 'hzconverter', 'consist', 'gto', 'carefully', 'trigger', 'signal', 'builder', 'user', 'always', 'feel', 'free', 'convey', 'criticism', 'suggestion', 'power', 'motor', 'controlpower', 'electronics', 'control']",3
626,36063,"softswitching technique<p>AbstractâA new soft-switching boost converter is proposed inthis paper. The conventional boost converter generates switchinglosses at turn ON and OFF, and this causes a reduction in the wholesystemâs efficiency. The proposed boost converter utilizes a softswitchingmethod using an auxiliary circuit with a resonant inductorand capacitor, auxiliary switch, and diodes. Therefore, theproposed soft-switching boost converter reduces switching lossesmore than the conventional hard-switching converter. The efficiency,which is about 91% in hard switching, increases to about96% in the proposed soft-switching converter. In this paper, theperformance of the proposed soft-switching boost converter is verifiedthrough the theoretical analysis, simulation, and experimentalresults.</p>power_conversion_control,power_electronics_control,simulink",18,0,1,0,17,softswitching new soft switch boost converter propose inthis paper conventional boost converter generate switchinglosses turn cause reduction wholesystems efficiency propose boost converter utilizes auxiliary circuit resonant inductorand capacitor auxiliary switch diode therefore theproposed soft switch boost converter reduces switch lossesmore conventional hard switch converter efficiencywhich hard switching increase propose soft switch converter paper theperformance propose soft switch boost converter verifiedthrough theoretical analysis power conversion controlpower electronics,"['softswitching', 'new', 'soft', 'switch', 'boost', 'converter', 'propose', 'inthis', 'paper', 'conventional', 'boost', 'converter', 'generate', 'switchinglosses', 'turn', 'cause', 'reduction', 'wholesystems', 'efficiency', 'propose', 'boost', 'converter', 'utilizes', 'auxiliary', 'circuit', 'resonant', 'inductorand', 'capacitor', 'auxiliary', 'switch', 'diode', 'therefore', 'theproposed', 'soft', 'switch', 'boost', 'converter', 'reduces', 'switch', 'lossesmore', 'conventional', 'hard', 'switch', 'converter', 'efficiencywhich', 'hard', 'switching', 'increase', 'propose', 'soft', 'switch', 'converter', 'paper', 'theperformance', 'propose', 'soft', 'switch', 'boost', 'converter', 'verifiedthrough', 'theoretical', 'analysis', 'power', 'conversion', 'controlpower', 'electronics']",3
627,36074,"A simple example arithmetic logic unit (2-bit ALU) that does AND, OR, NOT, and addition<p>f0 and f1 stands for 1 operationf1 f0 operation===============0  0  addition0  1  NOT of A1  0  OR1  1  AND</p>simulink",88,7,3,0,105,simple example arithmetic logic unit bit alu additionf stand operationf operation addition,"['simple', 'example', 'arithmetic', 'logic', 'unit', 'bit', 'alu', 'additionf', 'stand', 'operationf', 'operation', 'addition']",5
628,36116,"wind power generation based on Permanent Magnet Synchronous Generator<p>2-mass model based wind turbine is used in this system for providing mechanical torque/input to Permanent Magnet Synchronous Generator. 3-phase power generated from this system, changing wind velocity is also presented in this model.</p>2mass model,2mass model,2mass model,2mass model,2mass model,permanent magnet synchronous generator,pmsg,wind,wind turbine,pmsg,hello sir,2mass model,wind turbine,2mass model,hello sir,2mass model,permanent magnet synchronous generator",99,5,4,0,124,wind power generation base permanent magnet synchronous generator mass base wind turbine provide mechanical torque input permanent magnet synchronous generator phase power generate change wind velocity also present mass mass mass mass mass modelpermanent magnet synchronous sir mass modelwind turbine mass modelhello sir mass modelpermanent magnet synchronous generator,"['wind', 'power', 'generation', 'base', 'permanent', 'magnet', 'synchronous', 'generator', 'mass', 'base', 'wind', 'turbine', 'provide', 'mechanical', 'torque', 'input', 'permanent', 'magnet', 'synchronous', 'generator', 'phase', 'power', 'generate', 'change', 'wind', 'velocity', 'also', 'present', 'mass', 'mass', 'mass', 'mass', 'mass', 'modelpermanent', 'magnet', 'synchronous', 'sir', 'mass', 'modelwind', 'turbine', 'mass', 'modelhello', 'sir', 'mass', 'modelpermanent', 'magnet', 'synchronous', 'generator']",4
629,36117,"Visualize wave propagation through media with different impedances and propagation velocities.<p>Wave Propagation is a natural phenomenon that is important in many physical systems. Text books leave much to be desired regarding visualization of wave propagation since they are not animated.  The package has a sequence of 6 models that have both a transient pulse excitation as well as a sine wave excitation.  The model sequence starts with a one transmission line version that has user definable source and load impedance and evolves to a three line model using an exponentially tapered matching section. Using these models, the student can gain an intuitive understanding of transmission, reflection, superposition, impedance matching, Standing Wave Ratio, and many other wave phenomenons. This work was inspired by the 1959 Bell Labs film on Waves: <a href=""http://techchannel.att.com/play-video.cfm/2011/3/7/AT&amp;T-Archives-Similarities-of-Wave-Behavior"">http://techchannel.att.com/play-video.cfm/2011/3/7/AT&amp;T-Archives-Similarities-of-Wave-Behavior</a></p>communications,education,electromagnetic,physics,propagation,reflection,standing waves,wave",1992,90,3,0,1896,visualize wave propagation medium different impedance propagation velocity wave propagation natural phenomenon important many physical text book leave much desire regard visualization wave propagation since animate package sequence transient pulse excitation well sine wave excitation sequence start one transmission line version user definable source load impedance evolves three line exponentially taper matching section student gain intuitive understanding transmission reflection superposition impedance match stand wave ratio many wave phenomenon work inspire bell lab film wave http techchannel att com play video cfm amp archive similarity wave waveswave,"['visualize', 'wave', 'propagation', 'medium', 'different', 'impedance', 'propagation', 'velocity', 'wave', 'propagation', 'natural', 'phenomenon', 'important', 'many', 'physical', 'text', 'book', 'leave', 'much', 'desire', 'regard', 'visualization', 'wave', 'propagation', 'since', 'animate', 'package', 'sequence', 'transient', 'pulse', 'excitation', 'well', 'sine', 'wave', 'excitation', 'sequence', 'start', 'one', 'transmission', 'line', 'version', 'user', 'definable', 'source', 'load', 'impedance', 'evolves', 'three', 'line', 'exponentially', 'taper', 'matching', 'section', 'student', 'gain', 'intuitive', 'understanding', 'transmission', 'reflection', 'superposition', 'impedance', 'match', 'stand', 'wave', 'ratio', 'many', 'wave', 'phenomenon', 'work', 'inspire', 'bell', 'lab', 'film', 'wave', 'http', 'techchannel', 'att', 'com', 'play', 'video', 'cfm', 'amp', 'archive', 'similarity', 'wave', 'waveswave']",5
630,36132,"This is a complete simulink model of a three phase synchronous model with the effect of load.<p>A complete analysis of a three phase synchronous motor is done.</p>dq model,dq model,synchronous motor,synchronous motor,dq model,synchronous motor,torque,electric_motor_control,power_electronics_control",94,5,3,0,113,complete three phase synchronous effect load complete analysis three phase synchronous motor modeldq motordq motor controlpower electronics control,"['complete', 'three', 'phase', 'synchronous', 'effect', 'load', 'complete', 'analysis', 'three', 'phase', 'synchronous', 'motor', 'modeldq', 'motordq', 'motor', 'controlpower', 'electronics', 'control']",1
631,36152,"A Simulink library for wavelet processing on 1-D signals<p>Includes elementary blocks of filter banks, analysis and reconstruction blocks with variable scale (up to 8), demos, thresholding, differentiation in wavelet bases,redundant wavelet processing. This is a update to a previous version of SimuWave.Binary .mex files must be downloaded separately (see README file).</p>signal processing,simulink,wavelets",122,45,3,35,125,wavelet process signalsincludes elementary block filter bank analysis reconstruction block variable scale demo thresholding differentiation wavelet basesredundant wavelet processing update previous version simuwave binary mex file must download separately see readme file signal,"['wavelet', 'process', 'signalsincludes', 'elementary', 'block', 'filter', 'bank', 'analysis', 'reconstruction', 'block', 'variable', 'scale', 'demo', 'thresholding', 'differentiation', 'wavelet', 'basesredundant', 'wavelet', 'processing', 'update', 'previous', 'version', 'simuwave', 'binary', 'mex', 'file', 'must', 'download', 'separately', 'see', 'readme', 'file', 'signal']",0
632,36158,"SimPowerSystems(SPS) and Simscape are used to calculate losses in a 3-phase, 3-level inverter.<p>From a +/- 1800 volts DC source, a 400-kW, 3-phase 3-level inverter delivers variable power to adistribution power system. The inverter output is connected to the 25-kV, 40 MVA, 50-Hz systemthrough a 2200 V / 25 kV transformer.Each 3-level leg of the 3-phase 400-kW inverter comprises three commercial half-bridge IGBT modules. Phase-A leg is implemented using the  âHalf-bridge IGBT with Loss Calculationâ block provided in a SPS local library. Based on the thermal characteristics of the selected IGBT module, both switching and conduction losses are calculated. Thermal blocks of the Simscape foundation library are used to model the heat dissipation provided by the heat sink.  The simulation illustrates the achievable output power versus switching frequency for the 3-phase, 3-level inverter and compares results with the manufacturerâs reference document. A Help file containing useful information on the model is also included. Authors: Pierre Giroux, Gilbert Sybille, Olivier TremblayHydro-Quebec Research Institute (IREQ)</p>conduction losses,igbt module,loss calculation,npc converter,power electronics,pwm,switching frequency,switching losses,thermal model,three level inverter,three phase inverter,conduction losses,igbt module,power_conversion_control,power_electronics_control",330,23,4,3,359,simpowersystems sps simscape calculate loss phase level inverter volt source phase level inverter delivers variable power adistribution power inverter output connect mva systemthrough transformer level leg phase inverter comprise three commercial half bridge igbt module phase leg implement half bridge igbt loss calculation block provide sps local base thermal characteristic select igbt module switch conduction loss calculate thermal block simscape foundation heat dissipation provide heat sink illustrate achievable output power versus switch frequency phase level inverter compare result manufacturer reference document help file contain useful information also include author pierre giroux gilbert sybille olivier tremblayhydro quebec research institute ireq conduction lossesigbt moduleloss calculationnpc converterpower lossesthermal modelthree level inverterthree phase lossesigbt modulepower conversion controlpower electronics control,"['simpowersystems', 'sps', 'simscape', 'calculate', 'loss', 'phase', 'level', 'inverter', 'volt', 'source', 'phase', 'level', 'inverter', 'delivers', 'variable', 'power', 'adistribution', 'power', 'inverter', 'output', 'connect', 'mva', 'systemthrough', 'transformer', 'level', 'leg', 'phase', 'inverter', 'comprise', 'three', 'commercial', 'half', 'bridge', 'igbt', 'module', 'phase', 'leg', 'implement', 'half', 'bridge', 'igbt', 'loss', 'calculation', 'block', 'provide', 'sps', 'local', 'base', 'thermal', 'characteristic', 'select', 'igbt', 'module', 'switch', 'conduction', 'loss', 'calculate', 'thermal', 'block', 'simscape', 'foundation', 'heat', 'dissipation', 'provide', 'heat', 'sink', 'illustrate', 'achievable', 'output', 'power', 'versus', 'switch', 'frequency', 'phase', 'level', 'inverter', 'compare', 'result', 'manufacturer', 'reference', 'document', 'help', 'file', 'contain', 'useful', 'information', 'also', 'include', 'author', 'pierre', 'giroux', 'gilbert', 'sybille', 'olivier', 'tremblayhydro', 'quebec', 'research', 'institute', 'ireq', 'conduction', 'lossesigbt', 'moduleloss', 'calculationnpc', 'converterpower', 'lossesthermal', 'modelthree', 'level', 'inverterthree', 'phase', 'lossesigbt', 'modulepower', 'conversion', 'controlpower', 'electronics', 'control']",4
633,36162,"The Radial Basis Function (RBF) using pseudo-inverse method for Simulink.<p>The Radial Basis Function (RBF) with fixed centers selected at random andpseudo-inverse method for Simulink.Marcelo Augusto Costa FernandesDCA - CT - <a href=""mailto:UFRNmfernandes@dca.ufrn.br"">UFRNmfernandes@dca.ufrn.br</a></p>ann,artificial neural network,pseudoinverse,radial basis function,rbf,simulink",46,2,2,0,47,radial basis function rbf pseudo inverse method radial basis function rbf fix center select random andpseudo inverse method marcelo augusto costa fernandesdca ufrnmfernandes dca ufrn brannartificial neural basis,"['radial', 'basis', 'function', 'rbf', 'pseudo', 'inverse', 'method', 'radial', 'basis', 'function', 'rbf', 'fix', 'center', 'select', 'random', 'andpseudo', 'inverse', 'method', 'marcelo', 'augusto', 'costa', 'fernandesdca', 'ufrnmfernandes', 'dca', 'ufrn', 'brannartificial', 'neural', 'basis']",8
634,36163,"The Radial Basis Function (RBF) with LMS algorithm for Simulink.<p>The Radial Basis Function (RBF)Batch-mode trainingFixed centers selected at randomThe Gaussian basis functionsComputing the output weights with LMS algorithmMarcelo Augusto Costa FernandesDCA - CT - <a href=""mailto:UFRNmfernandes@dca.ufrn.br"">UFRNmfernandes@dca.ufrn.br</a></p>ann,ann,artificial neural network,lms,radial basis function,rbf,simulink",54,3,2,0,54,radial basis function rbf algorithm radial basis function rbf batch mode trainingfixed center select randomthe gaussian basis output weight lms augusto costa fernandesdca ufrnmfernandes dca ufrn neural basis,"['radial', 'basis', 'function', 'rbf', 'algorithm', 'radial', 'basis', 'function', 'rbf', 'batch', 'mode', 'trainingfixed', 'center', 'select', 'randomthe', 'gaussian', 'basis', 'output', 'weight', 'lms', 'augusto', 'costa', 'fernandesdca', 'ufrnmfernandes', 'dca', 'ufrn', 'neural', 'basis']",8
635,36191,"abc to dq conversion by using Park and Clark transformation<p>this model explain how to convert ABC to Alpha-Beeta to DQ model using clark and park transformation.</p>abc,abc,alpha,beeta,clark,control,dq,park,transformation,abc",149,9,4,0,185,abc conversion park clark explain convert abc alpha beeta clark park transformation,"['abc', 'conversion', 'park', 'clark', 'explain', 'convert', 'abc', 'alpha', 'beeta', 'clark', 'park', 'transformation']",8
636,36258,"This Model has covered most of the physical layer blocks which is used in Zigbee Protocol.<p>In the transmitter, spreading is done using a PN Sequence at chip rate of 2 Mcps and then the spreaded bits are modulated using OQPSK modulator. In the receiver side, OQPSK demodulation is done first,then the spreaded bits are despreaded using the delayed version of PN chip sequence. The delay in transmitted and received bits is 4us.</p>communications,oqpsk,signal processing,simulink,spreading,zigbee,oqpsk,spreading,communications,oqpsk,communications",55,6,3,0,50,covered physical layer block zigbee protocol transmitter spread sequence chip rate mcps spread bit modulate oqpsk modulator receiver side oqpsk demodulation firstthen spread bit despreaded delayed version chip sequence delay transmit receive bit,"['covered', 'physical', 'layer', 'block', 'zigbee', 'protocol', 'transmitter', 'spread', 'sequence', 'chip', 'rate', 'mcps', 'spread', 'bit', 'modulate', 'oqpsk', 'modulator', 'receiver', 'side', 'oqpsk', 'demodulation', 'firstthen', 'spread', 'bit', 'despreaded', 'delayed', 'version', 'chip', 'sequence', 'delay', 'transmit', 'receive', 'bit']",8
637,36266,"This is (source code of) a Simulink plotting tool similar to standard Simulink Scope.<p>This is a Simulink plotting tool similar to standard Simulink Scope, but it has the feature of switching individual curves on and off while looking at the plot (by clicking on the plot icons). Supports only one plotting area, but multiple curves can be plotted by making a vector of their signals. It is not very stable and serves mostly as an  example of how to use Qt GUI inside an S-Function.The Visual Studio 2010 solution contains 2 projects:1) QwtScopeSFun - compiles the S Function MEX file. Unfortunately I got only Debug binaries to work.2) QwtScopeDev - this project compiles the same code to an exe for easier testing and development.The MEX file will be compiled into the Simulink/ directory. test.mdl is an example of using the S-Function.Because I should not upload binary files, you need to make sure you have the following DLL files in path: qwtmathmld.dll qwtd.dll QtCore4d.dll QtSvgd4.dll QtGuid4.dll msvcp100d.dll msvcr100d.dll msvcr90d.dll msvcp90d.dll msvcm90d.dllIf you have any questions, ask them in the comments and I will hopefully be able to help you.</p>measurement,simulink",4,0,1,0,3,source code plot tool similar standard scope plot tool similar standard scope feature switch individual curve look plot click plot icon support one plotting area multiple curve plot make vector signal stable serf mostly example gui inside function visual studio solution contain project qwtscopesfun compiles function mex file unfortunately get debug binary work qwtscopedev project compiles code exe easy test development mex file compile directory test mdl example function upload binary file need make sure follow dll file path qwtmathmld dll qwtd dll qtcore dll qtsvgd dll qtguid dll msvcp dll msvcr dll msvcr dll msvcp dll msvcm dllif question ask comment hopefully able help,"['source', 'code', 'plot', 'tool', 'similar', 'standard', 'scope', 'plot', 'tool', 'similar', 'standard', 'scope', 'feature', 'switch', 'individual', 'curve', 'look', 'plot', 'click', 'plot', 'icon', 'support', 'one', 'plotting', 'area', 'multiple', 'curve', 'plot', 'make', 'vector', 'signal', 'stable', 'serf', 'mostly', 'example', 'gui', 'inside', 'function', 'visual', 'studio', 'solution', 'contain', 'project', 'qwtscopesfun', 'compiles', 'function', 'mex', 'file', 'unfortunately', 'get', 'debug', 'binary', 'work', 'qwtscopedev', 'project', 'compiles', 'code', 'exe', 'easy', 'test', 'development', 'mex', 'file', 'compile', 'directory', 'test', 'mdl', 'example', 'function', 'upload', 'binary', 'file', 'need', 'make', 'sure', 'follow', 'dll', 'file', 'path', 'qwtmathmld', 'dll', 'qwtd', 'dll', 'qtcore', 'dll', 'qtsvgd', 'dll', 'qtguid', 'dll', 'msvcp', 'dll', 'msvcr', 'dll', 'msvcr', 'dll', 'msvcp', 'dll', 'msvcm', 'dllif', 'question', 'ask', 'comment', 'hopefully', 'able', 'help']",0
638,36289,"Sine wave pulse width modulation inverter<p>Sine wave pulse width modulation inverter uses sine wave as reference and triangular wave as carrier wave.</p>power electronics,simulation,simulink,spwm inverter,electric_motor_control,power_conversion_control,power_electronics_control,power electronics",31,0,1,0,40,sine wave pulse width modulation invertersine wave pulse width modulation inverter sine wave reference triangular wave carrier wave power motor controlpower conversion controlpower electronics controlpower electronics,"['sine', 'wave', 'pulse', 'width', 'modulation', 'invertersine', 'wave', 'pulse', 'width', 'modulation', 'inverter', 'sine', 'wave', 'reference', 'triangular', 'wave', 'carrier', 'wave', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",6
639,36291,"Simplest model to  calculate the PSNR value between two 2d images of same dimension. <p>Just double click on input panel to PSNRand browse the two images for which you want to calculate the PSNR.</p>image processing,noise,psnr,signal to noise,simulink,snr",4,0,1,0,3,simple calculate psnr value two image dimension double click input panel psnrand browse two image want calculate psnr image,"['simple', 'calculate', 'psnr', 'value', 'two', 'image', 'dimension', 'double', 'click', 'input', 'panel', 'psnrand', 'browse', 'two', 'image', 'want', 'calculate', 'psnr', 'image']",0
640,36306,"A 4-Bit Synchrnous Counter Using JK Flip-Flops<p>This counter is implemented using four JK Flip-Flops from Simulink Extras Flip Flops Library.As input there is a constant Count Enable.If it is set to 1 then the counter will be working, otherwise (on 0) not.On 16 clock tick the Output Carry will be enabled. After that the counting will start all over again.</p>simulink,simulink",12,0,1,0,26,bit synchrnous counter flip flopsthis counter implement four flip flop extras flip flop input constant count enable set counter work otherwise clock tick output carry enable counting start,"['bit', 'synchrnous', 'counter', 'flip', 'flopsthis', 'counter', 'implement', 'four', 'flip', 'flop', 'extras', 'flip', 'flop', 'input', 'constant', 'count', 'enable', 'set', 'counter', 'work', 'otherwise', 'clock', 'tick', 'output', 'carry', 'enable', 'counting', 'start']",5
641,36307,"This is explained about how to interface battery system with grid.<p>battery is connected to grid through 3-phase inverter. PI based controller is developed for control of inverter according to Line to Line voltage of grid. and load is connected in between grid and battery. 100Km length of transmission is considered here.</p>3 phase system,battery,grid,inverter,pi,pi controller,voltage controller,battery_system_management,power_electronics_control,3 phase system",141,5,4,0,186,explain interface battery grid battery connect grid phase inverter base controller develop control inverter accord line line voltage grid load connect grid battery length transmission consider phase managementpower electronics control phase,"['explain', 'interface', 'battery', 'grid', 'battery', 'connect', 'grid', 'phase', 'inverter', 'base', 'controller', 'develop', 'control', 'inverter', 'accord', 'line', 'line', 'voltage', 'grid', 'load', 'connect', 'grid', 'battery', 'length', 'transmission', 'consider', 'phase', 'managementpower', 'electronics', 'control', 'phase']",1
642,36329,"A nonlinear identification scheme is provided for a LTI-system with a feedback-nonlinearity<p>A nonlinear identification scheme is provided for a LTI-system with a feedback-nonlinearity, which depends on the input and LTI-system output. This is especially the case for MEMS, where the electrostatic field depends on the displacement and input voltage. The fact, that the algorithm only requires a matrix inversion and singular value decomposition, makes it possible to use the identification scheme for on-line estimation. There is also no other a-priori knowledge about the system, except the order, needed.For further information see:&lt; <a href=""http://www.qucosa.de/fileadmin/data/qucosa/documents/5066/data/index.html"">http://www.qucosa.de/fileadmin/data/qucosa/documents/5066/data/index.html</a> &gt;</p>accelerometer,identification,mems,micromirror,nonlinearity",40,10,3,0,32,nonlinear identification scheme provide lti feedback nonlinearitya nonlinear identification scheme provide lti feedback nonlinearity depend input lti output especially case mems electrostatic field depend displacement input voltage fact algorithm require matrix inversion singular value decomposition make possible identification scheme line estimation also priori knowledge except order need information see http qucosa fileadmin data qucosa document data index html,"['nonlinear', 'identification', 'scheme', 'provide', 'lti', 'feedback', 'nonlinearitya', 'nonlinear', 'identification', 'scheme', 'provide', 'lti', 'feedback', 'nonlinearity', 'depend', 'input', 'lti', 'output', 'especially', 'case', 'mems', 'electrostatic', 'field', 'depend', 'displacement', 'input', 'voltage', 'fact', 'algorithm', 'require', 'matrix', 'inversion', 'singular', 'value', 'decomposition', 'make', 'possible', 'identification', 'scheme', 'line', 'estimation', 'also', 'priori', 'knowledge', 'except', 'order', 'need', 'information', 'see', 'http', 'qucosa', 'fileadmin', 'data', 'qucosa', 'document', 'data', 'index', 'html']",0
643,36334,"A trinary hybrid 81-level multilevel inverter for medium voltage application is proposed.<p>The proposed topology significantly reduces the number of IGBTs and their gate driver circuits as the number of output voltage levels increase.</p>control design,simulation,simulink",33,0,1,0,42,trinary hybrid level multilevel inverter medium voltage application propose propose topology significantly reduce number igbts gate driver circuit number output voltage level increase control,"['trinary', 'hybrid', 'level', 'multilevel', 'inverter', 'medium', 'voltage', 'application', 'propose', 'propose', 'topology', 'significantly', 'reduce', 'number', 'igbts', 'gate', 'driver', 'circuit', 'number', 'output', 'voltage', 'level', 'increase', 'control']",3
644,36369,"A implementation of the Kohonen Self Organizing Feature Maps (SOFM) algorithm for Simulink.<p>This model contains a implementation of the SOFM algorithm using Simulink's basic blocks. The SOFM algorithm is associated with a single block with various configuration parameters: Number of the neuron inputsGrid size (rows and columns)Initial value of standard deviation (sigma0) - Topological neighborhood functionTime constant (t1) - Topological neighborhood function decreaseInitial value of the learning-rate parameter (mu0)Time constant (t2) - Learning-rate parameter decreaseThe attached file contains an example of a network with two dimensional lattice driven by a two dimensional distribution with 100 neurons arranged in a 2D lattice of 10 x 10 nodes.Marcelo Augusto Costa FernandesDCA - CT - <a href=""mailto:UFRNmfernandes@dca.ufrn.br"">UFRNmfernandes@dca.ufrn.br</a></p>ann,artificial neural network,kohonen,self organizing feature maps,self organizing maps,simulink,sofm,som,kohonen,artificial neural network,self organizing feature maps,self organizing maps,som,kohonen",91,3,3,0,103,implementation kohonen self organize feature map sofm algorithm contains implementation sofm algorithm basic block sofm algorithm associate single block various configuration parameter number neuron inputsgrid size row columns initial value standard deviation sigma topological neighborhood functiontime constant topological neighborhood function decreaseinitial value learn rate parameter time constant learning rate parameter decreasethe attach file contain example network two dimensional lattice driven two dimensional distribution neuron arrange lattice node marcelo augusto costa fernandesdca ufrnmfernandes dca ufrn brannartificial neural organize feature mapsself organize neural networkself organize feature mapsself organize mapssomkohonen,"['implementation', 'kohonen', 'self', 'organize', 'feature', 'map', 'sofm', 'algorithm', 'contains', 'implementation', 'sofm', 'algorithm', 'basic', 'block', 'sofm', 'algorithm', 'associate', 'single', 'block', 'various', 'configuration', 'parameter', 'number', 'neuron', 'inputsgrid', 'size', 'row', 'columns', 'initial', 'value', 'standard', 'deviation', 'sigma', 'topological', 'neighborhood', 'functiontime', 'constant', 'topological', 'neighborhood', 'function', 'decreaseinitial', 'value', 'learn', 'rate', 'parameter', 'time', 'constant', 'learning', 'rate', 'parameter', 'decreasethe', 'attach', 'file', 'contain', 'example', 'network', 'two', 'dimensional', 'lattice', 'driven', 'two', 'dimensional', 'distribution', 'neuron', 'arrange', 'lattice', 'node', 'marcelo', 'augusto', 'costa', 'fernandesdca', 'ufrnmfernandes', 'dca', 'ufrn', 'brannartificial', 'neural', 'organize', 'feature', 'mapsself', 'organize', 'neural', 'networkself', 'organize', 'feature', 'mapsself', 'organize', 'mapssomkohonen']",5
645,36449,"Simulation of vibrissae mechanical model.<p>This is just attempt of creating anatomic correct approximated simulation of vibrissae motion upon different condition: wind, obstacle ...This made by applying different forces on external part of vibrissae.The model include internal (within skin) and external parts of vibrissae.The internal includes skin tension and muscle.The external part includes links simulating flexible fiber body with predefined motion DOF.* All theoretical parameters described in doc file.* Almost all simulation parameters can be defined from m file.* Some blocks includes subsystems* there were some problems with visualization in 64 bit Matlab version. Just uncheck from mdl menue/simulation/configuration parameters/simscape/visualization -------How to run simulation-------1. Run m file2. Run mdl file</p>flexible body,hair,sim mechanics,simscape,simulink,vibrissae,whisker",190,23,3,0,173,vibrissa mechanical attempt create anatomic correct approximate vibrissae motion upon different condition wind obstacle make apply different force external part vibrissa include internal within skin external part vibrissae internal include skin tension muscle external part include link flexible fiber body predefined motion dof theoretical parameter describe doc file almost parameter define file block include subsystem problem visualization bit version uncheck mdl menue configuration parameter simscape visualization run run file run mdl fileflexible bodyhairsim,"['vibrissa', 'mechanical', 'attempt', 'create', 'anatomic', 'correct', 'approximate', 'vibrissae', 'motion', 'upon', 'different', 'condition', 'wind', 'obstacle', 'make', 'apply', 'different', 'force', 'external', 'part', 'vibrissa', 'include', 'internal', 'within', 'skin', 'external', 'part', 'vibrissae', 'internal', 'include', 'skin', 'tension', 'muscle', 'external', 'part', 'include', 'link', 'flexible', 'fiber', 'body', 'predefined', 'motion', 'dof', 'theoretical', 'parameter', 'describe', 'doc', 'file', 'almost', 'parameter', 'define', 'file', 'block', 'include', 'subsystem', 'problem', 'visualization', 'bit', 'version', 'uncheck', 'mdl', 'menue', 'configuration', 'parameter', 'simscape', 'visualization', 'run', 'run', 'file', 'run', 'mdl', 'fileflexible', 'bodyhairsim']",0
646,36464,"A short 'What is Simulink' workshop I've passed on May 1st, 2012.<p>If you want to use Simulink, this is a nice place to start. Attached is also a short presentation in .PDF format, in hebrew.</p>code generation,control design,demo,embedded code,hebrew,matlab,mbd,modeling,simulation,simulink,stateflow,workshop,code generation,control design",208,22,3,1,212,short workshop pass may want nice place start attach also short presentation pdf format hebrew code design,"['short', 'workshop', 'pass', 'may', 'want', 'nice', 'place', 'start', 'attach', 'also', 'short', 'presentation', 'pdf', 'format', 'hebrew', 'code', 'design']",5
647,36508,"in this model, speed control of DC motor using Fuzzy Logic is simulated<p>Fuzzy Logic based speed control of DC motor is designed. and In this model, designed a fuzzy controller for control of speed of dc motor. modeling of dc motor is also presented. this zip file contains matlab simulink model and fis file.</p>dc machine,fuzzy,fuzzy controller,modeling of dc motor,mr kevin i think your logic is wrong or you are implemented in w,speed control,speed control of dc motor,electric_motor_control,power_conversion_control,power_electronics_control,dc machine,fuzzy,fuzzy controller,fuzzy controller",34,2,2,0,37,speed control motor fuzzy logic logic base speed control motor design design fuzzy controller control speed motor motor also present zip file contain fis file motormr kevin think logic wrong implement wspeed controlspeed control motorelectric motor controlpower conversion controlpower electronics controldc controllerfuzzy controller,"['speed', 'control', 'motor', 'fuzzy', 'logic', 'logic', 'base', 'speed', 'control', 'motor', 'design', 'design', 'fuzzy', 'controller', 'control', 'speed', 'motor', 'motor', 'also', 'present', 'zip', 'file', 'contain', 'fis', 'file', 'motormr', 'kevin', 'think', 'logic', 'wrong', 'implement', 'wspeed', 'controlspeed', 'control', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'controllerfuzzy', 'controller']",3
648,36516,"PROLOG to Simulink with The SWI-Prolog and JPL (Java Interface to PROLOG)<p>This model contains a SWI-Prolog (<a href=""http://www.swi-prolog.org"">www.swi-prolog.org</a>) interface block for Simulink environment. Communication between SWI-Prolog and Simulink uses JPL (Java Interface to Prolog). JPL is a library using JNI (Java Native Interface) providing a bidirectional interface between Java and SWI-Prolog. The SWI-Prolog Interface block allows you to create simulation with expert systems using PROLOG code. With this block can be read PROLOG source file and loads the clauses in SWI-Prolog environment. The clauses are called through a PROLOG query that is an input parameter of the SWI-Prolog Interface block.The PROLOG query uses ''u'' as the input variable name and ''y'' as the output variable name. In the case of queries with multiple solutions, this block will only return the first solution found.The SWI-Prolog and JPL (Java Interface to Prolog) configurations are showed on the pdf file.The attached file contains a simple on-off tank level control with prolog-based expert system example using The SWI-Prolog Interface block.Marcelo Augusto Costa FernandesDCA - CT - <a href=""mailto:UFRNmfernandes@dca.ufrn.br"">UFRNmfernandes@dca.ufrn.br</a></p>expert system,expert system,java,jpl,prolog,simulink,swiprolog",33,2,2,0,41,prolog swi prolog jpl java interface prolog contain swi prolog swi prolog org interface block environment communication swi prolog jpl java interface prolog jpl jni java native interface provide bidirectional interface java swi prolog swi prolog interface block allow create expert prolog code block read prolog source file load clause swi prolog environment clause call prolog query input parameter swi prolog interface block prolog query input variable name output variable name case query multiple solution block return first solution find swi prolog jpl java interface prolog configuration show pdf file attach file contain simple tank level control prolog base expert example swi prolog interface block marcelo augusto costa fernandesdca ufrnmfernandes dca ufrn brexpert systemexpert,"['prolog', 'swi', 'prolog', 'jpl', 'java', 'interface', 'prolog', 'contain', 'swi', 'prolog', 'swi', 'prolog', 'org', 'interface', 'block', 'environment', 'communication', 'swi', 'prolog', 'jpl', 'java', 'interface', 'prolog', 'jpl', 'jni', 'java', 'native', 'interface', 'provide', 'bidirectional', 'interface', 'java', 'swi', 'prolog', 'swi', 'prolog', 'interface', 'block', 'allow', 'create', 'expert', 'prolog', 'code', 'block', 'read', 'prolog', 'source', 'file', 'load', 'clause', 'swi', 'prolog', 'environment', 'clause', 'call', 'prolog', 'query', 'input', 'parameter', 'swi', 'prolog', 'interface', 'block', 'prolog', 'query', 'input', 'variable', 'name', 'output', 'variable', 'name', 'case', 'query', 'multiple', 'solution', 'block', 'return', 'first', 'solution', 'find', 'swi', 'prolog', 'jpl', 'java', 'interface', 'prolog', 'configuration', 'show', 'pdf', 'file', 'attach', 'file', 'contain', 'simple', 'tank', 'level', 'control', 'prolog', 'base', 'expert', 'example', 'swi', 'prolog', 'interface', 'block', 'marcelo', 'augusto', 'costa', 'fernandesdca', 'ufrnmfernandes', 'dca', 'ufrn', 'brexpert', 'systemexpert']",5
649,36536,"Parameterized parts for Simscape Multibody, with gear assemblies and MATLAB code for extrusions<p>This set of examples shows you how to create parameterized parts for Simscape Multibody and example MATLAB scripts for defining general extrusions.  The parts have been used in a wide range of examples to show how these blocks enable you to rapidly model mechanisms. Within the library are a set of gear assemblies.  The parameterized gear assemblies group the required blocks together and parameterize them so that frames are always positioned and oriented correctly. Please read the README.txt file to get started. To see how to defining bodies in Simscape Multibody, watch this video (5 min):<a href=""https://www.mathworks.com/videos/defining-rigid-bodies-68845.html"">https://www.mathworks.com/videos/defining-rigid-bodies-68845.html</a> To learn more about multibody simulation with Simscape Multibody, please watch this webinar:<a href=""http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a> To find other Simscape examples, search for posts with the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> To learn more about MathWorks Simscape Products, go to:<a href=""https://www.mathworks.com/solutions/physical-modeling.html"">https://www.mathworks.com/solutions/physical-modeling.html</a></p>2g,extrusion,mechanical,multibody,second generation,simmechanics,simscape",2292,666,5,432,2118,parameterized part simscape multibody gear assembly code extrusionsthis set example show create parameterized part simscape multibody example script define general extrusion part wide range example show block enable rapidly mechanism within set gear assembly parameterized gear assembly group require block together parameterize frame always position orient correctly please read readme txt file get start see define body simscape multibody watch video min mathworks com video define rigid body html learn multibody simscape multibody please watch webinar http mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com solution physical modeling html,"['parameterized', 'part', 'simscape', 'multibody', 'gear', 'assembly', 'code', 'extrusionsthis', 'set', 'example', 'show', 'create', 'parameterized', 'part', 'simscape', 'multibody', 'example', 'script', 'define', 'general', 'extrusion', 'part', 'wide', 'range', 'example', 'show', 'block', 'enable', 'rapidly', 'mechanism', 'within', 'set', 'gear', 'assembly', 'parameterized', 'gear', 'assembly', 'group', 'require', 'block', 'together', 'parameterize', 'frame', 'always', 'position', 'orient', 'correctly', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'define', 'body', 'simscape', 'multibody', 'watch', 'video', 'min', 'mathworks', 'com', 'video', 'define', 'rigid', 'body', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'please', 'watch', 'webinar', 'http', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'solution', 'physical', 'modeling', 'html']",7
650,36541,"Components for modeling a mini golf course. Contact forces are demonstrated on a 9-hole course.<p>This library contains components for modeling a mini golf course. It includes fixed walls, moving walls, posts, spinning obstacles, putting head, and the hole. A nine-hole course is provided, showing how you can easily build up a set of components and reuse them in different designs. A control system helps you guide the putter to the right position and shoots the ball towards the hole. This example uses the Simscape Multibody Contact Forces Library. Please read the README.txt file to get started.  See how to defining bodies in Simscape Multibody by watching this video (5 min):  <a href=""https://www.mathworks.com/videos/defining-rigid-bodies-68845.html"">https://www.mathworks.com/videos/defining-rigid-bodies-68845.html</a> Learn more about multibody simulation with Simscape Multibody by watching this webinarhttps://<a href=""http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a> You may reuse this content, with or without modification, in your work.Please follow the conditions of the license file and use the following citation:[1] Miller, Steve (2018), Simscape Multibody Mini Golf Library (<a href=""https://www.mathworks.com/matlabcentral/fileexchange/36541"">https://www.mathworks.com/matlabcentral/fileexchange/36541</a>) MATLAB Central File Exchange. Retrieved on </p>mini golf,2g,contact forces,mechanical,mini golf,multibody,second generation,simmechanics,contact forces,2g,multibody,2g,contact forces,mechanical,mini golf,multibody,second generation,simmechanics",289,35,5,1,322,component mini golf course contact force demonstrate hole course contain component mini golf course include fixed wall move wall post spin obstacle put head hole nine hole course provide show easily build set component reuse different design control help guide putter right position shoot ball towards hole example simscape multibody contact force please read readme txt file get start see define body simscape multibody watch video min mathworks com video define rigid body html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling may reuse content without modification work please follow condition license file follow citation miller steve simscape multibody mini golf mathworks com matlabcentral fileexchange central file exchange retrieve mini golf gcontact force gmultibody gcontact,"['component', 'mini', 'golf', 'course', 'contact', 'force', 'demonstrate', 'hole', 'course', 'contain', 'component', 'mini', 'golf', 'course', 'include', 'fixed', 'wall', 'move', 'wall', 'post', 'spin', 'obstacle', 'put', 'head', 'hole', 'nine', 'hole', 'course', 'provide', 'show', 'easily', 'build', 'set', 'component', 'reuse', 'different', 'design', 'control', 'help', 'guide', 'putter', 'right', 'position', 'shoot', 'ball', 'towards', 'hole', 'example', 'simscape', 'multibody', 'contact', 'force', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'define', 'body', 'simscape', 'multibody', 'watch', 'video', 'min', 'mathworks', 'com', 'video', 'define', 'rigid', 'body', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'may', 'reuse', 'content', 'without', 'modification', 'work', 'please', 'follow', 'condition', 'license', 'file', 'follow', 'citation', 'miller', 'steve', 'simscape', 'multibody', 'mini', 'golf', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'central', 'file', 'exchange', 'retrieve', 'mini', 'golf', 'gcontact', 'force', 'gmultibody', 'gcontact']",7
651,36547,"abc to abc conversion by using Park and Clark transformation<p>This model explain how to convert ABC to Alpha-Beeta to DQ and DQ to Alpha-Beeta to ABC conversion using clark and park transformation.</p>beeta,abc,abc to abc conversion,alpha,beeta,clark,control,dq0,park,transformation,alpha,abc,alpha,beeta,dq0,abc,clark",182,11,4,0,229,abc abc conversion park clark explain convert abc alpha beeta alpha beeta abc conversion clark park transformation beetaabcabc abc abcclark,"['abc', 'abc', 'conversion', 'park', 'clark', 'explain', 'convert', 'abc', 'alpha', 'beeta', 'alpha', 'beeta', 'abc', 'conversion', 'clark', 'park', 'transformation', 'beetaabcabc', 'abc', 'abcclark']",8
652,36548,"DQ based modeling of Three phase Induction Motor<p>DQ based modeling of Three phase Induction Motor is presented in this model. Run parameter.m file before run IM.mdl model.</p>asynchronous motor,dq model,induction motor,modeling,speed,torque,electric_motor_control,power_electronics_control",116,6,3,0,126,base modeling three phase induction motordq base three phase induction motor present run parameter file run mdl asynchronous motordq modelinduction motor controlpower electronics control,"['base', 'modeling', 'three', 'phase', 'induction', 'motordq', 'base', 'three', 'phase', 'induction', 'motor', 'present', 'run', 'parameter', 'file', 'run', 'mdl', 'asynchronous', 'motordq', 'modelinduction', 'motor', 'controlpower', 'electronics', 'control']",3
653,36553,"Scissor lift built from a library of parameterized, reusable components, with a hydraulic actuator.<p>This file contains a scissor lift model with hydraulic actuation built using Simscape Multibody and Simscape Fluids. The scissor lift model is assembled from a library of parameterized component models. Intermediate models are included to show you the steps of modeling this system. A MATLAB UI is also included that allows you to interactively change the dimensions of the scissor lift.    Please read the README.txt file to get started.   See how to defining bodies in Simscape Multibody by watching this video (5 min):  <a href=""https://www.mathworks.com/videos/defining-rigid-bodies-68845.html"">https://www.mathworks.com/videos/defining-rigid-bodies-68845.html</a>  Learn more about multibody simulation with Simscape Multibody by watching this webinarhttps://<a href=""http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a>   Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>    Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>2g,mechanical,multibody,physical modeling,scissor jack,scissor lift,second generation,simhydraulics,simmechanics,simscape,2g,scissor lift",6576,1374,7,750,5973,scissor lift build parameterized reusable component hydraulic actuator file contains scissor lift hydraulic actuation build simscape multibody simscape fluid scissor lift assemble parameterized component intermediate include show step also include allow interactively change dimension scissor lift please read readme txt file get start see define body simscape multibody watch video min mathworks com video define rigid body html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling modelingscissor jackscissor liftsecond gscissor lift,"['scissor', 'lift', 'build', 'parameterized', 'reusable', 'component', 'hydraulic', 'actuator', 'file', 'contains', 'scissor', 'lift', 'hydraulic', 'actuation', 'build', 'simscape', 'multibody', 'simscape', 'fluid', 'scissor', 'lift', 'assemble', 'parameterized', 'component', 'intermediate', 'include', 'show', 'step', 'also', 'include', 'allow', 'interactively', 'change', 'dimension', 'scissor', 'lift', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'define', 'body', 'simscape', 'multibody', 'watch', 'video', 'min', 'mathworks', 'com', 'video', 'define', 'rigid', 'body', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'modelingscissor', 'jackscissor', 'liftsecond', 'gscissor', 'lift']",7
654,36652,"sigma delta ADC<p>second order sigma delta ADC</p>analog digital converter,analog digital converter",13,0,1,0,18,sigma delta adcsecond order sigma delta adcanalog digital converteranalog digital converter,"['sigma', 'delta', 'adcsecond', 'order', 'sigma', 'delta', 'adcanalog', 'digital', 'converteranalog', 'digital', 'converter']",5
655,36653,sigma delta ADC<p>first order sigma delta analog to digital converter</p>simulink,9,0,1,0,13,sigma delta adcfirst order sigma delta analog digital,"['sigma', 'delta', 'adcfirst', 'order', 'sigma', 'delta', 'analog', 'digital']",5
656,36667,"The simulation shows the pv and iv plot of bpsx150s module modelled in simscape.<p>Bpsx150s is 1st modelled by connecting 72 cells in series.being diffulty in connecting so i connected 6 cells in series and then made it as subs/m then copied made it to 18 and 36 and 72 which u can understand from the ckt.this simulation is useful in understanding characteristics of solar module, but if we go into array simulation time is large.</p>simscape",171,21,6,0,156,show plot bpsx module simscape bpsx connect cell series diffulty connect connected cell series make sub copy make understand ckt useful understanding characteristic solar module array time large simscape,"['show', 'plot', 'bpsx', 'module', 'simscape', 'bpsx', 'connect', 'cell', 'series', 'diffulty', 'connect', 'connected', 'cell', 'series', 'make', 'sub', 'copy', 'make', 'understand', 'ckt', 'useful', 'understanding', 'characteristic', 'solar', 'module', 'array', 'time', 'large', 'simscape']",0
657,36668,"optimization using Imperialist competitive algorithm of PI controller of a dc motor speed control<p>this is the optimization of PI controller of dc motor speed control.this is done in matlab7.0.you can change the range of the PI controller for optimization,by changing [varmin],[varmax] matrix. in the 'Main_ImperialistCompetitveAlgorithm.m'.the cost function is based on settling time,rise time,steady state error,overshoot.priority is given to these parameter.you can change the priority also.see the 'costfunction.m'.</p>error is showing when the model and m files are simulated,dc motor speed control,optimization,simulink,electric_motor_control,power_conversion_control,power_electronics_control,dc motor speed control",136,11,2,0,150,optimization imperialist competitive algorithm controller motor speed controlthis optimization controller motor speed control change range controller optimizationby change varmin varmax matrix main cost function base settle timerise timesteady state errorovershoot priority give parameter change priority also see costfunction error show file motor speed motor controlpower conversion controlpower electronics controldc motor speed control,"['optimization', 'imperialist', 'competitive', 'algorithm', 'controller', 'motor', 'speed', 'controlthis', 'optimization', 'controller', 'motor', 'speed', 'control', 'change', 'range', 'controller', 'optimizationby', 'change', 'varmin', 'varmax', 'matrix', 'main', 'cost', 'function', 'base', 'settle', 'timerise', 'timesteady', 'state', 'errorovershoot', 'priority', 'give', 'parameter', 'change', 'priority', 'also', 'see', 'costfunction', 'error', 'show', 'file', 'motor', 'speed', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motor', 'speed', 'control']",3
658,36691,"1-phase to 3-phase conversion for AC loads<p>this model convert 1-phase AC supply to 3-phase supply. for this conversion, SPWM based inverter control is used.</p>1 phase,3 phase,control,inverter,rectifire,spwm",143,6,4,0,186,phase phase conversion loadsthis convert phase supply phase supply conversion spwm base inverter control phase,"['phase', 'phase', 'conversion', 'loadsthis', 'convert', 'phase', 'supply', 'phase', 'supply', 'conversion', 'spwm', 'base', 'inverter', 'control', 'phase']",6
659,36722,"SVM based V/F control of Induction Motor Drive.<p>This model explain about V/F control of induction motor drive based on space vector modulation, and dc power fed to inverter by 1-phase rectifire. SVM is designed by dc-link voltage.</p>1 phase to 3 phase,ac drive,asynchronous motor drive,induction motor,space vector modulation,speed control,svm,vf control,electric_motor_control,power_conversion_control,power_electronics_control,dtcsvm of induction motor with three level diode clamped inverte,sandip",150,6,3,0,228,svm base control induction motor drive explain control induction motor drive base space vector modulation power feed inverter phase rectifire svm design link voltage phase phaseac motor driveinduction motorspace vector modulationspeed controlsvmvf controlelectric motor controlpower conversion controlpower electronics controldtcsvm induction motor three level diode clamp invertesandip,"['svm', 'base', 'control', 'induction', 'motor', 'drive', 'explain', 'control', 'induction', 'motor', 'drive', 'base', 'space', 'vector', 'modulation', 'power', 'feed', 'inverter', 'phase', 'rectifire', 'svm', 'design', 'link', 'voltage', 'phase', 'phaseac', 'motor', 'driveinduction', 'motorspace', 'vector', 'modulationspeed', 'controlsvmvf', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldtcsvm', 'induction', 'motor', 'three', 'level', 'diode', 'clamp', 'invertesandip']",1
660,36726,"PMDC motor is connected to solar module to check and understand pv pumping.<p>we can check the working of Photovoltaic pumping under different conditions by varying irradiance and load torques.this ckt is useful to check the validity of MPPT.Mppt ckt for this ckt can be modified by inserting cuk converter and mppt controller.</p>done on simscape,electric_motor_control,power_conversion_control,power_electronics_control",194,23,6,0,176,pmdc motor connect solar module check understand pump check work photovoltaic pump different condition vary irradiance load torque ckt useful check validity mppt mppt ckt ckt modify insert cuk converter mppt controller motor controlpower conversion controlpower electronics control,"['pmdc', 'motor', 'connect', 'solar', 'module', 'check', 'understand', 'pump', 'check', 'work', 'photovoltaic', 'pump', 'different', 'condition', 'vary', 'irradiance', 'load', 'torque', 'ckt', 'useful', 'check', 'validity', 'mppt', 'mppt', 'ckt', 'ckt', 'modify', 'insert', 'cuk', 'converter', 'mppt', 'controller', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
661,36727,"MPPT technique is used here to enhance performance of motor<p>P &amp; O algorithm is implemented here in this system.u can check the validity of mppt by comparing with direct coupled system.problem in this simulation is time consumption.</p>simscape,electric_motor_control,power_conversion_control,power_electronics_control,mppt,pv",241,28,6,0,217,mppt technique enhance performance motorp amp algorithm implement check validity mppt compare direct couple problem time consumption motor controlpower conversion controlpower electronics controlmpptpv,"['mppt', 'technique', 'enhance', 'performance', 'motorp', 'amp', 'algorithm', 'implement', 'check', 'validity', 'mppt', 'compare', 'direct', 'couple', 'problem', 'time', 'consumption', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlmpptpv']",3
662,36728,"Mppt is checked on resistive load<p>Vary resistances check the power in both cktsP &amp; O algorithm is used</p>simscape,power_conversion_control,power_electronics_control,simscape,is this file run in 2011a712 version only,why this model not run for 1kw",381,45,6,0,344,mppt check resistive loadvary resistance check power cktsp amp algorithm conversion controlpower electronics file run version onlywhy run,"['mppt', 'check', 'resistive', 'loadvary', 'resistance', 'check', 'power', 'cktsp', 'amp', 'algorithm', 'conversion', 'controlpower', 'electronics', 'file', 'run', 'version', 'onlywhy', 'run']",3
663,36802,"A full car model with eight degrees of freedom is considered for analysis.<p>Full car (11DOF) model consisting of passengers seats and sprung mass referring to the part of the car that is supported on springs and unsprung mass which refers to the mass of wheel assembly. The tire has been replaced with its equivalent stiffness and tire damping is neglected. The suspension, tire, passenger seat are modeled by linear springs in parallel with dampers. In the vehicle model sprung mass is considered to have 3DOF i.e. bounce, pitch and roll while passenger seat and four unsprung mass have 1DOF each.</p>automotive,automotive,simulink,automotive,simulink",1212,85,3,0,1388,full car eight degree freedom consider analysis full car dof consist passenger seat spring mass refer part car support spring unsprung mass refers mass wheel assembly tire replace equivalent stiffness tire damp neglected suspension tire passenger seat linear spring parallel damper vehicle sprung mass consider dof bounce pitch roll passenger seat four unsprung mass dof,"['full', 'car', 'eight', 'degree', 'freedom', 'consider', 'analysis', 'full', 'car', 'dof', 'consist', 'passenger', 'seat', 'spring', 'mass', 'refer', 'part', 'car', 'support', 'spring', 'unsprung', 'mass', 'refers', 'mass', 'wheel', 'assembly', 'tire', 'replace', 'equivalent', 'stiffness', 'tire', 'damp', 'neglected', 'suspension', 'tire', 'passenger', 'seat', 'linear', 'spring', 'parallel', 'damper', 'vehicle', 'sprung', 'mass', 'consider', 'dof', 'bounce', 'pitch', 'roll', 'passenger', 'seat', 'four', 'unsprung', 'mass', 'dof']",5
664,36803,"Simulink for PCV is a block for 3D Point Cloud View and wrapped native OpenCV library.<p>Simulink for PCV allows users to reconstruct a 3D view from multiple point cloud data generated from Simulink for NID. Simulink for PCV wraps OpenCV to enable to stitch over a million point cloud data such as 3D panorama view (and potentially SLAM view) with faster performance.[Required software]- OpenCV 2.3.1 for Windows 32bit/64bit (<a href=""http://sourceforge.net/projects/opencvlibrary/files/opencv-win/2.3.1/OpenCV-2.3.1-win-superpack.exe/download)-"">http://sourceforge.net/projects/opencvlibrary/files/opencv-win/2.3.1/OpenCV-2.3.1-win-superpack.exe/download)-</a> 32bit/64bit version of MATLAB R2011b or later- Simulink for NID (<a href=""http://www.mathworks.com/matlabcentral/fileexchange/32318-simulink-for-natural-interaction-device-nid)[Optional"">http://www.mathworks.com/matlabcentral/fileexchange/32318-simulink-for-natural-interaction-device-nid)[Optional</a> software]- Computer Vision System Toolbox (highly recommended) </p>demo,image processing,kinect,robot,robotics,simulation,simulink",163,13,3,3,180,pcv block point cloud view wrap native opencv pcv allow user reconstruct view multiple point cloud data generate nid pcv wrap opencv enable stitch million point cloud data panorama view potentially slam view faster performance require software opencv windows bit bit http sourceforge net project opencvlibrary file opencv win opencv win superpack exe download bit bit version later nid http mathworks com matlabcentral fileexchange natural interaction device nid optional software computer vision toolbox highly recommend demoimage,"['pcv', 'block', 'point', 'cloud', 'view', 'wrap', 'native', 'opencv', 'pcv', 'allow', 'user', 'reconstruct', 'view', 'multiple', 'point', 'cloud', 'data', 'generate', 'nid', 'pcv', 'wrap', 'opencv', 'enable', 'stitch', 'million', 'point', 'cloud', 'data', 'panorama', 'view', 'potentially', 'slam', 'view', 'faster', 'performance', 'require', 'software', 'opencv', 'windows', 'bit', 'bit', 'http', 'sourceforge', 'net', 'project', 'opencvlibrary', 'file', 'opencv', 'win', 'opencv', 'win', 'superpack', 'exe', 'download', 'bit', 'bit', 'version', 'later', 'nid', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'natural', 'interaction', 'device', 'nid', 'optional', 'software', 'computer', 'vision', 'toolbox', 'highly', 'recommend', 'demoimage']",5
665,36938,"Simulate and deploy a Run on Target Hardware Arduino algorithm that tracks light and detects bumps.<p>A sample model that implements light following and bump detection algorithms on a 4-wheel autonomous vehicle with an Arduino Mega 2560 onboard.  The light following algorithm is based on two light sensors mounted in the front of the vehicle that when a difference is sensed, the vehicle turns towards the brighter side.  Also implemented is that the vehicle drives faster when the light is dim (proxy for âfarâ), and slower when it is bright (proxy for âcloseâ).  Bump logic is done with left/right bump sensors, and the vehicle backs up and then turns away from the object it struck.The model is created in a way to allow for simulation and code generation.  Numerous test scenerios are implemented with a Signal Builder block to test aspects of algorithms prior to trying on the final platform.External mode can be toggled to allow for monitoring of signals and tuning of parameters, and the model currently implements the back_time parameter as tunable when an object is struck.The ZIP file includes the listing of hardware used, wiring schematics. It is encouraged to continue to expand on more complicated and robust algorithms, new sensors/actuators, etc.For more information, please refer to:- Simulink Targets: <a href=""http://www.mathworks.com/discovery/simulink-embedded-hardware.html"">http://www.mathworks.com/discovery/simulink-embedded-hardware.html</a>  - Arduino Support from Simulink: <a href=""http://www.mathworks.com/hardware-support/arduino-simulink.html-"">http://www.mathworks.com/hardware-support/arduino-simulink.html-</a> Support Package for Arduino Mega: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/35641Facecast"">http://www.mathworks.com/matlabcentral/fileexchange/35641Facecast</a> was on June 7, recorded video can be located here - <a href=""http://www.facebook.com/MATLAB/app_142371818162"">http://www.facebook.com/MATLAB/app_142371818162</a> (Arduino Support from Simulink video)</p>arduino,mega 2560,target hardware",162,29,5,12,155,deploy run target hardware arduino algorithm track light detects bumps sample implement light follow bump detection algorithm wheel autonomous vehicle arduino mega onboard light follow algorithm base two light sensor mount front vehicle difference sense vehicle turn towards brighter side also implement vehicle drive faster light dim proxy far slow bright proxy close bump logic leave right bump sensor vehicle back turn away object struck create way allow code generation numerous test scenerios implement signal builder block test aspect algorithms prior try final platform external mode toggle allow monitoring signal tune parameter currently implement back time parameter tunable object struck zip file include listing hardware wire schematic encourage continue expand complicate robust algorithms new sensor actuator etc information please refer target http mathworks com discovery embed hardware html arduino support http mathworks com hardware support arduino html support package arduino mega http mathworks com matlabcentral fileexchange facecast june record video locate http facebook com app arduino support video arduinomega target hardware,"['deploy', 'run', 'target', 'hardware', 'arduino', 'algorithm', 'track', 'light', 'detects', 'bumps', 'sample', 'implement', 'light', 'follow', 'bump', 'detection', 'algorithm', 'wheel', 'autonomous', 'vehicle', 'arduino', 'mega', 'onboard', 'light', 'follow', 'algorithm', 'base', 'two', 'light', 'sensor', 'mount', 'front', 'vehicle', 'difference', 'sense', 'vehicle', 'turn', 'towards', 'brighter', 'side', 'also', 'implement', 'vehicle', 'drive', 'faster', 'light', 'dim', 'proxy', 'far', 'slow', 'bright', 'proxy', 'close', 'bump', 'logic', 'leave', 'right', 'bump', 'sensor', 'vehicle', 'back', 'turn', 'away', 'object', 'struck', 'create', 'way', 'allow', 'code', 'generation', 'numerous', 'test', 'scenerios', 'implement', 'signal', 'builder', 'block', 'test', 'aspect', 'algorithms', 'prior', 'try', 'final', 'platform', 'external', 'mode', 'toggle', 'allow', 'monitoring', 'signal', 'tune', 'parameter', 'currently', 'implement', 'back', 'time', 'parameter', 'tunable', 'object', 'struck', 'zip', 'file', 'include', 'listing', 'hardware', 'wire', 'schematic', 'encourage', 'continue', 'expand', 'complicate', 'robust', 'algorithms', 'new', 'sensor', 'actuator', 'etc', 'information', 'please', 'refer', 'target', 'http', 'mathworks', 'com', 'discovery', 'embed', 'hardware', 'html', 'arduino', 'support', 'http', 'mathworks', 'com', 'hardware', 'support', 'arduino', 'html', 'support', 'package', 'arduino', 'mega', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'facecast', 'june', 'record', 'video', 'locate', 'http', 'facebook', 'com', 'app', 'arduino', 'support', 'video', 'arduinomega', 'target', 'hardware']",7
666,36996,"This file includes QPSK Modulatian and Demodulation Simulink Model<p>This file includes QPSK Modulatian and Demodulation Simulink Model. If you want to calcuate and make a graph of Bit Error Rate, you could use BERTOOL.</p>awgn,bertool,demodulation,error rate calculation,modulation,qpsk",12,0,1,0,13,file include qpsk modulatian demodulation modelthis file include qpsk modulatian demodulation want calcuate make graph bit error rate could bertool rate,"['file', 'include', 'qpsk', 'modulatian', 'demodulation', 'modelthis', 'file', 'include', 'qpsk', 'modulatian', 'demodulation', 'want', 'calcuate', 'make', 'graph', 'bit', 'error', 'rate', 'could', 'bertool', 'rate']",0
667,36997,"This file includes OQPSK Modulatian and Demodulation Simulink Model.<p>This file includes OQPSK Modulatian and Demodulation Simulink Model. If you want to calcuate and make a graph of Bit Error Rate, you could use BERTOOL.</p>awgn,bertool,demodulation,error rate calculation,modulation,oqpsk",13,0,1,0,13,file include oqpsk modulatian demodulation file include oqpsk modulatian demodulation want calcuate make graph bit error rate could bertool rate,"['file', 'include', 'oqpsk', 'modulatian', 'demodulation', 'file', 'include', 'oqpsk', 'modulatian', 'demodulation', 'want', 'calcuate', 'make', 'graph', 'bit', 'error', 'rate', 'could', 'bertool', 'rate']",0
668,36998,"This file is primitive ZigBee model. You can make it Zigbee by changing data rate<p>This file is primitive ZigBee model. You can make it Zigbee by changing data rate</p>awgn,bertool,demodulation,error rate calculation,modulation,oqpsk,pn,zigbee",21,0,1,0,23,file primitive zigbee make zigbee change data ratethis file primitive zigbee make zigbee change data rate,"['file', 'primitive', 'zigbee', 'make', 'zigbee', 'change', 'data', 'ratethis', 'file', 'primitive', 'zigbee', 'make', 'zigbee', 'change', 'data', 'rate']",7
669,36999,"This file includes OQPSK Modulatian and Demodulation  Simulink Model with Rayleigh Channel.<p>This file includes OQPSK Modulatian and Demodulation Simulink Model with Rayleigh Channel. If you want to calcuate and make a graph of Bit Error Rate, you could use BERTOOL.</p>awgn,bertool,demodulation,error rate calculation,modulation,oqpsk,rayleigh",26,0,1,0,29,file include oqpsk modulatian demodulation rayleigh channel file include oqpsk modulatian demodulation rayleigh channel want calcuate make graph bit error rate could bertool rate,"['file', 'include', 'oqpsk', 'modulatian', 'demodulation', 'rayleigh', 'channel', 'file', 'include', 'oqpsk', 'modulatian', 'demodulation', 'rayleigh', 'channel', 'want', 'calcuate', 'make', 'graph', 'bit', 'error', 'rate', 'could', 'bertool', 'rate']",0
670,37036,"Formation simscape STI2D<p>Initiation Ã  l'environnement Simscape donnÃ©e dans le cadre de formations STI2D dans l'acadÃ©mie de Lyon.Ces documents comprennent une initiation Ã  :- simscape /simulink ;- diagrammes d'Ã©tat avec StateFlow ;- acquisition de donnÃ©es avec la carte NI 6009 ;- interfaÃ§age avec la carte Arduino UNO ;- interfaÃ§age avec les legos Mindstorms.</p>arduino,course materials,lego mindstorms,models,simscape,simulink,sti2d,simulink,course materials,simscape,sti2d",367,6,2,0,380,formation simscape sti dinitiation environnement simscape donnÃ©e dans cadre formation sti dans acadÃ©mie lyon document comprennent une initiation simscape diagrammes Ã©tat avec stateflow acquisition donnÃ©es avec carte interfaÃ§age avec carte arduino uno interfaÃ§age avec les legos mindstorms arduinocourse materialslego,"['formation', 'simscape', 'sti', 'dinitiation', 'environnement', 'simscape', 'donnÃ©e', 'dans', 'cadre', 'formation', 'sti', 'dans', 'acadÃ©mie', 'lyon', 'document', 'comprennent', 'une', 'initiation', 'simscape', 'diagrammes', 'Ã©tat', 'avec', 'stateflow', 'acquisition', 'donnÃ©es', 'avec', 'carte', 'interfaÃ§age', 'avec', 'carte', 'arduino', 'uno', 'interfaÃ§age', 'avec', 'les', 'legos', 'mindstorms', 'arduinocourse', 'materialslego']",5
671,37124,"Three Phase Sine Wave Pulse Width Modulated  Inverter <p>This is simulation of three phase sine wave pulse width modulated inverter. This inverter works on 180 degree conduction strategy.</p>180 degree conduction,modeling,power electronics,simulation,simulink,spwm,three phase inverter,spwm",127,5,3,0,142,three phase sine wave pulse width modulate inverter three phase sine wave pulse width modulate inverter inverter work degree conduction strategy degree phase inverterspwm,"['three', 'phase', 'sine', 'wave', 'pulse', 'width', 'modulate', 'inverter', 'three', 'phase', 'sine', 'wave', 'pulse', 'width', 'modulate', 'inverter', 'inverter', 'work', 'degree', 'conduction', 'strategy', 'degree', 'phase', 'inverterspwm']",3
672,37162,"Mantiene un registro del numero de personas que hay en una habitacion, utilizando una camara web.<p>utilizando una herramienta de detecciÃ³n de movimiento, este algoritmo calcula un threshold para crear una imagen en 1 y 0. Dependiendo del tamaÃ±o de la imagen la herramienta de blob analisis creara un recuadro de la imagen. Este recuadro es contado como una persona. El conteo es positivo o negativo dependiendo de la direcciÃ³n en la que se mueva el individuo. </p>image processing,simulink",60,6,3,0,59,mantiene registro del numero persona que hay una habitacion utilizando una camara web utilizando una herramienta detecciÃ³n movimiento este algoritmo calcula threshold para crear una imagen dependiendo del tamaÃ±o imagen herramienta blob analisis creara recuadro imagen este recuadro contado como una persona conteo positivo negativo dependiendo direcciÃ³n que mueva individuo image,"['mantiene', 'registro', 'del', 'numero', 'persona', 'que', 'hay', 'una', 'habitacion', 'utilizando', 'una', 'camara', 'web', 'utilizando', 'una', 'herramienta', 'detecciÃ³n', 'movimiento', 'este', 'algoritmo', 'calcula', 'threshold', 'para', 'crear', 'una', 'imagen', 'dependiendo', 'del', 'tamaÃ±o', 'imagen', 'herramienta', 'blob', 'analisis', 'creara', 'recuadro', 'imagen', 'este', 'recuadro', 'contado', 'como', 'una', 'persona', 'conteo', 'positivo', 'negativo', 'dependiendo', 'direcciÃ³n', 'que', 'mueva', 'individuo', 'image']",2
673,37168,"Demo for induction motor<p>Demo for induction motor</p>root locus,electric_motor_control,power_electronics_control",10,0,1,0,16,demo induction motordemo induction motorroot locuselectric motor controlpower electronics control,"['demo', 'induction', 'motordemo', 'induction', 'motorroot', 'locuselectric', 'motor', 'controlpower', 'electronics', 'control']",1
674,37221,"Bridge Type.Single Phase Fully Phase Contolled Rectifier with Load(R,R-L with Freewheeling Diode)<p>Forward Voltage of T1,T2,T3&amp;T4 is taken 0.Forward Voltage of Freewheeling Diode is taken 0. </p>modeling,simulation,simulink",14,0,1,0,20,bridge type single phase fully phase contolled rectifier load freewheel diode forward voltage amp take forward voltage freewheel diode take,"['bridge', 'type', 'single', 'phase', 'fully', 'phase', 'contolled', 'rectifier', 'load', 'freewheel', 'diode', 'forward', 'voltage', 'amp', 'take', 'forward', 'voltage', 'freewheel', 'diode', 'take']",3
675,37236,"A simple model to understand working of single phase half controlled rectifier.<p>Asymmetrical Bridge Type Single PhaseHalf  Controlled Rectifier with Load(R,R-L)Forward Voltage of T1,T2,D1&amp;D2 is taken 0 .</p>simulation,simulink",13,0,1,0,18,simple understand work single phase half control rectifier asymmetrical bridge type single phasehalf control rectifier load forward voltage amp take,"['simple', 'understand', 'work', 'single', 'phase', 'half', 'control', 'rectifier', 'asymmetrical', 'bridge', 'type', 'single', 'phasehalf', 'control', 'rectifier', 'load', 'forward', 'voltage', 'amp', 'take']",3
676,37258,"Calculates Cost of burgers lost if customers are served above 3 minutes.<p>This is just a simple getting started model built using SimEvents that represents customers arriving, queueing, and getting served at McDonalds. Total cost lost by Ronald is also displayed.</p>burgers,cost,counter,entity,gauge,mcdonalds,people,queue,server,simevents",18,6,2,3,14,calculates cost burger lose customer serve minute simple get start build simevents represent customer arrive queue get serve mcdonalds total cost lose ronald also display,"['calculates', 'cost', 'burger', 'lose', 'customer', 'serve', 'minute', 'simple', 'get', 'start', 'build', 'simevents', 'represent', 'customer', 'arrive', 'queue', 'get', 'serve', 'mcdonalds', 'total', 'cost', 'lose', 'ronald', 'also', 'display']",5
677,37298,"3Phase half contolled bridge rectifier with a load R,R-L<p>Thyristors T1,T2,T3 are fired respectivelyFiring is done such that.T1 &gt;or= 30T2 &gt;or= 150T3 &gt;or= 270Forward Voltage of T1,T2,T3,D1,D2&amp;D3 is taken 0.Snubber resistance of T1,T2,T3,D1,D3 is taken infiniteTwo 3phase voltage measurement blocks are used ,one is used for measuring phase  to phase voltage &amp; other for phase to ground voltage.Subsystem is used for generating 3phase voltage.</p>simulation,simulink",31,1,2,0,43,phase half contolled bridge rectifier load lthyristors fire forward voltage amp take snubber resistance take infinitetwo phase voltage measurement block one measure phase phase voltage amp phase ground voltage subsystem generate phase voltage,"['phase', 'half', 'contolled', 'bridge', 'rectifier', 'load', 'lthyristors', 'fire', 'forward', 'voltage', 'amp', 'take', 'snubber', 'resistance', 'take', 'infinitetwo', 'phase', 'voltage', 'measurement', 'block', 'one', 'measure', 'phase', 'phase', 'voltage', 'amp', 'phase', 'ground', 'voltage', 'subsystem', 'generate', 'phase', 'voltage']",3
678,37313,"A simple model to understand how diode bridge type rectifier works.<p>Diode Bridge is used.AC voltage source is used.Capacitor is used as a filter.</p>simulation,simulink,simulation",10,0,1,0,10,simple understand diode bridge type rectifier work diode bridge voltage source capacitor filter,"['simple', 'understand', 'diode', 'bridge', 'type', 'rectifier', 'work', 'diode', 'bridge', 'voltage', 'source', 'capacitor', 'filter']",3
679,37333,"Simulink model of an audio filter.<p>Simulates an audio filter by reading a wave file, applying the filter, and displaying the filter input and output on a scope while playing the filter output through the computer sound card. As it stands, the filter is a single pole low pass filter with a 400 Hz cutoff frequency, but it can be easily modified to simulate other filters.</p>audio,signal processing,simulink",9,0,1,0,9,audio filter audio filter read wave file apply filter display filter input output scope play filter output computer sound card stand filter single pole low pas filter cutoff frequency easily modify filter audiosignal,"['audio', 'filter', 'audio', 'filter', 'read', 'wave', 'file', 'apply', 'filter', 'display', 'filter', 'input', 'output', 'scope', 'play', 'filter', 'output', 'computer', 'sound', 'card', 'stand', 'filter', 'single', 'pole', 'low', 'pas', 'filter', 'cutoff', 'frequency', 'easily', 'modify', 'filter', 'audiosignal']",4
680,37336,"A simple Simulink interface to the libfreenect Kinect driver for Linux-based systems<p>The VU-Kinect block for Simulink streams the color and depth video signals from the Microsoft Kinect sensor into the Simulink environment so that non-developers can access the capabilities of the sensor and leverage Simulinkâs powerful tools for image processing and analysis.  Unlike some other Windows-based toolboxes, the VU-Kinect block is based on the open-source libfreenect driver for Linux-based systems.  Real-time code, and operation using External Mode is possible, and the system has been successfully tested on Linux PC as well as PandaBoard target hardware.</p>kinect,linux,pandaboard,real time",28,1,2,0,32,simple interface libfreenect kinect driver linux base systemsthe kinect block stream color depth video signal microsoft kinect sensor environment non developer access capability sensor leverage powerful tool image processing analysis unlike window base toolbox kinect block base open source libfreenect driver linux base real time code operation external mode possible successfully test linux well pandaboard target hardware time,"['simple', 'interface', 'libfreenect', 'kinect', 'driver', 'linux', 'base', 'systemsthe', 'kinect', 'block', 'stream', 'color', 'depth', 'video', 'signal', 'microsoft', 'kinect', 'sensor', 'environment', 'non', 'developer', 'access', 'capability', 'sensor', 'leverage', 'powerful', 'tool', 'image', 'processing', 'analysis', 'unlike', 'window', 'base', 'toolbox', 'kinect', 'block', 'base', 'open', 'source', 'libfreenect', 'driver', 'linux', 'base', 'real', 'time', 'code', 'operation', 'external', 'mode', 'possible', 'successfully', 'test', 'linux', 'well', 'pandaboard', 'target', 'hardware', 'time']",0
681,37386,"A simple model to understand the working of step down transformer.<p>Here ,i have used GTO as switch with the help of a pulse generator. Output voltage cross the load can be seen in the scope.Avg value of the output is also displayed.</p>simulation,demo,modeling,simulation,simulink",16,0,1,0,19,simple understand work step transformer gto switch help pulse generator output voltage cross load see scope avg value output also display,"['simple', 'understand', 'work', 'step', 'transformer', 'gto', 'switch', 'help', 'pulse', 'generator', 'output', 'voltage', 'cross', 'load', 'see', 'scope', 'avg', 'value', 'output', 'also', 'display']",7
682,37455,"BPSK Modulatian-Demodulation By Using Simulink<p>BPSK Modulatian-Demodulation By Using Simulink</p>awgn,bertool,bpsk,demodulation,error rate,modulation,awgn,bpsk",7,0,1,0,7,bpsk modulatian demodulation modulatian demodulation,"['bpsk', 'modulatian', 'demodulation', 'modulatian', 'demodulation']",8
683,37539,"estimation of the phasor parameters using the LES method<p>For the estimation of the phasor parameters using the LES method, the measured voltage waveform is assumed to be a time-dependent sine function of a known frequency , but ofan unknown magnitude and phase angle. This waveform is decomposed in two orthogonal sine and cosine functions with unknown amplitudes</p>les phasor parameter estimation,pll",8,0,1,0,7,estimation phasor parameter methodfor estimation phasor parameter method measure voltage waveform assume time dependent sine function know frequency ofan unknown magnitude phase angle waveform decompose two orthogonal sine cosine function unknown amplitudesles phasor parameter estimationpll,"['estimation', 'phasor', 'parameter', 'methodfor', 'estimation', 'phasor', 'parameter', 'method', 'measure', 'voltage', 'waveform', 'assume', 'time', 'dependent', 'sine', 'function', 'know', 'frequency', 'ofan', 'unknown', 'magnitude', 'phase', 'angle', 'waveform', 'decompose', 'two', 'orthogonal', 'sine', 'cosine', 'function', 'unknown', 'amplitudesles', 'phasor', 'parameter', 'estimationpll']",5
684,37575,"using 4 thyrestor to retify ac to dc<p>using 4 thyrestor to retify ac to dc</p>electric_motor_control,power_conversion_control,power_electronics_control",19,0,1,0,22,thyrestor retify dcusing thyrestor retify dcelectric motor controlpower conversion controlpower electronics control,"['thyrestor', 'retify', 'dcusing', 'thyrestor', 'retify', 'dcelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
685,37594,"Model can be used to understand the working of 3 phase fully controlled rectifier.<p>Three Phase Fully Contolled Bridge Rectifier (6 Thyristors)Change the firing angle using  6-pulse generator.Voltmeter is used for measuring phase voltages.Multimeter1 is used for measuring voltages across all the 6 thyristors.</p>demo,modeling,simulation,simulink,simulation,acdc,demo,demo",34,1,2,0,44,understand work phase fully control rectifier three phase fully contolled bridge rectifier thyristors change fire angle pulse generator voltmeter measure phase voltage multimeter measuring voltage across thyristors,"['understand', 'work', 'phase', 'fully', 'control', 'rectifier', 'three', 'phase', 'fully', 'contolled', 'bridge', 'rectifier', 'thyristors', 'change', 'fire', 'angle', 'pulse', 'generator', 'voltmeter', 'measure', 'phase', 'voltage', 'multimeter', 'measuring', 'voltage', 'across', 'thyristors']",3
686,37636,"Extend Simscape Multibody models with physical effects spanning multiple physical domains.<p>This file contains a library and example models showing how to extend Simscape Multibody 3D models with physical effects modeled in Simscape. Simple demonstration models of hydromechanical and electromechanical systems are provided to show how to create complete system models to test integrated designs.   Please read the README.txt file to get started.   See how to defining bodies in Simscape Multibody by watching this video (5 min):  <a href=""https://www.mathworks.com/videos/defining-rigid-bodies-68845.html"">https://www.mathworks.com/videos/defining-rigid-bodies-68845.html</a>  Learn more about multibody simulation with Simscape Multibody by watching this webinarhttps://<a href=""http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a>  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>  Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>2g,mechanical,multibody,physical modeling,second generation,simmechanics,simmechanics 2g,simscape",5434,745,4,62,4257,extend simscape multibody physical effect span multiple physical domain file contains example show extend simscape multibody physical effect simscape simple demonstration hydromechanical provide show create complete test integrated design please read readme txt file get start see define body simscape multibody watch video min mathworks com video define rigid body html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling modelingsecond gsimscape,"['extend', 'simscape', 'multibody', 'physical', 'effect', 'span', 'multiple', 'physical', 'domain', 'file', 'contains', 'example', 'show', 'extend', 'simscape', 'multibody', 'physical', 'effect', 'simscape', 'simple', 'demonstration', 'hydromechanical', 'provide', 'show', 'create', 'complete', 'test', 'integrated', 'design', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'define', 'body', 'simscape', 'multibody', 'watch', 'video', 'min', 'mathworks', 'com', 'video', 'define', 'rigid', 'body', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'modelingsecond', 'gsimscape']",7
687,37641,"Buck Coverter, Examples of design, open loop, and control<p>Buck Coverter, Examples of design, open loop, and control</p>buck,control design,converter,convertidor,diseo,ejemplos,potencia,simulink",30,1,2,0,36,buck coverter example design open loop controlbuck coverter example design open loop,"['buck', 'coverter', 'example', 'design', 'open', 'loop', 'controlbuck', 'coverter', 'example', 'design', 'open', 'loop']",4
688,37658,"Basic model to understand how actually single phase inverter works!<p>Single Phase Full Bridge InverterInput is through Dc voltage source.Output can be seen at the load through multimeter.When Gto1 &amp; Gto3 conducts load voltage is equal to dc voltage source.When Gto2 &amp; Gto4 conducts load voltage is equal to negarive of dc voltage source.</p>dc switchedmode power supplies,demo,simulation,simulink,power_conversion_control,power_electronics_control,demo,simulation,simulink,demo",17,0,1,0,21,basic understand actually single phase inverter work single phase full bridge inverterinput voltage source output see load multimeter gto amp gto conduct load voltage equal voltage source gto amp gto conduct load voltage equal negarive voltage source switchedmode power conversion controlpower electronics,"['basic', 'understand', 'actually', 'single', 'phase', 'inverter', 'work', 'single', 'phase', 'full', 'bridge', 'inverterinput', 'voltage', 'source', 'output', 'see', 'load', 'multimeter', 'gto', 'amp', 'gto', 'conduct', 'load', 'voltage', 'equal', 'voltage', 'source', 'gto', 'amp', 'gto', 'conduct', 'load', 'voltage', 'equal', 'negarive', 'voltage', 'source', 'switchedmode', 'power', 'conversion', 'controlpower', 'electronics']",3
689,37678,"The fractional delay of a QPSK signal is synchronized in the receiver by a TED, and PLL and a FF<p>QPSK multirate radio receiver with non â synchronized Intermediate Frequency(IF) and reconfigurable downsampling conversion. In order to avoid the aliasing in the received signal a compensated cascade of integrator comb (CIC) filter is introduced. The fractional delay in the signal due to the channel need a timing synchronization correction in the receiver, which is performed at the output of the Matched Filter using the Farrow structure-based interpolator.</p>cic filter,compensator filter,farrow interpolator structure,fractional delay,gardner detector,timing synchronization,cic filter,compensator filter,farrow interpolator structure,fractional delay,gardner detector,timing synchronization",227,25,4,0,227,fractional delay qpsk signal synchronize receiver ted pll ffqpsk multirate radio receiver non synchronized intermediate frequency reconfigurable downsampling conversion order avoid aliasing receive signal compensate cascade integrator comb cic filter introduce fractional delay signal due channel need time synchronization correction receiver perform output match filter farrow structure base interpolator cic filterfarrow interpolator delaygardner detectortiming filterfarrow interpolator delaygardner detectortiming synchronization,"['fractional', 'delay', 'qpsk', 'signal', 'synchronize', 'receiver', 'ted', 'pll', 'ffqpsk', 'multirate', 'radio', 'receiver', 'non', 'synchronized', 'intermediate', 'frequency', 'reconfigurable', 'downsampling', 'conversion', 'order', 'avoid', 'aliasing', 'receive', 'signal', 'compensate', 'cascade', 'integrator', 'comb', 'cic', 'filter', 'introduce', 'fractional', 'delay', 'signal', 'due', 'channel', 'need', 'time', 'synchronization', 'correction', 'receiver', 'perform', 'output', 'match', 'filter', 'farrow', 'structure', 'base', 'interpolator', 'cic', 'filterfarrow', 'interpolator', 'delaygardner', 'detectortiming', 'filterfarrow', 'interpolator', 'delaygardner', 'detectortiming', 'synchronization']",5
690,37696,"LED dimmer is controlled using potentiometer connected to arduino uno which is simulated in SIMULINK<p>The LED which is controlled using the potentiometer connected to ARDUINO UNO which is programmed in MATLAB simulink using arduino I/O package.The Led is connected to pin 11 of arduino and potentiometer is connected to analog port on pin 2(A2).</p>arduino io package,simulink",7,0,1,0,4,lead dimmer control potentiometer connect arduino uno lead control potentiometer connect arduino uno program arduino package lead connect pin arduino potentiometer connect analog port pin arduino,"['lead', 'dimmer', 'control', 'potentiometer', 'connect', 'arduino', 'uno', 'lead', 'control', 'potentiometer', 'connect', 'arduino', 'uno', 'program', 'arduino', 'package', 'lead', 'connect', 'pin', 'arduino', 'potentiometer', 'connect', 'analog', 'port', 'pin', 'arduino']",0
691,37722,"The three phase star connection is depicted and also with the line to line voltages.<p>The three phase star connection is depicted and also with the line to line voltages.</p>line to line voltages,star connection,three phase",15,0,1,0,13,three phase star connection depict also line line voltage three phase star connection depict also line line voltage line line voltagesstar connectionthree phase,"['three', 'phase', 'star', 'connection', 'depict', 'also', 'line', 'line', 'voltage', 'three', 'phase', 'star', 'connection', 'depict', 'also', 'line', 'line', 'voltage', 'line', 'line', 'voltagesstar', 'connectionthree', 'phase']",3
692,37723,"balanced bridge<p>When all the four resistances of the bridge are balenced i.e.(P/Q=R/S reffering to the circuit) then no current flows through the current measurement block.(practically a galvanometer is used.) </p>basic electrical,physics,wheat stone bridge",8,0,1,0,8,balance bridgewhen four resistance bridge balenced reffering circuit current flow current measurement block practically galvanometer basic stone bridge,"['balance', 'bridgewhen', 'four', 'resistance', 'bridge', 'balenced', 'reffering', 'circuit', 'current', 'flow', 'current', 'measurement', 'block', 'practically', 'galvanometer', 'basic', 'stone', 'bridge']",4
693,37755,"Basic model of 3PHASE BRIDGE INVERTER in 180 mode <p>1.)Each GTO conducts for 180 degree of a   cycle.2.)GTO pair in each arm GTO1,GTO4; GTO3,GTO6; GTO5,GTO2 are turned on with time interval of 180 degree.3.)GTO1,GTO3,GTO5 conduct at an interval of 120 degree.4.)Firing pulses of GTO1,GTO4 are shown with max magnitude.5.)Firing pulses of GTO3,GTO6 are shown with less magnitude.6.)Firing pulses of GTO5,GTO2 are shown with least magnitude.7.)Magnitude is varied so that pulses could be observed easily in Scope.8.)Observe the Voltage at Scope 1 after 0.6 seconds because thats the total time required for all the pulses to trigger.9.)Load is a star connected to 3 phase system.</p>demo,modeling,simulation,simulink,demo",31,0,1,0,34,basic phase bridge inverter mode gto conduct degree cycle gto pair arm gto gto gto gto gto gto turn time interval degree gto gto gto conduct interval degree fire pulse gto gto show max magnitude fire pulse gto gto show less magnitude firing pulse gto gto show least magnitude magnitude varied pulse could observe easily scope observe voltage scope second thats total time require pulse trigger load star connect phase,"['basic', 'phase', 'bridge', 'inverter', 'mode', 'gto', 'conduct', 'degree', 'cycle', 'gto', 'pair', 'arm', 'gto', 'gto', 'gto', 'gto', 'gto', 'gto', 'turn', 'time', 'interval', 'degree', 'gto', 'gto', 'gto', 'conduct', 'interval', 'degree', 'fire', 'pulse', 'gto', 'gto', 'show', 'max', 'magnitude', 'fire', 'pulse', 'gto', 'gto', 'show', 'less', 'magnitude', 'firing', 'pulse', 'gto', 'gto', 'show', 'least', 'magnitude', 'magnitude', 'varied', 'pulse', 'could', 'observe', 'easily', 'scope', 'observe', 'voltage', 'scope', 'second', 'thats', 'total', 'time', 'require', 'pulse', 'trigger', 'load', 'star', 'connect', 'phase']",4
694,37761,"using stateflow blocks to determine the state the system is in<p>When it inputs value 0, it is supposed to output 0; and when it inputs value 1, it is supposed to output 1.</p>stateflow,test",5,0,1,0,7,stateflow block determine state inwhen input value suppose output input value suppose output stateflowtest,"['stateflow', 'block', 'determine', 'state', 'inwhen', 'input', 'value', 'suppose', 'output', 'input', 'value', 'suppose', 'output', 'stateflowtest']",4
695,37808,"three phase<p>converter</p>simulation,simulink",19,0,1,0,29,three,['three'],6
696,37822,"A test bench to simulate and analyse Sigma Delta modulators<p>A MATLAB + SIMULINK test bench to simulate and analyse Sigma Delta modulators. Matlab script utilises Richard Schriers Sigma Delta Toolbox and Simulink models receives modulator coefficients from the toolbox and performs various simulations. </p>analog,analogue,communications,control design,delta sigma,electronics,modeling,semiconductors,sigma delta,signal processing,simulation,simulink",5130,7,2,0,6379,test bench analyse sigma delta modulatorsa test bench analyse sigma delta modulators script utilises richard schriers sigma delta toolbox receive modulator coefficient toolbox performs various designdelta deltasignal,"['test', 'bench', 'analyse', 'sigma', 'delta', 'modulatorsa', 'test', 'bench', 'analyse', 'sigma', 'delta', 'modulators', 'script', 'utilises', 'richard', 'schriers', 'sigma', 'delta', 'toolbox', 'receive', 'modulator', 'coefficient', 'toolbox', 'performs', 'various', 'designdelta', 'deltasignal']",5
697,37825,"Thsi target support package allows you to deploy your algorithms on TI LaunchPad.<p>Simulink (Embedded Coder) Target for TI LaunchPadSummary:TI LaunchPad (<a href=""http://ti.com/launchpad"">http://ti.com/launchpad</a>) is an easy-to-use, affordable (&lt; 5 USD),and scalable introduction to the world of microcontrollers and the MSP430 family.Simulink (<a href=""http://www.mathworks.com/products/simulink"">http://www.mathworks.com/products/simulink</a>) is a leading environmentfor multidomain simulation and Model-Based Design.Embedded Coder (<a href=""http://www.mathworks.com/products/embedded-coder"">http://www.mathworks.com/products/embedded-coder</a>) allows you togenerate C code and deploy your algorithms to target hardware.Installation:1) Windows/Linux: Have Code Composer Studio 5 installed (<a href=""http://processors.wiki.ti.com/index.php/Download_CCS).Note"">http://processors.wiki.ti.com/index.php/Download_CCS).Note</a>: Currently Code Composer Studio 5 for Linux doesn't support LaunchPadconnection/debugging. Therefore, you will also need mspdebug (<a href=""http://mspdebug.sourceforge.net/"">http://mspdebug.sourceforge.net/</a>) on Linux todownload/debug after compiling with CCSv5 toolchain.On Linux, you can use mspgcc toolchain instead of CCSv5. This package supportsboth mspgcc and CCSv5 on Linux.Make sure your toolchain is working (build and download some test project, check connection)before you proceed!2) a) Extract this package somewhere. Make sure there are no spaces/non-ascii characters in path (just in case).   b) Make sure you have a working/supported host compiler (<a href=""http://www.mathworks.com/support/compilers/R2012b/index.html"">http://www.mathworks.com/support/compilers/R2012b/index.html</a>) by running 'mex -setup' in MATLAB.   c) Within MATLAB, 'cd' to the directory containing launchpad_setup.m and run this script.   d) Swap TX/RX jumpers on TI LaunchPad (see the group of 5 jumpers on your board). This package uses HW UART (see inscription on the board). If you don't do this, Serial Read/Write blocks and PIL will not work.3) You should be good to go.What this package already has:- Standalone execution on target (driven by ISR)- Support for MSP430G2553 only- Simulink library blocks for:        * Serial read/write (hardware UART - you must swap TX/RX jumpers on your LaunchPad)        * LED        * Built-in temperature sensor        * Push button- Execution in PIL mode (hardware UART - you must swap TX/RX jumpers on your LaunchPad)- PIL mode profilingWhat this package would like to have:- More Simulink blocks- Support for other LaunchPad compatible MCUs- More documentation</p>target support,embedded coder,launchpad,msp430,pil,simulink,target support,texas instruments,ti,texas instruments,launchpad",109,13,3,9,75,thsi target support package allow deploy algorithms launchpad embed coder target launchpad http com launchpad easy affordable usd scalable introduction world msp family http mathworks com product lead environmentfor multidomain base design embed coder http mathworks com product embed coder allow togenerate code deploy algorithm target hardware installation windows linux code composer studio instal http processor wiki com index php download ccs note currently code composer studio linux support debug therefore also need mspdebug http mspdebug sourceforge net linux todownload debug compile ccsv toolchain linux mspgcc toolchain instead ccsv package supportsboth mspgcc ccsv linux make sure toolchain work build download test project check connection proceed extract package somewhere make sure space non ascii character path case make sure work support host compiler http mathworks com support compiler index html run mex setup within directory contain launchpad setup run script swap jumper launchpad see group jumper board package uart see inscription board serial read write block pil work good package already standalone execution target drive isr support msp block serial read write hardware uart must swap jumper launchpad lead built temperature sensor push button execution pil mode hardware uart must swap jumper launchpad pil mode profilingwhat package would like block support launchpad compatible mcus supportembedded supporttexas,"['thsi', 'target', 'support', 'package', 'allow', 'deploy', 'algorithms', 'launchpad', 'embed', 'coder', 'target', 'launchpad', 'http', 'com', 'launchpad', 'easy', 'affordable', 'usd', 'scalable', 'introduction', 'world', 'msp', 'family', 'http', 'mathworks', 'com', 'product', 'lead', 'environmentfor', 'multidomain', 'base', 'design', 'embed', 'coder', 'http', 'mathworks', 'com', 'product', 'embed', 'coder', 'allow', 'togenerate', 'code', 'deploy', 'algorithm', 'target', 'hardware', 'installation', 'windows', 'linux', 'code', 'composer', 'studio', 'instal', 'http', 'processor', 'wiki', 'com', 'index', 'php', 'download', 'ccs', 'note', 'currently', 'code', 'composer', 'studio', 'linux', 'support', 'debug', 'therefore', 'also', 'need', 'mspdebug', 'http', 'mspdebug', 'sourceforge', 'net', 'linux', 'todownload', 'debug', 'compile', 'ccsv', 'toolchain', 'linux', 'mspgcc', 'toolchain', 'instead', 'ccsv', 'package', 'supportsboth', 'mspgcc', 'ccsv', 'linux', 'make', 'sure', 'toolchain', 'work', 'build', 'download', 'test', 'project', 'check', 'connection', 'proceed', 'extract', 'package', 'somewhere', 'make', 'sure', 'space', 'non', 'ascii', 'character', 'path', 'case', 'make', 'sure', 'work', 'support', 'host', 'compiler', 'http', 'mathworks', 'com', 'support', 'compiler', 'index', 'html', 'run', 'mex', 'setup', 'within', 'directory', 'contain', 'launchpad', 'setup', 'run', 'script', 'swap', 'jumper', 'launchpad', 'see', 'group', 'jumper', 'board', 'package', 'uart', 'see', 'inscription', 'board', 'serial', 'read', 'write', 'block', 'pil', 'work', 'good', 'package', 'already', 'standalone', 'execution', 'target', 'drive', 'isr', 'support', 'msp', 'block', 'serial', 'read', 'write', 'hardware', 'uart', 'must', 'swap', 'jumper', 'launchpad', 'lead', 'built', 'temperature', 'sensor', 'push', 'button', 'execution', 'pil', 'mode', 'hardware', 'uart', 'must', 'swap', 'jumper', 'launchpad', 'pil', 'mode', 'profilingwhat', 'package', 'would', 'like', 'block', 'support', 'launchpad', 'compatible', 'mcus', 'supportembedded', 'supporttexas']",0
698,37891,"The response able to track the reference signal after small finite time with SSE equal zero.<p>Â The proposed control can be divided into two sub-controllers: one uses state feedback and the other uses the Diophantine equations. The complete nonlinear design guarantees the convergence to a neighborhood of origin from any initial state in finite time; thus, providing a stable deadbeat performance. Results shows that the ripple-free deadbeat controller is able to track the input signal and the error decays to zero in a finite number of sampling times.</p>control design,simulink",86,6,2,0,91,response able track reference signal small finite time sse equal zero propose control divide two sub controller one state feedback diophantine equation complete nonlinear design guarantee convergence neighborhood origin initial state finite time thus provide stable deadbeat performance result show ripple free deadbeat controller able track input signal error decay zero finite number sample time control,"['response', 'able', 'track', 'reference', 'signal', 'small', 'finite', 'time', 'sse', 'equal', 'zero', 'propose', 'control', 'divide', 'two', 'sub', 'controller', 'one', 'state', 'feedback', 'diophantine', 'equation', 'complete', 'nonlinear', 'design', 'guarantee', 'convergence', 'neighborhood', 'origin', 'initial', 'state', 'finite', 'time', 'thus', 'provide', 'stable', 'deadbeat', 'performance', 'result', 'show', 'ripple', 'free', 'deadbeat', 'controller', 'able', 'track', 'input', 'signal', 'error', 'decay', 'zero', 'finite', 'number', 'sample', 'time', 'control']",0
699,37900,"A simple getting started SimHydraulics model with 2 pistons and an oil pipe connecting them. <p>When you press the brake pedal with your foot, how do the brakes have enough force to stop the car?This model simulates the basic principle on how hydraulics system multiplies the force from one end (your foot) to another end (braking device) of the system.Points to note:1) There are 2 cylinders, Cylinder A and cylinder B.2) Cylinder A has piston area A m^2 and cylinder B has piston area of 4*A m^2.3) From the equation Pa = Pb, we get Fa/Aa = Fb/Ab, and Ab = 4*Aa.where;P = pressureA = AreaF = Force4) From the equation above, we'll see that the force Fb = 4*Fa.5) The distance travelled by A, Da = 4*Db, based on the conservation of volume, assuming the fluid is incompressible.(Thanks to Wit Nursilo of Mathworks)</p>cylinder,flow rate,force,hydraulic machine,hydraulics,incompressible fluid,multiply,piston,pressure,simhydraulic,simscape,hydraulics",34,1,2,0,30,simple get start simhydraulics piston oil pipe connect press brake pedal foot brake enough force stop car basic principle hydraulics multiplies force one end foot another end brake device point note cylinder cylinder cylinder cylinder piston area cylinder piston area equation get pressurea areaf force equation see force distance travel base conservation volume assume fluid incompressible thanks wit nursilo mathworks cylinderflow,"['simple', 'get', 'start', 'simhydraulics', 'piston', 'oil', 'pipe', 'connect', 'press', 'brake', 'pedal', 'foot', 'brake', 'enough', 'force', 'stop', 'car', 'basic', 'principle', 'hydraulics', 'multiplies', 'force', 'one', 'end', 'foot', 'another', 'end', 'brake', 'device', 'point', 'note', 'cylinder', 'cylinder', 'cylinder', 'cylinder', 'piston', 'area', 'cylinder', 'piston', 'area', 'equation', 'get', 'pressurea', 'areaf', 'force', 'equation', 'see', 'force', 'distance', 'travel', 'base', 'conservation', 'volume', 'assume', 'fluid', 'incompressible', 'thanks', 'wit', 'nursilo', 'mathworks', 'cylinderflow']",5
700,37909,"Examples for the webinar ""Teaching Mechatronics with Low Cost Hardware""<p>This .zip file contains the examples introduced in the Webinar ""Teaching Mechatronics with Low Cost Hardware"".<a href=""http://www.mathworks.com/videos/teaching-mechatronics-with-matlab-simulink-and-low-cost-hardware-81912.htmlThe"">http://www.mathworks.com/videos/teaching-mechatronics-with-matlab-simulink-and-low-cost-hardware-81912.htmlThe</a> Webinar introduces different opportunities to integrate mechatronics experiments in your course using MATLAB and Simulink. We present how low cost hardware platforms such as ArduinoÂ®, BeagleBoard and LEGOÂ® MINDSTORMSÂ® NXT may be used in conjunction with MATLAB and Simulink to teach programming, algorithms, and mechatronics. By introducing different applications like controls, image and audio processing as well as mechatronics, multiple approaches that allow you to use Project-Based Learning to generate excitement and communicate complete design challenges to students without low-level hardware issues are explored. </p>pandaboard,arduino,beagleboard,control,education,lego mindstorms nxt,mechatronics,pandaboard,pbl,problembased learning,projectbased learning,run on target hardware,simulink",187,20,4,7,194,example webinar teach mechatronics low cost hardware zip file contain example introduce webinar teach mechatronics low cost hardware http mathworks com videos teach mechatronics low cost hardware htmlthe webinar introduces different opportunity integrate mechatronics experiment course present low cost hardware platform arduino beagleboard lego mindstorms nxt may conjunction teach program algorithms mechatronics introduce different application like control image audio processing well mechatronics multiple approach allow project base learn generate excitement communicate complete design challenge student without low level hardware issue explore mindstorms learningrun target,"['example', 'webinar', 'teach', 'mechatronics', 'low', 'cost', 'hardware', 'zip', 'file', 'contain', 'example', 'introduce', 'webinar', 'teach', 'mechatronics', 'low', 'cost', 'hardware', 'http', 'mathworks', 'com', 'videos', 'teach', 'mechatronics', 'low', 'cost', 'hardware', 'htmlthe', 'webinar', 'introduces', 'different', 'opportunity', 'integrate', 'mechatronics', 'experiment', 'course', 'present', 'low', 'cost', 'hardware', 'platform', 'arduino', 'beagleboard', 'lego', 'mindstorms', 'nxt', 'may', 'conjunction', 'teach', 'program', 'algorithms', 'mechatronics', 'introduce', 'different', 'application', 'like', 'control', 'image', 'audio', 'processing', 'well', 'mechatronics', 'multiple', 'approach', 'allow', 'project', 'base', 'learn', 'generate', 'excitement', 'communicate', 'complete', 'design', 'challenge', 'student', 'without', 'low', 'level', 'hardware', 'issue', 'explore', 'mindstorms', 'learningrun', 'target']",0
701,37946,"A very basic model to understand the concept.<p>Bridge Type Single Phase Half Controlled Converter is used to contol the speed of the DC motor.Forward Voltage of T1,T2 is taken 0.Pulse generator used is programmable type.As the firing Angle is increased , output voltage of converter is decreased.Output voltage of the converter = input voltage to the DC motor. Increase in the firing angle will ultimately decrease the speed of the DC motor.In Scope 1, speed is measured with respect to time.In Scope 2, input waveform of AC voltage and and output of the half controllred converter is shown.DC motor :1.) Field winding is excited by DC voltage.2.) Armature winding is excited by output voltage of converter.</p>electric_motor_control,power_conversion_control,power_electronics_control,demo,modeling,simulation,simulink,modeling",59,4,3,0,66,basic understand concept bridge type single phase half control converter contol speed motor forward voltage take pulse generator programmable type fire angle increase output voltage converter decrease output voltage converter input voltage motor increase fire angle ultimately decrease speed motor scope speed measure respect time scope input waveform voltage output half controllred converter show motor field wind excited voltage armature wind excited output voltage converter electric motor controlpower conversion controlpower electronics,"['basic', 'understand', 'concept', 'bridge', 'type', 'single', 'phase', 'half', 'control', 'converter', 'contol', 'speed', 'motor', 'forward', 'voltage', 'take', 'pulse', 'generator', 'programmable', 'type', 'fire', 'angle', 'increase', 'output', 'voltage', 'converter', 'decrease', 'output', 'voltage', 'converter', 'input', 'voltage', 'motor', 'increase', 'fire', 'angle', 'ultimately', 'decrease', 'speed', 'motor', 'scope', 'speed', 'measure', 'respect', 'time', 'scope', 'input', 'waveform', 'voltage', 'output', 'half', 'controllred', 'converter', 'show', 'motor', 'field', 'wind', 'excited', 'voltage', 'armature', 'wind', 'excited', 'output', 'voltage', 'converter', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
702,37953,"This is a MC/DC test case generator for a complicated logic diagram.<p>This is a MC/DC test case generator which uses the principle of showing  the independent effect of a single input on the selected output by randomly selecting a test vector sequence and observing the output. Keeping all other inputs the same only the specific input is toggled. This is done in a loop starting with the first input. If the output has toggled then the independent effect of the input has been clearly shown on the selected output.</p>aerospace,automotive,simulink,power_conversion_control,power_electronics_control",23,0,1,0,27,test case generator complicate logic diagram test case generator principle show independent effect single input select output randomly select test vector sequence observe output keep input specific input toggle loop start first input output toggle independent effect input clearly show select output conversion controlpower electronics control,"['test', 'case', 'generator', 'complicate', 'logic', 'diagram', 'test', 'case', 'generator', 'principle', 'show', 'independent', 'effect', 'single', 'input', 'select', 'output', 'randomly', 'select', 'test', 'vector', 'sequence', 'observe', 'output', 'keep', 'input', 'specific', 'input', 'toggle', 'loop', 'start', 'first', 'input', 'output', 'toggle', 'independent', 'effect', 'input', 'clearly', 'show', 'select', 'output', 'conversion', 'controlpower', 'electronics', 'control']",4
703,37960,"This circuit will help in understanding of thyristor as a whole.<p>It is a Half wave controlled rectifier circuit.It includes the forward voltage plot for a thyristor and also the input and output voltages for a thyristor are shown so as to give a better understanding of working of a thyristor.Also an understanding of how to trigger a thyristor is provided in this model, helpful for beginners.hope its beneficial to many.</p>power_conversion_control,power_electronics_control,power electronics,scr,thyristor,triggering of thyristor,thyristor",12,0,1,0,14,circuit help understand thyristor whole half wave control rectifier circuit include forward voltage plot thyristor also input output voltage thyristor show give well understand work thyristor also understanding trigger thyristor provide helpful beginner hope beneficial many power conversion controlpower electronics controlpower,"['circuit', 'help', 'understand', 'thyristor', 'whole', 'half', 'wave', 'control', 'rectifier', 'circuit', 'include', 'forward', 'voltage', 'plot', 'thyristor', 'also', 'input', 'output', 'voltage', 'thyristor', 'show', 'give', 'well', 'understand', 'work', 'thyristor', 'also', 'understanding', 'trigger', 'thyristor', 'provide', 'helpful', 'beginner', 'hope', 'beneficial', 'many', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower']",3
704,37973,"This is the second set of benchmark problem available to the control system test community.<p>This is the second set of benchmark problem available to the control system test community. The test cases are generated using the design of experiments (DOE) and random test generate and select algorithm. The final set of 5 or 6 cases cover the complete model based requirements testing.The DO178C supplement for Model Based Testing indicates what type of errors can be captured by the model based tests. This has been mimicked in the mutants file. </p>aerospace,simulink",6618,246,5,2,7485,second set benchmark problem available control test community second set benchmark problem available control test community test case generate design experiment doe random test generate select algorithm final set case cover complete base requirement test supplement base test indicates type error capture base test mimic mutant file,"['second', 'set', 'benchmark', 'problem', 'available', 'control', 'test', 'community', 'second', 'set', 'benchmark', 'problem', 'available', 'control', 'test', 'community', 'test', 'case', 'generate', 'design', 'experiment', 'doe', 'random', 'test', 'generate', 'select', 'algorithm', 'final', 'set', 'case', 'cover', 'complete', 'base', 'requirement', 'test', 'supplement', 'base', 'test', 'indicates', 'type', 'error', 'capture', 'base', 'test', 'mimic', 'mutant', 'file']",7
705,38005,"single phase fullwave thyristor based AC voltage controller.<p>AC voltage controller is used to convert fixed AC voltage to a variable AC voltagewithout changing the given frequency.in this model the load is resistive (150 ohms) and given firing angle is 30 degrees.this model is helpful in understanding the nature of output waveform for a given firing angle. the model which i have uploaded is the basic one which will be helpful for bachelor students and new simulink, simpowersystems users.</p>electric_motor_control,power_conversion_control,power_electronics_control,simpowersystems,simulink",25,0,1,0,22,single phase fullwave thyristor base voltage controller voltage controller convert fix voltage variable voltagewithout change give frequency load resistive ohm give fire angle degree helpful understanding nature output waveform give fire angle upload basic one helpful bachelor student new simpowersystems user electric motor controlpower conversion controlpower electronics,"['single', 'phase', 'fullwave', 'thyristor', 'base', 'voltage', 'controller', 'voltage', 'controller', 'convert', 'fix', 'voltage', 'variable', 'voltagewithout', 'change', 'give', 'frequency', 'load', 'resistive', 'ohm', 'give', 'fire', 'angle', 'degree', 'helpful', 'understanding', 'nature', 'output', 'waveform', 'give', 'fire', 'angle', 'upload', 'basic', 'one', 'helpful', 'bachelor', 'student', 'new', 'simpowersystems', 'user', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
706,38007,"This simple example shows how you can take a Simulink signal (Video feed), and disply it in a GUI.<p>The GUI loads the Simulink Model, sets up a feed of 320x240 images, and shows them in the GUI.The feed is from a webcam.Please note that if you don't have a camera that runs on ""winvideo"" adapter you would have to setup the block ""From Video Device"" in the Simulink model.The zip file contains the GUI, Simulink model, a START_HERE m-file.The example uses the LEVEL-2 S-Function template given by MathWorks, and adds some to it.You need the license for image processing and image acquisition only if you want to read the video from a webcam, and do some procesing to the image. I've added some ""Edge Detection"" so it would be interesting...</p>acquisition,edge detection,gui,image,level2,matlab,processing,sfunction,simulink,video",4,0,1,0,4,simple example show take signal video feed disply gui gui load set fee image show gui fee webcam please note camera run winvideo adapter would setup block video device zip file contain gui start file example level function template give mathworks add need license image processing image acquisition want read video webcam procesing image add edge detection would interest acquisitionedge,"['simple', 'example', 'show', 'take', 'signal', 'video', 'feed', 'disply', 'gui', 'gui', 'load', 'set', 'fee', 'image', 'show', 'gui', 'fee', 'webcam', 'please', 'note', 'camera', 'run', 'winvideo', 'adapter', 'would', 'setup', 'block', 'video', 'device', 'zip', 'file', 'contain', 'gui', 'start', 'file', 'example', 'level', 'function', 'template', 'give', 'mathworks', 'add', 'need', 'license', 'image', 'processing', 'image', 'acquisition', 'want', 'read', 'video', 'webcam', 'procesing', 'image', 'add', 'edge', 'detection', 'would', 'interest', 'acquisitionedge']",7
707,38020,"Nine level DC to AC converter with reverse voltage technique.<p>It is the simulation of new multilevel inverter (published in IEEE journal) topology with reverse voltage technique.This technique helps to reduce the number of power switches used in the power circuit without compensating the levels. </p>control design,simulink,power_conversion_control,power_electronics_control",157,9,3,0,209,nine level converter reverse voltage technique new multilevel inverter publish iee journal topology reverse voltage technique technique help reduce number power switch power circuit without compensate level control conversion controlpower electronics control,"['nine', 'level', 'converter', 'reverse', 'voltage', 'technique', 'new', 'multilevel', 'inverter', 'publish', 'iee', 'journal', 'topology', 'reverse', 'voltage', 'technique', 'technique', 'help', 'reduce', 'number', 'power', 'switch', 'power', 'circuit', 'without', 'compensate', 'level', 'control', 'conversion', 'controlpower', 'electronics', 'control']",1
708,38021,"A Single stage ac-dc  LED driver circuit<p>It gives high PF and low THD.</p>control design,simulation,electric_motor_control,power_conversion_control,power_electronics_control",30,0,1,0,37,single stage lead driver circuitit give high low thd control motor controlpower conversion controlpower electronics control,"['single', 'stage', 'lead', 'driver', 'circuitit', 'give', 'high', 'low', 'thd', 'control', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
709,38022,"Soft switched isolated DC-DC converter designed with single switch.<p>This converter does not require output inductor.</p>control design,simulation,power_conversion_control,power_electronics_control,control design,simulation",21,0,1,0,24,soft switch isolated converter design single switch converter require output inductor control conversion controlpower electronics controlcontrol,"['soft', 'switch', 'isolated', 'converter', 'design', 'single', 'switch', 'converter', 'require', 'output', 'inductor', 'control', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",1
710,38023,"Transformerless DC-DC converter designed with reasonant switching.<p>Soft switching concept reduces the voltage/current stress on the switch. And also reduces the switching losses.</p>control design,simulation,power_conversion_control,power_electronics_control",32,0,1,0,34,transformerless converter design reasonant switch soft switch concept reduces voltage current stress switch also reduce switching loss control conversion controlpower electronics control,"['transformerless', 'converter', 'design', 'reasonant', 'switch', 'soft', 'switch', 'concept', 'reduces', 'voltage', 'current', 'stress', 'switch', 'also', 'reduce', 'switching', 'loss', 'control', 'conversion', 'controlpower', 'electronics', 'control']",1
711,38024,"Transformerless split inductor neutral point clamped three level inverter<p>This circuit can be used for interfacing the PV and grid. There is no shoot through risk in this topology.</p>control design,simulation",80,3,2,0,88,transformerless split inductor neutral point clamp three level inverterthis circuit interfacing grid shoot risk topology control,"['transformerless', 'split', 'inductor', 'neutral', 'point', 'clamp', 'three', 'level', 'inverterthis', 'circuit', 'interfacing', 'grid', 'shoot', 'risk', 'topology', 'control']",4
712,38025,"The power conversion system for large wind turbines.<p>The modular, medium voltage, high power converter eliminates grid side step up transformer and produces 17 levels in the output voltage.</p>control design,simulation,power_conversion_control,power_electronics_control,control design",2242,51,5,0,2354,power conversion large wind turbine modular medium voltage high power converter eliminate grid side step transformer produce level output voltage control conversion controlpower electronics controlcontrol design,"['power', 'conversion', 'large', 'wind', 'turbine', 'modular', 'medium', 'voltage', 'high', 'power', 'converter', 'eliminate', 'grid', 'side', 'step', 'transformer', 'produce', 'level', 'output', 'voltage', 'control', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'design']",1
713,38026,"Hybrid technique allows to achieve more level with minimum cmponents.<p>19 Level hybrid cascade converter topology with series connected symmetrical and asymmetrical diode clamped H bridge cells</p>control design,simulation,control design,simulation",42,0,1,0,57,hybrid technique allow achieve level minimum cmponents level hybrid cascade converter topology series connect symmetrical asymmetrical diode clamp bridge cellscontrol,"['hybrid', 'technique', 'allow', 'achieve', 'level', 'minimum', 'cmponents', 'level', 'hybrid', 'cascade', 'converter', 'topology', 'series', 'connect', 'symmetrical', 'asymmetrical', 'diode', 'clamp', 'bridge', 'cellscontrol']",4
714,38027,"High step up DC-DC converter using Cascade Cockroft Walton Voltage Multiplier<p>This circuit gives continuous input current with low ripple, high voltage ratio and low voltage stress on the switches. </p>control design,simulation,power_conversion_control,power_electronics_control,control design",29,0,1,0,36,high step converter cascade cockroft walton voltage multiplierthis circuit give continuous input current low ripple high voltage ratio low voltage stress switch control conversion controlpower electronics controlcontrol design,"['high', 'step', 'converter', 'cascade', 'cockroft', 'walton', 'voltage', 'multiplierthis', 'circuit', 'give', 'continuous', 'input', 'current', 'low', 'ripple', 'high', 'voltage', 'ratio', 'low', 'voltage', 'stress', 'switch', 'control', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'design']",3
715,38028,"The basic power electronics circuits are simulated using MatLab.<p>The basic power electronics like AC-DC converter, DC-DC converter, Chopper, cycloconverter, AC Voltage controller are simulated using MatLab.</p>control design,simulation,power_conversion_control,power_electronics_control",322,10,3,0,389,basic power electronics circuit basic power electronics like converter converter chopper cycloconverter voltage controller control conversion controlpower electronics control,"['basic', 'power', 'electronics', 'circuit', 'basic', 'power', 'electronics', 'like', 'converter', 'converter', 'chopper', 'cycloconverter', 'voltage', 'controller', 'control', 'conversion', 'controlpower', 'electronics', 'control']",6
716,38045,"A simple non isolated dc-dc soft switching converter simulink<p>simulink model </p>simulink,simulink,power_conversion_control,power_electronics_control",39,0,1,0,44,simple non isolate soft switch converter conversion controlpower electronics control,"['simple', 'non', 'isolate', 'soft', 'switch', 'converter', 'conversion', 'controlpower', 'electronics', 'control']",6
717,38071,"This is a HPF design by IC-741, i.e., the op-amp.<p>One can easily change the input frequency to visualize the performance of the filter over a long range of frequency!</p>simulink,demo,filter,hpf,opamp,signal processing,simulation,simulink",13,0,1,0,14,hpf design amp one easily change input frequency visualize performance filter long range frequency,"['hpf', 'design', 'amp', 'one', 'easily', 'change', 'input', 'frequency', 'visualize', 'performance', 'filter', 'long', 'range', 'frequency']",7
718,38073,"It is a modified version 802.11a<p>Modulator has been initialized as% number of bits per symbolswitch modulation                case 'BPSK', Nb1 = 1;                case 'QPSK', Nb1 = 2;                case '16-QAM', Nb1 = 4;                case '64-QAM', Nb1 = 6;    case 'DQPSK', Nb1 = 8;    case 'OQPSK', Nb1 = 16;endmodOrder = 2.^Nb1;Nb = numSymbols * Nb1; % tx bits per blockcodeRate = str2num(strvcat(code)).';bitsPerBlock = Nb .* codeRate;% interleaverinterleaverRows = 16;if rem(Nb, interleaverRows)                error('Number of transmitted bits per block must be multiple of 16.')endinterleaverCols = Nb / interleaverRows;interleaverElements = [...            2*floor( [0:Nb-1]/2 ) + ...            mod( ([0:Nb-1] + Nb - floor( interleaverRows*[0:Nb-1]/Nb ) ), 2 ) ...            + 1]';The models looks like 802.11a but parameters used here are for 802.11g</p>wifi,16 qam,80211g,ofdm,oqpsk,qpsk,rayleigh fading,wifi,wlan,16 qam,16 qam",362,66,3,22,391,modify version amodulator initialize number bit per symbolswitch modulation case bpsk case qpsk case qam case qam case dqpsk case oqpsk endmodorder numsymbols bit per blockcoderate str num strvcat code bitsperblock coderate rem interleaverrows error number transmit bit per block must multiple interleaverrows floor mod floor interleaverrows look like parameter gwifi qam fadingwifiwlan qam qam,"['modify', 'version', 'amodulator', 'initialize', 'number', 'bit', 'per', 'symbolswitch', 'modulation', 'case', 'bpsk', 'case', 'qpsk', 'case', 'qam', 'case', 'qam', 'case', 'dqpsk', 'case', 'oqpsk', 'endmodorder', 'numsymbols', 'bit', 'per', 'blockcoderate', 'str', 'num', 'strvcat', 'code', 'bitsperblock', 'coderate', 'rem', 'interleaverrows', 'error', 'number', 'transmit', 'bit', 'per', 'block', 'must', 'multiple', 'interleaverrows', 'floor', 'mod', 'floor', 'interleaverrows', 'look', 'like', 'parameter', 'gwifi', 'qam', 'fadingwifiwlan', 'qam', 'qam']",5
719,38105,"this circuit was built to simulate energy storage at the low voltage network.<p>the grid is simulated by a 3 phase source, rest of the system by a constant RL load. A 13kV/240V step down transformer supplies a community represented by the grey block. data (24 hrs duration) is fed to this block by the look-up tables. THE GRID PART WORKS.the storage section (in blue) has a rectifier and inverter part which switch on and off depending on grid voltage. I seem to be getting an error (as shown on the screenshot) and cant seem to figure out the real problem.Any help would be greatly appreciated. PS: I cant upload the data file along so I've posted it separately. Will add the link as soon as its been cleared for posting.</p>battery,battery_system_management,power_electronics_control,battery,grid,model,storage,voltage regulation",57,0,1,0,82,circuit build energy storage low voltage network grid phase source rest constant load step transformer supply community represent grey block data duration feed block look table grid part work storage section blue rectifier inverter part switch depend grid voltage seem get error show screenshot cant seem figure real problem help would greatly appreciate cant upload data file along post separately add link soon clear post batterybattery managementpower electronics regulation,"['circuit', 'build', 'energy', 'storage', 'low', 'voltage', 'network', 'grid', 'phase', 'source', 'rest', 'constant', 'load', 'step', 'transformer', 'supply', 'community', 'represent', 'grey', 'block', 'data', 'duration', 'feed', 'block', 'look', 'table', 'grid', 'part', 'work', 'storage', 'section', 'blue', 'rectifier', 'inverter', 'part', 'switch', 'depend', 'grid', 'voltage', 'seem', 'get', 'error', 'show', 'screenshot', 'cant', 'seem', 'figure', 'real', 'problem', 'help', 'would', 'greatly', 'appreciate', 'cant', 'upload', 'data', 'file', 'along', 'post', 'separately', 'add', 'link', 'soon', 'clear', 'post', 'batterybattery', 'managementpower', 'electronics', 'regulation']",4
720,38121,"model generates baseband and IF BPSK and plots its waveform(time_domain) and FFT(frequency_domain).<p>This model generates baseband and IF BPSK signal and plots its waveform(time-domain) and FFT(frequency-domain).First, a random bit stream is given to a BPSK baseband modulator.The output of modulator XL is a complex-valued stream which is called lowpass equivalent or complex envelope. The lowpass equivalent is a baseband signal which is converted to IF signal X based on this transformation: X=real(XL)*cos(2*pi*Fc*t)-Imaginary(XL)*sin(2*pi*Fc*t),where Fc is the carrier frequency and is the frequency of sine and cosine generator.for more info about the lowpass equivalent look this book:Digital communications by J.G.Proakis &amp; M.Salehi.(5th edition, McGrawHill 2008)The IF signal is given to a scope to plot the waveform. you have to double click on the scope to view the waveform. The purple one is the IF BPSK signal and the yellow one is the bit stream.The IF signal is also given to a spectrum scope in order to plot its FFT.The Frequency domain shows that the FFT is located aroundthis frequency: Fc*sample_time sample_time is given in sine and cosine generator.</p>communications,signal processing,simulation,simulink,wireless,signal processing",11,0,1,0,12,generates baseband bpsk plot waveform time domain fft frequency domain generates baseband bpsk signal plot waveform time domain fft frequency domain first random bit stream give bpsk baseband modulator output modulator complex value stream call lowpass equivalent complex envelope lowpass equivalent baseband signal convert signal base transformation real imaginary sin carrier frequency frequency sine cosine generator info lowpass equivalent look book digital communication proakis amp salehi edition mcgrawhill signal give scope plot waveform double click scope view waveform purple one bpsk signal yellow one bit stream signal also give spectrum scope order plot fft frequency domain show fft locate aroundthis frequency sample time sample time give sine cosine generator processing,"['generates', 'baseband', 'bpsk', 'plot', 'waveform', 'time', 'domain', 'fft', 'frequency', 'domain', 'generates', 'baseband', 'bpsk', 'signal', 'plot', 'waveform', 'time', 'domain', 'fft', 'frequency', 'domain', 'first', 'random', 'bit', 'stream', 'give', 'bpsk', 'baseband', 'modulator', 'output', 'modulator', 'complex', 'value', 'stream', 'call', 'lowpass', 'equivalent', 'complex', 'envelope', 'lowpass', 'equivalent', 'baseband', 'signal', 'convert', 'signal', 'base', 'transformation', 'real', 'imaginary', 'sin', 'carrier', 'frequency', 'frequency', 'sine', 'cosine', 'generator', 'info', 'lowpass', 'equivalent', 'look', 'book', 'digital', 'communication', 'proakis', 'amp', 'salehi', 'edition', 'mcgrawhill', 'signal', 'give', 'scope', 'plot', 'waveform', 'double', 'click', 'scope', 'view', 'waveform', 'purple', 'one', 'bpsk', 'signal', 'yellow', 'one', 'bit', 'stream', 'signal', 'also', 'give', 'spectrum', 'scope', 'order', 'plot', 'fft', 'frequency', 'domain', 'show', 'fft', 'locate', 'aroundthis', 'frequency', 'sample', 'time', 'sample', 'time', 'give', 'sine', 'cosine', 'generator', 'processing']",0
721,38152,"This model covers the Performance of IM on constant Load Torque as well as Varying Load Torque.<p>The operation of the Three Phase IM with a constant load Torque and with Multiple load Torque ( Subsystem shown)</p>electrical machines,simulation",25,1,2,0,30,cover performance constant load torque well vary load torque operation three phase constant load torque multiple load torque subsystem show electrical,"['cover', 'performance', 'constant', 'load', 'torque', 'well', 'vary', 'load', 'torque', 'operation', 'three', 'phase', 'constant', 'load', 'torque', 'multiple', 'load', 'torque', 'subsystem', 'show', 'electrical']",3
722,38241,"This is an upgrade of the ternplot code written by Carl Sandrock (ID#2299). <p>Here the main2D.m code plots relationship between three chemical compositions of GTL (normal-paraffin, iso-paraffin and cyclo-paraffin). At the end it gives four different versions optimized plot (overlap of all four ternplots of chemical properties). Simulink ccgtl.mdl plots by using neural network block.I like to thank this author Carl Sandrock for his amazing code base on what this upgrade is made. I also thank Dr.Ehsan Elborzi (Shelfield university) for his contribution and Dr.Nimir Elbashir (texas A&amp;M university) for his support in providing GTL research data that this code is using to plot.</p>2d ternplot,gtl fuel,image processing,neural network,optimize plot",133,9,4,0,160,upgrade ternplot code write carl sandrock main code plot relationship three chemical composition gtl normal paraffin iso paraffin cyclo paraffin end give four different version optimize plot overlap four ternplots chemical property ccgtl mdl plot neural network block like thank author carl sandrock amaze code base upgrade make also thank ehsan elborzi shelfield university contribution nimir elbashir texas amp university support provide gtl research data code plot ternplotgtl fuelimage networkoptimize plot,"['upgrade', 'ternplot', 'code', 'write', 'carl', 'sandrock', 'main', 'code', 'plot', 'relationship', 'three', 'chemical', 'composition', 'gtl', 'normal', 'paraffin', 'iso', 'paraffin', 'cyclo', 'paraffin', 'end', 'give', 'four', 'different', 'version', 'optimize', 'plot', 'overlap', 'four', 'ternplots', 'chemical', 'property', 'ccgtl', 'mdl', 'plot', 'neural', 'network', 'block', 'like', 'thank', 'author', 'carl', 'sandrock', 'amaze', 'code', 'base', 'upgrade', 'make', 'also', 'thank', 'ehsan', 'elborzi', 'shelfield', 'university', 'contribution', 'nimir', 'elbashir', 'texas', 'amp', 'university', 'support', 'provide', 'gtl', 'research', 'data', 'code', 'plot', 'ternplotgtl', 'fuelimage', 'networkoptimize', 'plot']",5
723,38256,"In some casses some parts of the ac waveform are to be rremoved hence a cliiper is used.<p>A positive Clipper clips of the part from the positive half cycle of the input ac waveform, which can be adjusted by the dv threshold provided...!!verify by changing the value of the dc voltage source provided.</p>power_conversion_control,power_electronics_control,clipper,clipping circuit,diode,electronics",11,0,1,0,11,part waveform rremoved hence cliiper positive clipper clip part positive half cycle input waveform adjust threshold provide verify change value voltage source provide power conversion controlpower electronics,"['part', 'waveform', 'rremoved', 'hence', 'cliiper', 'positive', 'clipper', 'clip', 'part', 'positive', 'half', 'cycle', 'input', 'waveform', 'adjust', 'threshold', 'provide', 'verify', 'change', 'value', 'voltage', 'source', 'provide', 'power', 'conversion', 'controlpower', 'electronics']",3
724,38259,"A simple model that highlights the effects of changing various parameters in a hydraulic system.<p>Initial setting     1)The pressure relief valve is set to maintain the pressure of the entire hydraulic circuit at 100000 Pascals.     2)The pump is set to pump at 10 rpm. The pressure created in response to the fluid flow from the pump moves the double acting cylinder. The position of the piston can be seen in the âpositionâ scope, and the pressure in the âpressureâ scope.Increasing motor speed     1)Double click on pump subsystem and increase the angular velocity of the pump driving shaft from 10 to 100 rpm.     2)Notice the change in hydraulic pressure and rod position in the scopes.     3)The pressure is limited at 1e5 pascals due to the pressure relief valve.     4)The max position of the rod is 0.05m because Force = Pressure*Area of piston = 100000*5e-4 = 50 N. The displacement of the rod is then determined by x = F/k = 50/1000 = 0.05m. k is the spring constant of the spring attached to the mass.     5)Notice also how the pressure changes when the rod is moving (workdone by the rod)Increasing pressure relief valve setting     1)Change the Valve Pressure setting to 2e5 Pa.      2)Notice now the rod is able to move to 0.1 m. Force = Pressure*PistonArea = 2e5 * 5e-4 = 100N. Displacement of rod = F/K = 100/1000 = 0.1m.Changing Piston Area     1)Change the piston Area from 5e-4 m^2 to 5e-5 m^2 (reducing the area).     2)Notice the max rod displacement is 0.01m. Force = Pressure*PistonArea = 2e5 * 5e-5 = 10N. Displacement of rod = F/K = 10/1000 = 0.01m.Changing spring constant     1)Change the spring constant k (double click mass subsystem) from 1000 to 500 N/m.     2)Notice the rod position increases to from 0.01 to 0.02m. Force = Pressure*PistonArea = 2e5 * 5e-5 = 10N. Displacement of rod = F/K = 10/500 = 0.02m.     3)Change Damping constant from 100 to 10.      4)Notice the transient portion of the rod position vibrates more because of lower damping value.</p>4 ways valve,4 ways valve,cylinder,damper,double acting hydraulic cylinder,hydraulic,hydraulic pump,hydraulic system,mass,piston,pressure relief valve,pump,reservoir,spring,valve,4 ways valve,cylinder,damper,double acting hydraulic cylinder,hydraulic,hydraulic pump,hydraulic system,mass,piston,pressure relief valve,pump,reservoir,spring,valve,4 ways valve,electric_motor_control,power_electronics_control,4 ways valve,damper",55,7,2,0,47,simple highlight effect change various parameter hydraulic initial setting pressure relief valve set maintain pressure entire hydraulic circuit pascal pump set pump rpm pressure create response fluid flow pump move double act cylinder position piston see position scope pressure pressure scope increase motor speed double click pump subsystem increase angular velocity pump drive shaft rpm notice change hydraulic pressure rod position scopes pressure limited pascal due pressure relief valve max position rod force pressure area piston displacement rod determine spring constant spring attach mass notice also pressure change rod move workdone rod increase pressure relief valve set change valve pressure set notice rod able move force pressure pistonarea displacement rod change piston area change piston area reduce area notice max rod displacement force pressure pistonarea displacement rod change spring constant change spring constant double click mass subsystem notice rod position increase force pressure pistonarea displacement rod change damp constant notice transient portion rod position vibrates lower damp value way valve way act hydraulic pumphydraulic relief way act hydraulic pumphydraulic relief way valveelectric motor controlpower electronics control way valvedamper,"['simple', 'highlight', 'effect', 'change', 'various', 'parameter', 'hydraulic', 'initial', 'setting', 'pressure', 'relief', 'valve', 'set', 'maintain', 'pressure', 'entire', 'hydraulic', 'circuit', 'pascal', 'pump', 'set', 'pump', 'rpm', 'pressure', 'create', 'response', 'fluid', 'flow', 'pump', 'move', 'double', 'act', 'cylinder', 'position', 'piston', 'see', 'position', 'scope', 'pressure', 'pressure', 'scope', 'increase', 'motor', 'speed', 'double', 'click', 'pump', 'subsystem', 'increase', 'angular', 'velocity', 'pump', 'drive', 'shaft', 'rpm', 'notice', 'change', 'hydraulic', 'pressure', 'rod', 'position', 'scopes', 'pressure', 'limited', 'pascal', 'due', 'pressure', 'relief', 'valve', 'max', 'position', 'rod', 'force', 'pressure', 'area', 'piston', 'displacement', 'rod', 'determine', 'spring', 'constant', 'spring', 'attach', 'mass', 'notice', 'also', 'pressure', 'change', 'rod', 'move', 'workdone', 'rod', 'increase', 'pressure', 'relief', 'valve', 'set', 'change', 'valve', 'pressure', 'set', 'notice', 'rod', 'able', 'move', 'force', 'pressure', 'pistonarea', 'displacement', 'rod', 'change', 'piston', 'area', 'change', 'piston', 'area', 'reduce', 'area', 'notice', 'max', 'rod', 'displacement', 'force', 'pressure', 'pistonarea', 'displacement', 'rod', 'change', 'spring', 'constant', 'change', 'spring', 'constant', 'double', 'click', 'mass', 'subsystem', 'notice', 'rod', 'position', 'increase', 'force', 'pressure', 'pistonarea', 'displacement', 'rod', 'change', 'damp', 'constant', 'notice', 'transient', 'portion', 'rod', 'position', 'vibrates', 'lower', 'damp', 'value', 'way', 'valve', 'way', 'act', 'hydraulic', 'pumphydraulic', 'relief', 'way', 'act', 'hydraulic', 'pumphydraulic', 'relief', 'way', 'valveelectric', 'motor', 'controlpower', 'electronics', 'control', 'way', 'valvedamper']",5
725,38267,"A basic model to understand the concept.<p>1)Three Phase Fully Contolled Bridge   Rectifier (6 Thyristors)  2)Change the firing angle using 6-pulse generator.  3)Voltmeter is used for measuring phase voltages. 4)As the firing angle is increased speed of the DC machine is decreased.</p>electric_motor_control,power_conversion_control,power_electronics_control,3phase,dc machine,modeling,rectifier,simulation,simulink,speed control,3phase",37,2,2,0,39,basic understand concept three phase fully contolled bridge rectifier thyristors change fire angle pulse generator voltmeter measure phase voltage fire angle increase speed machine decrease electric motor controlpower conversion controlpower electronics control phasedc control phase,"['basic', 'understand', 'concept', 'three', 'phase', 'fully', 'contolled', 'bridge', 'rectifier', 'thyristors', 'change', 'fire', 'angle', 'pulse', 'generator', 'voltmeter', 'measure', 'phase', 'voltage', 'fire', 'angle', 'increase', 'speed', 'machine', 'decrease', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'phasedc', 'control', 'phase']",1
726,38274,"This model implements a Spring Loaded Manual Switch by modifying Simulink original Manual Switch <p>This model implements a Spring Loaded Manual Switch by modifying Simulink original Manual Switch.</p>manual,simulink,switch",10,1,2,0,8,implement spring load manual switch modify original manual switch implement spring load manual switch modify original manual switch,"['implement', 'spring', 'load', 'manual', 'switch', 'modify', 'original', 'manual', 'switch', 'implement', 'spring', 'load', 'manual', 'switch', 'modify', 'original', 'manual', 'switch']",4
727,38283,"Clips the negative phase<p>Clips the negative phase</p>clipper,diode,electrical,electronics,engineering",10,0,1,0,9,clip negative phaseclips negative,"['clip', 'negative', 'phaseclips', 'negative']",8
728,38284,"Combination of clippers<p>This circuit is used to clip off the negative and positive cycles.in this circuit the output is of reduced amplitude,which is clipped of according to the desired dc threshold voltages provided for +ve and -ve cycles</p>power_conversion_control,power_electronics_control,clipper,diode,electronics",11,0,1,0,10,combination clippersthis circuit clip negative positive cycle circuit output reduce amplitudewhich clip accord desire threshold voltage provide cyclespower conversion controlpower electronics,"['combination', 'clippersthis', 'circuit', 'clip', 'negative', 'positive', 'cycle', 'circuit', 'output', 'reduce', 'amplitudewhich', 'clip', 'accord', 'desire', 'threshold', 'voltage', 'provide', 'cyclespower', 'conversion', 'controlpower', 'electronics']",4
729,38292,"It possess the advantage of reduced harmonics with boosted output voltage.<p>Multilevel output reduces the harmonics content and Z source protect the converter circuit from shoot through problem. Z source helps to increase the output voltage more than the sum of DC source voltage.</p>simulation,simulation,power_conversion_control,power_electronics_control,simulation",276,11,3,0,365,posse advantage reduce harmonic boost output voltage multilevel output reduces harmonic content source protect converter circuit shoot problem source help increase output voltage sum source voltage conversion controlpower electronics,"['posse', 'advantage', 'reduce', 'harmonic', 'boost', 'output', 'voltage', 'multilevel', 'output', 'reduces', 'harmonic', 'content', 'source', 'protect', 'converter', 'circuit', 'shoot', 'problem', 'source', 'help', 'increase', 'output', 'voltage', 'sum', 'source', 'voltage', 'conversion', 'controlpower', 'electronics']",3
730,38299,"Solar panel modeling with the help of solar cell, is demonstrated...<p>By arranging the solar cells in series and parallel combination, we can make a panel. This model is the demonstration of that only. 1. There are lot of parameters are to control the power and current required. 2. If you feel any issue please write me on <a href=""mailto:satendra.svnit@gmail.com3"">satendra.svnit@gmail.com3</a>. Further improvement: Please propose some more easy way to model the panel in Simulink only. Thanks </p>alternative energy sources,simulink,solar cell,solar panel,sympowersystem,alternative energy sources,mppt,solar panel,sympowersystem,solar panel",165,19,5,0,150,solar panel help solar cell demonstrate arrange solar cell series parallel combination make panel demonstration lot parameter control power current require feel issue please write satendra svnit gmail com improvement please propose easy way panel thanks alternative energy cellsolar energy panel,"['solar', 'panel', 'help', 'solar', 'cell', 'demonstrate', 'arrange', 'solar', 'cell', 'series', 'parallel', 'combination', 'make', 'panel', 'demonstration', 'lot', 'parameter', 'control', 'power', 'current', 'require', 'feel', 'issue', 'please', 'write', 'satendra', 'svnit', 'gmail', 'com', 'improvement', 'please', 'propose', 'easy', 'way', 'panel', 'thanks', 'alternative', 'energy', 'cellsolar', 'energy', 'panel']",0
731,38304,"Battery Charging and discharging model<p>This is a very basic model of battery charging and discharging Behavior.Please refer the notes on the model itself for further info. </p>battery,battery,characteristics,charge,charging,model,power system,battery_system_management,power_electronics_control,battery",8,0,1,0,7,battery charge discharge modelthis basic battery charge discharge behavior please refer note info systembattery managementpower electronics controlbattery,"['battery', 'charge', 'discharge', 'modelthis', 'basic', 'battery', 'charge', 'discharge', 'behavior', 'please', 'refer', 'note', 'info', 'systembattery', 'managementpower', 'electronics', 'controlbattery']",4
732,38305,"Battery backed-up DC Motor model<p>Battery backed-up DC Motor model. For more details please see the model. </p>backed up,battery,battery back up,charging,dc motor,discharging,electrical,model,modelling,motor,parameters,battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control",14,0,1,0,17,battery back motor modelbattery back motor detail please see back back upchargingdc motor controlpower conversion controlpower electronics control,"['battery', 'back', 'motor', 'modelbattery', 'back', 'motor', 'detail', 'please', 'see', 'back', 'back', 'upchargingdc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
733,38348,"two level three phase active font and statcom<p>This system is active front end rectifier. It keeps the DC link at reference value, 400V in this case, even if load is suddenly changes. Also power factor is controllable so can act as STATCOM too. Control is based on synchronous frame theory and 2-level inverter is switched using Sine triangle PWM technique.</p>active front end rectifier,dclink stabilizer,matlab simulink,power electronics,statcom,electric_motor_control,power_conversion_control,power_electronics_control",259,15,4,0,276,two level three phase active font statcomthis active front end rectifier keep link reference value case even load suddenly change also power factor controllable act statcom control base synchronous frame theory level inverter switch sine triangle pwm technique active front end rectifierdclink motor controlpower conversion controlpower electronics control,"['two', 'level', 'three', 'phase', 'active', 'font', 'statcomthis', 'active', 'front', 'end', 'rectifier', 'keep', 'link', 'reference', 'value', 'case', 'even', 'load', 'suddenly', 'change', 'also', 'power', 'factor', 'controllable', 'act', 'statcom', 'control', 'base', 'synchronous', 'frame', 'theory', 'level', 'inverter', 'switch', 'sine', 'triangle', 'pwm', 'technique', 'active', 'front', 'end', 'rectifierdclink', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
734,38419,"This is a simple parallel RLC circuit simulation <p>In this simulation just enter the value of resistor capacitor and inductor and simulation gives u all the parameters 1. resistive current2. capacitive current3. inductive current4. reactive power5. true power6. apparent power7. Power FactorAccording to the requirement of Simulink the capacitor branch is added up with a very low value of resistance and a constant value is added up with apparent power so that at any time its value cannot be zero. </p>parallel rlc circuit,parallel rlc circuit",43,0,1,0,55,simple parallel rlc circuit enter value resistor capacitor inductor give parameter resistive current capacitive current inductive current reactive power true power apparent power power factoraccording requirement capacitor branch add low value resistance constant value add apparent power time value zero parallel rlc circuitparallel rlc circuit,"['simple', 'parallel', 'rlc', 'circuit', 'enter', 'value', 'resistor', 'capacitor', 'inductor', 'give', 'parameter', 'resistive', 'current', 'capacitive', 'current', 'inductive', 'current', 'reactive', 'power', 'true', 'power', 'apparent', 'power', 'power', 'factoraccording', 'requirement', 'capacitor', 'branch', 'add', 'low', 'value', 'resistance', 'constant', 'value', 'add', 'apparent', 'power', 'time', 'value', 'zero', 'parallel', 'rlc', 'circuitparallel', 'rlc', 'circuit']",4
735,38450,"All basic op-amp circuits and active filters.!!<p>All basic op-amp ckts..!!</p>activefilter,filter,mathematics,opamp,signal processing,simulation,simulink",95,0,1,0,97,basic amp circuit active filter basic amp ckts,"['basic', 'amp', 'circuit', 'active', 'filter', 'basic', 'amp', 'ckts']",7
736,38478,"Series RlC circuit parameters calculation<p>In this simulation just enter the value of resistor capacitor and inductor and simulation gives u all the parameters 1. resistive current 2. capacitive current 3. inductive current 4. reactive power 5. true power 6. apparent power 7. Power FactorAccording to the requirement of Simulink a constant value is added up with apparent power so that at any time its value cannot be zero.</p>series rlc circuit parameters,series rlc circuit parameters",36,0,1,0,43,series rlc circuit parameter calculationin enter value resistor capacitor inductor give parameter resistive current capacitive current inductive current reactive power true power apparent power power factoraccording requirement constant value add apparent power time value zero series rlc circuit rlc circuit parameter,"['series', 'rlc', 'circuit', 'parameter', 'calculationin', 'enter', 'value', 'resistor', 'capacitor', 'inductor', 'give', 'parameter', 'resistive', 'current', 'capacitive', 'current', 'inductive', 'current', 'reactive', 'power', 'true', 'power', 'apparent', 'power', 'power', 'factoraccording', 'requirement', 'constant', 'value', 'add', 'apparent', 'power', 'time', 'value', 'zero', 'series', 'rlc', 'circuit', 'rlc', 'circuit', 'parameter']",4
737,38488,"XE Trade offers easy and transparent online quotes, competitive rates, and free international money <p>XE Trade offers easy and transparent online quotes, competitive rates, and free international money transfer options. Plus, our service works seamlessly with your existing bank.Our advanced features let you set rate email alerts, transfer money from your mobile phone, book a Bid with your preferred rate so you donât have to monitor the market, or book a Forward to help reduce the uncertainty of market volatility.XE Trade offers easy and transparent online quotes, competitive rates, and free international money transfer options. Plus, our service works seamlessly with your existing bank.Our advanced features let you set rate email alerts, transfer money from your mobile phone, book a Bid with your preferred rate so you donât have to monitor the market, or book a Forward to help reduce the uncertainty of market volatility.XE Trade offers easy and transparent online quotes, competitive rates, and free international money transfer options. Plus, our service works seamlessly with your existing bank.Our advanced features let you set rate email alerts, transfer money from your mobile phone, book a Bid with your preferred rate so you donât have to monitor the market, or book a Forward to help reduce the uncertainty of market volatility.</p>simulink",16,0,1,0,15,trade offer easy transparent online quote competitive rate free international money trade offer easy transparent online quote competitive rate free international money transfer option plus service work seamlessly exist bank advance feature let set rate email alert transfer money mobile phone book bid prefer rate dont monitor market book forward help reduce uncertainty market volatility trade offer easy transparent online quote competitive rate free international money transfer option plus service work seamlessly exist bank advance feature let set rate email alert transfer money mobile phone book bid prefer rate dont monitor market book forward help reduce uncertainty market volatility trade offer easy transparent online quote competitive rate free international money transfer option plus service work seamlessly exist bank advance feature let set rate email alert transfer money mobile phone book bid prefer rate dont monitor market book forward help reduce uncertainty market volatility,"['trade', 'offer', 'easy', 'transparent', 'online', 'quote', 'competitive', 'rate', 'free', 'international', 'money', 'trade', 'offer', 'easy', 'transparent', 'online', 'quote', 'competitive', 'rate', 'free', 'international', 'money', 'transfer', 'option', 'plus', 'service', 'work', 'seamlessly', 'exist', 'bank', 'advance', 'feature', 'let', 'set', 'rate', 'email', 'alert', 'transfer', 'money', 'mobile', 'phone', 'book', 'bid', 'prefer', 'rate', 'dont', 'monitor', 'market', 'book', 'forward', 'help', 'reduce', 'uncertainty', 'market', 'volatility', 'trade', 'offer', 'easy', 'transparent', 'online', 'quote', 'competitive', 'rate', 'free', 'international', 'money', 'transfer', 'option', 'plus', 'service', 'work', 'seamlessly', 'exist', 'bank', 'advance', 'feature', 'let', 'set', 'rate', 'email', 'alert', 'transfer', 'money', 'mobile', 'phone', 'book', 'bid', 'prefer', 'rate', 'dont', 'monitor', 'market', 'book', 'forward', 'help', 'reduce', 'uncertainty', 'market', 'volatility', 'trade', 'offer', 'easy', 'transparent', 'online', 'quote', 'competitive', 'rate', 'free', 'international', 'money', 'transfer', 'option', 'plus', 'service', 'work', 'seamlessly', 'exist', 'bank', 'advance', 'feature', 'let', 'set', 'rate', 'email', 'alert', 'transfer', 'money', 'mobile', 'phone', 'book', 'bid', 'prefer', 'rate', 'dont', 'monitor', 'market', 'book', 'forward', 'help', 'reduce', 'uncertainty', 'market', 'volatility']",8
738,38508,"This example shows how to access GPIO pins on the BeagleBoard using Simulink.   <p>This submission contains two Simulink models showing how to access GPIO pins on the BeagleBoard. I developed the models using R2012a BeagleBoard Support Package. I used MATLAB Function Block to implement GPIO Read and GPIO Write functionality. The MATLAB Function Blocks are basically used to make GPIO related Linux system calls. One can do a great deal using the same paradigm to call into Linux shell. This example showcases ""system"" and ""popen"" calls.While the examples were developed in R2012a, they should work in R2012b as well.NOTE: GPIO pins on the BeagleBoard use 1.8 V logic levels. Do not connect devices using +5V or +3.3V logic levels to the GPIO pins or you risk frying your board. </p>arduino,beagle panda digital io,beagleboard,gpio,pandaboard,support package",5,0,1,0,3,example show access gpio pin beagleboard submission contains two show access gpio pin beagleboard develop beagleboard support package function block implement gpio read gpio write functionality function block basically make gpio relate linux call one great deal paradigm call linux shell example showcases popen call example develop work well note gpio pin beagleboard logic level connect device logic level gpio pin risk fry board arduinobeagle panda digital package,"['example', 'show', 'access', 'gpio', 'pin', 'beagleboard', 'submission', 'contains', 'two', 'show', 'access', 'gpio', 'pin', 'beagleboard', 'develop', 'beagleboard', 'support', 'package', 'function', 'block', 'implement', 'gpio', 'read', 'gpio', 'write', 'functionality', 'function', 'block', 'basically', 'make', 'gpio', 'relate', 'linux', 'call', 'one', 'great', 'deal', 'paradigm', 'call', 'linux', 'shell', 'example', 'showcases', 'popen', 'call', 'example', 'develop', 'work', 'well', 'note', 'gpio', 'pin', 'beagleboard', 'logic', 'level', 'connect', 'device', 'logic', 'level', 'gpio', 'pin', 'risk', 'fry', 'board', 'arduinobeagle', 'panda', 'digital', 'package']",0
739,38515,"Industry 4.0 as the Towers of Hanoi, where three blocks with local control emerge in a sorted order.<p>A pick and place machine is modeled to provide services of moving blocks either one or two positions over. The objective is to move a stack of three colored blocks from one location to the next such that the final stack is ordered according to color and size. The ordering is an emerging behavior based on local control for each of the blocks. As such, this is a distributed version of the Towers of Hanoi puzzle which is an example of a cyber-physical system.Stereoscopic vision of a video stream of the virtual world enables the machine to first locate where the stack of blocks is. Feedforward control allows a quick pick and place action. Feedback control is used to move the blocks between locations. A pneumatic airflow is modeled to enable the machine to pick and move the blocks.<a href=""http://www.youtube.com/watch?v=L85uAgMamX8"">http://www.youtube.com/watch?v=L85uAgMamX8</a></p>academic,cyberphysical system,equation based modeling,equationbased modeling,image processing,industrie 40,industry 40,manufacturing,multiparadigm,multiparadigm modeling,physics,physics modeling,robotics,service oriented architectures,smart systems,software architectures,st,stereopsis,stereoscopic vision,streaming video,towers of hanoi,multiparadigm modeling",591,54,6,10,540,industry tower hanoi three block local control emerge sort order pick place machine provide service move block either one two position objective move stack three color block one location next final stack order accord color size order emerge behavior base local control block distribute version tower hanoi puzzle example cyber physical stereoscopic vision video stream virtual world enable machine first locate stack block feedforward control allow quick pick place action feedback control move block locations pneumatic airflow enable machine pick move block http youtube com watch uagmamx systemequation base modelingimage industry orient systemssoftware visionstreaming videotowers,"['industry', 'tower', 'hanoi', 'three', 'block', 'local', 'control', 'emerge', 'sort', 'order', 'pick', 'place', 'machine', 'provide', 'service', 'move', 'block', 'either', 'one', 'two', 'position', 'objective', 'move', 'stack', 'three', 'color', 'block', 'one', 'location', 'next', 'final', 'stack', 'order', 'accord', 'color', 'size', 'order', 'emerge', 'behavior', 'base', 'local', 'control', 'block', 'distribute', 'version', 'tower', 'hanoi', 'puzzle', 'example', 'cyber', 'physical', 'stereoscopic', 'vision', 'video', 'stream', 'virtual', 'world', 'enable', 'machine', 'first', 'locate', 'stack', 'block', 'feedforward', 'control', 'allow', 'quick', 'pick', 'place', 'action', 'feedback', 'control', 'move', 'block', 'locations', 'pneumatic', 'airflow', 'enable', 'machine', 'pick', 'move', 'block', 'http', 'youtube', 'com', 'watch', 'uagmamx', 'systemequation', 'base', 'modelingimage', 'industry', 'orient', 'systemssoftware', 'visionstreaming', 'videotowers']",0
740,38526,"Generates a Triangle wave by setting the Amplitude and the Period of the signal.<p>It is an example of how to design a simulink block with a mask to set the parameters.This block generates a triangle wave, using the integration of a pulse time-based generator.Right click and the block and choose edit mask to see how the mask is defined, or choose look under mask to see the components used in this block.</p>simulink mask,triangle wave",6,1,2,0,4,generates triangle wave set amplitude period signal example design block mask set parameter block generates triangle wave integration pulse time base generator right click block choose edit mask see mask define choose look mask see component block masktriangle wave,"['generates', 'triangle', 'wave', 'set', 'amplitude', 'period', 'signal', 'example', 'design', 'block', 'mask', 'set', 'parameter', 'block', 'generates', 'triangle', 'wave', 'integration', 'pulse', 'time', 'base', 'generator', 'right', 'click', 'block', 'choose', 'edit', 'mask', 'see', 'mask', 'define', 'choose', 'look', 'mask', 'see', 'component', 'block', 'masktriangle', 'wave']",7
741,38529,"A positive instead of a negative output buck boost is studied. P-control is just used. <p>the model has the following parameters and specifications. Itâs operating in continuous mode, with buck mode (Vin=110 â 200), and Buck â Boost mode (110 â 50V). Buck-boost transition technique was used at 110 to 90Vinput so that a smooth transition from buck to buck-boost mode can be achieved.Table 5 Simulation ParametersVin50 â 200VVout100V +/- 5%Pout1000WFreq.10kHzL10mHCout1000uFR sense0.01 ohmRload10 ohmsThere are 3 operation modes of this model namely buck mode, buck-boost transition mode and full buck-boost mode. Each modes has its respective ramp generator which are switched over depending on the Vin levels and regulates the Vout up to Â±5%.Table 6 Simulation ModesModesVinBuck Mode 110 â¤ Vin â¤ 200VBuck-boost transition mode90 â¤ Vin â¤ 109Full buck boost mode50 â¤ Vin â¤ 89</p>demo,simulation,simulink,power_conversion_control,power_electronics_control",77,1,2,0,96,positive instead negative output buck boost study control follow parameter specification operate continuous mode buck mode vin buck boost mode buck boost transition technique vinput smooth transition buck buck boost mode achieve table parametersvin vvout pout wfreq khzl mhcout ufr sense ohmrload ohmsthere operation modes namely buck mode buck boost transition mode full buck boost mode mode respective ramp generator switch depend vin level regulate vout table mode vin vbuck boost transition mode vin full buck boost mode vin conversion controlpower electronics control,"['positive', 'instead', 'negative', 'output', 'buck', 'boost', 'study', 'control', 'follow', 'parameter', 'specification', 'operate', 'continuous', 'mode', 'buck', 'mode', 'vin', 'buck', 'boost', 'mode', 'buck', 'boost', 'transition', 'technique', 'vinput', 'smooth', 'transition', 'buck', 'buck', 'boost', 'mode', 'achieve', 'table', 'parametersvin', 'vvout', 'pout', 'wfreq', 'khzl', 'mhcout', 'ufr', 'sense', 'ohmrload', 'ohmsthere', 'operation', 'modes', 'namely', 'buck', 'mode', 'buck', 'boost', 'transition', 'mode', 'full', 'buck', 'boost', 'mode', 'mode', 'respective', 'ramp', 'generator', 'switch', 'depend', 'vin', 'level', 'regulate', 'vout', 'table', 'mode', 'vin', 'vbuck', 'boost', 'transition', 'mode', 'vin', 'full', 'buck', 'boost', 'mode', 'vin', 'conversion', 'controlpower', 'electronics', 'control']",3
742,38635,"This model simulates single phase full converter.  <p>This model simulates single phase full converter and provides firing angle variation at run time. This can help to demonstrate the effect of firing angle variation on the output of converter. </p>control,control systems,converter,dc drives,firing angle control,full wave converter,industrial electronics,power electronics,power system,rectifier",41,1,2,0,42,single phase full converter single phase full converter provide fire angle variation run time help demonstrate effect fire angle variation output converter controlcontrol drivesfiring angle controlfull wave systemrectifier,"['single', 'phase', 'full', 'converter', 'single', 'phase', 'full', 'converter', 'provide', 'fire', 'angle', 'variation', 'run', 'time', 'help', 'demonstrate', 'effect', 'fire', 'angle', 'variation', 'output', 'converter', 'controlcontrol', 'drivesfiring', 'angle', 'controlfull', 'wave', 'systemrectifier']",3
743,38684,"It converts unregulated, distorted ac voltage waveform into regulated, pure sinusoidal one.<p>This circuit converts unregulated, distorted ac voltage waveform into regulated, pure sinusoidal one. It operates under buck and boost mode. </p>simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control",42,1,2,0,53,convert unregulated distorted voltage waveform regulate pure sinusoidal one circuit convert unregulated distorted voltage waveform regulate pure sinusoidal one operate buck boost mode motor controlpower conversion controlpower electronics control,"['convert', 'unregulated', 'distorted', 'voltage', 'waveform', 'regulate', 'pure', 'sinusoidal', 'one', 'circuit', 'convert', 'unregulated', 'distorted', 'voltage', 'waveform', 'regulate', 'pure', 'sinusoidal', 'one', 'operate', 'buck', 'boost', 'mode', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
744,38801,"The toolkit for simulation constant,  variable fractional order and variable type and fractional order derivatives.<p>The toolkit is a set of Simulinks' blocks for simulation of constant and variable fractional order derivatives according to the Grunwald-Letnikov definition. For implementation of variable order derivatives, four types of G-L definition extensions were used. Additionally, blocks for A and B variable type and fractional order derivatives were given. Blocks are implemented as C-MEX S-functions.</p>control design,fractional calculus,signal processing,simulink,variable order differentiation,fractional calculus",98,1,1,30,132,toolkit constant variable fractional order variable type fractional order derivative toolkit set block constant variable fractional order derivative accord grunwald letnikov definition implementation variable order derivative four type definition extension additionally block variable type fractional order derivative give block implement mex function control calculussignal order calculus,"['toolkit', 'constant', 'variable', 'fractional', 'order', 'variable', 'type', 'fractional', 'order', 'derivative', 'toolkit', 'set', 'block', 'constant', 'variable', 'fractional', 'order', 'derivative', 'accord', 'grunwald', 'letnikov', 'definition', 'implementation', 'variable', 'order', 'derivative', 'four', 'type', 'definition', 'extension', 'additionally', 'block', 'variable', 'type', 'fractional', 'order', 'derivative', 'give', 'block', 'implement', 'mex', 'function', 'control', 'calculussignal', 'order', 'calculus']",0
745,38804,"The simulink model of current controlled PMSM drive with constant torque control id=0. <p>The simulation model contains the current controlled PMSM drive with 2-level SPWM and the 3-phase universal converter with dc bus system.  The mathematical model of motor is developed using park transformation matrix, which transformed the 3-phase variables abc into steady state dc signals dq0.The PMSM drive system has double loops, the inner the current control and the outer loop with speed control. The simplest vector control is when id value is assumed zero (constant torque control ), in which the motor will operate efficiently upto rated speed.</p>automotive,control design,measurement,signal processing,simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control,control design,measurement,simulation,simulink",182,11,4,0,237,current control pmsm drive constant torque control contain current control pmsm drive level spwm phase universal converter bus mathematical motor develop park transformation matrix transform phase variable abc steady state signal pmsm drive double loop inner current control outer loop speed control simple vector control value assume zero constant torque control motor operate efficiently upto rat speed motor controlpower conversion controlpower electronics controlcontrol,"['current', 'control', 'pmsm', 'drive', 'constant', 'torque', 'control', 'contain', 'current', 'control', 'pmsm', 'drive', 'level', 'spwm', 'phase', 'universal', 'converter', 'bus', 'mathematical', 'motor', 'develop', 'park', 'transformation', 'matrix', 'transform', 'phase', 'variable', 'abc', 'steady', 'state', 'signal', 'pmsm', 'drive', 'double', 'loop', 'inner', 'current', 'control', 'outer', 'loop', 'speed', 'control', 'simple', 'vector', 'control', 'value', 'assume', 'zero', 'constant', 'torque', 'control', 'motor', 'operate', 'efficiently', 'upto', 'rat', 'speed', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",3
746,38807,"To measure the frequency of AC supply<p>useful for measure the frequency of variable frequency control of an induction motor drive.  </p>electric_motor_control,power_electronics_control,frequency measurement,induction motor,simpower system",14,0,1,0,15,measure frequency supplyuseful measure frequency variable frequency control induction motor drive electric motor controlpower electronics motorsimpower,"['measure', 'frequency', 'supplyuseful', 'measure', 'frequency', 'variable', 'frequency', 'control', 'induction', 'motor', 'drive', 'electric', 'motor', 'controlpower', 'electronics', 'motorsimpower']",1
747,38820,"Buck Boost AC Voltage Controller, Output Pure Sinusoidal<p>To get output voltage pure sinusoidal from AC voltage controller and output voltage can vary below and above the rated voltage.</p>electric_motor_control,power_conversion_control,power_electronics_control,ac voltage controller,buck boost,simpower system,simulink,sinusoidal",27,0,1,0,26,buck boost voltage controller output pure sinusoidalto get output voltage pure sinusoidal voltage controller output voltage vary rat voltage electric motor controlpower conversion controlpower electronics controlac voltage controllerbuck boostsimpower,"['buck', 'boost', 'voltage', 'controller', 'output', 'pure', 'sinusoidalto', 'get', 'output', 'voltage', 'pure', 'sinusoidal', 'voltage', 'controller', 'output', 'voltage', 'vary', 'rat', 'voltage', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'voltage', 'controllerbuck', 'boostsimpower']",1
748,38883,"3rd, 5th, 7th, 9th harmonic generation  <p>we can generate different types of harmonics by adding up the the harmonic frequency with fundamental frequency</p>simulation,simulink",26,0,1,0,21,harmonic generation generate different type harmonic add harmonic frequency fundamental,"['harmonic', 'generation', 'generate', 'different', 'type', 'harmonic', 'add', 'harmonic', 'frequency', 'fundamental']",7
749,38902,"QPSK modulation with 50% SRRC pulses, NDA TED and DD PED recovery loops<p>QPSK modulation with square-root raised cosine pulses of 50% rolloff factor. The timing recovery loops uses an interpolator with Farrow structure with an NDA timing error detector (approximate derivative). The phase recovery loop uses a DD phase error detector. Modified to be run with Matlab 2011b or higher (changed the QPSK modulator and demodulator and value of alpha to 0.5)</p>carrier recovery,communication,data aided,decision directed,digital modulation,farrow structure,interpolator,qpsk,signal processing,synchronization,timing recovery,wireless",164,16,5,0,175,qpsk modulation srrc pulse nda ted ped recovery loopsqpsk modulation square root raise cosine pulse rolloff factor timing recovery loop interpolator farrow structure nda time error detector approximate derivative phase recovery loop phase error detector modify run high change qpsk modulator demodulator value alpha carrier aideddecision directeddigital,"['qpsk', 'modulation', 'srrc', 'pulse', 'nda', 'ted', 'ped', 'recovery', 'loopsqpsk', 'modulation', 'square', 'root', 'raise', 'cosine', 'pulse', 'rolloff', 'factor', 'timing', 'recovery', 'loop', 'interpolator', 'farrow', 'structure', 'nda', 'time', 'error', 'detector', 'approximate', 'derivative', 'phase', 'recovery', 'loop', 'phase', 'error', 'detector', 'modify', 'run', 'high', 'change', 'qpsk', 'modulator', 'demodulator', 'value', 'alpha', 'carrier', 'aideddecision', 'directeddigital']",5
750,38958,"simulation using PI controller<p>spped control of a DC motor using PI controller</p>electric_motor_control,power_conversion_control,power_electronics_control,using pi microcontroller",17,1,2,0,17,controllerspped control motor motor controlpower conversion controlpower electronics controlusing microcontroller,"['controllerspped', 'control', 'motor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlusing', 'microcontroller']",6
751,39037,"Simulink blockset for use with the ArduPilot Mega 2.0 hardware. Includes blocks to read external rad<p>As part of developing a new graduate level Guidance, Navigation, and Control course at Embry-Riddle Aeronautical University, a Simulink blockset has been developed that will allow students to work solely in Matlab/Simulink for the development of GNC code. This code can be downloaded directly to the ArduPilot 2.0 integrated sensor and processing package allowing the students to easily develop small unmanned aerial vehicles. The blockset is useful in that it eliminates the requirement to have a knowledgeable programmer, and a knowledgeable electrical engineer to integrate hardware and software with the airframe. The included guide is intended to describe the functionality of the blockset, provide recommendations for how to implement control designs, and steps on how to embed the code onto the ArduPilot directly from Simulink. The blockset is in early development and there is room for improvement; it is expected that future students or the academic community as a whole will advance the capabilities going forward.This blockset uses the new Run-On-Target-Hardware feature that first appeared in Matlab 2012a which allows Simulink users to auto-generate code from a Simulink model for select hardware targets. This feature was previously only available to owners of Simulink Coder and other similar toolboxes.For more information, please see the HowTo document included in the .zip file. The authors of the blockset may be reached at:<a href=""mailto:apm2.simulink@gmail.com"">apm2.simulink@gmail.com</a></p>wireless sensor networks,wsn,quadcopter,apm,apm2,arduino,diydrones,aerospace,ahrs,control design,embedded code,kalman,roth,simulation,simulink,state estimation,system identification,uav,wireless,wireless,ahrs,apm2,ardupilot",18,0,1,4,22,blockset ardupilot mega hardware include block read external radas part develop new graduate level guidance navigation control course embry riddle aeronautical university blockset develop allow student work solely development gnc code code download directly ardupilot integrated sensor processing package allow student easily develop small unmanned aerial vehicle blockset useful eliminates requirement knowledgeable programmer knowledgeable electrical engineer integrate hardware software airframe include guide intend describe functionality blockset provide recommendation implement control designs step embed code onto ardupilot directly blockset early development room improvement expect future student academic community whole advance capability forward blockset new run target hardware feature first appear allows users auto generate code select hardware target feature previously available owner coder similar toolbox information please see howto document include zip file author blockset may reach apm gmail comwireless sensor designembedded ardupilot,"['blockset', 'ardupilot', 'mega', 'hardware', 'include', 'block', 'read', 'external', 'radas', 'part', 'develop', 'new', 'graduate', 'level', 'guidance', 'navigation', 'control', 'course', 'embry', 'riddle', 'aeronautical', 'university', 'blockset', 'develop', 'allow', 'student', 'work', 'solely', 'development', 'gnc', 'code', 'code', 'download', 'directly', 'ardupilot', 'integrated', 'sensor', 'processing', 'package', 'allow', 'student', 'easily', 'develop', 'small', 'unmanned', 'aerial', 'vehicle', 'blockset', 'useful', 'eliminates', 'requirement', 'knowledgeable', 'programmer', 'knowledgeable', 'electrical', 'engineer', 'integrate', 'hardware', 'software', 'airframe', 'include', 'guide', 'intend', 'describe', 'functionality', 'blockset', 'provide', 'recommendation', 'implement', 'control', 'designs', 'step', 'embed', 'code', 'onto', 'ardupilot', 'directly', 'blockset', 'early', 'development', 'room', 'improvement', 'expect', 'future', 'student', 'academic', 'community', 'whole', 'advance', 'capability', 'forward', 'blockset', 'new', 'run', 'target', 'hardware', 'feature', 'first', 'appear', 'allows', 'users', 'auto', 'generate', 'code', 'select', 'hardware', 'target', 'feature', 'previously', 'available', 'owner', 'coder', 'similar', 'toolbox', 'information', 'please', 'see', 'howto', 'document', 'include', 'zip', 'file', 'author', 'blockset', 'may', 'reach', 'apm', 'gmail', 'comwireless', 'sensor', 'designembedded', 'ardupilot']",0
752,39059,"PV Cell Modelling will help you in fixing Operating point of Solar cell for a particular geography<p>Can be used to demonstrate the illumination and temperature effect on PV cells and to study and experience the need of MPPT algorithms.PV CELL MODELINGPV cell are made of semiconductors material, which are specially treated to form an electric field, positive and negative side. The model of the solar cell can br realized byan equivalent circuit that consist of a current source inparallel with a diode. The current source represents thecurrent generated by photons (often denoted as Iph or IL),and its output is constant under constant temperature andconstant incident radiation of light. Rs and Rsh componentscan be neglected for the ideal model.</p>control design,modeling,simulation,simulink,power_conversion_control,power_electronics_control,control design,control design",16,0,1,0,22,cell help fix operate point solar cell particular geographycan demonstrate illumination temperature effect cell study experience need mppt algorithms cell modelingpv cell make semiconductor material specially treated form electric field positive negative side solar cell realize byan equivalent circuit consist current source inparallel diode current source represent thecurrent generate photon often denote iph output constant constant temperature andconstant incident radiation light rsh componentscan neglect ideal control conversion controlpower electronics controlcontrol designcontrol design,"['cell', 'help', 'fix', 'operate', 'point', 'solar', 'cell', 'particular', 'geographycan', 'demonstrate', 'illumination', 'temperature', 'effect', 'cell', 'study', 'experience', 'need', 'mppt', 'algorithms', 'cell', 'modelingpv', 'cell', 'make', 'semiconductor', 'material', 'specially', 'treated', 'form', 'electric', 'field', 'positive', 'negative', 'side', 'solar', 'cell', 'realize', 'byan', 'equivalent', 'circuit', 'consist', 'current', 'source', 'inparallel', 'diode', 'current', 'source', 'represent', 'thecurrent', 'generate', 'photon', 'often', 'denote', 'iph', 'output', 'constant', 'constant', 'temperature', 'andconstant', 'incident', 'radiation', 'light', 'rsh', 'componentscan', 'neglect', 'ideal', 'control', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designcontrol', 'design']",4
753,39120,"Lift table with hydraulic actuation, controlled by an analog circuit, with a 3-D scissor mechanism.<p>This file contains a hydraulic lift table using Simscape. Models of physical components, such as valves, hydraulic cylinders, motors, and analog circuits, are assembled from Simscape Foundation Library components. Alternate component models using blocks from the Simscape add-on libraries are included to show additional parameterization options and physical effects available in those libraries. A Simscape Multibody model of the scissor mechanism in the lift table is also included, which automatically produces a 3-D animation of the lift.  Please read the README.txt file to get started. See an overview of this model in this video (5 min): <a href=""http://www.mathworks.com/videos/simscape-add-on-libraries-73285.html"">http://www.mathworks.com/videos/simscape-add-on-libraries-73285.html</a> Learn how to model a scissor mechanism in this video (7 min): <a href=""https://www.mathworks.com/videos/modeling-a-scissor-jack-68849.html"">https://www.mathworks.com/videos/modeling-a-scissor-jack-68849.html</a> See how to use Simscape to model physical systems: <a href=""https://www.mathworks.com/videos/physical-modeling-with-simscape-81950.html"">https://www.mathworks.com/videos/physical-modeling-with-simscape-81950.html</a> Learn more about Simscape Editing Mode on this page: <a href=""https://www.mathworks.com/products/simscape/features.html#sharing-models"">https://www.mathworks.com/products/simscape/features.html#sharing-models</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>electrical,hydraulic,multibody,physical modeling,simelectronics,simhydraulics,simmechanics,simmechanics2g,simscape",7822,1356,5,464,6255,lift table hydraulic actuation control analog circuit scissor mechanism file contain hydraulic lift table simscape physical component valves hydraulic cylinder motor analog circuit assemble simscape foundation component alternate component block simscape add include show additional option physical effect available simscape multibody scissor mechanism lift table also include automatically produce animation lift please read readme txt file get start see overview video min http mathworks com videos simscape add html learn scissor mechanism video min mathworks com videos modeling scissor jack html see simscape physical mathworks com videos physical modeling simscape html learn simscape edit mode page mathworks com product simscape feature html share find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling gsimscape,"['lift', 'table', 'hydraulic', 'actuation', 'control', 'analog', 'circuit', 'scissor', 'mechanism', 'file', 'contain', 'hydraulic', 'lift', 'table', 'simscape', 'physical', 'component', 'valves', 'hydraulic', 'cylinder', 'motor', 'analog', 'circuit', 'assemble', 'simscape', 'foundation', 'component', 'alternate', 'component', 'block', 'simscape', 'add', 'include', 'show', 'additional', 'option', 'physical', 'effect', 'available', 'simscape', 'multibody', 'scissor', 'mechanism', 'lift', 'table', 'also', 'include', 'automatically', 'produce', 'animation', 'lift', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'overview', 'video', 'min', 'http', 'mathworks', 'com', 'videos', 'simscape', 'add', 'html', 'learn', 'scissor', 'mechanism', 'video', 'min', 'mathworks', 'com', 'videos', 'modeling', 'scissor', 'jack', 'html', 'see', 'simscape', 'physical', 'mathworks', 'com', 'videos', 'physical', 'modeling', 'simscape', 'html', 'learn', 'simscape', 'edit', 'mode', 'page', 'mathworks', 'com', 'product', 'simscape', 'feature', 'html', 'share', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'gsimscape']",7
754,39121,"Active filter implemented as an analog circuit in Simscape whose gain varies with temperature.<p>This file contains a filter implemented as an analog circuit using Simscape.  Resistors, capacitors, and an op-amp are used to model the filter.  A custom resistor whose resistance varies with temperature is defined using Simscape language.  You can see the gain of the filter vary with temperature.Please read the README.txt file to get started.To learn more about this example and Simscape language, watch this video (3 min):<a href=""http://www.mathworks.com/videos/simscape-language-electronic-example-73114.htmlTo"">http://www.mathworks.com/videos/simscape-language-electronic-example-73114.htmlTo</a> learn more about mechatronic systems, watch this webinarhttp://<a href=""http://www.mathworks.com/videos/mechatronic-simulation-with-simelectronics-81946.htmlTo"">www.mathworks.com/videos/mechatronic-simulation-with-simelectronics-81946.htmlTo</a> find other Simscape examples, search for posts with the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To</a> learn more about MathWorks Simscape Products, go to:<a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>analog circuit,electrical,electronic,opamp,physical modeling,simelectronics,simscape,temperature",42,5,2,0,38,active filter implement analog circuit simscape whose gain vary temperature file contain filter implement analog circuit simscape resistor capacitor amp filter custom resistor whose resistance vary temperature define simscape language see gain filter vary temperature please read readme txt file get start learn example simscape language watch video min http mathworks com videos simscape language electronic example htmlto learn mechatronic watch webinarhttp mathworks com videos mechatronic simelectronics htmlto find simscape example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product http mathworks com physical modeling analog,"['active', 'filter', 'implement', 'analog', 'circuit', 'simscape', 'whose', 'gain', 'vary', 'temperature', 'file', 'contain', 'filter', 'implement', 'analog', 'circuit', 'simscape', 'resistor', 'capacitor', 'amp', 'filter', 'custom', 'resistor', 'whose', 'resistance', 'vary', 'temperature', 'define', 'simscape', 'language', 'see', 'gain', 'filter', 'vary', 'temperature', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'learn', 'example', 'simscape', 'language', 'watch', 'video', 'min', 'http', 'mathworks', 'com', 'videos', 'simscape', 'language', 'electronic', 'example', 'htmlto', 'learn', 'mechatronic', 'watch', 'webinarhttp', 'mathworks', 'com', 'videos', 'mechatronic', 'simelectronics', 'htmlto', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'analog']",7
755,39167,"I have modeled a dc series motor<p>A dc series motor has modeled with aid of its voltage and torque equations.</p>electric_motor_control,power_conversion_control,power_electronics_control,modeling,simulation,simulink",30,2,2,0,34,series motora series motor aid voltage torque equation electric motor controlpower conversion controlpower electronics,"['series', 'motora', 'series', 'motor', 'aid', 'voltage', 'torque', 'equation', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
756,39168,"I have modeled a  Permanent magnet dc shunt motor<p>Â It has modeled with the help of mathematical equations of permanent magnet dc motor</p>electric_motor_control,power_conversion_control,power_electronics_control,mathematics,simulation,simulink",28,2,2,0,32,permanent magnet shunt motor help mathematical equation permanent magnet motorelectric motor controlpower conversion controlpower electronics,"['permanent', 'magnet', 'shunt', 'motor', 'help', 'mathematical', 'equation', 'permanent', 'magnet', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
757,39258,"Chaos system<p>change the nunmber of the gain you can see different chaos system,such as Lorenz system(while a=0), Chen's system(while a=0.8),Lv's system(while a=1).</p>chaos system lorenz system chens system lvs system",18,0,1,0,27,chaos systemchange nunmber gain see different chaos systemsuch lorenz chen chaos lorenz chens lvs,"['chaos', 'systemchange', 'nunmber', 'gain', 'see', 'different', 'chaos', 'systemsuch', 'lorenz', 'chen', 'chaos', 'lorenz', 'chens', 'lvs']",8
758,39348,"Simulink ON/OFF switch.Used to toggle between ON and OFF states.<p>Subsystem alternates between ON and OFF and changes colors and labels accordingly.The output is 0 and color is blue when OFFThe output is 1 and color is red when ON.Code is contained in the OpenFcn callback and can be changed as needed.</p>modeling,simulation,simulink",7,1,2,0,5,switch toggle state subsystem alternate change color label accordingly output color blue offthe output color red code contain openfcn callback change need,"['switch', 'toggle', 'state', 'subsystem', 'alternate', 'change', 'color', 'label', 'accordingly', 'output', 'color', 'blue', 'offthe', 'output', 'color', 'red', 'code', 'contain', 'openfcn', 'callback', 'change', 'need']",5
759,39354,"Developing Simulink Device Driver Blocks: Step-By-Step Guide and Examples<p>This package contains a guide that explains, in a step-by-step fashion, how to develop device driver blocks (blocks that perform target-specific functions when executed on a target platform). Example drivers for:-) Arduino digital output-) Arduino digital input-) Arduino analog output-) Arduino encoder readare included.While the examples are built using the Arduino as the hardware platform (specifically relying on the Simulink Support Package for Arduino), the method applies to any other supported target.In this guide, the first method to develop device drivers is based on the S-Function Builder block. Following chapters also describe different methods based respectively on the Legacy Code tool, the MATLAB function block, and the System Object block. Advantages and disadvantages of each method are discussed in the guide.Finally, note that for MATLAB 2013b you will need to apply a fix for the S-Function builder to develop blocks with no input. To do so, go to the following page: <a href=""http://www.mathworks.com/support/bugreports/1006532"">http://www.mathworks.com/support/bugreports/1006532</a> , scroll down to the bottom, and follow the instructions therein.</p>pick of the week,potw,dc motor,stepper motor,adafruit,arduino,dc motor,device,driver,embedded,encoder,mark try to copy the content and paste it in a word document mar,motor shield,pick of the week,potw,stepper motor,arduino,arduino,arduino,arduino,encoder,arduino,mark try to copy the content and paste it in a word document mar,driver,arduino",41,1,2,0,31,develop device driver block step step guide examplesthis package contains guide explain step step fashion develop device driver block block perform target specific function execute target platform example driver arduino digital output arduino digital input arduino analog output arduino encoder readare include example build arduino hardware platform specifically rely support package arduino method applies support target guide first method develop device driver base function builder block follow chapter also describe different method base respectively legacy code tool function block object block advantage disadvantage method discuss guide finally note need apply fix function builder develop block input follow page http mathworks com support bugreports scroll bottom follow instruction therein pick weekpotwdc motorstepper try copy content paste word document marmotor shieldpick weekpotwstepper try copy content paste word document,"['develop', 'device', 'driver', 'block', 'step', 'step', 'guide', 'examplesthis', 'package', 'contains', 'guide', 'explain', 'step', 'step', 'fashion', 'develop', 'device', 'driver', 'block', 'block', 'perform', 'target', 'specific', 'function', 'execute', 'target', 'platform', 'example', 'driver', 'arduino', 'digital', 'output', 'arduino', 'digital', 'input', 'arduino', 'analog', 'output', 'arduino', 'encoder', 'readare', 'include', 'example', 'build', 'arduino', 'hardware', 'platform', 'specifically', 'rely', 'support', 'package', 'arduino', 'method', 'applies', 'support', 'target', 'guide', 'first', 'method', 'develop', 'device', 'driver', 'base', 'function', 'builder', 'block', 'follow', 'chapter', 'also', 'describe', 'different', 'method', 'base', 'respectively', 'legacy', 'code', 'tool', 'function', 'block', 'object', 'block', 'advantage', 'disadvantage', 'method', 'discuss', 'guide', 'finally', 'note', 'need', 'apply', 'fix', 'function', 'builder', 'develop', 'block', 'input', 'follow', 'page', 'http', 'mathworks', 'com', 'support', 'bugreports', 'scroll', 'bottom', 'follow', 'instruction', 'therein', 'pick', 'weekpotwdc', 'motorstepper', 'try', 'copy', 'content', 'paste', 'word', 'document', 'marmotor', 'shieldpick', 'weekpotwstepper', 'try', 'copy', 'content', 'paste', 'word', 'document']",7
760,39383,"The inverter is designed with the help of GTO's for best performance.<p>The Gto's are triggered as per the following sequencefor conversion process i'll just tell you an easy trick. we have theta=omega*t...so t can be written as theta/omega..if the angle is 60 degree and frequency is 50 hz..then timeperiod =1/50 and the delay is t= 60/2*3.14*50 ...Pulse Width : 180/360 =50&amp;If u hav got any doubts,please contact me..</p>180 degree,inverters,power electronics,simulation,simulink",40,0,1,0,43,inverter design help gto best performance gto trigger per follow sequencefor conversion process tell easy trick theta omega write theta omega angle degree frequency timeperiod delay pulse width amp hav get doubtsplease contact,"['inverter', 'design', 'help', 'gto', 'best', 'performance', 'gto', 'trigger', 'per', 'follow', 'sequencefor', 'conversion', 'process', 'tell', 'easy', 'trick', 'theta', 'omega', 'write', 'theta', 'omega', 'angle', 'degree', 'frequency', 'timeperiod', 'delay', 'pulse', 'width', 'amp', 'hav', 'get', 'doubtsplease', 'contact']",4
761,39400,"Induction Motor speed controlled by using 3-phase AC voltage controller<p>Induction Motor speed controlled by using thyrister based 3-phase AC voltage controller. In this model, speed of Induction motor is controlled with proper firing angle of AC voltage controller. It is open loop controller</p>3phase,ac voltage controller,induction motor,speed control,electric_motor_control,power_conversion_control,power_electronics_control",331,21,6,0,348,induction motor speed control phase voltage motor speed control thyrister base phase voltage controller speed induction motor control proper firing angle voltage controller open loop controller phaseac voltage motorspeed controlelectric motor controlpower conversion controlpower electronics control,"['induction', 'motor', 'speed', 'control', 'phase', 'voltage', 'motor', 'speed', 'control', 'thyrister', 'base', 'phase', 'voltage', 'controller', 'speed', 'induction', 'motor', 'control', 'proper', 'firing', 'angle', 'voltage', 'controller', 'open', 'loop', 'controller', 'phaseac', 'voltage', 'motorspeed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
762,39401,"Inverter is operated with boost converter<p>This is helpful to design home inverters, 3-phase inverters. In this model, Boost converter output is connected as a input to inverter. AC loads are connected to Inverter</p>boost converter,dc voltage controller,inverter,power_conversion_control,power_electronics_control",35,1,2,0,44,inverter operate boost converterthis helpful design home inverter phase inverter boost converter output connect input inverter load connect inverterboost converterdc voltage conversion controlpower electronics control,"['inverter', 'operate', 'boost', 'converterthis', 'helpful', 'design', 'home', 'inverter', 'phase', 'inverter', 'boost', 'converter', 'output', 'connect', 'input', 'inverter', 'load', 'connect', 'inverterboost', 'converterdc', 'voltage', 'conversion', 'controlpower', 'electronics', 'control']",1
763,39402,"single phase Inverter is controlled by current controller<p>In this model, inverter is controlled by using current controller, using this model, we can control inverter output current, so that it will helpful to operate with constant current loads</p>ac load,constant current load,current controller,inverter",44,3,3,0,45,single phase inverter control current controllerin inverter control current controller control inverter output current helpful operate constant current loadsac loadconstant current loadcurrent,"['single', 'phase', 'inverter', 'control', 'current', 'controllerin', 'inverter', 'control', 'current', 'controller', 'control', 'inverter', 'output', 'current', 'helpful', 'operate', 'constant', 'current', 'loadsac', 'loadconstant', 'current', 'loadcurrent']",1
764,39403,"Fuel cell is connected to grid and fuel cell is operated at their maximum power rating<p>In this model, Fuel cell is connected to grid and it is controlled by power based controller. in this model, FC is operating at maximum power rating.</p>controller,fuel cell,grid,real and reactive power",259,15,4,0,305,fuel cell connect grid fuel cell operate maximum power ratingin fuel cell connect grid control power base controller operate maximum power rating controllerfuel cellgridreal reactive power,"['fuel', 'cell', 'connect', 'grid', 'fuel', 'cell', 'operate', 'maximum', 'power', 'ratingin', 'fuel', 'cell', 'connect', 'grid', 'control', 'power', 'base', 'controller', 'operate', 'maximum', 'power', 'rating', 'controllerfuel', 'cellgridreal', 'reactive', 'power']",3
765,39404,"induction motor is connected by matrix converter and speed is regulated by open loop<p>In this model, induction motor is connected by matrix converter and matrix convert is controlled by PWM technique </p>induction motor,matrix converter,speed control,electric_motor_control,power_conversion_control,power_electronics_control",83,2,3,0,88,induction motor connect matrix converter speed regulate open loopin induction motor connect matrix converter matrix convert control pwm technique induction motormatrix converterspeed controlelectric motor controlpower conversion controlpower electronics control,"['induction', 'motor', 'connect', 'matrix', 'converter', 'speed', 'regulate', 'open', 'loopin', 'induction', 'motor', 'connect', 'matrix', 'converter', 'matrix', 'convert', 'control', 'pwm', 'technique', 'induction', 'motormatrix', 'converterspeed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
766,39405,"Matrix converter is controlled by PWM technique.<p>AC to AC converter is presented by matrix converter technique. In this model matrix converter is implemented with PWM technique. </p>ac to ac conversion,matrix converter,pwm method,electric_motor_control,power_conversion_control,power_electronics_control,pwm method",80,2,3,0,88,matrix converter control pwm technique converter present matrix converter technique matrix converter implement pwm technique converterpwm methodelectric motor controlpower conversion controlpower electronics controlpwm method,"['matrix', 'converter', 'control', 'pwm', 'technique', 'converter', 'present', 'matrix', 'converter', 'technique', 'matrix', 'converter', 'implement', 'pwm', 'technique', 'converterpwm', 'methodelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpwm', 'method']",1
767,39406,"PV system is operated with MPPT algorithm and converter.<p>PV system is operated with different levels of irradiances and it is operating with MPPT point by connecting MPPT circuit</p>boost converter,dc to dc converter,irradiance,mppt,pv,solar power,power_conversion_control,power_electronics_control,boost converter,mppt,intelligent energymanagemnet system basedon current of loads",92,2,2,0,106,operate mppt algorithm converter operate different level irradiances operate mppt point connect mppt circuitboost converterdc powerpower conversion controlpower electronics controlboost basedon current load,"['operate', 'mppt', 'algorithm', 'converter', 'operate', 'different', 'level', 'irradiances', 'operate', 'mppt', 'point', 'connect', 'mppt', 'circuitboost', 'converterdc', 'powerpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'basedon', 'current', 'load']",3
768,39407,"PV system is connected to DC loads<p>In this model, PV system is directly connected to dc loads. hence MPPT is not connected, so that system will operate without MPPT</p>dc loads,irradiance,pv,dc loads,irradiance,pv,power_conversion_control,power_electronics_control",55,1,2,0,59,connect loadsin directly connect load hence mppt connect operate without mpptdc conversion controlpower electronics control,"['connect', 'loadsin', 'directly', 'connect', 'load', 'hence', 'mppt', 'connect', 'operate', 'without', 'mpptdc', 'conversion', 'controlpower', 'electronics', 'control']",1
769,39408,"PV system is connected to Grid via MPPT and Inverter<p>In this model, PV system is connected to Grid through inverter, and MPPT for PV is incorporated. </p>dc to dc converter,grid,inverter,inverter control,mppt,pv,dc to dc converter,power_conversion_control,power_electronics_control,dc to dc converter,pv,inverter control,dc to dc converter,dc to dc converter",94,2,2,0,115,connect grid via mppt inverterin connect grid inverter mppt incorporate controlmpptpvdc converterpower conversion controlpower electronics controldc controldc converterdc converter,"['connect', 'grid', 'via', 'mppt', 'inverterin', 'connect', 'grid', 'inverter', 'mppt', 'incorporate', 'controlmpptpvdc', 'converterpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'controldc', 'converterdc', 'converter']",1
770,39409,"Speed control of induction motor by using SVPWM<p>In this model, Speed of induction Motor is controlled by using SVPWM and PI based closed loop controller is designed.</p>closed loop controller,induction motor,pi,speed controller,svpwm,electric_motor_control,power_electronics_control",150,6,3,0,226,speed control induction motor svpwmin speed induction motor control svpwm base close loop controller design close loop motorpispeed motor controlpower electronics control,"['speed', 'control', 'induction', 'motor', 'svpwmin', 'speed', 'induction', 'motor', 'control', 'svpwm', 'base', 'close', 'loop', 'controller', 'design', 'close', 'loop', 'motorpispeed', 'motor', 'controlpower', 'electronics', 'control']",6
771,39410,"Speed Control of Induction motor by using SVPWM technique<p>In this model, speed of Induction Motor is controled by using SVPWM based V/F method. </p>closed loop,induction motor,svpwm,vf,electric_motor_control,power_electronics_control,closed loop,induction motor,svpwm,vf,induction motor,closed loop,vf1",150,6,3,0,225,speed control induction motor svpwm techniquein speed induction motor control svpwm base method close loopinduction motor controlpower electronics controlclosed loopinduction motorclosed loopvf,"['speed', 'control', 'induction', 'motor', 'svpwm', 'techniquein', 'speed', 'induction', 'motor', 'control', 'svpwm', 'base', 'method', 'close', 'loopinduction', 'motor', 'controlpower', 'electronics', 'controlclosed', 'loopinduction', 'motorclosed', 'loopvf']",1
772,39411,"Single Phase AC voltage controller is designed for variable voltage and frequency.<p>thyristor based single phase AC voltage controller is designed in this model.</p>ac to ac conversion,ac voltage controller,electric_motor_control,power_conversion_control,power_electronics_control",119,7,5,0,124,single phase voltage controller design variable voltage frequency thyristor base single phase voltage controller design conversionac voltage motor controlpower conversion controlpower electronics control,"['single', 'phase', 'voltage', 'controller', 'design', 'variable', 'voltage', 'frequency', 'thyristor', 'base', 'single', 'phase', 'voltage', 'controller', 'design', 'conversionac', 'voltage', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
773,39412,"This file was developed by equation of motions taking 8 degrees into account <p>The notations may be different in the picture. If u have force like in Hydropneumatic suspension with control system, we can integrate with this code. If anybody developed this control system for this please share.................... Feel free to ask questions......  </p>automotive,automotive,automotive,automotive",819,58,3,0,928,file develop equation motion take degree account notation may different picture force like hydropneumatic suspension control integrate code anybody develop control please share feel free ask question,"['file', 'develop', 'equation', 'motion', 'take', 'degree', 'account', 'notation', 'may', 'different', 'picture', 'force', 'like', 'hydropneumatic', 'suspension', 'control', 'integrate', 'code', 'anybody', 'develop', 'control', 'please', 'share', 'feel', 'free', 'ask', 'question']",0
774,39413,"Viscosity is calculated by different methods.<p>in this model, viscosity is calculate by different fundamental methods.</p>fluid mechanics,mechanical,viscosity",41,3,2,0,37,viscosity calculate different method viscosity calculate different fundamental method fluid,"['viscosity', 'calculate', 'different', 'method', 'viscosity', 'calculate', 'different', 'fundamental', 'method', 'fluid']",0
775,39436,"dc load is operated with fuel cell trough boost converter<p>in this model fuel cell is generated power to dc load, and it is connected via boost converter</p>boost converter,dc loads,fuel cell,power_conversion_control,power_electronics_control",26,1,2,0,26,load operate fuel cell trough boost converterin fuel cell generate power load connect via boost converterboost converterdc loadsfuel cellpower conversion controlpower electronics control,"['load', 'operate', 'fuel', 'cell', 'trough', 'boost', 'converterin', 'fuel', 'cell', 'generate', 'power', 'load', 'connect', 'via', 'boost', 'converterboost', 'converterdc', 'loadsfuel', 'cellpower', 'conversion', 'controlpower', 'electronics', 'control']",3
776,39464,"Trigger a pulse with a zero or 1 (rather than a designated time) in Simulink<p>I needed to trigger a square wave pulse using a signal within my Simulink model (in my case it was a position vector). All I could find within the Sim Library was pulses set to activate at a certain time (by using a delay or building a signal from scratch).  So I baked one myself.  The biggest problem was the inability to ""reset"" the clock (I wanted to use it as a timer to set the width of my pulse). As a substitution for the clock timer, I compare the output of pulse_amplitude =&gt; integrator block with the value = pulse_amplitude*pulse_width. </p>modeling,signal processing,simulink,square wave",19,1,2,0,19,trigger pulse zero rather designated time need trigger square wave pulse signal within case position vector could find within sim pulse set activate certain time delay build signal scratch bake one big problem inability reset clock want timer set width pulse substitution clock timer compare output pulse amplitude integrator block value pulse amplitude pulse width modelingsignal wave,"['trigger', 'pulse', 'zero', 'rather', 'designated', 'time', 'need', 'trigger', 'square', 'wave', 'pulse', 'signal', 'within', 'case', 'position', 'vector', 'could', 'find', 'within', 'sim', 'pulse', 'set', 'activate', 'certain', 'time', 'delay', 'build', 'signal', 'scratch', 'bake', 'one', 'big', 'problem', 'inability', 'reset', 'clock', 'want', 'timer', 'set', 'width', 'pulse', 'substitution', 'clock', 'timer', 'compare', 'output', 'pulse', 'amplitude', 'integrator', 'block', 'value', 'pulse', 'amplitude', 'pulse', 'width', 'modelingsignal', 'wave']",0
777,39475,"SVPWM for 2 level inverter<p>NPC</p>simulink,svpwm,svpwm,simulink,svpwm",274,18,4,0,346,svpwm level,"['svpwm', 'level']",3
778,39477,This file shows the working of double acting hydraulic cylinder<p>Working of double acting cylinder</p>simhydraulics,25,0,1,0,23,file show work double act hydraulic cylinderworking double act,"['file', 'show', 'work', 'double', 'act', 'hydraulic', 'cylinderworking', 'double', 'act']",7
779,39490,"Chua's circuit Simulink model<p>Chua's circuit Simulink model,</p>chuas circuit,chuas circuit",12,0,1,0,16,chua circuit modelchua circuit modelchuas circuitchuas circuit,"['chua', 'circuit', 'modelchua', 'circuit', 'modelchuas', 'circuitchuas', 'circuit']",4
780,39496,"The Bit Packet Analyzer can be used to analyze bit streams for repeating patterns (e.g. preamble)<p>The analyzer cuts the streaming data into packets of user defined size and plots them side by side. If the packet size is right and the stream contains repeating patterns you should see the pattern picture clearly, the the size is wrong or there is no repeating patterns you will not see the pattern.The archive contains 3 analyzer variants:1) A MATLAB function to be called programatically2) GUI version 3) Simulink blockIt also contains some auxiliary material:- MATLAB script example. The example generates some random data with constant size and repeating preamble + pilot.- Simulink model exmaple. The model generates bit stream with similar properties as the MATLAB example script.</p>bit,communications,gui,packet,signal processing",13,1,2,0,13,bit packet analyzer analyze bit streams repeat pattern preamble analyzer cut stream data packet user define size plot side side packet size right stream contain repeat pattern see pattern picture clearly size wrong repeating pattern see pattern archive contains analyzer variant function call programatically gui version blockit also contain auxiliary material script example example generate random data constant size repeat preamble pilot exmaple generate bit stream similar property example script processing,"['bit', 'packet', 'analyzer', 'analyze', 'bit', 'streams', 'repeat', 'pattern', 'preamble', 'analyzer', 'cut', 'stream', 'data', 'packet', 'user', 'define', 'size', 'plot', 'side', 'side', 'packet', 'size', 'right', 'stream', 'contain', 'repeat', 'pattern', 'see', 'pattern', 'picture', 'clearly', 'size', 'wrong', 'repeating', 'pattern', 'see', 'pattern', 'archive', 'contains', 'analyzer', 'variant', 'function', 'call', 'programatically', 'gui', 'version', 'blockit', 'also', 'contain', 'auxiliary', 'material', 'script', 'example', 'example', 'generate', 'random', 'data', 'constant', 'size', 'repeat', 'preamble', 'pilot', 'exmaple', 'generate', 'bit', 'stream', 'similar', 'property', 'example', 'script', 'processing']",5
781,39518,"modelling of Pv<p>Pv modelling with out temp effect</p>pv,pv,pv,pv,pv,pv",27,1,2,0,33,pvpv modelling temp,"['pvpv', 'modelling', 'temp']",2
782,39542,"Updated code with 8 dof <p>I have given values with this to check the model...k_1=18760;k_3=18760;k_2=37520.28;k_4=32000;c_1=900;c_2=936;c_3=900;c_4=936;M=1000;m_1=85;m_2=60;m_3=85;m_4=60;I_x=1000;I_y=1000;k_t=150000;c_t=2000;a=1.07;b=1.32;w=3;F_1=0;F_2=0;F_3=0;F_4=0;k_p=10000;c_p=400;x_p=0.234;y_p=0.375;m_p=100;Plz update and plz comment </p>automotive,automotive,automotive",822,58,3,0,932,updated code dof give value check plz update plz comment,"['updated', 'code', 'dof', 'give', 'value', 'check', 'plz', 'update', 'plz', 'comment']",0
783,39543,"Modeled wind, PV, FC, Battery, Diesel and load with transfer fucntion<p>representing various sources and loads in hybrid system with transfer function and designed closed loop system with changing frequency due to change in load </p>micro grid,pv,battery,diesel,fuel cell,load model,micro grid,pv,transfer function,wind,battery_system_management,power_electronics_control,battery,diesel,fuel cell,battery",31,1,2,0,34,wind battery diesel load transfer various source load hybrid transfer function design close loop changing frequency due change load micro celload modelmicro gridpvtransfer managementpower electronics cellbattery,"['wind', 'battery', 'diesel', 'load', 'transfer', 'various', 'source', 'load', 'hybrid', 'transfer', 'function', 'design', 'close', 'loop', 'changing', 'frequency', 'due', 'change', 'load', 'micro', 'celload', 'modelmicro', 'gridpvtransfer', 'managementpower', 'electronics', 'cellbattery']",4
784,39547,"Non Linear Ball and Beam model<p>Non Linear Ball and Beam model</p>ball and beam,ball and beam",17,1,2,0,20,non linear ball beam modelnon linear ball beam modelball beamball beam,"['non', 'linear', 'ball', 'beam', 'modelnon', 'linear', 'ball', 'beam', 'modelball', 'beamball', 'beam']",8
785,39585,"sinusoidal based pulse width modulation buck boost converter <p>SPWM control technique is developed to control the output voltage of buck boost converter</p>buck boost,dcdc converter,spwm,electric_motor_control,power_conversion_control,power_electronics_control",18,0,1,0,18,sinusoidal base pulse width modulation buck boost converter spwm control technique develop control output voltage buck boost converterbuck boostdcdc motor controlpower conversion controlpower electronics control,"['sinusoidal', 'base', 'pulse', 'width', 'modulation', 'buck', 'boost', 'converter', 'spwm', 'control', 'technique', 'develop', 'control', 'output', 'voltage', 'buck', 'boost', 'converterbuck', 'boostdcdc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
786,39586,"SVPWM controller is developed to control the inverter <p>SVPWM technique is used to connect the inverter to grid</p>grid,inverter,svpwm",140,7,4,0,207,svpwm controller develop control inverter svpwm technique connect inverter,"['svpwm', 'controller', 'develop', 'control', 'inverter', 'svpwm', 'technique', 'connect', 'inverter']",1
787,39587,"three phase ac voltage controller <p>AC to AC conversion is achieved by using ac voltage controller</p>ac to ac,ac voltage controller,converter,electric_motor_control,power_conversion_control,power_electronics_control,ac to ac",79,3,2,0,101,three phase voltage controller conversion achieve voltage controllerac acac voltage motor controlpower conversion controlpower electronics controlac,"['three', 'phase', 'voltage', 'controller', 'conversion', 'achieve', 'voltage', 'controllerac', 'acac', 'voltage', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac']",6
788,39597,"Inverter connected to three phase inverter<p>Inverter controller designed to control the AC rms voltage</p>ac load,inverter,phase,ac load,inverter,phase",27,2,3,0,37,inverter connect three phase controller design control rms voltageac,"['inverter', 'connect', 'three', 'phase', 'controller', 'design', 'control', 'rms', 'voltageac']",1
789,39600,"Distributed statcom is presented to control the receiving end voltage<p>Dstatcom for controlling the voltage at load</p>dstatcom,facts,statcom,statcom",40,1,2,0,55,distribute statcom present control receive end voltagedstatcom control voltage,"['distribute', 'statcom', 'present', 'control', 'receive', 'end', 'voltagedstatcom', 'control', 'voltage']",3
790,39601,"Fuel Cell Model is presented<p>Modeling of Fuel Cell is presented and we can use this model for power generation</p>fuel cell,dc power source,fuel cell",31,2,3,0,32,fuel cell fuel cell present power generationfuel celldc power sourcefuel cell,"['fuel', 'cell', 'fuel', 'cell', 'present', 'power', 'generationfuel', 'celldc', 'power', 'sourcefuel', 'cell']",4
791,39602,"Modeling of Induction Motor in Discrete mode<p>Discrete model of induction motor is presented</p>ac motor,asynchronous motor,induction motor,induction motor,electric_motor_control,power_electronics_control,ac motor",79,3,3,0,102,induction motor discrete modediscrete induction motor presentedac motorinduction motorinduction motorelectric motor controlpower electronics controlac motor,"['induction', 'motor', 'discrete', 'modediscrete', 'induction', 'motor', 'presentedac', 'motorinduction', 'motorinduction', 'motorelectric', 'motor', 'controlpower', 'electronics', 'controlac', 'motor']",1
792,39603,"control of inverter is designed<p>load current based controller is designed for inverter. this is for constant current load applications</p>constant current load,current controller,inverter",61,6,4,0,53,control inverter designedload current base controller design inverter constant current load current loadcurrent,"['control', 'inverter', 'designedload', 'current', 'base', 'controller', 'design', 'inverter', 'constant', 'current', 'load', 'current', 'loadcurrent']",1
793,39604,"controller is designed to connect inverter to grid<p>grid application inverter is presented n this model.</p>dc to ac converter,grid,inverter",802,52,9,0,982,controller design connect inverter gridgrid application inverter present,"['controller', 'design', 'connect', 'inverter', 'gridgrid', 'application', 'inverter', 'present']",3
794,39605,"vector control is designed for PMSM<p>PMSM motor speed is controlled by vector control.</p>ac motors,pmsm,vector control,ac motors,pmsm,vector control,electric_motor_control,power_electronics_control,vector control,ac motors",183,12,3,0,222,vector control design pmsmpmsm motor speed control vector control controlac controlelectric motor controlpower electronics controlvector controlac motor,"['vector', 'control', 'design', 'pmsmpmsm', 'motor', 'speed', 'control', 'vector', 'control', 'controlac', 'controlelectric', 'motor', 'controlpower', 'electronics', 'controlvector', 'controlac', 'motor']",1
795,39606,"PWM based speed control of Induction Motor is presented<p>Load torque based speed control of Induction motor open loop is designed based on PWM technique</p>ac motor,asynchronous motor,induction motor,pwm,electric_motor_control,power_conversion_control,power_electronics_control,pwm",15,0,1,0,20,pwm base speed control induction motor presentedload torque base speed control induction motor open loop design base pwm techniqueac motorinduction motor controlpower conversion controlpower electronics controlpwm,"['pwm', 'base', 'speed', 'control', 'induction', 'motor', 'presentedload', 'torque', 'base', 'speed', 'control', 'induction', 'motor', 'open', 'loop', 'design', 'base', 'pwm', 'techniqueac', 'motorinduction', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpwm']",1
796,39608,"Sector Identification block is presented for SVPWM technique<p>In SVPWM technique, Sectioor identification is heart block, and in this model sector identification is presented</p>control,sector identification,svpwm,sector identification,svpwm",51,0,1,0,63,sector identification block present svpwm techniquein svpwm technique sectioor identification heart block sector identification,"['sector', 'identification', 'block', 'present', 'svpwm', 'techniquein', 'svpwm', 'technique', 'sectioor', 'identification', 'heart', 'block', 'sector', 'identification']",5
797,39609,"static synchronous compensator is presented in this model<p>reactive power is controlled by using STATCOM in this model.</p>facts,inverter,power system,statcom",44,1,2,0,52,static synchronous compensator present modelreactive power control statcom systemstatcom,"['static', 'synchronous', 'compensator', 'present', 'modelreactive', 'power', 'control', 'statcom', 'systemstatcom']",4
798,39611,"induction motor controller is presented<p>designed controller for wound rotor induction motor</p>ac motor,induction motor,speed controller,electric_motor_control,power_electronics_control",271,9,3,0,292,induction motor controller controller wound rotor induction motorac motorinduction motorspeed motor controlpower electronics control,"['induction', 'motor', 'controller', 'controller', 'wound', 'rotor', 'induction', 'motorac', 'motorinduction', 'motorspeed', 'motor', 'controlpower', 'electronics', 'control']",1
799,39641,"Maximum power point tracer algorithm is implemented for PV system<p>perturb and observe based MPPT algorithm is implemented to track maximum power from PV system</p>mppt,perturb and observe,po,pv,power_conversion_control,power_electronics_control,pv,mppt,perturb and observe,perturb and observe,po,pv,mppt,39641,ddd",27,1,2,0,31,maximum power point tracer algorithm implement systemperturb observe base mppt algorithm implement track maximum power conversion controlpower electronics observeperturb observepopvmppt,"['maximum', 'power', 'point', 'tracer', 'algorithm', 'implement', 'systemperturb', 'observe', 'base', 'mppt', 'algorithm', 'implement', 'track', 'maximum', 'power', 'conversion', 'controlpower', 'electronics', 'observeperturb', 'observepopvmppt']",3
800,39673,"Inverter input is varying based on buck boost converter<p>SPWM technique is implemented to control the buck boost converter voltage and this out put is connected as a input of inverter.</p>boost,buck,buckboost,dc to ac,dc to dc,inverter,spwm,power_conversion_control,power_electronics_control,boost,buck,buckboost,dc to ac,boost",26,0,1,0,26,inverter input vary base buck boost converterspwm technique implement control buck boost converter voltage put connect input inverter acdc conversion controlpower electronics acboost,"['inverter', 'input', 'vary', 'base', 'buck', 'boost', 'converterspwm', 'technique', 'implement', 'control', 'buck', 'boost', 'converter', 'voltage', 'put', 'connect', 'input', 'inverter', 'acdc', 'conversion', 'controlpower', 'electronics', 'acboost']",1
801,39720,"The files contained have the examples for safety critical control elements.<p>The presentation on Safety Control System Design and Test are given in the link below:<a href=""http://www.mathworks.in/matlabcentral/fileexchange/39047-testing-of-safety-critical-control-systemsI"">http://www.mathworks.in/matlabcentral/fileexchange/39047-testing-of-safety-critical-control-systemsI</a> have complied the various algorithms and test methods defined in this presentation as matlab script files and simulink models. Both of them together can be used to train members working on Safety Critical Control system test. I have used these files to explain the concepts to Engineering graduates and Under graduates during various workshops on this topics.</p>aerospace,automotive,control design,safety critical,verification and validation",1334,52,5,0,1287,file contain example safety critical control elements presentation safety control design test give link http mathworks matlabcentral fileexchange test safety critical control systemsi comply various algorithms test method define presentation script file together train member work safety critical control test file explain concept engineering graduate graduate various workshop topic designsafety validation,"['file', 'contain', 'example', 'safety', 'critical', 'control', 'elements', 'presentation', 'safety', 'control', 'design', 'test', 'give', 'link', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'test', 'safety', 'critical', 'control', 'systemsi', 'comply', 'various', 'algorithms', 'test', 'method', 'define', 'presentation', 'script', 'file', 'together', 'train', 'member', 'work', 'safety', 'critical', 'control', 'test', 'file', 'explain', 'concept', 'engineering', 'graduate', 'graduate', 'various', 'workshop', 'topic', 'designsafety', 'validation']",0
802,39742,"Tennessee Eastman process<p>Simulink model of the control strategy described in ""Decentralized control of the Tennessee Eastman Challenge Process"", N. L. Ricker, J. Proc. Cont., Vol. 6, No. 4, pp. 205-221, 1996. </p>control design,control design",246,14,3,0,218,tennessee eastman control strategy describe decentralize control tennessee eastman challenge process ricker proc cont vol control designcontrol design,"['tennessee', 'eastman', 'control', 'strategy', 'describe', 'decentralize', 'control', 'tennessee', 'eastman', 'challenge', 'process', 'ricker', 'proc', 'cont', 'vol', 'control', 'designcontrol', 'design']",8
803,39752,"Fuzzy Control<p>Fuzzy control and PID control comparison the pid control is aviable at: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/38705-control-pid-motor-universal"">http://www.mathworks.com/matlabcentral/fileexchange/38705-control-pid-motor-universal</a></p>electric_motor_control,power_electronics_control,article,control design,data export,data import,fuzzy,ieee,paper,pid,simulation,simulink",48,0,1,0,43,fuzzy controlfuzzy control pid control comparison pid control aviable http mathworks com matlabcentral fileexchange control pid motor motor controlpower electronics designdata exportdata,"['fuzzy', 'controlfuzzy', 'control', 'pid', 'control', 'comparison', 'pid', 'control', 'aviable', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'control', 'pid', 'motor', 'motor', 'controlpower', 'electronics', 'designdata', 'exportdata']",3
804,39764,"UPS System<p>UPS System (Online)</p>boost,boost,converter,filter,investor,online,power,rectifier,simulation,simulink,system,ups",99,8,3,0,81,ups systemups online,"['ups', 'systemups', 'online']",2
805,39809,"Simulation of a separately excited DC motor in regenerative braking mode<p>We can change the parameters of the motor according to our motor and in will simulate the operation</p>electric_motor_control,power_conversion_control,power_electronics_control,chopper,chopper controlled dc motor,dc motor,regenerative braking",54,0,1,0,55,separately excite motor regenerative braking modewe change parameter motor accord motor motor controlpower conversion controlpower electronics control motordc brake,"['separately', 'excite', 'motor', 'regenerative', 'braking', 'modewe', 'change', 'parameter', 'motor', 'accord', 'motor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'motordc', 'brake']",1
806,39820,"frequency division multiplexer<p>for more information about the operation of the frequency division multiplexer you can see:electronic communications systems by roy blake, chap.8</p>communications,fdm,frequency division multiplexer,multiplexer,signal processing,simulation,simulink",615,4,3,0,807,frequency division multiplexerfor information operation frequency division multiplexer see electronic communication roy blake chap division,"['frequency', 'division', 'multiplexerfor', 'information', 'operation', 'frequency', 'division', 'multiplexer', 'see', 'electronic', 'communication', 'roy', 'blake', 'chap', 'division']",5
807,39824,"THIS FILE IS SIMPLE SIMULATION OF PERMANENT MAGNET SYNCRONOUS MACHINE WITH ITS TORQUE BEING RAMP<p>SIMPLE SIMULATION MODEL TO PROVIDE THE COMPREHENSIVE ANALYSIS OF PERMANENT MAGNET SYNCHRONOUS MACHINE WITH ITS INPUT BEING THE PROGRAMMABLE 3 PHASE INPUT.VARIOUS SCOPES ARE EMPLOYED FOR DIFFERENT ANALYSIS.THIS MODEL CAN BE FURTHER USED FOR HARMONIC ANALYSIS AND DESIGNING SYSTEMS WITH REDUCED THD CONTENT.</p>control design,gui,measurement,simulation,simulink",16,0,1,0,18,file simple permanent magnet syncronous machine torque rampsimple provide comprehensive analysis permanent magnet synchronous machine input programmable phase input various scope employ different analysis harmonic analysis design reduce thd content control,"['file', 'simple', 'permanent', 'magnet', 'syncronous', 'machine', 'torque', 'rampsimple', 'provide', 'comprehensive', 'analysis', 'permanent', 'magnet', 'synchronous', 'machine', 'input', 'programmable', 'phase', 'input', 'various', 'scope', 'employ', 'different', 'analysis', 'harmonic', 'analysis', 'design', 'reduce', 'thd', 'content', 'control']",4
808,39828,"en el siguiente archivo se puede observa la representaciÃ³n de un archivo de en matlab simulink<p>en el siguiente archivo se puede observa la representaciÃ³n de un archivo de en matlab simulink, con la representaciÃ³n de un pÃ©ndulo accionado por un motor</p>electric_motor_control,power_electronics_control,electromecnica,pendulo,simulink",11,0,1,0,14,siguiente archivo puede observa representaciÃ³n archivo siguiente archivo puede observa representaciÃ³n archivo con representaciÃ³n pÃ©ndulo accionado por motorelectric motor controlpower electronics,"['siguiente', 'archivo', 'puede', 'observa', 'representaciÃ³n', 'archivo', 'siguiente', 'archivo', 'puede', 'observa', 'representaciÃ³n', 'archivo', 'con', 'representaciÃ³n', 'pÃ©ndulo', 'accionado', 'por', 'motorelectric', 'motor', 'controlpower', 'electronics']",8
809,39852,"This example includes identification of two tank system with sysid tool and its PID control.<p>In ZIP file you can find identification process files and you can see PID control of the system in Simulink mdl file</p>pid,identification,pid,two tank system,pid",6,0,1,0,7,example include identification two tank sysid tool pid control zip file find identification process file see pid control mdl tank systempid,"['example', 'include', 'identification', 'two', 'tank', 'sysid', 'tool', 'pid', 'control', 'zip', 'file', 'find', 'identification', 'process', 'file', 'see', 'pid', 'control', 'mdl', 'tank', 'systempid']",7
810,39865,"THIS SIMULINK MODEL HAS BEEN DESIGNED FOR ANALYSIS OF A Z SOURCE INVERTER FED THREE PHASE IND. MOTOR<p>this SIMULINK MODEL presents A ""Z SOURCE INVERTER"" performance analysis and simulation of maximum constant boost-control with third harmonic injection methods for the Z-source inverter, which can obtain maximum voltage boost for a fixed modulation index. The Z-source inverter is a recently invented a new power conversion concept mainly developed for fuel cell vehicular applications. The Z-source inverter is very advantageous over traditional inverters and it can be employed in all ac and dc power conversion applications. All traditional PWM methods can be used to control Z-source inverter. Maximum constant boost control methods eliminates the low-frequency ripples in the inductor current and capacitor voltage by maintaining the shoot-through duty cycle constant, and minimize the voltage stresses of switching devices at the same time. The Maximum boost control method is suitable for relatively high output frequency only, but in the maximum constant boost control method the Z-source network design is independent of the output frequency and determined only by the switching frequency. In thisSIMULATION Z-source inverter parameters such as boost factor, output dc link voltage, capacitor voltage, output ac voltage, voltage gain etc. are determined for maximum constant boost control method for a fixed modulation index and these results are verified by SIMULATION results.</p>electric_motor_control,power_conversion_control,power_electronics_control,communications,control design,measurement,modeling,optimization,signal processing,simulation,simulink",28,0,1,0,30,design analysis source inverter feed three phase ind motorthis present source inverter performance analysis maximum constant boost control third harmonic injection method source inverter obtain maximum voltage boost fix modulation index source inverter recently invent new power conversion concept mainly develop fuel cell vehicular application source inverter advantageous traditional inverter employ power conversion application traditional pwm method control source inverter maximum constant boost control method eliminate low frequency ripple inductor current capacitor voltage maintain shoot duty cycle constant minimize voltage stress switch device time maximum boost control method suitable relatively high output frequency maximum constant boost control method source network design independent output frequency determine switching frequency source inverter parameter boost factor output link voltage capacitor voltage output voltage voltage gain etc determine maximum constant boost control method fix modulation index result verify result electric motor controlpower conversion controlpower electronics,"['design', 'analysis', 'source', 'inverter', 'feed', 'three', 'phase', 'ind', 'motorthis', 'present', 'source', 'inverter', 'performance', 'analysis', 'maximum', 'constant', 'boost', 'control', 'third', 'harmonic', 'injection', 'method', 'source', 'inverter', 'obtain', 'maximum', 'voltage', 'boost', 'fix', 'modulation', 'index', 'source', 'inverter', 'recently', 'invent', 'new', 'power', 'conversion', 'concept', 'mainly', 'develop', 'fuel', 'cell', 'vehicular', 'application', 'source', 'inverter', 'advantageous', 'traditional', 'inverter', 'employ', 'power', 'conversion', 'application', 'traditional', 'pwm', 'method', 'control', 'source', 'inverter', 'maximum', 'constant', 'boost', 'control', 'method', 'eliminate', 'low', 'frequency', 'ripple', 'inductor', 'current', 'capacitor', 'voltage', 'maintain', 'shoot', 'duty', 'cycle', 'constant', 'minimize', 'voltage', 'stress', 'switch', 'device', 'time', 'maximum', 'boost', 'control', 'method', 'suitable', 'relatively', 'high', 'output', 'frequency', 'maximum', 'constant', 'boost', 'control', 'method', 'source', 'network', 'design', 'independent', 'output', 'frequency', 'determine', 'switching', 'frequency', 'source', 'inverter', 'parameter', 'boost', 'factor', 'output', 'link', 'voltage', 'capacitor', 'voltage', 'output', 'voltage', 'voltage', 'gain', 'etc', 'determine', 'maximum', 'constant', 'boost', 'control', 'method', 'fix', 'modulation', 'index', 'result', 'verify', 'result', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
811,39876,im direct startup<p>im direct startup</p>simulation,24,2,2,0,21,direct startupim direct,"['direct', 'startupim', 'direct']",8
812,39897,"This Simulink help you can collect data from Fio (ADC) by just only enter.<p>The data will save in array and you can save it. This data will use for your works such as Calibration. You can collect data and using Neumerical method such as Interpolation or Regression to make TRANSFER function.</p>data export,data import",10,0,1,0,9,help collect data fio adc enter data save array save data work calibration collect data neumerical method interpolation regression make transfer function data exportdata import,"['help', 'collect', 'data', 'fio', 'adc', 'enter', 'data', 'save', 'array', 'save', 'data', 'work', 'calibration', 'collect', 'data', 'neumerical', 'method', 'interpolation', 'regression', 'make', 'transfer', 'function', 'data', 'exportdata', 'import']",0
813,40117,"Ever wish after creating a GOTO block, you could automatically have a corresponding FROM appear?<p>Any modeling style using Goto/From tags typically involved creating a Goto tag, then dragging a From tag from the Simulink library and re-entering all the information taht was jsut entered into the Goto tag.This function allows the user to right-click on a Goto tag and automatically create the corresponding From tag. This significantly reduces the number of clicks and typing required to construct models using Goto/From tags</p>pick of the week,potw,gui,modeling,simulink,tag",3,0,1,0,0,ever wish create goto block could automatically correspond appear style goto tag typically involved create goto tag drag tag enter information taht jsut enter goto tag function allow user right click goto tag automatically create correspond tag significantly reduce number click type required construct goto tagspick,"['ever', 'wish', 'create', 'goto', 'block', 'could', 'automatically', 'correspond', 'appear', 'style', 'goto', 'tag', 'typically', 'involved', 'create', 'goto', 'tag', 'drag', 'tag', 'enter', 'information', 'taht', 'jsut', 'enter', 'goto', 'tag', 'function', 'allow', 'user', 'right', 'click', 'goto', 'tag', 'automatically', 'create', 'correspond', 'tag', 'significantly', 'reduce', 'number', 'click', 'type', 'required', 'construct', 'goto', 'tagspick']",5
814,40120,"Thsi function close all open scope windows in a model.<p>In the process of debugging a model, ever end up with many many scope windows open? Is it annoying to individually close each window?This function automatically closes all open scope windows. It gives the user the option to even look under model references for open scopes.</p>modeling,scope,simulink",22,0,2,0,8,thsi function close open scope windows process debug ever end many many scope window open annoy individually close window function automatically close open scope windows give user option even look reference open scope,"['thsi', 'function', 'close', 'open', 'scope', 'windows', 'process', 'debug', 'ever', 'end', 'many', 'many', 'scope', 'window', 'open', 'annoy', 'individually', 'close', 'window', 'function', 'automatically', 'close', 'open', 'scope', 'windows', 'give', 'user', 'option', 'even', 'look', 'reference', 'open', 'scope']",0
815,40121,"This function automatically removes all sink blocks from a model.<p>Often when debugging a Simulink model, users have many different kinds of Sink blocks in their model. After completing debugging, it is desireable to remove these to speed up simulation, reduce memory usage, and clean up the model.This function gives the user the choice to automatically remove the following sink blocks from a model:1. Scope &amp; Floating Scope2. Display3. ToWorkspace4. ToFile5. XY GraphThe function also gives the user the option to remove sinks under model references.</p>modeling,scope,simulink,sink",22,0,2,0,19,function automatically remove sink block often debug user many different kind sink block complete debug desireable remove speed reduce memory usage clean function give user choice automatically remove follow sink block scope amp float scope display toworkspace tofile graphthe function also give user option remove sink reference,"['function', 'automatically', 'remove', 'sink', 'block', 'often', 'debug', 'user', 'many', 'different', 'kind', 'sink', 'block', 'complete', 'debug', 'desireable', 'remove', 'speed', 'reduce', 'memory', 'usage', 'clean', 'function', 'give', 'user', 'choice', 'automatically', 'remove', 'follow', 'sink', 'block', 'scope', 'amp', 'float', 'scope', 'display', 'toworkspace', 'tofile', 'graphthe', 'function', 'also', 'give', 'user', 'option', 'remove', 'sink', 'reference']",0
816,40122,"A customized XY_Graph block that mimicks the behavior of other scope-type blocks in Simulink.<p>Ever put an XY_Graph block in a Simulink model, run a simulation, and then wanted to see the XY plot? Then navigated to the block in the model and double-clicked on it? Surprise! Rather than the plot opening (like a scope would) the axes properties menu pops up!This block behaves like the other Simulink scope blocks in that if an XY graph exists, double-clicking on the block in Simulink will open both the axis properties GUI and the XY plot. </p>scope,simulink,xy_graph",3,1,1,1,2,customize graph block mimicks behavior scope type block ever put graph block run want see plot navigate block double click surprise rather plot open like scope would property menu pop block behaves like scope block graph exist double click block open axis property gui plot graph,"['customize', 'graph', 'block', 'mimicks', 'behavior', 'scope', 'type', 'block', 'ever', 'put', 'graph', 'block', 'run', 'want', 'see', 'plot', 'navigate', 'block', 'double', 'click', 'surprise', 'rather', 'plot', 'open', 'like', 'scope', 'would', 'property', 'menu', 'pop', 'block', 'behaves', 'like', 'scope', 'block', 'graph', 'exist', 'double', 'click', 'block', 'open', 'axis', 'property', 'gui', 'plot', 'graph']",0
817,40179,"Trigger a triangle pulse at any point in your simulation (not clock dependent)<p>I needed to trigger a triangle pulse using a signal within my Simulink model (in my case it was a position vector). All I could find within the Sim Library was pulses set to activate at a certain time (by using a delay or building a signal from scratch). So I baked one myself.The biggest problem was the inability to ""reset"" the clock (I wanted to use it as a timer to set the width of my pulse). As a substitution for the clock timer, I use switch blocks to switch between zero and integration of a constant (calculated based on pulse duration and amplitude) in order to generate the triangle pulse.</p>modeling,sawtooth wave,signal processing,simulink,triangle wave",88,6,3,0,96,trigger triangle pulse point clock dependent need trigger triangle pulse signal within case position vector could find within sim pulse set activate certain time delay build signal scratch bake one big problem inability reset clock want timer set width pulse substitution clock timer switch block switch zero integration constant calculate base pulse duration amplitude order generate triangle pulse wavesignal wave,"['trigger', 'triangle', 'pulse', 'point', 'clock', 'dependent', 'need', 'trigger', 'triangle', 'pulse', 'signal', 'within', 'case', 'position', 'vector', 'could', 'find', 'within', 'sim', 'pulse', 'set', 'activate', 'certain', 'time', 'delay', 'build', 'signal', 'scratch', 'bake', 'one', 'big', 'problem', 'inability', 'reset', 'clock', 'want', 'timer', 'set', 'width', 'pulse', 'substitution', 'clock', 'timer', 'switch', 'block', 'switch', 'zero', 'integration', 'constant', 'calculate', 'base', 'pulse', 'duration', 'amplitude', 'order', 'generate', 'triangle', 'pulse', 'wavesignal', 'wave']",0
818,40182,output of this will be seven level inverter by using sine wave <p>cascade seven level output will be in the form of seven level pulses...</p>matlab,50,1,2,0,62,output seven level inverter sine wave cascade seven level output form seven level pulse,"['output', 'seven', 'level', 'inverter', 'sine', 'wave', 'cascade', 'seven', 'level', 'output', 'form', 'seven', 'level', 'pulse']",3
819,40202,"Dimmer utilizando funciones escalon y la escritura analogica del Arduino Mega<p>Dimmer creado en simulink con la libreria ArduinoIO </p>arduino,arduino dimmer,dimmer,mega,simulink,write",5,0,1,0,2,dimmer utilizando funciones escalon escritura analogica del arduino megadimmer creado con libreria arduinoio arduinoarduino,"['dimmer', 'utilizando', 'funciones', 'escalon', 'escritura', 'analogica', 'del', 'arduino', 'megadimmer', 'creado', 'con', 'libreria', 'arduinoio', 'arduinoarduino']",8
820,40209,"this a simulink model of bldc<p>this basically deals with sensorless control</p>special machine,electric_motor_control,power_electronics_control,special machine",256,9,4,0,320,bldcthis basically deal sensorless controlspecial machineelectric motor controlpower electronics controlspecial machine,"['bldcthis', 'basically', 'deal', 'sensorless', 'controlspecial', 'machineelectric', 'motor', 'controlpower', 'electronics', 'controlspecial', 'machine']",4
821,40249,"Interleaved buck converter having low switching losses and improved step-down conversion ratio.<p>The voltage stress across all the active switches is half of theinput voltage before turn-on or after turn-off when the operatingduty is below 50%, the capacitive discharging and switching lossescan be reduced considerably. It has a higher step-down conversion ratioand a smaller output current ripple compared with a conventionalIBC. (Ref:IEEE Paper -Interleaved Buck Converter Having Low SwitchingLosses and Improved Step-Down Conversion Ratio)</p>simulation,simulink,power_conversion_control,power_electronics_control",31,1,2,0,36,interleave buck converter low switching loss improved step conversion ratio voltage stress across active switch half theinput voltage turn turn operatingduty capacitive discharge switch lossescan reduce considerably high step conversion ratioand small output current ripple compare conventionalibc ref iee paper interleave buck converter low switchinglosses improve step conversion ratio conversion controlpower electronics control,"['interleave', 'buck', 'converter', 'low', 'switching', 'loss', 'improved', 'step', 'conversion', 'ratio', 'voltage', 'stress', 'across', 'active', 'switch', 'half', 'theinput', 'voltage', 'turn', 'turn', 'operatingduty', 'capacitive', 'discharge', 'switch', 'lossescan', 'reduce', 'considerably', 'high', 'step', 'conversion', 'ratioand', 'small', 'output', 'current', 'ripple', 'compare', 'conventionalibc', 'ref', 'iee', 'paper', 'interleave', 'buck', 'converter', 'low', 'switchinglosses', 'improve', 'step', 'conversion', 'ratio', 'conversion', 'controlpower', 'electronics', 'control']",3
822,40254,"Asservissement de vitesse moteur asynchrone avec la commande scalaire v/f cte<p>La commande est basÃ© sur un onduleur MLI </p>automatique,automatique",163,7,3,0,198,asservissement vitesse moteur asynchrone avec commande scalaire ctela commande est basÃ© sur onduleur mli,"['asservissement', 'vitesse', 'moteur', 'asynchrone', 'avec', 'commande', 'scalaire', 'ctela', 'commande', 'est', 'basÃ©', 'sur', 'onduleur', 'mli']",8
823,40346," Stator Voltage Control of 3-phase IM is implemented by use of 3-Phase Ac voltage controller<p>The Circuit simulated above is one of the topologies of 3-Phase AC Voltage Controllers whose output is fed to IM for drive applications* A Pdf file is attached to best explain the operation of the circuit.* The thyristors are numbered and triggered in the order of their numbers 1-2-3-4-5-6 of 60 degree each* Frequency :50 Hz ,Pulse Width : 50 %* The time delay is calculated using the formula alpha= omega*t which implies t = alpha/omega= alpha/2*pi*f   for simplicity if alpha = 30 degreet= 30/50*360* If u have got any doubts about the above circuit ...comments are welcome..regards Vishy</p>measurement,power electronics,simpower systems,simulation,simulink,stator voltage control,three phase ac voltage controller,three phase induction motor,electric_motor_control,power_conversion_control,power_electronics_control,power electronics,simpower systems,simulation,simulink,stator voltage control",77,0,1,0,74,stator voltage control phase implement phase voltage controllerthe circuit one topologies phase voltage controller whose output feed drive application pdf file attach best explain operation circuit thyristors number triggered order number degree frequency pulse width time delay calculate formula alpha omega implies alpha omega alpha simplicity alpha degreet get doubt circuit comment welcome regard voltage controlthree phase voltage controllerthree phase induction motorelectric motor controlpower conversion controlpower electronics controlpower voltage control,"['stator', 'voltage', 'control', 'phase', 'implement', 'phase', 'voltage', 'controllerthe', 'circuit', 'one', 'topologies', 'phase', 'voltage', 'controller', 'whose', 'output', 'feed', 'drive', 'application', 'pdf', 'file', 'attach', 'best', 'explain', 'operation', 'circuit', 'thyristors', 'number', 'triggered', 'order', 'number', 'degree', 'frequency', 'pulse', 'width', 'time', 'delay', 'calculate', 'formula', 'alpha', 'omega', 'implies', 'alpha', 'omega', 'alpha', 'simplicity', 'alpha', 'degreet', 'get', 'doubt', 'circuit', 'comment', 'welcome', 'regard', 'voltage', 'controlthree', 'phase', 'voltage', 'controllerthree', 'phase', 'induction', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'voltage', 'control']",3
824,40364,"Open loop model of series connected forward flyback converter for high step up operation<p>Open loop model of series connected forward flyback converter for high step up operation using three winding transformer. It has four modes of operation. provides isolation between input and output side.</p>dc to dc converter,open loop",20,0,1,0,15,open loop series connect forward flyback converter high step operationopen loop series connect forward flyback converter high step operation three wind transformer four mode operation provide isolation input output side converteropen loop,"['open', 'loop', 'series', 'connect', 'forward', 'flyback', 'converter', 'high', 'step', 'operationopen', 'loop', 'series', 'connect', 'forward', 'flyback', 'converter', 'high', 'step', 'operation', 'three', 'wind', 'transformer', 'four', 'mode', 'operation', 'provide', 'isolation', 'input', 'output', 'side', 'converteropen', 'loop']",3
825,40409,"A simulink model of a two-link planar arm from Adaptive output feedback by Lee & Khalil<p>A simulink model of a two-link planar arm from Adaptive output feedback by Lee &amp; Khalil, also reference Li Slotine's Applied Nonlinear Control(1991)This is an improvised model of S.S.Gill.</p>aerospace,control design,simulation,simulink",132,5,2,0,167,two link planar arm adaptive output feedback lee khalila two link planar arm adaptive output feedback lee amp khalil also reference slotine apply nonlinear control improvise gill,"['two', 'link', 'planar', 'arm', 'adaptive', 'output', 'feedback', 'lee', 'khalila', 'two', 'link', 'planar', 'arm', 'adaptive', 'output', 'feedback', 'lee', 'amp', 'khalil', 'also', 'reference', 'slotine', 'apply', 'nonlinear', 'control', 'improvise', 'gill']",4
826,40411,"Basic example on how to make phase portrait using Simulink<p>Basic example on how to make phase portrait using Simulink taking example from Chapter 4, book by Li Slotine(1991) Applied Nonlinear Control</p>control design,simulink",6,0,1,0,7,basic example make phase portrait example make phase portrait take example chapter book slotine apply nonlinear controlcontrol,"['basic', 'example', 'make', 'phase', 'portrait', 'example', 'make', 'phase', 'portrait', 'take', 'example', 'chapter', 'book', 'slotine', 'apply', 'nonlinear', 'controlcontrol']",7
827,40461,"A simple block that can measure the power factor accurately.<p>A simple block that can measure the power factor accurately.You just have to connect the voltage and current from the circuit across the block and it will display the power factor. This block can be used as a utility block and can be used as a subsytem in any of the simulink model.</p>file id 40461,communications,control design,demo,measurement,modeling,power factor,simulink",20,1,2,0,21,simple block measure power factor accurately simple block measure power factor accurately connect voltage current circuit across block display power factor block utility block subsytem file,"['simple', 'block', 'measure', 'power', 'factor', 'accurately', 'simple', 'block', 'measure', 'power', 'factor', 'accurately', 'connect', 'voltage', 'current', 'circuit', 'across', 'block', 'display', 'power', 'factor', 'block', 'utility', 'block', 'subsytem', 'file']",7
828,40475,"Defines the elements of an AC network equivalent  represented by two inductors and one resistor.<p>The Simulink model calculates the elements impedance composing the AC network equivalent represented by two inductors and one resistor. This type of configuration (LLR) is often used in HVDC links studies where it is relevant to correctly represent the damping angle (phase angle) at fundamental and a low harmonic (corresponding to a possible resonance frequency). Other configurations may also be suitable. Information about the network impedance variation with frequency will be necessary to choose the best configuration.The parameters defined in the subsystem mask are: The fundamental frequency (50 or 60 Hz), the network impedance at the fundamental frequency, the harmonic number N (2,3,4,or 5), the (positive) phase angle (deg) at the fundamental and Nth harmonic.The model solves a set of three nonlinear equations.  You can trace the impedance vs. frequency of the resulting circuit using the Powergui.</p>electric_motor_control,power_conversion_control,power_electronics_control,equivalent network,hvdc transmission,network damping,network impedance,resonance frequency",68,4,3,0,77,defines element network equivalent represent two inductor one resistor calculate element impedance compose network equivalent represent two inductor one resistor type configuration llr often hvdc link study relevant correctly represent damp angle phase angle fundamental low harmonic correspond possible resonance frequency configuration may also suitable information network impedance variation frequency necessary choose best configuration parameter define subsystem mask fundamental frequency network impedance fundamental frequency harmonic number positive phase angle deg fundamental nth harmonic solves set three nonlinear equation trace impedance frequency result circuit powergui electric motor controlpower conversion controlpower electronics networkhvdc dampingnetwork frequency,"['defines', 'element', 'network', 'equivalent', 'represent', 'two', 'inductor', 'one', 'resistor', 'calculate', 'element', 'impedance', 'compose', 'network', 'equivalent', 'represent', 'two', 'inductor', 'one', 'resistor', 'type', 'configuration', 'llr', 'often', 'hvdc', 'link', 'study', 'relevant', 'correctly', 'represent', 'damp', 'angle', 'phase', 'angle', 'fundamental', 'low', 'harmonic', 'correspond', 'possible', 'resonance', 'frequency', 'configuration', 'may', 'also', 'suitable', 'information', 'network', 'impedance', 'variation', 'frequency', 'necessary', 'choose', 'best', 'configuration', 'parameter', 'define', 'subsystem', 'mask', 'fundamental', 'frequency', 'network', 'impedance', 'fundamental', 'frequency', 'harmonic', 'number', 'positive', 'phase', 'angle', 'deg', 'fundamental', 'nth', 'harmonic', 'solves', 'set', 'three', 'nonlinear', 'equation', 'trace', 'impedance', 'frequency', 'result', 'circuit', 'powergui', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'networkhvdc', 'dampingnetwork', 'frequency']",4
829,40505,"This function will log the time each state was active during simulation.<p>When running long Simulations, you sometimes want to know how long each state was active, with Simulation time. This function does this.This function will run a Simulink model that contains Stateflow charts.It will time how long each state was active and display it in a table.It uses the DataLogs format for logging each state, after making sure all states are logged.Inputs: Model Name - mdlNameOutputs: TableExample use: Stateflow_Time_Logger('example_sf_car')I've added two example models for testing: example_sf_car, example_yoyoRead the help in the m-file for more info.</p>active,chart,logging,stateflow,time",92,9,3,0,110,function log time state active running long sometimes want know long state active time function function run contain stateflow chart time long state active display table datalogs format log state making sure state log input name mdlnameoutputs tableexample stateflow time logger example car add two example test example car example yoyoread help file info,"['function', 'log', 'time', 'state', 'active', 'running', 'long', 'sometimes', 'want', 'know', 'long', 'state', 'active', 'time', 'function', 'function', 'run', 'contain', 'stateflow', 'chart', 'time', 'long', 'state', 'active', 'display', 'table', 'datalogs', 'format', 'log', 'state', 'making', 'sure', 'state', 'log', 'input', 'name', 'mdlnameoutputs', 'tableexample', 'stateflow', 'time', 'logger', 'example', 'car', 'add', 'two', 'example', 'test', 'example', 'car', 'example', 'yoyoread', 'help', 'file', 'info']",7
830,40508,"This file contains the modeling of induction machine in synchronously rotating frame. <p>The induction machine is modeled taking reference of PC krause, Analysis of electric machinery and drive systems. The datas are comparable to simpower system preset block of Induction machine rated at 5.4HP,400V,1430 rpm, 50Hz. The governing main equations can be found in page 184-185 of that book.The model can be further extended into small signal equations thus to get the eigen values and subsequently use to check the stability. It can also be further extended to construct a transfer function.Any suggestions are welcome. </p>simulink",192,15,4,0,224,file contains induction machine synchronously rotate frame induction machine take reference krause analysis electric machinery drive datas comparable simpower preset block induction machine rat rpm govern main equation find page book extend small signal equation thus get eigen value subsequently check stability also extend construct transfer function suggestion welcome,"['file', 'contains', 'induction', 'machine', 'synchronously', 'rotate', 'frame', 'induction', 'machine', 'take', 'reference', 'krause', 'analysis', 'electric', 'machinery', 'drive', 'datas', 'comparable', 'simpower', 'preset', 'block', 'induction', 'machine', 'rat', 'rpm', 'govern', 'main', 'equation', 'find', 'page', 'book', 'extend', 'small', 'signal', 'equation', 'thus', 'get', 'eigen', 'value', 'subsequently', 'check', 'stability', 'also', 'extend', 'construct', 'transfer', 'function', 'suggestion', 'welcome']",0
831,40509,"Model shows how this complex OFDMA technique works on the simple Uplink example<p>Model consists of two users (transmitters) who send bursts of data to a base station (receiver). Channel is clear, and no correction coding is used, for the sake of simplicity. Transmission is in base band, and is considered synchronized. Bursts of data are raw, without control bits. All of these: AWGN noise or fading, correction coding, transmission in bandpass channel, and control bits can be added easily. For the simulation of asynchronus link, i don't know.For more talk about the model and technique, i recommend to visit the facebook page of the model, since i am there more available for help and explanation. URL is:<a href=""https://www.facebook.com/OfdmaPrincipleExplained?ref=streamI"">https://www.facebook.com/OfdmaPrincipleExplained?ref=streamI</a> am not sure if sfun (mexw32) file is uploaded. If not, contact me via facebook so i can send it to you.Any suggestions, ideas, or discussion are welcome. :)</p>ofdma principle,communications,multiple access,ofdma,ofdma principle,ofdma uplink,simulink,wimax,wimax phy simple,wireless",312,32,4,0,599,show complex ofdma technique work simple uplink examplemodel consist two user transmitter send burst data base station receiver channel clear correction cod sake simplicity transmission base band consider synchronized burst data raw without control bit awgn noise fading correction cod transmission bandpass channel control bits add easily asynchronus link know talk technique recommend visit facebook page since available help explanation url facebook com ref streami sure sfun mexw file uploaded contact via facebook send suggestion idea discussion welcome ofdma principleofdma phy simplewireless,"['show', 'complex', 'ofdma', 'technique', 'work', 'simple', 'uplink', 'examplemodel', 'consist', 'two', 'user', 'transmitter', 'send', 'burst', 'data', 'base', 'station', 'receiver', 'channel', 'clear', 'correction', 'cod', 'sake', 'simplicity', 'transmission', 'base', 'band', 'consider', 'synchronized', 'burst', 'data', 'raw', 'without', 'control', 'bit', 'awgn', 'noise', 'fading', 'correction', 'cod', 'transmission', 'bandpass', 'channel', 'control', 'bits', 'add', 'easily', 'asynchronus', 'link', 'know', 'talk', 'technique', 'recommend', 'visit', 'facebook', 'page', 'since', 'available', 'help', 'explanation', 'url', 'facebook', 'com', 'ref', 'streami', 'sure', 'sfun', 'mexw', 'file', 'uploaded', 'contact', 'via', 'facebook', 'send', 'suggestion', 'idea', 'discussion', 'welcome', 'ofdma', 'principleofdma', 'phy', 'simplewireless']",5
832,40561,"Demonstrate the concept of aerial recovery of miniature aerial vehicles using a towed-cable system.<p>The towing vehicle (mothership) is commanded to follow a circular orbit that results a circular orbit of the towed body (drogue) with smaller radius and lower velocity relative to the mothership. The miniature aerial vehicle (MAV), which is to be retrieved, is regulated to follow the drogue orbit and to approach the drogue with a relatively low airspeed. After the MAV dock on the drogue, the towed cable and bodies (both drogue and MAV) are reeled into the mothership to complete the aerial recovery.In this demo, Gaussâs Principle is used to derive the dynamic model of the cable-drogue system. The MAV uses missile guidance strategies to intercept the drogue.For more information see:Sun, L., Beard, R. W., and Colton, M. B., McLain, T. W., âDynamics and Control of Cable-drogue System in Aerial Recovery of Micro Air Vehicles Based on Gaussâs Principle.â St. Louis, MO, USA: American Control Conference, June 2009, pp. 4729â4734.<a href=""http://prism.groups.et.byu.net/uploads/Members/SunBeard09.pdfColton"">http://prism.groups.et.byu.net/uploads/Members/SunBeard09.pdfColton</a>, M. B., Sun, L., Carlson, D. C., and Beard, R. W., ""ï¿½Multi-vehicle Dynamics and Control for Aerial Recovery of Micro Air Vehicles"",ï¿½ Int. J. Vehicle Autonomous Systems, Vol. 9, 2011, pp. 78ï¿½-107. <a href=""http://prism.groups.et.byu.net/uploads/Members/ColtonSun11.pdf"">http://prism.groups.et.byu.net/uploads/Members/ColtonSun11.pdf</a></p>aerospace,control design,simulation,simulink",90,8,3,0,90,demonstrate concept aerial recovery miniature aerial vehicle tow cable tow vehicle mothership command follow circular orbit result circular orbit tow body drogue small radius lower velocity relative mothership miniature aerial vehicle mav retrieve regulate follow drogue orbit approach drogue relatively low airspeed mav dock drogue tow cable body drogue mav reel mothership complete aerial recovery demo gauss principle derive dynamic cable drogue mav missile guidance strategy intercept drogue information see sun beard colton mclain dynamic control cable drogue aerial recovery micro air vehicle base gauss principle louis usa american control conference june http prism group byu net uploads member sunbeard pdfcolton sun carlson beard multi vehicle dynamic control aerial recovery micro air vehicle int vehicle autonomous vol http prism group byu net uploads member coltonsun,"['demonstrate', 'concept', 'aerial', 'recovery', 'miniature', 'aerial', 'vehicle', 'tow', 'cable', 'tow', 'vehicle', 'mothership', 'command', 'follow', 'circular', 'orbit', 'result', 'circular', 'orbit', 'tow', 'body', 'drogue', 'small', 'radius', 'lower', 'velocity', 'relative', 'mothership', 'miniature', 'aerial', 'vehicle', 'mav', 'retrieve', 'regulate', 'follow', 'drogue', 'orbit', 'approach', 'drogue', 'relatively', 'low', 'airspeed', 'mav', 'dock', 'drogue', 'tow', 'cable', 'body', 'drogue', 'mav', 'reel', 'mothership', 'complete', 'aerial', 'recovery', 'demo', 'gauss', 'principle', 'derive', 'dynamic', 'cable', 'drogue', 'mav', 'missile', 'guidance', 'strategy', 'intercept', 'drogue', 'information', 'see', 'sun', 'beard', 'colton', 'mclain', 'dynamic', 'control', 'cable', 'drogue', 'aerial', 'recovery', 'micro', 'air', 'vehicle', 'base', 'gauss', 'principle', 'louis', 'usa', 'american', 'control', 'conference', 'june', 'http', 'prism', 'group', 'byu', 'net', 'uploads', 'member', 'sunbeard', 'pdfcolton', 'sun', 'carlson', 'beard', 'multi', 'vehicle', 'dynamic', 'control', 'aerial', 'recovery', 'micro', 'air', 'vehicle', 'int', 'vehicle', 'autonomous', 'vol', 'http', 'prism', 'group', 'byu', 'net', 'uploads', 'member', 'coltonsun']",8
833,40623,"A crude mechanism to playback CANape generated logs in SIMULINK environment. <p>MAT file generated from CANape MATLAB exporter can be played back in SIMULINK environment using this mechanism. Please read the GUIDE.doc file before working with the scripts.</p>automotive,canape,mat file,simulink,vehicle logs",35,1,2,0,30,crude mechanism playback canape generate logs environment mat file generate canape exporter play back environment mechanism please read guide doc file work script log,"['crude', 'mechanism', 'playback', 'canape', 'generate', 'logs', 'environment', 'mat', 'file', 'generate', 'canape', 'exporter', 'play', 'back', 'environment', 'mechanism', 'please', 'read', 'guide', 'doc', 'file', 'work', 'script', 'log']",0
834,40713,"This simulink model presents a crirtical analysis of 1 phase rectifier.The load contains a RLE load.<p>The load contains an RLE load which can be also considered to be the DC motor connected to a single phase rectifier.The regenerative energy can be fed back to source when the  value of   load emf or back EMF of Motor exceeds the value of source EMF.FOR FURTHER REFERENCESnptel.iitm.ac.in/.../PDF/L-10(DK)(PE)%20((EE)NPTEL).pd</p>electric_motor_control,power_conversion_control,power_electronics_control,automotive,control design,electronics,feedback,machine,motor,power,rectifier,single phase",13,0,1,0,10,present crirtical analysis phase rectifier load contain rle load load contain rle load also consider motor connect single phase rectifier regenerative energy feed back source value load emf back emf motor exceed value source emf referencesnptel iitm pdf nptel pdelectric motor controlpower conversion controlpower electronics phase,"['present', 'crirtical', 'analysis', 'phase', 'rectifier', 'load', 'contain', 'rle', 'load', 'load', 'contain', 'rle', 'load', 'also', 'consider', 'motor', 'connect', 'single', 'phase', 'rectifier', 'regenerative', 'energy', 'feed', 'back', 'source', 'value', 'load', 'emf', 'back', 'emf', 'motor', 'exceed', 'value', 'source', 'emf', 'referencesnptel', 'iitm', 'pdf', 'nptel', 'pdelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'phase']",3
835,40718,"This is a simple design problem using Simulink. It is suitable for Simulink beginners.<p>You are a design engineer in an automotive company. You are responsible to design the driverâs seat of the truck. Based on all the requirements and all the previous meetings you had with other teams (the chassis team, powertrain team, â¦), the last elements you need to design for the system are the damper and the spring of the seat. Read the requirements and use Simulink to choose an acceptable mass and spring system. Try to save the company some money if possible.</p>damper,design,dynamics,engineering,mass,simulation,simulink,spring",23,1,2,0,19,simple design problem suitable beginner design engineer automotive company responsible design driver seat truck base requirement previous meeting team chassis team powertrain team last element need design damper spring seat read requirement choose acceptable mass spring try save company money possible,"['simple', 'design', 'problem', 'suitable', 'beginner', 'design', 'engineer', 'automotive', 'company', 'responsible', 'design', 'driver', 'seat', 'truck', 'base', 'requirement', 'previous', 'meeting', 'team', 'chassis', 'team', 'powertrain', 'team', 'last', 'element', 'need', 'design', 'damper', 'spring', 'seat', 'read', 'requirement', 'choose', 'acceptable', 'mass', 'spring', 'try', 'save', 'company', 'money', 'possible']",5
836,40745,"A simple reporting tool that shows how you can model an inverted pendulum in a few methods.<p>In order to solve an inverted pendulum dynamics, you can select several methods:1. Solving Symbolic equations.2. Solveing a MATLAB ODE3. Constructing a Simulink model4. Designing the system using SimMechanicsThis submission show how you can leverage the reporting tools that exist in the MATLAB environemnt in order to compare the solution of all these methods, and show the advantage of each one:1. Symbolic, complete solution using the Symbolic Math toolbox.2. Parameter sweep using monte carlo simulation for a MATLAB function.3. Running the same Simulink dynamic model for different friction values.4. Modeling the problem and not the equations, using SimMechanics.In order to run the comparison, simply run the following command:report symbolic_simmech;The report template contains examples and how-to do it yourself.I would like to acknowledge Carlos Osorio, who created some of the files and models in this example.</p>comparison,inverted pendulum,mupad,report,symbolic solution",16,0,1,0,19,simple report tool show invert pendulum method order solve invert pendulum dynamic select several method solve symbolic equation solve ode construct design submission show leverage reporting tool exist environemnt order compare solution method show advantage one symbolic complete solution symbolic math toolbox parameter sweep monte carlo function run dynamic different friction value problem equation simmechanics order run comparison simply run follow command report symbolic simmech report template contains example would like acknowledge carlos osorio create file example solution,"['simple', 'report', 'tool', 'show', 'invert', 'pendulum', 'method', 'order', 'solve', 'invert', 'pendulum', 'dynamic', 'select', 'several', 'method', 'solve', 'symbolic', 'equation', 'solve', 'ode', 'construct', 'design', 'submission', 'show', 'leverage', 'reporting', 'tool', 'exist', 'environemnt', 'order', 'compare', 'solution', 'method', 'show', 'advantage', 'one', 'symbolic', 'complete', 'solution', 'symbolic', 'math', 'toolbox', 'parameter', 'sweep', 'monte', 'carlo', 'function', 'run', 'dynamic', 'different', 'friction', 'value', 'problem', 'equation', 'simmechanics', 'order', 'run', 'comparison', 'simply', 'run', 'follow', 'command', 'report', 'symbolic', 'simmech', 'report', 'template', 'contains', 'example', 'would', 'like', 'acknowledge', 'carlos', 'osorio', 'create', 'file', 'example', 'solution']",0
837,40755,"Simulink<p>In simulink while running simulation you can change the  frequency, phase or magnitude</p>simulation,simulink,trifasic source",57,4,3,0,59,run change frequency phase source,"['run', 'change', 'frequency', 'phase', 'source']",3
838,40884,"This loan calculator tool performs interest calculations for fixed rate loans.<p>This loan calculator tool performs interest calculations for fixed rate loans.The implementation is no different to your standard compound interest formula, but implemented in Simulink!This submission may therefore interest (no pun intended) beginners looking at how to implement a basic problem in Simulink.The submission may interest people looking to start a new loan, or optimize their existing loan with additional repayments.Extension to variable rate loans would be trivial (homework) if for example you wanted to perform a sensitivity study for future interest rate changes.</p>finance,finance,optimization,simulink",19,1,2,0,22,loan calculator tool performs interest calculation fix rate loan loan calculator tool performs interest calculation fix rate loan implementation different standard compound interest formula implement submission may therefore interest pun intend beginner look implement basic problem submission may interest people look start new loan optimize exist loan additional repayment extension variable rate loan would trivial homework example want perform sensitivity study future interest rate change,"['loan', 'calculator', 'tool', 'performs', 'interest', 'calculation', 'fix', 'rate', 'loan', 'loan', 'calculator', 'tool', 'performs', 'interest', 'calculation', 'fix', 'rate', 'loan', 'implementation', 'different', 'standard', 'compound', 'interest', 'formula', 'implement', 'submission', 'may', 'therefore', 'interest', 'pun', 'intend', 'beginner', 'look', 'implement', 'basic', 'problem', 'submission', 'may', 'interest', 'people', 'look', 'start', 'new', 'loan', 'optimize', 'exist', 'loan', 'additional', 'repayment', 'extension', 'variable', 'rate', 'loan', 'would', 'trivial', 'homework', 'example', 'want', 'perform', 'sensitivity', 'study', 'future', 'interest', 'rate', 'change']",5
839,40996,"model helps in understanding the use of GTO  in matlab.<p>model helps in understanding the use of GTO  in matlab.how to trigger and how to control the pulses given at the gate terminal for the operation of the device.</p>controlled scr,controlled thyristor,gate triggering,gto,scr,thyristor,triggering of gto,working of gto",10,0,1,0,11,help understand gto help understand gto trigger control pulse give gate terminal operation device control scrcontrolled thyristorgate gtoworking gto,"['help', 'understand', 'gto', 'help', 'understand', 'gto', 'trigger', 'control', 'pulse', 'give', 'gate', 'terminal', 'operation', 'device', 'control', 'scrcontrolled', 'thyristorgate', 'gtoworking', 'gto']",4
840,41027,"This is a driver for the analog devices ADLX345 triaxial acceleration and an Arduino mega.<p>This driver utilizes the Arduino i2c libraries from version 1.0 and driver architecture found from various sources on the web. It configures the sensor to +/- 4 G's at 100 Hz. The data sample rate is set to 0.05 second period via the S-Function builder update rate. Additional settings are described in the manual.For additional information and tips please look at the excellent description by Giampiero Campa.<a href=""http://www.mathworks.com/matlabcentral/fileexchange/39354"">http://www.mathworks.com/matlabcentral/fileexchange/39354</a></p>arduino,embedded code,i2c,instrument driver,measurement,simulink",2,0,1,0,1,driver analog device adlx triaxial acceleration arduino mega driver utilize arduino version driver architecture find various source web configures sensor data sample rate set second period via function builder update rate additional setting describe manual additional information tip please look excellent description giampiero campa http mathworks com matlabcentral fileexchange arduinoembedded codei cinstrument,"['driver', 'analog', 'device', 'adlx', 'triaxial', 'acceleration', 'arduino', 'mega', 'driver', 'utilize', 'arduino', 'version', 'driver', 'architecture', 'find', 'various', 'source', 'web', 'configures', 'sensor', 'data', 'sample', 'rate', 'set', 'second', 'period', 'via', 'function', 'builder', 'update', 'rate', 'additional', 'setting', 'describe', 'manual', 'additional', 'information', 'tip', 'please', 'look', 'excellent', 'description', 'giampiero', 'campa', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduinoembedded', 'codei', 'cinstrument']",0
841,41043,"concerns with a unique step by step simulation of photovoltaic model with Matlab/Simulink.<p>his paper concerns with a unique step by stepsimulation of photovoltaic model with Matlab/Simulink. One diode equivalent circuit model has been considered in order to investigate I-V and P-V characteristics of a typical 36 W solar module. The proposed model is designed with a user-friendly icons and a dialog box like Simulink block libraries. The proposed model can be very useful for PV Engineers and experts who require a simple, fast and accurate PV simulator todesign their system.</p>one diode model,one diode model,pv module,simulink,one diode model",117,9,5,0,128,concern unique step step photovoltaic paper concern unique step photovoltaic one diode equivalent circuit consider order investigate characteristic typical solar module propose design user friendly icon dialog box like block propose useful engineer expert require simple fast accurate todesign one diode modelone diode modelpv diode,"['concern', 'unique', 'step', 'step', 'photovoltaic', 'paper', 'concern', 'unique', 'step', 'photovoltaic', 'one', 'diode', 'equivalent', 'circuit', 'consider', 'order', 'investigate', 'characteristic', 'typical', 'solar', 'module', 'propose', 'design', 'user', 'friendly', 'icon', 'dialog', 'box', 'like', 'block', 'propose', 'useful', 'engineer', 'expert', 'require', 'simple', 'fast', 'accurate', 'todesign', 'one', 'diode', 'modelone', 'diode', 'modelpv', 'diode']",0
842,41049,"THIS MODEL IS EQUIPPED WITH CONSTANT BOOST CONTROL USING THIRD HARMONIC INJECTION.<p>This paper presents performance analysis and simulation of maximum constant boost-control with third harmonic injection methods for the Z-source inverter, which can obtain maximum voltage boost for a fixed modulation index. The Z-source inverter is a recently invented a new power conversion concept mainly developed for fuel cell vehicular applications. The Z-source inverter is very advantageous over traditional inverters and it can be employed in all ac and dc power conversion applications. All traditional PWM methods can be used to control Z-source inverter. Maximum constant boost control methods eliminates the low-frequency ripples in the inductor current and capacitor voltage by maintaining the shoot-through duty cycle constant, and minimize the voltage stresses of switching devices at the same time. The Maximum boost control method is suitable for relatively high output frequency only, but in the maximum constant boost control method the Z-source network design is independent of the output frequency and determined only by the switching frequency. In this paper Z-source inverter parameters such as boost factor, output dc link voltage, capacitor voltage, output ac voLtage.</p>electric_motor_control,power_conversion_control,power_electronics_control,communications,control design,gui,harmonics,image processing,inverter,measurement,signal processing,simulation,simulink",63,1,2,0,72,equip constant boost control third harmonic injection paper present performance analysis maximum constant boost control third harmonic injection method source inverter obtain maximum voltage boost fix modulation index source inverter recently invent new power conversion concept mainly develop fuel cell vehicular application source inverter advantageous traditional inverter employ power conversion application traditional pwm method control source inverter maximum constant boost control method eliminate low frequency ripple inductor current capacitor voltage maintain shoot duty cycle constant minimize voltage stress switch device time maximum boost control method suitable relatively high output frequency maximum constant boost control method source network design independent output frequency determine switching frequency paper source inverter parameter boost factor output link voltage capacitor voltage output voltage electric motor controlpower conversion controlpower electronics,"['equip', 'constant', 'boost', 'control', 'third', 'harmonic', 'injection', 'paper', 'present', 'performance', 'analysis', 'maximum', 'constant', 'boost', 'control', 'third', 'harmonic', 'injection', 'method', 'source', 'inverter', 'obtain', 'maximum', 'voltage', 'boost', 'fix', 'modulation', 'index', 'source', 'inverter', 'recently', 'invent', 'new', 'power', 'conversion', 'concept', 'mainly', 'develop', 'fuel', 'cell', 'vehicular', 'application', 'source', 'inverter', 'advantageous', 'traditional', 'inverter', 'employ', 'power', 'conversion', 'application', 'traditional', 'pwm', 'method', 'control', 'source', 'inverter', 'maximum', 'constant', 'boost', 'control', 'method', 'eliminate', 'low', 'frequency', 'ripple', 'inductor', 'current', 'capacitor', 'voltage', 'maintain', 'shoot', 'duty', 'cycle', 'constant', 'minimize', 'voltage', 'stress', 'switch', 'device', 'time', 'maximum', 'boost', 'control', 'method', 'suitable', 'relatively', 'high', 'output', 'frequency', 'maximum', 'constant', 'boost', 'control', 'method', 'source', 'network', 'design', 'independent', 'output', 'frequency', 'determine', 'switching', 'frequency', 'paper', 'source', 'inverter', 'parameter', 'boost', 'factor', 'output', 'link', 'voltage', 'capacitor', 'voltage', 'output', 'voltage', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
843,41055,"This simulation present digital negative sequence relay modeling for protection of generator<p>Modeling tools are useful for educational and industrial use. Such tools help the new engineers to simulate the power system under normal and faulty conditions. This simulation presents the design and various data conversion steps of a digital negative sequence relay. The relay performance under different system dynamics is also visualized on MATLAB / SIMULINKÂ® considering a 400V power system.This is an authorized work. Any modification in simulation need citation of work or prior permission from author.Reference paper:M.M. Aman, G.B. Jasmon, Q.A. Khan, A.H.B.A. Bakar, M.N. Abdullah, Modeling and simulation of digital negative sequence relay for unbalanced protection of generator, in:  Power Engineering and Optimization Conference (PEDCO) Melaka, Malaysia, 2012 Ieee International, 2012, pp. 72-77.</p>digital relay,negative sequence relay,protection",84,3,3,0,93,present digital negative sequence relay protection tool useful educational industrial tool help new engineer power normal faulty condition present design various data conversion step digital negative sequence relay relay performance different dynamic also visualize consider power authorize work modification need citation work prior permission author reference paper aman jasmon khan bakar abdullah digital negative sequence relay unbalanced protection generator power engineering optimization conference pedco melaka malaysia iee international digital relaynegative sequence relayprotection,"['present', 'digital', 'negative', 'sequence', 'relay', 'protection', 'tool', 'useful', 'educational', 'industrial', 'tool', 'help', 'new', 'engineer', 'power', 'normal', 'faulty', 'condition', 'present', 'design', 'various', 'data', 'conversion', 'step', 'digital', 'negative', 'sequence', 'relay', 'relay', 'performance', 'different', 'dynamic', 'also', 'visualize', 'consider', 'power', 'authorize', 'work', 'modification', 'need', 'citation', 'work', 'prior', 'permission', 'author', 'reference', 'paper', 'aman', 'jasmon', 'khan', 'bakar', 'abdullah', 'digital', 'negative', 'sequence', 'relay', 'unbalanced', 'protection', 'generator', 'power', 'engineering', 'optimization', 'conference', 'pedco', 'melaka', 'malaysia', 'iee', 'international', 'digital', 'relaynegative', 'sequence', 'relayprotection']",0
844,41071,"This model provides a deep inside view of reverse power relay modelling on MATLAB<p>Modeling tools are useful for basic understanding of power system, particularly for new engineers. Such tools help the new engineers to modulate the system under normal and faulty conditions. This paper presents the modeling and simulation of digital reverse power relay on MATLAB/SimulinkÂ®. In this simulation, the relay performance is tested on 11kV synchronous generator, connected with 220kV through a step up transformer.This is authorized work. Any modification in simulation need citation of work or prior permission from author.Reference paper:M.M. Aman, G. Bin Jasmon, Q.A. Khan, A.H. Bin Abu Bakar, J.J. Jamian, Modeling and simulation of reverse power relay for generator protection, in:  Power Engineering and Optimization Conference (PEDCO) Melaka, Malaysia, 2012 Ieee International, 2012, pp. 317-322.</p>digital relay,protection,reverse power relay",81,2,2,0,92,provide deep inside view reverse power relay matlabmodeling tool useful basic understand power particularly new engineer tool help new engineer modulate normal faulty condition paper present digital reverse power relay relay performance test synchronous generator connect step transformer authorize work modification need citation work prior permission author reference paper aman bin jasmon khan bin abu bakar jamian modeling reverse power relay generator protection power engineering optimization conference pedco melaka malaysia iee international digital power relay,"['provide', 'deep', 'inside', 'view', 'reverse', 'power', 'relay', 'matlabmodeling', 'tool', 'useful', 'basic', 'understand', 'power', 'particularly', 'new', 'engineer', 'tool', 'help', 'new', 'engineer', 'modulate', 'normal', 'faulty', 'condition', 'paper', 'present', 'digital', 'reverse', 'power', 'relay', 'relay', 'performance', 'test', 'synchronous', 'generator', 'connect', 'step', 'transformer', 'authorize', 'work', 'modification', 'need', 'citation', 'work', 'prior', 'permission', 'author', 'reference', 'paper', 'aman', 'bin', 'jasmon', 'khan', 'bin', 'abu', 'bakar', 'jamian', 'modeling', 'reverse', 'power', 'relay', 'generator', 'protection', 'power', 'engineering', 'optimization', 'conference', 'pedco', 'melaka', 'malaysia', 'iee', 'international', 'digital', 'power', 'relay']",4
845,41072,"The simulation provide the simulation of digital frequency relay on MATLAB.<p>Modeling tools are useful for educational and industrial use. Such tools help the new engineers to simulate the power system under normal and faulted conditions. This model presents the design and various data conversion steps of a digital frequency relay. The designed relay will cover both over and under frequency conditions. The performance of proposed digital frequency relay is observed under different system dynamics on MATLAB/SIMULINKÂ®.This is authorized work. Any modification need citation of paper or prior acknowledgment from author.Paper Reference:M.M. Aman, G. Bin Jasmon, H. Bin Mokhlis, Q.A. Khan, A.H. Bin Abu Bakar, M. Karimi, Modeling and simulation of digital frequency relay for generator protection, in:  Power and Energy (PECon), 2012 IEEE International Conference on, 2012, pp. 701-706.</p>digital frequency relay,protection,under frequency",208,6,3,0,234,provide digital frequency relay modeling tool useful educational industrial tool help new engineer power normal faulted condition present design various data conversion step digital frequency relay design relay cover frequency condition performance propose digital frequency relay observe different dynamic authorize work modification need citation paper prior acknowledgment author paper reference aman bin jasmon bin mokhlis khan bin abu bakar karimi digital frequency relay generator protection power energy pecon iee international conference digital frequency frequency,"['provide', 'digital', 'frequency', 'relay', 'modeling', 'tool', 'useful', 'educational', 'industrial', 'tool', 'help', 'new', 'engineer', 'power', 'normal', 'faulted', 'condition', 'present', 'design', 'various', 'data', 'conversion', 'step', 'digital', 'frequency', 'relay', 'design', 'relay', 'cover', 'frequency', 'condition', 'performance', 'propose', 'digital', 'frequency', 'relay', 'observe', 'different', 'dynamic', 'authorize', 'work', 'modification', 'need', 'citation', 'paper', 'prior', 'acknowledgment', 'author', 'paper', 'reference', 'aman', 'bin', 'jasmon', 'bin', 'mokhlis', 'khan', 'bin', 'abu', 'bakar', 'karimi', 'digital', 'frequency', 'relay', 'generator', 'protection', 'power', 'energy', 'pecon', 'iee', 'international', 'conference', 'digital', 'frequency', 'frequency']",0
846,41078,"To analyze the response of various combination of PID gain on system performance.<p>It can be used for understanding the pid gains as well as tuning the gains for the system.</p>automotive,control design,gui,pid controller,simulation,simulink,automotive,simulink,automotive,pid controller",25,1,2,0,26,analyze response various combination pid gain performance understanding pid gain well tune gain designguipid controller,"['analyze', 'response', 'various', 'combination', 'pid', 'gain', 'performance', 'understanding', 'pid', 'gain', 'well', 'tune', 'gain', 'designguipid', 'controller']",4
847,41113,"Adds an item to the right-click menu to open the proptery inspector.<p>Simulink users familiar with get_param and set_param know that every block and model in Simulink have a list of properties that can be altered.the inpect() function opens a graphical interface to examine and edit all of these properties. This function is called using a command-line call like: inspect(get_param(gcb,'Object'));This function adds a menu item to the right-click menu to make this graphical interface more discoverable. </p>api,gui,modeling,simulink",5,0,1,0,4,add item right click menu open proptery inspector user familiar get param set param know every block list property alter inpect function open graphical interface examine edit property function call command line call like inspect get param gcb object function add menu item right click menu make graphical interface discoverable,"['add', 'item', 'right', 'click', 'menu', 'open', 'proptery', 'inspector', 'user', 'familiar', 'get', 'param', 'set', 'param', 'know', 'every', 'block', 'list', 'property', 'alter', 'inpect', 'function', 'open', 'graphical', 'interface', 'examine', 'edit', 'property', 'function', 'call', 'command', 'line', 'call', 'like', 'inspect', 'get', 'param', 'gcb', 'object', 'function', 'add', 'menu', 'item', 'right', 'click', 'menu', 'make', 'graphical', 'interface', 'discoverable']",0
848,41149,"This file contains the simulink simulation of the PD control of a Quadrotor. Quadrotor model is take<p>This file contains the simulink simulation of the PD control of a Quadrotor. Quadrotor model is taken from Dr. Bouabdallah's PhD thesis found also in the file. The PD control is enough to control the quadrotor in disturbance free situations.The âbigâ Omega I used in my model is actually âGammaâ found in the quadrotor dynamics. The controls can be calculated from the rotorsâ speeds, so using the same equations reversely we can find the rotorsâ speeds out of the controls (solve for the rotorsâ speeds using the upper equations, 4 equations with 4 unknowns). Î³ is the effect of rotor speeds on the system. In general there are no sensors put on the quadrotor to measure its rotorsâ speeds, so we canât calculate gamma in practical and it is assumed as disturbance. Gamma is calculated using the four rotorsâ speeds as:Gamma = omega1 - omega2 + omega3 - omega4 : The resultant effect of all the rotors.What I did is calculating omegasquare of each rotor, used omegasquares to calculate gamma, then recalculate the controls.</p>pd control,quadrotor control,quadrotor simulink",169,5,3,0,218,file contains control quadrotor quadrotor takethis file contains control quadrotor quadrotor take bouabdallah phd thesis find also file control enough control quadrotor disturbance free situation big omega actually gamma find quadrotor dynamic control calculate rotor speed equation reversely find rotor speed control solve rotor speed upper equation equation unknowns effect rotor speed general sensor put quadrotor measure rotor speed cant calculate gamma practical assume disturbance gamma calculate four rotor speed gamma omega omega omega omega resultant effect rotor calculate omegasquare rotor omegasquares calculate gamma recalculate control,"['file', 'contains', 'control', 'quadrotor', 'quadrotor', 'takethis', 'file', 'contains', 'control', 'quadrotor', 'quadrotor', 'take', 'bouabdallah', 'phd', 'thesis', 'find', 'also', 'file', 'control', 'enough', 'control', 'quadrotor', 'disturbance', 'free', 'situation', 'big', 'omega', 'actually', 'gamma', 'find', 'quadrotor', 'dynamic', 'control', 'calculate', 'rotor', 'speed', 'equation', 'reversely', 'find', 'rotor', 'speed', 'control', 'solve', 'rotor', 'speed', 'upper', 'equation', 'equation', 'unknowns', 'effect', 'rotor', 'speed', 'general', 'sensor', 'put', 'quadrotor', 'measure', 'rotor', 'speed', 'cant', 'calculate', 'gamma', 'practical', 'assume', 'disturbance', 'gamma', 'calculate', 'four', 'rotor', 'speed', 'gamma', 'omega', 'omega', 'omega', 'omega', 'resultant', 'effect', 'rotor', 'calculate', 'omegasquare', 'rotor', 'omegasquares', 'calculate', 'gamma', 'recalculate', 'control']",4
849,41161,"How do I connect a PV array to the converter? does not work... Please help me... <p>Pv array -72 solar cells(simscape) </p>fotovoltaic,array,dcac,fotovoltaic,invertor,matlab,photovoltaic,pv array,simulation,simulink,solar cell,three level inverter,array",173,19,5,0,167,connect array converter work please help array solar cell simscape cellthree level inverterarray,"['connect', 'array', 'converter', 'work', 'please', 'help', 'array', 'solar', 'cell', 'simscape', 'cellthree', 'level', 'inverterarray']",7
850,41200,esto es algo basico cuando recien aprendi a usar simulink<p>como funcionan los steps y los integradores</p>simulink,25,0,1,0,27,esto algo basico cuando recien aprendi usar funcionan los step los,"['esto', 'algo', 'basico', 'cuando', 'recien', 'aprendi', 'usar', 'funcionan', 'los', 'step', 'los']",2
851,41272,"Highlights the virtual blocks that are optimized during simulation.<p>Syntax: hilite_virtual_blocks()modelName - String input of the model name.This function is an attempt to highlight the blocks those are not contributing to the model simulation directly.This function is also useful to study the impact of optimization settings of model configuration parameters.Approach: We can identify whether a block is used during the model simulation and it is not optimized by the following methods.1. If we can setup add_exec_event_listener for the block2. If we can get the run time object of the block.The tool uses the second method. Because with the first one, the script can't be used more than once in the same session.If used it would highlight all the blocks as it can't add the listed again.Please go through the help &gt;&gt;help add_exec_event_listener.Sample: Unzip the contents and run hilite_virtual_blocks('check_path') in the MATLAB command prompt. Note: 'check_path' is a sample model in the attachment.Please compare the Simulink block sorted order for the same. This gives some idea on how the Simulink engine works.---- Sorted list for 'check_path' [2 nonvirtual blocks, directFeed=0]  0:0    'check_path/Constant' (Constant, tid=-2)  0:1    'check_path/Scope' (Scope, tid=1)Call the function again by changing the optimization settings and find the differences from the previous run.Play it with a larger model. This function potentially can be used for studying model coverage.Constraints:- It will not work across model reference boundaries. Hence it has to be executed for the referenced models manually.- The automation creates unsaved changes, but the changes can be ignored.- Model should be simulatable.Please feel free to improve it and add your comments.</p>add_exec_event_listener,model optimization,runtimeobject,sorted order,virtual blocks",5,0,1,0,4,highlight virtual block optimize syntax hilite virtual block modelname string input name function attempt highlight block contribute directly function also useful study impact optimization setting configuration parameter approach identify whether block optimize follow method setup add exec event listener block get run time object block tool second method first one script session would highlight block add list please help help add exec event listener sample unzip content run hilite virtual block check path command prompt note check path sample attachment please compare block sort order give idea engine work sort list check path nonvirtual block directfeed check path constant constant tid check path scope scope tid call function change optimization setting find difference previous run play large function potentially study coverage constraint work across reference boundary hence execute referenced manually automation create unsaved change change ignore please feel free improve add comment add exec event listenermodel ordervirtual block,"['highlight', 'virtual', 'block', 'optimize', 'syntax', 'hilite', 'virtual', 'block', 'modelname', 'string', 'input', 'name', 'function', 'attempt', 'highlight', 'block', 'contribute', 'directly', 'function', 'also', 'useful', 'study', 'impact', 'optimization', 'setting', 'configuration', 'parameter', 'approach', 'identify', 'whether', 'block', 'optimize', 'follow', 'method', 'setup', 'add', 'exec', 'event', 'listener', 'block', 'get', 'run', 'time', 'object', 'block', 'tool', 'second', 'method', 'first', 'one', 'script', 'session', 'would', 'highlight', 'block', 'add', 'list', 'please', 'help', 'help', 'add', 'exec', 'event', 'listener', 'sample', 'unzip', 'content', 'run', 'hilite', 'virtual', 'block', 'check', 'path', 'command', 'prompt', 'note', 'check', 'path', 'sample', 'attachment', 'please', 'compare', 'block', 'sort', 'order', 'give', 'idea', 'engine', 'work', 'sort', 'list', 'check', 'path', 'nonvirtual', 'block', 'directfeed', 'check', 'path', 'constant', 'constant', 'tid', 'check', 'path', 'scope', 'scope', 'tid', 'call', 'function', 'change', 'optimization', 'setting', 'find', 'difference', 'previous', 'run', 'play', 'large', 'function', 'potentially', 'study', 'coverage', 'constraint', 'work', 'across', 'reference', 'boundary', 'hence', 'execute', 'referenced', 'manually', 'automation', 'create', 'unsaved', 'change', 'change', 'ignore', 'please', 'feel', 'free', 'improve', 'add', 'comment', 'add', 'exec', 'event', 'listenermodel', 'ordervirtual', 'block']",0
852,41307,"Closed Loop Engine Controller running PIL Simulation with Arduino Board<p>This model is a modified version of the ""Engine Timing Model"" provided with Simulink Demos. Bus structure was implemented to separate Controller from Plant, reference model is used to run controller in PIL simulation using an Arduino Board. Different simulation configuration parametters and data types were modified to run PIL simulation.</p>arduino,automotive,control design,demo,engine modeling,pil simulation",244,26,4,0,241,closed loop engine controller run pil arduino boardthis modify version engine timing provide demos bus structure implement separate controller plant reference run controller pil arduino board different configuration parametters data type modify run pil modelingpil,"['closed', 'loop', 'engine', 'controller', 'run', 'pil', 'arduino', 'boardthis', 'modify', 'version', 'engine', 'timing', 'provide', 'demos', 'bus', 'structure', 'implement', 'separate', 'controller', 'plant', 'reference', 'run', 'controller', 'pil', 'arduino', 'board', 'different', 'configuration', 'parametters', 'data', 'type', 'modify', 'run', 'pil', 'modelingpil']",0
853,41446,"This model presents the analysis and simulation using  Simulink of a three-phase four wire system.<p>Due to the wide spread of power electronics equipment in modern electrical systems, the increase of the harmonics disturbance in the ac mains currents has became a major concern due to the adverse effects on all equipment. This model presents the analysis and simulation using Matlab Simulink of a three-phase four wire neutral clamped active power filter (APF) compensating the harmonics and reactive power created by nonlinear balanced and unbalanced low power loads in steady state and in transients. The usefulness of the simulation approach to APF is demonstrated so APF designers have a better insight using Matlab Simulink in order to develop new APFs.</p>active filter,it gives error,power_conversion_control,power_electronics_control,active filter,filter,harmonics,power,pq theory,reactive power,shunt,simulation,simulink,sapf",365,15,4,0,452,present analysis three phase four wire due wide spread power electronics equipment modern electrical increase harmonic disturbance mains current become major concern due adverse effect equipment present analysis three phase four wire neutral clamp active power filter apf compensate harmonic reactive power create nonlinear balance unbalanced low power load steady state transient usefulness approach apf demonstrate apf designer well insight order develop new apfs active filterit give errorpower conversion controlpower electronics controlactive theoryreactive,"['present', 'analysis', 'three', 'phase', 'four', 'wire', 'due', 'wide', 'spread', 'power', 'electronics', 'equipment', 'modern', 'electrical', 'increase', 'harmonic', 'disturbance', 'mains', 'current', 'become', 'major', 'concern', 'due', 'adverse', 'effect', 'equipment', 'present', 'analysis', 'three', 'phase', 'four', 'wire', 'neutral', 'clamp', 'active', 'power', 'filter', 'apf', 'compensate', 'harmonic', 'reactive', 'power', 'create', 'nonlinear', 'balance', 'unbalanced', 'low', 'power', 'load', 'steady', 'state', 'transient', 'usefulness', 'approach', 'apf', 'demonstrate', 'apf', 'designer', 'well', 'insight', 'order', 'develop', 'new', 'apfs', 'active', 'filterit', 'give', 'errorpower', 'conversion', 'controlpower', 'electronics', 'controlactive', 'theoryreactive']",4
854,41461,"All the modules and control charts.<p>Model Chart and label for inverted pendulum.</p>pendulum,pendulum",12,0,1,0,13,module control chart chart label invert pendulum,"['module', 'control', 'chart', 'chart', 'label', 'invert', 'pendulum']",5
855,41491,"Simple Digital Out SFunction example block showing how to use the WiringPi library<p>An example SFunction block for Raspberry Pi showing basic usage of the WiringPi libraryThe latest version of this file and others can be found at our Raspberry Pi downloads page:<a href=""http://minseg.webs.com/downloadsA"">http://minseg.webs.com/downloadsA</a> complete Arduino library and curriculum is available here:<a href=""http://minseg.com/pages/downloadscoming"">http://minseg.com/pages/downloadscoming</a> soon:- PWM - Quadrature Encoder- MPU6050and others!</p>driver,raspberry pi,rpi,sfunction,simulink,electric_motor_control,power_conversion_control,power_electronics_control,maker",8,0,1,0,6,simple digital sfunction example block show wiringpi libraryan example sfunction block raspberry show basic usage wiringpi librarythe late version file others find raspberry downloads page http minseg web com downloadsa complete arduino curriculum available http minseg com page downloadscoming soon pwm quadrature encoder mpu others driverraspberry motor controlpower conversion controlpower electronics controlmaker,"['simple', 'digital', 'sfunction', 'example', 'block', 'show', 'wiringpi', 'libraryan', 'example', 'sfunction', 'block', 'raspberry', 'show', 'basic', 'usage', 'wiringpi', 'librarythe', 'late', 'version', 'file', 'others', 'find', 'raspberry', 'downloads', 'page', 'http', 'minseg', 'web', 'com', 'downloadsa', 'complete', 'arduino', 'curriculum', 'available', 'http', 'minseg', 'com', 'page', 'downloadscoming', 'soon', 'pwm', 'quadrature', 'encoder', 'mpu', 'others', 'driverraspberry', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlmaker']",0
856,41516,"SIMPLE SINGLE PHASE ACTIVE HARMONIC FILTER WITH UNIVERSAL BRIDGE AND UTILITY.<p>IN THESE SIMULATION WE CAN SEE THE PERFORMANCE OF THE SIMPLIFIED HARMONIC FILTER, THAT CAN COMPENSATE SOME HARMONICS GENERATED BY  DIODE RECTIFIER BRIDGE.</p>harmonic,harmonic",29,0,1,0,34,simple single phase active harmonic filter universal bridge utility see performance simplify harmonic filter compensate harmonic generate diode rectifier bridge,"['simple', 'single', 'phase', 'active', 'harmonic', 'filter', 'universal', 'bridge', 'utility', 'see', 'performance', 'simplify', 'harmonic', 'filter', 'compensate', 'harmonic', 'generate', 'diode', 'rectifier', 'bridge']",3
857,41528,"DC Motor Driver Block using Soft PWM of WiringPi Library<p>Motor Driver Block using Soft PWM of WiringPi Library.This block controls both the magnitude and direction of a DC motor with an H-bridge such as the DRV8833 or the SN754410 using Soft PWM of the WiringPi library.The reference zero speed is set with high voltage at both motor terminals (both PWM signals at full duty cycle).  For the DRV8833 driver this creates a highly linear response and eliminates the typical dead band around zero speed.  This increases motor response but may have a larger power draw (this has not been measured).More information can be found at our website, along with other device drivers:<a href=""http://minseg.webs.com/downloadsA"">http://minseg.webs.com/downloadsA</a> complete Arduino library and curriculum is available here:<a href=""http://minseg.com/pages/downloadsOther"">http://minseg.com/pages/downloadsOther</a> driver blocks on the way:- Quadrature encoder- MPU6050Stay tuned!This development is part of the Mechatronics curriculum at Rensselaer Polytechnic University</p>pick of the week,potw,dc motor,driver,hbridge,raspberry pi,sfunction,simulink,electric_motor_control,power_conversion_control,power_electronics_control",16,1,2,0,17,motor driver block soft pwm wiringpi librarymotor driver block soft pwm wiringpi block control magnitude direction motor bridge drv soft pwm wiringpi reference zero speed set high voltage motor terminal pwm signal full duty cycle drv driver create highly linear response eliminate typical dead band around zero speed increase motor response may large power draw measure information find website along device driver http minseg web com downloadsa complete arduino curriculum available http minseg com page downloadsother driver block way quadrature encoder mpu stay tune development part mechatronics curriculum rensselaer polytechnic universitypick weekpotwdc motor controlpower conversion controlpower electronics control,"['motor', 'driver', 'block', 'soft', 'pwm', 'wiringpi', 'librarymotor', 'driver', 'block', 'soft', 'pwm', 'wiringpi', 'block', 'control', 'magnitude', 'direction', 'motor', 'bridge', 'drv', 'soft', 'pwm', 'wiringpi', 'reference', 'zero', 'speed', 'set', 'high', 'voltage', 'motor', 'terminal', 'pwm', 'signal', 'full', 'duty', 'cycle', 'drv', 'driver', 'create', 'highly', 'linear', 'response', 'eliminate', 'typical', 'dead', 'band', 'around', 'zero', 'speed', 'increase', 'motor', 'response', 'may', 'large', 'power', 'draw', 'measure', 'information', 'find', 'website', 'along', 'device', 'driver', 'http', 'minseg', 'web', 'com', 'downloadsa', 'complete', 'arduino', 'curriculum', 'available', 'http', 'minseg', 'com', 'page', 'downloadsother', 'driver', 'block', 'way', 'quadrature', 'encoder', 'mpu', 'stay', 'tune', 'development', 'part', 'mechatronics', 'curriculum', 'rensselaer', 'polytechnic', 'universitypick', 'weekpotwdc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
858,41529,"Simple Soft PWM driver block example using WirngPi<p>This is a simple example for motor speed control using the soft PWM function in the WiringPi library.The range is set to 255 to emulate Arduino like implementation. Other device driver block, and the hardware it was run on is available at our website:<a href=""http://minseg.webs.com/downloadsA"">http://minseg.webs.com/downloadsA</a> complete Arduino library and curriculum is available here:<a href=""http://minseg.com/pages/downloadscoming"">http://minseg.com/pages/downloadscoming</a> soon: - Quadrature Encoder - MPU6050and others!This work is part of the Mechatronics curriculum at Rensselaer Polytechnic Institute.</p>driver,motor driver,pwm,raspberry pi,sfunction,simulink,electric_motor_control,power_conversion_control,power_electronics_control,maker",8,0,1,0,6,simple soft pwm driver block example wirngpithis simple example motor speed control soft pwm function wiringpi range set emulate arduino like implementation device driver block hardware run available website http minseg web com downloadsa complete arduino curriculum available http minseg com page downloadscoming soon quadrature encoder mpu others work part mechatronics curriculum rensselaer polytechnic institute drivermotor motor controlpower conversion controlpower electronics controlmaker,"['simple', 'soft', 'pwm', 'driver', 'block', 'example', 'wirngpithis', 'simple', 'example', 'motor', 'speed', 'control', 'soft', 'pwm', 'function', 'wiringpi', 'range', 'set', 'emulate', 'arduino', 'like', 'implementation', 'device', 'driver', 'block', 'hardware', 'run', 'available', 'website', 'http', 'minseg', 'web', 'com', 'downloadsa', 'complete', 'arduino', 'curriculum', 'available', 'http', 'minseg', 'com', 'page', 'downloadscoming', 'soon', 'quadrature', 'encoder', 'mpu', 'others', 'work', 'part', 'mechatronics', 'curriculum', 'rensselaer', 'polytechnic', 'institute', 'drivermotor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlmaker']",0
859,41534,"conversion of balanced three phase elements into quadrature two elements.this can be highly helpful.<p>This will be highly helpful tothose who are working on dessigning power harmonics conditioner and harmonic filter,</p>electric_motor_control,power_electronics_control,clarke transformation,harmonics,mathematics,simulation,simulink",32,2,2,0,40,conversion balance three phase element quadrature two element highly helpful highly helpful tothose work dessigning power harmonic conditioner harmonic filterelectric motor controlpower electronics controlclarke,"['conversion', 'balance', 'three', 'phase', 'element', 'quadrature', 'two', 'element', 'highly', 'helpful', 'highly', 'helpful', 'tothose', 'work', 'dessigning', 'power', 'harmonic', 'conditioner', 'harmonic', 'filterelectric', 'motor', 'controlpower', 'electronics', 'controlclarke']",3
860,41537,"A circuit based simulation model for a PV cell for estimating the IV and PV characteristic curves.<p>A circuit based simulation model for a PV cell for estimating the IV characteristic curves of photovoltaic panel with respect to changes on environmental parameters (temperature and irradiance) and cell  parameters (parasitic resistance  and ideality factor).This paper could be used to analyze in the development of  MPPT(maximum power point tracking) algorithm. Using a Shockley diode equation,an accurate simulink PV panel model is developed. 60W Solarex MSX60 PV panel is chosen for evaluating the developed model.</p>pv,pv,solar,power_conversion_control,power_electronics_control,mppt,pv,solar,mppt,pv,solar,mppt,pv,mppt,pv,mppt,solar energy,solar",175,2,2,0,154,circuit base cell estimate characteristic curve circuit base cell estimate characteristic curve photovoltaic panel respect change environmental parameter temperature irradiance cell parameter parasitic resistance ideality factor paper could analyze development mppt maximum power point track algorithm shockley diode equationan accurate panel develop solarex msx panel chosen evaluate develop pvpvsolarpower conversion controlpower electronics energysolar,"['circuit', 'base', 'cell', 'estimate', 'characteristic', 'curve', 'circuit', 'base', 'cell', 'estimate', 'characteristic', 'curve', 'photovoltaic', 'panel', 'respect', 'change', 'environmental', 'parameter', 'temperature', 'irradiance', 'cell', 'parameter', 'parasitic', 'resistance', 'ideality', 'factor', 'paper', 'could', 'analyze', 'development', 'mppt', 'maximum', 'power', 'point', 'track', 'algorithm', 'shockley', 'diode', 'equationan', 'accurate', 'panel', 'develop', 'solarex', 'msx', 'panel', 'chosen', 'evaluate', 'develop', 'pvpvsolarpower', 'conversion', 'controlpower', 'electronics', 'energysolar']",4
861,41602,"This is an augmenting block that enables the ArduinoIO package with the I2C bus read capability.<p>A new method i2cRead() is added to the arduino.m file. The adiosrv.ped file is modified accordingly. So, with this add-on, your Arduino Uno can speak in I2C through Simulink. The I2C read functionality can be accessed either from Matlab command window or Simulink.1) In command window, a sample syntax is a.i2cRead(hex2dec('5A'), hex2dec('07')) where '5A' denotes the 7bit device address in hex format 0x5A, and '07' denotes the register address '0x07'.2) In Simulink, you can find the Arduino I2C read block in the arduino_io_lib. When you put the Arduino I2C Read block into your block diagram, be sure to put the correct device address and register address to the parameter field. Help doc is available for instruction inside this download.</p>arduino simulink package,i2c arduino simulink block,arduino simulink packagei2c arduino simulink block,arduino simulink package,i2c arduino simulink block",16,0,1,6,14,augment block enables arduinoio package bus read capability new method cread add arduino file adiosrv ped file modify accordingly add arduino uno speak read functionality access either command window command window sample syntax cread hex dec hex dec denote bit device address hex format denote register address find arduino read block arduino lib put arduino read block block diagram sure put correct device address register address parameter field help doc available instruction inside download arduino packagei arduino blockarduino packagei arduino blockarduino packagei arduino block,"['augment', 'block', 'enables', 'arduinoio', 'package', 'bus', 'read', 'capability', 'new', 'method', 'cread', 'add', 'arduino', 'file', 'adiosrv', 'ped', 'file', 'modify', 'accordingly', 'add', 'arduino', 'uno', 'speak', 'read', 'functionality', 'access', 'either', 'command', 'window', 'command', 'window', 'sample', 'syntax', 'cread', 'hex', 'dec', 'hex', 'dec', 'denote', 'bit', 'device', 'address', 'hex', 'format', 'denote', 'register', 'address', 'find', 'arduino', 'read', 'block', 'arduino', 'lib', 'put', 'arduino', 'read', 'block', 'block', 'diagram', 'sure', 'put', 'correct', 'device', 'address', 'register', 'address', 'parameter', 'field', 'help', 'doc', 'available', 'instruction', 'inside', 'download', 'arduino', 'packagei', 'arduino', 'blockarduino', 'packagei', 'arduino', 'blockarduino', 'packagei', 'arduino', 'block']",0
862,41645,"Quadrature encoder route implemented with interrupts with WiringPi<p>This code is port of Giampy's encoder SFunction from Arduino using the WiringPi library.It has support for multiple encoders.Other device driver block, and the hardware it was run on is available at our website:<a href=""http://minseg.webs.com/downloadsA"">http://minseg.webs.com/downloadsA</a> complete library for Arduino and curriculum is available here:<a href=""http://minseg.com/pages/downloadscoming"">http://minseg.com/pages/downloadscoming</a> soon: - MPU6050 gyro accelerometer- HMC5883L magnetometer- FreeIMU driverand others!This work is part of the Mechatronics curriculum at Rensselaer Polytechnic Institute.</p>control,encoder,motor driver,quadrature,sfunction,simulink,maker",2,0,1,0,1,quadrature encoder route implement interrupt wiringpithis code port giampy encoder sfunction arduino wiringpi support multiple encoders device driver block hardware run available website http minseg web com downloadsa complete arduino curriculum available http minseg com page downloadscoming soon mpu gyro accelerometer hmc magnetometer freeimu driverand others work part mechatronics curriculum rensselaer polytechnic institute,"['quadrature', 'encoder', 'route', 'implement', 'interrupt', 'wiringpithis', 'code', 'port', 'giampy', 'encoder', 'sfunction', 'arduino', 'wiringpi', 'support', 'multiple', 'encoders', 'device', 'driver', 'block', 'hardware', 'run', 'available', 'website', 'http', 'minseg', 'web', 'com', 'downloadsa', 'complete', 'arduino', 'curriculum', 'available', 'http', 'minseg', 'com', 'page', 'downloadscoming', 'soon', 'mpu', 'gyro', 'accelerometer', 'hmc', 'magnetometer', 'freeimu', 'driverand', 'others', 'work', 'part', 'mechatronics', 'curriculum', 'rensselaer', 'polytechnic', 'institute']",0
863,41730,"fuzzy control the ip<p>use the fuzzy type of mamdani to control the ip</p>fuzzy,control design,control design",37,1,2,0,45,fuzzy control ipuse fuzzy type mamdani control ipfuzzycontrol designcontrol design,"['fuzzy', 'control', 'ipuse', 'fuzzy', 'type', 'mamdani', 'control', 'ipfuzzycontrol', 'designcontrol', 'design']",4
864,41802,"Model of a BPSK DSS system with two users through an AWGN channel, attached to a BER calculator.<p>Input is generated using the Random Integer Generator block, converted to polar (with unipolar we get 3 states after multiplication instead of 4), then multiplied with the output of a PN-Generator.The data is modulated using BPSK then sent through an AWGN channel.On the receiver side we multiply with the same PN sequence and demodulate.The BER-Calculator block compares sent data with received data, and outputs a vector with count of symbols, errors, and the BER.To add more users simply copy the whole TX and RX part and attach it to the add block after adding another input to it.</p>bpsk,digital communications,dss,spread spectrum",38,0,1,0,41,bpsk two user awgn channel attach ber calculator input generate random integer generator block convert polar unipolar get state multiplication instead multiply output generator data modulate bpsk send awgn channel receiver side multiply sequence demodulate ber calculator block compare send data receive data output vector count symbols error ber add user simply copy whole part attach add block add another input bpskdigital spectrum,"['bpsk', 'two', 'user', 'awgn', 'channel', 'attach', 'ber', 'calculator', 'input', 'generate', 'random', 'integer', 'generator', 'block', 'convert', 'polar', 'unipolar', 'get', 'state', 'multiplication', 'instead', 'multiply', 'output', 'generator', 'data', 'modulate', 'bpsk', 'send', 'awgn', 'channel', 'receiver', 'side', 'multiply', 'sequence', 'demodulate', 'ber', 'calculator', 'block', 'compare', 'send', 'data', 'receive', 'data', 'output', 'vector', 'count', 'symbols', 'error', 'ber', 'add', 'user', 'simply', 'copy', 'whole', 'part', 'attach', 'add', 'block', 'add', 'another', 'input', 'bpskdigital', 'spectrum']",0
865,41833,"1.5MW Wind Turbine based on Direct-driven PMSG(Permanent Magnet Synchronous Generator)<p>Though there are many literatures on PMSG wind turbine modelling, I found out that it's difficult   to get a detailed simulink model, so I made this, hope you can make full use of it!</p>directdriven,directdriven,wind turbine,directdriven,mppt,pmsg,pwm converter,wind turbine,when i am trying to run the model it showing the error the fixed,pmsg,mppt,pmsg",486,14,5,0,478,wind turbine base direct drive pmsg permanent magnet synchronous generator though many literature pmsg wind turbine modelling find difficult get detail make hope make full converterwind turbinewhen try run show error,"['wind', 'turbine', 'base', 'direct', 'drive', 'pmsg', 'permanent', 'magnet', 'synchronous', 'generator', 'though', 'many', 'literature', 'pmsg', 'wind', 'turbine', 'modelling', 'find', 'difficult', 'get', 'detail', 'make', 'hope', 'make', 'full', 'converterwind', 'turbinewhen', 'try', 'run', 'show', 'error']",0
866,41838,"This is the Matlab code for the model Benchmark Problem 02.<p>This is a Benchmark problem code. It mimics a aircraft control law with most of blocks like transient free switches, delay (persistence) blocks, table look up, filters, rate limiters and integrators. Switching logic with signal threshold is also provided. It is a 21 input problem which can be used for the design of test cases. A Matlab code is provided which has been tested with the model with 6x10^8 test points. We hope that all the errors are captured. In case someone finds an error I would like to know. A mutation generation script is also provided to generate mutants. It can generate variable, logic, logic, data and math mutants. In the current state it can make 34000 or more mutants. The user can make some more if required. Two sets of test data are provided which cover the requirement. One uses the Taguchi DOE and the other uses Simulated Annealing. The SA tests are generated using an Orthogonal array as a first guess. This provided a complete set of test cases for 100% requirement coverage in 400 odd iterations. This work is an Academia Industry collaboration between Moog India and the Instrumentation and Control Engineering faculty of the Manipal Institute of Technology, Manipal, India.</p>aerospace,aircraft control laws,optimised test cases,optimization,simulation,simulink,simulink blocks,verification and validation",69,1,1,1,67,code benchmark problem benchmark problem code mimic aircraft control law block like transient free switch delay persistence block table look filter rate limiter integrator switch logic signal threshold also provide input problem design test case code provide tested test point hope error capture case someone find error would like know mutation generation script also provide generate mutant generate variable logic logic data math mutant current state make mutant user make require two set test data provide cover requirement one taguchi doe anneal test generate orthogonal array first guess provide complete set test case requirement coverage odd iteration work academia industry collaboration moog india instrumentation control engineering faculty manipal institute technology manipal india control lawsoptimised test validation,"['code', 'benchmark', 'problem', 'benchmark', 'problem', 'code', 'mimic', 'aircraft', 'control', 'law', 'block', 'like', 'transient', 'free', 'switch', 'delay', 'persistence', 'block', 'table', 'look', 'filter', 'rate', 'limiter', 'integrator', 'switch', 'logic', 'signal', 'threshold', 'also', 'provide', 'input', 'problem', 'design', 'test', 'case', 'code', 'provide', 'tested', 'test', 'point', 'hope', 'error', 'capture', 'case', 'someone', 'find', 'error', 'would', 'like', 'know', 'mutation', 'generation', 'script', 'also', 'provide', 'generate', 'mutant', 'generate', 'variable', 'logic', 'logic', 'data', 'math', 'mutant', 'current', 'state', 'make', 'mutant', 'user', 'make', 'require', 'two', 'set', 'test', 'data', 'provide', 'cover', 'requirement', 'one', 'taguchi', 'doe', 'anneal', 'test', 'generate', 'orthogonal', 'array', 'first', 'guess', 'provide', 'complete', 'set', 'test', 'case', 'requirement', 'coverage', 'odd', 'iteration', 'work', 'academia', 'industry', 'collaboration', 'moog', 'india', 'instrumentation', 'control', 'engineering', 'faculty', 'manipal', 'institute', 'technology', 'manipal', 'india', 'control', 'lawsoptimised', 'test', 'validation']",0
867,41906,"This is an S Function driver for the MPC4725 I2C Digital to Analog 12 bit converter.<p>I needed to make this work for a project and finally did by following the S Function Builder tutorial that was posted Here: <a href=""http://www.mathworks.com/matlabcentral/answers/74044-s-function-builder-helpI've"">http://www.mathworks.com/matlabcentral/answers/74044-s-function-builder-helpI've</a> also made an S Function with this same process for the ADS1115 I2C 16 bit ADC using the adafruit ADS1015 library but I'll post that later.</p>arduino,driver,i2c,mpc4725,s function,simulink,arduino,driver",6,1,1,1,5,function driver mpc digital analog bit converter need make work project finally follow function builder tutorial post http mathworks com matlabcentral answer function builder helpi also make function process bit adc adafruit post later arduinodriveri cmpc,"['function', 'driver', 'mpc', 'digital', 'analog', 'bit', 'converter', 'need', 'make', 'work', 'project', 'finally', 'follow', 'function', 'builder', 'tutorial', 'post', 'http', 'mathworks', 'com', 'matlabcentral', 'answer', 'function', 'builder', 'helpi', 'also', 'make', 'function', 'process', 'bit', 'adc', 'adafruit', 'post', 'later', 'arduinodriveri', 'cmpc']",7
868,41907,"There are two configurations of the inverter , one of them is 180 degree mode inverter.<p>120 degree mode and 180 degree mode inverters.</p>inverter basics,triggering of pulse generator,working of an inverter",31,0,1,0,30,two configuration inverter one degree mode inverter degree mode degree mode inverter inverter pulse inverter,"['two', 'configuration', 'inverter', 'one', 'degree', 'mode', 'inverter', 'degree', 'mode', 'degree', 'mode', 'inverter', 'inverter', 'pulse', 'inverter']",1
869,41949,"Simulink and MATLAB Toolbox for Moving Horizon Estimation and Model Predictive Control<p>Moving Horizon Estimation (MHE) is an optimization approach that uses a series of measurements observed over time, containing noise (random variations) and other inaccuracies, and produces estimates of unknown variables or parameters. Unlike deterministic approaches like the Kalman filter, MHE requires an iterative approach that relies on linear programming or nonlinear programming solvers to find a solution.See <a href=""http://apmonitor.com/wiki/index.php/Main/Estimation"">http://apmonitor.com/wiki/index.php/Main/Estimation</a> for a tutorial video and information on using these files.</p>differential algebraic equations,kalman filter,moving horizon estimation,nonlinear control,nonlinear programming",28,3,2,0,25,toolbox move horizon estimation predictive controlmoving horizon estimation mhe optimization approach series measurement observe time contain noise random variation inaccuracy produce estimate unknown variable parameter unlike deterministic approach like kalman filter mhe require iterative approach relies linear program nonlinear program solver find solution see http apmonitor com wiki index php main estimation tutorial video information file differential algebraic equationskalman filtermoving horizon programming,"['toolbox', 'move', 'horizon', 'estimation', 'predictive', 'controlmoving', 'horizon', 'estimation', 'mhe', 'optimization', 'approach', 'series', 'measurement', 'observe', 'time', 'contain', 'noise', 'random', 'variation', 'inaccuracy', 'produce', 'estimate', 'unknown', 'variable', 'parameter', 'unlike', 'deterministic', 'approach', 'like', 'kalman', 'filter', 'mhe', 'require', 'iterative', 'approach', 'relies', 'linear', 'program', 'nonlinear', 'program', 'solver', 'find', 'solution', 'see', 'http', 'apmonitor', 'com', 'wiki', 'index', 'php', 'main', 'estimation', 'tutorial', 'video', 'information', 'file', 'differential', 'algebraic', 'equationskalman', 'filtermoving', 'horizon', 'programming']",0
870,41960,"This is a model of a Renewable Compressed Air Energy Storage System (CAES)<p>The model uses PV cells, to run a DC motor which drives an air compressor. The compressed air then turns a air motor to run a AC generator. The system is not operating correctly due to an error with the pneumatic motor. I am not sure how to fix this to get the model to work. Any advice or improvements are appreciated. Thanks </p>ac generator,compressed air,dc motor,pv cells,simscape,electric_motor_control,power_conversion_control,power_electronics_control",226,21,5,0,220,renewable compress air energy storage caes cell run motor drive air compressor compress air turn air motor run generator operate correctly due error pneumatic motor sure fix get work advice improvement appreciate thanks airdc motorpv motor controlpower conversion controlpower electronics control,"['renewable', 'compress', 'air', 'energy', 'storage', 'caes', 'cell', 'run', 'motor', 'drive', 'air', 'compressor', 'compress', 'air', 'turn', 'air', 'motor', 'run', 'generator', 'operate', 'correctly', 'due', 'error', 'pneumatic', 'motor', 'sure', 'fix', 'get', 'work', 'advice', 'improvement', 'appreciate', 'thanks', 'airdc', 'motorpv', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
871,42048,"Vector control of PMSMS is accomplished.<p>The model demonstrate vector control of permanent magnet synchronous motor. Model uses Model of PMSM in rotor frame of reference. There is a speed control loop to regulate the speed.</p>ac motor control,ac motor drives,control,control system,drives,dynamic model,electrical drives,feedback control,industrial control,motor control,motor drives,motor model,permanent magnet synchr,power electronics,speed control,vector control,electric_motor_control,power_electronics_control",85,5,2,0,106,vector control pmsms accomplish demonstrate vector control permanent magnet synchronous motor pmsm rotor frame reference speed control loop regulate speed motor controlac motor modelelectrical drivesfeedback controlmotor controlmotor drivesmotor modelpermanent magnet synchrpower controlvector controlelectric motor controlpower electronics control,"['vector', 'control', 'pmsms', 'accomplish', 'demonstrate', 'vector', 'control', 'permanent', 'magnet', 'synchronous', 'motor', 'pmsm', 'rotor', 'frame', 'reference', 'speed', 'control', 'loop', 'regulate', 'speed', 'motor', 'controlac', 'motor', 'modelelectrical', 'drivesfeedback', 'controlmotor', 'controlmotor', 'drivesmotor', 'modelpermanent', 'magnet', 'synchrpower', 'controlvector', 'controlelectric', 'motor', 'controlpower', 'electronics', 'control']",3
872,42049,This DVr actually modeled for wind turbine operation with suitable ratings in three phase.<p>DVR modelling for power quality improvement.Also this model is tunned with some suitable Values in the Matlab simulink blo</p>simulation,248,8,3,0,261,dvr actually wind turbine operation suitable rating three phase dvr power quality improvement also tunned suitable value,"['dvr', 'actually', 'wind', 'turbine', 'operation', 'suitable', 'rating', 'three', 'phase', 'dvr', 'power', 'quality', 'improvement', 'also', 'tunned', 'suitable', 'value']",4
873,42060,"This model presents speed control of BLDC motor.<p>The model presents speed control of brushless DC motor. There is complete dynamic model of brushless DC motor. Actual speed of motor is compared with reference speed to control three phase inverter to adjust the terminal voltage. This model of BLDC motor can be used in sensorless control of BLDC motor as well.</p>ac motor control,bldc,brushless dc motor,converter,dc motor control,dynamic model,feedback control,industrial control,inverter,motor,motor control,power converter,power electronics,power inverter,power system,simulink,speed control,electric_motor_control,power_conversion_control,power_electronics_control,thank yougood work",171,18,5,0,188,present speed control bldc motor present speed control brushless motor complete dynamic brushless motor actual speed motor compare reference speed control three phase inverter adjust terminal voltage bldc motor sensorless control bldc motor well motor motor controldynamic modelfeedback controlpower converterpower inverterpower controlelectric motor controlpower conversion controlpower electronics controlthank yougood work,"['present', 'speed', 'control', 'bldc', 'motor', 'present', 'speed', 'control', 'brushless', 'motor', 'complete', 'dynamic', 'brushless', 'motor', 'actual', 'speed', 'motor', 'compare', 'reference', 'speed', 'control', 'three', 'phase', 'inverter', 'adjust', 'terminal', 'voltage', 'bldc', 'motor', 'sensorless', 'control', 'bldc', 'motor', 'well', 'motor', 'motor', 'controldynamic', 'modelfeedback', 'controlpower', 'converterpower', 'inverterpower', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlthank', 'yougood', 'work']",1
874,42070,"Ce modele simulink fait un asservissement de vitesse d'un moteur a courant avec une carte arduino<p>Modele simulink pour piloter le systeme de commande de moteur electrique a courant continu de 3sigma: <a href=""http://boutique.3sigma.fr/23-commande-de-moteur-%C3%A9lectrique.htmlCe"">http://boutique.3sigma.fr/23-commande-de-moteur-%C3%A9lectrique.htmlCe</a> systeme utilise une carte romeo compatible arduino uno. Le modele simulink utilise la cible arduino uno pour simulink et cette contribution: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/39354-device-drivers.Il"">http://www.mathworks.com/matlabcentral/fileexchange/39354-device-drivers.Il</a> y a une S-function pour lire le codeur incremental pour mesurer la vitesse de rotation du moteur (faire un build de la S-function) et un bloc PWM pour piloter le moteur.C'est donc un asservissement de vitesse en boucle fermee.La consigne de vitesse est constante. Prochaine etape: utiliser la liaison serie pour definir une consigne de vitesse a partir du programme de pilotage du moteur qu'on peut telecharger sur le site de 3sigma.Quelqu'un a deja fait un modele qui sait lire des donnees structurees avec un bloc arduino serial receive ? Le serial receive ne lit que des octets. Ca n'a pas l'air facile de lire une serie de donnees</p>electric_motor_control,power_conversion_control,power_electronics_control,arduino,asservissement,codeur incremental,moteur a courant continu,pid,pwm,simulink",27,5,3,2,24,modele fait asservissement vitesse moteur courant avec une carte arduinomodele pour piloter systeme commande moteur electrique courant continu sigma http boutique sigma commande moteur lectrique htmlce systeme utilise une carte romeo compatible arduino uno modele utilise cible arduino uno pour cette contribution http mathworks com matlabcentral fileexchange device driver une function pour lira codeur incremental pour mesurer vitesse rotation moteur faire build function bloc pwm pour piloter moteur est donc asservissement vitesse boucle fermee consigne vitesse est constante prochaine etape utiliser liaison serie pour definir une consigne vitesse partir programme pilotage moteur peut telecharger sur site sigma quelqu deja fait modele qui sait lira donnees structurees avec bloc arduino serial receive serial receive lit que des octet pas air facile lira une serie donneeselectric motor controlpower conversion controlpower electronics courant,"['modele', 'fait', 'asservissement', 'vitesse', 'moteur', 'courant', 'avec', 'une', 'carte', 'arduinomodele', 'pour', 'piloter', 'systeme', 'commande', 'moteur', 'electrique', 'courant', 'continu', 'sigma', 'http', 'boutique', 'sigma', 'commande', 'moteur', 'lectrique', 'htmlce', 'systeme', 'utilise', 'une', 'carte', 'romeo', 'compatible', 'arduino', 'uno', 'modele', 'utilise', 'cible', 'arduino', 'uno', 'pour', 'cette', 'contribution', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'device', 'driver', 'une', 'function', 'pour', 'lira', 'codeur', 'incremental', 'pour', 'mesurer', 'vitesse', 'rotation', 'moteur', 'faire', 'build', 'function', 'bloc', 'pwm', 'pour', 'piloter', 'moteur', 'est', 'donc', 'asservissement', 'vitesse', 'boucle', 'fermee', 'consigne', 'vitesse', 'est', 'constante', 'prochaine', 'etape', 'utiliser', 'liaison', 'serie', 'pour', 'definir', 'une', 'consigne', 'vitesse', 'partir', 'programme', 'pilotage', 'moteur', 'peut', 'telecharger', 'sur', 'site', 'sigma', 'quelqu', 'deja', 'fait', 'modele', 'qui', 'sait', 'lira', 'donnees', 'structurees', 'avec', 'bloc', 'arduino', 'serial', 'receive', 'serial', 'receive', 'lit', 'que', 'des', 'octet', 'pas', 'air', 'facile', 'lira', 'une', 'serie', 'donneeselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'courant']",8
875,42082,this is an example to use to instrument <p>this is an example to use to instrument</p>matlab,4,0,1,0,2,example instrument example,"['example', 'instrument', 'example']",7
876,42103,"This model helps you in getting a basic idea of a CUK converter and PI application in converter.<p>This model which resembles a cuk converter which can be used for wide range of DC o/p's.As we know that cuk converter can be used for stepping up/down a given DC value.The important thing that can be noticed from this model is that,it has a PI controller,which can be used for giving a DC constant(desired value of DC o/p),and the error signal is sent through a PI controller,which further helps in setting the particular Duty ratio,which simultaneously produces a desired DC output.i've tried it in designing for value of 50/60 and 50/80...and it worked well....but problem i faced was little overshoot..i would be thankful for the suggestions in reducing it and getting a better design.</p>power_conversion_control,power_electronics_control,control design,gui",20,0,1,0,21,help get basic idea cuk converter application converter resemble cuk converter wide range know cuk converter step give value important thing notice thatit controllerwhich give constant desire value error signal sent controllerwhich help set particular duty ratiowhich produce desire output try design value work well problem face little overshoot would thankful suggestion reduce get well design power conversion controlpower electronics controlcontrol designgui,"['help', 'get', 'basic', 'idea', 'cuk', 'converter', 'application', 'converter', 'resemble', 'cuk', 'converter', 'wide', 'range', 'know', 'cuk', 'converter', 'step', 'give', 'value', 'important', 'thing', 'notice', 'thatit', 'controllerwhich', 'give', 'constant', 'desire', 'value', 'error', 'signal', 'sent', 'controllerwhich', 'help', 'set', 'particular', 'duty', 'ratiowhich', 'produce', 'desire', 'output', 'try', 'design', 'value', 'work', 'well', 'problem', 'face', 'little', 'overshoot', 'would', 'thankful', 'suggestion', 'reduce', 'get', 'well', 'design', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designgui']",4
877,42109,"DSTATCOM for mitigating power quality problems like UPF,ZVR,load balancing in distribution network.<p>DSTATCOM for mitigating power quality problems like UPF,ZVR,load balancing in 3-phase 4-wire  distribution network.4 leg inveerter is used for the compensation purpose and .synchronous reference frame theory based controller is used for the control of DSTATCOM. </p>facts,simulation,simulink,statcom",119,1,2,0,163,dstatcom mitigate power quality problem like upfzvrload balance distribution network dstatcom mitigate power quality problem like upfzvrload balance phase wire distribution network leg inveerter compensation purpose synchronous reference frame theory base controller control dstatcom,"['dstatcom', 'mitigate', 'power', 'quality', 'problem', 'like', 'upfzvrload', 'balance', 'distribution', 'network', 'dstatcom', 'mitigate', 'power', 'quality', 'problem', 'like', 'upfzvrload', 'balance', 'phase', 'wire', 'distribution', 'network', 'leg', 'inveerter', 'compensation', 'purpose', 'synchronous', 'reference', 'frame', 'theory', 'base', 'controller', 'control', 'dstatcom']",4
878,42132,"dc-dc power converters using MATLABâs user defined function block. Doing so saves a lot of time and <p>In this post, I am going to talk about modelling dc-dc power converters using MATLABâs user defined function block. Doing so saves a lot of time and itâs much more easier as compared to the Buck converter model in which each dynamical equation is implemented using blocks. Doing so is not only time consuming, but tracking back and finding out errors is hard especially when the system becomes larger. In this model, I have used as few blocks as possible</p>power_conversion_control,power_electronics_control,be the first to rate this file 153 downloads last 30 days file s,simulation,simulation,simulation,simulation,simulation,simulation",23,2,3,0,25,power converter matlabs user define function block save lot time post talk power converter matlabs user define function block save lot time much easy compare buck converter dynamical equation implement block time consume track back find error hard especially become large used block possiblepower conversion controlpower electronics controlbe first rate file downloads last day file,"['power', 'converter', 'matlabs', 'user', 'define', 'function', 'block', 'save', 'lot', 'time', 'post', 'talk', 'power', 'converter', 'matlabs', 'user', 'define', 'function', 'block', 'save', 'lot', 'time', 'much', 'easy', 'compare', 'buck', 'converter', 'dynamical', 'equation', 'implement', 'block', 'time', 'consume', 'track', 'back', 'find', 'error', 'hard', 'especially', 'become', 'large', 'used', 'block', 'possiblepower', 'conversion', 'controlpower', 'electronics', 'controlbe', 'first', 'rate', 'file', 'downloads', 'last', 'day', 'file']",0
879,42155,"This model simulates direct torque control of an induction motor.<p>This model simulates direct torque control of a three phase induction motor. Space vector trajectory is also plotted to observe the performance. Speed estimator is implemented to control of speed of motor along with the torque. Different websites were used as a resource to develop the direct torque control.</p>ac motor control,ac motors,control system,direct torque control,feed back control,induction motor,industrial electronics,inverter,modelling,motor control,motor drives,power converters,power electronics,power inverters,speed control,torque,electric_motor_control,power_electronics_control,modelling",126,8,3,0,144,direct torque control induction motor direct torque control three phase induction motor space vector trajectory also plot observe performance speed estimator implement control speed motor along torque different website resource develop direct torque control motor controlac motorscontrol systemdirect torque controlfeed back motorindustrial controlmotor drivespower converterspower invertersspeed motor controlpower electronics,"['direct', 'torque', 'control', 'induction', 'motor', 'direct', 'torque', 'control', 'three', 'phase', 'induction', 'motor', 'space', 'vector', 'trajectory', 'also', 'plot', 'observe', 'performance', 'speed', 'estimator', 'implement', 'control', 'speed', 'motor', 'along', 'torque', 'different', 'website', 'resource', 'develop', 'direct', 'torque', 'control', 'motor', 'controlac', 'motorscontrol', 'systemdirect', 'torque', 'controlfeed', 'back', 'motorindustrial', 'controlmotor', 'drivespower', 'converterspower', 'invertersspeed', 'motor', 'controlpower', 'electronics']",3
880,42174,"Transient behavior of three phase squirrel cage induction motor<p>This model has been designed using the parameters mentioned in the model itself. The variables can be easily changed and one can perform the simulation using his own variables. The output stator current, rotor currents, electromagnetic torque and rotor speed has been shown in the corresponding scopes. The transient behavior can be analyzed and suitable controllers can be designed.</p>electric_motor_control,power_electronics_control,abc variables,modelling of induction motors,phase variables,simulink,transient behavior of induction motors,abc variables",377,8,2,0,546,transient behavior three phase squirrel cage induction motorthis design parameter mention variable easily change one perform variable output stator current rotor current electromagnetic torque rotor speed show correspond scope transient behavior analyze suitable controller design electric motor controlpower electronics controlabc induction motorsphase behavior induction motorsabc variable,"['transient', 'behavior', 'three', 'phase', 'squirrel', 'cage', 'induction', 'motorthis', 'design', 'parameter', 'mention', 'variable', 'easily', 'change', 'one', 'perform', 'variable', 'output', 'stator', 'current', 'rotor', 'current', 'electromagnetic', 'torque', 'rotor', 'speed', 'show', 'correspond', 'scope', 'transient', 'behavior', 'analyze', 'suitable', 'controller', 'design', 'electric', 'motor', 'controlpower', 'electronics', 'controlabc', 'induction', 'motorsphase', 'behavior', 'induction', 'motorsabc', 'variable']",3
881,42176,"(d,q) model of three phase squirrel cage induction motors in synchronous reference frame<p>This (d,q) model has been developed in the synchronous reference frame for analysis of induction motor transients. The parameters also match that of (a,b,c) variables. Proper transients analysis can be done by comparing the results obtained for (a,b,c) and (d,q) stationary and synchronous reference frames.</p>electric_motor_control,power_electronics_control,d,q modeling,synchronous reference frame modeling of three phase induction mo",149,6,2,0,194,three phase squirrel cage induction motor synchronous reference framethis develop synchronous reference frame analysis induction motor transient parameter also match abc variable proper transient analysis compare result obtain abc stationary synchronous reference frame electric motor controlpower electronics controldq reference frame three phase induction,"['three', 'phase', 'squirrel', 'cage', 'induction', 'motor', 'synchronous', 'reference', 'framethis', 'develop', 'synchronous', 'reference', 'frame', 'analysis', 'induction', 'motor', 'transient', 'parameter', 'also', 'match', 'abc', 'variable', 'proper', 'transient', 'analysis', 'compare', 'result', 'obtain', 'abc', 'stationary', 'synchronous', 'reference', 'frame', 'electric', 'motor', 'controlpower', 'electronics', 'controldq', 'reference', 'frame', 'three', 'phase', 'induction']",3
882,42183,"Two simple functions that convert a Dataset parameter, containing Simulink Simulation data, to excel<p>Many times when running simulations, you want to take the results, and use them in an excel spreadsheet, or convert them to a text format. The supplied functions enable you to save the simulation results to excel, or import other scenarios into MATLAB, in a Dataset format valid for running simulations with Simulink.Including sample excel spreadsheet, a Simulink model to create a Dataset, and a Simulink model to run the imported scenario. The functions are documented and pretty much self-explanatory.Option 1 - Simulink to Excel:Open and run the model 'example_Simulink'. This will create a parameter named 'logsout' in the workspace.Run the following command - Dataset2XLS(logsout, 'example_data.xlsx') , and an excel spreadsheet named 'example_data' will be created in the current directory.Option 2 - Excel to Simulink:Run the function new = XLS2Dataset('example_Dataset.xlsx')Open the model example_ReadDS. View the Data Import/Export pane in the Configuration parameters,and see how the data is used.*** Notes:Tested on Microsoft Excel Version 2010.</p>dataset,excel,export,import,offline,results,simulink,xls",12,0,1,0,8,two simple function convert dataset parameter contain data excelmany time run want take result excel spreadsheet convert text format supply function enable save result excel import scenario dataset format valid run include sample excel spreadsheet create dataset run import scenario function document pretty much self explanatory option excel open run example create parameter name logsout workspace run follow command dataset logsout example data xlsx excel spreadsheet name example data create current directory option excel run function new dataset example dataset xlsx open example readds view data import export pane configuration parametersand see data note test microsoft excel version,"['two', 'simple', 'function', 'convert', 'dataset', 'parameter', 'contain', 'data', 'excelmany', 'time', 'run', 'want', 'take', 'result', 'excel', 'spreadsheet', 'convert', 'text', 'format', 'supply', 'function', 'enable', 'save', 'result', 'excel', 'import', 'scenario', 'dataset', 'format', 'valid', 'run', 'include', 'sample', 'excel', 'spreadsheet', 'create', 'dataset', 'run', 'import', 'scenario', 'function', 'document', 'pretty', 'much', 'self', 'explanatory', 'option', 'excel', 'open', 'run', 'example', 'create', 'parameter', 'name', 'logsout', 'workspace', 'run', 'follow', 'command', 'dataset', 'logsout', 'example', 'data', 'xlsx', 'excel', 'spreadsheet', 'name', 'example', 'data', 'create', 'current', 'directory', 'option', 'excel', 'run', 'function', 'new', 'dataset', 'example', 'dataset', 'xlsx', 'open', 'example', 'readds', 'view', 'data', 'import', 'export', 'pane', 'configuration', 'parametersand', 'see', 'data', 'note', 'test', 'microsoft', 'excel', 'version']",0
883,42217,"This is a model of BOOST CONVERTER. spl. feature is o/p voltage controlled using this controller.<p>Boost converter is a DC-DC converter with which we can step up a particular DC voltage to a desired(higher value) range.It is a type of SMPS which has two switches namely an Ideal switch and a diode.Along with it it has a inductor,capacitor,resistor etc, as shown in the circuit diagram.Application of Boost converters are Electric hybrid vehicles(EHV),lighting systems etc.The current model i've done will convert a 300/400V DC-DC converter.       when it comes to working,a normal boost converter needs an external pulse to be given so as to produce a specified duty ratio.but here in the model that i have done there is no such need in order to produce a pulse,which will be automatically generated by PID controller.Even the inductor current if you observe you will observe exact continous current mode of operation with (delta)I of ~0.2A ripple.o/p voltage ripple of ~(+/- 5V).        If you find any mistakes in my simulation kindly let me know.I always welcome your valuble suggestions.        Iam thankful to MR.SAURABH NIKAM for guiding me about DC-DC converters. </p>power_conversion_control,power_electronics_control,control design,gui,simulation,simulink",20,0,1,0,21,boost converter spl feature voltage control controller boost converter converter step particular voltage desire high value range type smps two switch namely ideal switch diode along etc show circuit diagram application boost converter electric hybrid vehicle ehv light etc current convert converter come workinga normal boost converter need external pulse give produce specify duty ratio need order produce pulsewhich automatically generate pid controller even inductor current observe observe exact continous current mode operation delta ripple voltage ripple find mistake kindly let know always welcome valuble suggestion iam thankful saurabh nikam guide converter power conversion controlpower electronics controlcontrol,"['boost', 'converter', 'spl', 'feature', 'voltage', 'control', 'controller', 'boost', 'converter', 'converter', 'step', 'particular', 'voltage', 'desire', 'high', 'value', 'range', 'type', 'smps', 'two', 'switch', 'namely', 'ideal', 'switch', 'diode', 'along', 'etc', 'show', 'circuit', 'diagram', 'application', 'boost', 'converter', 'electric', 'hybrid', 'vehicle', 'ehv', 'light', 'etc', 'current', 'convert', 'converter', 'come', 'workinga', 'normal', 'boost', 'converter', 'need', 'external', 'pulse', 'give', 'produce', 'specify', 'duty', 'ratio', 'need', 'order', 'produce', 'pulsewhich', 'automatically', 'generate', 'pid', 'controller', 'even', 'inductor', 'current', 'observe', 'observe', 'exact', 'continous', 'current', 'mode', 'operation', 'delta', 'ripple', 'voltage', 'ripple', 'find', 'mistake', 'kindly', 'let', 'know', 'always', 'welcome', 'valuble', 'suggestion', 'iam', 'thankful', 'saurabh', 'nikam', 'guide', 'converter', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",4
884,42235,"This simulation is used for single phase Cascaded Dual -Buk Boost Inverter.<p>A new type of cascade inverters, cascade dual-buck inverter has been proposed recently In  newly proposed inverterinherits all the merits of cascade H-bridge inverter. Compared to cascade H-bridge inverter</p>simulation,simulink",342,13,3,0,368,single phase cascade dual buk boost inverter new type cascade inverter cascade dual buck inverter propose recently newly propose merit cascade bridge inverter compare cascade bridge,"['single', 'phase', 'cascade', 'dual', 'buk', 'boost', 'inverter', 'new', 'type', 'cascade', 'inverter', 'cascade', 'dual', 'buck', 'inverter', 'propose', 'recently', 'newly', 'propose', 'merit', 'cascade', 'bridge', 'inverter', 'compare', 'cascade', 'bridge']",3
885,42254,simulacion de circuitos rectificadores con Simulink<p>trabajo de laboratorio y  simulacion de circuitos rectificadores con Simulink</p>simulink,30,0,1,0,36,circuitos rectificadores con laboratorio circuitos rectificadores con,"['circuitos', 'rectificadores', 'con', 'laboratorio', 'circuitos', 'rectificadores', 'con']",2
886,42309,"Model and simulate a complicated ankle joint using Simulink and SimMechanics.<p>The Aldebaran Nao Ankle Kit lets users explore, design, and test behavior of this complex joint. The roll and pitch joints are controlled over a USB connection, enabling motor commands to be sent at high data rates (921.6 kbps), and motor encoder values to be returned back to Simulink.  You can use this system in teaching and research to explore the behavior of closed/open loop systems, review mechanical concepts, simulate systems, and much more.   The zipped folder contains two Simulink models.Model 1: Ankle in SimMechanigs 2G - R2012b\Tibia_gauche_leger.slxA simplified CAD model of NAO ankle was imported into Simulink. You can run this model without a real Nao ankle.- This simulation relies on an automatic import of a CAD model from SolidWorks. Double-click on the ""Left_Ankle_Kit"" subsystem for more information- This model leverages Simulink capabilities related to the design control systems. Two PIDs compute the needed torque to reach a given target position.- Each PID is tuned automatically using Simulink Control Design. Double-click a PID block and choose ""Tune..."" in the dialog box for more information.- Press Ctrl+D or choose ""Simulation/Update Diagram"" to visualize the system at rest- Run the simulation to visualize a moving ankleModel 2: nao_ankle_simulink_com.mdlSend the movement command to the real NAO ankle kit to see the movement. You need to have a NAO ankle (mechatronics version) to run this model. You also need to do the following setup:(1): Choose the compiler for MATLAB/Simulink by running ""mex âsetup"" at MATLAB command prompt. You can use the MATLAB built-in compiler for 32 bits MATLAB, otherwise you will need a compiler such as Visual Studio 2010.(2): Remember to reduce the latency of your serial port in the advanced settings of your COM port (Control Panel -&gt; Device Manager -&gt; Right-click the Serial Port used for Ankle Kit). </p>robotics,electric_motor_control,power_electronics_control,cad import,cad simulation,nao,nao ankle,pid tunning,robot,robotics,simulation,stateflow",118,10,3,0,113,complicate ankle joint simmechanics aldebaran nao ankle kit let user explore design test behavior complex joint roll pitch joint control usb connection enable motor command send high data rate kbps motor encoder value return back teach research explore behavior close open loop review mechanical concept much zip folder contains two ankle simmechanigs tibia gauche leger slxa simplify cad nao ankle import run without real nao ankle relies automatic import cad solidworks double click leave ankle kit subsystem information leverage capability related design control two pid compute need torque reach give target position pid tune automatically control design double click pid block choose tune dialog box information press ctrl choose update diagram visualize rest run visualize move anklemodel nao ankle com mdlsend movement command real nao ankle kit see movement need nao ankle mechatronics version run also need follow setup choose compiler run mex setup command prompt build compiler bit otherwise need compiler visual studio remember reduce latency serial port advance setting com port control panel device manager right click serial port ankle kit motor controlpower electronics controlcad importcad anklepid,"['complicate', 'ankle', 'joint', 'simmechanics', 'aldebaran', 'nao', 'ankle', 'kit', 'let', 'user', 'explore', 'design', 'test', 'behavior', 'complex', 'joint', 'roll', 'pitch', 'joint', 'control', 'usb', 'connection', 'enable', 'motor', 'command', 'send', 'high', 'data', 'rate', 'kbps', 'motor', 'encoder', 'value', 'return', 'back', 'teach', 'research', 'explore', 'behavior', 'close', 'open', 'loop', 'review', 'mechanical', 'concept', 'much', 'zip', 'folder', 'contains', 'two', 'ankle', 'simmechanigs', 'tibia', 'gauche', 'leger', 'slxa', 'simplify', 'cad', 'nao', 'ankle', 'import', 'run', 'without', 'real', 'nao', 'ankle', 'relies', 'automatic', 'import', 'cad', 'solidworks', 'double', 'click', 'leave', 'ankle', 'kit', 'subsystem', 'information', 'leverage', 'capability', 'related', 'design', 'control', 'two', 'pid', 'compute', 'need', 'torque', 'reach', 'give', 'target', 'position', 'pid', 'tune', 'automatically', 'control', 'design', 'double', 'click', 'pid', 'block', 'choose', 'tune', 'dialog', 'box', 'information', 'press', 'ctrl', 'choose', 'update', 'diagram', 'visualize', 'rest', 'run', 'visualize', 'move', 'anklemodel', 'nao', 'ankle', 'com', 'mdlsend', 'movement', 'command', 'real', 'nao', 'ankle', 'kit', 'see', 'movement', 'need', 'nao', 'ankle', 'mechatronics', 'version', 'run', 'also', 'need', 'follow', 'setup', 'choose', 'compiler', 'run', 'mex', 'setup', 'command', 'prompt', 'build', 'compiler', 'bit', 'otherwise', 'need', 'compiler', 'visual', 'studio', 'remember', 'reduce', 'latency', 'serial', 'port', 'advance', 'setting', 'com', 'port', 'control', 'panel', 'device', 'manager', 'right', 'click', 'serial', 'port', 'ankle', 'kit', 'motor', 'controlpower', 'electronics', 'controlcad', 'importcad', 'anklepid']",5
887,42425,"Application of ANN toolbox to ALFC<p>This is a two area system ALFC controller where the conventional PI controller has been replaced by an ANN controller. The ANN controller has proven itself to be better than the PI controller. The model is simple and represents the governor turbine generator and the power system respectively.</p>toolbox,alfc,ann,comparison between ann and pi controller,control system,electrical,pi,power system,simulation",220,18,4,0,250,application ann toolbox alfcthis two area alfc controller conventional controller replace ann controller ann controller proven well controller simple represent governor turbine generator power respectively ann,"['application', 'ann', 'toolbox', 'alfcthis', 'two', 'area', 'alfc', 'controller', 'conventional', 'controller', 'replace', 'ann', 'controller', 'ann', 'controller', 'proven', 'well', 'controller', 'simple', 'represent', 'governor', 'turbine', 'generator', 'power', 'respectively', 'ann']",4
888,42426,"Application of ANN toolbox to ALFC for a single area system<p>Application of ANN toolbox to ALFC for a single area system has been done in this simulation. Standard parameters have been selected to represent the governor, turbine, and generator coupled to the power system. An ANN controller has been trained as a PI controller, using the Neural network toolbox. - Transient dip has been reduced to half - Time required for stabilization has also been reduced to half.</p>toolbox,alfc,ann,automatic load frequency controller,control systems,electrical,performance analysis,pi,power systems,power systems",148,9,4,0,180,application ann toolbox alfc single area ann toolbox alfc single area standard parameter select represent governor turbine generator couple power ann controller train controller neural network toolbox transient dip reduce half time require stabilization also reduce half load frequency analysispipower systemspower,"['application', 'ann', 'toolbox', 'alfc', 'single', 'area', 'ann', 'toolbox', 'alfc', 'single', 'area', 'standard', 'parameter', 'select', 'represent', 'governor', 'turbine', 'generator', 'couple', 'power', 'ann', 'controller', 'train', 'controller', 'neural', 'network', 'toolbox', 'transient', 'dip', 'reduce', 'half', 'time', 'require', 'stabilization', 'also', 'reduce', 'half', 'load', 'frequency', 'analysispipower', 'systemspower']",4
889,42428,"The model easily explains the value of the various qunatities generally used in transformers<p>The behaviour of the voltages, currents and fluxes can be viewed and a relative understanding can be developed for the phasor diagrams.The phasor diagram has also been displayed for understanding.(taken from the transformer notes of NPTEL Madras).</p>phasor diagram understanding of transformer,phasor transformer,practical transformer on load,transformer,transformer understanding",9,0,1,0,6,easily explain value various qunatities generally transformersthe behaviour voltage current flux view relative understanding develop phasor diagram phasor diagram also display understand take transformer note nptel madras phasor diagram understand transformer understanding,"['easily', 'explain', 'value', 'various', 'qunatities', 'generally', 'transformersthe', 'behaviour', 'voltage', 'current', 'flux', 'view', 'relative', 'understanding', 'develop', 'phasor', 'diagram', 'phasor', 'diagram', 'also', 'display', 'understand', 'take', 'transformer', 'note', 'nptel', 'madras', 'phasor', 'diagram', 'understand', 'transformer', 'understanding']",5
890,42502,"A step down chopper operates similar to a transformer in ac circuits.<p>The operation of this can be judged by varying the duty cycle, i.e. by changing the duration for which GTO is switched ON.Hence, by making Pulse Width of the Pulse Gen. 10%.O/P Vol. = (.1) * (I/P Vol.)Similarly for Pulse Width 20%O/P Vol. = (.2) * (I/P Vol.)&amp; so on the Output Voltage can be Stepped Down.</p>chopper,dc,dc converter,dc to dc converter,power electronics,step down chopper",10,0,1,0,10,step chopper operate similar transformer circuit operation judge vary duty cycle change duration gto switch hence make pulse width pulse gen vol vol similarly pulse width vol vol amp output voltage step chopperdcdc converterdc converterpower electronicsstep chopper,"['step', 'chopper', 'operate', 'similar', 'transformer', 'circuit', 'operation', 'judge', 'vary', 'duty', 'cycle', 'change', 'duration', 'gto', 'switch', 'hence', 'make', 'pulse', 'width', 'pulse', 'gen', 'vol', 'vol', 'similarly', 'pulse', 'width', 'vol', 'vol', 'amp', 'output', 'voltage', 'step', 'chopperdcdc', 'converterdc', 'converterpower', 'electronicsstep', 'chopper']",4
891,42517,"Simple model for understanding FOR iterator<p>I have a simulink model which does the following:In1 input would take in a vector of 3 element input (this will be time varying but for initial development/testing purposes I have used a constant [1 3 6]) and In2 is a constant matrix of 6x3 size whose value isX =     1     4     6     1     4     5     1     3     6     0     0     0     2     3     5     3     5     7The simulink model should output the corresponding index (1 based index) of [1 3 6] in X (which should be 3).When I simulate this model I am able to see value '3' at every loop (10 ms loop) with a scope inside the FOR subsystem (@ Scope3 in the model). But when I  scope this output outside the FOR subsystem (@ Scope in the model), it always displays '0' and never equal to '3'. I am not able understand this behavior.Please help!</p>simulink for iterator",18,1,2,0,17,simple understand iteratori following input would take vector element input time vary initial development testing purpose constant constant matrix size whose value isx output correspond index base index able see value every loop loop scope inside subsystem scope scope output outside subsystem scope always display never equal able understand behavior please help iterator,"['simple', 'understand', 'iteratori', 'following', 'input', 'would', 'take', 'vector', 'element', 'input', 'time', 'vary', 'initial', 'development', 'testing', 'purpose', 'constant', 'constant', 'matrix', 'size', 'whose', 'value', 'isx', 'output', 'correspond', 'index', 'base', 'index', 'able', 'see', 'value', 'every', 'loop', 'loop', 'scope', 'inside', 'subsystem', 'scope', 'scope', 'output', 'outside', 'subsystem', 'scope', 'always', 'display', 'never', 'equal', 'able', 'understand', 'behavior', 'please', 'help', 'iterator']",0
892,42607,"Twenty five level DC to AC converter using sub multilevel cells.<p>It is the simulation of new multilevel inverter (published in ELSEVIER journal) topology sub multilevel cells.This technique helps to reduce the number of power switches used in the power circuit without compensating the levels. </p>simulation,simulink,power_conversion_control,power_electronics_control",25,0,1,0,33,twenty five level converter sub multilevel cell new multilevel inverter publish elsevier journal topology sub multilevel cell technique help reduce number power switch power circuit without compensate level conversion controlpower electronics control,"['twenty', 'five', 'level', 'converter', 'sub', 'multilevel', 'cell', 'new', 'multilevel', 'inverter', 'publish', 'elsevier', 'journal', 'topology', 'sub', 'multilevel', 'cell', 'technique', 'help', 'reduce', 'number', 'power', 'switch', 'power', 'circuit', 'without', 'compensate', 'level', 'conversion', 'controlpower', 'electronics', 'control']",3
893,42627,"Working model of Shunt Active Power Filter<p>Shunt Active Power Filter model based on 400volts 3 phase 3 wire system. Load is 3 phase full wave rectifier. THD reduced by SAPF to 4.45% from 30.56%.</p>ahf,apf,pq theory,sapf,coordination tcsc and svc,tcsc and svc",131,6,3,0,192,work shunt active power filtershunt active power filter base volt phase wire load phase full wave rectifier thd reduce sapf ahfapfpq tcsc svctcsc svc,"['work', 'shunt', 'active', 'power', 'filtershunt', 'active', 'power', 'filter', 'base', 'volt', 'phase', 'wire', 'load', 'phase', 'full', 'wave', 'rectifier', 'thd', 'reduce', 'sapf', 'ahfapfpq', 'tcsc', 'svctcsc', 'svc']",4
894,42655,"Solar panel conneted with motor<p>Solar enery is used to run the asynchronous machine,with the help of boost converter and inverter</p>electric_motor_control,power_electronics_control,waveform",153,6,4,0,167,solar panel conneted motorsolar enery run asynchronous machinewith help boost converter motor controlpower electronics controlwaveform,"['solar', 'panel', 'conneted', 'motorsolar', 'enery', 'run', 'asynchronous', 'machinewith', 'help', 'boost', 'converter', 'motor', 'controlpower', 'electronics', 'controlwaveform']",3
895,42666,"This simulator models the translational and rotational dynamics of a quadrotor. <p>The following things are modelled:- Quadrotor dynamics- Motor dynamics- Kalman filter for state estimation- Simple sensor model/ ADC conversionThe following are not modelled:- Propeller dynamics- Control laws- Power subsystemThis sim can be used for:- System feasibility studies- System performance assessment and trade-offs- Control law performance evaluationI am sorry but I do not entertain emails regarding any type of support. Details about Quadrotor dynamics can be found in this paper:<a href=""http://e-collection.library.ethz.ch/eserv/eth:7848/eth-7848-01.pdfMy"">http://e-collection.library.ethz.ch/eserv/eth:7848/eth-7848-01.pdfMy</a> Linkedin page is:<a href=""https://www.linkedin.com/in/dr-balaji-kumar-p-eng-3507b713My"">https://www.linkedin.com/in/dr-balaji-kumar-p-eng-3507b713My</a> Personal website:<a href=""http://www.interstellargalactic.comImportant"">www.interstellargalactic.comImportant</a> - Please run KF_setp.m to initialize Kalman Filter variables.Do not forget to declare system input variables and initial conditions once you are in the sim. Motor variables have to be declared by opening the ""Motor Dynamics"" block mask.</p>electric_motor_control,power_electronics_control,autonomous flight,drones,dynamics,imu,kalman filter,model based design,modelling,multirotor,quadrocopter,quadrotor,uav",483,45,6,0,650,translational rotational dynamic quadrotor follow thing quadrotor dynamic motor dynamic kalman filter state estimation simple sensor adc conversionthe follow propeller dynamic control law power subsystemthis sim feasibility study performance assessment trade offs control law performance evaluationi sorry entertain email regard type support detail quadrotor dynamic find paper http collection ethz eserv eth eth pdfmy linkedin page linkedin com balaji kumar eng personal website comimportant please run setp initialize kalman filter variable forget declare input variable initial condition sim motor variable declare open motor dynamic block mask electric motor controlpower electronics filtermodel base,"['translational', 'rotational', 'dynamic', 'quadrotor', 'follow', 'thing', 'quadrotor', 'dynamic', 'motor', 'dynamic', 'kalman', 'filter', 'state', 'estimation', 'simple', 'sensor', 'adc', 'conversionthe', 'follow', 'propeller', 'dynamic', 'control', 'law', 'power', 'subsystemthis', 'sim', 'feasibility', 'study', 'performance', 'assessment', 'trade', 'offs', 'control', 'law', 'performance', 'evaluationi', 'sorry', 'entertain', 'email', 'regard', 'type', 'support', 'detail', 'quadrotor', 'dynamic', 'find', 'paper', 'http', 'collection', 'ethz', 'eserv', 'eth', 'eth', 'pdfmy', 'linkedin', 'page', 'linkedin', 'com', 'balaji', 'kumar', 'eng', 'personal', 'website', 'comimportant', 'please', 'run', 'setp', 'initialize', 'kalman', 'filter', 'variable', 'forget', 'declare', 'input', 'variable', 'initial', 'condition', 'sim', 'motor', 'variable', 'declare', 'open', 'motor', 'dynamic', 'block', 'mask', 'electric', 'motor', 'controlpower', 'electronics', 'filtermodel', 'base']",4
896,42693,"Step-up converte<p>To step - up the DC voltage.boost converter is used,by changeing the switching frequency and inductor value,we can step up the voltage. </p>simulink,power_conversion_control,power_electronics_control,simulink",12,0,1,0,14,step converteto step voltage boost converter usedby change switch frequency inductor valuewe step voltage conversion controlpower electronics,"['step', 'converteto', 'step', 'voltage', 'boost', 'converter', 'usedby', 'change', 'switch', 'frequency', 'inductor', 'valuewe', 'step', 'voltage', 'conversion', 'controlpower', 'electronics']",1
897,42694,"Step-down converter<p>To step-down dc voltage,this type of converter are used.output waveform are shown.</p>power_conversion_control,power_electronics_control,simulatiom",13,0,1,0,15,step converterto step voltagethis type converter output waveform show power conversion controlpower electronics,"['step', 'converterto', 'step', 'voltagethis', 'type', 'converter', 'output', 'waveform', 'show', 'power', 'conversion', 'controlpower', 'electronics']",1
898,42725,"Boost converter output is controlled by pi controller<p>To step up the dc voltage boost converter is used.in this model the output voltage is controlled by PI controller.</p>power_conversion_control,power_electronics_control,simulink,simulink",16,0,1,0,19,boost converter output control controllerto step voltage boost converter output voltage control controller power conversion controlpower electronics,"['boost', 'converter', 'output', 'control', 'controllerto', 'step', 'voltage', 'boost', 'converter', 'output', 'voltage', 'control', 'controller', 'power', 'conversion', 'controlpower', 'electronics']",6
899,42753,"Shunt Active Power Filter based on pq Theory.<p>Shunt Active Power Filter based on pq Theory. 40volts 3phase system and 60 ohms 3 phase full-wave rectifier load.THDi improved from 29.56% to 1.67%.</p>ahf,apf,clark transform,harmonic distortion,harmonic filter,power filter,pq theory application,sapf,thd,shunt active power",133,6,3,0,192,shunt active power filter base theory shunt active power filter base theory volt phase ohms phase full wave rectifier load thdi improve ahfapfclark filterpower filterpq theory active power,"['shunt', 'active', 'power', 'filter', 'base', 'theory', 'shunt', 'active', 'power', 'filter', 'base', 'theory', 'volt', 'phase', 'ohms', 'phase', 'full', 'wave', 'rectifier', 'load', 'thdi', 'improve', 'ahfapfclark', 'filterpower', 'filterpq', 'theory', 'active', 'power']",3
900,42755,"Clarke's Transformation Block<p>Clarke's Transformation widely used in inverter and active harmonic filter design. And an integral part to understand Hirofumi Akagi's 'pq Theory'.</p>electric_motor_control,power_electronics_control,apf,clarke transform,clarkes transformation,pq theory",19,0,1,0,24,clarke transformation blockclarke transformation widely inverter active harmonic filter design integral part understand hirofumi akagi theory electric motor controlpower electronics theory,"['clarke', 'transformation', 'blockclarke', 'transformation', 'widely', 'inverter', 'active', 'harmonic', 'filter', 'design', 'integral', 'part', 'understand', 'hirofumi', 'akagi', 'theory', 'electric', 'motor', 'controlpower', 'electronics', 'theory']",3
901,42757,"Hysteresis Based Current Controller<p>Hysteresis Current Controller used to make current controlled inverters, used in active harmonic filters.</p>apf,current controller,hysteresis,hysteresis current controller,inverter",15,0,1,0,23,hysteresis base current current controller make current control inverter active harmonic filter apfcurrent current,"['hysteresis', 'base', 'current', 'current', 'controller', 'make', 'current', 'control', 'inverter', 'active', 'harmonic', 'filter', 'apfcurrent', 'current']",3
902,42758,"Files used in webinar Data-driven Control conducted on 12 July 2012<p>Files used in webinar Data-driven Control: How to Design a Controller When a Plant Model is Not Available on 12 July 2012Through this webinar and product demonstrations, you will learn how to design and implement a PID controller when a plant model is not available. Through a DC motor control example, you will learn how to:- Apply input signals (voltage) to the motor and collect output (angular position) test data- Identify and validate linear and nonlinear plant models using multiple data sets- Design a linear controller based on the linear motor model and simulate its performance against the nonlinear model- Implement and test the controller on a target hardware platform</p>automotive,control design,demo,simulink,system identification,electric_motor_control,power_conversion_control,power_electronics_control",121,20,4,10,97,file webinar data drive control conduct july file webinar data drive control design controller plant available july webinar product demonstration learn design implement pid controller plant available motor control example learn apply input signal voltage motor collect output angular position test data identify validate linear nonlinear plant multiple data set design linear controller base linear motor performance nonlinear implement test controller target hardware motor controlpower conversion controlpower electronics control,"['file', 'webinar', 'data', 'drive', 'control', 'conduct', 'july', 'file', 'webinar', 'data', 'drive', 'control', 'design', 'controller', 'plant', 'available', 'july', 'webinar', 'product', 'demonstration', 'learn', 'design', 'implement', 'pid', 'controller', 'plant', 'available', 'motor', 'control', 'example', 'learn', 'apply', 'input', 'signal', 'voltage', 'motor', 'collect', 'output', 'angular', 'position', 'test', 'data', 'identify', 'validate', 'linear', 'nonlinear', 'plant', 'multiple', 'data', 'set', 'design', 'linear', 'controller', 'base', 'linear', 'motor', 'performance', 'nonlinear', 'implement', 'test', 'controller', 'target', 'hardware', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
903,42786,"Control design for Field Survey Mobile Robot using lead-lag compensation, PID and Fuzzy Logic<p>Â Steps to use:Step 1: Set path to the folder including project filesStep 2: load Project_Workspace.matStep 3: Run Mobile_Robot_Simulation.mStep 4: Open Main_Simulation.mdl in Simulink and customize simulation time, inputs, fuzzy-logic rules, etc..Step 5: Run Main_Simulation.mdlStep 6: Run Simulation_Plots.m Design and Simulation of Control Systems for a Field Survey Mobile Robot Platform using lead-lag compensation, PID and Fuzzy Logic To customize this code you need to: 1- Change the values of DC motor constants  2- Change the zeros of lead-lag compensation 3- Change the gains of PID controller 4- Change the rules of Fuzzy logic controller==========================================================================++++++++++++++++++++++++++++++++++   July.29.2012, Ramin Shamshiri +   <a href=""mailto:ramin.sh@ufl.edu"">ramin.sh@ufl.edu</a>              +   Dept of Ag &amp; Bio Eng          +   University of Florida         +   Gainesville, Florida          +++++++++++++++++++++++++++++++++++</p>dc motors,leadlag compensation,mobile robot,pid and fuzzy logic,electric_motor_control,power_conversion_control,power_electronics_control",38,0,1,0,50,control design field survey mobile robot lead lag compensation pid fuzzy logic step step set path folder include project filesstep load project workspace matstep run mobile robot mstep open main mdl customize time input fuzzy logic rule etc step run main mdlstep run plot design control field survey mobile robot platform lead lag compensation pid fuzzy logic customize code need change value motor constant change zeros lead lag compensation change gain pid controller change rule fuzzy logic controller july ramin shamshiri ramin ufl edu dept amp bio eng university florida gainesville florida motorsleadlag robotpid fuzzy logicelectric motor controlpower conversion controlpower electronics control,"['control', 'design', 'field', 'survey', 'mobile', 'robot', 'lead', 'lag', 'compensation', 'pid', 'fuzzy', 'logic', 'step', 'step', 'set', 'path', 'folder', 'include', 'project', 'filesstep', 'load', 'project', 'workspace', 'matstep', 'run', 'mobile', 'robot', 'mstep', 'open', 'main', 'mdl', 'customize', 'time', 'input', 'fuzzy', 'logic', 'rule', 'etc', 'step', 'run', 'main', 'mdlstep', 'run', 'plot', 'design', 'control', 'field', 'survey', 'mobile', 'robot', 'platform', 'lead', 'lag', 'compensation', 'pid', 'fuzzy', 'logic', 'customize', 'code', 'need', 'change', 'value', 'motor', 'constant', 'change', 'zeros', 'lead', 'lag', 'compensation', 'change', 'gain', 'pid', 'controller', 'change', 'rule', 'fuzzy', 'logic', 'controller', 'july', 'ramin', 'shamshiri', 'ramin', 'ufl', 'edu', 'dept', 'amp', 'bio', 'eng', 'university', 'florida', 'gainesville', 'florida', 'motorsleadlag', 'robotpid', 'fuzzy', 'logicelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
904,42792,"This shows the pulse patten of a multilevel inverter with low switches.<p>Inverter using MOSFET for multilevel inverter. This shows the pulse patten of a multilevel inverter with low switches.</p>inverter,lowswitch,multilevelinverter,powerelectronics",34,0,1,0,40,show pulse patten multilevel inverter low switch inverter mosfet multilevel inverter show pulse patten multilevel inverter low switch,"['show', 'pulse', 'patten', 'multilevel', 'inverter', 'low', 'switch', 'inverter', 'mosfet', 'multilevel', 'inverter', 'show', 'pulse', 'patten', 'multilevel', 'inverter', 'low', 'switch']",3
905,42817,"Anyone help me the Cognitive Radio model. I do not show the waveform in Spectrum Scope and Workspace<p>Anyone help me the Cognitive Radio model. I do not show the waveform in Spectrum Scope and Workspace. please let me know how i get wave shape.</p>communications,signal processing,simulink",44,5,2,0,38,anyone help cognitive radio show waveform spectrum scope workspaceanyone help cognitive radio show waveform spectrum scope workspace please let know get wave shape,"['anyone', 'help', 'cognitive', 'radio', 'show', 'waveform', 'spectrum', 'scope', 'workspaceanyone', 'help', 'cognitive', 'radio', 'show', 'waveform', 'spectrum', 'scope', 'workspace', 'please', 'let', 'know', 'get', 'wave', 'shape']",0
906,42828,"It provides Low voltage conversion ratio, isolation, good regulation with fast dynamic response.<p>Three phase high frequency isolated DC-DC converter (published in ELSEVIER)is simulated under symmetrical open loop control. It provides Low voltage conversion ratio, isolation, good regulation with fast dynamic response.</p>simulation,simulink,power_conversion_control,power_electronics_control",45,1,2,0,43,provide low voltage conversion ratio isolation good regulation fast dynamic response three phase high frequency isolate converter publish elsevier symmetrical open loop control provide low voltage conversion ratio isolation good regulation fast dynamic response conversion controlpower electronics control,"['provide', 'low', 'voltage', 'conversion', 'ratio', 'isolation', 'good', 'regulation', 'fast', 'dynamic', 'response', 'three', 'phase', 'high', 'frequency', 'isolate', 'converter', 'publish', 'elsevier', 'symmetrical', 'open', 'loop', 'control', 'provide', 'low', 'voltage', 'conversion', 'ratio', 'isolation', 'good', 'regulation', 'fast', 'dynamic', 'response', 'conversion', 'controlpower', 'electronics', 'control']",3
907,42835,"Organize a student competition using Lego MINDSTORMS NXT Robot with MATLAB and Simulink.<p>On Mar 15, 2013 MathWorks UK held a student competition that had teams come together and perform a set of 4 tasks leading to a final competition that had Lego MINDSTORMS NXT robot navigate a set of waypoints as quickly as possible.This File Exchange Submission collects the set of 4 preliminary tasks along with sample models that anyone can explore and learn how the Simulink Support Package for Lego MINDSTORMS NXT Hardware works.The tasks are:Task 1: Spin your robot in place â both in simulation and on the robot itself.  Compare results to see if they match.Task 2: Explore and try a simulation of the robot on the floor with sample target waypoints, change controller parameters to see changes in behavior.  Compare results.Task 3: Run the same algorithm from previous task on the real robot, logging real time histories.  Compare to previous simulation.Task 4: Design and simulate your algorithm for an arbitrary set of waypoints, explore algorithms to find the shortest distance between points.This example uses this Simulink Support Package for LEGO MINDSTORMS NXT Hardware:<a href=""http://www.mathworks.com/hardware-support/lego-mindstorms-simulink.htmlLearn"">http://www.mathworks.com/hardware-support/lego-mindstorms-simulink.htmlLearn</a> more about running Simulink models on target hardware here:<a href=""http://www.mathworks.com/discovery/simulink-embedded-hardware.html"">http://www.mathworks.com/discovery/simulink-embedded-hardware.html</a> </p>robotics,lego mindstorms,nxt robot,obstacle avoidance,path planning,robot navigation,robotics,student competition",492,21,3,0,559,organize student competition lego mindstorms nxt robot mar mathworks hold student competition team come together perform set task lead final competition lego mindstorms nxt robot navigate set waypoints quickly possible file exchange submission collect set preliminary task along sample anyone explore learn support package lego mindstorms nxt hardware work task task spin robot place robot compare result see match task explore try robot floor sample target waypoints change controller parameter see change behavior compare result task run algorithm previous task real robot log real time history compare previous task design algorithm arbitrary set waypoints explore algorithms find short distance point example support package lego mindstorms nxt hardware http mathworks com hardware support lego mindstorms htmllearn run target hardware http mathworks com discovery embed hardware html roboticslego mindstormsnxt robotobstacle avoidancepath planningrobot competition,"['organize', 'student', 'competition', 'lego', 'mindstorms', 'nxt', 'robot', 'mar', 'mathworks', 'hold', 'student', 'competition', 'team', 'come', 'together', 'perform', 'set', 'task', 'lead', 'final', 'competition', 'lego', 'mindstorms', 'nxt', 'robot', 'navigate', 'set', 'waypoints', 'quickly', 'possible', 'file', 'exchange', 'submission', 'collect', 'set', 'preliminary', 'task', 'along', 'sample', 'anyone', 'explore', 'learn', 'support', 'package', 'lego', 'mindstorms', 'nxt', 'hardware', 'work', 'task', 'task', 'spin', 'robot', 'place', 'robot', 'compare', 'result', 'see', 'match', 'task', 'explore', 'try', 'robot', 'floor', 'sample', 'target', 'waypoints', 'change', 'controller', 'parameter', 'see', 'change', 'behavior', 'compare', 'result', 'task', 'run', 'algorithm', 'previous', 'task', 'real', 'robot', 'log', 'real', 'time', 'history', 'compare', 'previous', 'task', 'design', 'algorithm', 'arbitrary', 'set', 'waypoints', 'explore', 'algorithms', 'find', 'short', 'distance', 'point', 'example', 'support', 'package', 'lego', 'mindstorms', 'nxt', 'hardware', 'http', 'mathworks', 'com', 'hardware', 'support', 'lego', 'mindstorms', 'htmllearn', 'run', 'target', 'hardware', 'http', 'mathworks', 'com', 'discovery', 'embed', 'hardware', 'html', 'roboticslego', 'mindstormsnxt', 'robotobstacle', 'avoidancepath', 'planningrobot', 'competition']",0
908,42850,"AC to AC converter with unity transfer ratio<p>It is the simulation of the Indirect Matrix Converter with unity voltage transfer ratio(published in ELSEVIER). It provides better input power factor, sinusoidal input/ output currents and allows bidirectional power flow</p>simulation,simulink,power_conversion_control,power_electronics_control",54,1,2,0,76,converter unity transfer ratioit indirect matrix converter unity voltage transfer ratio publish elsevier provide well input power factor sinusoidal input output current allow bidirectional power conversion controlpower electronics control,"['converter', 'unity', 'transfer', 'ratioit', 'indirect', 'matrix', 'converter', 'unity', 'voltage', 'transfer', 'ratio', 'publish', 'elsevier', 'provide', 'well', 'input', 'power', 'factor', 'sinusoidal', 'input', 'output', 'current', 'allow', 'bidirectional', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
909,42875,"Easy event-driven motion control for education with GUI based parameter, syntax and dead end check<p>Design, simulation, Real-Time Code Generation and Documentation of event-driven systems - especially in the fields of mechatronics, mechanical and electrical engineering - by means of Hybrid Function Charts. For an overview please see:<a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7e.htmYou"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7e.htmYou</a> may use operating systems Windows as well as HP-Unix. ""Preset"" 64 bit windowsdynamic link libraries (mexw64) may be substituted via 32 bit windows (mexw32), orprior version (dll) or HP-UNIX (mexhpux). You may also generate your own dynamic link libraries for other operating systems. This SIMULINK add-on block library Function Chart offers a reasonable tool for realization of event-state-nets, which is close to the German guideline VDI /VDE 3684 ""Description of event-driven motion processes by function charts"" [Beuth publishers Berlin]. You can graphical programme without a special function chart window, without compiler run in case of simulations and without special function chart coder software in case of real-time code generation. The library allows separate motion error handling sequences, separated from normal motion sequences without loss of a well-ordered graphical arrangement. This is also true for transmission of variables from function charts to drives as well as for display of active states.For a summary of essential features please see:    <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_2e.htmFirst"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_2e.htmFirst</a> of all please scrutinize examples in directory ""BeiV32_TBBS"" necessarily.Programming special projects please pay attention to correct use of syntax:            <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_6e.htm#PM2"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_6e.htm#PM2</a> and parametrization:   <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_6e.htm#PM1.This"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_6e.htm#PM1.This</a> applies especially to the input of same Function Chart numbers (FN) but different state numbers (BN) for all state blocks, such as blocks ZA, ZX, ZE and ZF, within &gt;&gt;&gt;one&lt;&lt;&lt; Function Chart. Please note several Function Charts may be definedinside of one project. For examples please see:    <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_5e.htmFor"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_5e.htmFor</a> a summary of application hints please see:    <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_4e.htmBlock"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_4e.htmBlock</a> helps are available at:    <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_3e.htmSupplementary"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_3e.htmSupplementary</a> toolbox ""Function Chart Check"" is available in directory ""SyntaxV31""for check of syntax, FN (Function Chart number) and BN (state number), use of variables, use of selected blocks, potential dead ends or right construction of loops. Addition of the corresponding directory ""SyntaxV31"" to MATLAB search path and following call of ""FupCheck""at MATLAB prompt opens a GUI window with several check buttons. Alternatively to these GUI windows 4 script files with same functionality are available [TEST_PARA (parameter check), TEST_SACK (dead end check), TEST_SYNT (syntax check), TEST_WEIT (loop check)]. These four script files correspond to four GUI sub windows of FupCheck. Directory ""BeiV31_TBFe"" contains some examples with designed errors within function charts in order to get familiar with this test toolbox. For more detailed explanations please see:    <a href=""http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_6e.htmAttention"">http://eeiwzg.et.tu-dresden.de/ae2_files/ae_7_6e.htmAttention</a> should be paid to some essential preconditions given there and importent for theapplication of this check tools.Please also note: Version 3.2 supplementary toolbox ""Function Chart Check"" may be applied only to mdl-files, but not to slx-files.Directory ""QuellenV32"" provides with source files for dynamic link libraries in order to enable generation of dynamic link libraries for other operating systems,such as LINUX, or for generation of real time code assuming availability of anyC compiler for target hardware.Preliminary remark before use - dear potential user,originally this ZIP file would contain a ready for use FunctionChart block library,but &gt;&gt;&gt;THIS&lt;&lt;&lt; ZIP file version doesn't contain any dynamic link library, i.e. neithermexw64 nor mexw32, dll or mexhpux. Reason may be learnt from following e-mailafter having prepared a first submission of this Simulink add-on block library:-----------------------------------------------... thank you for participating in the MATLAB Central Community.  I have reviewed your submission to File Exchange and noticed it contains .DLL and .MEX files. Since it's important for others to be able to inspect and learn from your code, we do not publish any executable files (EXE, DLL, P- code, MEX, etc.).  Please consider resubmitting your contribution without the .DLL and .MEX files.... MATLAB Central Administrator, MathWorks -----------------------------------------------Thus you cannot directly download and test.  Please look at âReadMe_DynamicLinkLibraries_MCFE.txtâ for workarounds.Sorry for needless effort, but according e-mail above such intermediate step isn't avoidable.</p>dead end,electric drive,eventdriven,gui,modeling,motion control,realtime code,simulation,simulink,state,syntax",4058,1490,7,1412,3737,easy event drive motion control education gui base parameter syntax dead end checkdesign real time code generation documentation event drive especially field mechatronics mechanical electrical engineering mean hybrid function chart overview please see http eeiwzg dresden file htmyou may operate windows well unix preset bit windowsdynamic link mexw may substitute via bit window mexw orprior version dll unix mexhpux may also generate dynamic link operate add block function chart offer reasonable tool realization event state net close german guideline vdi vde description event drive motion process function chart beuth publisher berlin graphical programme without special function chart window without compiler run case without special function chart coder software case real time code generation allow separate motion error handle sequence separate normal motion sequence without loss well ordered graphical arrangement also true transmission variable function chart drive well display active state summary essential feature please see http eeiwzg dresden file htmfirst please scrutinize example directory beiv tbbs necessarily program special project please pay attention correct syntax http eeiwzg dresden file htm parametrization http eeiwzg dresden file htm applies especially input function chart number different state number state block block within one function chart please note several function chart may definedinside one project examples please see http eeiwzg dresden file htmfor summary application hint please see http eeiwzg dresden file htmblock help available http eeiwzg dresden file toolbox function chart check available directory syntaxv check syntax function chart number state number variable select block potential dead end right construction loop addition correspond directory syntaxv search path follow call fupcheck prompt open gui window several check button alternatively gui window script file functionality available test para parameter check test sack dead end check test synt syntax check test weit loop check four script file correspond four gui sub windows fupcheck directory beiv tbfe contain example design error within function chart order get familiar test toolbox detail explanation please see http eeiwzg dresden file htmattention pay essential precondition give importent theapplication check tool please also note version supplementary toolbox function chart check may apply mdl file slx file directory quellenv provide source file dynamic link order enable generation dynamic link operate systemssuch linux generation real time code assume availability anyc compiler target hardware preliminary remark dear potential useroriginally zip file would contain ready functionchart block librarybut zip file version contain dynamic link neithermexw mexw dll mexhpux reason may learn follow mailafter prepare first submission add block thank participate central community review submission file exchange notice contains dll mex file since important others able inspect learn code publish executable file exe dll code mex etc please consider resubmitting contribution without dll mex file central administrator mathworks thus directly download test please look readme mcfe txt workarounds sorry needless effort accord mail intermediate step avoidable dead endelectric controlrealtime,"['easy', 'event', 'drive', 'motion', 'control', 'education', 'gui', 'base', 'parameter', 'syntax', 'dead', 'end', 'checkdesign', 'real', 'time', 'code', 'generation', 'documentation', 'event', 'drive', 'especially', 'field', 'mechatronics', 'mechanical', 'electrical', 'engineering', 'mean', 'hybrid', 'function', 'chart', 'overview', 'please', 'see', 'http', 'eeiwzg', 'dresden', 'file', 'htmyou', 'may', 'operate', 'windows', 'well', 'unix', 'preset', 'bit', 'windowsdynamic', 'link', 'mexw', 'may', 'substitute', 'via', 'bit', 'window', 'mexw', 'orprior', 'version', 'dll', 'unix', 'mexhpux', 'may', 'also', 'generate', 'dynamic', 'link', 'operate', 'add', 'block', 'function', 'chart', 'offer', 'reasonable', 'tool', 'realization', 'event', 'state', 'net', 'close', 'german', 'guideline', 'vdi', 'vde', 'description', 'event', 'drive', 'motion', 'process', 'function', 'chart', 'beuth', 'publisher', 'berlin', 'graphical', 'programme', 'without', 'special', 'function', 'chart', 'window', 'without', 'compiler', 'run', 'case', 'without', 'special', 'function', 'chart', 'coder', 'software', 'case', 'real', 'time', 'code', 'generation', 'allow', 'separate', 'motion', 'error', 'handle', 'sequence', 'separate', 'normal', 'motion', 'sequence', 'without', 'loss', 'well', 'ordered', 'graphical', 'arrangement', 'also', 'true', 'transmission', 'variable', 'function', 'chart', 'drive', 'well', 'display', 'active', 'state', 'summary', 'essential', 'feature', 'please', 'see', 'http', 'eeiwzg', 'dresden', 'file', 'htmfirst', 'please', 'scrutinize', 'example', 'directory', 'beiv', 'tbbs', 'necessarily', 'program', 'special', 'project', 'please', 'pay', 'attention', 'correct', 'syntax', 'http', 'eeiwzg', 'dresden', 'file', 'htm', 'parametrization', 'http', 'eeiwzg', 'dresden', 'file', 'htm', 'applies', 'especially', 'input', 'function', 'chart', 'number', 'different', 'state', 'number', 'state', 'block', 'block', 'within', 'one', 'function', 'chart', 'please', 'note', 'several', 'function', 'chart', 'may', 'definedinside', 'one', 'project', 'examples', 'please', 'see', 'http', 'eeiwzg', 'dresden', 'file', 'htmfor', 'summary', 'application', 'hint', 'please', 'see', 'http', 'eeiwzg', 'dresden', 'file', 'htmblock', 'help', 'available', 'http', 'eeiwzg', 'dresden', 'file', 'toolbox', 'function', 'chart', 'check', 'available', 'directory', 'syntaxv', 'check', 'syntax', 'function', 'chart', 'number', 'state', 'number', 'variable', 'select', 'block', 'potential', 'dead', 'end', 'right', 'construction', 'loop', 'addition', 'correspond', 'directory', 'syntaxv', 'search', 'path', 'follow', 'call', 'fupcheck', 'prompt', 'open', 'gui', 'window', 'several', 'check', 'button', 'alternatively', 'gui', 'window', 'script', 'file', 'functionality', 'available', 'test', 'para', 'parameter', 'check', 'test', 'sack', 'dead', 'end', 'check', 'test', 'synt', 'syntax', 'check', 'test', 'weit', 'loop', 'check', 'four', 'script', 'file', 'correspond', 'four', 'gui', 'sub', 'windows', 'fupcheck', 'directory', 'beiv', 'tbfe', 'contain', 'example', 'design', 'error', 'within', 'function', 'chart', 'order', 'get', 'familiar', 'test', 'toolbox', 'detail', 'explanation', 'please', 'see', 'http', 'eeiwzg', 'dresden', 'file', 'htmattention', 'pay', 'essential', 'precondition', 'give', 'importent', 'theapplication', 'check', 'tool', 'please', 'also', 'note', 'version', 'supplementary', 'toolbox', 'function', 'chart', 'check', 'may', 'apply', 'mdl', 'file', 'slx', 'file', 'directory', 'quellenv', 'provide', 'source', 'file', 'dynamic', 'link', 'order', 'enable', 'generation', 'dynamic', 'link', 'operate', 'systemssuch', 'linux', 'generation', 'real', 'time', 'code', 'assume', 'availability', 'anyc', 'compiler', 'target', 'hardware', 'preliminary', 'remark', 'dear', 'potential', 'useroriginally', 'zip', 'file', 'would', 'contain', 'ready', 'functionchart', 'block', 'librarybut', 'zip', 'file', 'version', 'contain', 'dynamic', 'link', 'neithermexw', 'mexw', 'dll', 'mexhpux', 'reason', 'may', 'learn', 'follow', 'mailafter', 'prepare', 'first', 'submission', 'add', 'block', 'thank', 'participate', 'central', 'community', 'review', 'submission', 'file', 'exchange', 'notice', 'contains', 'dll', 'mex', 'file', 'since', 'important', 'others', 'able', 'inspect', 'learn', 'code', 'publish', 'executable', 'file', 'exe', 'dll', 'code', 'mex', 'etc', 'please', 'consider', 'resubmitting', 'contribution', 'without', 'dll', 'mex', 'file', 'central', 'administrator', 'mathworks', 'thus', 'directly', 'download', 'test', 'please', 'look', 'readme', 'mcfe', 'txt', 'workarounds', 'sorry', 'needless', 'effort', 'accord', 'mail', 'intermediate', 'step', 'avoidable', 'dead', 'endelectric', 'controlrealtime']",0
910,42894,"I have trouble looping a subsystem and displaying the output.<p>I need to iterate the for-loop subsystem 24 times. For each iteration, the output result will then be then be the input for the next iteration and the result for each iteration should be displayed. I have trouble doing this as I am a mechanical major and not experienced with Simulink. ANY help will be appreciated. Thanks :)</p>simulink",99,10,5,0,88,trouble loop subsystem display output need iterate loop subsystem time iteration output result input next iteration result iteration display trouble mechanical major experience help appreciate thanks,"['trouble', 'loop', 'subsystem', 'display', 'output', 'need', 'iterate', 'loop', 'subsystem', 'time', 'iteration', 'output', 'result', 'input', 'next', 'iteration', 'result', 'iteration', 'display', 'trouble', 'mechanical', 'major', 'experience', 'help', 'appreciate', 'thanks']",0
911,42931,"Here it explains about cascaded multilevel inverter of level nine.<p>This nine level inverter is achived by cascaded H-bridge inverter. The MOSFET is used as a switching device.</p>cascaded inverter,multilevel,nine level inverter,power",40,0,1,0,54,explains cascade multilevel inverter level nine nine level inverter achived cascaded bridge inverter mosfet switch device cascade level inverterpower,"['explains', 'cascade', 'multilevel', 'inverter', 'level', 'nine', 'nine', 'level', 'inverter', 'achived', 'cascaded', 'bridge', 'inverter', 'mosfet', 'switch', 'device', 'cascade', 'level', 'inverterpower']",3
912,42938,"PMSM Motor is controlled by V/F Method<p>PMSM motor is controlled with SVPWM based 3 level Inverter by using V/F Method</p>inverter,multi level,open loop,pmsm,speed control,svpwm,vf,electric_motor_control,power_electronics_control",149,6,3,0,222,pmsm motor control methodpmsm motor control svpwm base level inverter levelopen looppmsmspeed motor controlpower electronics control,"['pmsm', 'motor', 'control', 'methodpmsm', 'motor', 'control', 'svpwm', 'base', 'level', 'inverter', 'levelopen', 'looppmsmspeed', 'motor', 'controlpower', 'electronics', 'control']",6
913,42939,"PMSM motor is controlled by SVPWM based multilevel inverter<p>PMSM motor is controlled by Multi level inverter with SVPWM method.</p>closed loop,multi level,pmsm,speed control,svpwm,vf,electric_motor_control,power_electronics_control",156,6,3,0,233,pmsm motor control svpwm base multilevel inverterpmsm motor control multi level inverter svpwm method close loopmulti levelpmsmspeed motor controlpower electronics control,"['pmsm', 'motor', 'control', 'svpwm', 'base', 'multilevel', 'inverterpmsm', 'motor', 'control', 'multi', 'level', 'inverter', 'svpwm', 'method', 'close', 'loopmulti', 'levelpmsmspeed', 'motor', 'controlpower', 'electronics', 'control']",1
914,42940,"converted single phase to three phase with multilevel inverter <p>stand alone system is designed by svpwm control with multi level inverter</p>inverter,multi level,stand alone,svpwm,inverter,multi level,stand alone,svpwm",161,7,3,0,237,convert single phase three phase multilevel inverter stand alone design svpwm control multi level levelstand levelstand alonesvpwm,"['convert', 'single', 'phase', 'three', 'phase', 'multilevel', 'inverter', 'stand', 'alone', 'design', 'svpwm', 'control', 'multi', 'level', 'levelstand', 'levelstand', 'alonesvpwm']",3
915,42941,"Boost converter is feed to single phase inverter<p>single phase inverter is controlled by pwm technique and input is feed by boost converter</p>boost converter,inverter,pi,electric_motor_control,power_conversion_control,power_electronics_control",28,1,2,0,32,boost converter fee single phase invertersingle phase inverter control pwm technique input fee boost converterboost motor controlpower conversion controlpower electronics control,"['boost', 'converter', 'fee', 'single', 'phase', 'invertersingle', 'phase', 'inverter', 'control', 'pwm', 'technique', 'input', 'fee', 'boost', 'converterboost', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
916,42972,"BPSK modulation with DSSS<p>The principle is simple, just multiply the data sequence with the PN Sequence Generator for spread signal.</p>bpsk,dsss,simulink",22,3,2,0,19,bpsk modulation dssthe principle simple multiply data sequence sequence generator spread signal,"['bpsk', 'modulation', 'dssthe', 'principle', 'simple', 'multiply', 'data', 'sequence', 'sequence', 'generator', 'spread', 'signal']",0
917,42986,"Single phase grid connected PV system<p>PV system is connected to grid through single phase inverter </p>grid,mppt,pv,single phase,power_conversion_control,power_electronics_control,grid",353,18,4,0,386,single phase grid connect systempv connect grid single phase inverter phasepower conversion controlpower electronics controlgrid,"['single', 'phase', 'grid', 'connect', 'systempv', 'connect', 'grid', 'single', 'phase', 'inverter', 'phasepower', 'conversion', 'controlpower', 'electronics', 'controlgrid']",6
918,42989,"I am applying a FOC control for an asynchronous Induction Motor.<p>The above model is to program a F2808 micro controller, from Texas Instruments. I applied a Open loop V/F control and I am converting the model into a FOC control in a step wise manner.I have 3 current sensing inputs to ADC, from which I am applying a clark and park transformation. the angle is calculated by using the flux model in which uses the speed in RPM from the motor. the clark transformation worked fined with a sine waves with 90Â° phase shift. Now I am facing the issues with park transformation. the model when tried to built causing errors. Can any  one help me with the error. </p>electric_motor_control,power_electronics_control,embedded code,simulink",99,6,4,0,107,apply foc control asynchronous induction motor program micro controller texas instrument apply open loop control convert foc control step wise manner current sensing input adc apply clark park transformation angle calculate flux speed rpm motor clark transformation work fined sine wave phase shift face issue park transformation try build cause error one help error electric motor controlpower electronics controlembedded,"['apply', 'foc', 'control', 'asynchronous', 'induction', 'motor', 'program', 'micro', 'controller', 'texas', 'instrument', 'apply', 'open', 'loop', 'control', 'convert', 'foc', 'control', 'step', 'wise', 'manner', 'current', 'sensing', 'input', 'adc', 'apply', 'clark', 'park', 'transformation', 'angle', 'calculate', 'flux', 'speed', 'rpm', 'motor', 'clark', 'transformation', 'work', 'fined', 'sine', 'wave', 'phase', 'shift', 'face', 'issue', 'park', 'transformation', 'try', 'build', 'cause', 'error', 'one', 'help', 'error', 'electric', 'motor', 'controlpower', 'electronics', 'controlembedded']",4
919,43043,"Generate a single pulse when a positive edge detected (0 --> 1)<p>This block generate a single pulse whenever a trigger happen. The pulse width must specified as a number of samples. for example if your sampling time is 0.1s and you want 3s pulse , then you should enter 30 as a pulse width.</p>communications,control design,generation,generator,signal processing,simulation,simulink,single pulse,triggered",24,2,3,0,27,generate single pulse positive edge detect block generate single pulse whenever trigger happen pulse width must specify number sample example sample time want pulse enter pulse width pulsetriggered,"['generate', 'single', 'pulse', 'positive', 'edge', 'detect', 'block', 'generate', 'single', 'pulse', 'whenever', 'trigger', 'happen', 'pulse', 'width', 'must', 'specify', 'number', 'sample', 'example', 'sample', 'time', 'want', 'pulse', 'enter', 'pulse', 'width', 'pulsetriggered']",4
920,43063,"Urgent assistance needed to find solution to a modelling error<p>I modelled a PV temperature dependent model based on a journal. However, when I increase the temperature above 25 degree Celsius an error sign pops up. Also the expected maximum power is 50W yet the power output generated is about 54W. I will any assistance. thank you</p>modeling,pv model,simulink",82,7,3,0,86,urgent assistance need find solution errori temperature dependent base journal however increase temperature degree celsius error sign pop also expect maximum power yet power output generate assistance thank youmodelingpv,"['urgent', 'assistance', 'need', 'find', 'solution', 'errori', 'temperature', 'dependent', 'base', 'journal', 'however', 'increase', 'temperature', 'degree', 'celsius', 'error', 'sign', 'pop', 'also', 'expect', 'maximum', 'power', 'yet', 'power', 'output', 'generate', 'assistance', 'thank', 'youmodelingpv']",5
921,43085,"Full car suspension model based on 4 single whell suspension, body mass distribution and stabilizers<p>This model based on Leo Chen work, but I connected for 1/4 chassis models with body mass distribution and axis stabilizers. I was looking for very simple chassis model and when I hasn't find that, I created this one. If You are looking for something like this, please feel invited to use my work.</p>automotive,simulation,simulink",338,20,4,0,464,full car suspension base single whell suspension body mass distribution stabilizersthis base leo chen work connect chassis body mass distribution axis stabilizer look simple chassis find create one look something like please feel invited work,"['full', 'car', 'suspension', 'base', 'single', 'whell', 'suspension', 'body', 'mass', 'distribution', 'stabilizersthis', 'base', 'leo', 'chen', 'work', 'connect', 'chassis', 'body', 'mass', 'distribution', 'axis', 'stabilizer', 'look', 'simple', 'chassis', 'find', 'create', 'one', 'look', 'something', 'like', 'please', 'feel', 'invited', 'work']",0
922,43089,"This Models tells us about the basic need for making a power factor measurement.<p>R=40ohmL=0.0637HSingle Phase 200V supply</p>power system,simulation,simulink,simulation",35,0,1,0,39,tell basic need make power factor measurement ohml hsingle phase supplypower,"['tell', 'basic', 'need', 'make', 'power', 'factor', 'measurement', 'ohml', 'hsingle', 'phase', 'supplypower']",4
923,43091,"SAPF for 3 phase 4 wire systems.<p>SAPF for 3 phase 4 wire systems, based on pq Theory. Single Phase loads can be connected between phase and ground.</p>ahf,apf,clark transform,harmonic distortion,harmonic filter,power filter,pq theory application,sapf,thd",229,9,4,0,281,sapf phase wire sapf phase wire base theory single phase load connect phase ground ahfapfclark filterpower filterpq theory,"['sapf', 'phase', 'wire', 'sapf', 'phase', 'wire', 'base', 'theory', 'single', 'phase', 'load', 'connect', 'phase', 'ground', 'ahfapfclark', 'filterpower', 'filterpq', 'theory']",3
924,43143,"This function (or Simulink subsystem) rounds any variable to a given amount of significant figures.<p>This function can be incorporated into a Simulink model to round a variable to a predetermined number of significant figures. The constant at the bottom is n+1, where n is the number of significant figures required. </p>significant figures,simulink",10,0,1,0,11,function subsystem round variable give amount significant figure function incorporate round variable predetermine number significant figure constant bottom number significant figure require significant,"['function', 'subsystem', 'round', 'variable', 'give', 'amount', 'significant', 'figure', 'function', 'incorporate', 'round', 'variable', 'predetermine', 'number', 'significant', 'figure', 'constant', 'bottom', 'number', 'significant', 'figure', 'require', 'significant']",5
925,43203,"Fourier Analysis of a Sinusoidal PWM signal<p>This model simulates and computes Fourier analysis of PWM based sinusoidal waveform. Fundamental frequency can be changed in model properties. Amplitude modulation index and frequency modulation index can be adjusted in Simulink model directly. </p>ac motor control,control design,control system,fourier analysis,harmonics,mathematics,measurement,modulation,motor control,power electronics,power system,pulse width modulation,pwm,signal processing,simulation,spectrum,electric_motor_control,power_conversion_control,power_electronics_control",18,0,1,0,19,fourier analysis sinusoidal pwm signalthis compute fourier analysis pwm base sinusoidal waveform fundamental frequency change property amplitude modulation index frequency modulation index adjust directly motor controlcontrol designcontrol systemfourier controlpower systempulse width motor controlpower conversion controlpower electronics control,"['fourier', 'analysis', 'sinusoidal', 'pwm', 'signalthis', 'compute', 'fourier', 'analysis', 'pwm', 'base', 'sinusoidal', 'waveform', 'fundamental', 'frequency', 'change', 'property', 'amplitude', 'modulation', 'index', 'frequency', 'modulation', 'index', 'adjust', 'directly', 'motor', 'controlcontrol', 'designcontrol', 'systemfourier', 'controlpower', 'systempulse', 'width', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
926,43234,"Simulink model of Van der Pol Oscillator with adaptive frequency rule introduced.<p>Implementation of VDP from: ""Dynamic hebbian learning in adaptive frequency oscillators""Righetti et al - Physica D: Nonlinear Phenomena, 2006</p>adaptive frequency,van der pol",23,0,1,0,29,van der pol oscillator adaptive frequency rule introduce implementation vdp dynamic hebbian learn adaptive frequency oscillator righetti physica nonlinear phenomenon adaptive frequencyvan der pol,"['van', 'der', 'pol', 'oscillator', 'adaptive', 'frequency', 'rule', 'introduce', 'implementation', 'vdp', 'dynamic', 'hebbian', 'learn', 'adaptive', 'frequency', 'oscillator', 'righetti', 'physica', 'nonlinear', 'phenomenon', 'adaptive', 'frequencyvan', 'der', 'pol']",5
927,43252,"this is a boost converter employing cockcroft walton voltage multiplier <p>a dc-dc boost converter employing three state switching cell and cockcroft walton voltage multiplier boosts 42V to 300V</p>simulation,power_conversion_control,power_electronics_control",26,0,1,0,25,boost converter employ cockcroft walton voltage multiplier boost converter employ three state switch cell cockcroft walton voltage multiplier boost conversion controlpower electronics control,"['boost', 'converter', 'employ', 'cockcroft', 'walton', 'voltage', 'multiplier', 'boost', 'converter', 'employ', 'three', 'state', 'switch', 'cell', 'cockcroft', 'walton', 'voltage', 'multiplier', 'boost', 'conversion', 'controlpower', 'electronics', 'control']",1
928,43269,"Before simulating the model do specify the frequency in matlab prompt as: f=(desired freq of op.);<p>Power Factor is defined as the ratio of the (real power (P)) to the (apparent power(S)).The Block is designed as per the defination of power factor and therefore helps in understanding the concept of power factor.</p>load power consumption,machines,power factor,power factor measurement",21,1,2,0,21,specify frequency prompt desire freq power factor define ratio real power apparent power block design per defination power factor therefore help understand concept power factor load power factorpower factor measurement,"['specify', 'frequency', 'prompt', 'desire', 'freq', 'power', 'factor', 'define', 'ratio', 'real', 'power', 'apparent', 'power', 'block', 'design', 'per', 'defination', 'power', 'factor', 'therefore', 'help', 'understand', 'concept', 'power', 'factor', 'load', 'power', 'factorpower', 'factor', 'measurement']",4
929,43330,"Plot a VI curve for a solar cell.<p>By simulating the voltage and current , we can know more about the performance under different conditions as long as we select appropriate parameters .</p>solar energy",57,1,2,0,62,plot curve solar cell voltage current know performance different condition long select appropriate parameter solar energy,"['plot', 'curve', 'solar', 'cell', 'voltage', 'current', 'know', 'performance', 'different', 'condition', 'long', 'select', 'appropriate', 'parameter', 'solar', 'energy']",4
930,43339,"DC motor modeling along with buck chopper modeling is presented.<p>Speed control of dc motor using PI controller is presented.</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation,simulink",71,6,3,0,73,motor along buck chopper modeling present speed control motor controller present electric motor controlpower conversion controlpower electronics,"['motor', 'along', 'buck', 'chopper', 'modeling', 'present', 'speed', 'control', 'motor', 'controller', 'present', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
931,43340,"LONG TRANSMISSION LINE OF 300KM<p>THIS IS A SINGLE CIRCUIT, 500KV, 300KM LONG TRANSMISSION LINE. HERE, CALCULATION OF SENDING END, RECEIVING END, VOLTAGES, CURRENTS AND POWER IS CALCULATED USING SIMPLE MATLAB MODEL FOR BEGINEER..GOOD LUCK.</p>measurement,power system,simulation,simulink,transmission line",53,1,2,0,60,long transmission line kmthis single circuit long transmission line calculation send end receive end voltages current power calculate simple begineer good luck line,"['long', 'transmission', 'line', 'kmthis', 'single', 'circuit', 'long', 'transmission', 'line', 'calculation', 'send', 'end', 'receive', 'end', 'voltages', 'current', 'power', 'calculate', 'simple', 'begineer', 'good', 'luck', 'line']",4
932,43341,"A 220KV, 40KM SHORT TRANSMISSION LINE <p>THIS MODEL REPRESENTS A 220KV, SINGLE CIRCUIT, 40KM SHORT TRANSMISSION LINE.HERE MEASUREMENTS OF SENDING END, RECEIVING END, VOLTAGES, CURRENT AND POWERS IS DONE. THIS MODEL IS BEST SUITED FOR BEGINNERS..GOOD LUCK...</p>article,measurement,modeling,power system,simulation,simulink,system identification,transmission line model",50,1,2,0,53,short transmission line represent single circuit short transmission line measurement send end receive end voltage current power best suit beginner good luck line,"['short', 'transmission', 'line', 'represent', 'single', 'circuit', 'short', 'transmission', 'line', 'measurement', 'send', 'end', 'receive', 'end', 'voltage', 'current', 'power', 'best', 'suit', 'beginner', 'good', 'luck', 'line']",4
933,43362,"This modal consists of three phase boost converter with closed loop operation.<p>Type III compensatory is employed to achieve the desired reference voltage.</p>power electronics,power electronics control design,power_conversion_control,power_electronics_control",37,0,1,0,51,modal consist three phase boost converter close loop operation type compensatory employ achieve desire reference voltage power electronics control designpower conversion controlpower electronics control,"['modal', 'consist', 'three', 'phase', 'boost', 'converter', 'close', 'loop', 'operation', 'type', 'compensatory', 'employ', 'achieve', 'desire', 'reference', 'voltage', 'power', 'electronics', 'control', 'designpower', 'conversion', 'controlpower', 'electronics', 'control']",1
934,43383,"Raspberry Pi SFunction to obtain MPU6050 data using the C-library WiringPiI2C.  <p>This file contains a simple single axis example and a complete 6 axis example using the DLFP (Digital Low Pass Filter) of the MPU6050.The I2C library used is WirnigPiI2C which comes with the targetinstaller distribution of RPi.  These examples show the usage of the I2C library commands.  For more capability consult Jeff Rowberg's MPU6050 code for the arduino: <a href=""http://playground.arduino.cc/Main/MPU-6050"">http://playground.arduino.cc/Main/MPU-6050</a>, or the 6050 documentation for the register definitions.Other device driver blocks, and the hardware it was run on is available at our website:<a href=""http://minseg.webs.com/downloadsA"">http://minseg.webs.com/downloadsA</a> complete Arduino library and curriculum is available here:<a href=""http://minseg.com/pages/downloadscoming"">http://minseg.com/pages/downloadscoming</a> soon: - HMC5883L magnetometer and others!This work is part of the Mechatronics curriculum at Rensselaer Polytechnic Institute.</p>control,driver,mpu6050,raspberry pi,sfunction,simulink",4,0,1,0,7,raspberry sfunction obtain mpu data wiringpii file contain simple single axis example complete axis example dlfp digital low pas filter mpu wirnigpii come targetinstaller distribution rpi examples show usage command capability consult jeff rowberg mpu code arduino http playground arduino main mpu documentation register definition device driver block hardware run available website http minseg web com downloadsa complete arduino curriculum available http minseg com page downloadscoming soon hmc magnetometer others work part mechatronics curriculum rensselaer polytechnic institute raspberry,"['raspberry', 'sfunction', 'obtain', 'mpu', 'data', 'wiringpii', 'file', 'contain', 'simple', 'single', 'axis', 'example', 'complete', 'axis', 'example', 'dlfp', 'digital', 'low', 'pas', 'filter', 'mpu', 'wirnigpii', 'come', 'targetinstaller', 'distribution', 'rpi', 'examples', 'show', 'usage', 'command', 'capability', 'consult', 'jeff', 'rowberg', 'mpu', 'code', 'arduino', 'http', 'playground', 'arduino', 'main', 'mpu', 'documentation', 'register', 'definition', 'device', 'driver', 'block', 'hardware', 'run', 'available', 'website', 'http', 'minseg', 'web', 'com', 'downloadsa', 'complete', 'arduino', 'curriculum', 'available', 'http', 'minseg', 'com', 'page', 'downloadscoming', 'soon', 'hmc', 'magnetometer', 'others', 'work', 'part', 'mechatronics', 'curriculum', 'rensselaer', 'polytechnic', 'institute', 'raspberry']",0
935,43385,"The boost converter is modeled in simulink with inductor current and capacitor voltage equations.<p>This is simple model of closed loop Boost converter and Type III compensatory is employed to achieve the desired reference voltage. The converter is modeled using inductor current and capacitor voltage state equations. The model can be simulated in switching mode as well as linear mode.  </p>boost converter,boost regulator,control design,dc dc converter model,power electronics,simulation,simulink,power_conversion_control,power_electronics_control",26,2,3,0,28,boost converter inductor current capacitor voltage equation simple closed loop boost converter type compensatory employ achieve desire reference voltage converter inductor current capacitor voltage state equation switch mode well linear mode boost converterboost designdc converter modelpower conversion controlpower electronics control,"['boost', 'converter', 'inductor', 'current', 'capacitor', 'voltage', 'equation', 'simple', 'closed', 'loop', 'boost', 'converter', 'type', 'compensatory', 'employ', 'achieve', 'desire', 'reference', 'voltage', 'converter', 'inductor', 'current', 'capacitor', 'voltage', 'state', 'equation', 'switch', 'mode', 'well', 'linear', 'mode', 'boost', 'converterboost', 'designdc', 'converter', 'modelpower', 'conversion', 'controlpower', 'electronics', 'control']",1
936,43405,"The working of ""Three phase synchronous buck converter"" is shown through this model.<p>The advantage of Multi-phase buck converter is shown through this model. The reduced resultant inductor ripple current flowing through the output capacitor, brings down the size and cost of the output capacitor. Due to Multi-phasing, the high input current stress on the switch is avoided.   </p>buck converter,power electronics,simulation,simulink,three phase dcdc converter,power_conversion_control,power_electronics_control",37,0,1,0,49,work three phase synchronous buck converter show advantage multi phase buck converter show reduced resultant inductor ripple current flow output capacitor bring size cost output capacitor due multi phase high input current stress switch avoid buck converterpower phase dcdc converterpower conversion controlpower electronics control,"['work', 'three', 'phase', 'synchronous', 'buck', 'converter', 'show', 'advantage', 'multi', 'phase', 'buck', 'converter', 'show', 'reduced', 'resultant', 'inductor', 'ripple', 'current', 'flow', 'output', 'capacitor', 'bring', 'size', 'cost', 'output', 'capacitor', 'due', 'multi', 'phase', 'high', 'input', 'current', 'stress', 'switch', 'avoid', 'buck', 'converterpower', 'phase', 'dcdc', 'converterpower', 'conversion', 'controlpower', 'electronics', 'control']",3
937,43406,"This model shows the working of ""Closed loop three phase synchronous buck converter"" <p>The model shows the advantage of Multi-phasing in buck converter with its closed loop operation.  </p>buck converter,measurement,power electronics,simulation,power_conversion_control,power_electronics_control",39,0,1,0,54,show work close loop three phase synchronous buck converter show advantage multi phase buck converter close loop operation buck conversion controlpower electronics control,"['show', 'work', 'close', 'loop', 'three', 'phase', 'synchronous', 'buck', 'converter', 'show', 'advantage', 'multi', 'phase', 'buck', 'converter', 'close', 'loop', 'operation', 'buck', 'conversion', 'controlpower', 'electronics', 'control']",1
938,43416,"FUZZY LOGIC OF VECTOR CONTROL<p>implementation of fuzzy logic of vector control</p>fuzzy,vector control",376,29,5,0,428,fuzzy logic vector fuzzy logic vector control,"['fuzzy', 'logic', 'vector', 'fuzzy', 'logic', 'vector', 'control']",3
939,43443,"this simulator models Analog PID circuits as an Analog controller with the DC motor for the plants<p>the following model are modelled:Complete PID controller analog Circuit using SimscapeDC motor using Simulink</p>electric_motor_control,power_conversion_control,power_electronics_control,control design,simulink",78,8,4,0,69,analog pid circuit analog controller motor plantsthe follow complete pid controller analog circuit simscapedc motor motor controlpower conversion controlpower electronics controlcontrol,"['analog', 'pid', 'circuit', 'analog', 'controller', 'motor', 'plantsthe', 'follow', 'complete', 'pid', 'controller', 'analog', 'circuit', 'simscapedc', 'motor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",1
940,43449,"In order to calculate the SOLAR PANEL AND BATTERY CAPACITY NEEDED CALCULATOR <p>This model is to determine the number of solar panels needed and the minimum battery capacity needed(in amps)and also for the required backup time</p>battery_system_management,power_electronics_control,simulink,embedded function,simulink",33,2,2,0,30,order calculate solar panel battery capacity need calculator determine number solar panel need minimum battery capacity need amp also require backup timebattery managementpower electronics,"['order', 'calculate', 'solar', 'panel', 'battery', 'capacity', 'need', 'calculator', 'determine', 'number', 'solar', 'panel', 'need', 'minimum', 'battery', 'capacity', 'need', 'amp', 'also', 'require', 'backup', 'timebattery', 'managementpower', 'electronics']",4
941,43472,"In order to determine the amount to be paid for the electricity usage using the usage requirement..<p>This simulation is done on basis to calculate the electricity cost for required time of usage.. Using the formula      """"ec = (w * h/1000 * r)*100""""i have simulated..</p>embedded function",8,0,1,0,7,order determine amount pay electricity usage usage requirement basis calculate electricity cost required time usage formula embed function,"['order', 'determine', 'amount', 'pay', 'electricity', 'usage', 'usage', 'requirement', 'basis', 'calculate', 'electricity', 'cost', 'required', 'time', 'usage', 'formula', 'embed', 'function']",5
942,43539,"this is an approach of IEEE 802.16-2004 standard.<p>WiMax objective is to provide high-speed internet connection in a large coverage area.Simulation parameters : data rate : 24Mbps.Modulation : 16QAM 1/2OFDM : FFT=256.</p>fft,ofdm,radio mobile,signal processing,wimax,wireless communication",65,8,3,0,60,approach iee standard wimax objective provide high speed internet connection large coverage area parameter data rate mbps modulation qam ofdm fft fftofdmradio mobilesignal communication,"['approach', 'iee', 'standard', 'wimax', 'objective', 'provide', 'high', 'speed', 'internet', 'connection', 'large', 'coverage', 'area', 'parameter', 'data', 'rate', 'mbps', 'modulation', 'qam', 'ofdm', 'fft', 'fftofdmradio', 'mobilesignal', 'communication']",5
943,43599,"Fictitious grid according to IEC 61400-21<p>Use this module in order to simulate the Fictitious grid according to IEC 61400-21 and to calculate the different flicker values like flicker coefficient &amp; flicker step factor for different Grid phase angels (Alpha).</p>distributed,modeling,signal processing,simulation,simulink,statistics",299,14,4,0,335,fictitious grid accord iec module order fictitious grid accord iec calculate different flicker value like flicker coefficient amp flicker step factor different grid phase angel alpha,"['fictitious', 'grid', 'accord', 'iec', 'module', 'order', 'fictitious', 'grid', 'accord', 'iec', 'calculate', 'different', 'flicker', 'value', 'like', 'flicker', 'coefficient', 'amp', 'flicker', 'step', 'factor', 'different', 'grid', 'phase', 'angel', 'alpha']",4
944,43606,"simplified PV module simulator according to DIN EN 50530 With MPPT<p>This module will simulate any PV module with different weather conditions as an input. and is also connected to an simplified Maximum Power Point Tracker system to recognize the Working volrage of the cell (module)</p>power_conversion_control,power_electronics_control,control design,modeling,simulation,simulink",162,9,3,0,159,simplify module accord din mpptthis module module different weather condition input also connect simplify maximum power point tracker recognize working volrage cell module power conversion controlpower electronics controlcontrol,"['simplify', 'module', 'accord', 'din', 'mpptthis', 'module', 'module', 'different', 'weather', 'condition', 'input', 'also', 'connect', 'simplify', 'maximum', 'power', 'point', 'tracker', 'recognize', 'working', 'volrage', 'cell', 'module', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",4
945,43608,"This module calculate the electrical values according to IEC<p>Use this module to calculate the Positive sequence electrical values of the three phase measured voltages and currents, according to the IEC 61400-21.also the RMS values of the three phase voltages and currents are calculated.</p>measurement,modeling,signal processing,simulation,simulink,statistics",287,8,3,0,321,module calculate electrical value accord iecuse module calculate positive sequence electrical value three phase measure voltage current accord iec also rms value three phase voltages current calculate,"['module', 'calculate', 'electrical', 'value', 'accord', 'iecuse', 'module', 'calculate', 'positive', 'sequence', 'electrical', 'value', 'three', 'phase', 'measure', 'voltage', 'current', 'accord', 'iec', 'also', 'rms', 'value', 'three', 'phase', 'voltages', 'current', 'calculate']",4
946,43613,"Based on mathematical and physical model to get the simulated I-V curve<p>Based on mathematical and physical model to get the simulated I-V curve</p>pv cell,simulation,simulink",44,0,1,0,52,base mathematical physical get curvebased mathematical physical get curvepv,"['base', 'mathematical', 'physical', 'get', 'curvebased', 'mathematical', 'physical', 'get', 'curvepv']",7
947,43619,"verification of reciprocity theorem (DC)<p>In a linear bilateral circuit, if voltage source in any branch produces current (I) in any other branch, then the same voltage source in 2nd  branch will produce the same current (I) in the 1st branch.</p>power_conversion_control,power_electronics_control,electrical circuits",21,0,1,0,22,verification reciprocity theorem linear bilateral circuit voltage source branch produce current branch voltage source branch produce current branch power conversion controlpower electronics circuit,"['verification', 'reciprocity', 'theorem', 'linear', 'bilateral', 'circuit', 'voltage', 'source', 'branch', 'produce', 'current', 'branch', 'voltage', 'source', 'branch', 'produce', 'current', 'branch', 'power', 'conversion', 'controlpower', 'electronics', 'circuit']",3
948,43641,"varification of reciprocity theorem with voltage source and current source in case of ac.<p>In a linear bilateral circuit, if a voltage source in any branch generates a current I in any other branch, then the same voltage source  acting in a second branch will produce the same current I in the first branch.and In a linear bilateral circuit, if a current source in any branch produces  a voltage V in any other branch, then the same current source  acting in a second branch will produce the same voktage V in the first branch.</p>electrical circuits,electric_motor_control,power_conversion_control,power_electronics_control",41,0,1,0,38,varification reciprocity theorem voltage source current source case linear bilateral circuit voltage source branch generate current branch voltage source act second branch produce current first branch linear bilateral circuit current source branch produce voltage branch current source act second branch produce voktage first branch electrical motor controlpower conversion controlpower electronics control,"['varification', 'reciprocity', 'theorem', 'voltage', 'source', 'current', 'source', 'case', 'linear', 'bilateral', 'circuit', 'voltage', 'source', 'branch', 'generate', 'current', 'branch', 'voltage', 'source', 'act', 'second', 'branch', 'produce', 'current', 'first', 'branch', 'linear', 'bilateral', 'circuit', 'current', 'source', 'branch', 'produce', 'voltage', 'branch', 'current', 'source', 'act', 'second', 'branch', 'produce', 'voktage', 'first', 'branch', 'electrical', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
949,43673,"To develop positive torque, the currents in the phases of a SRM must be synchronized to the rotor po<p>Here Modelling the dynamics of switched reluctance motor is done using matlab.</p>electric_motor_control,power_electronics_control,simulink",66,5,3,0,69,develop positive torque current phase srm must synchronize rotor pohere dynamic switch reluctance motor electric motor controlpower electronics,"['develop', 'positive', 'torque', 'current', 'phase', 'srm', 'must', 'synchronize', 'rotor', 'pohere', 'dynamic', 'switch', 'reluctance', 'motor', 'electric', 'motor', 'controlpower', 'electronics']",1
950,43708,"Use this module to get the electrical angle between two ""sin"" signals<p>This module will calculate the electrical angle between two different signals (Normally current + Voltage). once the first siganl as a reference signal and once the second signal as a reference signal. </p>measurement,modeling,signal processing,simulation,simulink",131,9,3,0,177,module get electrical angle two sin signalsthis module calculate electrical angle two different signal normally current voltage first siganl reference signal second signal reference signal,"['module', 'get', 'electrical', 'angle', 'two', 'sin', 'signalsthis', 'module', 'calculate', 'electrical', 'angle', 'two', 'different', 'signal', 'normally', 'current', 'voltage', 'first', 'siganl', 'reference', 'signal', 'second', 'signal', 'reference', 'signal']",7
951,43711,varification of maximum power transfer theorem. <p>load recieves maximum power from the source when its resitive value is equal to the thevenin resistance of the circuit.</p>electrical circuit,28,0,1,0,28,varification maximum power transfer theorem load recieves maximum power source resitive value equal thevenin resistance circuit electrical circuit,"['varification', 'maximum', 'power', 'transfer', 'theorem', 'load', 'recieves', 'maximum', 'power', 'source', 'resitive', 'value', 'equal', 'thevenin', 'resistance', 'circuit', 'electrical', 'circuit']",4
952,43715,"9DOF S-function with MPU6050 and HMC5883L<p>Building on the work of Joshua Hurst MPU6050 S-function. His original s-function had been edited to provide 9DOF with the HMC5883L.There are two modes - Pass through where the Magnetometer Data is read directly from the HMC5883L via the AUX I2C. Then, when the MPU6050 is configured as master the Magnetometer Data is read from the Slave Registers on the MPU6050.The I2C library used is WirnigPiI2C which comes with the target-installer distribution of RPi. </p>hmc5883l,mpu6050,raspberry pi",2,0,1,0,9,dof function mpu hmc lbuilding work joshua hurst mpu function original function edit provide dof hmc two mode pass magnetometer data read directly hmc via aux mpu configure master magnetometer data read slave register mpu wirnigpii come target installer distribution rpi hmc lmpu raspberry,"['dof', 'function', 'mpu', 'hmc', 'lbuilding', 'work', 'joshua', 'hurst', 'mpu', 'function', 'original', 'function', 'edit', 'provide', 'dof', 'hmc', 'two', 'mode', 'pass', 'magnetometer', 'data', 'read', 'directly', 'hmc', 'via', 'aux', 'mpu', 'configure', 'master', 'magnetometer', 'data', 'read', 'slave', 'register', 'mpu', 'wirnigpii', 'come', 'target', 'installer', 'distribution', 'rpi', 'hmc', 'lmpu', 'raspberry']",5
953,43794,"inverterbased on dual buck topology and phase-shift control scheme<p>characteristics of a single-unit dualbuck type inverter is that the switch is selectively working basedon the direction of output current.</p>cascade inverter,dual buck inverter,phaseshiftcontrol",47,0,1,0,46,inverterbased dual buck topology phase shift control single unit dualbuck type inverter switch selectively work basedon direction output current cascade inverterdual buck,"['inverterbased', 'dual', 'buck', 'topology', 'phase', 'shift', 'control', 'single', 'unit', 'dualbuck', 'type', 'inverter', 'switch', 'selectively', 'work', 'basedon', 'direction', 'output', 'current', 'cascade', 'inverterdual', 'buck']",3
954,43828,"TO CALCULATE THE AVERAGE SCORE OF A PERSON BY CONSIDERING GREATER IMPORTANCE FOR SPECIFIC SUBJECTS<p>IN VIEW OF DIFFERENT CREDITS GIVEN FOR EACH SUBJECT DENOTING ITS IMPORTANCE THIS FUZZY LOGIC CONTROLLER IS DESIGNED...HERE I HAVE CREATED RULES BASED ON GIVING GREATER IMPORTANCE TO SUB 1.... IF LOWER MARKS ON SUB 1 IT CREATES LOWER AVERAGE ON AVG SCORE</p>fuzzy,fuzzy controller",6,0,1,0,5,calculate average score person consider great importance specific subjectsin view different credit give subject denote importance fuzzy logic controller design create rule base give great importance sub lower mark sub creates low average avg scorefuzzyfuzzy controller,"['calculate', 'average', 'score', 'person', 'consider', 'great', 'importance', 'specific', 'subjectsin', 'view', 'different', 'credit', 'give', 'subject', 'denote', 'importance', 'fuzzy', 'logic', 'controller', 'design', 'create', 'rule', 'base', 'give', 'great', 'importance', 'sub', 'lower', 'mark', 'sub', 'creates', 'low', 'average', 'avg', 'scorefuzzyfuzzy', 'controller']",5
955,43829,"THIS CALCULATOR IS FOR CALCULATING THE ""EMI"" TO BE PAID MONTHLY<p>IN ORDER TO DETERMINE THE TOTAL ""EMI"" TO BE PAID FOR CERTAIN PRINCIPAL AMOUNT AND AT CERTAIN INTEREST AMOUNT. USING THIS CALCULATOR WE CAN EVEN DETERMINE THE TOTAL AMOUNT TO BE PAID AS INTEREST ALONE AND TOTAL AMOUNT AFTER THE LOAN TENURE PERIOD </p>embedded function",14,0,1,0,15,calculator calculate emi pay monthlyin order determine total emi pay certain principal amount certain interest amount calculator even determine total amount pay interest alone total amount loan tenure period embed function,"['calculator', 'calculate', 'emi', 'pay', 'monthlyin', 'order', 'determine', 'total', 'emi', 'pay', 'certain', 'principal', 'amount', 'certain', 'interest', 'amount', 'calculator', 'even', 'determine', 'total', 'amount', 'pay', 'interest', 'alone', 'total', 'amount', 'loan', 'tenure', 'period', 'embed', 'function']",8
956,43940,"Discribes about three phase Sinusoidal PWM Inverter<p>Consist of SPWM Generator. Three phase inverter with pulses. </p>3p inverter,inverter,spwm inverter,three phase inverter,electric_motor_control,power_conversion_control,power_electronics_control",235,14,4,0,334,discribes three phase sinusoidal pwm inverterconsist spwm generator three phase inverter pulse inverterthree phase motor controlpower conversion controlpower electronics control,"['discribes', 'three', 'phase', 'sinusoidal', 'pwm', 'inverterconsist', 'spwm', 'generator', 'three', 'phase', 'inverter', 'pulse', 'inverterthree', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
957,44002,"17 Levels Modular Multilevel Converter<p>Three phase 17 levels MMC.</p>17 levels,converter,inverter,mmc,modular,multilevel",614,31,3,0,770,level modular multilevel converterthree phase level mmc,"['level', 'modular', 'multilevel', 'converterthree', 'phase', 'level', 'mmc']",3
958,44057,"not getting correct output<p>here is the three phase boost inverter, i dont know how to give gate pulse for this.. anyone please help me to get three phase AC output</p>boost inverter",54,1,2,0,75,get correct outputhere three phase boost inverter dont know give gate pulse anyone please help get three phase outputboost inverter,"['get', 'correct', 'outputhere', 'three', 'phase', 'boost', 'inverter', 'dont', 'know', 'give', 'gate', 'pulse', 'anyone', 'please', 'help', 'get', 'three', 'phase', 'outputboost', 'inverter']",3
959,44124,"Aircraft Power Network in Simscape Electrical with AC and DC networks<p>This file contains a model of an aircraft power network built in Simscape Power Systems. It contains a half-aircraft network consisting of one generator, an AC network, a Transformer Rectifier Unit connecting to a DC network. The model can be used to determine power requirements, analyze system interactions, and perform harmonic analysis. Running the model in phasor mode enables entire flight cycles to be tested. Models and MATLAB code show how to refine system requirements, estimate parameters based on measured data, distribute simulations using parallel computing, and automatically generating reports. Please read the README.txt file to get started.    See how to use simulation to design aircraft power networks: <a href=""https://www.mathworks.com/videos/aircraft-power-network-development-with-model-based-design-81977.html"">https://www.mathworks.com/videos/aircraft-power-network-development-with-model-based-design-81977.html</a>   Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>    Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a>    You may reuse this content, with or without modification, in your work.Please follow the conditions of the license file and use the following citation:[1] Miller, Steve (2018), Aircraft Power Network in Simscape Power Systems (<a href=""https://www.mathworks.com/matlabcentral/fileexchange/44124"">https://www.mathworks.com/matlabcentral/fileexchange/44124</a>) MATLAB Central File Exchange. Retrieved on </p>more electric aircraft,physical modeling,power_conversion_control,power_electronics_control",3432,474,4,12,3546,aircraft power network simscape electrical networksthis file contain aircraft power network build simscape power contain half aircraft network consist one generator network transformer rectifier unit connect network determine power requirement analyze interaction perform harmonic analysis run phasor mode enable entire flight cycle test code show refine requirement estimate parameter base measure data distribute parallel compute automatically generate report please read readme txt file get start see design aircraft power network mathworks com video aircraft power network development base design html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling may reuse content without modification work please follow condition license file follow citation miller steve aircraft power network simscape power mathworks com matlabcentral fileexchange central file exchange retrieve electric modelingpower conversion controlpower electronics control,"['aircraft', 'power', 'network', 'simscape', 'electrical', 'networksthis', 'file', 'contain', 'aircraft', 'power', 'network', 'build', 'simscape', 'power', 'contain', 'half', 'aircraft', 'network', 'consist', 'one', 'generator', 'network', 'transformer', 'rectifier', 'unit', 'connect', 'network', 'determine', 'power', 'requirement', 'analyze', 'interaction', 'perform', 'harmonic', 'analysis', 'run', 'phasor', 'mode', 'enable', 'entire', 'flight', 'cycle', 'test', 'code', 'show', 'refine', 'requirement', 'estimate', 'parameter', 'base', 'measure', 'data', 'distribute', 'parallel', 'compute', 'automatically', 'generate', 'report', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'design', 'aircraft', 'power', 'network', 'mathworks', 'com', 'video', 'aircraft', 'power', 'network', 'development', 'base', 'design', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'may', 'reuse', 'content', 'without', 'modification', 'work', 'please', 'follow', 'condition', 'license', 'file', 'follow', 'citation', 'miller', 'steve', 'aircraft', 'power', 'network', 'simscape', 'power', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'central', 'file', 'exchange', 'retrieve', 'electric', 'modelingpower', 'conversion', 'controlpower', 'electronics', 'control']",7
960,44131,block diagram for some lan parts <p>using simulink is much better and easy way to build a prototype lan network</p>lan,6,0,1,0,6,block diagram lan part much good easy way build prototype lan networklan,"['block', 'diagram', 'lan', 'part', 'much', 'good', 'easy', 'way', 'build', 'prototype', 'lan', 'networklan']",5
961,44142,"five leg inverter is connected with two R-load by taking one common leg by using SPWM techinque<p>two load are connected by taking on leg common in five leg inverter,which reduces the cost of two switches and sinusoidal pluse with modulation techinque is used for switching the device  </p>drives,inverter",78,0,1,0,95,five leg inverter connect two load take one common leg spwm techinquetwo load connect take leg common five leg inverterwhich reduce cost two switch sinusoidal pluse modulation techinque switch device drivesinverter,"['five', 'leg', 'inverter', 'connect', 'two', 'load', 'take', 'one', 'common', 'leg', 'spwm', 'techinquetwo', 'load', 'connect', 'take', 'leg', 'common', 'five', 'leg', 'inverterwhich', 'reduce', 'cost', 'two', 'switch', 'sinusoidal', 'pluse', 'modulation', 'techinque', 'switch', 'device', 'drivesinverter']",4
962,44172,"simple pwm<p>simple pulse width modulation </p>electric_motor_control,power_conversion_control,power_electronics_control,pwm",9,0,1,0,7,simple pwmsimple pulse width modulation electric motor controlpower conversion controlpower electronics controlpwm,"['simple', 'pwmsimple', 'pulse', 'width', 'modulation', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpwm']",6
963,44197,"This paper discusses several approaches for calling shared libraries from Simulink models<p>This paper describes various approaches for calling shared libraries from Simulink models. Both explicit (load-time) and implicit (run-time) linking is considered.</p>pick of the week,potw,c caller,call library,dll,dynamic library,embedded coder,lct,legacy code tool,lib,matlab function,matlab system block,sfunction,sfunction builder,shared library,simulink,so,stateflow,system object",26,0,1,0,18,paper discuss several approach call share modelsthis paper describe various approach call share explicit load time implicit run time link consider pick weekpotwc callercall libraryembedded coderlctlegacy code toollibmatlab functionmatlab buildershared object,"['paper', 'discuss', 'several', 'approach', 'call', 'share', 'modelsthis', 'paper', 'describe', 'various', 'approach', 'call', 'share', 'explicit', 'load', 'time', 'implicit', 'run', 'time', 'link', 'consider', 'pick', 'weekpotwc', 'callercall', 'libraryembedded', 'coderlctlegacy', 'code', 'toollibmatlab', 'functionmatlab', 'buildershared', 'object']",0
964,44205,"single-stage three-phase grid-connected boost inverter<p>Each phase in the three-phase boost inverter consists of twoIGBTs, one inductor, and one capacitor. There is a common point for the capacitors which is connected to the negative terminal of the DC supply. The load is connected to the inverter terminals creating another commonpoint, which is electrically isolated from the capacitorsâcommon point</p>boostinvertersimpowersystemsigbtsimulink,voltage boosting,power_conversion_control,power_electronics_control",56,1,2,0,81,single stage three phase grid connect boost invertereach phase three phase boost inverter consist twoigbts one inductor one capacitor common point capacitor connect negative terminal supply load connect inverter terminal create another commonpoint electrically isolate boostingpower conversion controlpower electronics control,"['single', 'stage', 'three', 'phase', 'grid', 'connect', 'boost', 'invertereach', 'phase', 'three', 'phase', 'boost', 'inverter', 'consist', 'twoigbts', 'one', 'inductor', 'one', 'capacitor', 'common', 'point', 'capacitor', 'connect', 'negative', 'terminal', 'supply', 'load', 'connect', 'inverter', 'terminal', 'create', 'another', 'commonpoint', 'electrically', 'isolate', 'boostingpower', 'conversion', 'controlpower', 'electronics', 'control']",3
965,44240,"it shows the simulation of dc motor with graphs and input<p>using servo characteristic equations,transfer function is derived by taking laplace </p>electric_motor_control,power_conversion_control,power_electronics_control,step as input,application",15,0,1,0,19,show motor graph inputusing servo characteristic function derive take laplace electric motor controlpower conversion controlpower electronics controlstep,"['show', 'motor', 'graph', 'inputusing', 'servo', 'characteristic', 'function', 'derive', 'take', 'laplace', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlstep']",1
966,44243,"Step,ramp and parabolic response in simulink<p>ramp,parabolic and step response is viewed by simulink scope and errors can be viewed then</p>ramp,step",14,0,1,0,17,stepramp parabolic response step response view scope error view thenrampstep,"['stepramp', 'parabolic', 'response', 'step', 'response', 'view', 'scope', 'error', 'view', 'thenrampstep']",5
967,44293,"Overdamping/damping/underdamping electrical circuit Simulation in Simulink<p>Overdamping/damping/underdamping electrical circuit Simulation in SimulinkSimulaciÃ³n del comportamiento de un circuito elÃ©ctrico a travÃ©s de la ecuaciÃ³n diferencial de segundo grado.ImplementaciÃ³n en SIMULINK.</p>damping,electrical circuit,overdamping,simulink,underdamping",15,0,1,0,17,overdamping damp underdamping electrical circuit damp underdamping electrical circuit del comportamiento circuito elÃ©ctrico travÃ©s ecuaciÃ³n diferencial segundo grado implementaciÃ³n,"['overdamping', 'damp', 'underdamping', 'electrical', 'circuit', 'damp', 'underdamping', 'electrical', 'circuit', 'del', 'comportamiento', 'circuito', 'elÃ©ctrico', 'travÃ©s', 'ecuaciÃ³n', 'diferencial', 'segundo', 'grado', 'implementaciÃ³n']",8
968,44294,to design a specific controller for the desired system requirements?<p>The modeling equation of this system is MD2X+bDX+kX = F The transfer function between the displacement X(s) and the input F(s) then becomes X(s) / F(s) = 1 / (Ms2 + bs +k)</p>simulink,8,0,1,0,10,design specific controller desire requirement equation bdx transfer function displacement input becomes,"['design', 'specific', 'controller', 'desire', 'requirement', 'equation', 'bdx', 'transfer', 'function', 'displacement', 'input', 'becomes']",0
969,44300,"The block implements a variable time delay, using interpolation to approximate substep delays.<p>The block implements a variable time-delay, or variable sample delay in discrete systems using fixed-step solver.The output is interpolated, in order to approximate sub-sampletime delay. Therefore the input signal should be differentiable and should be able to obtain a wide range of numeric values (float, int, but not like bool).</p>variable delay",26,1,2,0,34,block implement variable time delay interpolation approximate substep delay block implement variable time delay variable sample delay discrete fixed step solver output interpolated order approximate sub sampletime delay therefore input signal differentiable able obtain wide range numeric value float int like bool variable delay,"['block', 'implement', 'variable', 'time', 'delay', 'interpolation', 'approximate', 'substep', 'delay', 'block', 'implement', 'variable', 'time', 'delay', 'variable', 'sample', 'delay', 'discrete', 'fixed', 'step', 'solver', 'output', 'interpolated', 'order', 'approximate', 'sub', 'sampletime', 'delay', 'therefore', 'input', 'signal', 'differentiable', 'able', 'obtain', 'wide', 'range', 'numeric', 'value', 'float', 'int', 'like', 'bool', 'variable', 'delay']",0
970,44305,Selective Harmonic Elimination implemented on H Bridge converter<p>before running enter following parameters in command windowa1=22.5835a2=33.6015a3=46.6433a4=68.4980a5=75.0978these are switching angles for modulation Index of 0.85 optimized using Newton-raphson Methodoptimizing program is there in my file exchange</p>selective harmonic elimination,99,2,2,0,117,selective harmonic elimination implement bridge converterbefore run enter follow parameter command windowa switching angle modulation index optimize newton raphson program file harmonic elimination,"['selective', 'harmonic', 'elimination', 'implement', 'bridge', 'converterbefore', 'run', 'enter', 'follow', 'parameter', 'command', 'windowa', 'switching', 'angle', 'modulation', 'index', 'optimize', 'newton', 'raphson', 'program', 'file', 'harmonic', 'elimination']",0
971,44321,"Mdeling and Simulation of Vector Control System of Alternating Current Motor Based on Matlab<p>Based on analyzing the mathematical model of asynchronousmotor and the principle of vector control, themodules for the alternating current asynchronous motor, the inverter, vector control, coordinate transformation, theflux observer, the speed regulation module and the current hysteresis PWM regulatorwere built respectively according to the modularization idea by using the SimPowerSystems modules in Matlab/Simulink. The function modules were then integrated, which composed of the simulationmodel for the vector control system of the rotormagnetic field oriented asynchronousmotor. The simulation results showed that the system had fast dynamic response to rotation speed, small steady state error and strong ability of anti load disturbance, which verified the feasibility and effectiveness ofthe vector control for the alternating currentmotor.</p>electric_motor_control,power_conversion_control,power_electronics_control,asynchronousmotor vector control modeling matlabsimulink simulat",115,11,4,0,124,mdeling vector control alternate current motor base matlabbased analyze mathematical principle vector control themodules alternate current asynchronous motor inverter vector control coordinate transformation theflux observer speed regulation module current hysteresis pwm regulatorwere build respectively accord modularization idea simpowersystems module function module integrate composed vector control rotormagnetic field orient result show fast dynamic response rotation speed small steady state error strong ability anti load disturbance verify feasibility effectiveness ofthe vector control alternate currentmotor electric motor controlpower conversion controlpower electronics vector control,"['mdeling', 'vector', 'control', 'alternate', 'current', 'motor', 'base', 'matlabbased', 'analyze', 'mathematical', 'principle', 'vector', 'control', 'themodules', 'alternate', 'current', 'asynchronous', 'motor', 'inverter', 'vector', 'control', 'coordinate', 'transformation', 'theflux', 'observer', 'speed', 'regulation', 'module', 'current', 'hysteresis', 'pwm', 'regulatorwere', 'build', 'respectively', 'accord', 'modularization', 'idea', 'simpowersystems', 'module', 'function', 'module', 'integrate', 'composed', 'vector', 'control', 'rotormagnetic', 'field', 'orient', 'result', 'show', 'fast', 'dynamic', 'response', 'rotation', 'speed', 'small', 'steady', 'state', 'error', 'strong', 'ability', 'anti', 'load', 'disturbance', 'verify', 'feasibility', 'effectiveness', 'ofthe', 'vector', 'control', 'alternate', 'currentmotor', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'vector', 'control']",3
972,44322,"Multi Step Waveform using Series Connection of Two Inverter Circuits<p>This model presents series connection of two single phase bridge inverters to generate multi-step waveform. Multi-step helps to reduce the harmonics.</p>bridge inverter,cascaded inverter,control system,industrial electronics,inverter,machine control,motor control,multi step waveform,power electronics,power electronics control,power inverters,power system,simulations,single phase inverter",38,2,2,0,47,multi step waveform series connection two inverter circuitsthis present series connection two single phase bridge inverter generate multi step waveform multi step help reduce harmonic bridge invertercontrol controlmotor controlmulti step waveformpower electronics controlpower inverterspower phase inverter,"['multi', 'step', 'waveform', 'series', 'connection', 'two', 'inverter', 'circuitsthis', 'present', 'series', 'connection', 'two', 'single', 'phase', 'bridge', 'inverter', 'generate', 'multi', 'step', 'waveform', 'multi', 'step', 'help', 'reduce', 'harmonic', 'bridge', 'invertercontrol', 'controlmotor', 'controlmulti', 'step', 'waveformpower', 'electronics', 'controlpower', 'inverterspower', 'phase', 'inverter']",3
973,44327,"Model-in-the-Loop for Embedded System Test - Works best with MATLAB version of 2008. A case study.  <p>Developed between 2006 - 2008 by Justyna Zander and Abel Marrero Perez at Fraunhofer Institute FOKUS, Berlin, Germany. Supervised by Ina Schieferdecker.The main contribution of this thesis applies to the software built into embedded systems. In particular, it refers to the software models from which systems are built. An approach to functional black-box testing based on the system models by providing a test model is developed. It is contrasted with the currently applied test methods that form dedicated solutions, usually specialized in a concrete testing context. The test framework proposed herewith, is realized in the MATLABÂ®/SimulinkÂ®/StateflowÂ® environment and is called Model-in-the-Loop for Embedded System Test (MiLEST).The developed signal-feature - oriented paradigm allows the abstract description of signals and their properties. It addresses the problem of missing reference signal flows as well as the issue of systematic test data selection. Numerous signal features are identified. Furthermore, predefined test patterns help build hierarchical test specifications, which enables a construction of the test specification along modular divide-and-conquer principles. The processing of both discrete and continuous signals is possible, so that the hybrid behavior of embedded systems can be addressed. The testing with MiLEST starts in the requirements phase and goes down to the test execution level. The essential steps in this test process are automated, such as the test data generation and test evaluation to name the most important.Three case studies based on adaptive cruise control are presented. These examples correspond to component, component-in-the-loop, and integration level tests. Moreover, the quality of the test specification process, the test model, and the resulting test cases is investigated in depth. The resulting test quality metrics are applied during the test design and test execution phases so as to assess whether and how the proposed method is more effective than established techniques.Available on GitHub: <a href=""https://github.com/justynazander/MiLEST"">https://github.com/justynazander/MiLEST</a></p>embedded system,milest,model based testing,model in the loop,simulink based testing,speed control,test,test harness,verification",1780,185,8,0,2067,loop embed test work best version case study develop justyna zander abel marrero perez fraunhofer institute fokus berlin germany supervise ina schieferdecker main contribution thesis applies software build embed particular refers software build approach functional black box test base provide test develop contrast currently apply test method form dedicate solution usually specialize concrete test context test framework propose herewith realize stateflow environment call loop embed test milest develop signal feature orient paradigm allow abstract description signal property address problem miss reference signal flow well issue systematic test data selection numerous signal feature identify furthermore predefined test pattern help build hierarchical test specification enable construction test specification along modular divide conquer principle process discrete continuous signal possible hybrid behavior embed address test milest start requirement phase test execution level essential step test process automate test data generation test evaluation name important three case study base adaptive cruise control present example correspond component component loop integration level test moreover quality test specification process test result test case investigate depth result test quality metric applied test design test execution phase ass whether propose method effective establish technique available github github com justynazander milestembedded base testingmodel base testingspeed controltesttest,"['loop', 'embed', 'test', 'work', 'best', 'version', 'case', 'study', 'develop', 'justyna', 'zander', 'abel', 'marrero', 'perez', 'fraunhofer', 'institute', 'fokus', 'berlin', 'germany', 'supervise', 'ina', 'schieferdecker', 'main', 'contribution', 'thesis', 'applies', 'software', 'build', 'embed', 'particular', 'refers', 'software', 'build', 'approach', 'functional', 'black', 'box', 'test', 'base', 'provide', 'test', 'develop', 'contrast', 'currently', 'apply', 'test', 'method', 'form', 'dedicate', 'solution', 'usually', 'specialize', 'concrete', 'test', 'context', 'test', 'framework', 'propose', 'herewith', 'realize', 'stateflow', 'environment', 'call', 'loop', 'embed', 'test', 'milest', 'develop', 'signal', 'feature', 'orient', 'paradigm', 'allow', 'abstract', 'description', 'signal', 'property', 'address', 'problem', 'miss', 'reference', 'signal', 'flow', 'well', 'issue', 'systematic', 'test', 'data', 'selection', 'numerous', 'signal', 'feature', 'identify', 'furthermore', 'predefined', 'test', 'pattern', 'help', 'build', 'hierarchical', 'test', 'specification', 'enable', 'construction', 'test', 'specification', 'along', 'modular', 'divide', 'conquer', 'principle', 'process', 'discrete', 'continuous', 'signal', 'possible', 'hybrid', 'behavior', 'embed', 'address', 'test', 'milest', 'start', 'requirement', 'phase', 'test', 'execution', 'level', 'essential', 'step', 'test', 'process', 'automate', 'test', 'data', 'generation', 'test', 'evaluation', 'name', 'important', 'three', 'case', 'study', 'base', 'adaptive', 'cruise', 'control', 'present', 'example', 'correspond', 'component', 'component', 'loop', 'integration', 'level', 'test', 'moreover', 'quality', 'test', 'specification', 'process', 'test', 'result', 'test', 'case', 'investigate', 'depth', 'result', 'test', 'quality', 'metric', 'applied', 'test', 'design', 'test', 'execution', 'phase', 'ass', 'whether', 'propose', 'method', 'effective', 'establish', 'technique', 'available', 'github', 'github', 'com', 'justynazander', 'milestembedded', 'base', 'testingmodel', 'base', 'testingspeed', 'controltesttest']",0
974,44346,"Model-in-the-Loop for Embedded System Test (MiLEST) - For MATLAB of 2008<p>Developed between 2005 and 2008 by Justyna Zander and Abel Marrero Perez, and Xuezheng Xiong at Fraunhofer Institute FOKUS, Berlin, Germany. Supervised by Ina Schieferdecker.The main contribution of this thesis applies to the software built into embedded systems. In particular, it refers to the software models from which systems are built. An approach to functional black-box testing based on the system models by providing a test model is developed. It is contrasted with the currently applied test methods that form dedicated solutions, usually specialized in a concrete testing context. The test framework proposed herewith, is realized in the MATLABÂ®/SimulinkÂ®/StateflowÂ® [MathML, MathSL, MathSF] environment and is called Model-in-the-Loop for Embedded System Test (MiLEST).The developed signal-feature - oriented paradigm allows the abstract description of signals and their properties. It addresses the problem of missing reference signal flows as well as the issue of systematic test data selection. Numerous signal features are identified. Furthermore, predefined test patterns help build hierarchical test specifications, which enables a construction of the test specification along modular divide-and-conquer principles. The processing of both discrete and continuous signals is possible, so that the hybrid behavior of embedded systems can be addressed. The testing with MiLEST starts in the requirements phase and goes down to the test execution level. The essential steps in this test process are automated, such as the test data generation and test evaluation to name the most important.Three case studies based on adaptive cruise control are presented. These examples correspond to component, component-in-the-loop, and integration level tests. Moreover, the quality of the test specification process, the test model, and the resulting test cases is investigated in depth. The resulting test quality metrics are applied during the test design and test execution phases so as to assess whether and how the proposed method is more effective than established techniques.Available on GitHub: <a href=""https://github.com/justynazander/MiLEST"">https://github.com/justynazander/MiLEST</a></p>acc,embedded systems,modeling,test,verification",172196,19622,8,0,231672,loop embed test milest develop justyna zander abel marrero perez xuezheng xiong fraunhofer institute fokus berlin germany supervise ina schieferdecker main contribution thesis applies software build embed particular refers software build approach functional black box test base provide test develop contrast currently apply test method form dedicate solution usually specialize concrete test context test framework propose herewith realize stateflow mathml mathsl mathsf environment call loop embed test milest develop signal feature orient paradigm allow abstract description signal property address problem miss reference signal flow well issue systematic test data selection numerous signal feature identify furthermore predefined test pattern help build hierarchical test specification enable construction test specification along modular divide conquer principle process discrete continuous signal possible hybrid behavior embed address test milest start requirement phase test execution level essential step test process automate test data generation test evaluation name important three case study base adaptive cruise control present example correspond component component loop integration level test moreover quality test specification process test result test case investigate depth result test quality metric applied test design test execution phase ass whether propose method effective establish technique available github github com justynazander,"['loop', 'embed', 'test', 'milest', 'develop', 'justyna', 'zander', 'abel', 'marrero', 'perez', 'xuezheng', 'xiong', 'fraunhofer', 'institute', 'fokus', 'berlin', 'germany', 'supervise', 'ina', 'schieferdecker', 'main', 'contribution', 'thesis', 'applies', 'software', 'build', 'embed', 'particular', 'refers', 'software', 'build', 'approach', 'functional', 'black', 'box', 'test', 'base', 'provide', 'test', 'develop', 'contrast', 'currently', 'apply', 'test', 'method', 'form', 'dedicate', 'solution', 'usually', 'specialize', 'concrete', 'test', 'context', 'test', 'framework', 'propose', 'herewith', 'realize', 'stateflow', 'mathml', 'mathsl', 'mathsf', 'environment', 'call', 'loop', 'embed', 'test', 'milest', 'develop', 'signal', 'feature', 'orient', 'paradigm', 'allow', 'abstract', 'description', 'signal', 'property', 'address', 'problem', 'miss', 'reference', 'signal', 'flow', 'well', 'issue', 'systematic', 'test', 'data', 'selection', 'numerous', 'signal', 'feature', 'identify', 'furthermore', 'predefined', 'test', 'pattern', 'help', 'build', 'hierarchical', 'test', 'specification', 'enable', 'construction', 'test', 'specification', 'along', 'modular', 'divide', 'conquer', 'principle', 'process', 'discrete', 'continuous', 'signal', 'possible', 'hybrid', 'behavior', 'embed', 'address', 'test', 'milest', 'start', 'requirement', 'phase', 'test', 'execution', 'level', 'essential', 'step', 'test', 'process', 'automate', 'test', 'data', 'generation', 'test', 'evaluation', 'name', 'important', 'three', 'case', 'study', 'base', 'adaptive', 'cruise', 'control', 'present', 'example', 'correspond', 'component', 'component', 'loop', 'integration', 'level', 'test', 'moreover', 'quality', 'test', 'specification', 'process', 'test', 'result', 'test', 'case', 'investigate', 'depth', 'result', 'test', 'quality', 'metric', 'applied', 'test', 'design', 'test', 'execution', 'phase', 'ass', 'whether', 'propose', 'method', 'effective', 'establish', 'technique', 'available', 'github', 'github', 'com', 'justynazander']",0
975,44364,simulating simu link model for a electrical transient network<p>simulating simu link model for a electrical transient network without circuit breaker.. breaker can be added later..</p>electrical transients,16,0,1,0,13,simu link electrical transient simu link electrical transient network without circuit breaker breaker add later electrical transient,"['simu', 'link', 'electrical', 'transient', 'simu', 'link', 'electrical', 'transient', 'network', 'without', 'circuit', 'breaker', 'breaker', 'add', 'later', 'electrical', 'transient']",0
976,44416,"This demo shows how to design, analyze and tune Model Reference Adaptive Controller (MRAC)<p>Objective of this example is to demonstrate how to design and model adaptive controller, tune and analyse its performance using SimulinkÂ®. For this example we have used direct adaptive method called Model Reference Adaptive Controller (MRAC). There are three main elements of this model: Reference Model, Plant Model and Adaptive Controller. Each element and its working is explained in ""Adaptive Controller Example.pdf"", part of attached folder. </p>adaptive control,adaptive control example using simulink,adaptive control using simulink,model reference adaptive control,mrac",41,4,2,0,44,demo show design analyze tune reference adaptive controller mrac objective example demonstrate design adaptive controller tune analyse performance example direct adaptive method call reference adaptive controller mrac three main element reference plant adaptive controller element work explain adaptive controller example pdf part attach folder adaptive controladaptive control example control reference adaptive controlmrac,"['demo', 'show', 'design', 'analyze', 'tune', 'reference', 'adaptive', 'controller', 'mrac', 'objective', 'example', 'demonstrate', 'design', 'adaptive', 'controller', 'tune', 'analyse', 'performance', 'example', 'direct', 'adaptive', 'method', 'call', 'reference', 'adaptive', 'controller', 'mrac', 'three', 'main', 'element', 'reference', 'plant', 'adaptive', 'controller', 'element', 'work', 'explain', 'adaptive', 'controller', 'example', 'pdf', 'part', 'attach', 'folder', 'adaptive', 'controladaptive', 'control', 'example', 'control', 'reference', 'adaptive', 'controlmrac']",7
977,44421,"This is a simple model of a 2 stiff linked frictionless robot<p>The robot is based on a simple model of a frictionless system.It's got a parameters script (a .m) and a model; you can change the parameters if you want.In the parameters script you can change the frequencies used in the reference.</p>robotics,control,robot,simulation,simulink",74,3,2,0,101,simple stiff link frictionless robotthe robot base simple frictionless get parameter script change parameter want parameter script change frequency reference,"['simple', 'stiff', 'link', 'frictionless', 'robotthe', 'robot', 'base', 'simple', 'frictionless', 'get', 'parameter', 'script', 'change', 'parameter', 'want', 'parameter', 'script', 'change', 'frequency', 'reference']",7
978,44476,"this is the screen shot of source current after improving using hysteresis current control<p>1.why there is a spike at every peak of current wave form? how to eliminate this?2.actual current before filtering is around 6 amps peak , but after filtering it is giving 8.5 amps ,even after changing KP,KI values in PI controller reference value is not coming down... can anyone help me ?? does anyone have 3-level hysteresis control simulation ? if so share it here</p>hysteresis current control,shunt active power filter",187,7,3,0,228,screen shoot source current improve hysteresis current control spike every peak current wave form eliminate actual current filtering around amp peak filter give amp even change kpki value controller reference value come anyone help anyone level hysteresis control share herehysteresis current controlshunt active power filter,"['screen', 'shoot', 'source', 'current', 'improve', 'hysteresis', 'current', 'control', 'spike', 'every', 'peak', 'current', 'wave', 'form', 'eliminate', 'actual', 'current', 'filtering', 'around', 'amp', 'peak', 'filter', 'give', 'amp', 'even', 'change', 'kpki', 'value', 'controller', 'reference', 'value', 'come', 'anyone', 'help', 'anyone', 'level', 'hysteresis', 'control', 'share', 'herehysteresis', 'current', 'controlshunt', 'active', 'power', 'filter']",4
979,44513,"Type of dc Power supplies<p>The flyback converter is used mostly in applications of high output voltage at relatively low power. </p>dc power supplies,flyback converter,matlabsimulink developer,power electronics designer by using matlabsimulink software,power_conversion_control,power_electronics_control",22,0,1,0,26,type power suppliesthe flyback converter mostly application high output voltage relatively low power power suppliesflyback developerpower electronics designer softwarepower conversion controlpower electronics control,"['type', 'power', 'suppliesthe', 'flyback', 'converter', 'mostly', 'application', 'high', 'output', 'voltage', 'relatively', 'low', 'power', 'power', 'suppliesflyback', 'developerpower', 'electronics', 'designer', 'softwarepower', 'conversion', 'controlpower', 'electronics', 'control']",1
980,44525,it's one of single phase buck bost inverter<p>it's one of single phase buck bost inverter</p>inverter,139,6,4,0,149,one single phase buck bost inverterit one single phase buck bost,"['one', 'single', 'phase', 'buck', 'bost', 'inverterit', 'one', 'single', 'phase', 'buck', 'bost']",3
981,44588,"Use this module to calculate the RMS value of an input signals according to the IEC norm<p>This simple module calculate the RMS value of an input signal (also measured)by using the deffined equation in the IEC norm. </p>signal processing,simulink,statistics,system identification",100,3,3,0,103,module calculate rms value input signal accord iec normthis simple module calculate rms value input signal also measure deffined equation iec norm signal identification,"['module', 'calculate', 'rms', 'value', 'input', 'signal', 'accord', 'iec', 'normthis', 'simple', 'module', 'calculate', 'rms', 'value', 'input', 'signal', 'also', 'measure', 'deffined', 'equation', 'iec', 'norm', 'signal', 'identification']",0
982,44612,"Single phase hysteresis  current controllers have traditionally been implemented using  two  level  <p>This paper presents a  simple,  low  cost,  and  effective  technique  to allow  single  phase  hysteresis  current regulation to be implemented as  three level modulation process. This achieves a substantial reduction in the magnitude and variation of the switching frequency, thus improving efficiency, while retaining all of the advantages identified with hysteresis current control. LCL filters have good performances in current ripple attenuations, but they introduce a resonance frequency in the system. The operation and control of the inverter are described, together with simulation and experimental results. The proposed controller has been verified in simulation using the Simulink package in Matlab. An analysis and design procedure of output LCL-filter for single-phase grid-connected Photovoltaic (PV) inverter system is presented in this paper. A comparison between the designed LCL-filter and L-filter based single-phase grid-connected PV inverter system is carried out. The comparison results are given to validate the theoretical analysis and effectiveness of filters.</p>grid connected inverter,hysteresis controllerpv invertercurrent control,power_conversion_control,power_electronics_control",32,2,2,0,38,single phase hysteresis current controller traditionally implement two level paper present simple low cost effective technique allow single phase hysteresis current regulation implement three level modulation process achieve substantial reduction magnitude variation switch frequency thus improve efficiency retain advantage identify hysteresis current control lcl filter good performance current ripple attenuation introduce resonance frequency operation control inverter describe together experimental result propose controller verify package analysis design procedure output lcl filter single phase grid connect photovoltaic inverter present paper comparison design lcl filter filter base single phase grid connect inverter carry comparison result give validate theoretical analysis effectiveness filter grid connect controllerpv invertercurrent controlpower conversion controlpower electronics control,"['single', 'phase', 'hysteresis', 'current', 'controller', 'traditionally', 'implement', 'two', 'level', 'paper', 'present', 'simple', 'low', 'cost', 'effective', 'technique', 'allow', 'single', 'phase', 'hysteresis', 'current', 'regulation', 'implement', 'three', 'level', 'modulation', 'process', 'achieve', 'substantial', 'reduction', 'magnitude', 'variation', 'switch', 'frequency', 'thus', 'improve', 'efficiency', 'retain', 'advantage', 'identify', 'hysteresis', 'current', 'control', 'lcl', 'filter', 'good', 'performance', 'current', 'ripple', 'attenuation', 'introduce', 'resonance', 'frequency', 'operation', 'control', 'inverter', 'describe', 'together', 'experimental', 'result', 'propose', 'controller', 'verify', 'package', 'analysis', 'design', 'procedure', 'output', 'lcl', 'filter', 'single', 'phase', 'grid', 'connect', 'photovoltaic', 'inverter', 'present', 'paper', 'comparison', 'design', 'lcl', 'filter', 'filter', 'base', 'single', 'phase', 'grid', 'connect', 'inverter', 'carry', 'comparison', 'result', 'give', 'validate', 'theoretical', 'analysis', 'effectiveness', 'filter', 'grid', 'connect', 'controllerpv', 'invertercurrent', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
983,44623,"Tried using boolean logic but seemed to be wrong<p>Hi all,I've tried to implement constant boost control on a z-source inverter. However the output waveform does not seem to be correct.I've checked the gating signal individually and they seem logical. Wonder if anyone could help me out here?if I understand correctly CBC control requires:1. Normal PWM signal enclosed by 2 lines with peak values of the PWM signal2. Trigger all switches on(shoot-thru) when the triangle wave exceeds both the conditions in 1, else function as normal PWM.Your help and advises are greatly appreciated. </p>electric_motor_control,power_conversion_control,power_electronics_control,cbc,constant boost control,inverter,pwm,zsource",80,1,2,0,90,try boolean logic seem wronghi alli tried implement constant boost control source inverter however output waveform seem correct check gating signal individually seem logical wonder anyone could help understand correctly cbc control require normal pwm signal enclose line peak value pwm signal trigger switch shoot thru triangle wave exceeds condition else function normal pwm help advise greatly appreciate electric motor controlpower conversion controlpower electronics boost,"['try', 'boolean', 'logic', 'seem', 'wronghi', 'alli', 'tried', 'implement', 'constant', 'boost', 'control', 'source', 'inverter', 'however', 'output', 'waveform', 'seem', 'correct', 'check', 'gating', 'signal', 'individually', 'seem', 'logical', 'wonder', 'anyone', 'could', 'help', 'understand', 'correctly', 'cbc', 'control', 'require', 'normal', 'pwm', 'signal', 'enclose', 'line', 'peak', 'value', 'pwm', 'signal', 'trigger', 'switch', 'shoot', 'thru', 'triangle', 'wave', 'exceeds', 'condition', 'else', 'function', 'normal', 'pwm', 'help', 'advise', 'greatly', 'appreciate', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'boost']",4
984,44641,"Study of simple diode bridge circuit with RL load<p>Consider an ideal single-phase voltage source supplying a rectifier load as givenin Fig. 1.6. Given a supply voltage, v(t) = 230p2 sin !t and source impedance is negligible,draw the voltage and current waveforms. Express current using Fourier series. Based on thatdetermine the following.1. Plot instantaneous power p(t).2. Plot components of p(t) i.e. pactive(t); preactive(t).3. Compute average real power, reactive power, apparent power, power factor, displacementfactor (or fundamental power factor).4. Comment upon the results in terms of VA rating and power output.Want to measure power, P, Q, pf.</p>diode bridge circuit",11,0,1,0,12,study simple diode bridge circuit loadconsider ideal single phase voltage source supply rectifier load givenin fig give supply voltage sin source impedance negligibledraw voltage current waveform express current fourier series base thatdetermine follow plot instantaneous power plot component pactive preactive compute average real power reactive power apparent power power factor fundamental power factor comment upon result term rating power output want measure power diode bridge circuit,"['study', 'simple', 'diode', 'bridge', 'circuit', 'loadconsider', 'ideal', 'single', 'phase', 'voltage', 'source', 'supply', 'rectifier', 'load', 'givenin', 'fig', 'give', 'supply', 'voltage', 'sin', 'source', 'impedance', 'negligibledraw', 'voltage', 'current', 'waveform', 'express', 'current', 'fourier', 'series', 'base', 'thatdetermine', 'follow', 'plot', 'instantaneous', 'power', 'plot', 'component', 'pactive', 'preactive', 'compute', 'average', 'real', 'power', 'reactive', 'power', 'apparent', 'power', 'power', 'factor', 'fundamental', 'power', 'factor', 'comment', 'upon', 'result', 'term', 'rating', 'power', 'output', 'want', 'measure', 'power', 'diode', 'bridge', 'circuit']",3
985,44661,"Simulation of the Bellagio Fountain (100 nozzles)<p>This fountain simulation is run through FountainMovie.m. See the following presentation for additional details on the project to simulate the Bellagio fountains.<a href=""http://youtu.be/HjGvwS9WyuUThe"">http://youtu.be/HjGvwS9WyuUThe</a> student version of MATLAB may not work because of the number of control blocks involved in the Simulink model.</p>pick of the week,potw,bellagio,dynamic simulation,fountain,hydrodynamics",1935,101,2,0,2239,bellagio fountain nozzle fountain run fountainmovie see follow presentation additional detail project bellagio fountains http youtu hjgvws wyuuthe student version may work number control block involve pick,"['bellagio', 'fountain', 'nozzle', 'fountain', 'run', 'fountainmovie', 'see', 'follow', 'presentation', 'additional', 'detail', 'project', 'bellagio', 'fountains', 'http', 'youtu', 'hjgvws', 'wyuuthe', 'student', 'version', 'may', 'work', 'number', 'control', 'block', 'involve', 'pick']",0
986,44666,"three phase Space vector modulation using simulink <p>Space Vector Modulation for Three leg Two level inverter</p>ac motor,converter,induction motor,inverter,mathematical modeling,pwm techniques,simulink,space vector,space vector modulation,speed control,svm,svpwm,three phase inverter,three phase svm",56,4,2,0,64,three phase space vector modulation space vector modulation three leg two level inverterac modelingpwm vectorspace vector modulationspeed phase inverterthree phase svm,"['three', 'phase', 'space', 'vector', 'modulation', 'space', 'vector', 'modulation', 'three', 'leg', 'two', 'level', 'inverterac', 'modelingpwm', 'vectorspace', 'vector', 'modulationspeed', 'phase', 'inverterthree', 'phase', 'svm']",3
987,44676,"DC-AC PWM inverter <p>This model demonstrates a DC-AC converter. 3 leg Mosfet operated inverter is constructed . Can be used to demonstrate the relationship of input DC, output voltage, modulation index , filter selection and switching frequency.3rd harmonic injection features</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,pwm,simpower,electric spring,kalai",27,1,2,0,26,pwm inverter demonstrate converter leg mosfet operate inverter construct used demonstrate relationship input output voltage modulation index filter selection switch frequency harmonic injection motor controlpower conversion controlpower electronics springkalai,"['pwm', 'inverter', 'demonstrate', 'converter', 'leg', 'mosfet', 'operate', 'inverter', 'construct', 'used', 'demonstrate', 'relationship', 'input', 'output', 'voltage', 'modulation', 'index', 'filter', 'selection', 'switch', 'frequency', 'harmonic', 'injection', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'springkalai']",1
988,44677,"Active Heating of During Automotive Start-up for Pollution Reduction<p>Project Presentation: <a href=""http://youtu.be/YOYCZeNNbsgWith"">http://youtu.be/YOYCZeNNbsgWith</a> the automobile becoming an ever-growing part of everyday life, air pollution and its major health impacts are becoming a growing concern. According to the World Health Organization, âurban outdoor air pollution is estimated to cause 1.3 million deaths worldwide per year.â  The quality of life for infants, the elderly, and those already suffering from respiratory diseases is severely impacted when high levels of air pollution are experienced. Beyond the detrimental impacts to human health the EPA points out that, ozone, which can be created by car emissions, âis also responsible for several billion dollars of agricultural crop yield loss in the U.S. each year.â  In order to potentially save millions of lives and save billions of dollars our team has endeavored to apply process control techniques to help solve the problem of excess air pollution during cold starts of an automobile. When a car starts âcoldâ, or at ambient temperature, it takes a while for the catalytic converter to reach its light-off temperature, the temperature at which the pollutants in the exhaust react significantly to form less harmful substances. During catalytic warm up, toxic pollutants exit with the exhaust at high rates. Our team proposes using a heating element to heat the catalytic converter up faster so that less deadly pollutants enter the atmosphere.Experimental MethodsTheory We modeled the catalytic converter dynamics using Simulink and a MatLab S-Function. In designing the model, we made several simplifying assumptions. First, we assumed that the catalytic converter could be modeled as a CSTR, which allowed us to treat the temperature of the converter as uniform rather than accounting for temperature change along its length. We also simplified the reaction term by assuming that the reaction was first order and that the only reaction was the conversion of carbon monoxide, the dominant pollutant, to carbon dioxide in the presence of a platinum catalyst. Conduction between the catalyst particles and the converter body was assumed to be fast such that the temperature of the catalyst and converter body would be equivalent. Heat conduction to other parts of the car from the catalytic converter was ignored, and we assumed that the total heat transfer in the catalytic converter could be modeled using approximate overall heat transfer coefficients, UAinside and UAoutside. Finally, we assumed that the electrical power being sent to the converter was converted completely into a heat source, Q. With these simplifications, we determined transient energy and species balances that describe the changes in catalytic converter temperature, TC, concentration of CO in the exiting exhaust, CCO, and exiting exhaust temperature TÂ¬E. The balances are shown in Equations 1, 2, and 3, where q is the exhaust flow rate and V is the volume of the catalytic converter.(âT_C)/ât=1/mCp[UA_inside (T_E-T_C )+UA_outside (T_A-T_C )+Q](1)(âC_CO)/ât=q/V (C_(CO,0)-C_CO )-k_0 e^(-E_a/(RT_C )) C_CO(2)(âT_E)/ât=1/(ÏCp_CO V)[UA_inside (T_C-T_E )+ÎH_rxn k_0 ãe^(-E_a/(RT_C )) Cã_CO V+ÏCp_CO q(T_F-T_E)](3)We put these balances into an S-Function in Simulink to solve the differential equations. Using the Simulink model, we then did a doublet test to determine guess values for PI controller constants, which we then tuned to best follow set point changes.</p>active heating,catalytic converter,pollution,transient reactor,power_conversion_control,power_electronics_control",37,0,1,0,35,active heating automotive start pollution presentation http youtu yoyczennbsgwith automobile become ever grow part everyday life air pollution major health impact become grow concern accord world health organization urban outdoor air pollution estimate cause million death worldwide per year quality life infant elderly already suffer respiratory disease severely impact high level air pollution experience beyond detrimental impact human health epa point ozone create car emission also responsible several billion dollar agricultural crop yield loss year order potentially save million life save billion dollar team endeavor apply process control techniques help solve problem excess air pollution cold start automobile car start cold ambient temperature take catalytic converter reach light temperature temperature pollutant exhaust react significantly form less harmful substance catalytic warm toxic pollutant exit exhaust high rate team propose heat element heat catalytic converter faster less deadly pollutant enter atmosphere experimental methodstheory catalytic converter dynamic function design make several simplify assumption first assume catalytic converter could cstr allow treat temperature converter uniform rather accounting temperature change along length also simplify reaction term assume reaction first order reaction conversion carbon monoxide dominant pollutant carbon dioxide presence platinum catalyst conduction catalyst particle converter body assume fast temperature catalyst converter body would equivalent heat conduction part car catalytic converter ignore assumed total heat transfer catalytic converter could approximate overall heat transfer coefficient uainside uaoutside finally assume electrical power send converter convert completely heat source simplification determine transient energy specie balance describe change catalytic converter temperature concentration exit exhaust cco exit exhaust temperature balance show equation exhaust flow rate volume catalytic converter mcp inside outside Ïcp inside rxn Ïcp put balance function solve differential equation doublet test determine guess value controller constant tune best follow set point change active reactorpower conversion controlpower electronics control,"['active', 'heating', 'automotive', 'start', 'pollution', 'presentation', 'http', 'youtu', 'yoyczennbsgwith', 'automobile', 'become', 'ever', 'grow', 'part', 'everyday', 'life', 'air', 'pollution', 'major', 'health', 'impact', 'become', 'grow', 'concern', 'accord', 'world', 'health', 'organization', 'urban', 'outdoor', 'air', 'pollution', 'estimate', 'cause', 'million', 'death', 'worldwide', 'per', 'year', 'quality', 'life', 'infant', 'elderly', 'already', 'suffer', 'respiratory', 'disease', 'severely', 'impact', 'high', 'level', 'air', 'pollution', 'experience', 'beyond', 'detrimental', 'impact', 'human', 'health', 'epa', 'point', 'ozone', 'create', 'car', 'emission', 'also', 'responsible', 'several', 'billion', 'dollar', 'agricultural', 'crop', 'yield', 'loss', 'year', 'order', 'potentially', 'save', 'million', 'life', 'save', 'billion', 'dollar', 'team', 'endeavor', 'apply', 'process', 'control', 'techniques', 'help', 'solve', 'problem', 'excess', 'air', 'pollution', 'cold', 'start', 'automobile', 'car', 'start', 'cold', 'ambient', 'temperature', 'take', 'catalytic', 'converter', 'reach', 'light', 'temperature', 'temperature', 'pollutant', 'exhaust', 'react', 'significantly', 'form', 'less', 'harmful', 'substance', 'catalytic', 'warm', 'toxic', 'pollutant', 'exit', 'exhaust', 'high', 'rate', 'team', 'propose', 'heat', 'element', 'heat', 'catalytic', 'converter', 'faster', 'less', 'deadly', 'pollutant', 'enter', 'atmosphere', 'experimental', 'methodstheory', 'catalytic', 'converter', 'dynamic', 'function', 'design', 'make', 'several', 'simplify', 'assumption', 'first', 'assume', 'catalytic', 'converter', 'could', 'cstr', 'allow', 'treat', 'temperature', 'converter', 'uniform', 'rather', 'accounting', 'temperature', 'change', 'along', 'length', 'also', 'simplify', 'reaction', 'term', 'assume', 'reaction', 'first', 'order', 'reaction', 'conversion', 'carbon', 'monoxide', 'dominant', 'pollutant', 'carbon', 'dioxide', 'presence', 'platinum', 'catalyst', 'conduction', 'catalyst', 'particle', 'converter', 'body', 'assume', 'fast', 'temperature', 'catalyst', 'converter', 'body', 'would', 'equivalent', 'heat', 'conduction', 'part', 'car', 'catalytic', 'converter', 'ignore', 'assumed', 'total', 'heat', 'transfer', 'catalytic', 'converter', 'could', 'approximate', 'overall', 'heat', 'transfer', 'coefficient', 'uainside', 'uaoutside', 'finally', 'assume', 'electrical', 'power', 'send', 'converter', 'convert', 'completely', 'heat', 'source', 'simplification', 'determine', 'transient', 'energy', 'specie', 'balance', 'describe', 'change', 'catalytic', 'converter', 'temperature', 'concentration', 'exit', 'exhaust', 'cco', 'exit', 'exhaust', 'temperature', 'balance', 'show', 'equation', 'exhaust', 'flow', 'rate', 'volume', 'catalytic', 'converter', 'mcp', 'inside', 'outside', 'Ïcp', 'inside', 'rxn', 'Ïcp', 'put', 'balance', 'function', 'solve', 'differential', 'equation', 'doublet', 'test', 'determine', 'guess', 'value', 'controller', 'constant', 'tune', 'best', 'follow', 'set', 'point', 'change', 'active', 'reactorpower', 'conversion', 'controlpower', 'electronics', 'control']",5
989,44679,"Effect of a spring constant on travel and mechanical efficiency<p><a href=""http://www.youtube.com/watch?v=BKGvEKk1nkQ&amp;feature=share&amp;list=PLLBUgWXdTBDhUyN1Kur1XbDG4p7W9OKom&amp;index=8Our"">http://www.youtube.com/watch?v=BKGvEKk1nkQ&amp;feature=share&amp;list=PLLBUgWXdTBDhUyN1Kur1XbDG4p7W9OKom&amp;index=8Our</a> objective was to successfully simulate and optimize a prosthetic knee.  We developed a dynamic nonlinear model based on the prosthetic apparatus as shown in the Figure.  The spring constant of the prosthetic was optimized in order to achieve the highest overall efficiency of the leg.  Overall efficiency was determined by comparing the mechanical efficiency to the distance efficiency.  Mechanical efficiency was defined as the energy output over the work required to move the leg and the distance efficiency was defined as the distance our prosthetic moved over the desired distance of movement.  The model was successfully optimized with a spring constant value of 1.94 N/m. Method/ProcedureIn order to optimize the spring constant in our prosthetic leg, we began by creating a dynamic nonlinear model.  This involved determining mathematical relationships between body velocity and the force on our knee, which acted on the spring system inside our prosthetic.  This was then mathematically related to the kneeâs torque and angular velocity, which resulted in a model of the prosthetic legâs motion.  This model was entered into Simulink in which the overall velocity of our body became the input and the movement of our leg became the output.Within this dynamic model, one important factor was the spring constant (k) inside the prosthetic knee.  Our focus in this lab was to optimize the k value in a way that would maximize both the accuracy of each step and the mechanical efficiency of the prosthetic.  We simulated our model across a range of k values and compared the resulting distance efficiencies and mechanical efficiencies.  After determining our optimal k, we used this in our simulation to check its accuracy.</p>efficiency,prosthetic,spring constant",20,0,1,0,28,effect spring constant travel mechanical efficiencyhttp youtube com watch bkgvekk nkq amp feature share amp list kur xbdg okom amp index objective successfully optimize prosthetic knee develop dynamic nonlinear base prosthetic apparatus show figure spring constant prosthetic optimize order achieve high overall efficiency leg overall efficiency determine compare mechanical efficiency distance efficiency mechanical efficiency define energy output work require move leg distance efficiency define distance prosthetic move desired distance movement successfully optimize spring constant value method procedurein order optimize spring constant prosthetic leg begin create dynamic nonlinear involve determine mathematical relationship body velocity force knee act spring inside prosthetic mathematically related knee torque angular velocity result prosthetic leg motion enter overall velocity body become input movement leg become output within dynamic one important factor spring constant inside prosthetic knee focus lab optimize value way would maximize accuracy step mechanical efficiency prosthetic across range value compare result distance efficiency mechanical efficiency determine optimal check accuracy constant,"['effect', 'spring', 'constant', 'travel', 'mechanical', 'efficiencyhttp', 'youtube', 'com', 'watch', 'bkgvekk', 'nkq', 'amp', 'feature', 'share', 'amp', 'list', 'kur', 'xbdg', 'okom', 'amp', 'index', 'objective', 'successfully', 'optimize', 'prosthetic', 'knee', 'develop', 'dynamic', 'nonlinear', 'base', 'prosthetic', 'apparatus', 'show', 'figure', 'spring', 'constant', 'prosthetic', 'optimize', 'order', 'achieve', 'high', 'overall', 'efficiency', 'leg', 'overall', 'efficiency', 'determine', 'compare', 'mechanical', 'efficiency', 'distance', 'efficiency', 'mechanical', 'efficiency', 'define', 'energy', 'output', 'work', 'require', 'move', 'leg', 'distance', 'efficiency', 'define', 'distance', 'prosthetic', 'move', 'desired', 'distance', 'movement', 'successfully', 'optimize', 'spring', 'constant', 'value', 'method', 'procedurein', 'order', 'optimize', 'spring', 'constant', 'prosthetic', 'leg', 'begin', 'create', 'dynamic', 'nonlinear', 'involve', 'determine', 'mathematical', 'relationship', 'body', 'velocity', 'force', 'knee', 'act', 'spring', 'inside', 'prosthetic', 'mathematically', 'related', 'knee', 'torque', 'angular', 'velocity', 'result', 'prosthetic', 'leg', 'motion', 'enter', 'overall', 'velocity', 'body', 'become', 'input', 'movement', 'leg', 'become', 'output', 'within', 'dynamic', 'one', 'important', 'factor', 'spring', 'constant', 'inside', 'prosthetic', 'knee', 'focus', 'lab', 'optimize', 'value', 'way', 'would', 'maximize', 'accuracy', 'step', 'mechanical', 'efficiency', 'prosthetic', 'across', 'range', 'value', 'compare', 'result', 'distance', 'efficiency', 'mechanical', 'efficiency', 'determine', 'optimal', 'check', 'accuracy', 'constant']",5
990,44706,"Performing Buoy Detection Using Simulink and deploying to a BeagleBoard: Code and Tutorial<p>This submission provides the material for the webinar âUsing Buoy Detection in Simulinkâ. In this webinar, we demonstrate how to perform Buoy Detection using Simulink. This webinar has been designed for use in the AUVSI RoboBoat and RoboSub competitions, but applies to anyone looking to deploy MATLAB and Simulink Computer Vision Algorithms to a Desktop Computer and/or a supported microcomputer i.e. BeagleBoard-xM, BeagleBone Black.This webinar includes demonstrations and explanations to show you how to;â¢Perform buoy detection algorithm in Simulinkâ¢Manually tune buoy detection algorithms with Simulink and a Custom App (UPDATE: Use the built-in Color Thresholder App if using R2014a and above)â¢Automatically tune buoy detection algorithms using metricsâ¢Compare algorithms using metricsâ¢Deploy the algorithm to a low-cost target using the BeagleBoard as an exampleMaterials in this submission include;-Code used in the webinar -Tutorial explaining how to use the codeUPDATE 10/5/2015: - If you are using R2014a and above, use the built-in Color Thresholder App.- If you are looking to deploy computer vision algorithms to a desktop computer, check out the ""Getting Started Guide for AUVSI Foundation Competitions"" for examples and documentation:<a href=""http://www.mathworks.com/matlabcentral/fileexchange/47593-getting-started-guide-for-auvsi-foundation-competitions"">http://www.mathworks.com/matlabcentral/fileexchange/47593-getting-started-guide-for-auvsi-foundation-competitions</a></p>auvsi,beagleboard,buoy detection,code generation,computer vision,iarc,igvc,pandaboard,raspberry pi,roboboat,robosub,robotx,suas,thresholding",533,31,4,0,578,perform buoy detection deploy beagleboard code tutorialthis submission provide material webinar buoy detection webinar demonstrate perform buoy detection webinar design auvsi roboboat robosub competition apply anyone look deploy computer vision algorithms desktop computer support microcomputer beagleboard beaglebone black webinar include demonstration explanation show perform buoy detection algorithm tune buoy detection algorithm custom app update build color thresholder app automatically tune buoy detection algorithm metricscompare algorithm metricsdeploy algorithm low cost target beagleboard submission include code webinar tutorial explain codeupdate build color thresholder app look deploy computer vision algorithms desktop computer check get start guide auvsi foundation competition examples documentation http mathworks com matlabcentral fileexchange get start guide auvsi foundation detectioncode,"['perform', 'buoy', 'detection', 'deploy', 'beagleboard', 'code', 'tutorialthis', 'submission', 'provide', 'material', 'webinar', 'buoy', 'detection', 'webinar', 'demonstrate', 'perform', 'buoy', 'detection', 'webinar', 'design', 'auvsi', 'roboboat', 'robosub', 'competition', 'apply', 'anyone', 'look', 'deploy', 'computer', 'vision', 'algorithms', 'desktop', 'computer', 'support', 'microcomputer', 'beagleboard', 'beaglebone', 'black', 'webinar', 'include', 'demonstration', 'explanation', 'show', 'perform', 'buoy', 'detection', 'algorithm', 'tune', 'buoy', 'detection', 'algorithm', 'custom', 'app', 'update', 'build', 'color', 'thresholder', 'app', 'automatically', 'tune', 'buoy', 'detection', 'algorithm', 'metricscompare', 'algorithm', 'metricsdeploy', 'algorithm', 'low', 'cost', 'target', 'beagleboard', 'submission', 'include', 'code', 'webinar', 'tutorial', 'explain', 'codeupdate', 'build', 'color', 'thresholder', 'app', 'look', 'deploy', 'computer', 'vision', 'algorithms', 'desktop', 'computer', 'check', 'get', 'start', 'guide', 'auvsi', 'foundation', 'competition', 'examples', 'documentation', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'get', 'start', 'guide', 'auvsi', 'foundation', 'detectioncode']",5
991,44736,"AC to AC contoller<p>this file is an ac to ac controller.you can control the output by adjusting the firing angle of the SCR.</p>electric_motor_control,power_conversion_control,power_electronics_control,ac converter",28,3,2,0,24,contollerthis file controller control output adjust fire angle scr electric motor controlpower conversion controlpower electronics controlac converter,"['contollerthis', 'file', 'controller', 'control', 'output', 'adjust', 'fire', 'angle', 'scr', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'converter']",1
992,44739,"a model of dc motor in simulink<p>dc motor model in simulink</p>electric_motor_control,power_conversion_control,power_electronics_control,dc motor",15,0,1,0,18,motor motor motor controlpower conversion controlpower electronics controldc motor,"['motor', 'motor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motor']",6
993,44740,"simulation of dc dynamic braking in induction motor<p>DC dynamic braking is obtained when the stator of an induction motor running at a speed is connected to a dc supply.dc current flowing through the stator produces a stationary magnetic field.Motion of rotor in this field induces voltage in the rotor winding.Machine therefore works as a generator.Generated energy is dissipated in the rotor circuit resistance,thus giving dynamic braking.</p>induction motor,electric_motor_control,power_conversion_control,power_electronics_control",29,0,1,0,30,dynamic brake induction motordc dynamic braking obtain stator induction motor run speed connect supply current flow stator produce stationary magnetic field motion rotor field induces voltage rotor wind machine therefore work generator generate energy dissipate rotor circuit resistancethus give dynamic braking induction motorelectric motor controlpower conversion controlpower electronics control,"['dynamic', 'brake', 'induction', 'motordc', 'dynamic', 'braking', 'obtain', 'stator', 'induction', 'motor', 'run', 'speed', 'connect', 'supply', 'current', 'flow', 'stator', 'produce', 'stationary', 'magnetic', 'field', 'motion', 'rotor', 'field', 'induces', 'voltage', 'rotor', 'wind', 'machine', 'therefore', 'work', 'generator', 'generate', 'energy', 'dissipate', 'rotor', 'circuit', 'resistancethus', 'give', 'dynamic', 'braking', 'induction', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
994,44746,"Reactive Power Management of Mixed-Technology Wind Farms using SimPowerSystems<p>In this submission, three simulink models show how we manage reactive power when a wind turbine is connected to the grid</p>reactive power managementstatcom,wind farms",2288,99,8,0,2474,reactive power management mixed technology wind farm submission three show manage reactive power wind turbine connect gridreactive power farm,"['reactive', 'power', 'management', 'mixed', 'technology', 'wind', 'farm', 'submission', 'three', 'show', 'manage', 'reactive', 'power', 'wind', 'turbine', 'connect', 'gridreactive', 'power', 'farm']",4
995,44754,"reduce the speed of motor/reduce the speed<p>it is single phase cycloconverter used in many ways to control the frequency or rather would say reduce the frequency to control the speed of motor but here iam using only resistive load because my teacher only give me this project. To use simulink please change the solver type to ode23tb</p>electric_motor_control,power_electronics_control,power electronics",26,0,1,0,28,reduce speed motor reduce speedit single phase cycloconverter many way control frequency rather would say reduce frequency control speed motor iam resistive load teacher give project please change solver type ode tbelectric motor controlpower electronics controlpower electronics,"['reduce', 'speed', 'motor', 'reduce', 'speedit', 'single', 'phase', 'cycloconverter', 'many', 'way', 'control', 'frequency', 'rather', 'would', 'say', 'reduce', 'frequency', 'control', 'speed', 'motor', 'iam', 'resistive', 'load', 'teacher', 'give', 'project', 'please', 'change', 'solver', 'type', 'ode', 'tbelectric', 'motor', 'controlpower', 'electronics', 'controlpower', 'electronics']",3
996,44769,"This model describes how simulink blocks can be used to emulate an electronic circuit operation<p>Simulink consists of various libraries of different blocks. The Simulink block diagram environment has made it possible to emulate a system so that its behavior can be observed prior to practical implementation.</p>modeling,simulation,simulink",8,0,1,0,10,describes block emulate electronic circuit consist various different block block diagram environment make possible emulate behavior observe prior practical implementation,"['describes', 'block', 'emulate', 'electronic', 'circuit', 'consist', 'various', 'different', 'block', 'block', 'diagram', 'environment', 'make', 'possible', 'emulate', 'behavior', 'observe', 'prior', 'practical', 'implementation']",0
997,44787,"Space vector modulation of 3 Phase inverter<p>3 Phase inverter in this demonstration, uses space vector modulated PWM to generate the output voltage.Reference voltage vector converted in to dq rotating  phase. A matlab function is employed to determine the segment number and related ON-times(ti,t2,t0/2). Symmetrical switching method employed to minimize switching losses.SVM trajectory will be plotted at the completion of the simulation.</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,lookup table,svm,svpwm,md",99,6,4,0,121,space vector modulation phase inverter phase inverter demonstration space vector modulate pwm generate output voltage reference voltage vector convert rotate phase function employ determine segment number relate time tit symmetrical switch method employ minimize switching loss svm trajectory plot completion electric motor controlpower conversion controlpower electronics tablesvmsvpwmmd,"['space', 'vector', 'modulation', 'phase', 'inverter', 'phase', 'inverter', 'demonstration', 'space', 'vector', 'modulate', 'pwm', 'generate', 'output', 'voltage', 'reference', 'voltage', 'vector', 'convert', 'rotate', 'phase', 'function', 'employ', 'determine', 'segment', 'number', 'relate', 'time', 'tit', 'symmetrical', 'switch', 'method', 'employ', 'minimize', 'switching', 'loss', 'svm', 'trajectory', 'plot', 'completion', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'tablesvmsvpwmmd']",3
998,44818,shunt active power filter source current and load current not equal<p>can i know what is my problem ??why load current and source current not equal source current more higher than load current</p>shunt active power filter,353,21,7,0,431,shunt active power filter source current load current equalcan know problem load current source current equal source current high load currentshunt active power filter,"['shunt', 'active', 'power', 'filter', 'source', 'current', 'load', 'current', 'equalcan', 'know', 'problem', 'load', 'current', 'source', 'current', 'equal', 'source', 'current', 'high', 'load', 'currentshunt', 'active', 'power', 'filter']",3
999,44836,"Upgrade and improvement of optical communications blocksets.<p>You may simulate a lot of  combinations of optical  systems  based on SONET/SDH from PDH(DS1) to SDH(STM-16 &amp; 48) keeping up transmission rate.You can test models.There is a complete module of examples that you have support to how builds your own model.It works in Matlab 2012aGood Luck!!!Enjoy!</p>ber,blocksets,gui,gui tools,guide,mapping,mask,modeling,multiplexing,optics communications,path,payload,protocols,sdh,simulation,simulink,sonet,tdm,telecommunications,tools",1937,1186,4,1149,1951,upgrade improvement optical communication blocksets may lot combination optical base sonet sdh pdh sdh stm amp keep transmission rate test complete module example support build work agood luck enjoy,"['upgrade', 'improvement', 'optical', 'communication', 'blocksets', 'may', 'lot', 'combination', 'optical', 'base', 'sonet', 'sdh', 'pdh', 'sdh', 'stm', 'amp', 'keep', 'transmission', 'rate', 'test', 'complete', 'module', 'example', 'support', 'build', 'work', 'agood', 'luck', 'enjoy']",5
1000,44841,"design of sevo motor<p>servo motor is designed in simulink and is masked i.e. to enter only parameters</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",12,1,2,0,11,design sevo motorservo motor design mask enter motor controlpower conversion controlpower electronics,"['design', 'sevo', 'motorservo', 'motor', 'design', 'mask', 'enter', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1001,44850,"Blocks for simulation of the differential steered (unicycle) mobile robot. Controllers included!<p>These files allow the simulation of a differential steered (unicycle-like) mobile robot considering its complete dynamic model. The dynamic model here adopted is based on velocities (not torques), which makes it easier to integrate with existing mobile robot controllers that generate references for linear and angular velocities. Although not required, the blocks were built to be compatible with Peter Corke's Robotics Toolbox, so the user can make use of the toolbox functions.Sets of dynamic parameters are available for the following robots:- Pioneer 3-DX with Sick LASER sensor; - Pioneer 3-DX without LASER sensor; - Pioneer 2 without on-board computer (no LASER sensor); - Pioneer 2 with on-board computer (no LASER sensor); - Robotic wheelchair carrying a 55kg person; - Robotic wheelchair carrying a 125kg person; - Khepera III (LAUT, 2011); - RobuLAB-10 (SHOJAEI et al., 2011).The files include two libraries:- ""DiffSteer_model.slx"": contains the kinematic and dynamic blocks of the differential-drive mobile robot.- ""Controllers.slx"": contains the following blocks: a) trajectory tracking kinematic controller; b) dynamic compensation controller 1; c) dynamic compensation controller 2; d) dynamic parameters estimator (for adaptive controllers); e) trajectory generator; f) performance calculator (IAE, ITAE, ISE, ITSE and energy indexes). Four Simulink systems are provided as examples:1. ""kinematic_controller_system.slx"": implements a simple trajectory tracking controller using both kinematic and dynamic blocks of the robot.2. ""dynamic_controller_system.slx"": implements a more complex system that includes an adaptive dynamic compensation controller and the trajectory tracking controller with noisy sensor measurements.Note: After running ""kinematic_controller_system.slx"" or ""dynamic_controller_system.slx"" simulations you can check the results running the included script ""plot_results.m"".3. ""sl_lanechange_unicycle.slx"": implements the same system as the Robotics Toolbox ""sl_lanechange"", but using the kinematic model of the differential steered mobile robot.4. ""sl_lanechange_unicycle_dynamics.slx"": implements the same system as the Robotics Toolbox ""sl_lanechange"", but using the kinematic and the dynamic models of the differential steered mobile robot.Also, the following scripts are provided:1. ""sim_kin_controller.m"": uses the ""kinematic_controller_system.slx"" system to simulate a kinematic trajectory tracking controller acting on a mobile robot (complete model).2. ""sim_dyn_controller.m"": uses the ""dynamic_controller_system.slx"" system to simulate an adaptive dynamic compensation controller operating with the trajectory tracking controller acting on a mobile robot (complete model).3. ""plot_results.m"" and ""plot_results_kin.m"": present the results of the simulations.All blocks were tested in MATLAB R2012b, R2013a, R2014b, R2016a and 2017a, all under Windows.Enjoy!If you use this toolbox, please cite the following paper:MARTINS, F. N., Sarcinelli-Filho, M. and Carelli, R. A Velocity-Based Dynamic Model and Its Properties for Differential Drive Mobile Robots. Journal of Intelligent &amp; Robotic Systems, 2016. <a href=""http://rdcu.be/npvw@article{martins2017velocity"">http://rdcu.be/npvw@article{martins2017velocity</a>,  title={A Velocity-Based Dynamic Model and Its Properties for Differential Drive Mobile Robots},  author={Martins, Felipe N and Sarcinelli-Filho, M{\'a}rio and Carelli, Ricardo},  journal={Journal of Intelligent \&amp; Robotic Systems},  volume={85},  number={2},  pages={277--292},  year={2017},  publisher={Springer}}Author: Felipe Nascimento Martins <a href=""https://about.me/felipe.n.martinsBased"">https://about.me/felipe.n.martinsBased</a> on a prior work by Felipe Nascimento Martins and Wanderley Cardoso Celeste UFES - Federal University of Espirito Santo, BRAZIL 2006--2008For more information, please refer to:MARTINS, F. N., Celeste, W. C., Carelli, R., Sarcinelli-Filho, M. and Bastos-Filho, T. F. An Adaptive Dynamic Controller for Autonomous Mobile Robot Trajectory Tracking. Control Engineering Practice, v. 16, p. 1354â1363, 2008. <a href=""http://www.sciencedirect.com/science/article/pii/S0967066108000373MARTINS"">http://www.sciencedirect.com/science/article/pii/S0967066108000373MARTINS</a>, F. N. Modelagem e Compensacao da Dinamica de Robos Moveis e sua Aplicacao em Controle de Formacao. Tese de Doutorado em Engenharia Eletrica - Automacao. Universidade Federal do EspÃ­rito Santo, 2009.LAUT, Jeffrey. A Dynamic Parameter Identification Method for Migrating Control Strategies Between Heterogeneous Wheeled Mobile Robots. M.Sc. Diss. Worcester Polytechnic Institute, 2011.<a href=""https://www.semanticscholar.org/paper/A-Dynamic-Parameter-Identification-Method-for-Migr-Laut/000b0647483dad86a7cb6c51c25cff0e3219b633SHOJAEI"">https://www.semanticscholar.org/paper/A-Dynamic-Parameter-Identification-Method-for-Migr-Laut/000b0647483dad86a7cb6c51c25cff0e3219b633SHOJAEI</a>, Khoshnam et al. Adaptive trajectory tracking control of a differential drive wheeled mobile robot. Robotica, v. 29, n. 03, p. 391-402, 2011.</p>adaptive controller,differential steered,dynamic model,mobile robot,robot,unicycle",58,14,1,14,98,block differential steer unicycle mobile robot controller include file allow differential steered unicycle like mobile robot consider complete dynamic dynamic adopt base velocity torque make easy integrate exist mobile robot controller generate reference linear angular velocity although require block build compatible peter corke robotics toolbox user make toolbox function set dynamic parameter available follow robot pioneer sick laser sensor pioneer without laser sensor pioneer without board computer laser sensor pioneer board computer laser sensor robotic wheelchair carry person robotic wheelchair carry person khepera laut robulab shojaei file include two diffsteer slx contains kinematic dynamic block differential drive mobile robot controller slx contains follow block trajectory track kinematic controller dynamic compensation controller dynamic compensation controller dynamic parameter estimator adaptive controller trajectory generator performance calculator iae itae ise itse energy index four provide example kinematic controller slx implement simple trajectory track controller kinematic dynamic block robot dynamic controller slx implement complex include adaptive dynamic compensation controller trajectory track controller noisy sensor measurement note run kinematic controller slx dynamic controller slx check result run included script plot result lanechange unicycle slx implement robotics toolbox lanechange kinematic differential steer mobile robot lanechange unicycle dynamic slx implement robotics toolbox lanechange kinematic dynamic differential steer mobile robot also follow script provide sim kin controller kinematic controller slx kinematic trajectory track controller act mobile robot complete sim dyn controller dynamic controller slx adaptive dynamic compensation controller operate trajectory track controller act mobile robot complete plot result plot result kin present result block test window enjoy toolbox please cite follow paper martin sarcinelli filho carelli velocity base dynamic property differential drive mobile robot journal intelligent amp robotic http rdcu npvw article martins velocity title velocity base dynamic property differential drive mobile robot author martin felipe sarcinelli filho rio carelli ricardo journal journal intelligent amp robotic volume number page year publisher springer author felipe nascimento martin felipe martinsbased prior work felipe nascimento martin wanderley cardoso celeste ufes federal university espirito santo brazil information please refer martins celeste carelli sarcinelli filho bastos filho adaptive dynamic controller autonomous mobile robot trajectory track control engineering practice http sciencedirect com science article pii martin modelagem compensacao dinamica robos moveis sua aplicacao controle formacao tese doutorado engenharia eletrica automacao universidade federal espÃ­rito santo laut jeffrey dynamic parameter identification method migrate control strategy heterogeneous wheel mobile robot diss worcester polytechnic institute semanticscholar org paper dynamic parameter identification method migr laut dad cff shojaei khoshnam adaptive trajectory track control differential drive wheel mobile robot robotica adaptive steereddynamic modelmobile,"['block', 'differential', 'steer', 'unicycle', 'mobile', 'robot', 'controller', 'include', 'file', 'allow', 'differential', 'steered', 'unicycle', 'like', 'mobile', 'robot', 'consider', 'complete', 'dynamic', 'dynamic', 'adopt', 'base', 'velocity', 'torque', 'make', 'easy', 'integrate', 'exist', 'mobile', 'robot', 'controller', 'generate', 'reference', 'linear', 'angular', 'velocity', 'although', 'require', 'block', 'build', 'compatible', 'peter', 'corke', 'robotics', 'toolbox', 'user', 'make', 'toolbox', 'function', 'set', 'dynamic', 'parameter', 'available', 'follow', 'robot', 'pioneer', 'sick', 'laser', 'sensor', 'pioneer', 'without', 'laser', 'sensor', 'pioneer', 'without', 'board', 'computer', 'laser', 'sensor', 'pioneer', 'board', 'computer', 'laser', 'sensor', 'robotic', 'wheelchair', 'carry', 'person', 'robotic', 'wheelchair', 'carry', 'person', 'khepera', 'laut', 'robulab', 'shojaei', 'file', 'include', 'two', 'diffsteer', 'slx', 'contains', 'kinematic', 'dynamic', 'block', 'differential', 'drive', 'mobile', 'robot', 'controller', 'slx', 'contains', 'follow', 'block', 'trajectory', 'track', 'kinematic', 'controller', 'dynamic', 'compensation', 'controller', 'dynamic', 'compensation', 'controller', 'dynamic', 'parameter', 'estimator', 'adaptive', 'controller', 'trajectory', 'generator', 'performance', 'calculator', 'iae', 'itae', 'ise', 'itse', 'energy', 'index', 'four', 'provide', 'example', 'kinematic', 'controller', 'slx', 'implement', 'simple', 'trajectory', 'track', 'controller', 'kinematic', 'dynamic', 'block', 'robot', 'dynamic', 'controller', 'slx', 'implement', 'complex', 'include', 'adaptive', 'dynamic', 'compensation', 'controller', 'trajectory', 'track', 'controller', 'noisy', 'sensor', 'measurement', 'note', 'run', 'kinematic', 'controller', 'slx', 'dynamic', 'controller', 'slx', 'check', 'result', 'run', 'included', 'script', 'plot', 'result', 'lanechange', 'unicycle', 'slx', 'implement', 'robotics', 'toolbox', 'lanechange', 'kinematic', 'differential', 'steer', 'mobile', 'robot', 'lanechange', 'unicycle', 'dynamic', 'slx', 'implement', 'robotics', 'toolbox', 'lanechange', 'kinematic', 'dynamic', 'differential', 'steer', 'mobile', 'robot', 'also', 'follow', 'script', 'provide', 'sim', 'kin', 'controller', 'kinematic', 'controller', 'slx', 'kinematic', 'trajectory', 'track', 'controller', 'act', 'mobile', 'robot', 'complete', 'sim', 'dyn', 'controller', 'dynamic', 'controller', 'slx', 'adaptive', 'dynamic', 'compensation', 'controller', 'operate', 'trajectory', 'track', 'controller', 'act', 'mobile', 'robot', 'complete', 'plot', 'result', 'plot', 'result', 'kin', 'present', 'result', 'block', 'test', 'window', 'enjoy', 'toolbox', 'please', 'cite', 'follow', 'paper', 'martin', 'sarcinelli', 'filho', 'carelli', 'velocity', 'base', 'dynamic', 'property', 'differential', 'drive', 'mobile', 'robot', 'journal', 'intelligent', 'amp', 'robotic', 'http', 'rdcu', 'npvw', 'article', 'martins', 'velocity', 'title', 'velocity', 'base', 'dynamic', 'property', 'differential', 'drive', 'mobile', 'robot', 'author', 'martin', 'felipe', 'sarcinelli', 'filho', 'rio', 'carelli', 'ricardo', 'journal', 'journal', 'intelligent', 'amp', 'robotic', 'volume', 'number', 'page', 'year', 'publisher', 'springer', 'author', 'felipe', 'nascimento', 'martin', 'felipe', 'martinsbased', 'prior', 'work', 'felipe', 'nascimento', 'martin', 'wanderley', 'cardoso', 'celeste', 'ufes', 'federal', 'university', 'espirito', 'santo', 'brazil', 'information', 'please', 'refer', 'martins', 'celeste', 'carelli', 'sarcinelli', 'filho', 'bastos', 'filho', 'adaptive', 'dynamic', 'controller', 'autonomous', 'mobile', 'robot', 'trajectory', 'track', 'control', 'engineering', 'practice', 'http', 'sciencedirect', 'com', 'science', 'article', 'pii', 'martin', 'modelagem', 'compensacao', 'dinamica', 'robos', 'moveis', 'sua', 'aplicacao', 'controle', 'formacao', 'tese', 'doutorado', 'engenharia', 'eletrica', 'automacao', 'universidade', 'federal', 'espÃ­rito', 'santo', 'laut', 'jeffrey', 'dynamic', 'parameter', 'identification', 'method', 'migrate', 'control', 'strategy', 'heterogeneous', 'wheel', 'mobile', 'robot', 'diss', 'worcester', 'polytechnic', 'institute', 'semanticscholar', 'org', 'paper', 'dynamic', 'parameter', 'identification', 'method', 'migr', 'laut', 'dad', 'cff', 'shojaei', 'khoshnam', 'adaptive', 'trajectory', 'track', 'control', 'differential', 'drive', 'wheel', 'mobile', 'robot', 'robotica', 'adaptive', 'steereddynamic', 'modelmobile']",0
1002,44880,"PWM<p>This file describe a single bridge PWM inverter (VSI).</p>electric_motor_control,power_conversion_control,power_electronics_control,power converter",12,0,1,0,10,pwmthis file describe single bridge pwm inverter vsi electric motor controlpower conversion controlpower electronics controlpower converter,"['pwmthis', 'file', 'describe', 'single', 'bridge', 'pwm', 'inverter', 'vsi', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'converter']",6
1003,44889,Model Reference Adaptive Control<p>Model Reference Adaptive Control for servo</p>root,152,10,4,0,156,reference adaptive controlmodel reference adaptive control servoroot,"['reference', 'adaptive', 'controlmodel', 'reference', 'adaptive', 'control', 'servoroot']",4
1004,44902,"This model is part of my Quadrotor project<p>Quadrotor modelled with SimMechanics using the Solidworks link and PID control with Control toolbox.I've did not received the 3d printed parts yet but as soon as I receive them I will also update the plant with the System Identification toolbox.Currently I have problems to get the state-space representation from this model (I'm trying with linmod) if someone know better how to do this please give some feedback ;)<a href=""http://www.youtube.com/watch?v=uWVoc4OLKb8&amp;list=PL5hTGmDP4WFnfg4NvXzYPqSp0aG0FzLos"">http://www.youtube.com/watch?v=uWVoc4OLKb8&amp;list=PL5hTGmDP4WFnfg4NvXzYPqSp0aG0FzLos</a></p>ardrone,pixhawk,control design,qpsk,quadrotor,simmechanics",2339,319,7,0,1508,part quadrotor simmechanics solidworks link pid control control toolbox receive printed part yet soon receive also update plant identification toolbox currently problem get state space representation try linmod someone know good please give feedback http youtube com watch uwvoc olkb amp list htgmdp wfnfg nvxzypqsp,"['part', 'quadrotor', 'simmechanics', 'solidworks', 'link', 'pid', 'control', 'control', 'toolbox', 'receive', 'printed', 'part', 'yet', 'soon', 'receive', 'also', 'update', 'plant', 'identification', 'toolbox', 'currently', 'problem', 'get', 'state', 'space', 'representation', 'try', 'linmod', 'someone', 'know', 'good', 'please', 'give', 'feedback', 'http', 'youtube', 'com', 'watch', 'uwvoc', 'olkb', 'amp', 'list', 'htgmdp', 'wfnfg', 'nvxzypqsp']",0
1005,44978,"A Series-Connected Three-Level Inverter Topology for Medium-Voltage Squirrel-Cage Motor Drive <p>The Induction motor drives with voltage source inverters. Also the voltage waveforms of traditional two level inverter fed Induction motor shows that the voltage across the motor contains not only the required âfundamentalâ sinusoidal components, but also pulses of voltage i.e. ârippleâ voltage. Moreover the voltage waveforms produced by the inverter has sharp edges. The rate of change of voltage with respect to time i.e. dv/dt is very high at these edges, of the order of 500â5000 V/Î¼s.The two-level inverter topology has attracted attention in low power low voltage drive applications where as Three-Level inverter topology has attracted attention in high power High performances voltage drive applications. Single-phase VSI cover low-range power applications and three-phase VSI cover the medium- to high-power applications. </p>electric_motor_control,power_electronics_control,3 leval inverter,induction motor,medium voltage inverter,squirrel cage",548,26,4,0,530,series connect three level inverter topology medium voltage squirrel cage motor drive induction motor drive voltage source inverter also voltage waveform traditional two level inverter feed induction motor show voltage across motor contains require fundamental sinusoidal component also pulse voltage ripple voltage moreover voltage waveform produce inverter sharp edge rate change voltage respect time high edge order two level inverter topology attract attention low power low voltage drive application three level inverter topology attract attention high power high performance voltage drive application single phase vsi cover low range power application three phase vsi cover medium high power application electric motor controlpower electronics control leval motormedium voltage cage,"['series', 'connect', 'three', 'level', 'inverter', 'topology', 'medium', 'voltage', 'squirrel', 'cage', 'motor', 'drive', 'induction', 'motor', 'drive', 'voltage', 'source', 'inverter', 'also', 'voltage', 'waveform', 'traditional', 'two', 'level', 'inverter', 'feed', 'induction', 'motor', 'show', 'voltage', 'across', 'motor', 'contains', 'require', 'fundamental', 'sinusoidal', 'component', 'also', 'pulse', 'voltage', 'ripple', 'voltage', 'moreover', 'voltage', 'waveform', 'produce', 'inverter', 'sharp', 'edge', 'rate', 'change', 'voltage', 'respect', 'time', 'high', 'edge', 'order', 'two', 'level', 'inverter', 'topology', 'attract', 'attention', 'low', 'power', 'low', 'voltage', 'drive', 'application', 'three', 'level', 'inverter', 'topology', 'attract', 'attention', 'high', 'power', 'high', 'performance', 'voltage', 'drive', 'application', 'single', 'phase', 'vsi', 'cover', 'low', 'range', 'power', 'application', 'three', 'phase', 'vsi', 'cover', 'medium', 'high', 'power', 'application', 'electric', 'motor', 'controlpower', 'electronics', 'control', 'leval', 'motormedium', 'voltage', 'cage']",3
1006,44993,"Simulation based on variable topology approach<p>This simulation setup uses simulink blocks to simulate a close loop buck converter. No component from the SIM POWER SYSTEM is used. A reconstruction of work presented in chapter 3 of book ""MATLAB -A fundamental tool for scientific and engineering applications Vol-I""</p>buck converter,close loop buck converter,dc dc converter,industrial electronics,power electronics,step down converter,variable topology approach,power_conversion_control,power_electronics_control",36,3,2,0,38,base variable topology approachthis setup block close loop buck converter component sim power reconstruction work present chapter book fundamental tool scientific engineering application vol buck converterclose loop buck converterdc electronicsstep topology approachpower conversion controlpower electronics control,"['base', 'variable', 'topology', 'approachthis', 'setup', 'block', 'close', 'loop', 'buck', 'converter', 'component', 'sim', 'power', 'reconstruction', 'work', 'present', 'chapter', 'book', 'fundamental', 'tool', 'scientific', 'engineering', 'application', 'vol', 'buck', 'converterclose', 'loop', 'buck', 'converterdc', 'electronicsstep', 'topology', 'approachpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1007,44994,"Variable topology simulation <p>Simulation of Close Loop Buck converter given in chapter 3 of book""MATLAB -A fundamental tool for scientific and engineering applications Vol I""</p>buck converter,dcdc converter,industrial electronics,open loop,power electronics,power_conversion_control,power_electronics_control",31,3,2,0,33,variable topology close loop buck converter give chapter book fundamental tool scientific engineering application vol buck converterdcdc electronicsopen looppower conversion controlpower electronics control,"['variable', 'topology', 'close', 'loop', 'buck', 'converter', 'give', 'chapter', 'book', 'fundamental', 'tool', 'scientific', 'engineering', 'application', 'vol', 'buck', 'converterdcdc', 'electronicsopen', 'looppower', 'conversion', 'controlpower', 'electronics', 'control']",3
1008,45004,"Variable topology simulation<p>Simulation of open Loop boost converter given in chapter 3 of book ""MATLAB -A fundamental tool for scientific and engineering applications Vol I""</p>boost converter,dcdc converter,industrial electronics,open loop control,power electronics,simulink,variable topology simulation,power_conversion_control,power_electronics_control",35,4,3,0,39,variable topology open loop boost converter give chapter book fundamental tool scientific engineering application vol boost converterdcdc electronicsopen loop controlpower topology conversion controlpower electronics control,"['variable', 'topology', 'open', 'loop', 'boost', 'converter', 'give', 'chapter', 'book', 'fundamental', 'tool', 'scientific', 'engineering', 'application', 'vol', 'boost', 'converterdcdc', 'electronicsopen', 'loop', 'controlpower', 'topology', 'conversion', 'controlpower', 'electronics', 'control']",3
1009,45027,"Good approach to LTE standard's implementation.<p>This is part of my work that you can find here: <a href=""http://www.mathworks.es/matlabcentral/fileexchange/42902-lte-16qamSo"">http://www.mathworks.es/matlabcentral/fileexchange/42902-lte-16qamSo</a> you need to implement a configuration file to run the model. If you need help on this, I can share mine: <a href=""mailto:natalia.mmingo@gmail.com"">natalia.mmingo@gmail.com</a> ;)</p>communications,qpsk,signal processing,simulation,simulink,wireless",148,23,3,0,134,good approach lte standard implementation part work find http mathworks matlabcentral fileexchange lte qamso need implement configuration file run need help share mine natalia mmingo gmail com,"['good', 'approach', 'lte', 'standard', 'implementation', 'part', 'work', 'find', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'lte', 'qamso', 'need', 'implement', 'configuration', 'file', 'run', 'need', 'help', 'share', 'mine', 'natalia', 'mmingo', 'gmail', 'com']",7
1010,45133,Simulink to solve second order ODE<p>This Simulink model is complimentary to the script  7 ways of solving Initial Value Problems of ODEs in MATLAB &amp; Simulink </p>odes,8,0,1,0,9,solve second order odethis complimentary script way solve initial value problem odes amp ode,"['solve', 'second', 'order', 'odethis', 'complimentary', 'script', 'way', 'solve', 'initial', 'value', 'problem', 'odes', 'amp', 'ode']",0
1011,45154,"Simulation of 3-phase 3-level SPWM Inverter<p>This files simulates the 3-ph and 3-level inverter. One can change the modulation index, reference frequency and modulation frequency.This is my first upload, so please let me know if it was helpful and what all changes would help you further.</p>multilevel inverter,power electronics",97,1,2,0,102,phase level spwm inverterthis file level inverter one change modulation index reference frequency modulation frequency first upload please let know helpful change would help multilevel inverterpower electronics,"['phase', 'level', 'spwm', 'inverterthis', 'file', 'level', 'inverter', 'one', 'change', 'modulation', 'index', 'reference', 'frequency', 'modulation', 'frequency', 'first', 'upload', 'please', 'let', 'know', 'helpful', 'change', 'would', 'help', 'multilevel', 'inverterpower', 'electronics']",3
1012,45207,"A half (railway) vehicle model has been designed in state space form.  <p>The inputs to the model is the track input which is a step signal.Now I don't get any error but since the input matrix is zero ,I'm not able to get the expected response(which is a difference of the track input and the wheelset position) rather it shows a line at 0. The matrix size is given as,A= 14x14 B=zeros(size(A,1),2)C=eye(size(A))D=zeros(size(A,1),2)I don't understand how the input is taken by the state space model and how to define the size of the input matrix. If you need any other information please let me know.</p>model response",8,1,2,0,7,half railway vehicle design state space form input track input step signal get error since input matrix zero able get expect response difference track input wheelset position rather show line matrix size give asa zeros size eye size zero size understand input take state space define size input matrix need information please let know response,"['half', 'railway', 'vehicle', 'design', 'state', 'space', 'form', 'input', 'track', 'input', 'step', 'signal', 'get', 'error', 'since', 'input', 'matrix', 'zero', 'able', 'get', 'expect', 'response', 'difference', 'track', 'input', 'wheelset', 'position', 'rather', 'show', 'line', 'matrix', 'size', 'give', 'asa', 'zeros', 'size', 'eye', 'size', 'zero', 'size', 'understand', 'input', 'take', 'state', 'space', 'define', 'size', 'input', 'matrix', 'need', 'information', 'please', 'let', 'know', 'response']",0
1013,45245,"I need some help.<p>I have a model which i uploaded above. Real IGBT has t_on and t_off time intervals because of its switching moment on datasheet. But igbt model in simulink, like ideal switch devices. For example, in turn-on, voltage and current drop down instantaneously. Besides, in turn-off time, current doesn't drop directly but again voltage drops instantly. how can i do a real model for igbt? is there any solution about it?Thank you.</p>power_conversion_control,power_electronics_control,igbt",32,0,1,0,27,need help upload real igbt time interval switch moment datasheet igbt like ideal switch device example turn voltage current drop instantaneously besides turn time current drop directly voltage drop instantly real igbt solution thank power conversion controlpower electronics controligbt,"['need', 'help', 'upload', 'real', 'igbt', 'time', 'interval', 'switch', 'moment', 'datasheet', 'igbt', 'like', 'ideal', 'switch', 'device', 'example', 'turn', 'voltage', 'current', 'drop', 'instantaneously', 'besides', 'turn', 'time', 'current', 'drop', 'directly', 'voltage', 'drop', 'instantly', 'real', 'igbt', 'solution', 'thank', 'power', 'conversion', 'controlpower', 'electronics', 'controligbt']",4
1014,45266,"Orthogonal Frequency Division Multiplexing<p>OFDM for M-PSK modulated signals using IFFT/FFT in simulink, and adding a gaussian noise to the transmission channel.M can be modified in the settings of the simulation, it's the bits per symbol</p>division multiplexing,modulation,noisy channel,ofdm,orthogonal frequency,ofdm,rayleigh",17,0,1,0,18,orthogonal frequency division psk modulate signal ifft fft add gaussian noise transmission channel modify setting bit per symboldivision,"['orthogonal', 'frequency', 'division', 'psk', 'modulate', 'signal', 'ifft', 'fft', 'add', 'gaussian', 'noise', 'transmission', 'channel', 'modify', 'setting', 'bit', 'per', 'symboldivision']",5
1015,45295,qpsk transmitter<p>this block transmits the qpsk modulated signal and then receives using AWGN channel</p>qpsk,14,0,1,0,13,qpsk transmitterthis block transmits qpsk modulate signal receives awgn channelqpsk,"['qpsk', 'transmitterthis', 'block', 'transmits', 'qpsk', 'modulate', 'signal', 'receives', 'awgn', 'channelqpsk']",8
1016,45343,"Vehicle model in Simscape Multibody using 3-D tire model.<p>This file contains a 15-DOF model of a passenger car that can be configured to run several different tests, including slalom, 4-post testrig, and a parking maneuver. It requires Delft-Tyre software from TASS International, which can be requested from <a href=""http://www.delft-tyre.com"">www.delft-tyre.com</a>. The vehicle model is built using Simscape Multibody.  Please read the README.txt file to get started.  See a demonstration of this model in this video (2.5 min): <a href=""https://www.mathworks.com/videos/delft-tyre-model-in-simmechanics-86715.html"">https://www.mathworks.com/videos/delft-tyre-model-in-simmechanics-86715.html</a> Learn more about multibody simulation with Simscape Multibody by watching this webinarhttps://<a href=""http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a> </p>automotivesuspensionphysical modeling,physical modeling,vehicle",2325,335,4,0,1675,vehicle simscape multibody tire file contain dof passenger car configure run several different test include slalom post testrig park maneuver require delft tyre software tass international request delft tyre com vehicle build simscape multibody please read readme txt file get start see demonstration video min mathworks com videos delft tyre simmechanics html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling modelingvehicle,"['vehicle', 'simscape', 'multibody', 'tire', 'file', 'contain', 'dof', 'passenger', 'car', 'configure', 'run', 'several', 'different', 'test', 'include', 'slalom', 'post', 'testrig', 'park', 'maneuver', 'require', 'delft', 'tyre', 'software', 'tass', 'international', 'request', 'delft', 'tyre', 'com', 'vehicle', 'build', 'simscape', 'multibody', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'demonstration', 'video', 'min', 'mathworks', 'com', 'videos', 'delft', 'tyre', 'simmechanics', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'modelingvehicle']",7
1017,45346,"Simulation models of TENNIS ball in VACUUM & AIR with & without spin by Sym MATH, ODEx, Simulink<p>This pack includes simulation models of a TENNIS ball or thrown ball in the VACUUM and AIR with and without spin using Symbolic MATH, MuPAD, ODEx solvers and SIMULINK models.This script executes all Simulink models and M-files except for MuPADcommands. NB: put M-file and SIMULINK models in the same directory, and thenexecute this script RUN_all.mNB: Plot figures require from a user to indicate graphically where to displaycomputed data in the plot area.</p>odes,simulationsimulink modelmupad",73,2,2,0,94,tennis ball vacuum air without spin sym math odex pack include tennis ball thrown ball vacuum air without spin symbolic math mupad odex solver script execute file except mupadcommands put file directory thenexecute script run mnb plot figure require user indicate graphically displaycomputed data plot area modelmupad,"['tennis', 'ball', 'vacuum', 'air', 'without', 'spin', 'sym', 'math', 'odex', 'pack', 'include', 'tennis', 'ball', 'thrown', 'ball', 'vacuum', 'air', 'without', 'spin', 'symbolic', 'math', 'mupad', 'odex', 'solver', 'script', 'execute', 'file', 'except', 'mupadcommands', 'put', 'file', 'directory', 'thenexecute', 'script', 'run', 'mnb', 'plot', 'figure', 'require', 'user', 'indicate', 'graphically', 'displaycomputed', 'data', 'plot', 'area', 'modelmupad']",5
1018,45347,"Implicitly defined 2nd order ODE solved by ode15i and Simulink ode15s<p>Truly IMPLICIT problem: exp(x"")+x""+x=0 with ICs: x(0)=1,x'(0)=0.This IVP is solved with MATLAB solver ode15i for implicit ODEs and SIMULINK ode15s.</p>odesimulationmodeling",8,0,1,0,11,implicitly define order ode solve ode ode struly implicit problem exp ivp solve solver ode implicit ode ode,"['implicitly', 'define', 'order', 'ode', 'solve', 'ode', 'ode', 'struly', 'implicit', 'problem', 'exp', 'ivp', 'solve', 'solver', 'ode', 'implicit', 'ode', 'ode']",5
1019,45358,Effect of Ls on Single Phase Full Controlled Rectifier<p>Simulink model of Single Phase Full Controlled With with inductor...this model shows the effect of inductor on output voltage and cuurent.Due the addition of inductor a continous and controlled current will flow in circuit. By varying the firing angle of thyristor we can controll the output results.</p>power electronics,26,1,2,0,24,effect single phase full control single phase full control inductor show effect inductor output voltage cuurent due addition inductor continous control current flow circuit vary fire angle thyristor controll output result power electronics,"['effect', 'single', 'phase', 'full', 'control', 'single', 'phase', 'full', 'control', 'inductor', 'show', 'effect', 'inductor', 'output', 'voltage', 'cuurent', 'due', 'addition', 'inductor', 'continous', 'control', 'current', 'flow', 'circuit', 'vary', 'fire', 'angle', 'thyristor', 'controll', 'output', 'result', 'power', 'electronics']",3
1020,45428,"solar cell connected to buck converter<p>This is the model of solar cell.in this model i have use the buck converter..the DC output of solar cell is connected to buck converter...this regulate the DC voltage coming from solar cell..by varying the Duty cycle and PS constant value,we can vary the output voltage.by this method we have a smooth regulated dc output.</p>power_conversion_control,power_electronics_control,power electronics",25,1,2,0,26,solar cell connect buck converterthis solar cell buck converter output solar cell connect buck converter regulate voltage come solar cell vary duty cycle constant valuewe vary output voltage method smooth regulate output power conversion controlpower electronics controlpower electronics,"['solar', 'cell', 'connect', 'buck', 'converterthis', 'solar', 'cell', 'buck', 'converter', 'output', 'solar', 'cell', 'connect', 'buck', 'converter', 'regulate', 'voltage', 'come', 'solar', 'cell', 'vary', 'duty', 'cycle', 'constant', 'valuewe', 'vary', 'output', 'voltage', 'method', 'smooth', 'regulate', 'output', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",1
1021,45445,3-Phase UnControlled Rectifier with Ls=0<p>Rectification of 3-phase supply.in this model we showed the effect when Ls=0...means no inductor is connected.  </p>power electronics,31,1,2,0,25,phase uncontrolled rectifier rectification phase supply show effect mean inductor connect power electronics,"['phase', 'uncontrolled', 'rectifier', 'rectification', 'phase', 'supply', 'show', 'effect', 'mean', 'inductor', 'connect', 'power', 'electronics']",3
1022,45446,3-Phase UnControlled Rectifier With LS not equal to zero<p>This is the model of rectification 3-phase supply when inductor is conected.means inductor is not zero. </p>power electronics,34,1,2,0,28,phase uncontrolled rectifier equal zerothis rectification phase supply inductor conected mean inductor zero power electronics,"['phase', 'uncontrolled', 'rectifier', 'equal', 'zerothis', 'rectification', 'phase', 'supply', 'inductor', 'conected', 'mean', 'inductor', 'zero', 'power', 'electronics']",3
1023,45506,"Hysteresisband(Relay)with variable hystersisband<p>we need somtimes variable hysteresis band  or switch on-of for our relay or hystersis controller.In this situation we can use this block. </p>hysteresis band,hysteresis band controller,relay,simulink,switch onoff",6,0,1,0,7,hysteresisband relay variable hystersisbandwe need somtimes variable hysteresis band switch relay hystersis controller situation block hysteresis bandhysteresis band onoff,"['hysteresisband', 'relay', 'variable', 'hystersisbandwe', 'need', 'somtimes', 'variable', 'hysteresis', 'band', 'switch', 'relay', 'hystersis', 'controller', 'situation', 'block', 'hysteresis', 'bandhysteresis', 'band', 'onoff']",5
1024,45508,simulink model of mass spring system<p>mass spring system model design in matlab simulink.</p>controll system design,11,0,1,0,14,mass spring systemmass spring design controll design,"['mass', 'spring', 'systemmass', 'spring', 'design', 'controll', 'design']",0
1025,45510,"Very simple example of phase locked loop.<p>Simple experiment with basic PLL design.</p>phase locked loop,pll",6,0,1,0,9,simple example phase lock loop simple experiment basic pll design phase lock looppll,"['simple', 'example', 'phase', 'lock', 'loop', 'simple', 'experiment', 'basic', 'pll', 'design', 'phase', 'lock', 'looppll']",4
1026,45537,"What is the difference between the different Integration methods?<p>There are different methods of integration available in the discrete integrator blocks. What is the difference between these methods? Often software developers writing code for these blocks do not appreciate the differences between these. This Simulink model tries to bring out these differences and brings out the importance why the Software Requirement Document very clearly specifies the algorithm. Try these blocks with different sampling time.The problem computes the solution to the differential equations dy/dt = -10 y(t), y(0) = 1.The exact mathematical solution exp(-10t). All the four are compared in this Simulink file. A similar exercise is done in the link provided.</p>integration",25,0,1,0,24,difference different integration method different method integration available discrete integrator block difference method often software developer write code block appreciate difference try bring difference brings importance software requirement document clearly specifies algorithm try block different sample time problem compute solution differential equation exact mathematical solution exp four compare file similar exercise link provide integration,"['difference', 'different', 'integration', 'method', 'different', 'method', 'integration', 'available', 'discrete', 'integrator', 'block', 'difference', 'method', 'often', 'software', 'developer', 'write', 'code', 'block', 'appreciate', 'difference', 'try', 'bring', 'difference', 'brings', 'importance', 'software', 'requirement', 'document', 'clearly', 'specifies', 'algorithm', 'try', 'block', 'different', 'sample', 'time', 'problem', 'compute', 'solution', 'differential', 'equation', 'exact', 'mathematical', 'solution', 'exp', 'four', 'compare', 'file', 'similar', 'exercise', 'link', 'provide', 'integration']",0
1027,45541,"Control an Arduino robot using an RC Transmitter and Receiver with Simulink<p>With this block, a user can use Simulink to generate code for an Arduino which receives signals from an RC Transmitter. When the output of an RC Receiver is connected to an Arduino, this custom driver block outputs the length of the RC signal's pulse in microseconds, which corresponds directly to the signal's value.   This material is meant to support the article ""R/C Controller for Arduino and Simulink"". <a href=""https://www.hackster.io/matlab-makers/r-c-controller-for-arduino-and-simulink-be5aee"">https://www.hackster.io/matlab-makers/r-c-controller-for-arduino-and-simulink-be5aee</a> Documentation:For examples and documentation showing how to use block, see the ""Supplemental Software"" section of the main doc page. There will be link to the ""Arduino RC Receive Toolbox"".Legacy Code:To access the old version, type the following command after installation:cd(fullfile(returnArduinoRCReceivePath,'old','rcreceive'))Testing:This driver block was tested with the Cirrus-DPR-4FM Transmitter and Receiver. All Receivers output servo protocol so the block will work with all RC Transmitter/Receivers.   The block works with the Arduino Uno, Mega 2560, and Due. The maximum channels supported is 6.</p>arduino,robotics,maker",20,9,2,8,17,control arduino robot transmitter receiver block user generate code arduino receive signal transmitter output receiver connect arduino custom driver block output length signal pulse microseconds correspond directly signal value material mean support article controller arduino hackster maker controller arduino aee documentation example documentation show block see supplemental software section main doc page link arduino receive toolbox legacy code access old version type follow command installation fullfile old rcreceive testing driver block test cirrus dpr transmitter receiver receiver output servo protocol block work transmitter receiver block work arduino uno mega due maximum channel support,"['control', 'arduino', 'robot', 'transmitter', 'receiver', 'block', 'user', 'generate', 'code', 'arduino', 'receive', 'signal', 'transmitter', 'output', 'receiver', 'connect', 'arduino', 'custom', 'driver', 'block', 'output', 'length', 'signal', 'pulse', 'microseconds', 'correspond', 'directly', 'signal', 'value', 'material', 'mean', 'support', 'article', 'controller', 'arduino', 'hackster', 'maker', 'controller', 'arduino', 'aee', 'documentation', 'example', 'documentation', 'show', 'block', 'see', 'supplemental', 'software', 'section', 'main', 'doc', 'page', 'link', 'arduino', 'receive', 'toolbox', 'legacy', 'code', 'access', 'old', 'version', 'type', 'follow', 'command', 'installation', 'fullfile', 'old', 'rcreceive', 'testing', 'driver', 'block', 'test', 'cirrus', 'dpr', 'transmitter', 'receiver', 'receiver', 'output', 'servo', 'protocol', 'block', 'work', 'transmitter', 'receiver', 'block', 'work', 'arduino', 'uno', 'mega', 'due', 'maximum', 'channel', 'support']",7
1028,45602,"Motor using PID<p>Motor driving using PID controller.</p>electric_motor_control,power_electronics_control,nonlinear",17,0,1,0,17,motor pidmotor drive pid controller electric motor controlpower electronics,"['motor', 'pidmotor', 'drive', 'pid', 'controller', 'electric', 'motor', 'controlpower', 'electronics']",6
1029,45657,"The concept of anti-windup integration and its importance is brought out in this example..<p>This is an example of PID control of a 1/s plant. The concept of anti-windup integration and its importance is brought out here. It is mandatory that all integrators in safety critical control systems have anti-windup protection. This is taken from the best practices (<a href=""https://www.cso.nato.int/pubs/rdp.asp?RDP=RTO-TR-029"">https://www.cso.nato.int/pubs/rdp.asp?RDP=RTO-TR-029</a>). This example brings out the reason why this is required. It compares the PID performance with and without anti-windup. There is an example where the anti-windup integrator is implemented incorrectly as an integrator followed by a saturation block. The correct implementation is the integrator output being limited and this limited output fed back as a state. However, it is seen that the mistake in implementation is done very often. </p>control design,integration",77,2,1,0,92,concept anti windup integration importance bring example example pid control plant concept anti windup integration importance bring mandatory integrator safety critical control anti windup protection take best practice cso nato int pub rdp asp rdp rto example bring reason required compare pid performance without anti windup example anti windup integrator implement incorrectly integrator follow saturation block correct implementation integrator output limit limited output feed back state however see mistake implementation often control,"['concept', 'anti', 'windup', 'integration', 'importance', 'bring', 'example', 'example', 'pid', 'control', 'plant', 'concept', 'anti', 'windup', 'integration', 'importance', 'bring', 'mandatory', 'integrator', 'safety', 'critical', 'control', 'anti', 'windup', 'protection', 'take', 'best', 'practice', 'cso', 'nato', 'int', 'pub', 'rdp', 'asp', 'rdp', 'rto', 'example', 'bring', 'reason', 'required', 'compare', 'pid', 'performance', 'without', 'anti', 'windup', 'example', 'anti', 'windup', 'integrator', 'implement', 'incorrectly', 'integrator', 'follow', 'saturation', 'block', 'correct', 'implementation', 'integrator', 'output', 'limit', 'limited', 'output', 'feed', 'back', 'state', 'however', 'see', 'mistake', 'implementation', 'often', 'control']",5
1030,45670,"Block diagram Optimization Tool<p>BOT optimizes the layout of the current Simulink block diagram.Blocks and lines are resized and moved until their vertices satisfy a 5 pixel grid.You can define safety zones around blocks and line; The program then moves blocks and lines, until their safety zones do not overlap. Think of blocks and lines as magnets repelling each other.Lines can be rerouted and intersecting lines can be untangled.Finally, the program tries to compact the diagram by moving the blocks closer to each other. Think of lines as contracting rubber bands.</p>block diagram,optimization,simulink,pick of the week,potw",33,2,2,0,34,block diagram optimization toolbot optimize layout current block diagram block line resize moved vertex satisfy pixel grid define safety zone around block line program move block line safety zone overlap think block line magnet repel line rerouted intersect line untangled finally program try compact diagram moving block closer think line contract rubber band block weekpotw,"['block', 'diagram', 'optimization', 'toolbot', 'optimize', 'layout', 'current', 'block', 'diagram', 'block', 'line', 'resize', 'moved', 'vertex', 'satisfy', 'pixel', 'grid', 'define', 'safety', 'zone', 'around', 'block', 'line', 'program', 'move', 'block', 'line', 'safety', 'zone', 'overlap', 'think', 'block', 'line', 'magnet', 'repel', 'line', 'rerouted', 'intersect', 'line', 'untangled', 'finally', 'program', 'try', 'compact', 'diagram', 'moving', 'block', 'closer', 'think', 'line', 'contract', 'rubber', 'band', 'block', 'weekpotw']",5
1031,45682,"Simulate an AC Motor Drive wondering about the example.<p>Hello~The student is currently studying. This time for the motor simulation with reference to the example of studying. To miss any part of it, but to continue. If the error continues to occur, the despair missing.Professionals who ask for advice or modified files. Thank you. Have a nice day!See Sitehttp://<a href=""http://www.mathworks.co.kr/kr/help/physmod/sps/powersys/ug/simulating-an-ac-motor-drive.html"">www.mathworks.co.kr/kr/help/physmod/sps/powersys/ug/simulating-an-ac-motor-drive.html</a></p>electric_motor_control,power_conversion_control,power_electronics_control,ac servo,motor,simulink",342,27,6,0,388,motor drive wonder example hello student currently study time motor reference example study miss part continue error continue occur despair miss professional ask advice modify file thank nice day see sitehttp mathworks help physmod sps powersys motor drive htmlelectric motor controlpower conversion controlpower electronics controlac,"['motor', 'drive', 'wonder', 'example', 'hello', 'student', 'currently', 'study', 'time', 'motor', 'reference', 'example', 'study', 'miss', 'part', 'continue', 'error', 'continue', 'occur', 'despair', 'miss', 'professional', 'ask', 'advice', 'modify', 'file', 'thank', 'nice', 'day', 'see', 'sitehttp', 'mathworks', 'help', 'physmod', 'sps', 'powersys', 'motor', 'drive', 'htmlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac']",4
1032,45693,"Quad copter simple plant model and PID controller<p>This file is Quad copter plant model made by SimMechanics.This model has Quad copter plant model and simple PID conrtoller,and you can controll X-Y field velocity and Z hight position.The detail see 'QCP_sim.pdf'.This model can modify some part. For example, Controller or Moter model.In tihs model, It is used SimElectronics.And this model may do real time simulation, if the model'scalcutated load is low.Plese refer to folloes,<a href=""http://www.mathworks.com/matlabcentral/fileexchange/11680-simulinkr-execution-control"">http://www.mathworks.com/matlabcentral/fileexchange/11680-simulinkr-execution-control</a></p>ardrone,pixhawk,mechanical modeling,physical modeling",491,56,4,15,549,quad copter simple plant pid controllerthis file quad copter plant make simmechanics quad copter plant simple pid conrtollerand controll field velocity hight position detail see qcp sim pdf modify part example controller moter tihs simelectronics may real time scalcutated load low plese refer folloeshttp mathworks com matlabcentral fileexchange execution,"['quad', 'copter', 'simple', 'plant', 'pid', 'controllerthis', 'file', 'quad', 'copter', 'plant', 'make', 'simmechanics', 'quad', 'copter', 'plant', 'simple', 'pid', 'conrtollerand', 'controll', 'field', 'velocity', 'hight', 'position', 'detail', 'see', 'qcp', 'sim', 'pdf', 'modify', 'part', 'example', 'controller', 'moter', 'tihs', 'simelectronics', 'may', 'real', 'time', 'scalcutated', 'load', 'low', 'plese', 'refer', 'folloeshttp', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'execution']",0
1033,45697,"A simple example about how to user Spring and Damper element in Simulink<p>A linear connected between two bodies. </p>mechanical modeling,simulink",14,0,1,0,14,simple example user spring damper element linear connect two body mechanical,"['simple', 'example', 'user', 'spring', 'damper', 'element', 'linear', 'connect', 'two', 'body', 'mechanical']",7
1034,45732,HVDC Transmission and it's fault analysis<p>This file involves the depiction of HVDC transmission but unfortunately i was unable to get the proper functioning of Inverter side. I need help with this.</p>hvdc12pulserectifierfault analysisinverter,89,4,3,0,113,hvdc transmission fault analysisthis file involve depiction hvdc transmission unfortunately unable get proper functioning inverter side need help hvdc,"['hvdc', 'transmission', 'fault', 'analysisthis', 'file', 'involve', 'depiction', 'hvdc', 'transmission', 'unfortunately', 'unable', 'get', 'proper', 'functioning', 'inverter', 'side', 'need', 'help', 'hvdc']",5
1035,45758,"Generate a random telegraph signal<p>1. Run RTS_Prep.m, which generates a triggering array to be used in the Simulink model.2. Run RTS.mdl</p>random telegraph processrandom telegraph signal",11,1,2,0,11,generate random telegraph signal run rts prep generates trigger array run rts mdlrandom telegraph processrandom telegraph signal,"['generate', 'random', 'telegraph', 'signal', 'run', 'rts', 'prep', 'generates', 'trigger', 'array', 'run', 'rts', 'mdlrandom', 'telegraph', 'processrandom', 'telegraph', 'signal']",5
1036,45761,"App that simulates a single end of curling<p>The Curling Game is a simulation of one end of a regulation curling match.Play consists of delivering 16 stones (8 per player) down a sheet of ice. The player with a stone closest to the target wins the end. The winning player scores one point for each of their stones that is closer to the target than the opponent's first closest stone.Instructions:Place a stone in the starting spot (the hock) by clicking ""Next Stone..."". Then click in the yellow highlighted area to aim the shot. Next, use the sliders to adjust the initial forward speed and spin speed. Then click the ""Go"" button to deliver the stone.While a stone is in motion, you may click on the ""Sweep!"" button to sweep the ice and alter the effects of friction on the stone. Repeated clicks create a greater effect.</p>pick of the week,potw,curling,fun,game",234,21,6,0,269,app single end curlingthe curl game one end regulation curl match play consist deliver stone per player sheet ice player stone close target win end win player score one point stone closer target opponent first closest stone instruction place stone start spot hock click next stone click yellow highlight area aim shot next slider adjust initial forward speed spin speed click button deliver stone stone motion may click sweep button sweep ice alter effect friction stone repeat click create great effect pick,"['app', 'single', 'end', 'curlingthe', 'curl', 'game', 'one', 'end', 'regulation', 'curl', 'match', 'play', 'consist', 'deliver', 'stone', 'per', 'player', 'sheet', 'ice', 'player', 'stone', 'close', 'target', 'win', 'end', 'win', 'player', 'score', 'one', 'point', 'stone', 'closer', 'target', 'opponent', 'first', 'closest', 'stone', 'instruction', 'place', 'stone', 'start', 'spot', 'hock', 'click', 'next', 'stone', 'click', 'yellow', 'highlight', 'area', 'aim', 'shot', 'next', 'slider', 'adjust', 'initial', 'forward', 'speed', 'spin', 'speed', 'click', 'button', 'deliver', 'stone', 'stone', 'motion', 'may', 'click', 'sweep', 'button', 'sweep', 'ice', 'alter', 'effect', 'friction', 'stone', 'repeat', 'click', 'create', 'great', 'effect', 'pick']",8
1037,45772,"simplified crowbar of doubly fed induction generator<p>Crowbar in this model is not built using IGBTs or ideal switches.The cut-in and cut-out of crowbar circuit is modelled by changing the reference voltages of rotor-side converter.The model was created using MATLAB R2010a.The control strategy is the most common decoupling  algorithm and MPPT, you can update it using your own strategy.</p>crowbar,dfig,wind turbine,power_conversion_control,power_electronics_control",680,20,6,0,709,simplify crowbar doubly feed induction build igbts ideal switch cut cut crowbar circuit change reference voltage rotor side converter create control strategy common decouple algorithm mppt update strategy crowbardfigwind turbinepower conversion controlpower electronics control,"['simplify', 'crowbar', 'doubly', 'feed', 'induction', 'build', 'igbts', 'ideal', 'switch', 'cut', 'cut', 'crowbar', 'circuit', 'change', 'reference', 'voltage', 'rotor', 'side', 'converter', 'create', 'control', 'strategy', 'common', 'decouple', 'algorithm', 'mppt', 'update', 'strategy', 'crowbardfigwind', 'turbinepower', 'conversion', 'controlpower', 'electronics', 'control']",4
1038,45801,"this circuit enables us to amplify the voltage level<p>this circuit enables us to amplify the voltage level from one level to other. both the dc and ac can be used as supply.</p>power_conversion_control,power_electronics_control,amplifier,inverting,opamp",14,2,2,0,12,circuit enable amplify voltage levelthis circuit enable amplify voltage level one level supply power conversion controlpower electronics,"['circuit', 'enable', 'amplify', 'voltage', 'levelthis', 'circuit', 'enable', 'amplify', 'voltage', 'level', 'one', 'level', 'supply', 'power', 'conversion', 'controlpower', 'electronics']",1
1039,45802,"this circuit enables us to amplify the voltage level<p>this circuit enables us to amplify the voltage level from one level to other. both the dc and ac can be used as supply.</p>power_conversion_control,power_electronics_control,amplifier,noninverting,opamp",14,2,2,0,13,circuit enable amplify voltage levelthis circuit enable amplify voltage level one level supply power conversion controlpower electronics,"['circuit', 'enable', 'amplify', 'voltage', 'levelthis', 'circuit', 'enable', 'amplify', 'voltage', 'level', 'one', 'level', 'supply', 'power', 'conversion', 'controlpower', 'electronics']",1
1040,45808,"differential amplifier using opamp as non-inverting amplifier<p>differential amplifier using opamp is designed and the opamp is an non-inverting amplifier.this is used to make the output as the difference of the two inputs using an opamp</p>amplifier,difference,differential amplifier,non inverting,opamp",12,0,1,0,11,differential amplifier opamp non invert amplifier opamp design opamp non invert amplifier make output difference two input amplifiernon invertingopamp,"['differential', 'amplifier', 'opamp', 'non', 'invert', 'amplifier', 'opamp', 'design', 'opamp', 'non', 'invert', 'amplifier', 'make', 'output', 'difference', 'two', 'input', 'amplifiernon', 'invertingopamp']",5
1041,45811,"adder using opamp<p>adder using opamp. this adds the inputs and gives the added one as output.</p>adder,opamp,operational amplifier,summer",13,0,1,0,12,adder opampadder opamp add input give add one output amplifiersummer,"['adder', 'opampadder', 'opamp', 'add', 'input', 'give', 'add', 'one', 'output', 'amplifiersummer']",0
1042,45812,"adder using opamp with negative gain<p>adder using opamp. this adds the inputs and gives the added one as output.the negative gain here indicates the positive output.</p>adder,gain,opamp,operational amplifier,summer",14,0,1,0,13,adder opamp negative gainadder opamp add input give add one output negative gain indicate positive output amplifiersummer,"['adder', 'opamp', 'negative', 'gainadder', 'opamp', 'add', 'input', 'give', 'add', 'one', 'output', 'negative', 'gain', 'indicate', 'positive', 'output', 'amplifiersummer']",5
1043,45815,"Ball dropped on non-ideal surface <p>A model for capturing the trajectory of a ball dropped on the surface with certain coefficient of restitution which could be varied to see various possibilities.</p>ball,coefficient of restitution,collision,gravity",46,4,2,0,49,ball drop non ideal surface capture trajectory ball drop surface certain coefficient restitution could vary see various possibility ballcoefficient,"['ball', 'drop', 'non', 'ideal', 'surface', 'capture', 'trajectory', 'ball', 'drop', 'surface', 'certain', 'coefficient', 'restitution', 'could', 'vary', 'see', 'various', 'possibility', 'ballcoefficient']",8
1044,45816,"instrumentation amplifier using op-amp<p>the circuit that is used in the data acquisition, medical instrumentation, current/voltage monitoring etc., is instrumentation amplifier and it is built by using the operational amplifier</p>instrumentation amplifier,op amp,operational amplifier",17,0,1,0,15,instrumentation amplifier ampthe circuit data acquisition medical instrumentation current voltage monitoring etc instrumentation amplifier build operational amplifierop ampoperational amplifier,"['instrumentation', 'amplifier', 'ampthe', 'circuit', 'data', 'acquisition', 'medical', 'instrumentation', 'current', 'voltage', 'monitoring', 'etc', 'instrumentation', 'amplifier', 'build', 'operational', 'amplifierop', 'ampoperational', 'amplifier']",8
1045,45835,"The file is an example of simple design for simulation of Switch in MATLAB<p>The file contains 5 components:- Sine Wave- Constant- Switch- Two (2) ScopesIt serves as an example on how to use a switch in MATLAB. There are three (3) inputs and one (1) output in the switch. When condition in input 2 is met, output is channeled to input 1 else it is channeled to input 3.</p>switch",5,0,1,0,5,file example simple design switch matlabthe file contain component sine wave constant switch two scopesit serf example switch three input one output switch condition input meet output channel input else channel input switch,"['file', 'example', 'simple', 'design', 'switch', 'matlabthe', 'file', 'contain', 'component', 'sine', 'wave', 'constant', 'switch', 'two', 'scopesit', 'serf', 'example', 'switch', 'three', 'input', 'one', 'output', 'switch', 'condition', 'input', 'meet', 'output', 'channel', 'input', 'else', 'channel', 'input', 'switch']",7
1046,45887,"Implementation of a IEEE paper based robotic snake model and controller for second year uni project<p>I have attached my work implementing a robotic snake model described in an IEEE paper (also attached). I am not the most efficient coder, but feel free to have a look and tinker with it slash suggest improvements. Sorry, its not the most well commented code as well. But if you want understanding of where things come from, please refer to the paper. But I have tested it and it works. I also made animations that run by taking the data from the simulink models.I should have done this from the start; but I would like to change it to make a n link system. At the moment I have hard coded for a three link snake. It is a spaghetti code but could do with some suggestions and matlab tips.</p>control,control design,locomotion,modeling,noob code,robotics,serpentine,snake",94,0,1,0,185,implementation iee paper base robotic snake controller second year uni projecti attach work implement robotic snake describe iee paper also attach efficient coder feel free look tinker slash suggest improvement sorry well comment code well want understanding thing come please refer paper test work also make animation run take data start would like change make link moment hard cod three link snake spaghetti code could suggestions tip controlcontrol,"['implementation', 'iee', 'paper', 'base', 'robotic', 'snake', 'controller', 'second', 'year', 'uni', 'projecti', 'attach', 'work', 'implement', 'robotic', 'snake', 'describe', 'iee', 'paper', 'also', 'attach', 'efficient', 'coder', 'feel', 'free', 'look', 'tinker', 'slash', 'suggest', 'improvement', 'sorry', 'well', 'comment', 'code', 'well', 'want', 'understanding', 'thing', 'come', 'please', 'refer', 'paper', 'test', 'work', 'also', 'make', 'animation', 'run', 'take', 'data', 'start', 'would', 'like', 'change', 'make', 'link', 'moment', 'hard', 'cod', 'three', 'link', 'snake', 'spaghetti', 'code', 'could', 'suggestions', 'tip', 'controlcontrol']",0
1047,45889,"TrueTIme Adaptive Regulator <p>This file contains the MATLAB model of the adaptive regulator presented in the conference paper-""Srinivasan, S., Vallabhan, M., Ramaswamy, S., &amp; Kotta, U. (2013, May). Adaptive regulator for networked control systems: MATLAB and true time implementation. In Control and Decision Conference (CCDC), 2013 25th Chinese (pp. 2551-2555). IEEE.""You may require to initialize the nodes, and requests can be made to <a href=""mailto:seshucontrol@gmail.com"">seshucontrol@gmail.com</a></p>adaptive controller,networked control systems,truetime",138,10,3,0,154,truetime adaptive regulator file contain adaptive regulator present conference paper srinivasan vallabhan ramaswamy amp kotta may adaptive regulator networked control true time implementation control decision conference ccdc chinese iee may require initialize node request make seshucontrol gmail comadaptive control systemstruetime,"['truetime', 'adaptive', 'regulator', 'file', 'contain', 'adaptive', 'regulator', 'present', 'conference', 'paper', 'srinivasan', 'vallabhan', 'ramaswamy', 'amp', 'kotta', 'may', 'adaptive', 'regulator', 'networked', 'control', 'true', 'time', 'implementation', 'control', 'decision', 'conference', 'ccdc', 'chinese', 'iee', 'may', 'require', 'initialize', 'node', 'request', 'make', 'seshucontrol', 'gmail', 'comadaptive', 'control', 'systemstruetime']",5
1048,45890,"A workflow for modeling and simulating PAs and adaptive DPDs.<p>See the README.PDF for an explanation of the contents of this zip file and how to use the models. See DPD.PDF for general background on PA and DPD modeling.Digital pre-distortion (DPD) is a baseband signal processing technique that corrects for impairments inherent to RF power amplifiers (PAs). These impairments cause out-of-band emissions or spectral regrowth and in-band distortion which correlates with an increased bit-error-rate (BER). Wideband signals with a high peak-to-average ratio, as is characteristic of LTE/4G transmitters, are particulary susceptible to these unwanted effects. In this paper, we illustrate a workflow for modeling and simulating  PAs and DPDs.  The models shown in this article are based on two technical papers, [1] and [2]. We start from PA measurements. From measurements, we derive a static DPD design based on a memory polynomial. Such a polynomial corrects for both the non-linearities and memory effects in the PA. For simulation purposes, we construct a system-level  model to evaluate the DPDâs effectiveness. Because any PAs characteristics will vary over time and operating conditions, we extend the static DPD design to an adaptive one. We evaluate two adaptive DPD designs, one based on the (Least-Mean Square) LMS algorithm and a second using the Recurive Predictor Error Method (RPEM) algorithm.</p>digital predistortionpapower amplifierspectral regrowthrecursive,dpd",176,23,4,0,200,workflow pas adaptive dpds see readme pdf explanation content zip file see dpd pdf general background dpd digital pre distortion dpd baseband signal processing technique correct impairment inherent power amplifier pas impairment cause band emission spectral regrowth band distortion correlate increase bit error rate ber wideband signal high peak average ratio characteristic lte transmitter particulary susceptible unwanted effect paper illustrate workflow dpds show article base two technical paper start measurement measurement derive static dpd design base memory polynomial polynomial corrects non linearity memory effect purpose construct level evaluate dpds effectiveness characteristic vary time operate condition extend static dpd design adaptive one evaluate two adaptive dpd design one base least mean square algorithm second recurive predictor error method rpem algorithm digital,"['workflow', 'pas', 'adaptive', 'dpds', 'see', 'readme', 'pdf', 'explanation', 'content', 'zip', 'file', 'see', 'dpd', 'pdf', 'general', 'background', 'dpd', 'digital', 'pre', 'distortion', 'dpd', 'baseband', 'signal', 'processing', 'technique', 'correct', 'impairment', 'inherent', 'power', 'amplifier', 'pas', 'impairment', 'cause', 'band', 'emission', 'spectral', 'regrowth', 'band', 'distortion', 'correlate', 'increase', 'bit', 'error', 'rate', 'ber', 'wideband', 'signal', 'high', 'peak', 'average', 'ratio', 'characteristic', 'lte', 'transmitter', 'particulary', 'susceptible', 'unwanted', 'effect', 'paper', 'illustrate', 'workflow', 'dpds', 'show', 'article', 'base', 'two', 'technical', 'paper', 'start', 'measurement', 'measurement', 'derive', 'static', 'dpd', 'design', 'base', 'memory', 'polynomial', 'polynomial', 'corrects', 'non', 'linearity', 'memory', 'effect', 'purpose', 'construct', 'level', 'evaluate', 'dpds', 'effectiveness', 'characteristic', 'vary', 'time', 'operate', 'condition', 'extend', 'static', 'dpd', 'design', 'adaptive', 'one', 'evaluate', 'two', 'adaptive', 'dpd', 'design', 'one', 'base', 'least', 'mean', 'square', 'algorithm', 'second', 'recurive', 'predictor', 'error', 'method', 'rpem', 'algorithm', 'digital']",5
1049,45899,About simulink modulation BPSK<p>This shows how to modulate a simple BPSK system</p>simulink,11,0,1,0,11,modulation bpskthis show modulate simple bpsk,"['modulation', 'bpskthis', 'show', 'modulate', 'simple', 'bpsk']",0
1050,45909,"A novel DC-DC converter using Z-source topology<p>Transfer function given by Vout= (1-d)/(1-2d)*VinThe converter can operate in both buck and boost modes.</p>power_conversion_control,power_electronics_control,buck boost,dcdc converter,power electronics,z source",32,0,1,0,37,novel converter source function give vout vinthe converter operate buck boost mode power conversion controlpower electronics controlbuck boostdcdc converterpower electronicsz source,"['novel', 'converter', 'source', 'function', 'give', 'vout', 'vinthe', 'converter', 'operate', 'buck', 'boost', 'mode', 'power', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'boostdcdc', 'converterpower', 'electronicsz', 'source']",1
1051,45920,"1-phase inverter in R and RL load with control.<p>1-phase inverter in R and RL load with control. SPWM method is also used. In this model, 3 different types of controllers are used for R and RL load in 1-phase inverter.</p>dc to ac,inverter,r and rl load,spwm",57,0,1,0,66,phase inverter load control phase inverter load control spwm method also different type controller load phase inverter acinverterr loadspwm,"['phase', 'inverter', 'load', 'control', 'phase', 'inverter', 'load', 'control', 'spwm', 'method', 'also', 'different', 'type', 'controller', 'load', 'phase', 'inverter', 'acinverterr', 'loadspwm']",1
1052,45929,"Model of DCHP for isolated power system. Read the reference [2] for more details<p>For details about this model. Please read the following references:Reference: [1]CIGRE Task Force 25 of Advisory Group 02 of Study Committee C4 (Task ForceC4.02.25), âModeling of Gas Turbines and Steam Turbines in Combined CyclePower Plantsâ,"" 2003                  [2] Georgios Giannopoulos, ""Frequency Control in area with large scale wind power"",  Master Thesis, June 2012Disclaimer: I have developed this file similar to the one in [2]. I didn't change any parameters. The credit should be given only to the actual author in reference [2]. This file is solely for sharing information with others for educational purposes only.</p>decentralized combined heat power plant,isolated power system",100,5,3,0,120,dchp isolated power read reference detailsfor detail please read follow reference reference cigre task force advisory group study committee task forcec gas turbine steam turbine combine cyclepower plant georgios giannopoulos frequency control area large scale wind power master thesis june disclaimer develop file similar one change parameter credit give actual author reference file solely share information others educational purpose decentralize combine heat power plantisolated power,"['dchp', 'isolated', 'power', 'read', 'reference', 'detailsfor', 'detail', 'please', 'read', 'follow', 'reference', 'reference', 'cigre', 'task', 'force', 'advisory', 'group', 'study', 'committee', 'task', 'forcec', 'gas', 'turbine', 'steam', 'turbine', 'combine', 'cyclepower', 'plant', 'georgios', 'giannopoulos', 'frequency', 'control', 'area', 'large', 'scale', 'wind', 'power', 'master', 'thesis', 'june', 'disclaimer', 'develop', 'file', 'similar', 'one', 'change', 'parameter', 'credit', 'give', 'actual', 'author', 'reference', 'file', 'solely', 'share', 'information', 'others', 'educational', 'purpose', 'decentralize', 'combine', 'heat', 'power', 'plantisolated', 'power']",5
1053,45934,"Simple two joint robot arm model by combining Electrical & Mechanical equations<p>This is a small coursework I completed for a robotics module at uni. It considers the electrical equations (Voltage Law) of the DC motors and the mechanical equations (Rotational Second Law) of the arms. The equations are combined by eliminating the current in equations. They are then re-written in standard ODE form. I have also attached the course notes.Simulation is done in Simulink with arbitrary PID controller gains. There is also a script that displays the Simulink output in a simple animation.We are learning about Intelligent Control techniques with application in robotics; look forward to implement those at some point (will definitely be done if they appear as another coursework!).</p>electric_motor_control,power_conversion_control,power_electronics_control,robot,robot arm,robotics,two joint",13,0,1,0,19,simple two joint robot arm combine electrical mechanical equationsthis small coursework complete robotics module uni considers electrical equation voltage law motor mechanical equation rotational second law arm equation combine eliminate current equation write standard ode form also attach course note arbitrary pid controller gain also script display output simple animation learn intelligent control techniques application robotics look forward implement point definitely appear another coursework electric motor controlpower conversion controlpower electronics armroboticstwo joint,"['simple', 'two', 'joint', 'robot', 'arm', 'combine', 'electrical', 'mechanical', 'equationsthis', 'small', 'coursework', 'complete', 'robotics', 'module', 'uni', 'considers', 'electrical', 'equation', 'voltage', 'law', 'motor', 'mechanical', 'equation', 'rotational', 'second', 'law', 'arm', 'equation', 'combine', 'eliminate', 'current', 'equation', 'write', 'standard', 'ode', 'form', 'also', 'attach', 'course', 'note', 'arbitrary', 'pid', 'controller', 'gain', 'also', 'script', 'display', 'output', 'simple', 'animation', 'learn', 'intelligent', 'control', 'techniques', 'application', 'robotics', 'look', 'forward', 'implement', 'point', 'definitely', 'appear', 'another', 'coursework', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'armroboticstwo', 'joint']",4
1054,45936,"IEEE 9 Bus Transmission System<p>Simulink Model of IEEE 9 Bus System with load flow</p>9 bus,ieee 2 bus,ieee 9 bus,ieee bus,9bus,ieee,loadflow,power,power system analysis,simulink,transmission,fault,2 bus,smib",73,6,2,3,125,iee bus transmission iee bus load flow busiee busiee busiee bus bussmib,"['iee', 'bus', 'transmission', 'iee', 'bus', 'load', 'flow', 'busiee', 'busiee', 'busiee', 'bus', 'bussmib']",0
1055,45953,"A simple LED blinker model example for a short learning material<p>2 GPIO Write blocks are controlled by Pulse generator through a simple JK Flip-Flop. The model is configured for immediate Code-generation.</p>stm32f4discovery,tutorial",5,0,1,0,5,simple lead blinker example short learn material gpio write block control pulse generator simple flip flop configure immediate code generation stm,"['simple', 'lead', 'blinker', 'example', 'short', 'learn', 'material', 'gpio', 'write', 'block', 'control', 'pulse', 'generator', 'simple', 'flip', 'flop', 'configure', 'immediate', 'code', 'generation', 'stm']",0
1056,45979,"Basic compass gait model simulation with computer torque control for reference trajectories<p>This is another small project for a robotics module at uni.It takes a basic model of a compass gait walking robot derived from Lagrangian Mechanics and applies computer torque control to follow desired trajectories. First, the Trajectory_Planner file is run that creates the desired trajectories of the Swing Foot Heel (position, velocity and acceleration) in Cartesian as well as joint space. The CTC needs the Qdot and Qdotdot information as its input.The desired trajectories are created using piecewise cubic splines (based on initial, intersection and final conditions). It also looks at the Cartesian to joint transformation (The J matrix) to ensure that it is well-posed; i.e within the working envelope. Afterwards, run the Simulink model that has all the function blocks including a Forward Kinematics block that gets the Cartesian position by using joint information.There is also a file to display the results in an animation. It uses the joint information (from Simulink results) and performs forward kinematics to get all positions and draws it.NOTE - ALL THE SIMULATION DATA IS FOR ONE SECOND ONLY AND THE FOOT IMPACT IS NOT MODELLED. HOWEVER, IT CAN BE DONE BY CONSIDERING PRE-IMPACT AND POST-IMPACT CONDITIONS AND CONSERVATION OF ANGULAR MOMENTUM.For a full compass gait model; check this:<a href=""http://www.birl.ethz.ch/education/BIMC2012/uploads/compass_gait_mwe.m"">http://www.birl.ethz.ch/education/BIMC2012/uploads/compass_gait_mwe.m</a></p>bipedal robot,compass gait,computer torque control,ctc,cubic spline,robotics,spline,trajectory planning,walking",94,0,1,0,124,basic compass gait computer torque control reference another small project robotics module uni take basic compass gait walk robot derive lagrangian mechanic applies computer torque control follow desire trajectory first trajectory planner file run creates desired trajectory swing foot heel position velocity acceleration cartesian well joint space ctc need qdot qdotdot information input desire trajectory create piecewise cubic spline base initial intersection final condition also look cartesian joint transformation matrix ensure well pose within work envelope afterwards run function block include forward kinematics block get cartesian position joint information also file display result animation joint information result perform forward kinematics get position draw note data one second foot impact however consider pre impact post impact condition conservation angular momentum full compass gait check http birl ethz education bimc uploads compass gait mwe mbipedal robotcompass gaitcomputer torque controlctccubic planningwalking,"['basic', 'compass', 'gait', 'computer', 'torque', 'control', 'reference', 'another', 'small', 'project', 'robotics', 'module', 'uni', 'take', 'basic', 'compass', 'gait', 'walk', 'robot', 'derive', 'lagrangian', 'mechanic', 'applies', 'computer', 'torque', 'control', 'follow', 'desire', 'trajectory', 'first', 'trajectory', 'planner', 'file', 'run', 'creates', 'desired', 'trajectory', 'swing', 'foot', 'heel', 'position', 'velocity', 'acceleration', 'cartesian', 'well', 'joint', 'space', 'ctc', 'need', 'qdot', 'qdotdot', 'information', 'input', 'desire', 'trajectory', 'create', 'piecewise', 'cubic', 'spline', 'base', 'initial', 'intersection', 'final', 'condition', 'also', 'look', 'cartesian', 'joint', 'transformation', 'matrix', 'ensure', 'well', 'pose', 'within', 'work', 'envelope', 'afterwards', 'run', 'function', 'block', 'include', 'forward', 'kinematics', 'block', 'get', 'cartesian', 'position', 'joint', 'information', 'also', 'file', 'display', 'result', 'animation', 'joint', 'information', 'result', 'perform', 'forward', 'kinematics', 'get', 'position', 'draw', 'note', 'data', 'one', 'second', 'foot', 'impact', 'however', 'consider', 'pre', 'impact', 'post', 'impact', 'condition', 'conservation', 'angular', 'momentum', 'full', 'compass', 'gait', 'check', 'http', 'birl', 'ethz', 'education', 'bimc', 'uploads', 'compass', 'gait', 'mwe', 'mbipedal', 'robotcompass', 'gaitcomputer', 'torque', 'controlctccubic', 'planningwalking']",5
1057,46067,"IEEE 14 Bus system according to IEEE guidelines.<p>IEEE 14 bus system is widely used as a case for conducting various studies like short circuit analysis, Load flow studies, interconnected grid problems etc...</p>ieee 14 bus,ieee bus,14 bus,ieee,power system analysis",70,0,1,0,155,iee bus accord iee guideline iee bus widely case conduct various study like short circuit analysis load flow study interconnect grid problem etc iee busiee bus busieepower analysis,"['iee', 'bus', 'accord', 'iee', 'guideline', 'iee', 'bus', 'widely', 'case', 'conduct', 'various', 'study', 'like', 'short', 'circuit', 'analysis', 'load', 'flow', 'study', 'interconnect', 'grid', 'problem', 'etc', 'iee', 'busiee', 'bus', 'busieepower', 'analysis']",0
1058,46081,"the low pass filter only allows low frequency signals.<p>A simple passive RC Low Pass Filter or LPF, can be easily made by connecting together in series a single Resistor with a single Capacitor . In this type of filter arrangement the input signal ( Vin ) is applied to the series combination (both the Resistor and Capacitor together) but the output signal ( Vout ) is taken across the capacitor only. This type of filter is known generally as a âfirst-order filterâ or âone-pole filterâ, why first-order or single-pole?, because it has only âoneâ reactive component, the capacitor, in the circuit.</p>simulink",7,0,1,0,7,low pas filter allow low frequency signal simple passive low pas filter lpf easily make connect together series single resistor single capacitor type filter arrangement input signal vin apply series combination resistor capacitor together output signal vout take across capacitor type filter know generally first order filter one pole filter first order single pole one reactive component capacitor circuit,"['low', 'pas', 'filter', 'allow', 'low', 'frequency', 'signal', 'simple', 'passive', 'low', 'pas', 'filter', 'lpf', 'easily', 'make', 'connect', 'together', 'series', 'single', 'resistor', 'single', 'capacitor', 'type', 'filter', 'arrangement', 'input', 'signal', 'vin', 'apply', 'series', 'combination', 'resistor', 'capacitor', 'together', 'output', 'signal', 'vout', 'take', 'across', 'capacitor', 'type', 'filter', 'know', 'generally', 'first', 'order', 'filter', 'one', 'pole', 'filter', 'first', 'order', 'single', 'pole', 'one', 'reactive', 'component', 'capacitor', 'circuit']",4
1059,46085,cascaded h bridge multilevel inverter<p>here a model of three phase 5 level cascaded h bridge mulilevel inverter is developed</p>model,134,3,2,0,127,cascade bridge multilevel inverterhere three phase level cascade bridge mulilevel inverter developedmodel,"['cascade', 'bridge', 'multilevel', 'inverterhere', 'three', 'phase', 'level', 'cascade', 'bridge', 'mulilevel', 'inverter', 'developedmodel']",3
1060,46107,"Solar PV feed IM<p>Solar PV feed IM for Water pumping.<a href=""https://www.mediafire.com/?ktofcbm9w8f7gx5"">https://www.mediafire.com/?ktofcbm9w8f7gx5</a></p>solar pv feed im",194,8,4,0,218,solar feed imsolar feed water pump mediafire com ktofcbm solar feed,"['solar', 'feed', 'imsolar', 'feed', 'water', 'pump', 'mediafire', 'com', 'ktofcbm', 'solar', 'feed']",5
1061,46108,"Modeling of Photovoltaic Module with Simulink<p>This paper presents a unique step-by-step procedure for the simulation of photovoltaic modules with matlab/Simulink. One-diode equivalent circuit is employed in order to investigate I-V and P-V characteristics of a typical 36 W solar module. The proposed model is designed with a user-friendly icons and a dialog box like Simulink block libraries.<a href=""https://www.mediafire.com/?ktofcbm9w8f7gx5"">https://www.mediafire.com/?ktofcbm9w8f7gx5</a></p>power_conversion_control,power_electronics_control,solar photovoltaic panel",86,9,3,0,90,photovoltaic module paper present unique step step procedure photovoltaic modules one diode equivalent circuit employ order investigate characteristic typical solar module propose design user friendly icon dialog box like block mediafire com ktofcbm power conversion controlpower electronics controlsolar photovoltaic panel,"['photovoltaic', 'module', 'paper', 'present', 'unique', 'step', 'step', 'procedure', 'photovoltaic', 'modules', 'one', 'diode', 'equivalent', 'circuit', 'employ', 'order', 'investigate', 'characteristic', 'typical', 'solar', 'module', 'propose', 'design', 'user', 'friendly', 'icon', 'dialog', 'box', 'like', 'block', 'mediafire', 'com', 'ktofcbm', 'power', 'conversion', 'controlpower', 'electronics', 'controlsolar', 'photovoltaic', 'panel']",4
1062,46133,"Motor Shield Driver Blocks<p>This package contains motor driver blocks for 3 Arduino Motor Shields:1) Adafruit Motor Shield V1.x (DC and Stepper motor drivers)2) Adafruit Motor Shield V2 (DC and Stepper motor drivers)3) Arduino Motor Shield R3 (DC motor drivers for ports A and B)Refer to the readme.txt file for more details and make sure you read AFMotorV2.pdf before using the Adafruit Motor Shield V2.</p>arduino,driver,motor shield,servo,stepper,electric_motor_control,power_conversion_control,power_electronics_control",22,2,2,0,16,motor shield driver blocksthis package contains motor driver block arduino motor shield adafruit motor shield stepper motor driver adafruit motor shield stepper motor driver arduino motor shield motor driver port refer readme txt file detail make sure read afmotorv pdf adafruit motor shield motor controlpower conversion controlpower electronics control,"['motor', 'shield', 'driver', 'blocksthis', 'package', 'contains', 'motor', 'driver', 'block', 'arduino', 'motor', 'shield', 'adafruit', 'motor', 'shield', 'stepper', 'motor', 'driver', 'adafruit', 'motor', 'shield', 'stepper', 'motor', 'driver', 'arduino', 'motor', 'shield', 'motor', 'driver', 'port', 'refer', 'readme', 'txt', 'file', 'detail', 'make', 'sure', 'read', 'afmotorv', 'pdf', 'adafruit', 'motor', 'shield', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1063,46135,"open loop operation of 3ph VSI fed IM using m-code<p>A open loop operation of VSI fed Three Phase Induction Motor with two level Space Vector Modulation.</p>ac motor,induction motor,induction motor modeling,inverter modeling,mathematical modeling,motor control,pwm,space vector modulation,speed control,svm,svpwm,three phase induction motor,three phase inverter,electric_motor_control,power_electronics_control",99,6,3,0,117,open loop operation vsi feed codea open loop operation vsi feed three phase induction motor two level space vector modulation motorinduction motorinduction motor modelingmotor controlpwmspace vector modulationspeed phase induction motorthree phase motor controlpower electronics control,"['open', 'loop', 'operation', 'vsi', 'feed', 'codea', 'open', 'loop', 'operation', 'vsi', 'feed', 'three', 'phase', 'induction', 'motor', 'two', 'level', 'space', 'vector', 'modulation', 'motorinduction', 'motorinduction', 'motor', 'modelingmotor', 'controlpwmspace', 'vector', 'modulationspeed', 'phase', 'induction', 'motorthree', 'phase', 'motor', 'controlpower', 'electronics', 'control']",1
1064,46154,"star connected load<p>In star connection, there is four wire, three wires are phase wire and fourth is neutral which is taken from the star point. Star connection is preferred for long distance power transmission because it is having the neutral point. In this we need to come to the concept of balanced and unbalanced current in power system.When equal current will flow through all the three phases, then it is called as balanced current. And when the current will not be equal in any of the phase, then it is unbalanced current. In this case, during balanced condition there will be no current flowing through the neutral line and hence there is no use of the neutral terminal. But when there will be unbalanced current flowing in the three phase circuit, neutral is having a vital role. It will take the unbalanced current through to the ground and protect the transformer. Unbalanced current affects transformer and it may also cause damage to the transformer and for this star connection is preferred for long distance transmission.</p>power electronics,power systemstar connected load,simulink",19,0,1,0,23,star connect loadin star connection four wire three wire phase wire fourth neutral take star point star connection prefer long distance power transmission neutral point need come concept balance unbalanced current power equal current flow three phase call balanced current current equal phase unbalance current case balance condition current flow neutral line hence neutral terminal unbalanced current flow three phase circuit neutral vital role take unbalanced current ground protect transformer unbalance current affect transformer may also cause damage transformer star connection prefer long distance transmission power systemstar connect,"['star', 'connect', 'loadin', 'star', 'connection', 'four', 'wire', 'three', 'wire', 'phase', 'wire', 'fourth', 'neutral', 'take', 'star', 'point', 'star', 'connection', 'prefer', 'long', 'distance', 'power', 'transmission', 'neutral', 'point', 'need', 'come', 'concept', 'balance', 'unbalanced', 'current', 'power', 'equal', 'current', 'flow', 'three', 'phase', 'call', 'balanced', 'current', 'current', 'equal', 'phase', 'unbalance', 'current', 'case', 'balance', 'condition', 'current', 'flow', 'neutral', 'line', 'hence', 'neutral', 'terminal', 'unbalanced', 'current', 'flow', 'three', 'phase', 'circuit', 'neutral', 'vital', 'role', 'take', 'unbalanced', 'current', 'ground', 'protect', 'transformer', 'unbalance', 'current', 'affect', 'transformer', 'may', 'also', 'cause', 'damage', 'transformer', 'star', 'connection', 'prefer', 'long', 'distance', 'transmission', 'power', 'systemstar', 'connect']",4
1065,46155,"balanced star connected load <p>In star connection, there is four wire, three wires are phase wire and fourth is neutral which is taken from the star point. Star connection is preferred for long distance power transmission because it is having the neutral point. In this we need to come to the concept of balanced and unbalanced current in power system.When equal current will flow through all the three phases, then it is called as balanced current. And when the current will not be equal in any of the phase, then it is unbalanced current. In this case, during balanced condition there will be no current flowing through the neutral line and hence there is no use of the neutral terminal. But when there will be unbalanced current flowing in the three phase circuit, neutral is having a vital role. It will take the unbalanced current through to the ground and protect the transformer. Unbalanced current affects transformer and it may also cause damage to the transformer and for this star connection is preferred for long distance transmission.</p>simulinkpower electronicspower systemstar connected load",20,0,1,0,23,balance star connect load star connection four wire three wire phase wire fourth neutral take star point star connection prefer long distance power transmission neutral point need come concept balance unbalanced current power equal current flow three phase call balanced current current equal phase unbalance current case balance condition current flow neutral line hence neutral terminal unbalanced current flow three phase circuit neutral vital role take unbalanced current ground protect transformer unbalance current affect transformer may also cause damage transformer star connection prefer long distance transmission systemstar connect load,"['balance', 'star', 'connect', 'load', 'star', 'connection', 'four', 'wire', 'three', 'wire', 'phase', 'wire', 'fourth', 'neutral', 'take', 'star', 'point', 'star', 'connection', 'prefer', 'long', 'distance', 'power', 'transmission', 'neutral', 'point', 'need', 'come', 'concept', 'balance', 'unbalanced', 'current', 'power', 'equal', 'current', 'flow', 'three', 'phase', 'call', 'balanced', 'current', 'current', 'equal', 'phase', 'unbalance', 'current', 'case', 'balance', 'condition', 'current', 'flow', 'neutral', 'line', 'hence', 'neutral', 'terminal', 'unbalanced', 'current', 'flow', 'three', 'phase', 'circuit', 'neutral', 'vital', 'role', 'take', 'unbalanced', 'current', 'ground', 'protect', 'transformer', 'unbalance', 'current', 'affect', 'transformer', 'may', 'also', 'cause', 'damage', 'transformer', 'star', 'connection', 'prefer', 'long', 'distance', 'transmission', 'systemstar', 'connect', 'load']",4
1066,46195,"Simple EPS plant model and motor control model<p>This file is Simple Electric Power Steering(EPS) Model made by SimMechanics. This model has EPS plant model and conrtoller. The detail see Simple_EPS.pdf'. </p>electric_motor_control,power_electronics_control,mechanical modeling,physical modeling",82,19,3,16,80,simple eps plant motor control modelthis file simple electric power steer eps make simmechanics eps plant conrtoller detail see simple eps pdf electric motor controlpower electronics,"['simple', 'eps', 'plant', 'motor', 'control', 'modelthis', 'file', 'simple', 'electric', 'power', 'steer', 'eps', 'make', 'simmechanics', 'eps', 'plant', 'conrtoller', 'detail', 'see', 'simple', 'eps', 'pdf', 'electric', 'motor', 'controlpower', 'electronics']",3
1067,46207,figuras<p>figuras realizadas con cuadros de funcion matematica usando sin y cos</p>sin y cos functions,19,0,1,0,20,figurasfiguras realizadas con cuadros funcion matematica usando sin cossin function,"['figurasfiguras', 'realizadas', 'con', 'cuadros', 'funcion', 'matematica', 'usando', 'sin', 'cossin', 'function']",8
1068,46221,"Servo signal processing with STM32F4-Discovery<p>The model processes a standard 50Hz servo signal from the RC receiver and outputs a proportional PWM signal to be processed by the Motor control unit.Demonstration:<a href=""https://www.youtube.com/watch?v=eVSlAjezf1INot"">https://www.youtube.com/watch?v=eVSlAjezf1INot</a> working very well yet, but it'll keep getting better...Update: The model linked to GitHub produces much better results than what was shown in the video. Complete documentation in Hungarian and English poster file included.No further changes are planned.</p>electric_motor_control,power_conversion_control,power_electronics_control,rc",25,0,1,0,27,servo signal processing stm discoverythe process standard servo signal receiver output proportional pwm signal process motor control unit demonstration youtube com watch evslajezf inot work well yet keep get well update link github produce much good result show video complete documentation hungarian english poster file include change plan electric motor controlpower conversion controlpower electronics controlrc,"['servo', 'signal', 'processing', 'stm', 'discoverythe', 'process', 'standard', 'servo', 'signal', 'receiver', 'output', 'proportional', 'pwm', 'signal', 'process', 'motor', 'control', 'unit', 'demonstration', 'youtube', 'com', 'watch', 'evslajezf', 'inot', 'work', 'well', 'yet', 'keep', 'get', 'well', 'update', 'link', 'github', 'produce', 'much', 'good', 'result', 'show', 'video', 'complete', 'documentation', 'hungarian', 'english', 'poster', 'file', 'include', 'change', 'plan', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlrc']",4
1069,46269,"It is a simple closed loop controlled boost converter with variable load<p>It is a simple closed loop controlled boost converter with variable load.</p>boost converterclosed loop control of boost converter,dcdc converter",38,1,2,0,43,simple close loop control boost converter variable loadit simple close loop control boost converter variable load boost converterclosed loop control boost converterdcdc converter,"['simple', 'close', 'loop', 'control', 'boost', 'converter', 'variable', 'loadit', 'simple', 'close', 'loop', 'control', 'boost', 'converter', 'variable', 'load', 'boost', 'converterclosed', 'loop', 'control', 'boost', 'converterdcdc', 'converter']",1
1070,46270,"Simulink models of a multibit quadrature delta sigma A/D converter with DWA.<p>This submission contains three Simulink models of of a multibit quadrature delta sigma A/D converter. All models use Data Weighted Averaging (DWA) in complex domain. The different models have different solutions to realize DWA.These models were used in a study and the resulting paper was submitted to IEEE TCAS2:M. Neitola and T. Rahkonen, ""Generalized Quadrature Data Weighted Averaging""  Submitted to IEEE  Trans.  Circuits  and  Systems  II,  April 2014.</p>data conversion,simulink",423,33,5,0,459,multibit quadrature delta sigma converter dwa submission contain three multibit quadrature delta sigma converter data weight average dwa complex domain different different solution realize dwa study result paper submit iee tcas neitola rahkonen generalize quadrature data weight average submit iee trans circuit april data,"['multibit', 'quadrature', 'delta', 'sigma', 'converter', 'dwa', 'submission', 'contain', 'three', 'multibit', 'quadrature', 'delta', 'sigma', 'converter', 'data', 'weight', 'average', 'dwa', 'complex', 'domain', 'different', 'different', 'solution', 'realize', 'dwa', 'study', 'result', 'paper', 'submit', 'iee', 'tcas', 'neitola', 'rahkonen', 'generalize', 'quadrature', 'data', 'weight', 'average', 'submit', 'iee', 'trans', 'circuit', 'april', 'data']",5
1071,46273,"negative clipper<p>this circuit deal with the negative cippers.</p>clippers,negative clippers,sine wave",9,0,1,0,6,negative clipperthis circuit deal negative cippers clipperssine wave,"['negative', 'clipperthis', 'circuit', 'deal', 'negative', 'cippers', 'clipperssine', 'wave']",8
1072,46279,"a problem on opamp<p>a problem on opamp</p>matlab,opamp,operational amplifier,problem on opamp",19,0,1,0,17,problem opampa problem opamp,"['problem', 'opampa', 'problem', 'opamp']",5
1073,46290,"Simple example of ensemble control using a mass-spring model.<p>This is a simple example of ensemble control on a mass-spring model. Several masses are attached to springs, and the other end of the springs are attached to a linear motor. The parameters of the mass-spring model are bounded but unknown. The position and the speed of the masses are used as states of the model. In this example, the position and the speed of the different mass-spring systems will be steered from the same initial state to the same desired final state with a certain degree of accuracy, dependent on the order of ensemble control. To do this, a discrete-time input is precalculated, which is then used to simulate the models using Simulink. The mathematics of ensemble control are explained in the workshop below:<a href=""http://telerobot.cs.tamu.edu/UiA2011/slides/BretlICRA-Workshop/BretlICRA-Workshop.pdf"">http://telerobot.cs.tamu.edu/UiA2011/slides/BretlICRA-Workshop/BretlICRA-Workshop.pdf</a></p>electric_motor_control,power_electronics_control,ensemble control,mass,spring,uncertain parameters",5,0,1,0,4,simple example ensemble control mass spring simple example ensemble control mass spring several mass attach spring end spring attach linear motor parameter mass spring bound unknown position speed mass state example position speed different mass spring steer initial state desire final state certain degree accuracy dependent order ensemble control discrete time input precalculated used mathematics ensemble control explain workshop http telerobot tamu edu uia slide bretlicra workshop bretlicra workshop pdfelectric motor controlpower electronics controlensemble parameter,"['simple', 'example', 'ensemble', 'control', 'mass', 'spring', 'simple', 'example', 'ensemble', 'control', 'mass', 'spring', 'several', 'mass', 'attach', 'spring', 'end', 'spring', 'attach', 'linear', 'motor', 'parameter', 'mass', 'spring', 'bound', 'unknown', 'position', 'speed', 'mass', 'state', 'example', 'position', 'speed', 'different', 'mass', 'spring', 'steer', 'initial', 'state', 'desire', 'final', 'state', 'certain', 'degree', 'accuracy', 'dependent', 'order', 'ensemble', 'control', 'discrete', 'time', 'input', 'precalculated', 'used', 'mathematics', 'ensemble', 'control', 'explain', 'workshop', 'http', 'telerobot', 'tamu', 'edu', 'uia', 'slide', 'bretlicra', 'workshop', 'bretlicra', 'workshop', 'pdfelectric', 'motor', 'controlpower', 'electronics', 'controlensemble', 'parameter']",4
1074,46294,"Basic Wind Turbine with PMSG by using Matlab built in blocks<p>This model is developed to encourage the learner/student to develop a Variable Speed Wind Turbine with PMSG. I considered basic parametersin Matlab Blocks with little modification based on the output/load.User can vary and simulate any parameter to study the response ofthe system.User can add a rectifier and a battery for battery storage system.</p>battery_system_management,power_electronics_control,how to build mat lab model for wind turbine,matlab model for vswt,variable speed wind turbine with pmsg,wind turbine with matlab,wind turbine with pmsg",15,0,1,0,21,basic wind turbine pmsg build blocksthis develop encourage learner student develop variable speed wind turbine pmsg consider basic parametersin block little modification base output load user vary parameter study response ofthe user add rectifier battery battery storage battery managementpower electronics controlhow build mat lab wind turbinematlab vswtvariable speed wind turbine pmsgwind turbine matlabwind turbine pmsg,"['basic', 'wind', 'turbine', 'pmsg', 'build', 'blocksthis', 'develop', 'encourage', 'learner', 'student', 'develop', 'variable', 'speed', 'wind', 'turbine', 'pmsg', 'consider', 'basic', 'parametersin', 'block', 'little', 'modification', 'base', 'output', 'load', 'user', 'vary', 'parameter', 'study', 'response', 'ofthe', 'user', 'add', 'rectifier', 'battery', 'battery', 'storage', 'battery', 'managementpower', 'electronics', 'controlhow', 'build', 'mat', 'lab', 'wind', 'turbinematlab', 'vswtvariable', 'speed', 'wind', 'turbine', 'pmsgwind', 'turbine', 'matlabwind', 'turbine', 'pmsg']",4
1075,46305,"A conical tank system is simulated in Simulink.<p>A liquid of constant density is fed at a constant volumetric rate Fo into a conical tank of height Hmax and maximal radius Rmax. The flow out of the tank is Kvh^1/2 where h is the height of the liquid in the tank and Kv is the valve coefficient.</p>conical tank system modelling,valve coefficient",13,0,1,0,18,conical tank liquid constant density feed constant volumetric rate conical tank height hmax maximal radius rmax flow tank kvh height liquid tank valve coefficient conical tank modellingvalve coefficient,"['conical', 'tank', 'liquid', 'constant', 'density', 'feed', 'constant', 'volumetric', 'rate', 'conical', 'tank', 'height', 'hmax', 'maximal', 'radius', 'rmax', 'flow', 'tank', 'kvh', 'height', 'liquid', 'tank', 'valve', 'coefficient', 'conical', 'tank', 'modellingvalve', 'coefficient']",8
1076,46316,"Quarter Car Active Suspension Modeling with Various Road Profiles<p>""The suspension system represents a vehicle system at each wheel. It consists of a spring ks, a damper bs and a hydraulic actuator Fa. The tire stiffness and damping properties are also shown by kt and bt, respectively. The effective vehicle body mass is shown by Ms (sprung mass), and Mu (unsprung mass) represents the effective mass for the wheel and axle. The vertical displacements from the static equilibrium for Mu and Ms are shown by xu and xs, respectively. The road profile is represented by xr. The suspension travel xs - xu is measured and compared to the set point (r = 0). The required actuator force is determined by the controller to eliminate the error, and thus, to reduce the vehicle oscillations. The actuator can provide a maximum force of 3000.""</p>active suspension system,actuator,controller,quarter car,road profile,static equilibrium,stiffness and damping,vehicle modeling",476,12,2,0,642,quarter car active suspension various road profile suspension represent vehicle wheel consist spring damper hydraulic actuator tire stiffness damp property also show respectively effective vehicle body mass show sprung mass unsprung mass represent effective mass wheel axle vertical displacement static equilibrium show respectively road profile represent suspension travel measure compare set point require actuator force determine controller eliminate error thus reduce vehicle oscillation actuator provide maximum force active suspension carroad profilestatic dampingvehicle modeling,"['quarter', 'car', 'active', 'suspension', 'various', 'road', 'profile', 'suspension', 'represent', 'vehicle', 'wheel', 'consist', 'spring', 'damper', 'hydraulic', 'actuator', 'tire', 'stiffness', 'damp', 'property', 'also', 'show', 'respectively', 'effective', 'vehicle', 'body', 'mass', 'show', 'sprung', 'mass', 'unsprung', 'mass', 'represent', 'effective', 'mass', 'wheel', 'axle', 'vertical', 'displacement', 'static', 'equilibrium', 'show', 'respectively', 'road', 'profile', 'represent', 'suspension', 'travel', 'measure', 'compare', 'set', 'point', 'require', 'actuator', 'force', 'determine', 'controller', 'eliminate', 'error', 'thus', 'reduce', 'vehicle', 'oscillation', 'actuator', 'provide', 'maximum', 'force', 'active', 'suspension', 'carroad', 'profilestatic', 'dampingvehicle', 'modeling']",5
1077,46332,"Embedded Coder Processor In Loop (PIL) Target for Hercules RM48 MCUs<p>MathWorks and Texas Instruments engineers demonstrate a new workflow for generating TI Hercules MCU optimized code from Simulink.This target includes Texas Instruments of Processor-in-the-Loop (PIL) testing with Simulink and TI Hercules MCUs for RM48. To get started, follow step by step instructions in Help browser--&gt;Supplemental Software--&gt;TI Hercules RM48 Target--&gt;Getting Started Guide</p>arm,ccs,hercules,iec61508,iso26262,pil",18,0,1,0,15,embed coder processor loop pil target hercules mcusmathworks texas instrument engineer demonstrate new workflow generate hercules mcu optimize code target include texas instrument processor loop pil test hercules mcus get start follow step step instruction help browser supplemental software hercules target get start iso pil,"['embed', 'coder', 'processor', 'loop', 'pil', 'target', 'hercules', 'mcusmathworks', 'texas', 'instrument', 'engineer', 'demonstrate', 'new', 'workflow', 'generate', 'hercules', 'mcu', 'optimize', 'code', 'target', 'include', 'texas', 'instrument', 'processor', 'loop', 'pil', 'test', 'hercules', 'mcus', 'get', 'start', 'follow', 'step', 'step', 'instruction', 'help', 'browser', 'supplemental', 'software', 'hercules', 'target', 'get', 'start', 'iso', 'pil']",0
1078,46405,"PMSG based wind power generation system is connected to controllable three phase rectifier.<p>3-phase rectifier connected from PMSG based wind power generation system. in this model we can regulate DC voltage at how much we want. However, I didn't tune it properly for frequency and L, R....Readers have to connect C filter after rectification. This model is only to understand how to regulate the output voltage from PMSG based wind energy system with 3-phase controllable rectifier. If you interface MPPT algorithm then rectifier may work for MPPT converter.</p>generation system,mppt,pmsg,power,rectifier,renewable energy system,voltage regulator,wind,power_conversion_control,power_electronics_control",142,6,4,0,170,pmsg base wind power generation connect controllable three phase rectifier phase rectifier connect pmsg base wind power generation regulate voltage much want however tune properly frequency reader connect filter rectification understand regulate output voltage pmsg base wind energy phase controllable rectifier interface mppt algorithm rectifier may work mppt converter generation energy systemvoltage conversion controlpower electronics control,"['pmsg', 'base', 'wind', 'power', 'generation', 'connect', 'controllable', 'three', 'phase', 'rectifier', 'phase', 'rectifier', 'connect', 'pmsg', 'base', 'wind', 'power', 'generation', 'regulate', 'voltage', 'much', 'want', 'however', 'tune', 'properly', 'frequency', 'reader', 'connect', 'filter', 'rectification', 'understand', 'regulate', 'output', 'voltage', 'pmsg', 'base', 'wind', 'energy', 'phase', 'controllable', 'rectifier', 'interface', 'mppt', 'algorithm', 'rectifier', 'may', 'work', 'mppt', 'converter', 'generation', 'energy', 'systemvoltage', 'conversion', 'controlpower', 'electronics', 'control']",3
1079,46407,"Linear Kalman Filter implemented with Simulink blocks<p>Linear Kalman Filter implemented with Simulink blocks in its standard form: time-update, measurement-update. It is easy to test cases like these: Ad = I + Ac*T, the noise is not white, P behavior, K behavior.</p>kalman filter,state estimation",82,9,4,0,85,linear kalman filter implement blockslinear kalman filter implement block standard form time update measurement update easy test case like noise white behavior behavior kalman filterstate estimation,"['linear', 'kalman', 'filter', 'implement', 'blockslinear', 'kalman', 'filter', 'implement', 'block', 'standard', 'form', 'time', 'update', 'measurement', 'update', 'easy', 'test', 'case', 'like', 'noise', 'white', 'behavior', 'behavior', 'kalman', 'filterstate', 'estimation']",0
1080,46409,"Hybrid PV and Fuel cell<p>hybrid PV and fuel cell power system</p>hybrid pv and fuel cell,renewable energy,power_conversion_control,power_electronics_control",356,19,4,0,391,hybrid fuel cellhybrid fuel cell power systemhybrid fuel cellrenewable energypower conversion controlpower electronics control,"['hybrid', 'fuel', 'cellhybrid', 'fuel', 'cell', 'power', 'systemhybrid', 'fuel', 'cellrenewable', 'energypower', 'conversion', 'controlpower', 'electronics', 'control']",1
1081,46410,"hybrid PV and Wind power system<p>grid integration of hybrid  PV and Wind power system.</p>hybeis pv and wind,intelligent,renewable energy,power_conversion_control,power_electronics_control",1057,53,9,0,1172,hybrid wind power systemgrid integration hybrid wind power hybeis energypower conversion controlpower electronics control,"['hybrid', 'wind', 'power', 'systemgrid', 'integration', 'hybrid', 'wind', 'power', 'hybeis', 'energypower', 'conversion', 'controlpower', 'electronics', 'control']",1
1082,46411,"Fuzzy bassed MPPT for fuel cell<p>Fuzzy based MPPT for fuel cell and optimized fuel.  </p>fuel cell,mppt,renewable energy,power_conversion_control,power_electronics_control",82,7,3,0,90,fuzzy bassed mppt fuel cellfuzzy base mppt fuel cell optimize fuel fuel energypower conversion controlpower electronics control,"['fuzzy', 'bassed', 'mppt', 'fuel', 'cellfuzzy', 'base', 'mppt', 'fuel', 'cell', 'optimize', 'fuel', 'fuel', 'energypower', 'conversion', 'controlpower', 'electronics', 'control']",3
1083,46447,"Monty Hall Problem simulink model<p>This example is a simulink model for Monty Hall problem. In this problem the player is asked to choose a door first out of three doors in which one has a car and rest two has goats behind. The host who already know the distribution of objects then opens a door and show a goat and then offers the player to switch his selection. This model outputs the probability of getting a car after the player switch his selection.</p>monty hall,simulink",23,0,1,0,29,monty hall problem modelthis example monty hall problem problem player ask choose door first three door one car rest two goat behind host already know distribution object open door show goat offer player switch selection output probability get car player switch selection monty,"['monty', 'hall', 'problem', 'modelthis', 'example', 'monty', 'hall', 'problem', 'problem', 'player', 'ask', 'choose', 'door', 'first', 'three', 'door', 'one', 'car', 'rest', 'two', 'goat', 'behind', 'host', 'already', 'know', 'distribution', 'object', 'open', 'door', 'show', 'goat', 'offer', 'player', 'switch', 'selection', 'output', 'probability', 'get', 'car', 'player', 'switch', 'selection', 'monty']",5
1084,46462,"Simple buck converter model with 50% duty cycle<p>The conceptual model of the buck converter is best understood in terms of the relation between current and voltage of the inductor. Beginning with the switch open (in the ""off"" position), the current in the circuit is 0. When the switch is first closed, the current will begin to increase, and the inductor will produce an opposing voltage across its terminals in response to the changing current. This voltage drop counteracts the voltage of the source and therefore reduces the net voltage across the load. Over time, the rate of change of current decreases, and the voltage across the inductor also then decreases, increasing the voltage at the load. During this time, the inductor is storing energy in the form of a magnetic field. If the switch is opened while the current is still changing, then there will always be a voltage drop across the inductor, so the net voltage at the load will always be less than the input voltage source. When the switch is opened again, the voltage source will be removed from the circuit, and the current will decrease. The changing current will produce a change in voltage across the inductor, now aiding the source voltage. The stored energy in the inductor's magnetic field supports current flow through the load. During this time, the inductor is discharging its stored energy into the rest of the circuit. If the switch is closed again before the inductor fully discharges, the voltage at the load will always be greater than zero.</p>buck converter,choppers",14,0,1,0,14,simple buck converter duty cyclethe conceptual buck converter best understood term relation current voltage inductor begin switch open position current circuit switch first close current begin increase inductor produce oppose voltage across terminal response change current voltage drop counteract voltage source therefore reduces net voltage across load time rate change current decrease voltage across inductor also decrease increase voltage load time inductor store energy form magnetic field switch open current still change always voltage drop across inductor net voltage load always less input voltage source switch open voltage source remove circuit current decrease change current produce change voltage across inductor aid source voltage store energy inductor magnetic field support current flow load time inductor discharge store energy rest circuit switch close inductor fully discharge voltage load always great zero buck,"['simple', 'buck', 'converter', 'duty', 'cyclethe', 'conceptual', 'buck', 'converter', 'best', 'understood', 'term', 'relation', 'current', 'voltage', 'inductor', 'begin', 'switch', 'open', 'position', 'current', 'circuit', 'switch', 'first', 'close', 'current', 'begin', 'increase', 'inductor', 'produce', 'oppose', 'voltage', 'across', 'terminal', 'response', 'change', 'current', 'voltage', 'drop', 'counteract', 'voltage', 'source', 'therefore', 'reduces', 'net', 'voltage', 'across', 'load', 'time', 'rate', 'change', 'current', 'decrease', 'voltage', 'across', 'inductor', 'also', 'decrease', 'increase', 'voltage', 'load', 'time', 'inductor', 'store', 'energy', 'form', 'magnetic', 'field', 'switch', 'open', 'current', 'still', 'change', 'always', 'voltage', 'drop', 'across', 'inductor', 'net', 'voltage', 'load', 'always', 'less', 'input', 'voltage', 'source', 'switch', 'open', 'voltage', 'source', 'remove', 'circuit', 'current', 'decrease', 'change', 'current', 'produce', 'change', 'voltage', 'across', 'inductor', 'aid', 'source', 'voltage', 'store', 'energy', 'inductor', 'magnetic', 'field', 'support', 'current', 'flow', 'load', 'time', 'inductor', 'discharge', 'store', 'energy', 'rest', 'circuit', 'switch', 'close', 'inductor', 'fully', 'discharge', 'voltage', 'load', 'always', 'great', 'zero', 'buck']",4
1085,46470,"DC motor control with Diode bride rectifier<p>A separately excited dc motor is controlled by using diode bridge rectifier, having 4 diodes taking 1-phase sinusoidal input supply with 230v. diodes are Uncontrolled switches, so the output parameters having ripples. This is one of the most popular rectifier configuration and are used widely for applications requiring dc. power output from a few hundred watts to several kilo watts. </p>electric_motor_control,power_conversion_control,power_electronics_control,dc motor control,diode bridge rectifier,power electronics",15,0,1,0,17,motor control diode bride rectifiera separately excite motor control diode bridge rectifier diode take phase sinusoidal input supply diode uncontrolled switch output parameter ripple one popular rectifier configuration widely application require power output hundred watts several kilo watts electric motor controlpower conversion controlpower electronics controldc motor controldiode bridge rectifierpower electronics,"['motor', 'control', 'diode', 'bride', 'rectifiera', 'separately', 'excite', 'motor', 'control', 'diode', 'bridge', 'rectifier', 'diode', 'take', 'phase', 'sinusoidal', 'input', 'supply', 'diode', 'uncontrolled', 'switch', 'output', 'parameter', 'ripple', 'one', 'popular', 'rectifier', 'configuration', 'widely', 'application', 'require', 'power', 'output', 'hundred', 'watts', 'several', 'kilo', 'watts', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motor', 'controldiode', 'bridge', 'rectifierpower', 'electronics']",3
1086,46471,"Simple inveter model with step up converter using PV<p>A simple inverter model have been developed using pv cell. A simple PV cell have used to get the DC output which is stepped up using boost converter. For the inverter design IGBT's are used. IGBT having many advantages compared with other switches. The output of the inverter is not sinusoidal.To get the sine wave a 2nd order system is used</p>power_conversion_control,power_electronics_control,boost inverter,inverter,power electronics,pv design",50,3,2,0,53,simple inveter step converter pva simple inverter develop cell simple cell get output step boost converter inverter design igbt igbt many advantage compare switch output inverter sinusoidal get sine wave order usedpower conversion controlpower electronics controlboost electronicspv design,"['simple', 'inveter', 'step', 'converter', 'pva', 'simple', 'inverter', 'develop', 'cell', 'simple', 'cell', 'get', 'output', 'step', 'boost', 'converter', 'inverter', 'design', 'igbt', 'igbt', 'many', 'advantage', 'compare', 'switch', 'output', 'inverter', 'sinusoidal', 'get', 'sine', 'wave', 'order', 'usedpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'electronicspv', 'design']",3
1087,46472,"FullWave Rectifier with PWM control<p>Full Wave Rectifier with PWM control &amp; LC filter</p>electric_motor_control,power_conversion_control,power_electronics_control,fullwave rectifier,power electronics,pwm control",22,0,1,0,23,fullwave rectifier pwm controlfull wave rectifier pwm control amp filterelectric motor controlpower conversion controlpower electronics controlfullwave rectifierpower electronicspwm control,"['fullwave', 'rectifier', 'pwm', 'controlfull', 'wave', 'rectifier', 'pwm', 'control', 'amp', 'filterelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlfullwave', 'rectifierpower', 'electronicspwm', 'control']",1
1088,46500,"twelve pulse converter with diode bridges<p>twelve pulse converter with diode bridges. Two bridges have been taken, to get 12 pulses.</p>power electronics,rectifiers,twelve pulse converter",24,0,1,0,33,twelve pulse converter diode bridgestwelve pulse converter diode bridge two bridge take get pulses power pulse converter,"['twelve', 'pulse', 'converter', 'diode', 'bridgestwelve', 'pulse', 'converter', 'diode', 'bridge', 'two', 'bridge', 'take', 'get', 'pulses', 'power', 'pulse', 'converter']",3
1089,46506,it is a casic cdma model<p>in this cdma model direct sequence spreding of message signal sinal is done by Xoring with message signal and ber is calculated at receiver</p>communications,39,5,2,0,35,casic cdma modelin cdma direct sequence spreding message signal sinal xoring message signal ber calculate,"['casic', 'cdma', 'modelin', 'cdma', 'direct', 'sequence', 'spreding', 'message', 'signal', 'sinal', 'xoring', 'message', 'signal', 'ber', 'calculate']",8
1090,46533,"Closed loop Control of ThreePhase IGBT Bridge Converter<p>Closed loop Control of Three Phase IGBT Bridge Converter have been given. in this the IGBT pulses are controlled by Synchronized 6 pulse generator.</p>power_conversion_control,power_electronics_control,igbt,power electronics,rectifier",32,0,1,0,37,closed loop control threephase igbt bridge converterclosed loop control three phase igbt bridge converter give igbt pulse control synchronized pulse generator power conversion controlpower electronics,"['closed', 'loop', 'control', 'threephase', 'igbt', 'bridge', 'converterclosed', 'loop', 'control', 'three', 'phase', 'igbt', 'bridge', 'converter', 'give', 'igbt', 'pulse', 'control', 'synchronized', 'pulse', 'generator', 'power', 'conversion', 'controlpower', 'electronics']",1
1091,46542,"Robust Controller for magnetic levitation<p>The file create a model for control system on magnetic levitation. There are two uncertainty in the model. And so it design H infinite controller through Riccati Equation, to make the system works well with uncertainties.</p>control design,simulink",15,0,1,0,17,robust controller magnetic levitationthe file create control magnetic levitation two uncertainty design infinite controller riccati equation make work well uncertainty control,"['robust', 'controller', 'magnetic', 'levitationthe', 'file', 'create', 'control', 'magnetic', 'levitation', 'two', 'uncertainty', 'design', 'infinite', 'controller', 'riccati', 'equation', 'make', 'work', 'well', 'uncertainty', 'control']",4
1092,46543,1-phase inverter with PR current control basic<p>1-phase inverter with PR current control basic transfer function approach</p>1phase inverter current control,284,14,5,0,339,phase inverter current control basic phase inverter current control basic transfer function approach phase inverter current control,"['phase', 'inverter', 'current', 'control', 'basic', 'phase', 'inverter', 'current', 'control', 'basic', 'transfer', 'function', 'approach', 'phase', 'inverter', 'current', 'control']",1
1093,46559,"foc control of PMSM using model predictive control<p>this simulation controls the speed of a PMSM using model predictive control.</p>electric_motor_control,power_electronics_control,model predictive control",78,1,2,0,79,foc control pmsm predictive controlthis control speed pmsm predictive control electric motor controlpower electronics controlmodel predictive control,"['foc', 'control', 'pmsm', 'predictive', 'controlthis', 'control', 'speed', 'pmsm', 'predictive', 'control', 'electric', 'motor', 'controlpower', 'electronics', 'controlmodel', 'predictive', 'control']",1
1094,46570,"A collection of 4 state space models in simulink.<p>Four state space models created in Simulink. These are simple examples to be used in the study of modern control theory, such as controlalbility and observability tests, stability and asymptotic stability etc.</p>control,simulink,state space",40,1,2,0,49,collection state space four state space create simple example study modern control theory controlalbility observability test stability asymptotic stability etc space,"['collection', 'state', 'space', 'four', 'state', 'space', 'create', 'simple', 'example', 'study', 'modern', 'control', 'theory', 'controlalbility', 'observability', 'test', 'stability', 'asymptotic', 'stability', 'etc', 'space']",4
1095,46591,"single phase asynchronous motor with Fuel cell<p>A Fuel cell based single phase capacitor start asynchronous motor 0.25HP</p>electric_motor_control,power_electronics_control,ac motors,fc,inverter,renewable energy sources",26,0,1,0,34,single phase asynchronous motor fuel cella fuel cell base single phase capacitor start asynchronous motor hpelectric motor controlpower electronics controlac energy source,"['single', 'phase', 'asynchronous', 'motor', 'fuel', 'cella', 'fuel', 'cell', 'base', 'single', 'phase', 'capacitor', 'start', 'asynchronous', 'motor', 'hpelectric', 'motor', 'controlpower', 'electronics', 'controlac', 'energy', 'source']",1
1096,46595,"The Van der Pol Oscillator nonlinear model in Simulink.<p>This Simulink model represents the Van der Pol oscillator described by the following differential equationx'' - m(1-x^2)x' + x = 0where x=x(t) a function of time and m is a physical parameter. One can easily observe that for m=0 the system becomes linear.The user is advised to try different values for m and see the changes in the system behavior. One can also change the initial values for x(0) and x'(0) and see if this changes the behavior of the system.Notes: The refine factor has been changeg to 4 in order to produce a  smoother simulation. Also do not forget to uncheck the ""limit data points"" option.This is included in [1].References: [1] An introduction to Control Theory Applications Using Matlab, <a href=""https://www.researchgate.net/publication/281374146_An_Introduction_to_Control_Theory_Applications_with_Matlab"">https://www.researchgate.net/publication/281374146_An_Introduction_to_Control_Theory_Applications_with_Matlab</a> [2] DIFFERENTIAL EQUATIONS,DYNAMICAL SYSTEMS, AND AN INTRODUCTION TO CHAOS, Hirsch, Smale, Devaney. Elsevier Academic Press. [3] <a href=""https://www.researchgate.net/publication/281374146_An_Introduction_to_Control_Theory_Applications_with_Matlab"">https://www.researchgate.net/publication/281374146_An_Introduction_to_Control_Theory_Applications_with_Matlab</a></p>chaos,chaotic solutions,nonlinear,oscillator,simulink,van der pol",11,0,1,0,13,van der pol oscillator nonlinear represent van der pol oscillator describe follow differential equationx function time physical parameter one easily observe becomes linear user advise try different value see change behavior one also change initial value see change behavior note refine factor changeg order produce smoother also forget uncheck limit data point option include reference introduction control theory application researchgate net publication introduction control theory application differential introduction chaos hirsch smale devaney elsevier academic press researchgate net publication introduction control theory application der pol,"['van', 'der', 'pol', 'oscillator', 'nonlinear', 'represent', 'van', 'der', 'pol', 'oscillator', 'describe', 'follow', 'differential', 'equationx', 'function', 'time', 'physical', 'parameter', 'one', 'easily', 'observe', 'becomes', 'linear', 'user', 'advise', 'try', 'different', 'value', 'see', 'change', 'behavior', 'one', 'also', 'change', 'initial', 'value', 'see', 'change', 'behavior', 'note', 'refine', 'factor', 'changeg', 'order', 'produce', 'smoother', 'also', 'forget', 'uncheck', 'limit', 'data', 'point', 'option', 'include', 'reference', 'introduction', 'control', 'theory', 'application', 'researchgate', 'net', 'publication', 'introduction', 'control', 'theory', 'application', 'differential', 'introduction', 'chaos', 'hirsch', 'smale', 'devaney', 'elsevier', 'academic', 'press', 'researchgate', 'net', 'publication', 'introduction', 'control', 'theory', 'application', 'der', 'pol']",0
1097,46602,"The Rabinovich Fabrikant nonlinear Equations in Simulink<p>The Rabinovich Fabrikant Equations is a system of nonlinear differential equations that exhibits chaotic behavior. The user is strongly advised to look up the following papers and try different values for the system parameters.This is included in [1]. References: [1] An introduction to Control Theory Applications Using Matlab, <a href=""https://www.researchgate.net/publication/281374146_An_Introduction_to_Control_Theory_Applications_with_Matlab"">https://www.researchgate.net/publication/281374146_An_Introduction_to_Control_Theory_Applications_with_Matlab</a> [2]  Rabinovich, Mikhail I.; Fabrikant, A. L. (1979). ""Stochastic Self-Modulation of Waves in Nonequilibrium Media"". Sov. Phys. JETP 50: 311[3] Danca, Marius-F.; Romera, Miguel (2008). ""Algorithm for Control and Anticontrol of Chaos in Continuous-Time Dynamical Systems"". Dynamics of Continuous, Discrete and Impulsive Systems. Series B: Applications &amp; Algorithms (Watam Press) 15: 155â164.</p>chaos,chaotic behavior,fabrikant,nonlinear,rabinovich",23,0,1,0,32,rabinovich fabrikant nonlinear equation rabinovich fabrikant equation nonlinear differential equation exhibit chaotic behavior user strongly advise look follow paper try different value parameter include reference introduction control theory application researchgate net publication introduction control theory application rabinovich mikhail fabrikant stochastic self modulation wave nonequilibrium medium sov phys jetp danca marius romera miguel algorithm control anticontrol chaos continuous time dynamical dynamic continuous discrete impulsive series application amp algorithms watam press chaoschaotic,"['rabinovich', 'fabrikant', 'nonlinear', 'equation', 'rabinovich', 'fabrikant', 'equation', 'nonlinear', 'differential', 'equation', 'exhibit', 'chaotic', 'behavior', 'user', 'strongly', 'advise', 'look', 'follow', 'paper', 'try', 'different', 'value', 'parameter', 'include', 'reference', 'introduction', 'control', 'theory', 'application', 'researchgate', 'net', 'publication', 'introduction', 'control', 'theory', 'application', 'rabinovich', 'mikhail', 'fabrikant', 'stochastic', 'self', 'modulation', 'wave', 'nonequilibrium', 'medium', 'sov', 'phys', 'jetp', 'danca', 'marius', 'romera', 'miguel', 'algorithm', 'control', 'anticontrol', 'chaos', 'continuous', 'time', 'dynamical', 'dynamic', 'continuous', 'discrete', 'impulsive', 'series', 'application', 'amp', 'algorithms', 'watam', 'press', 'chaoschaotic']",5
1098,46627,"Program computes and shows phasor diagram and time graph which is measured in SimPowerSystems.<p>This submission contains block for measuring voltages and currents in your SimPowerSystems model, m-file for computing desired values and gui model for showing phasor diagram. It also contains simple example. Main purpose of this program is compute and show phasor diagram and time graph which is measured in SimPowerSystems. It can be used for analyzing power grids in SimPowerSystems.How it works:1. Connect ""Phasor Diagram Analyser"" block in your model.2. Run simulation.3. Run ""Phasor_diagram_analyser.m"" m-file.4. Analyze data in GUI.</p>gui,power grid,simpowersystems,simulink",119,2,2,0,142,program computes show phasor diagram time graph measure simpowersystems submission contains block measure voltage current simpowersystems file compute desired value gui show phasor diagram also contain simple example main purpose program compute show phasor diagram time graph measure simpowersystems analyze power grid simpowersystems work connect phasor diagram analyser block run run phasor diagram analyser file analyze data gui guipower,"['program', 'computes', 'show', 'phasor', 'diagram', 'time', 'graph', 'measure', 'simpowersystems', 'submission', 'contains', 'block', 'measure', 'voltage', 'current', 'simpowersystems', 'file', 'compute', 'desired', 'value', 'gui', 'show', 'phasor', 'diagram', 'also', 'contain', 'simple', 'example', 'main', 'purpose', 'program', 'compute', 'show', 'phasor', 'diagram', 'time', 'graph', 'measure', 'simpowersystems', 'analyze', 'power', 'grid', 'simpowersystems', 'work', 'connect', 'phasor', 'diagram', 'analyser', 'block', 'run', 'run', 'phasor', 'diagram', 'analyser', 'file', 'analyze', 'data', 'gui', 'guipower']",0
1099,46628,"converter DC DC<p>an exemple circuit of a buck converter </p>power_conversion_control,power_electronics_control,mdll",13,0,1,0,12,converter dcan exemple circuit buck converter power conversion controlpower electronics controlmdll,"['converter', 'dcan', 'exemple', 'circuit', 'buck', 'converter', 'power', 'conversion', 'controlpower', 'electronics', 'controlmdll']",6
1100,46634,"rlc circuit<p>this is an basic series rlc circuit simulated using MATLAB R2010a</p>apps,electrical,rlc circuit",8,0,1,0,10,rlc circuitthis basic series rlc circuit circuit,"['rlc', 'circuitthis', 'basic', 'series', 'rlc', 'circuit', 'circuit']",4
1101,46663,"Sensors Example<p>The minimum functionality required to embed code onto the ArduPilot wouldsimply be the RC Read block with its outputs connected to the RC Writeblock. This model will simply operate the aircraft in pure manual mode. TheArduPilot will process the pilot commands and output the equivalent PWMservo or throttle commands.as shown in figure</p>matlab,simulink",32,0,1,0,37,sensor examplethe minimum functionality require embed code onto ardupilot wouldsimply read block output connect writeblock simply operate aircraft pure manual mode theardupilot process pilot command output equivalent pwmservo throttle command show,"['sensor', 'examplethe', 'minimum', 'functionality', 'require', 'embed', 'code', 'onto', 'ardupilot', 'wouldsimply', 'read', 'block', 'output', 'connect', 'writeblock', 'simply', 'operate', 'aircraft', 'pure', 'manual', 'mode', 'theardupilot', 'process', 'pilot', 'command', 'output', 'equivalent', 'pwmservo', 'throttle', 'command', 'show']",5
1102,46696,"Example of ensemble control using an overhead crane model<p>This is an example of ensemble control on an overhead crane. Attached are m-files that will calculate the input to steer the ensemble of cranes with uncertain cable length from a certain initial configuration to any desired final configuration, using the open-loop ensemble control framework. The position and speed of the cart and the angle and angular speeds of the pendulums (representing the crane loads) are used as states. The length of the pendulums is uncertain but bounded.Also attached are 2 m-files that are able to create and replay a movie of the simulated crane in action, to give the user a better understanding of the dynamics of the crane.</p>crane,ensemble control,openloop,uncertain parameters",7,0,1,0,6,example ensemble control overhead crane modelthis example ensemble control overhead crane attach file calculate input steer ensemble crane uncertain cable length certain initial configuration desire final configuration open loop ensemble control framework position speed cart angle angular speed pendulum represent crane load state length pendulum uncertain bound also attach file able create replay movie crane action give user well understand dynamic crane craneensemble parameter,"['example', 'ensemble', 'control', 'overhead', 'crane', 'modelthis', 'example', 'ensemble', 'control', 'overhead', 'crane', 'attach', 'file', 'calculate', 'input', 'steer', 'ensemble', 'crane', 'uncertain', 'cable', 'length', 'certain', 'initial', 'configuration', 'desire', 'final', 'configuration', 'open', 'loop', 'ensemble', 'control', 'framework', 'position', 'speed', 'cart', 'angle', 'angular', 'speed', 'pendulum', 'represent', 'crane', 'load', 'state', 'length', 'pendulum', 'uncertain', 'bound', 'also', 'attach', 'file', 'able', 'create', 'replay', 'movie', 'crane', 'action', 'give', 'user', 'well', 'understand', 'dynamic', 'crane', 'craneensemble', 'parameter']",5
1103,46738,"A Cascade Multilevel Inverter Using a Single DC Source<p>This is from a article of Leon Tolbert of name ""A Cascade Multilevel Inverter Using a Single DC Source"".</p>multilevel inverter,separated dc source,power_conversion_control,power_electronics_control",44,0,1,0,41,cascade multilevel inverter single sourcethis article leon tolbert name cascade multilevel inverter single source multilevel sourcepower conversion controlpower electronics control,"['cascade', 'multilevel', 'inverter', 'single', 'sourcethis', 'article', 'leon', 'tolbert', 'name', 'cascade', 'multilevel', 'inverter', 'single', 'source', 'multilevel', 'sourcepower', 'conversion', 'controlpower', 'electronics', 'control']",1
1104,46764,"New cascade H-bridge 17level inverter <p>New cascade H-bridge 17level inverter with minimum number of MOSFET switches is used in the proposed model. This will help to reduce harmonic generation and get better quality of output signal.Note :        I have filed  the above design for patent on 2013.If u want to use my file please get my permission before use this design.Note 2  Dear Authors if u want Pulse for 17 level cascade h-bridge inverter pls email me <a href=""mailto:venkatmme@gmail.com"">venkatmme@gmail.com</a></p>hybrid distributed renewable system,inverter,power system,renewable energy",1247,64,4,0,1356,new cascade bridge level inverter new cascade bridge level inverter minimum number mosfet switch propose help reduce harmonic generation get good quality output signal note file design patent want file please get permission design note dear author want pulse level cascade bridge inverter pls email venkatmme gmail comhybrid distribute renewable systemrenewable energy,"['new', 'cascade', 'bridge', 'level', 'inverter', 'new', 'cascade', 'bridge', 'level', 'inverter', 'minimum', 'number', 'mosfet', 'switch', 'propose', 'help', 'reduce', 'harmonic', 'generation', 'get', 'good', 'quality', 'output', 'signal', 'note', 'file', 'design', 'patent', 'want', 'file', 'please', 'get', 'permission', 'design', 'note', 'dear', 'author', 'want', 'pulse', 'level', 'cascade', 'bridge', 'inverter', 'pls', 'email', 'venkatmme', 'gmail', 'comhybrid', 'distribute', 'renewable', 'systemrenewable', 'energy']",4
1105,46766,"Grid  integration of hybrid PV / Wind power system.<p>Grid  integration of hybrid PV / Wind power system.- If want Intelligent control based Hybrid PV/ wind power pls email me <a href=""mailto:venkatmme@gmail.com"">venkatmme@gmail.com</a>. I will send  you</p>grid connected,hybrid pv wind power system,power_conversion_control,power_electronics_control",1057,53,9,0,1175,grid integration hybrid wind power grid integration hybrid wind power want intelligent control base hybrid wind power pls email venkatmme gmail com send yougrid connectedhybrid wind power systempower conversion controlpower electronics control,"['grid', 'integration', 'hybrid', 'wind', 'power', 'grid', 'integration', 'hybrid', 'wind', 'power', 'want', 'intelligent', 'control', 'base', 'hybrid', 'wind', 'power', 'pls', 'email', 'venkatmme', 'gmail', 'com', 'send', 'yougrid', 'connectedhybrid', 'wind', 'power', 'systempower', 'conversion', 'controlpower', 'electronics', 'control']",3
1106,46775,"Use serial communication to monitor live data from Arduino in MATLAB/Simulink<p>Do you want to monitor live data from ArduinoÂ® in MATLABÂ® and SimulinkÂ®?-You can do so easily with Simulink External Mode if you use Arduino Mega 2560 and Arduino Due (and Arduino Uno if you have R2016b or later). <a href=""https://www.mathworks.com/help/supportpkg/arduino/ug/tune-and-monitor-model-running-on-arduino-mega-2560-hardware.htmlWhat"">https://www.mathworks.com/help/supportpkg/arduino/ug/tune-and-monitor-model-running-on-arduino-mega-2560-hardware.htmlWhat</a> if you use Arduino Uno?-This File Exchange download will help you do exactly that.This submission contains three files:-serialRunOnArduino.slx: Download this model onto your Arduino board so that it sends data to serial port-serialRunOnPC.slx: Run this model locally on your PC to collect and plot serial data in Simulink-readArduinoSerial.m: Run this script to read and plot serial data in MATLAB</p>arduino,data acquisition,serial,simulink,maker",7,0,1,2,4,serial communication monitor live data arduino want monitor live data arduino easily external mode arduino mega arduino due arduino uno later mathworks com help supportpkg arduino tune monitor run arduino mega hardware htmlwhat arduino uno file exchange download help exactly submission contains three file slx download onto arduino board send data serial port serialrunonpc slx run locally collect plot serial data run script read plot serial data,"['serial', 'communication', 'monitor', 'live', 'data', 'arduino', 'want', 'monitor', 'live', 'data', 'arduino', 'easily', 'external', 'mode', 'arduino', 'mega', 'arduino', 'due', 'arduino', 'uno', 'later', 'mathworks', 'com', 'help', 'supportpkg', 'arduino', 'tune', 'monitor', 'run', 'arduino', 'mega', 'hardware', 'htmlwhat', 'arduino', 'uno', 'file', 'exchange', 'download', 'help', 'exactly', 'submission', 'contains', 'three', 'file', 'slx', 'download', 'onto', 'arduino', 'board', 'send', 'data', 'serial', 'port', 'serialrunonpc', 'slx', 'run', 'locally', 'collect', 'plot', 'serial', 'data', 'run', 'script', 'read', 'plot', 'serial', 'data']",7
1107,46777,"Produces NEDC, Artemis, WLTP Class 3 and selected EPA driving cycles easily<p>This submission contains a Simulink block that can produce several different standard driving cycles used for automotive emissions, range and energy consumption testing.  Using this block might save time and effort - I am sharing it to speed up student simulation classes and projects.At present, the block represents the following cycles: NEDC, Artemis, WLTP Class 3, UDDS, FTP and HWFET.  It could easily be extended to provide more.If you download this as a zip archive, you will need to unzip this and save the files on your computer.  After that, you may need to use the 'install.m' script to make sure all the toolbox directories are on your MATLAB search path.</p>artemis,automotive,driving cycle,epa,ftp,hwfet,nedc,simulation,udds,wltp,world light test procedure",24,4,2,2,28,produce nedc artemis wltp class select epa driving cycle easilythis submission contains block produce several different standard driving cycle automotive emission range energy consumption test block might save time effort share speed student class project present block represent follow cycle nedc artemis wltp class udds ftp hwfet could easily extend provide download zip archive need unzip save file computer may need install script make sure toolbox directory search path light test procedure,"['produce', 'nedc', 'artemis', 'wltp', 'class', 'select', 'epa', 'driving', 'cycle', 'easilythis', 'submission', 'contains', 'block', 'produce', 'several', 'different', 'standard', 'driving', 'cycle', 'automotive', 'emission', 'range', 'energy', 'consumption', 'test', 'block', 'might', 'save', 'time', 'effort', 'share', 'speed', 'student', 'class', 'project', 'present', 'block', 'represent', 'follow', 'cycle', 'nedc', 'artemis', 'wltp', 'class', 'udds', 'ftp', 'hwfet', 'could', 'easily', 'extend', 'provide', 'download', 'zip', 'archive', 'need', 'unzip', 'save', 'file', 'computer', 'may', 'need', 'install', 'script', 'make', 'sure', 'toolbox', 'directory', 'search', 'path', 'light', 'test', 'procedure']",0
1108,46821,"Three control theory simulink examples regarding gain, dumping and 2nd-to-3rd order systems<p>In this Submission we provide three fundamental examples in the theory of control systems.In the first model we have a classic dumping system. The user can see the different effects of the dumping coefficient in the response of the system.In the second example the effect of adding a gain to the system can be observed.In the third example we can see when a 3rd order transfer function can be modeled by a 2nd order system. This depends on the position of the poles. The user may try and see the effects of adding zeros too.All these simple examples help in the better understanding of fundamental classic control theory concepts and are aimed towards undergraduate students, mathematicians or engineers.References:[1] Norman Nise, 2011, Control Systems Engineering, Sixth Edition, Willey and Sons Inc.</p>control,control design,dumping,gain,simulink,state space",28,0,1,0,30,three control theory example regard gain dump order systemsin submission provide three fundamental example theory control first classic dump user see different effect dump coefficient response second example effect add gain observe third example see order transfer function order depend position pole user may try see effect add zero simple examples help well understanding fundamental classic control theory concept aim towards undergraduate student mathematicians engineer reference norman nise control engineering sixth edition willey son inc controlcontrol space,"['three', 'control', 'theory', 'example', 'regard', 'gain', 'dump', 'order', 'systemsin', 'submission', 'provide', 'three', 'fundamental', 'example', 'theory', 'control', 'first', 'classic', 'dump', 'user', 'see', 'different', 'effect', 'dump', 'coefficient', 'response', 'second', 'example', 'effect', 'add', 'gain', 'observe', 'third', 'example', 'see', 'order', 'transfer', 'function', 'order', 'depend', 'position', 'pole', 'user', 'may', 'try', 'see', 'effect', 'add', 'zero', 'simple', 'examples', 'help', 'well', 'understanding', 'fundamental', 'classic', 'control', 'theory', 'concept', 'aim', 'towards', 'undergraduate', 'student', 'mathematicians', 'engineer', 'reference', 'norman', 'nise', 'control', 'engineering', 'sixth', 'edition', 'willey', 'son', 'inc', 'controlcontrol', 'space']",0
1109,46843,"MATLAB, Simulink and MuPAD files to accompany the second edition of the book.<p>""Dynamical Systems with Applications using MATLAB 2nd Edition"" covers standard material for an introduction to dynamical systems theory. The text deals with both discrete and continuous systems. There are applications in computing, mechanical systems, chemical kinetics, electric circuits, interacting species, economics, nonlinear optics, biology, neural networks and materials science, for example. These MATLAB programs have been written to supplement the textbook, and give the reader a real hands-on experience. The text is aimed at senior undergraduates, graduate students, and working scientists in industry. Table of Contents of the book, mock exam papers, example coursework questions and MATLAB index file can be found in Lynch R2019a.zip.</p>bifurcation,binary oscillator computing,chaos control,companion software,complex iterative map,coursework questions,differential equations,discrete systems,fractals,image processing,josephson junction,limit cycles,mandelbrot,memristor,multifractals,neural networks,nonlinear optics,simulink,synchronization",121,1,1,0,150,mupad file accompany second edition book dynamical application edition cover standard material introduction dynamical theory text deal discrete continuous application compute mechanical chemical kinetics electric circuit interact specie economics nonlinear optic biology neural network material science example program write supplement textbook give reader real hand experience text aim senior undergraduate graduate student work scientist industry table content book mock exam paper example coursework question index file find lynch zip oscillator computingchaos softwarecomplex iterative mapcoursework junctionlimit,"['mupad', 'file', 'accompany', 'second', 'edition', 'book', 'dynamical', 'application', 'edition', 'cover', 'standard', 'material', 'introduction', 'dynamical', 'theory', 'text', 'deal', 'discrete', 'continuous', 'application', 'compute', 'mechanical', 'chemical', 'kinetics', 'electric', 'circuit', 'interact', 'specie', 'economics', 'nonlinear', 'optic', 'biology', 'neural', 'network', 'material', 'science', 'example', 'program', 'write', 'supplement', 'textbook', 'give', 'reader', 'real', 'hand', 'experience', 'text', 'aim', 'senior', 'undergraduate', 'graduate', 'student', 'work', 'scientist', 'industry', 'table', 'content', 'book', 'mock', 'exam', 'paper', 'example', 'coursework', 'question', 'index', 'file', 'find', 'lynch', 'zip', 'oscillator', 'computingchaos', 'softwarecomplex', 'iterative', 'mapcoursework', 'junctionlimit']",5
1110,46868,"Parametrically configurable Solar Panel<p>Uses the single diode equivalent circuit mode of a solar cell.</p>photovoltaic,pv,solar cell,solar panel",1,0,1,0,0,parametrically configurable solar paneluses single diode equivalent circuit mode solar cell cellsolar panel,"['parametrically', 'configurable', 'solar', 'paneluses', 'single', 'diode', 'equivalent', 'circuit', 'mode', 'solar', 'cell', 'cellsolar', 'panel']",4
1111,46870,Feedforward control<p>Simulation of a feedforward control over a textile plant with a series delay of 0.1 seg.</p>feedforward control,91,0,1,0,113,feedforward feedforward control textile plant series delay seg feedforward control,"['feedforward', 'feedforward', 'control', 'textile', 'plant', 'series', 'delay', 'seg', 'feedforward', 'control']",4
1112,46897,"Simulation of a power system in an aircraft using three products in the Physical Modelling<p>This demo presents a model of simulation of a RAT (Ram Air Turbine) system used as emergency power system in an aircraft. Electrical, mechanical and hydraulic components are modeled respectively with SimPowerSystems, SimHydraulics and SimMechanics. The advantage of a model spanning different physical domains is to have on overview of basic interactions between all the major components. It is most useful in the early stage of the design of a future system, in this case an hybrid emergency system for the more electrical aircraft. The power system is composed from a wind turbine (15 kW) connected to an electrical synchronous generator. The shaft of the turbine is also connected to a pump that supplies a hydraulic circuit linked through a servo valve to a cylinder. The motion of the rod is transformed into rotational movement on the axis of the Aileron. A position controller is used so that the deflection angle tracks a given reference by controlling the servo valve. The authors of this work are: Martin Gendrin, Jean-FranÃ§ois Doyon, Daniel BÃ©rubÃ©, Louis A. Dessaint from Ãcole de Technologie SupÃ©rieure in MontrÃ©al with the participation of FranÃ§ois Pelletier from Bombardier Aeronautics. SoulÃ©man Njoya Motapon made the R14a version </p>aerospace,electrical generator,hydraulic pump,more electrical aircraft,ram air turbine,simulation of emergency electrical system",272,23,5,0,271,power aircraft three product physical modellingthis demo present rat ram air turbine emergency power aircraft electrical mechanical hydraulic component respectively simpowersystems simhydraulics simmechanics advantage span different physical domain overview basic interaction major component useful early stage design future case hybrid emergency electrical aircraft power compose wind turbine connect electrical synchronous generator shaft turbine also connect pump supply hydraulic circuit link servo valve cylinder motion rod transform rotational movement axis aileron position controller deflection angle track give reference control servo valve author work martin gendrin jean franÃ§ois doyon daniel bÃ©rubÃ© louis dessaint Ã©cole technologie supÃ©rieure montrÃ©al participation franÃ§ois pelletier bombardier aeronautics soulÃ©man njoya motapon make version pumpmore electrical aircraftram air emergency electrical,"['power', 'aircraft', 'three', 'product', 'physical', 'modellingthis', 'demo', 'present', 'rat', 'ram', 'air', 'turbine', 'emergency', 'power', 'aircraft', 'electrical', 'mechanical', 'hydraulic', 'component', 'respectively', 'simpowersystems', 'simhydraulics', 'simmechanics', 'advantage', 'span', 'different', 'physical', 'domain', 'overview', 'basic', 'interaction', 'major', 'component', 'useful', 'early', 'stage', 'design', 'future', 'case', 'hybrid', 'emergency', 'electrical', 'aircraft', 'power', 'compose', 'wind', 'turbine', 'connect', 'electrical', 'synchronous', 'generator', 'shaft', 'turbine', 'also', 'connect', 'pump', 'supply', 'hydraulic', 'circuit', 'link', 'servo', 'valve', 'cylinder', 'motion', 'rod', 'transform', 'rotational', 'movement', 'axis', 'aileron', 'position', 'controller', 'deflection', 'angle', 'track', 'give', 'reference', 'control', 'servo', 'valve', 'author', 'work', 'martin', 'gendrin', 'jean', 'franÃ§ois', 'doyon', 'daniel', 'bÃ©rubÃ©', 'louis', 'dessaint', 'Ã©cole', 'technologie', 'supÃ©rieure', 'montrÃ©al', 'participation', 'franÃ§ois', 'pelletier', 'bombardier', 'aeronautics', 'soulÃ©man', 'njoya', 'motapon', 'make', 'version', 'pumpmore', 'electrical', 'aircraftram', 'air', 'emergency', 'electrical']",5
1113,46925,"modified PMSG, including chopper<p>I have modified the prior model.You can change machine ratings and machine numbers conveniently in the new model.The drive train is a one-mass model,you might wish to replace it with a multi-mass model.</p>crowbar,pmsg,wind farm,wind turbine",498,16,5,0,483,modify pmsg include chopperi modify prior change machine rating machine number conveniently new drive train one mass modelyou might wish replace multi mass crowbarpmsgwind farmwind turbine,"['modify', 'pmsg', 'include', 'chopperi', 'modify', 'prior', 'change', 'machine', 'rating', 'machine', 'number', 'conveniently', 'new', 'drive', 'train', 'one', 'mass', 'modelyou', 'might', 'wish', 'replace', 'multi', 'mass', 'crowbarpmsgwind', 'farmwind', 'turbine']",5
1114,46944,"Esquema simulink<p>Examen de regulaciÃ³n automÃ¡tica de 2013, GITI, Problema 1, apartado 5.</p>2013,automtica,examen,regulacin,simulink",17,0,1,0,23,esquema regulaciÃ³n automÃ¡tica giti problema apartado,"['esquema', 'regulaciÃ³n', 'automÃ¡tica', 'giti', 'problema', 'apartado']",2
1115,46953,"Fuzzy-based Control platform using LEGO Robots <p>Fuzzy controllers have gained popularity in the past few decades with successful implementations in many fields that have enabled designers to control complex systems through linguistic-based rules in contrast to traditional methods. This  presents an educational platform based on LEGOÂ© NXT to assist the learning of fuzzy logic control principles at undergraduate level by providing a simple and easy-to-follow teaching setup. The proposed fuzzy control study aims to accompany students to the learning of fuzzy control fundamentals by building hands-on robotic experiments. The proposed educational platform has been successfully applied to several undergraduate courses within the Electronics Department in the University of Guadalajara. The description of robotic experiments and the evaluation of their impact in the student performance are both provided in the paper.The article was published in:International Journal of Electrical Engineering Education,Volume 50, Number 2 (April 2013), Manchester University Press, pp. 157-171.(<a href=""http://arxiv.org/abs/1406.3602)MATLAB"">http://arxiv.org/abs/1406.3602)MATLAB</a> SOFTWAREThe software contains a main simulink file PathtrackingReducido.mdl, seven trajectories functions (tra1.m-tra7.m) and one fuzzy control function controlf2.m Decompress the file fuzzyRobot.zip and first run a trajectory, then run the PathtrackingReducido.mdl PathtrackingReducido.mdl implements a differential robotÂ´s fuzzy path-tracking example. </p>matlab,simulink",105,6,3,0,118,fuzzy base control platform lego robot fuzzy controller gain popularity past decade successful implementation many field enable designer control complex linguistic base rule contrast traditional method present educational platform base lego nxt assist learn fuzzy logic control principle undergraduate level provide simple easy follow teach setup propose fuzzy control study aim accompany student learn fuzzy control fundamental build hand robotic experiment propose educational platform successfully apply several undergraduate course within electronics department university guadalajara description robotic experiment evaluation impact student performance provide paper article publish international journal electrical engineering educationvolume number april manchester university press http arxiv org softwarethe software contain main file mdl seven trajectory function tra tra one fuzzy control function controlf decompress file fuzzyrobot zip first run trajectory run mdl mdl implement differential robot fuzzy path tracking example,"['fuzzy', 'base', 'control', 'platform', 'lego', 'robot', 'fuzzy', 'controller', 'gain', 'popularity', 'past', 'decade', 'successful', 'implementation', 'many', 'field', 'enable', 'designer', 'control', 'complex', 'linguistic', 'base', 'rule', 'contrast', 'traditional', 'method', 'present', 'educational', 'platform', 'base', 'lego', 'nxt', 'assist', 'learn', 'fuzzy', 'logic', 'control', 'principle', 'undergraduate', 'level', 'provide', 'simple', 'easy', 'follow', 'teach', 'setup', 'propose', 'fuzzy', 'control', 'study', 'aim', 'accompany', 'student', 'learn', 'fuzzy', 'control', 'fundamental', 'build', 'hand', 'robotic', 'experiment', 'propose', 'educational', 'platform', 'successfully', 'apply', 'several', 'undergraduate', 'course', 'within', 'electronics', 'department', 'university', 'guadalajara', 'description', 'robotic', 'experiment', 'evaluation', 'impact', 'student', 'performance', 'provide', 'paper', 'article', 'publish', 'international', 'journal', 'electrical', 'engineering', 'educationvolume', 'number', 'april', 'manchester', 'university', 'press', 'http', 'arxiv', 'org', 'softwarethe', 'software', 'contain', 'main', 'file', 'mdl', 'seven', 'trajectory', 'function', 'tra', 'tra', 'one', 'fuzzy', 'control', 'function', 'controlf', 'decompress', 'file', 'fuzzyrobot', 'zip', 'first', 'run', 'trajectory', 'run', 'mdl', 'mdl', 'implement', 'differential', 'robot', 'fuzzy', 'path', 'tracking', 'example']",0
1116,46998,"PMSM vs SRM vs IM <p>PERMANENT MAGNET SYNCHRONOUS MACHINE (PMSM) VS INDUCTION MACHINE(IM) VS SWITCHED RELUCTANCE MACHINE(SRM)</p>electric_motor_control,power_electronics_control,electronics,power electronics",92,6,3,0,102,pmsm srm permanent magnet synchronous machine pmsm induction machine switch reluctance machine srm electric motor controlpower electronics electronics,"['pmsm', 'srm', 'permanent', 'magnet', 'synchronous', 'machine', 'pmsm', 'induction', 'machine', 'switch', 'reluctance', 'machine', 'srm', 'electric', 'motor', 'controlpower', 'electronics', 'electronics']",1
1117,47051,"Flexible bodies via lumped parameter and finite element data for static, modal, and dynamic analysis<p>This file contains flexible beam models implemented in Simscape Multibody that use lumped parameter and finite element data approaches. It includes methods to compute static deflection, natural frequencies, plot mode shapes, and obtain the state-space representation from lumped parameter model.    Please read the README.txt file to get started.  Learn about modeling flexible bodies in Simscape Multibody <a href=""https://www.mathworks.com/campaigns/offers/model-flexible-bodies.html"">https://www.mathworks.com/campaigns/offers/model-flexible-bodies.html</a>  See also this blog for a quick explanation:<a href=""https://blogs.mathworks.com/seth/2014/05/22/flexible-bodies-in-simmechanics/"">https://blogs.mathworks.com/seth/2014/05/22/flexible-bodies-in-simmechanics/</a>   Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>  Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>ansys,cantilever beam,fea,flexible bodies,mode shapes,physical modeling,simmechanics2g,vibration",666,68,4,7,650,flexible body via lumped parameter finite element data static modal dynamic analysisthis file contain flexible beam implement simscape multibody lump parameter finite element data approach include method compute static deflection natural frequency plot mode shape obtain state space representation lump parameter please read readme txt file get start learn flexible body simscape multibody mathworks com campaign offer flexible body html see also blog quick explanation blog mathworks com seth flexible body simmechanics find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling ansyscantilever beamfeaflexible bodiesmode shapesphysical gvibration,"['flexible', 'body', 'via', 'lumped', 'parameter', 'finite', 'element', 'data', 'static', 'modal', 'dynamic', 'analysisthis', 'file', 'contain', 'flexible', 'beam', 'implement', 'simscape', 'multibody', 'lump', 'parameter', 'finite', 'element', 'data', 'approach', 'include', 'method', 'compute', 'static', 'deflection', 'natural', 'frequency', 'plot', 'mode', 'shape', 'obtain', 'state', 'space', 'representation', 'lump', 'parameter', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'learn', 'flexible', 'body', 'simscape', 'multibody', 'mathworks', 'com', 'campaign', 'offer', 'flexible', 'body', 'html', 'see', 'also', 'blog', 'quick', 'explanation', 'blog', 'mathworks', 'com', 'seth', 'flexible', 'body', 'simmechanics', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'ansyscantilever', 'beamfeaflexible', 'bodiesmode', 'shapesphysical', 'gvibration']",7
1118,47073,"This block measures the frequency of a signal.<p>The block uses a counter to count the number of cycles per second and then finds the frequency from the count. 3 options are available in this block:1. External input.2. Workspace signal.3. A TEST signal.Hope this may help. Please help me know if there is any issues with this block</p>calculator,frequency,measure,measurement",19,1,2,0,17,block measure frequency signal block counter count number cycle per second find frequency count option available block external input workspace signal test signal hope may help please help know issue,"['block', 'measure', 'frequency', 'signal', 'block', 'counter', 'count', 'number', 'cycle', 'per', 'second', 'find', 'frequency', 'count', 'option', 'available', 'block', 'external', 'input', 'workspace', 'signal', 'test', 'signal', 'hope', 'may', 'help', 'please', 'help', 'know', 'issue']",7
1119,47089,"sensorless vector control of induction motor<p>The motor is driven by a SVPWM inverter, in sensorless mode.The sensorless control algorithm (flux estimator and speed estimator) is robust and it performs good even when the motor parameter is somewhat detuned.</p>dsp,induction motor,sensorless vector control,speed and flux estimator,svpwm,electric_motor_control,power_electronics_control",315,19,5,0,344,sensorless vector control induction motorthe motor drive svpwm inverter sensorless mode sensorless control algorithm flux estimator speed estimator robust performs good even motor parameter somewhat detuned dspinduction motorsensorless vector controlspeed flux motor controlpower electronics control,"['sensorless', 'vector', 'control', 'induction', 'motorthe', 'motor', 'drive', 'svpwm', 'inverter', 'sensorless', 'mode', 'sensorless', 'control', 'algorithm', 'flux', 'estimator', 'speed', 'estimator', 'robust', 'performs', 'good', 'even', 'motor', 'parameter', 'somewhat', 'detuned', 'dspinduction', 'motorsensorless', 'vector', 'controlspeed', 'flux', 'motor', 'controlpower', 'electronics', 'control']",3
1120,47093,"Perform a active filter for fuel cell to reduce ripple of 2nd harmonic current .<p>It is based on article of L. Palma ""An Active Power Filter for Low Frequency Ripple Current Reduction in Fuel Celll Application"".</p>active filter,fuel cell,ripple current",126,6,3,0,125,perform active filter fuel cell reduce ripple harmonic current base article palma active power filter low frequency ripple current reduction fuel cell application active filterfuel cellripple current,"['perform', 'active', 'filter', 'fuel', 'cell', 'reduce', 'ripple', 'harmonic', 'current', 'base', 'article', 'palma', 'active', 'power', 'filter', 'low', 'frequency', 'ripple', 'current', 'reduction', 'fuel', 'cell', 'application', 'active', 'filterfuel', 'cellripple', 'current']",4
1121,47141,"S-function to use a joystick in Simulink (Windows only)<p>/* File:        sfun_joystick.c * Description: sfun_joystick.c is a S-function (used in a S-function block)  *              which reads joystick output into a simulink model. This  *              S-function only works on windows computer but should be easy  *              to port to other OS. * * Output:      1. Current X-coordinate. *              2. Current Y-coordinate. *              3. Current Z-coordinate. *              4. First joystick button is pressed. *              5. Second joystick button is pressed. *              6. Third joystick button is pressed. *              7. Fourth joystick button is pressed. * * Input:       Joystick ID. Typically ""0"". * * Usage:       First compile from Matlab command window:  *                  mex sfun_joystick.c -lWinmm *              A demo model called joystickDemo.slx (R2013b) is available.  * * Author:      Per Hillerborg, * Version:     2.0, October 17, 2014, (Update from 1.0. Changed to INHERITED_SAMPLE_TIME so it is more plug and play) *   * Note:        This file can be edited to only send out wanted output. *              For more info see: *              <a href=""http://msdn.microsoft.com/en-us/library/dd757110%28v=vs.85%29.aspx"">http://msdn.microsoft.com/en-us/library/dd757110%28v=vs.85%29.aspx</a>         *       * Further tips:If more buttons are preferred, use the JOYINFOEX instead of  *              JOYINFO which contains extended info including more buttons. */</p>joystick,sfunction,simulink,windows",3,0,1,0,2,function joystick window file sfun joystick description sfun joystick function function block read joystick output function work windows computer easy port output current coordinate current coordinate current coordinate first joystick button press second joystick button press third joystick button press fourth joystick button press input joystick typically usage first compile command window mex sfun joystick lwinmm demo call joystickdemo slx available author per hillerborg version october update change inherited sample time plug play note file edit send want output info see http msdn microsoft com aspx tip button prefer joyinfoex instead joyinfo contains extend info include button,"['function', 'joystick', 'window', 'file', 'sfun', 'joystick', 'description', 'sfun', 'joystick', 'function', 'function', 'block', 'read', 'joystick', 'output', 'function', 'work', 'windows', 'computer', 'easy', 'port', 'output', 'current', 'coordinate', 'current', 'coordinate', 'current', 'coordinate', 'first', 'joystick', 'button', 'press', 'second', 'joystick', 'button', 'press', 'third', 'joystick', 'button', 'press', 'fourth', 'joystick', 'button', 'press', 'input', 'joystick', 'typically', 'usage', 'first', 'compile', 'command', 'window', 'mex', 'sfun', 'joystick', 'lwinmm', 'demo', 'call', 'joystickdemo', 'slx', 'available', 'author', 'per', 'hillerborg', 'version', 'october', 'update', 'change', 'inherited', 'sample', 'time', 'plug', 'play', 'note', 'file', 'edit', 'send', 'want', 'output', 'info', 'see', 'http', 'msdn', 'microsoft', 'com', 'aspx', 'tip', 'button', 'prefer', 'joyinfoex', 'instead', 'joyinfo', 'contains', 'extend', 'info', 'include', 'button']",0
1122,47144,"Communication between MATLAB/Simulink and X-Plane 10 via UDP<p>These Simulink models allow communication between MATLAB/Simulink and X-Plane10. This can be used to test control designs, that are implemented in MATLAB/Simulink, in a flight simulator, specifically X-Plane 10.It is tested successfully on both Mac OS 10.8 and Windows platforms.Three files are included:1- Setup model: sends commands to x-plane via UDP to choose/tell what data x-plane 10 should spit out. You can choose as many data indices as available in the 'Data Input &amp; Output' tab in x-plane 10.2- Send model: Sends commands to control surfaces only via UDP.3- Get model: receives data that was chosen by the 'setup model' from x-plane 10</p>matlab,simulink,udp,xplane 10,aerospace",83,2,2,0,86,communication plane via udpthese allow communication plane test control design implement flight specifically plane test successfully mac window platform three file include setup sends command plane via udp choose tell data plane spit choose many data index available data input amp output tab plane send sends command control surface via udp get receives data chosen setup plane aerospace,"['communication', 'plane', 'via', 'udpthese', 'allow', 'communication', 'plane', 'test', 'control', 'design', 'implement', 'flight', 'specifically', 'plane', 'test', 'successfully', 'mac', 'window', 'platform', 'three', 'file', 'include', 'setup', 'sends', 'command', 'plane', 'via', 'udp', 'choose', 'tell', 'data', 'plane', 'spit', 'choose', 'many', 'data', 'index', 'available', 'data', 'input', 'amp', 'output', 'tab', 'plane', 'send', 'sends', 'command', 'control', 'surface', 'via', 'udp', 'get', 'receives', 'data', 'chosen', 'setup', 'plane', 'aerospace']",0
1123,47145,"Tenet Technetronics' RFID library for Arduino Mega 260 <p>This Submission showcases how to write a driver based on the serial protocol as well as cimmunicate with a RFID reader ad build a handy block. </p>arduino,arduinomega,arduinouno,devicedrivers,rfid,tenet technetronics",2,1,1,1,1,tenet technetronics rfid arduino mega submission showcases write driver base serial protocol well cimmunicate rfid reader build handy block technetronics,"['tenet', 'technetronics', 'rfid', 'arduino', 'mega', 'submission', 'showcases', 'write', 'driver', 'base', 'serial', 'protocol', 'well', 'cimmunicate', 'rfid', 'reader', 'build', 'handy', 'block', 'technetronics']",5
1124,47169,"GUI tutorial for understanding the PCA-based Multivatiate Statistical Process Control (MSPC) strategy<p>A Graphical User Interface (GUI) is developed in MATLAB as a tutorial for understanding the PCA-based MSPC strategy. It uses a nonlinear model of a binary distillation column implemented in Simulink. The nonlinear model has four manipulated variables, four controlled variables and three input measured disturbances, plus 41 molar fractions corresponding to every column stage. The methodology for PCA-based MSPC is implemented in two phases. During Phase I, the user can simulate the distillation column under normal operating conditions at three different operating points. When the simulation is finished, the GUI obtains the corresponding PCA model automatically. In Phase II, the user can simulate several scenarios with different combinations of disturbances and failures and monitorize them through Squared Prediction Error (SPE) and T2 control charts. Contribution plots are used in conjunction with these control charts to check the original variables responsible of such abnormal situations.The application allows starting a new benchmark from scratch or opening a previously saved one. User can save its progress at any time as well as export simulation results to an Excel file. Each sheet in this Excel file corresponds to a test in the benchmark. If Excel is not present, the software will attempt to write file in CSV format.This work is part of a Master Thesis available at <a href=""http://mseg.webs.upv.es/App%20Data/VillalbaT.pdf"">http://mseg.webs.upv.es/App%20Data/VillalbaT.pdf</a>. It includes a tutorial for this software.To start the GUI run ""MSPC_main.m"".Note that, the first time the software is run, the simulation may take some time to run.</p>benchmark,contribution plots,multivariate control charts,multivariate statistical process control,nonlinear distillation column,principal component analysis,tutorial",165,12,3,0,163,gui tutorial understand pca base multivatiate statistical process control mspc strategya graphical user interface gui develop tutorial understand pca base mspc strategy nonlinear binary distillation column implement nonlinear four manipulate variable four control variable three input measure disturbance plus molar fraction correspond every column stage methodology pca base mspc implement two phase phase user distillation column normal operating condition three different operate point finish gui obtain correspond pca automatically phase user several scenario different combination disturbance failure monitorize square prediction error spe control chart contribution plot conjunction control chart check original variable responsible abnormal situation application allow start new benchmark scratch open previously save one user save progress time well export result excel file sheet excel file corresponds test benchmark excel present software attempt write file csv format work part master thesis available http mseg web upv app data villalbat pdf include tutorial software start gui run mspc main note first time software run may take time run control statistical process distillation columnprincipal component,"['gui', 'tutorial', 'understand', 'pca', 'base', 'multivatiate', 'statistical', 'process', 'control', 'mspc', 'strategya', 'graphical', 'user', 'interface', 'gui', 'develop', 'tutorial', 'understand', 'pca', 'base', 'mspc', 'strategy', 'nonlinear', 'binary', 'distillation', 'column', 'implement', 'nonlinear', 'four', 'manipulate', 'variable', 'four', 'control', 'variable', 'three', 'input', 'measure', 'disturbance', 'plus', 'molar', 'fraction', 'correspond', 'every', 'column', 'stage', 'methodology', 'pca', 'base', 'mspc', 'implement', 'two', 'phase', 'phase', 'user', 'distillation', 'column', 'normal', 'operating', 'condition', 'three', 'different', 'operate', 'point', 'finish', 'gui', 'obtain', 'correspond', 'pca', 'automatically', 'phase', 'user', 'several', 'scenario', 'different', 'combination', 'disturbance', 'failure', 'monitorize', 'square', 'prediction', 'error', 'spe', 'control', 'chart', 'contribution', 'plot', 'conjunction', 'control', 'chart', 'check', 'original', 'variable', 'responsible', 'abnormal', 'situation', 'application', 'allow', 'start', 'new', 'benchmark', 'scratch', 'open', 'previously', 'save', 'one', 'user', 'save', 'progress', 'time', 'well', 'export', 'result', 'excel', 'file', 'sheet', 'excel', 'file', 'corresponds', 'test', 'benchmark', 'excel', 'present', 'software', 'attempt', 'write', 'file', 'csv', 'format', 'work', 'part', 'master', 'thesis', 'available', 'http', 'mseg', 'web', 'upv', 'app', 'data', 'villalbat', 'pdf', 'include', 'tutorial', 'software', 'start', 'gui', 'run', 'mspc', 'main', 'note', 'first', 'time', 'software', 'run', 'may', 'take', 'time', 'run', 'control', 'statistical', 'process', 'distillation', 'columnprincipal', 'component']",0
1125,47176,"Model-Based design and simulation of various Sigma-Delta ADCs<p>The Î£Î Toolbox simulates:â¢ Ten different architectures:   - 1st Order    - 2nd Order    - 2nd Order Boser-Wooley     - 2nd Order Silva-Steensgaard    - 2nd Order Error-Feedback    - 3rd Order CIFF    - 3rd Order CRFF    - 3rd Order CIFB    - 3rd Order CRFB    - 3rd Order MASH â¢ Single-bit and multibit implementations   of each architecture;â¢ Discrete and continuous time       modulators;â¢ Different signals as input of the   modulators including sine, chirp and    audio signals.Software developed in collaboration with Yonghao Wang, DMT Lab, Birmingham City University </p>adc,audio processing,data converter,delsig,delta sigma,deltasigma,dsp,electronics,filtering,mash,noise shaping,noiseshaping,sigma delta,sigmadelta,toolbox",537,30,3,0,658,base design various sigma delta adcsthe toolbox ten different architecture order order order boser wooley order silva steensgaard order error feedback order ciff order crff order cifb order crfb order mash single bit multibit implementation architecture discrete continuous time modulators different signal input modulators include sine chirp audio signal software develop collaboration yonghao wang dmt lab birmingham city university adcaudio processingdata,"['base', 'design', 'various', 'sigma', 'delta', 'adcsthe', 'toolbox', 'ten', 'different', 'architecture', 'order', 'order', 'order', 'boser', 'wooley', 'order', 'silva', 'steensgaard', 'order', 'error', 'feedback', 'order', 'ciff', 'order', 'crff', 'order', 'cifb', 'order', 'crfb', 'order', 'mash', 'single', 'bit', 'multibit', 'implementation', 'architecture', 'discrete', 'continuous', 'time', 'modulators', 'different', 'signal', 'input', 'modulators', 'include', 'sine', 'chirp', 'audio', 'signal', 'software', 'develop', 'collaboration', 'yonghao', 'wang', 'dmt', 'lab', 'birmingham', 'city', 'university', 'adcaudio', 'processingdata']",0
1126,47208,"Simulink models and CAD files used in this webinar: Mobile Robot Simulation for Collision Avoidance<p>This submission contains Simulink models and CAD files used in this webinar:  . You can watch the webinar here: <a href=""http://www.mathworks.com/videos/mobile-robot-simulation-for-collision-avoidance-with-simulink-90193.htmlExample"">http://www.mathworks.com/videos/mobile-robot-simulation-for-collision-avoidance-with-simulink-90193.htmlExample</a> 1: SimMechanics Model of the Pioneer 3DX Robot Driven by Gravity OnlyFile(s): Pioneer3DXAssembly.slx (supporting files below)Example 2: SimMechanics Model of the Pioneer 3DX Robot with Angular Velocity Actuation to Two WheelsFile(s): Actuated_Pioneer3DXAssembly.slx (supporting files below)Example 3: SimMechanics Model of the Pioneer 3DX Robot with Motion ConstraintsFile(s): MotionConstraints_Pioneer3DXAssembly.slx (supporting files below)Supporting Files for Examples 1, 2 and 3: File(s): SimMechanics_Supporting_Files.zipExample 4: SimMechanics Model of the Pioneer 3DX Robot Actuating Simulink 3D Animation in a Virtual EnvironmentFile(s): SL3DAnim_Pioneer3DXAssembly.slx (supporting files below)Example 5: SimMechanics Model of the Pioneer 3DX Robot Performing Collision Avoidance using Stateflow and Visualized in Simulink 3D Animation in a Virtual EnvironmentFile(s): Controller_Pioneer3DXAssembly.slx (supporting files below)Supporting Files for Examples 4 and 5:VRML Files for 3D Animation Visualization:ï¬  SL3D_Supporting_Files.zipLook Up Table Data:ï¬  WorldLUTData.matExample 6: Simulink Model to Interact with Pioneer 3DX Robot to do Collision Avoidance (supporting files below)Files(s): main_demo_real_robot.slxSupporting Files for Example 6:ARIA Simulink Library (Pioneer3DX_Simulink_Library.zip)IMPORTANT NOTES:1.The examples work only in MATLAB 8.2(R2013b) or later2.Once the supporting files are unzipped, add the folders and sub folders to the MATLAB path3.Examples 1, 2 and 3 require MATLAB, Simulink and SimMechanics4.Examples 4 and 5 require MATLAB, Simulink, SimMechanics and Simulink 3D Animation5.Example 6 requires MATLAB, Simulink and Stateflow</p>collision avoidancemobile robot,robot,robotics",591,65,4,0,536,cad file webinar mobile robot collision avoidancethis submission contains cad file webinar watch webinar http mathworks com video mobile robot collision avoidance htmlexample simmechanics pioneer robot driven gravity onlyfile pioneer dxassembly slx support file example simmechanics pioneer robot angular velocity actuation two wheelsfile actuate pioneer dxassembly slx support file example simmechanics pioneer robot motion constraintsfile pioneer dxassembly slx support file support file example file simmechanics support file zipexample simmechanics pioneer robot actuate animation virtual environmentfile danim pioneer dxassembly slx support file example simmechanics pioneer robot perform collision avoidance stateflow visualize animation virtual environmentfile controller pioneer dxassembly slx support file support file example vrml file animation visualization support file ziplook table data worldlutdata matexample interact pioneer robot collision avoidance support file file main demo real robot slxsupporting file example aria pioneer zip important note example work later support file unzip add folder sub folder path example require simmechanics example require simmechanics animation example require avoidancemobile,"['cad', 'file', 'webinar', 'mobile', 'robot', 'collision', 'avoidancethis', 'submission', 'contains', 'cad', 'file', 'webinar', 'watch', 'webinar', 'http', 'mathworks', 'com', 'video', 'mobile', 'robot', 'collision', 'avoidance', 'htmlexample', 'simmechanics', 'pioneer', 'robot', 'driven', 'gravity', 'onlyfile', 'pioneer', 'dxassembly', 'slx', 'support', 'file', 'example', 'simmechanics', 'pioneer', 'robot', 'angular', 'velocity', 'actuation', 'two', 'wheelsfile', 'actuate', 'pioneer', 'dxassembly', 'slx', 'support', 'file', 'example', 'simmechanics', 'pioneer', 'robot', 'motion', 'constraintsfile', 'pioneer', 'dxassembly', 'slx', 'support', 'file', 'support', 'file', 'example', 'file', 'simmechanics', 'support', 'file', 'zipexample', 'simmechanics', 'pioneer', 'robot', 'actuate', 'animation', 'virtual', 'environmentfile', 'danim', 'pioneer', 'dxassembly', 'slx', 'support', 'file', 'example', 'simmechanics', 'pioneer', 'robot', 'perform', 'collision', 'avoidance', 'stateflow', 'visualize', 'animation', 'virtual', 'environmentfile', 'controller', 'pioneer', 'dxassembly', 'slx', 'support', 'file', 'support', 'file', 'example', 'vrml', 'file', 'animation', 'visualization', 'support', 'file', 'ziplook', 'table', 'data', 'worldlutdata', 'matexample', 'interact', 'pioneer', 'robot', 'collision', 'avoidance', 'support', 'file', 'file', 'main', 'demo', 'real', 'robot', 'slxsupporting', 'file', 'example', 'aria', 'pioneer', 'zip', 'important', 'note', 'example', 'work', 'later', 'support', 'file', 'unzip', 'add', 'folder', 'sub', 'folder', 'path', 'example', 'require', 'simmechanics', 'example', 'require', 'simmechanics', 'animation', 'example', 'require', 'avoidancemobile']",7
1127,47211,"Simulink models for talking to Arduino and Raspberry Pi inside Rapiro<p>Background on Rapiro:Rapiro is a humanoid robot. Rapiro comes with 12 servo motors one for its neck, one in the waist, four for the legs, and the final six for its two arms. It also has a servo motor controller board that is Arduino compatible.  We can program the Arduino and control the motor movements using Simulink. It acts as the spine or the nerve center for the Rapiro.Rapiro uses the Arduino uno board. It has a processor atmega 328P. However the Arduino uno that Simulink supports should use atmega 328.  The Simulink Arduino Servo write/Read library block accepts pin numbers from 0 to 13(This is not the microcontroller pin number, it is the digital pin number you see on the Arduino board).  In the RAPIRO arduino, Pin numbers 14, 15 and 16 are used for Servo functionality which are actually mapped as analog Inputs and pin 17 should be high if we have to send power to the motors. These pins have no direct mapping to the Simulink read/write blocks.  So to use those pins please follow the instructions:Place the ServoPinMapping.mat file in the same folder where RAPIRO Simulink model is placed. This mat file contains MATLAB workspace variables A0, A1 ,A2,A3 initialised to 14, 15 ,16 and 17 respectively.Open the Simulink model and go to file -&gt; Model Properties -&gt;Callbacks -&gt;Add âload(âServoPinMapping.matâ)â in preload function. This will load the mat file in the Matlab workspace. Now you will be able to use pins numbers 14 through 17 in Simulink. We can use the raspberry pi to act as its brain and the camera to act as its eye. From MATLAB R2014a release we have introduced MATLAB Support Package for Raspberry Pi hardware that provides a command line interface to capture images from the camera.  However there is no direct support to use Simulink support package for raspberry pi camera. But there is a very simple workaround to get the Simulink block set to recognize raspberry pi camera. The latest release of the Raspbian Wheezy image has V4L2 drivers for the Camera Board. This means that you can use the V4L2 Video Capture block in the Simulink block library for Raspberry Pi to capture images from the Raspberry Pi Camera Board.   Please watch the following webinar to see how to go about configuring the raspberry pi camera. <a href=""http://www.element14.com/community/videos/12408/l/how-to-program-a-rapiro-with-simulinkThe"">http://www.element14.com/community/videos/12408/l/how-to-program-a-rapiro-with-simulinkThe</a> models that are attached will show you how to use the raspberry pi to detect the green object and to make the Rapiro walk using Arduino.Simulink Model: RapiroWalkDescription: This model is to make the Rapiro walk and is deployed on the Arduino. It consists of two major blocks called Legs and Leg_Motors. The Legs block provides the input required for the walking motion. The Leg_Motors block consists of servo write blocks that is used to control the speed and rotation of the 4 servo motors.  Required MathWorks products: MATLAB and Simulink release R2014a, or later. Simulink support package for Arduino hardware.Simulink Model: RapiroGreenBallDescription: This model is to demonstrate the use of Raspberry pi camera to detect a green object in the background. This model is deployed on the raspberry pi.  It consists of a video capture block that captures an RGB video. The colorThresholding block to recognize a green object in the background. The block analysis block to detect the presence of blobs i.e. presence of a green object. The draw rectangles block to draw a rectangular bounding box around the detect blob and the video display block to display the RGB video as well as the bounding box on the screenRequired MathWorks products: MATLAB and Simulink release R2014a, or later. Computer Vision System Toolbox. Simulink support package for Raspberry Pi hardware.The next two models are to make the Arduino and Raspberry Pi communicate with each otherSimulink Model: RapiroRaspFinalDescription: This model is deployed on the Raspberry Pi.  To the green ball detection model we add one more block called the GPIO write.  As soon as a blob is detected we send a logical value of 1 to the GPIO pin. This pin is connected to the pin 3 of the ArduinoRequired MathWorks products: MATLAB and Simulink release R2014a, or later. Computer Vision System Toolbox. Simulink support package for Arduino and Raspberry Pi hardwareSimulink Model: RapiroArduinoDescription: This model is deployed onto the Arduino. It consists of a digital input block and is set to pin number 3. This pin of Arduino is physically connected to the GPIO pin of raspberry pi. As soon as the pin turns high a signal is sent to the Arduino which in turn sends commands to motors and thus making the rapiro walk. . As soon as the green ball is taken away from the line of sight of the raspberry pi camera the GPIO pin stops sending data to the Arduino and rapiro stops walking. Required MathWorks products: MATLAB and Simulink release R2014a, or later. Simulink support package for Arduino and Raspberry Pi hardware</p>electric_motor_control,power_electronics_control,rapiroarduinoraspberry pi,robot,robotics,maker",58,8,2,11,61,talk arduino raspberry inside rapiro rapiro humanoid robot rapiro come servo motor one neck one waist four legs final six two arm also servo motor controller board arduino compatible program arduino control motor movement act spine nerve center rapiro rapiro arduino uno board processor atmega however arduino uno support atmega arduino servo write read block accepts pin number microcontroller pin number digital pin number see arduino board rapiro arduino pin number servo functionality actually map analog input pin high send power motor pin direct mapping read write block pin please follow instruction place servopinmapping mat file folder rapiro place mat file contain workspace variable initialise respectively open file property callback add load servopinmapping mat preload function load mat file workspace able pin number raspberry act brain camera act eye release introduce support package raspberry hardware provide command line interface capture image camera however direct support support package raspberry camera simple workaround get block set recognize raspberry camera late release raspbian wheezy image driver camera board mean video capture block block raspberry capture image raspberry camera board please watch follow webinar see configure raspberry camera http element com community videos program rapiro attach show raspberry detect green object make rapiro walk arduino make rapiro walk deploy arduino consist two major block call leg leg motor legs block provide input require walk motion leg motor block consist servo write block control speed rotation servo motor require mathworks product release late support package arduino hardware demonstrate raspberry camera detect green object background deploy raspberry consist video capture block capture rgb video block recognize green object background block analysis block detect presence blob presence green object draw rectangle block draw rectangular bound box around detect blob video display block display rgb video well bound box screenrequired mathworks product release later computer vision toolbox support package raspberry hardware next two make arduino raspberry communicate deploy raspberry green ball detection add one block call gpio write soon blob detect send logical value gpio pin pin connect pin arduinorequired mathworks product release later computer vision toolbox support package arduino raspberry deploy onto arduino consist digital input block set pin number pin arduino physically connect gpio pin raspberry soon pin turn high signal send arduino turn send command motor thus make rapiro walk soon green ball take away line sight raspberry camera gpio pin stop send data arduino rapiro stop walk require mathworks product release late support package arduino raspberry motor controlpower electronics,"['talk', 'arduino', 'raspberry', 'inside', 'rapiro', 'rapiro', 'humanoid', 'robot', 'rapiro', 'come', 'servo', 'motor', 'one', 'neck', 'one', 'waist', 'four', 'legs', 'final', 'six', 'two', 'arm', 'also', 'servo', 'motor', 'controller', 'board', 'arduino', 'compatible', 'program', 'arduino', 'control', 'motor', 'movement', 'act', 'spine', 'nerve', 'center', 'rapiro', 'rapiro', 'arduino', 'uno', 'board', 'processor', 'atmega', 'however', 'arduino', 'uno', 'support', 'atmega', 'arduino', 'servo', 'write', 'read', 'block', 'accepts', 'pin', 'number', 'microcontroller', 'pin', 'number', 'digital', 'pin', 'number', 'see', 'arduino', 'board', 'rapiro', 'arduino', 'pin', 'number', 'servo', 'functionality', 'actually', 'map', 'analog', 'input', 'pin', 'high', 'send', 'power', 'motor', 'pin', 'direct', 'mapping', 'read', 'write', 'block', 'pin', 'please', 'follow', 'instruction', 'place', 'servopinmapping', 'mat', 'file', 'folder', 'rapiro', 'place', 'mat', 'file', 'contain', 'workspace', 'variable', 'initialise', 'respectively', 'open', 'file', 'property', 'callback', 'add', 'load', 'servopinmapping', 'mat', 'preload', 'function', 'load', 'mat', 'file', 'workspace', 'able', 'pin', 'number', 'raspberry', 'act', 'brain', 'camera', 'act', 'eye', 'release', 'introduce', 'support', 'package', 'raspberry', 'hardware', 'provide', 'command', 'line', 'interface', 'capture', 'image', 'camera', 'however', 'direct', 'support', 'support', 'package', 'raspberry', 'camera', 'simple', 'workaround', 'get', 'block', 'set', 'recognize', 'raspberry', 'camera', 'late', 'release', 'raspbian', 'wheezy', 'image', 'driver', 'camera', 'board', 'mean', 'video', 'capture', 'block', 'block', 'raspberry', 'capture', 'image', 'raspberry', 'camera', 'board', 'please', 'watch', 'follow', 'webinar', 'see', 'configure', 'raspberry', 'camera', 'http', 'element', 'com', 'community', 'videos', 'program', 'rapiro', 'attach', 'show', 'raspberry', 'detect', 'green', 'object', 'make', 'rapiro', 'walk', 'arduino', 'make', 'rapiro', 'walk', 'deploy', 'arduino', 'consist', 'two', 'major', 'block', 'call', 'leg', 'leg', 'motor', 'legs', 'block', 'provide', 'input', 'require', 'walk', 'motion', 'leg', 'motor', 'block', 'consist', 'servo', 'write', 'block', 'control', 'speed', 'rotation', 'servo', 'motor', 'require', 'mathworks', 'product', 'release', 'late', 'support', 'package', 'arduino', 'hardware', 'demonstrate', 'raspberry', 'camera', 'detect', 'green', 'object', 'background', 'deploy', 'raspberry', 'consist', 'video', 'capture', 'block', 'capture', 'rgb', 'video', 'block', 'recognize', 'green', 'object', 'background', 'block', 'analysis', 'block', 'detect', 'presence', 'blob', 'presence', 'green', 'object', 'draw', 'rectangle', 'block', 'draw', 'rectangular', 'bound', 'box', 'around', 'detect', 'blob', 'video', 'display', 'block', 'display', 'rgb', 'video', 'well', 'bound', 'box', 'screenrequired', 'mathworks', 'product', 'release', 'later', 'computer', 'vision', 'toolbox', 'support', 'package', 'raspberry', 'hardware', 'next', 'two', 'make', 'arduino', 'raspberry', 'communicate', 'deploy', 'raspberry', 'green', 'ball', 'detection', 'add', 'one', 'block', 'call', 'gpio', 'write', 'soon', 'blob', 'detect', 'send', 'logical', 'value', 'gpio', 'pin', 'pin', 'connect', 'pin', 'arduinorequired', 'mathworks', 'product', 'release', 'later', 'computer', 'vision', 'toolbox', 'support', 'package', 'arduino', 'raspberry', 'deploy', 'onto', 'arduino', 'consist', 'digital', 'input', 'block', 'set', 'pin', 'number', 'pin', 'arduino', 'physically', 'connect', 'gpio', 'pin', 'raspberry', 'soon', 'pin', 'turn', 'high', 'signal', 'send', 'arduino', 'turn', 'send', 'command', 'motor', 'thus', 'make', 'rapiro', 'walk', 'soon', 'green', 'ball', 'take', 'away', 'line', 'sight', 'raspberry', 'camera', 'gpio', 'pin', 'stop', 'send', 'data', 'arduino', 'rapiro', 'stop', 'walk', 'require', 'mathworks', 'product', 'release', 'late', 'support', 'package', 'arduino', 'raspberry', 'motor', 'controlpower', 'electronics']",0
1128,47251,"Model of vehicle body and four wheel in a simlation<p>Despite numerous multi-body simulation packages, a vehicle model to simulate vehicle handling control systems is presented here. Control analysis and controller design for vehicle motion rely on vehicle dynamics. Based on the investigation of the vehicle model some requirements of modelling are identified. A detailed and comprehensive vehicle model is required to reproduce the behaviour of individual components of the in-wheel EV as exactly as possible. The model should provide longitudinal motion, lateral motion and yaw. The model should provide interactions between the subsystems, and allow access to the parameters. A detail and simple vehicle model was developed using SIMULINK basic blocks. </p>dugoffs tire model,vehicle modelling",1346,88,7,0,1352,vehicle body four wheel numerous multi body package vehicle vehicle handle control present control analysis controller design vehicle motion rely vehicle dynamic base investigation vehicle requirement identify detailed comprehensive vehicle require reproduce behaviour individual component wheel exactly possible provide longitudinal motion lateral motion yaw provide interaction subsystems allow access parameter detail simple vehicle develop basic block dugoffs tire modelvehicle modelling,"['vehicle', 'body', 'four', 'wheel', 'numerous', 'multi', 'body', 'package', 'vehicle', 'vehicle', 'handle', 'control', 'present', 'control', 'analysis', 'controller', 'design', 'vehicle', 'motion', 'rely', 'vehicle', 'dynamic', 'base', 'investigation', 'vehicle', 'requirement', 'identify', 'detailed', 'comprehensive', 'vehicle', 'require', 'reproduce', 'behaviour', 'individual', 'component', 'wheel', 'exactly', 'possible', 'provide', 'longitudinal', 'motion', 'lateral', 'motion', 'yaw', 'provide', 'interaction', 'subsystems', 'allow', 'access', 'parameter', 'detail', 'simple', 'vehicle', 'develop', 'basic', 'block', 'dugoffs', 'tire', 'modelvehicle', 'modelling']",0
1129,47271,"Simulink model and associated m-file for designing and implementing a Lego Segway on the NXT.<p>There are two files:Run kalmandesign3.m  first to generate a linear state space model of the plant, design a Kalman filter to estimate the states from the gyro, accelerometer, and wheel encoders, and design a full state feedback controller.Then use NXT_segway_kalman3.mdl to generate code that can be embedded onto the NXT using the NXT target.  In order to get this to work you will first have to install support for the NXT target:<a href=""http://www.mathworks.com/help/simulink/ug/install-target-for-lego-mindstorms-nxt-hardware.htmlSee"">http://www.mathworks.com/help/simulink/ug/install-target-for-lego-mindstorms-nxt-hardware.htmlSee</a> the video of this working:<a href=""http://youtu.be/pOOPFw959Rw"">http://youtu.be/pOOPFw959Rw</a></p>full state feedback,inverted pendulum,kalman filter,lego,mindstorms,nxt,segway,maker",25,0,1,0,28,associate file design implement lego segway nxt two file run kalmandesign first generate linear state space plant design kalman filter estimate state gyro accelerometer wheel encoders design full state feedback controller nxt segway kalman mdl generate code embed onto nxt nxt target order get work first install support nxt target http mathworks com help install target lego mindstorms nxt hardware htmlsee video work http youtu poopfw rwfull state pendulumkalman,"['associate', 'file', 'design', 'implement', 'lego', 'segway', 'nxt', 'two', 'file', 'run', 'kalmandesign', 'first', 'generate', 'linear', 'state', 'space', 'plant', 'design', 'kalman', 'filter', 'estimate', 'state', 'gyro', 'accelerometer', 'wheel', 'encoders', 'design', 'full', 'state', 'feedback', 'controller', 'nxt', 'segway', 'kalman', 'mdl', 'generate', 'code', 'embed', 'onto', 'nxt', 'nxt', 'target', 'order', 'get', 'work', 'first', 'install', 'support', 'nxt', 'target', 'http', 'mathworks', 'com', 'help', 'install', 'target', 'lego', 'mindstorms', 'nxt', 'hardware', 'htmlsee', 'video', 'work', 'http', 'youtu', 'poopfw', 'rwfull', 'state', 'pendulumkalman']",7
1130,47317,"This code replicates the results found in a tech report by the same name<p>Here I demonstrate an approach to calculate derivative functions for Simscape models and use them to solve optimal control problems. Although this approach is less efficient than analytic expression for the derivatives, not every problem will have these directly available due to a variety of reasons, including multidomain, multibody, large-scale, automatically generated, or proprietary models.A step-by-step procedure is presented to assist utilizing this approach. The canonical Bryson-Denham state-constrained double integrator optimal control problem is used as a test optimal control problem. A number of control formulations are compared to demonstrate the computational expense of this approach compared to analytic expressions of the state derivatives and additional benefits including improved final solutions and execution time over more traditional formulations. In particular, direct transcription solutions are decidedly more efficient than the common shooting approach.The code is complementary material for the following publication:Daniel R. Herber. 'Solving Optimal Control Problems using Simscape Models for State Derivatives.' Technical Report UIUC-ESDL-2014-01, July 2014.which can be obtained by going to:<a href=""http://systemdesign.illinois.edu/publications/Her14b.pdfPlease"">http://systemdesign.illinois.edu/publications/Her14b.pdfPlease</a> see the readme file for usage details. GPOPS-II, an additional commercial MATLAB software package, is required to run all the methods (although the results for each method are included):<a href=""http://www.gpops2.com/%--------------------------------------------------------------------------%"">http://www.gpops2.com/%--------------------------------------------------------------------------%</a> BrysonDenhamMain.m% Solve the problem with a number of methods%--------------------------------------------------------------------------% [] = BrysonDenhamMain()%--------------------------------------------------------------------------% Some methods utilize a Simscape model for state derivatives% Bryson-Denham state-constrained double integrator problem optimal % control problem% Problem formulation and solution using GPOPS% <a href=""http://www.gpops2.com/Examples/Bryson-Denham/Bryson-Denham.html%--------------------------------------------------------------------------%"">http://www.gpops2.com/Examples/Bryson-Denham/Bryson-Denham.html%--------------------------------------------------------------------------%</a> Method of optimal control and derivative source% method : control                   : derivatives%    1   : shooting                  : analytic%    2   : shooting                  : simscape%    3   : direct transcription      : analytic%    4   : direct transcription      : simscape %    5   : pseudospectral (GPOPS-II) : analytic%    6   : pseudospectral (GPOPS-II) : simscape%--------------------------------------------------------------------------% Author: Daniel R. Herber, Graduate Student, University of Illinois at% Urbana-Champaign% Date: 07/22/2014%--------------------------------------------------------------------------</p>brysondenham,control,control design,design,dynamic system modeling,dynamics,modeling,optimal control,optimization,pseudospectral methods,shooting,simscape,simulation,simulink,state derivatives",6,0,1,1,7,code replicate result find tech report namehere demonstrate approach calculate derivative function simscape solve optimal control problem although approach less efficient analytic expression derivative every problem directly available due variety reason include multidomain multibody large scale automatically generate proprietary step step procedure present assist utilizing approach canonical bryson denham state constrain double integrator optimal control problem test optimal control problem number control formulation compare demonstrate computational expense approach compare analytic expression state derivative additional benefit include improved final solution execution time traditional formulation particular direct transcription solution decidedly efficient common shoot approach code complementary material follow publication daniel herber solve optimal control problem simscape state derivative technical report uiuc esdl july obtain http systemdesign illinois edu publication pdfplease see readme file usage detail gpops additional commercial software package require run method although result method include http gpops com solve problem number method method utilize simscape state derivative bryson denham state constrain double integrator problem optimal control problem problem formulation solution gpops http gpops com example bryson denham bryson denham html method optimal control derivative source method control derivatives shoot analytic shooting simscape direct transcription analytic direct transcription simscape pseudospectral gpops analytic pseudospectral gpops simscape author daniel herber graduate student university illinois urbana champaign date derivative,"['code', 'replicate', 'result', 'find', 'tech', 'report', 'namehere', 'demonstrate', 'approach', 'calculate', 'derivative', 'function', 'simscape', 'solve', 'optimal', 'control', 'problem', 'although', 'approach', 'less', 'efficient', 'analytic', 'expression', 'derivative', 'every', 'problem', 'directly', 'available', 'due', 'variety', 'reason', 'include', 'multidomain', 'multibody', 'large', 'scale', 'automatically', 'generate', 'proprietary', 'step', 'step', 'procedure', 'present', 'assist', 'utilizing', 'approach', 'canonical', 'bryson', 'denham', 'state', 'constrain', 'double', 'integrator', 'optimal', 'control', 'problem', 'test', 'optimal', 'control', 'problem', 'number', 'control', 'formulation', 'compare', 'demonstrate', 'computational', 'expense', 'approach', 'compare', 'analytic', 'expression', 'state', 'derivative', 'additional', 'benefit', 'include', 'improved', 'final', 'solution', 'execution', 'time', 'traditional', 'formulation', 'particular', 'direct', 'transcription', 'solution', 'decidedly', 'efficient', 'common', 'shoot', 'approach', 'code', 'complementary', 'material', 'follow', 'publication', 'daniel', 'herber', 'solve', 'optimal', 'control', 'problem', 'simscape', 'state', 'derivative', 'technical', 'report', 'uiuc', 'esdl', 'july', 'obtain', 'http', 'systemdesign', 'illinois', 'edu', 'publication', 'pdfplease', 'see', 'readme', 'file', 'usage', 'detail', 'gpops', 'additional', 'commercial', 'software', 'package', 'require', 'run', 'method', 'although', 'result', 'method', 'include', 'http', 'gpops', 'com', 'solve', 'problem', 'number', 'method', 'method', 'utilize', 'simscape', 'state', 'derivative', 'bryson', 'denham', 'state', 'constrain', 'double', 'integrator', 'problem', 'optimal', 'control', 'problem', 'problem', 'formulation', 'solution', 'gpops', 'http', 'gpops', 'com', 'example', 'bryson', 'denham', 'bryson', 'denham', 'html', 'method', 'optimal', 'control', 'derivative', 'source', 'method', 'control', 'derivatives', 'shoot', 'analytic', 'shooting', 'simscape', 'direct', 'transcription', 'analytic', 'direct', 'transcription', 'simscape', 'pseudospectral', 'gpops', 'analytic', 'pseudospectral', 'gpops', 'simscape', 'author', 'daniel', 'herber', 'graduate', 'student', 'university', 'illinois', 'urbana', 'champaign', 'date', 'derivative']",5
1131,47323,single phase 9 level inverter<p>hybrid cascade inverter</p>mdl,102,8,2,0,102,single phase level inverterhybrid cascade invertermdl,"['single', 'phase', 'level', 'inverterhybrid', 'cascade', 'invertermdl']",3
1132,47415,"SIMULINK Model for ac-dc buck converter<p>Hereby I have uploaded a simulink model for ac-dc buck converter with voltage mode control.It involves use of Gvd i.e. transfer function for change in voltage to duty cycle. Gvd can be found out using state space modelling of ac-dc converter.Change the values as per your design specification and analyse the output.</p>power_conversion_control,power_electronics_control,control design,power electronics",63,5,3,0,70,buck converterhereby upload buck converter voltage mode control involve gvd transfer function change voltage duty cycle gvd find state space modelling converter change value per design specification analyse output power conversion controlpower electronics controlcontrol designpower electronics,"['buck', 'converterhereby', 'upload', 'buck', 'converter', 'voltage', 'mode', 'control', 'involve', 'gvd', 'transfer', 'function', 'change', 'voltage', 'duty', 'cycle', 'gvd', 'find', 'state', 'space', 'modelling', 'converter', 'change', 'value', 'per', 'design', 'specification', 'analyse', 'output', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designpower', 'electronics']",3
1133,47417,"Contact force models and force laws for use with Simscape Multibody (formerly SimMechanics).<p>This library contains contact force models and force laws for multibody modeling in Simscape Multibody. They cover 2-dimensional and 3-dimensional problems with or without friction. More than 45 example models are provided, including basic contact force examples (bouncing ball) and more complex applications such as a cam-follower mechanism, differential drive robot, and a robot arm with a gripper. Both linear and nonlinear force laws are included, and you can easily add your own custom force law.   Please read the README.txt file to get started.       See how to use these forces to model a cam-follower mechanism:<a href=""https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html"">https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html</a>  Learn more about multibody simulation with Simscape Multibody by watching this webinarhttps://<a href=""http://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a>  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>  Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a> </p>robotics,collision,contact,friction,multibody,physical modeling,robot,robotics,simscape",5740,1227,6,614,5368,contact force force law simscape multibody formerly simmechanics contains contact force force law multibody simscape multibody cover dimensional dimensional problem without friction example provide include basic contact force examples bounce ball complex application cam follower mechanism differential drive robot robot arm gripper linear nonlinear force law include easily add custom force law please read readme txt file get start see force cam follower mechanism mathworks com videos modeling contact force cam follower html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling,"['contact', 'force', 'force', 'law', 'simscape', 'multibody', 'formerly', 'simmechanics', 'contains', 'contact', 'force', 'force', 'law', 'multibody', 'simscape', 'multibody', 'cover', 'dimensional', 'dimensional', 'problem', 'without', 'friction', 'example', 'provide', 'include', 'basic', 'contact', 'force', 'examples', 'bounce', 'ball', 'complex', 'application', 'cam', 'follower', 'mechanism', 'differential', 'drive', 'robot', 'robot', 'arm', 'gripper', 'linear', 'nonlinear', 'force', 'law', 'include', 'easily', 'add', 'custom', 'force', 'law', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'force', 'cam', 'follower', 'mechanism', 'mathworks', 'com', 'videos', 'modeling', 'contact', 'force', 'cam', 'follower', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling']",7
1134,47425,matlab model of dfig<p>this will give the detailed model of dfig</p>matlab,808,29,8,0,871,dfigthis give detail dfigmatlab,"['dfigthis', 'give', 'detail', 'dfigmatlab']",5
1135,47464,Building Voice Recognition <p>I am trying to build a voice recognition device. this is my first stage. I need to get the voice from the microphone and convert the signal into program codes.Please help me regarding this. What kind of method of signal sampling and ADC should I use. I would like to design on hardware simulink itself.</p>voice recognition,4,0,1,0,2,building voice recognition try build voice recognition device first stage need get voice microphone convert signal program code please help regard kind method signal sampling adc would like design hardware voice recognition,"['building', 'voice', 'recognition', 'try', 'build', 'voice', 'recognition', 'device', 'first', 'stage', 'need', 'get', 'voice', 'microphone', 'convert', 'signal', 'program', 'code', 'please', 'help', 'regard', 'kind', 'method', 'signal', 'sampling', 'adc', 'would', 'like', 'design', 'hardware', 'voice', 'recognition']",0
1136,47473,"Part of a segway model built with simmechanics.<p>This is a Segway model built in solidworks and then exported to Simmechanics. This entry is under development and will be updated from time to time.</p>segway,simmechanics,simmechanics link,solidworks",32,0,1,0,34,part segway build simmechanics segway build solidworks export simmechanics entry development update time time linksolidworks,"['part', 'segway', 'build', 'simmechanics', 'segway', 'build', 'solidworks', 'export', 'simmechanics', 'entry', 'development', 'update', 'time', 'time', 'linksolidworks']",0
1137,47495,"Gasturbine simulnik model<p>Gasturbine model for dynamic studies. Made according to Rowen's paper. </p>chp,combined heat power plant,gas,gasturb,gasturbine,rowens gasturbine model,simpowersystems,simulink",110,8,3,0,131,gasturbine modelgasturbine dynamic study make accord rowen paper chpcombined heat power gasturbine,"['gasturbine', 'modelgasturbine', 'dynamic', 'study', 'make', 'accord', 'rowen', 'paper', 'chpcombined', 'heat', 'power', 'gasturbine']",5
1138,47503,Three Phase Half Controlled Converter<p>for alpha till 30 degree no change from R load</p>three phase hcc,19,0,1,0,32,three phase half control converterfor alpha till degree change loadthree phase hcc,"['three', 'phase', 'half', 'control', 'converterfor', 'alpha', 'till', 'degree', 'change', 'loadthree', 'phase', 'hcc']",3
1139,47532,"slider<p>Hi,I'm a new user of matlab and i've got a question about Simulink. I want to simulate the outcoming flow of liquid from a tank.I've got a tank with a volume of 30,000 litre. When i open the valve the outcoming flow is between 0 and 200 litre/minute. I want to change the outcoming flow during the simulation. I've added the example, i made in simulink. I can't change the slider during the simulation. Can anybody help me with this problem?Thanks.</p>slider",7,0,1,0,7,sliderhii new user get question want outcoming flow liquid tank get tank volume litre open valve outcoming flow litre minute want change outcoming flow add example make change slider anybody help problem thanks slider,"['sliderhii', 'new', 'user', 'get', 'question', 'want', 'outcoming', 'flow', 'liquid', 'tank', 'get', 'tank', 'volume', 'litre', 'open', 'valve', 'outcoming', 'flow', 'litre', 'minute', 'want', 'change', 'outcoming', 'flow', 'add', 'example', 'make', 'change', 'slider', 'anybody', 'help', 'problem', 'thanks', 'slider']",5
1140,47534,"Landing gear model, including main and lock hydraulic actuators, and multibody dynamics<p>This file contains a landing gear model built using Simscape. The hydraulic actuation system, including pump, valves and hydraulic cylinders, provides motion to deploy/retract and lock/unlock the mechanism. Supervisory logic is implemented with Stateflow. Examples in this submission shows how to optimize design, refine actuator size requirements, model custom hydraulic valves, valve forces, and generate C code for hardware-in-the-loop testing, rapid simulations and IP protection.Please read the README.txt file to get started.To learn how to model mechanical and hydraulic systems in landing gear, please watch the webinar, âLanding Gear Actuator Design with Simscapeâ<a href=""http://www.mathworks.com/videos/landing-gear-actuator-design-with-simscape-94268.html"">http://www.mathworks.com/videos/landing-gear-actuator-design-with-simscape-94268.html</a> To find other Simscape examples, search for posts with the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22To</a> learn more about MathWorks Simscape Products, go to:<a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>actuator,hydraulic,landing gear,multibody,physical modeling,simhydraulics,simmechanics,simscape",2994,683,7,286,2205,land gear include main lock hydraulic actuator multibody dynamicsthis file contains land gear build simscape hydraulic actuation include pump valve hydraulic cylinder provide motion deploy retract lock unlock mechanism supervisory logic implement stateflow example submission show optimize design refine actuator size requirement custom hydraulic valve valve force generate code hardware loop test rapid protection please read readme txt file get start learn mechanical hydraulic land gear please watch webinar land gear actuator design simscapehttp mathworks com video land gear actuator design simscape html find simscape example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product http mathworks com physical modeling,"['land', 'gear', 'include', 'main', 'lock', 'hydraulic', 'actuator', 'multibody', 'dynamicsthis', 'file', 'contains', 'land', 'gear', 'build', 'simscape', 'hydraulic', 'actuation', 'include', 'pump', 'valve', 'hydraulic', 'cylinder', 'provide', 'motion', 'deploy', 'retract', 'lock', 'unlock', 'mechanism', 'supervisory', 'logic', 'implement', 'stateflow', 'example', 'submission', 'show', 'optimize', 'design', 'refine', 'actuator', 'size', 'requirement', 'custom', 'hydraulic', 'valve', 'valve', 'force', 'generate', 'code', 'hardware', 'loop', 'test', 'rapid', 'protection', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'learn', 'mechanical', 'hydraulic', 'land', 'gear', 'please', 'watch', 'webinar', 'land', 'gear', 'actuator', 'design', 'simscapehttp', 'mathworks', 'com', 'video', 'land', 'gear', 'actuator', 'design', 'simscape', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling']",7
1141,47540,"PMSM Model<p>permanent-magnet synchronousmachine</p>pmsm,electric_motor_control,power_electronics_control",97,5,4,0,115,pmsm modelpermanent magnet motor controlpower electronics control,"['pmsm', 'modelpermanent', 'magnet', 'motor', 'controlpower', 'electronics', 'control']",6
1142,47650,"AC-DC converter using thyristors.<p>The given circuit rectifies AC to DC with the help of thyristors. It is called a bridge rectifier as 4 thyristors are used. The use of 4 thyristors increases the control over output DC waveform. But an additional control circuitry (i.e. gate pulse) is also required.</p>power_conversion_control,power_electronics_control,rectifierthyristorbridge converter,simpowersystems",12,0,1,0,14,converter thyristors give circuit rectifies help thyristors call bridge rectifier thyristors thyristors increase control output waveform additional control circuitry gate pulse also required power conversion controlpower electronics,"['converter', 'thyristors', 'give', 'circuit', 'rectifies', 'help', 'thyristors', 'call', 'bridge', 'rectifier', 'thyristors', 'thyristors', 'increase', 'control', 'output', 'waveform', 'additional', 'control', 'circuitry', 'gate', 'pulse', 'also', 'required', 'power', 'conversion', 'controlpower', 'electronics']",3
1143,47670,"In Three Phase DC-AC Conversion various techqmiques are used . <p>DC-3 phase AC is generated by too many techniques , one  of them is using PWM generate which is going to generate 6-pulse which we will give  to the IGBT/Diode . Hence , 3-phase is obtained at load .</p>electric_motor_control,power_conversion_control,power_electronics_control,three phase inverterdiscrete pwm generator",20,0,1,0,29,three phase conversion various techqmiques phase generate many technique one pwm generate generate pulse give igbt diode hence phase obtain load electric motor controlpower conversion controlpower electronics controlthree phase pwm generator,"['three', 'phase', 'conversion', 'various', 'techqmiques', 'phase', 'generate', 'many', 'technique', 'one', 'pwm', 'generate', 'generate', 'pulse', 'give', 'igbt', 'diode', 'hence', 'phase', 'obtain', 'load', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlthree', 'phase', 'pwm', 'generator']",1
1144,47671,"Three Phase Inverter Using Space Vector PWM Generator generates 220V 3-phase AC from 220V DC<p>In this model SV PWM generator is used to attain 3 phase AC from DC. By 6-pulse setting giving 6 IGBT/Diode to switch at perfect timing.</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink,svpwminverter3 phase ac",19,0,1,0,26,three phase inverter space vector pwm generator generate phase dcin pwm generator attain phase pulse set give igbt diode switch perfect time electric motor controlpower conversion controlpower electronics phase,"['three', 'phase', 'inverter', 'space', 'vector', 'pwm', 'generator', 'generate', 'phase', 'dcin', 'pwm', 'generator', 'attain', 'phase', 'pulse', 'set', 'give', 'igbt', 'diode', 'switch', 'perfect', 'time', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'phase']",1
1145,47692,"Single phase half wave pwm inverter<p>This demonstration illustrates use of the IGBT/Diode block in voltage-sourced converters. It also demonstrates harmonic analysis of PWM waveforms using the Powergui/FFT tool.The converters are built with the IGBT/Diode block which is the basic building block of all VSCs. The IGBT/Diode block is a simplified model of an IGBT (or GTO or MOSFET)/Diode pair where the forward voltages of the forced-commutated device and diode are ignored. You may replace these blocks by individual IGBT and diode blocks for a more detailed representation. VSCs are controlled in open loop with the Discrete PWM Generator block available in the Extras/Discrete Control Blocks library. The two circuits use the same DC voltage (Vdc = 400V), carrier frequency (1080 Hz) and modulation index (m = 0.8).</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",14,0,1,0,14,single phase half wave pwm inverterthis demonstration illustrate igbt diode block voltage source converter also demonstrate harmonic analysis pwm waveform powergui fft tool converter build igbt diode block basic building block vscs igbt diode block simplify igbt gto mosfet diode pair forward voltages force commutated device diode ignore may replace block individual igbt diode block detail representation vscs control open loop discrete pwm generator block available extra discrete control block two circuit voltage vdc carrier frequency modulation index electric motor controlpower conversion controlpower electronics,"['single', 'phase', 'half', 'wave', 'pwm', 'inverterthis', 'demonstration', 'illustrate', 'igbt', 'diode', 'block', 'voltage', 'source', 'converter', 'also', 'demonstrate', 'harmonic', 'analysis', 'pwm', 'waveform', 'powergui', 'fft', 'tool', 'converter', 'build', 'igbt', 'diode', 'block', 'basic', 'building', 'block', 'vscs', 'igbt', 'diode', 'block', 'simplify', 'igbt', 'gto', 'mosfet', 'diode', 'pair', 'forward', 'voltages', 'force', 'commutated', 'device', 'diode', 'ignore', 'may', 'replace', 'block', 'individual', 'igbt', 'diode', 'block', 'detail', 'representation', 'vscs', 'control', 'open', 'loop', 'discrete', 'pwm', 'generator', 'block', 'available', 'extra', 'discrete', 'control', 'block', 'two', 'circuit', 'voltage', 'vdc', 'carrier', 'frequency', 'modulation', 'index', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",4
1146,47697,"It is used to convert AC into pulsating DC with the help of two thyristors.<p>Halfly controlled bridge converter consists of bridge with two diode and two thyristors for controlling of AC to Pulsating DC conversion. </p>power_conversion_control,power_electronics_control,bridge converterrectifierthyristor",12,0,1,0,11,convert pulsate help two thyristors halfly control bridge converter consist bridge two diode two thyristors control pulsate conversion power conversion controlpower electronics controlbridge,"['convert', 'pulsate', 'help', 'two', 'thyristors', 'halfly', 'control', 'bridge', 'converter', 'consist', 'bridge', 'two', 'diode', 'two', 'thyristors', 'control', 'pulsate', 'conversion', 'power', 'conversion', 'controlpower', 'electronics', 'controlbridge']",1
1147,47707,"El presente trabajo es un esfuerzo para poder logar el analisis de la estabilidad de las variables.<p>El sistema estÃ¡ compuesto de 4 generadores sÃ­ncronos, 4 transformadores, 11 buses y sus respectivas lÃ­neas de trasmisiÃ³n.En si, este  sistema esta compuesto por  2 Ã¡reas, cada una con 2 generadores proporcionando 900 MVA a 20 KV, cada generador tiene su propio transformador de 900 MVA de 20 KV en el lado primario a 230 KV en el lado secundario. Las cargas del sistema se encuentran conectados a los buses 7 y 9.El sistema se caracteriza por estar exportando 400 MW del Ã¡rea 1 al Ã¡rea 2 en condiciones estables.</p>ieee bus,simulink",51,0,1,0,94,presente trabajo esfuerzo para poder logar analisis estabilidad variable sistema estÃ¡ compuesto generadores sÃ­ncronos transformadores bus sus respectivas lÃ­neas trasmisiÃ³n este sistema esta compuesto por Ã¡reas cada una con generadores proporcionando mva cada generador tiene propio transformador mva lado primario lado secundario las cargas del sistema encuentran conectados los bus sistema caracteriza por estar exportando del Ã¡rea Ã¡rea condiciones estables iee,"['presente', 'trabajo', 'esfuerzo', 'para', 'poder', 'logar', 'analisis', 'estabilidad', 'variable', 'sistema', 'estÃ¡', 'compuesto', 'generadores', 'sÃ­ncronos', 'transformadores', 'bus', 'sus', 'respectivas', 'lÃ­neas', 'trasmisiÃ³n', 'este', 'sistema', 'esta', 'compuesto', 'por', 'Ã¡reas', 'cada', 'una', 'con', 'generadores', 'proporcionando', 'mva', 'cada', 'generador', 'tiene', 'propio', 'transformador', 'mva', 'lado', 'primario', 'lado', 'secundario', 'las', 'cargas', 'del', 'sistema', 'encuentran', 'conectados', 'los', 'bus', 'sistema', 'caracteriza', 'por', 'estar', 'exportando', 'del', 'Ã¡rea', 'Ã¡rea', 'condiciones', 'estables', 'iee']",2
1148,47727,sistema de potencia con excitadores y estabilizadores de potencia<p>El sistema ademas de contar con elemetos basicos de un sistema de potencia cuenta con exitadores y estabilizadores. Estos nos ayudan a observar la senal de estabilidad ante la accion de un transitorio.</p>simscape,64,0,1,0,129,sistema potencia con excitadores estabilizadores potenciael sistema ademas contar con elemetos basicos sistema potencia cuenta con exitadores estabilizadores estos nos ayudan observar senal estabilidad ante accion transitorio simscape,"['sistema', 'potencia', 'con', 'excitadores', 'estabilizadores', 'potenciael', 'sistema', 'ademas', 'contar', 'con', 'elemetos', 'basicos', 'sistema', 'potencia', 'cuenta', 'con', 'exitadores', 'estabilizadores', 'estos', 'nos', 'ayudan', 'observar', 'senal', 'estabilidad', 'ante', 'accion', 'transitorio', 'simscape']",2
1149,47736,"PULSE CODE MODULATION(PCM)<p>GENERATION , TRANSMISSION AND DEMODULATION OF PULSE CODED SIGNAL</p>communications",19,0,1,0,18,pulse code modulation pcm generation transmission demodulation pulse cod,"['pulse', 'code', 'modulation', 'pcm', 'generation', 'transmission', 'demodulation', 'pulse', 'cod']",0
1150,47758,"Global sensitivity and uncertainty analysis (GSUA) of dynamical systems using variance-based methods<p>Global sensitivity analysis (GSA) of dynamical systems (Simulink models) using variance-based methods (brute-force, Sobol, Jansen, Saltelli) with combinations of parameters generated by Monte Carlo method with these sampling methods: uniform distribution, Latin hypercube. Several figures are generated: (1) Plot with temporal responses (Monte Carlo simulation) to all sets of parameters, highlighting the nominal or experimental response; (2) Scatter plots of parameters and output; (3) plot of fractional sensitivity indices; (4) plot of normalized total sensitivity indices; (5) Pie and bar plot with sensitivity indices for every parameter in some time instants. This is a toolbox in developing (including English translation). Please, send commentaries and suggestions.</p>dynamical systems,jansen,latin hypercube,saltelli,sensitivity analysis,sobol,uncertainty analysis",22,2,2,0,21,global sensitivity uncertainty analysis gsua dynamical variance base methodsglobal sensitivity analysis gsa dynamical variance base method brute force sobol jansen saltelli combination parameter generate monte carlo method sample method uniform distribution latin hypercube several figure generate plot temporal response monte carlo set parameter highlight nominal experimental response scatter plot parameter output plot fractional sensitivity index plot normalized total sensitivity index pie bar plot sensitivity index every parameter time instant toolbox develop include english translation please send commentary suggestion dynamical analysis,"['global', 'sensitivity', 'uncertainty', 'analysis', 'gsua', 'dynamical', 'variance', 'base', 'methodsglobal', 'sensitivity', 'analysis', 'gsa', 'dynamical', 'variance', 'base', 'method', 'brute', 'force', 'sobol', 'jansen', 'saltelli', 'combination', 'parameter', 'generate', 'monte', 'carlo', 'method', 'sample', 'method', 'uniform', 'distribution', 'latin', 'hypercube', 'several', 'figure', 'generate', 'plot', 'temporal', 'response', 'monte', 'carlo', 'set', 'parameter', 'highlight', 'nominal', 'experimental', 'response', 'scatter', 'plot', 'parameter', 'output', 'plot', 'fractional', 'sensitivity', 'index', 'plot', 'normalized', 'total', 'sensitivity', 'index', 'pie', 'bar', 'plot', 'sensitivity', 'index', 'every', 'parameter', 'time', 'instant', 'toolbox', 'develop', 'include', 'english', 'translation', 'please', 'send', 'commentary', 'suggestion', 'dynamical', 'analysis']",5
1151,47764,"Buck simulate<p>Converter type Buck simulated</p>buck,converter,simulated",6,0,1,0,7,buck type buck,"['buck', 'type', 'buck']",1
1152,47777,single phase full converter<p>simulation of single phase full converter with RL load.</p>power electronics,26,0,1,0,33,single phase full single phase full converter load power electronics,"['single', 'phase', 'full', 'single', 'phase', 'full', 'converter', 'load', 'power', 'electronics']",6
1153,47808,"Automatic Solar Street Light System <p>Automatic Solar Street Light System :This system consists of a solar panel consisting 76 solar cells providing enough power to charge a battery at day and when night comes automatically light bulb turns on by usage of charged battery.</p>battery_system_management,power_electronics_control,solar cellsimulink",164,20,5,0,149,automatic solar street light automatic solar street light consist solar panel consist solar cell provide enough power charge battery day night come automatically light bulb turn usage charge battery battery managementpower electronics controlsolar,"['automatic', 'solar', 'street', 'light', 'automatic', 'solar', 'street', 'light', 'consist', 'solar', 'panel', 'consist', 'solar', 'cell', 'provide', 'enough', 'power', 'charge', 'battery', 'day', 'night', 'come', 'automatically', 'light', 'bulb', 'turn', 'usage', 'charge', 'battery', 'battery', 'managementpower', 'electronics', 'controlsolar']",4
1154,47847,"This project demonstrates repetitve process control using evolutionary dynamic optimization tools.<p>Plug-in Direct Particle Swarm Repetitive Controller (PDPSRC) and Plug-in Direct Multi-Swarm Repetitive Controller (PDMSRC) represent a novel (2013) approach to repetitive process control. Please see inside the m-files for more information. This submission enables you to play with the single-swarm controller as well as the multi-swarm one. The solution was inspired by the concept of iterative learning control (ILC). This project might be of your interest if you deal with: repetitive process control, iterative learning control, dynamic optimization problems, particle swarm optimization. Such control tasks are often encountered in robotics and power electronics. For more details please see <a href=""http://dx.doi.org/10.1515/bpasts-2015-0098"">http://dx.doi.org/10.1515/bpasts-2015-0098</a> (B. Ufnalski and L. M. Grzesiak, Plug-in direct particle swarm repetitive controller with a reduced dimensionality of a fitness landscape -- a multi-swarm approach).</p>dynamic optimization problem,ilc,iterative learning control,particle swarm optimization,power electronic converter,pso,repetitive control,repetitive disturbance rejection,power_conversion_control,power_electronics_control",77,2,2,0,91,project demonstrate repetitve process control evolutionary dynamic optimization tool plug direct particle swarm repetitive controller pdpsrc plug direct multi swarm repetitive controller pdmsrc represent novel approach repetitive process control please see inside file information submission enable play single swarm controller well multi swarm one solution inspire concept iterative learn control ilc project might interest deal repetitive process control iterative learn control dynamic optimization problem particle swarm optimization control task often encounter robotics power electronics detail please see http doi org bpasts ufnalski grzesiak plug direct particle swarm repetitive controller reduce dimensionality fitness landscape multi swarm approach dynamic optimization learn controlparticle swarm electronic disturbance rejectionpower conversion controlpower electronics control,"['project', 'demonstrate', 'repetitve', 'process', 'control', 'evolutionary', 'dynamic', 'optimization', 'tool', 'plug', 'direct', 'particle', 'swarm', 'repetitive', 'controller', 'pdpsrc', 'plug', 'direct', 'multi', 'swarm', 'repetitive', 'controller', 'pdmsrc', 'represent', 'novel', 'approach', 'repetitive', 'process', 'control', 'please', 'see', 'inside', 'file', 'information', 'submission', 'enable', 'play', 'single', 'swarm', 'controller', 'well', 'multi', 'swarm', 'one', 'solution', 'inspire', 'concept', 'iterative', 'learn', 'control', 'ilc', 'project', 'might', 'interest', 'deal', 'repetitive', 'process', 'control', 'iterative', 'learn', 'control', 'dynamic', 'optimization', 'problem', 'particle', 'swarm', 'optimization', 'control', 'task', 'often', 'encounter', 'robotics', 'power', 'electronics', 'detail', 'please', 'see', 'http', 'doi', 'org', 'bpasts', 'ufnalski', 'grzesiak', 'plug', 'direct', 'particle', 'swarm', 'repetitive', 'controller', 'reduce', 'dimensionality', 'fitness', 'landscape', 'multi', 'swarm', 'approach', 'dynamic', 'optimization', 'learn', 'controlparticle', 'swarm', 'electronic', 'disturbance', 'rejectionpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1155,47854,"Interactive apps and Simulink models for numerical sciences and computer science<p>This submission contains a manual and a series of MATLAB Apps and Simulink Models for introducing Numerical Sciences and Computer Science in secondary schools.It includes the following apps and models :- Data Type Conversion App. App to convert between boolean, decimal, hexadecimal and character types,- Simulink model to realize logical operations on booleans,- JPEG Compression App. This App allows you to change the quality factor of JPEG compression and visualize original, compressed and gray-scale image difference between original and compressed image. - Watermarking is the process of hiding digital information in a carrier signal, here an image. The Watermarking App allows the user to :     - Load an image- Enter the message to hide- Select the bit containing the hidden message- Select the color component containing the hidden message (R, G, B)- Visualize original image, code image and watermarked image,- Audio Acquisition App : Interactive acquisition of audio signals,- Graph Traverse App. This App allows the user to :- Load a graph (sparse matrix)- Visualize the graph- Run a traverse algorithm (DFS or BFS) or find the shortest Path between two nodes- Visualize the path, possibly step by step- Simulink models to communicate an encrypted image between two Raspberry Pi,- Simulink model for obstacle avoidance on LEGO Mindstorms (using State Machines, stateflow).</p>audio acquisition,bfs,communications,compression,data types,dfs,graph traverse,image acquisition,image analysis,isn,jpeg,lego,numerical sciences,raspberry pi,state machines,teaching,watermarking",79,4,2,0,103,interactive apps numerical science computer sciencethis submission contains manual series apps introduce numerical science computer science secondary school include follow apps data type conversion app app convert boolean decimal hexadecimal character type realize logical operation booleans jpeg compression app app allow change quality factor jpeg compression visualize original compressed gray scale image difference original compress image watermarking process hide digital information carrier signal image watermarking app allows user load image enter message hide select bit contain hidden message select color component contain hidden message visualize original image code image watermarked image audio acquisition app interactive acquisition audio signal graph traverse app app allow user load graph sparse matrix visualize graph run traverse algorithm dfs bfs find short path two node visualize path possibly step step communicate encrypt image two raspberry obstacle avoidance lego mindstorms state machine stateflow audio typesdfsgraph traverseimage pistate,"['interactive', 'apps', 'numerical', 'science', 'computer', 'sciencethis', 'submission', 'contains', 'manual', 'series', 'apps', 'introduce', 'numerical', 'science', 'computer', 'science', 'secondary', 'school', 'include', 'follow', 'apps', 'data', 'type', 'conversion', 'app', 'app', 'convert', 'boolean', 'decimal', 'hexadecimal', 'character', 'type', 'realize', 'logical', 'operation', 'booleans', 'jpeg', 'compression', 'app', 'app', 'allow', 'change', 'quality', 'factor', 'jpeg', 'compression', 'visualize', 'original', 'compressed', 'gray', 'scale', 'image', 'difference', 'original', 'compress', 'image', 'watermarking', 'process', 'hide', 'digital', 'information', 'carrier', 'signal', 'image', 'watermarking', 'app', 'allows', 'user', 'load', 'image', 'enter', 'message', 'hide', 'select', 'bit', 'contain', 'hidden', 'message', 'select', 'color', 'component', 'contain', 'hidden', 'message', 'visualize', 'original', 'image', 'code', 'image', 'watermarked', 'image', 'audio', 'acquisition', 'app', 'interactive', 'acquisition', 'audio', 'signal', 'graph', 'traverse', 'app', 'app', 'allow', 'user', 'load', 'graph', 'sparse', 'matrix', 'visualize', 'graph', 'run', 'traverse', 'algorithm', 'dfs', 'bfs', 'find', 'short', 'path', 'two', 'node', 'visualize', 'path', 'possibly', 'step', 'step', 'communicate', 'encrypt', 'image', 'two', 'raspberry', 'obstacle', 'avoidance', 'lego', 'mindstorms', 'state', 'machine', 'stateflow', 'audio', 'typesdfsgraph', 'traverseimage', 'pistate']",5
1156,47867,"This project demonstrates repetitve process control using gradient-based dynamic optimization tool.<p>Repetitive neurocontroller (RNC) with disturbance feedforward path active in the pass-to-pass direction (kDFF) represents a novel (2014 as far as kDFF is concerned) approach to repetitive process control. The resulting control scheme is of Disturbance Dual Feed-Forward (DDFF) type. The solution is of model-free type, i.e. no accompanying neural network is needed to model dynamics of the plant. Please see inside the m-files for more information. This submission enables you to play with different system configurations, i.e. several flags are provided to easily reconfigure the system. The solution was inspired by the concept of iterative learning control (ILC). This project might be of your interest if you deal with: repetitive process control, iterative learning control, dynamic optimization problems, and neurocontrollers in the form of online trained neural networks. Such control tasks are often encountered in robotics and power electronics. Refs to relevant papers are included. If something brought you here, it could be probably also interesting to have a look at my gradient-free swarm-based repetitive controller (PDPSRC or PDMSRC on Matlab Central). More info can be found in ""Repetitive neurocontroller with disturbance feedforward path active in the pass-to-pass direction for a VSI inverter with an output LC filter"" (<a href=""http://dx.doi.org/10.1515/bpasts-2016-0013"">http://dx.doi.org/10.1515/bpasts-2016-0013</a>).</p>ann,dynamic optimization problem,error backpropagation,ffnn,ilc,iterative learning control,neural networks,power electronic converter,repetitive control,repetitive disturbance rejection,power_conversion_control,power_electronics_control",85,2,2,0,99,project demonstrate repetitve process control gradient base dynamic optimization tool repetitive neurocontroller rnc disturbance feedforward path active pas pas direction kdff represent novel far kdff concerned approach repetitive process control result control scheme disturbance dual feed forward ddff type solution free type accompany neural network need dynamic plant please see inside file information submission enable play different configuration several flag provide easily reconfigure solution inspire concept iterative learn control ilc project might interest deal repetitive process control iterative learn control dynamic optimization problem form online train neural network control task often encounter robotics power electronics refs relevant paper include something brought could probably also interest look gradient free swarm base repetitive controller pdpsrc pdmsrc central info find repetitive neurocontroller disturbance feedforward path active pas pas direction vsi inverter output filter http doi org bpasts anndynamic optimization problemerror learn controlneural networkspower electronic disturbance rejectionpower conversion controlpower electronics control,"['project', 'demonstrate', 'repetitve', 'process', 'control', 'gradient', 'base', 'dynamic', 'optimization', 'tool', 'repetitive', 'neurocontroller', 'rnc', 'disturbance', 'feedforward', 'path', 'active', 'pas', 'pas', 'direction', 'kdff', 'represent', 'novel', 'far', 'kdff', 'concerned', 'approach', 'repetitive', 'process', 'control', 'result', 'control', 'scheme', 'disturbance', 'dual', 'feed', 'forward', 'ddff', 'type', 'solution', 'free', 'type', 'accompany', 'neural', 'network', 'need', 'dynamic', 'plant', 'please', 'see', 'inside', 'file', 'information', 'submission', 'enable', 'play', 'different', 'configuration', 'several', 'flag', 'provide', 'easily', 'reconfigure', 'solution', 'inspire', 'concept', 'iterative', 'learn', 'control', 'ilc', 'project', 'might', 'interest', 'deal', 'repetitive', 'process', 'control', 'iterative', 'learn', 'control', 'dynamic', 'optimization', 'problem', 'form', 'online', 'train', 'neural', 'network', 'control', 'task', 'often', 'encounter', 'robotics', 'power', 'electronics', 'refs', 'relevant', 'paper', 'include', 'something', 'brought', 'could', 'probably', 'also', 'interest', 'look', 'gradient', 'free', 'swarm', 'base', 'repetitive', 'controller', 'pdpsrc', 'pdmsrc', 'central', 'info', 'find', 'repetitive', 'neurocontroller', 'disturbance', 'feedforward', 'path', 'active', 'pas', 'pas', 'direction', 'vsi', 'inverter', 'output', 'filter', 'http', 'doi', 'org', 'bpasts', 'anndynamic', 'optimization', 'problemerror', 'learn', 'controlneural', 'networkspower', 'electronic', 'disturbance', 'rejectionpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1157,47874,"This driver is for the SEN 0140   10 DOF IMU and an Arduino Mega 2560.<p>I created this S function for a summer project.  It exports the raw data from all four sensors included in the SEN0140 to your computer. Additional details are included in ReadMe.pdf</p>adxl345,arduino,arduino mega 2560,bmp085,hmc5883l,i2c,itg3200,matlab,sen0140,simulink",8,0,1,0,13,driver sen dof imu arduino mega create function summer project export raw data four sensor include sen computer additional detail include readme pdfadxl arduinoarduino mega bmp hmc citg matlabsen,"['driver', 'sen', 'dof', 'imu', 'arduino', 'mega', 'create', 'function', 'summer', 'project', 'export', 'raw', 'data', 'four', 'sensor', 'include', 'sen', 'computer', 'additional', 'detail', 'include', 'readme', 'pdfadxl', 'arduinoarduino', 'mega', 'bmp', 'hmc', 'citg', 'matlabsen']",5
1158,47893,"Particle swarm based parameter identification (tracking) in non-stationary repetitive process.<p>A DOP-capable PSO has been employed to track parameters of the non-stationarry repetitive process. Such an algorithm can be used to retune on the fly controller gains if they are defined as known functions of the parameter(s) being tracked. Please see inside the m-file for more information. This submission enables you to play with different system configurations, e.g. some flags are provided for fast reconfiguration of the swarm update rule. The solution was inspired by the concept of plug-in direct particle swarm repetitive controller (see PDPSRC or PDMSRC on Matlab Central). The similarity between controller and observer design present in selected ""classic"" control schemes obviously provoked such a solution. This submission might be of your interest if you deal with: parameter identification in repetitive processes, iterative learning estimation, dynamic optimization problems and population-based evolutionary optimization. Such estimation tasks are encountered, e.g., in robotics and power electronics and it is not rare that these systems are subject to parameter variations.</p>asynchronous update rule,dop,dynamic optimization problem,ilc,iterative learning control,nonstationary process,parameter identification,parameter tracking,particle swarm optimization,pso,repetitive control,synchronous update rule,update without evaluatio,power_conversion_control,power_electronics_control",15,0,1,0,16,particle swarm base parameter identification track non stationary repetitive process dop capable pso employ track parameter non stationarry repetitive process algorithm retune fly controller gain define known function parameter track please see inside file information submission enable play different configuration flag provide fast reconfiguration swarm update rule solution inspire concept plug direct particle swarm repetitive controller see pdpsrc pdmsrc central similarity controller observer design present select classic control scheme obviously provoke solution submission might interest deal parameter identification repetitive process iterative learn estimation dynamic optimization problem population base evolutionary optimization estimation task encounter robotics power electronics rare subject parameter variation asynchronous update ruledopdynamic optimization learn swarm update ruleupdate without evaluatiopower conversion controlpower electronics control,"['particle', 'swarm', 'base', 'parameter', 'identification', 'track', 'non', 'stationary', 'repetitive', 'process', 'dop', 'capable', 'pso', 'employ', 'track', 'parameter', 'non', 'stationarry', 'repetitive', 'process', 'algorithm', 'retune', 'fly', 'controller', 'gain', 'define', 'known', 'function', 'parameter', 'track', 'please', 'see', 'inside', 'file', 'information', 'submission', 'enable', 'play', 'different', 'configuration', 'flag', 'provide', 'fast', 'reconfiguration', 'swarm', 'update', 'rule', 'solution', 'inspire', 'concept', 'plug', 'direct', 'particle', 'swarm', 'repetitive', 'controller', 'see', 'pdpsrc', 'pdmsrc', 'central', 'similarity', 'controller', 'observer', 'design', 'present', 'select', 'classic', 'control', 'scheme', 'obviously', 'provoke', 'solution', 'submission', 'might', 'interest', 'deal', 'parameter', 'identification', 'repetitive', 'process', 'iterative', 'learn', 'estimation', 'dynamic', 'optimization', 'problem', 'population', 'base', 'evolutionary', 'optimization', 'estimation', 'task', 'encounter', 'robotics', 'power', 'electronics', 'rare', 'subject', 'parameter', 'variation', 'asynchronous', 'update', 'ruledopdynamic', 'optimization', 'learn', 'swarm', 'update', 'ruleupdate', 'without', 'evaluatiopower', 'conversion', 'controlpower', 'electronics', 'control']",5
1159,47942,Systems and signals<p>Discrete transfer function of a system</p>discret,16,1,2,0,18,signalsdiscrete transfer function systemdiscret,"['signalsdiscrete', 'transfer', 'function', 'systemdiscret']",5
1160,47947,"The DOP-capable PSO is employed to adapt controller gains to changing repetitive process parameters.<p>Repetitiveness of a process to be controlled is innate to many industrial systems. Its presence creates new possibilities in developing control algorithms that take into account errors from previous passes to shape the control signal in current pass. Nevertheless, many repetitive processes can and are effectively controlled using non-repetitive controllers, i.e. quality requirements can be met without implementing repetitive controllers. However, it is not rare that such systems are subject to dynamics variations and in turn adaptation of controller gains could be a desirable feature. This submission illustrates concept of employing a particle swarm optimizer (modified to enable dynamic optimization problem solving) to adapt non-repetitive controller gains in the gradient-free manner. The performance is continually evaluated -- during the regular operation of the system -- using user-defined performance index and the PSO tracks the moving optimum as the plant is assumed to be time-variant (is not stationary). For more information please see comments inside the m-file.</p>adaptive control,controller tuning,dop,dynamic optimization problem,ilc,iterative learning control,optimal control,particle swarm optimization,pso,repetitive control",28,0,1,0,34,dop capable pso employ adapt controller gain change repetitive process parameter repetitiveness process control innate many industrial presence create new possibility develop control algorithm take account error previous pass shape control signal current pas nevertheless many repetitive process effectively control non repetitive controller quality requirement meet without implement repetitive controller however rare subject dynamic variation turn adaptation controller gain could desirable feature submission illustrate concept employ particle swarm optimizer modify enable dynamic optimization problem solve adapt non repetitive controller gain gradient free manner performance continually evaluate regular operation user define performance index pso track move optimum plant assume time variant stationary information please see comment inside file adaptive optimization learn controloptimal controlparticle swarm control,"['dop', 'capable', 'pso', 'employ', 'adapt', 'controller', 'gain', 'change', 'repetitive', 'process', 'parameter', 'repetitiveness', 'process', 'control', 'innate', 'many', 'industrial', 'presence', 'create', 'new', 'possibility', 'develop', 'control', 'algorithm', 'take', 'account', 'error', 'previous', 'pass', 'shape', 'control', 'signal', 'current', 'pas', 'nevertheless', 'many', 'repetitive', 'process', 'effectively', 'control', 'non', 'repetitive', 'controller', 'quality', 'requirement', 'meet', 'without', 'implement', 'repetitive', 'controller', 'however', 'rare', 'subject', 'dynamic', 'variation', 'turn', 'adaptation', 'controller', 'gain', 'could', 'desirable', 'feature', 'submission', 'illustrate', 'concept', 'employ', 'particle', 'swarm', 'optimizer', 'modify', 'enable', 'dynamic', 'optimization', 'problem', 'solve', 'adapt', 'non', 'repetitive', 'controller', 'gain', 'gradient', 'free', 'manner', 'performance', 'continually', 'evaluate', 'regular', 'operation', 'user', 'define', 'performance', 'index', 'pso', 'track', 'move', 'optimum', 'plant', 'assume', 'time', 'variant', 'stationary', 'information', 'please', 'see', 'comment', 'inside', 'file', 'adaptive', 'optimization', 'learn', 'controloptimal', 'controlparticle', 'swarm', 'control']",0
1161,47972,induction furnace model<p>this is model of induction furnace with twelve pulse rectifire which has lower total harmonica distrotion effect in network.</p>power electronics,71,2,2,0,93,induction furnace modelthis induction furnace twelve pulse rectifire low total harmonica distrotion effect network power electronics,"['induction', 'furnace', 'modelthis', 'induction', 'furnace', 'twelve', 'pulse', 'rectifire', 'low', 'total', 'harmonica', 'distrotion', 'effect', 'network', 'power', 'electronics']",4
1162,47981,"Sailing Yacht model simulation in Matlab/Simulink with 3D Animation.<p>4DOF simulation of a sailing yacht (includes roll) with a 3D animation using the Simulink 3D Animation toolbox.Model, notations and parameters are taken from Xiao and Jouffroy, ""Modeling and nonlinear heading control of sailing yachts"", IEEE Journal of Oceanic Engineering, vol. 39, no. 2, 2014.Tested in Matlab r2013a, Simulink 8.1, Simulink 3D Animation 7.0.</p>nonlinear controlgnc of marine systems,sailing yacht",70,4,2,0,81,sail yacht animation dof sail yacht include roll animation animation toolbox notation parameter take xiao jouffroy nonlinear head control sail yacht iee journal oceanic engineering vol test animation nonlinear controlgnc marine systemssailing yacht,"['sail', 'yacht', 'animation', 'dof', 'sail', 'yacht', 'include', 'roll', 'animation', 'animation', 'toolbox', 'notation', 'parameter', 'take', 'xiao', 'jouffroy', 'nonlinear', 'head', 'control', 'sail', 'yacht', 'iee', 'journal', 'oceanic', 'engineering', 'vol', 'test', 'animation', 'nonlinear', 'controlgnc', 'marine', 'systemssailing', 'yacht']",5
1163,47987,TRANSFORMERLESS INVERTER TOPOLOGY <p>LEVEL SHIFTED SPWM with frequency of 20Khz</p>bode,72,1,2,0,80,transformerless inverter topology level shift spwm frequency khzbode,"['transformerless', 'inverter', 'topology', 'level', 'shift', 'spwm', 'frequency', 'khzbode']",4
1164,47988,"A feedforward neural network is used to adjust LQR gains in the case of non-stationary state matrix.<p>This model demonstrates that the LQR design approach can be effectively used also for plants characterized by a non-stationary state matrix. A set of controllers is designed for different working points and an FFNN is employed to store this knowledge. The gain matrix K is then adjusted on the fly if the state matrix A changes. In the case of induction motor some entries of the state matrix A are functions of e.g. the stator flux space vector angular velocity and the slip angular velocity of the rotor. More details can be found in Neural-Network-based Programmable State Feedback Controller for Induction Motor Drive (<a href=""http://dx.doi.org/10.1109/IJCNN.2006.246811"">http://dx.doi.org/10.1109/IJCNN.2006.246811</a>). It is also advisable to get familiar with LQR basics prior to playing with this model. See e.g. <a href=""http://www.mathworks.com/help/control/ref/lqr.html"">http://www.mathworks.com/help/control/ref/lqr.html</a> .</p>ac motor,ann,artificial neural network,asynchronous motor drive,feedforward neural network,ffnn,induction motor drive,linearquadratic regulator,lqr,nonstationary state matrix,optimal control,programmable gain matrix,speed control,electric_motor_control,power_electronics_control",306,22,6,0,365,feedforward neural network adjust lqr gain case non stationary state matrix demonstrate lqr design approach effectively also plant characterize non stationary state matrix set controller design different work point ffnn employ store knowledge gain matrix adjust fly state matrix change case induction motor entry state matrix function stator flux space vector angular velocity slip angular velocity rotor detail find neural network base programmable state feedback controller induction motor drive http doi org ijcnn also advisable get familiar lqr basic prior play see http mathworks com help control ref lqr html neural motor neural motor state matrixoptimal gain matrixspeed controlelectric motor controlpower electronics control,"['feedforward', 'neural', 'network', 'adjust', 'lqr', 'gain', 'case', 'non', 'stationary', 'state', 'matrix', 'demonstrate', 'lqr', 'design', 'approach', 'effectively', 'also', 'plant', 'characterize', 'non', 'stationary', 'state', 'matrix', 'set', 'controller', 'design', 'different', 'work', 'point', 'ffnn', 'employ', 'store', 'knowledge', 'gain', 'matrix', 'adjust', 'fly', 'state', 'matrix', 'change', 'case', 'induction', 'motor', 'entry', 'state', 'matrix', 'function', 'stator', 'flux', 'space', 'vector', 'angular', 'velocity', 'slip', 'angular', 'velocity', 'rotor', 'detail', 'find', 'neural', 'network', 'base', 'programmable', 'state', 'feedback', 'controller', 'induction', 'motor', 'drive', 'http', 'doi', 'org', 'ijcnn', 'also', 'advisable', 'get', 'familiar', 'lqr', 'basic', 'prior', 'play', 'see', 'http', 'mathworks', 'com', 'help', 'control', 'ref', 'lqr', 'html', 'neural', 'motor', 'neural', 'motor', 'state', 'matrixoptimal', 'gain', 'matrixspeed', 'controlelectric', 'motor', 'controlpower', 'electronics', 'control']",4
1165,47991,"interleave<p>this model is three phase interleaved boost dc-dc converter</p>power_conversion_control,power_electronics_control,power electronics,simulink",29,0,1,0,33,interleavethis three phase interleave boost converterpower conversion controlpower electronics controlpower,"['interleavethis', 'three', 'phase', 'interleave', 'boost', 'converterpower', 'conversion', 'controlpower', 'electronics', 'controlpower']",6
1166,48012,"A neuroestimator is used to enable speed-sensorless operation of the asynchronous motor drive.<p>This model demonstrates possibility to use a feedforward neural network (static neural network) to estimate (more precisely to approximate) mechanical speed of the induction motor. The main challenge in such a task is to construct an effective approximation base. Here the 6 heuristic signals described in <a href=""http://dx.doi.org/10.1109/EURCON.2007.4400678"">http://dx.doi.org/10.1109/EURCON.2007.4400678</a> are used. It should be noted that any estimation method that exploits only fundamental excitation (fundamental model) fails at zero stator flux frequency. The induction motor becomes an unobservable system at zero stator frequency. The proposed solution also has this limitation. If control at zero frequency is required, other techniques have to be implemented. For more hints see e.g. <a href=""http://dx.doi.org/10.1109/TIE.2005.862324"">http://dx.doi.org/10.1109/TIE.2005.862324</a> . For some details on the analytical controller tuning in this particular drive, please see <a href=""https://www.mathworks.com/matlabcentral/fileexchange/52706-dsfoc-drive-and-kessler-s-criteria"">https://www.mathworks.com/matlabcentral/fileexchange/52706-dsfoc-drive-and-kessler-s-criteria</a> .</p>ann,approximation base,artificial neural network,asynchronous motor drive,feedforward neural network,ffnn,induction motor drive,neuroestimation,neuroestimator,sensorless control,speed estimation,speedsensorless drive,electric_motor_control,power_electronics_control",325,25,4,0,379,neuroestimator enable speed sensorless operation asynchronous motor drive demonstrate possibility feedforward neural network static neural network estimate precisely approximate mechanical speed induction motor main challenge task construct effective approximation base heuristic signal describe http doi org eurcon noted estimation method exploit fundamental excitation fundamental fail zero stator flux frequency induction motor become unobservable zero stator frequency propose solution also limitation control zero frequency require technique implemented hint see http doi org tie detail analytical controller tune particular drive please see mathworks com matlabcentral fileexchange dsfoc drive kessler criterion baseartificial neural motor neural motor controlspeed driveelectric motor controlpower electronics control,"['neuroestimator', 'enable', 'speed', 'sensorless', 'operation', 'asynchronous', 'motor', 'drive', 'demonstrate', 'possibility', 'feedforward', 'neural', 'network', 'static', 'neural', 'network', 'estimate', 'precisely', 'approximate', 'mechanical', 'speed', 'induction', 'motor', 'main', 'challenge', 'task', 'construct', 'effective', 'approximation', 'base', 'heuristic', 'signal', 'describe', 'http', 'doi', 'org', 'eurcon', 'noted', 'estimation', 'method', 'exploit', 'fundamental', 'excitation', 'fundamental', 'fail', 'zero', 'stator', 'flux', 'frequency', 'induction', 'motor', 'become', 'unobservable', 'zero', 'stator', 'frequency', 'propose', 'solution', 'also', 'limitation', 'control', 'zero', 'frequency', 'require', 'technique', 'implemented', 'hint', 'see', 'http', 'doi', 'org', 'tie', 'detail', 'analytical', 'controller', 'tune', 'particular', 'drive', 'please', 'see', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'dsfoc', 'drive', 'kessler', 'criterion', 'baseartificial', 'neural', 'motor', 'neural', 'motor', 'controlspeed', 'driveelectric', 'motor', 'controlpower', 'electronics', 'control']",4
1167,48017,"Process control simulation tutorial for PID tuning<p>This simulation lab is a dual gravity drained tank as an example of a second order and nonlinear system. Additional information on the application is available with the following video:<a href=""http://youtu.be/WxlZW9buRNAThe"">http://youtu.be/WxlZW9buRNAThe</a> problem statement for the process dynamics and control course (BYU) is located below:<a href=""http://apmonitor.com/che436/uploads/Main/sp3.pdfThere"">http://apmonitor.com/che436/uploads/Main/sp3.pdfThere</a> is also an Excel workbook that allows users to import data from the simulation to fit a first order plus dead time (FOPDT) model. Below is link to other course content that includes other simulation studies in MATLAB and Simulink:<a href=""http://apmonitor.com/che436"">http://apmonitor.com/che436</a></p>pick of the week,potw,level control,pid,process control",21,1,2,0,22,process control tutorial pid tuningthis lab dual gravity drain tank example second order nonlinear additional information application available follow video http youtu wxlzw burnathe problem statement process dynamic control course byu locate http apmonitor com che uploads main pdfthere also excel workbook allow user import data fit first order plus dead time fopdt link course content include study http apmonitor com che pick weekpotwlevel control,"['process', 'control', 'tutorial', 'pid', 'tuningthis', 'lab', 'dual', 'gravity', 'drain', 'tank', 'example', 'second', 'order', 'nonlinear', 'additional', 'information', 'application', 'available', 'follow', 'video', 'http', 'youtu', 'wxlzw', 'burnathe', 'problem', 'statement', 'process', 'dynamic', 'control', 'course', 'byu', 'locate', 'http', 'apmonitor', 'com', 'che', 'uploads', 'main', 'pdfthere', 'also', 'excel', 'workbook', 'allow', 'user', 'import', 'data', 'fit', 'first', 'order', 'plus', 'dead', 'time', 'fopdt', 'link', 'course', 'content', 'include', 'study', 'http', 'apmonitor', 'com', 'che', 'pick', 'weekpotwlevel', 'control']",0
1168,48018,"Exothermic CSTR with predictions for outlet temperature and concentration.<p>This CSTR model is commonly used in benchmark applications. It involves simple A-&gt;B kinetics, exhibits unstable behavior at higher temperatures, solves for temperature and concentration simultaneously, can maintain temperature control by adjusting jacket temperature, and has a few potential disturbance values such as feed concentration.Video tutorial: <a href=""http://youtu.be/dJuD2wiQbtsProblem"">http://youtu.be/dJuD2wiQbtsProblem</a> statement: <a href=""http://apmonitor.com/che436/uploads/Main/sp5.pdfAdditional"">http://apmonitor.com/che436/uploads/Main/sp5.pdfAdditional</a> course material: <a href=""http://apmonitor.com/che436"">http://apmonitor.com/che436</a></p>benchmark,cstr,pid,process control,reaction kinetics,temperature control",52,0,1,2,55,exothermic cstr prediction outlet temperature concentration cstr commonly benchmark application involve simple kinetics exhibit unstable behavior high temperature solve temperature concentration maintain temperature control adjust jacket temperature potential disturbance value fee concentration video tutorial http youtu djud wiqbtsproblem statement http apmonitor com che uploads main pdfadditional course material http apmonitor com che controlreaction control,"['exothermic', 'cstr', 'prediction', 'outlet', 'temperature', 'concentration', 'cstr', 'commonly', 'benchmark', 'application', 'involve', 'simple', 'kinetics', 'exhibit', 'unstable', 'behavior', 'high', 'temperature', 'solve', 'temperature', 'concentration', 'maintain', 'temperature', 'control', 'adjust', 'jacket', 'temperature', 'potential', 'disturbance', 'value', 'fee', 'concentration', 'video', 'tutorial', 'http', 'youtu', 'djud', 'wiqbtsproblem', 'statement', 'http', 'apmonitor', 'com', 'che', 'uploads', 'main', 'pdfadditional', 'course', 'material', 'http', 'apmonitor', 'com', 'che', 'controlreaction', 'control']",5
1169,48019,"Control blood sugar levels by adjusting insulin injection pump rate<p>This artificial pancreas simulation has a continuous glucose monitor, an insulin injection pump, and a potential PID controller. This process control project is described here:<a href=""http://apmonitor.com/che436/uploads/Main/sp6.pdfA"">http://apmonitor.com/che436/uploads/Main/sp6.pdfA</a> recent video by Dr. Ali Cinar on the topic of Artificial Pancreas Progress is provided below:<a href=""http://youtu.be/rrtPn6GKMlUAdditional"">http://youtu.be/rrtPn6GKMlUAdditional</a> course material on Process Dynamics and Control is provided at the following link:<a href=""http://apmonitor.com/che436"">http://apmonitor.com/che436</a></p>artificial pancreas,blood glucose,insulin,pid",59,0,1,3,61,control blood sugar level adjust insulin injection pump ratethis artificial pancreas continuous glucose monitor insulin injection pump potential pid controller process control project describe http apmonitor com che uploads main pdfa recent video ali cinar topic artificial pancreas progress provide http youtu rrtpn gkmluadditional course material process dynamic control provide follow link http apmonitor com che artificial pancreasblood,"['control', 'blood', 'sugar', 'level', 'adjust', 'insulin', 'injection', 'pump', 'ratethis', 'artificial', 'pancreas', 'continuous', 'glucose', 'monitor', 'insulin', 'injection', 'pump', 'potential', 'pid', 'controller', 'process', 'control', 'project', 'describe', 'http', 'apmonitor', 'com', 'che', 'uploads', 'main', 'pdfa', 'recent', 'video', 'ali', 'cinar', 'topic', 'artificial', 'pancreas', 'progress', 'provide', 'http', 'youtu', 'rrtpn', 'gkmluadditional', 'course', 'material', 'process', 'dynamic', 'control', 'provide', 'follow', 'link', 'http', 'apmonitor', 'com', 'che', 'artificial', 'pancreasblood']",5
1170,48029,"Basic demo of gears driven by a motor.<p>I created this model for two reasons:(1) a colleague of mine needed the video for his mechanical engineering lecture(2) my research relies heavily on SimMechanics, so I wanted to gain more experienceThe model shows a motor that drives a shaft. A spur gear is attached to the drive shaft, which meshes with a larger gear on the driven shaft. Also attached to the driven shaft is a fan.There are many ways to modify the model parameters:(1) The recommended approach is to open the Model Explorer, navigate to the Model Workspace of the given file, and edit the MATLAB Code provided. Parameters include part dimensions, input angular velocity, colors, and opacity.(2) You can also edit parameters directly through the subsystem masks by clicking on a part in the model. However, be aware that some parameters are used in more than one place (e.g. motor box length is used to compute the y-offset in the Rigid Transform block), hence why I set parameters via MATLAB Code in the Model Workspace.</p>electric_motor_control,power_electronics_control,gears,motors,multibody simulation,shafts,simmechanics,simple machines,simulink",51,6,2,0,47,basic demo gear driven motor create two reason colleague mine need video mechanical engineering lecture research rely heavily simmechanics want gain experiencethe show motor drive shaft spur gear attach drive shaft mesh large gear driven shaft also attach driven shaft fan many way modify parameter recommend approach open explorer navigate workspace give file edit code provide parameter include part dimension input angular velocity color opacity also edit parameter directly subsystem mask click part however aware parameter one place motor box length compute offset rigid transform block hence set parameter via code workspace electric motor controlpower electronics,"['basic', 'demo', 'gear', 'driven', 'motor', 'create', 'two', 'reason', 'colleague', 'mine', 'need', 'video', 'mechanical', 'engineering', 'lecture', 'research', 'rely', 'heavily', 'simmechanics', 'want', 'gain', 'experiencethe', 'show', 'motor', 'drive', 'shaft', 'spur', 'gear', 'attach', 'drive', 'shaft', 'mesh', 'large', 'gear', 'driven', 'shaft', 'also', 'attach', 'driven', 'shaft', 'fan', 'many', 'way', 'modify', 'parameter', 'recommend', 'approach', 'open', 'explorer', 'navigate', 'workspace', 'give', 'file', 'edit', 'code', 'provide', 'parameter', 'include', 'part', 'dimension', 'input', 'angular', 'velocity', 'color', 'opacity', 'also', 'edit', 'parameter', 'directly', 'subsystem', 'mask', 'click', 'part', 'however', 'aware', 'parameter', 'one', 'place', 'motor', 'box', 'length', 'compute', 'offset', 'rigid', 'transform', 'block', 'hence', 'set', 'parameter', 'via', 'code', 'workspace', 'electric', 'motor', 'controlpower', 'electronics']",0
1171,48052,"This is a part of my research about Quadrotor ^^<p>This is my project to simulate Quadrotor in Matlab Simulink environment.I have refer to Leonardo Araujo's model. And I have tried to make it become reasonable and simpler.But I quite confuse with ""Damping Coefficient"". I don't know how to have a right choice for it. I hope someone has researched that problem, with pleasure, will help me answer that question.Thanks for your help! ^^~<a href=""https://www.youtube.com/watch?v=N1jkAusvblohttps://www.youtube.com/watch?v=ggBuY3nKIrA"">https://www.youtube.com/watch?v=N1jkAusvblohttps://www.youtube.com/watch?v=ggBuY3nKIrA</a></p>ardrone,pixhawk,quadcopter,quadcopter modeling,quadcopter simulation,quadrotor,quadrotor modeling,quadrotor simulation,simmechanics,simulink",563,93,7,0,375,part research quadrotor project quadrotor environment refer leonardo araujo try make become reasonable simpler quite confuse damp coefficient know right choice hope someone research problem pleasure help answer question thanks help youtube com watch jkausvblo youtube com watch ggbuy,"['part', 'research', 'quadrotor', 'project', 'quadrotor', 'environment', 'refer', 'leonardo', 'araujo', 'try', 'make', 'become', 'reasonable', 'simpler', 'quite', 'confuse', 'damp', 'coefficient', 'know', 'right', 'choice', 'hope', 'someone', 'research', 'problem', 'pleasure', 'help', 'answer', 'question', 'thanks', 'help', 'youtube', 'com', 'watch', 'jkausvblo', 'youtube', 'com', 'watch', 'ggbuy']",0
1172,48062,"It is a step-down dc to dc converter.<p>It is a basic dc to dc converter or chopper known as Buck Converter. It used to step-down dc voltage.</p>power_conversion_control,power_electronics_control,buck converter,chopper,dc converter,dc to dc,sa web group,sanjay lodwal",34,2,2,0,34,step converter basic converter chopper know buck converter step voltage power conversion controlpower electronics controlbuck converterdc dcsa web groupsanjay lodwal,"['step', 'converter', 'basic', 'converter', 'chopper', 'know', 'buck', 'converter', 'step', 'voltage', 'power', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converterdc', 'dcsa', 'web', 'groupsanjay', 'lodwal']",1
1173,48067,solar model of pv panel<p>I need simulink model of pv array in steady state model using system theory and base paper</p>mathematics,98,5,3,0,98,solar paneli need array steady state theory base,"['solar', 'paneli', 'need', 'array', 'steady', 'state', 'theory', 'base']",4
1174,48074,"It is a Dc-Dc converter used to step up and step down the dc voltage.<p>It is a dc to dc converter or chopper used to step up and step down the dc voltage.</p>power_conversion_control,power_electronics_control,boost,buck,chopper,dc converter,matlab,sanjay lodwal,simulink,step down,step up",42,4,2,0,41,converter step step voltage converter chopper step step voltage power conversion controlpower electronics downstep,"['converter', 'step', 'step', 'voltage', 'converter', 'chopper', 'step', 'step', 'voltage', 'power', 'conversion', 'controlpower', 'electronics', 'downstep']",6
1175,48079,"please correct the errors<p>i m getting errors in the boost converter openloop</p>power_conversion_control,power_electronics_control,i m getting errors in the boost converter openloop",33,1,2,0,37,please correct errorsi get error boost converter openlooppower conversion controlpower electronics controli get error boost converter openloop,"['please', 'correct', 'errorsi', 'get', 'error', 'boost', 'converter', 'openlooppower', 'conversion', 'controlpower', 'electronics', 'controli', 'get', 'error', 'boost', 'converter', 'openloop']",3
1176,48080,"tracking maximum power point of solar cell with resistive load.<p>Solar MPPT is a device used track the maximum power point of solar cell with the help of buck boost converter. this circuit is used resistive load. solar panel is also simulated.</p>power_conversion_control,power_electronics_control,buck boost,mppt,resistive,sanjay lodwal,solar,solar cell,solar panel,windows sdk 71",61,6,3,0,66,track maximum power point solar cell resistive load solar mppt device track maximum power point solar cell help buck boost converter circuit resistive load solar panel also power conversion controlpower electronics controlbuck cellsolar panelwindows sdk,"['track', 'maximum', 'power', 'point', 'solar', 'cell', 'resistive', 'load', 'solar', 'mppt', 'device', 'track', 'maximum', 'power', 'point', 'solar', 'cell', 'help', 'buck', 'boost', 'converter', 'circuit', 'resistive', 'load', 'solar', 'panel', 'also', 'power', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'cellsolar', 'panelwindows', 'sdk']",3
1177,48098,sistemas de control<p>simulink de control PID retroalimentado</p>signal processing,5,0,1,0,5,sistemas control pid processing,"['sistemas', 'control', 'pid', 'processing']",4
1178,48104,"IEEE 15 bus radial network power flow<p>Simulink Model of IEEE 15 Bus radial network power system with Load Flow</p>15 bus,ieee 15 bus,ieee bus,bus,ieee,loadflow,power,power system,radial,simpowersystem,simulink",544,36,2,0,664,iee bus radial network power iee bus radial network power load flow busiee busiee,"['iee', 'bus', 'radial', 'network', 'power', 'iee', 'bus', 'radial', 'network', 'power', 'load', 'flow', 'busiee', 'busiee']",4
1179,48105,"MPPT For PV<p>Power system</p>fuzzy logic,mppt,pv,power_conversion_control,power_electronics_control",186,8,4,0,207,mppt pvpower systemfuzzy conversion controlpower electronics control,"['mppt', 'pvpower', 'systemfuzzy', 'conversion', 'controlpower', 'electronics', 'control']",6
1180,48113,"Formation Simscape R2013a (Ivan LIEBGOTT) Part 1sur3<p>Cette formation Ã  la modÃ©lisation multi-physique propose diffÃ©rents modules progressifs qui permettent de prendre en main  Simscape. Aucuns prÃ©requis dans lâutilisation de MATLAB/Simuliunk nâest nÃ©cessaire. La formation contient 500 slides et reprÃ©sente 8h de formation. Elle sâadresse aux enseignants, lycÃ©ens, Ã©tudiants, Ã©lÃ¨ves ingÃ©nieurâ¦Le tÃ©lÃ©chargement de lâensemble de la formation se fait Ã  lâaide de trois fichiers en raison de la limitation Ã  20Mb pour les fichiers sur MATLAB Central.Formation Simscape R2013a (Ivan LIEBGOTT) Part 1sur3 Formation Simscape R2013a (Ivan LIEBGOTT) Part 2sur3 <a href=""http://www.mathworks.fr/matlabcentral/fileexchange/48114-formation-simscape-r2013a--ivan-liebgott--part-2sur3Formation"">http://www.mathworks.fr/matlabcentral/fileexchange/48114-formation-simscape-r2013a--ivan-liebgott--part-2sur3Formation</a> Simscape R2013a (Ivan LIEBGOTT) Part 3sur3 <a href=""http://www.mathworks.fr/matlabcentral/fileexchange/48115-formation-simscape-r2013a--ivan-liebgott--part-3sur3Cette"">http://www.mathworks.fr/matlabcentral/fileexchange/48115-formation-simscape-r2013a--ivan-liebgott--part-3sur3Cette</a> formation comporte diffÃ©rents modules :1.IntroductionCe module prÃ©sente lâintÃ©rÃªt de la modÃ©lisation multi-physique et les outils nÃ©cessaires2.Prise en main de SimscapeCe module prÃ©sente les concepts thÃ©oriques de base indispensables Ã  la dÃ©marche de modÃ©lisation en sâappuyant sur la modÃ©lisation du comportement dâun circuit RL.3.Application Ã  la modÃ©lisation dâun moteur Ã  courant continuCe module prÃ©sente la modÃ©lisation dâun moteur Ã  courant continu.4.Application pÃ©dagogique : modÃ©lisation dâun hacheur sÃ©rieCe module prÃ©sente  la modÃ©lisation dâun hacheur sÃ©rie. Une rÃ©flexion est menÃ©e sur la notion de didactisation de modÃ¨le afin de rendre le modÃ¨le le plus accessible possible dans le but de lâexploiter pour des activitÃ©s  Ã©lÃ¨ves.5.Application Ã  la modÃ©lisation dâun axe linÃ©aire (domaine Ã©lectromÃ©canique)Ce module prÃ©sente la modÃ©lisation dâun moteur Ã  courant continu.6.Exemple de sÃ©quence pÃ©dagogique avec Simscape Ce module prÃ©sente une activitÃ© pÃ©dagogique que lâon peut mener avec des Ã©lÃ¨ves. Elle permet de mettre en Ã©vidence les principes de la commande dâun moteur Ã  courant continu par un hacheur.Ivan LIEBGOTT</p>ivan,ivan liebgott,liebgott",87,0,1,0,106,formation simscape ivan liebgott part sur cette formation modÃ©lisation multi physique propose diffÃ©rents module progressifs qui permettent prendre main simscape aucuns prÃ©requis dans lutilisation nest nÃ©cessaire formation contient slide reprÃ©sente formation elle sadresse aux enseignants lycÃ©ens Ã©tudiants Ã©lÃ¨ves ingÃ©nieurle tÃ©lÃ©chargement lensemble formation fait laide trois fichiers raison limitation pour les fichiers sur central formation simscape ivan liebgott part sur formation simscape ivan liebgott part sur http mathworks matlabcentral fileexchange formation simscape ivan liebgott part sur formation simscape ivan liebgott part sur http mathworks matlabcentral fileexchange formation simscape ivan liebgott part sur cette formation comporte diffÃ©rents modules introductionce module prÃ©sente lintÃ©rÃªt modÃ©lisation multi physique les outils nÃ©cessaires prise main simscapece module prÃ©sente les concept thÃ©oriques base indispensables dÃ©marche modÃ©lisation sappuyant sur modÃ©lisation comportement dun circuit application modÃ©lisation dun moteur courant continuce module prÃ©sente modÃ©lisation dun moteur courant continu application pÃ©dagogique modÃ©lisation dun hacheur sÃ©riece module prÃ©sente modÃ©lisation dun hacheur sÃ©rie une rÃ©flexion est menÃ©e sur notion didactisation modÃ¨le afin rendre modÃ¨le plus accessible possible dans lexploiter pour activitÃ©s Ã©lÃ¨ves application modÃ©lisation dun axe linÃ©aire domaine module prÃ©sente modÃ©lisation dun moteur courant continu exemple sÃ©quence pÃ©dagogique avec simscape module prÃ©sente une activitÃ© pÃ©dagogique que lon peut mener avec des Ã©lÃ¨ves elle permet mettre Ã©vidence les principe commande dun moteur courant continu par hacheur ivan,"['formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'cette', 'formation', 'modÃ©lisation', 'multi', 'physique', 'propose', 'diffÃ©rents', 'module', 'progressifs', 'qui', 'permettent', 'prendre', 'main', 'simscape', 'aucuns', 'prÃ©requis', 'dans', 'lutilisation', 'nest', 'nÃ©cessaire', 'formation', 'contient', 'slide', 'reprÃ©sente', 'formation', 'elle', 'sadresse', 'aux', 'enseignants', 'lycÃ©ens', 'Ã©tudiants', 'Ã©lÃ¨ves', 'ingÃ©nieurle', 'tÃ©lÃ©chargement', 'lensemble', 'formation', 'fait', 'laide', 'trois', 'fichiers', 'raison', 'limitation', 'pour', 'les', 'fichiers', 'sur', 'central', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'cette', 'formation', 'comporte', 'diffÃ©rents', 'modules', 'introductionce', 'module', 'prÃ©sente', 'lintÃ©rÃªt', 'modÃ©lisation', 'multi', 'physique', 'les', 'outils', 'nÃ©cessaires', 'prise', 'main', 'simscapece', 'module', 'prÃ©sente', 'les', 'concept', 'thÃ©oriques', 'base', 'indispensables', 'dÃ©marche', 'modÃ©lisation', 'sappuyant', 'sur', 'modÃ©lisation', 'comportement', 'dun', 'circuit', 'application', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continuce', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continu', 'application', 'pÃ©dagogique', 'modÃ©lisation', 'dun', 'hacheur', 'sÃ©riece', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'hacheur', 'sÃ©rie', 'une', 'rÃ©flexion', 'est', 'menÃ©e', 'sur', 'notion', 'didactisation', 'modÃ¨le', 'afin', 'rendre', 'modÃ¨le', 'plus', 'accessible', 'possible', 'dans', 'lexploiter', 'pour', 'activitÃ©s', 'Ã©lÃ¨ves', 'application', 'modÃ©lisation', 'dun', 'axe', 'linÃ©aire', 'domaine', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continu', 'exemple', 'sÃ©quence', 'pÃ©dagogique', 'avec', 'simscape', 'module', 'prÃ©sente', 'une', 'activitÃ©', 'pÃ©dagogique', 'que', 'lon', 'peut', 'mener', 'avec', 'des', 'Ã©lÃ¨ves', 'elle', 'permet', 'mettre', 'Ã©vidence', 'les', 'principe', 'commande', 'dun', 'moteur', 'courant', 'continu', 'par', 'hacheur', 'ivan']",5
1181,48114,"Formation Simscape R2013a (Ivan LIEBGOTT) Part 2sur3<p>Cette formation Ã  la modÃ©lisation multi-physique propose diffÃ©rents modules progressifs qui permettent de prendre en main  Simscape. Aucuns prÃ©requis dans lâutilisation de MATLAB/Simuliunk nâest nÃ©cessaire. La formation contient 500 slides et reprÃ©sente 8h de formation. Elle sâadresse aux enseignants, lycÃ©ens, Ã©tudiants, Ã©lÃ¨ves ingÃ©nieurâ¦Le tÃ©lÃ©chargement de lâensemble de la formation se fait Ã  lâaide de trois fichiers en raison de la limitation Ã  20Mb pour les fichiers sur MATLAB Central.Formation Simscape R2013a (Ivan LIEBGOTT) Part 1sur3 <a href=""http://www.mathworks.fr/matlabcentral/fileexchange/48113-formation-simscape-r2013a--ivan-liebgott--part-1sur3Formation"">http://www.mathworks.fr/matlabcentral/fileexchange/48113-formation-simscape-r2013a--ivan-liebgott--part-1sur3Formation</a> Simscape R2013a (Ivan LIEBGOTT) Part 2sur3 Formation Simscape R2013a (Ivan LIEBGOTT) Part 3sur3 <a href=""http://www.mathworks.fr/matlabcentral/fileexchange/48115-formation-simscape-r2013a--ivan-liebgott--part-3sur3Cette"">http://www.mathworks.fr/matlabcentral/fileexchange/48115-formation-simscape-r2013a--ivan-liebgott--part-3sur3Cette</a> formation comporte diffÃ©rents modules :1.IntroductionCe module prÃ©sente lâintÃ©rÃªt de la modÃ©lisation multi-physique et les outils nÃ©cessaires2.Prise en main de SimscapeCe module prÃ©sente les concepts thÃ©oriques de base indispensables Ã  la dÃ©marche de modÃ©lisation en sâappuyant sur la modÃ©lisation du comportement dâun circuit RL.3.Application Ã  la modÃ©lisation dâun moteur Ã  courant continuCe module prÃ©sente la modÃ©lisation dâun moteur Ã  courant continu.4.Application pÃ©dagogique : modÃ©lisation dâun hacheur sÃ©rieCe module prÃ©sente  la modÃ©lisation dâun hacheur sÃ©rie. Une rÃ©flexion est menÃ©e sur la notion de didactisation de modÃ¨le afin de rendre le modÃ¨le le plus accessible possible dans le but de lâexploiter pour des activitÃ©s  Ã©lÃ¨ves.5.Application Ã  la modÃ©lisation dâun axe linÃ©aire (domaine Ã©lectromÃ©canique)Ce module prÃ©sente la modÃ©lisation dâun moteur Ã  courant continu.6.Exemple de sÃ©quence pÃ©dagogique avec Simscape Ce module prÃ©sente une activitÃ© pÃ©dagogique que lâon peut mener avec des Ã©lÃ¨ves. Elle permet de mettre en Ã©vidence les principes de la commande dâun moteur Ã  courant continu par un hacheur.Ivan LIEBGOTT</p>ivan,ivan liebgott,liebgott",55,1,2,0,59,formation simscape ivan liebgott part sur cette formation modÃ©lisation multi physique propose diffÃ©rents module progressifs qui permettent prendre main simscape aucuns prÃ©requis dans lutilisation nest nÃ©cessaire formation contient slide reprÃ©sente formation elle sadresse aux enseignants lycÃ©ens Ã©tudiants Ã©lÃ¨ves ingÃ©nieurle tÃ©lÃ©chargement lensemble formation fait laide trois fichiers raison limitation pour les fichiers sur central formation simscape ivan liebgott part sur http mathworks matlabcentral fileexchange formation simscape ivan liebgott part sur formation simscape ivan liebgott part sur formation simscape ivan liebgott part sur http mathworks matlabcentral fileexchange formation simscape ivan liebgott part sur cette formation comporte diffÃ©rents modules introductionce module prÃ©sente lintÃ©rÃªt modÃ©lisation multi physique les outils nÃ©cessaires prise main simscapece module prÃ©sente les concept thÃ©oriques base indispensables dÃ©marche modÃ©lisation sappuyant sur modÃ©lisation comportement dun circuit application modÃ©lisation dun moteur courant continuce module prÃ©sente modÃ©lisation dun moteur courant continu application pÃ©dagogique modÃ©lisation dun hacheur sÃ©riece module prÃ©sente modÃ©lisation dun hacheur sÃ©rie une rÃ©flexion est menÃ©e sur notion didactisation modÃ¨le afin rendre modÃ¨le plus accessible possible dans lexploiter pour activitÃ©s Ã©lÃ¨ves application modÃ©lisation dun axe linÃ©aire domaine module prÃ©sente modÃ©lisation dun moteur courant continu exemple sÃ©quence pÃ©dagogique avec simscape module prÃ©sente une activitÃ© pÃ©dagogique que lon peut mener avec des Ã©lÃ¨ves elle permet mettre Ã©vidence les principe commande dun moteur courant continu par hacheur ivan,"['formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'cette', 'formation', 'modÃ©lisation', 'multi', 'physique', 'propose', 'diffÃ©rents', 'module', 'progressifs', 'qui', 'permettent', 'prendre', 'main', 'simscape', 'aucuns', 'prÃ©requis', 'dans', 'lutilisation', 'nest', 'nÃ©cessaire', 'formation', 'contient', 'slide', 'reprÃ©sente', 'formation', 'elle', 'sadresse', 'aux', 'enseignants', 'lycÃ©ens', 'Ã©tudiants', 'Ã©lÃ¨ves', 'ingÃ©nieurle', 'tÃ©lÃ©chargement', 'lensemble', 'formation', 'fait', 'laide', 'trois', 'fichiers', 'raison', 'limitation', 'pour', 'les', 'fichiers', 'sur', 'central', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'cette', 'formation', 'comporte', 'diffÃ©rents', 'modules', 'introductionce', 'module', 'prÃ©sente', 'lintÃ©rÃªt', 'modÃ©lisation', 'multi', 'physique', 'les', 'outils', 'nÃ©cessaires', 'prise', 'main', 'simscapece', 'module', 'prÃ©sente', 'les', 'concept', 'thÃ©oriques', 'base', 'indispensables', 'dÃ©marche', 'modÃ©lisation', 'sappuyant', 'sur', 'modÃ©lisation', 'comportement', 'dun', 'circuit', 'application', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continuce', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continu', 'application', 'pÃ©dagogique', 'modÃ©lisation', 'dun', 'hacheur', 'sÃ©riece', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'hacheur', 'sÃ©rie', 'une', 'rÃ©flexion', 'est', 'menÃ©e', 'sur', 'notion', 'didactisation', 'modÃ¨le', 'afin', 'rendre', 'modÃ¨le', 'plus', 'accessible', 'possible', 'dans', 'lexploiter', 'pour', 'activitÃ©s', 'Ã©lÃ¨ves', 'application', 'modÃ©lisation', 'dun', 'axe', 'linÃ©aire', 'domaine', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continu', 'exemple', 'sÃ©quence', 'pÃ©dagogique', 'avec', 'simscape', 'module', 'prÃ©sente', 'une', 'activitÃ©', 'pÃ©dagogique', 'que', 'lon', 'peut', 'mener', 'avec', 'des', 'Ã©lÃ¨ves', 'elle', 'permet', 'mettre', 'Ã©vidence', 'les', 'principe', 'commande', 'dun', 'moteur', 'courant', 'continu', 'par', 'hacheur', 'ivan']",5
1182,48115,"Formation Simscape R2013a (Ivan LIEBGOTT) Part 3sur3<p>Cette formation Ã  la modÃ©lisation multi-physique propose diffÃ©rents modules progressifs qui permettent de prendre en main  Simscape. Aucuns prÃ©requis dans lâutilisation de MATLAB/Simuliunk nâest nÃ©cessaire. La formation contient 500 slides et reprÃ©sente 8h de formation. Elle sâadresse aux enseignants, lycÃ©ens, Ã©tudiants, Ã©lÃ¨ves ingÃ©nieurâ¦Le tÃ©lÃ©chargement de lâensemble de la formation se fait Ã  lâaide de trois fichiers en raison de la limitation Ã  20Mb pour les fichiers sur MATLAB Central.Formation Simscape R2013a (Ivan LIEBGOTT) Part 1sur3 <a href=""http://www.mathworks.fr/matlabcentral/fileexchange/48113-formation-simscape-r2013a--ivan-liebgott--part-1sur3Formation"">http://www.mathworks.fr/matlabcentral/fileexchange/48113-formation-simscape-r2013a--ivan-liebgott--part-1sur3Formation</a> Simscape R2013a (Ivan LIEBGOTT) Part 2sur3 <a href=""http://www.mathworks.fr/matlabcentral/fileexchange/48114-formation-simscape-r2013a--ivan-liebgott--part-2sur3Formation"">http://www.mathworks.fr/matlabcentral/fileexchange/48114-formation-simscape-r2013a--ivan-liebgott--part-2sur3Formation</a> Simscape R2013a (Ivan LIEBGOTT) Part 3sur3 Cette formation comporte diffÃ©rents modules :1.IntroductionCe module prÃ©sente lâintÃ©rÃªt de la modÃ©lisation multi-physique et les outils nÃ©cessaires2.Prise en main de SimscapeCe module prÃ©sente les concepts thÃ©oriques de base indispensables Ã  la dÃ©marche de modÃ©lisation en sâappuyant sur la modÃ©lisation du comportement dâun circuit RL.3.Application Ã  la modÃ©lisation dâun moteur Ã  courant continuCe module prÃ©sente la modÃ©lisation dâun moteur Ã  courant continu.4.Application pÃ©dagogique : modÃ©lisation dâun hacheur sÃ©rieCe module prÃ©sente  la modÃ©lisation dâun hacheur sÃ©rie. Une rÃ©flexion est menÃ©e sur la notion de didactisation de modÃ¨le afin de rendre le modÃ¨le le plus accessible possible dans le but de lâexploiter pour des activitÃ©s  Ã©lÃ¨ves.5.Application Ã  la modÃ©lisation dâun axe linÃ©aire (domaine Ã©lectromÃ©canique)Ce module prÃ©sente la modÃ©lisation dâun moteur Ã  courant continu.6.Exemple de sÃ©quence pÃ©dagogique avec Simscape Ce module prÃ©sente une activitÃ© pÃ©dagogique que lâon peut mener avec des Ã©lÃ¨ves. Elle permet de mettre en Ã©vidence les principes de la commande dâun moteur Ã  courant continu par un hacheur.Ivan LIEBGOTT</p>ivan,ivan liebgott,liebgott",104,8,2,0,105,formation simscape ivan liebgott part sur cette formation modÃ©lisation multi physique propose diffÃ©rents module progressifs qui permettent prendre main simscape aucuns prÃ©requis dans lutilisation nest nÃ©cessaire formation contient slide reprÃ©sente formation elle sadresse aux enseignants lycÃ©ens Ã©tudiants Ã©lÃ¨ves ingÃ©nieurle tÃ©lÃ©chargement lensemble formation fait laide trois fichiers raison limitation pour les fichiers sur central formation simscape ivan liebgott part sur http mathworks matlabcentral fileexchange formation simscape ivan liebgott part sur formation simscape ivan liebgott part sur http mathworks matlabcentral fileexchange formation simscape ivan liebgott part sur formation simscape ivan liebgott part sur cette formation comporte diffÃ©rents modules introductionce module prÃ©sente lintÃ©rÃªt modÃ©lisation multi physique les outils nÃ©cessaires prise main simscapece module prÃ©sente les concept thÃ©oriques base indispensables dÃ©marche modÃ©lisation sappuyant sur modÃ©lisation comportement dun circuit application modÃ©lisation dun moteur courant continuce module prÃ©sente modÃ©lisation dun moteur courant continu application pÃ©dagogique modÃ©lisation dun hacheur sÃ©riece module prÃ©sente modÃ©lisation dun hacheur sÃ©rie une rÃ©flexion est menÃ©e sur notion didactisation modÃ¨le afin rendre modÃ¨le plus accessible possible dans lexploiter pour activitÃ©s Ã©lÃ¨ves application modÃ©lisation dun axe linÃ©aire domaine module prÃ©sente modÃ©lisation dun moteur courant continu exemple sÃ©quence pÃ©dagogique avec simscape module prÃ©sente une activitÃ© pÃ©dagogique que lon peut mener avec des Ã©lÃ¨ves elle permet mettre Ã©vidence les principe commande dun moteur courant continu par hacheur ivan,"['formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'cette', 'formation', 'modÃ©lisation', 'multi', 'physique', 'propose', 'diffÃ©rents', 'module', 'progressifs', 'qui', 'permettent', 'prendre', 'main', 'simscape', 'aucuns', 'prÃ©requis', 'dans', 'lutilisation', 'nest', 'nÃ©cessaire', 'formation', 'contient', 'slide', 'reprÃ©sente', 'formation', 'elle', 'sadresse', 'aux', 'enseignants', 'lycÃ©ens', 'Ã©tudiants', 'Ã©lÃ¨ves', 'ingÃ©nieurle', 'tÃ©lÃ©chargement', 'lensemble', 'formation', 'fait', 'laide', 'trois', 'fichiers', 'raison', 'limitation', 'pour', 'les', 'fichiers', 'sur', 'central', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'http', 'mathworks', 'matlabcentral', 'fileexchange', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'formation', 'simscape', 'ivan', 'liebgott', 'part', 'sur', 'cette', 'formation', 'comporte', 'diffÃ©rents', 'modules', 'introductionce', 'module', 'prÃ©sente', 'lintÃ©rÃªt', 'modÃ©lisation', 'multi', 'physique', 'les', 'outils', 'nÃ©cessaires', 'prise', 'main', 'simscapece', 'module', 'prÃ©sente', 'les', 'concept', 'thÃ©oriques', 'base', 'indispensables', 'dÃ©marche', 'modÃ©lisation', 'sappuyant', 'sur', 'modÃ©lisation', 'comportement', 'dun', 'circuit', 'application', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continuce', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continu', 'application', 'pÃ©dagogique', 'modÃ©lisation', 'dun', 'hacheur', 'sÃ©riece', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'hacheur', 'sÃ©rie', 'une', 'rÃ©flexion', 'est', 'menÃ©e', 'sur', 'notion', 'didactisation', 'modÃ¨le', 'afin', 'rendre', 'modÃ¨le', 'plus', 'accessible', 'possible', 'dans', 'lexploiter', 'pour', 'activitÃ©s', 'Ã©lÃ¨ves', 'application', 'modÃ©lisation', 'dun', 'axe', 'linÃ©aire', 'domaine', 'module', 'prÃ©sente', 'modÃ©lisation', 'dun', 'moteur', 'courant', 'continu', 'exemple', 'sÃ©quence', 'pÃ©dagogique', 'avec', 'simscape', 'module', 'prÃ©sente', 'une', 'activitÃ©', 'pÃ©dagogique', 'que', 'lon', 'peut', 'mener', 'avec', 'des', 'Ã©lÃ¨ves', 'elle', 'permet', 'mettre', 'Ã©vidence', 'les', 'principe', 'commande', 'dun', 'moteur', 'courant', 'continu', 'par', 'hacheur', 'ivan']",5
1183,48118,"solar battery charger<p>solar based charger converter</p>battery_system_management,power_conversion_control,power_electronics_control,simulink",188,14,4,0,194,solar battery chargersolar base charger managementpower conversion controlpower electronics,"['solar', 'battery', 'chargersolar', 'base', 'charger', 'managementpower', 'conversion', 'controlpower', 'electronics']",1
1184,48124,"Basic Mathematic Modeling and Close loop Speed Control of Separately Excited DC Motor<p>Mathematical Modeling and Close loop Speed Control of Separately Excited DC Motor.Close Loop control is done in two loop, first inner current loop having current/torque controller and outer speed controller loop control the speed. A antiwindup technique is used in controller to avoid integrator windup problem.</p>close loop control,close loop control of dc motor,current loop,dc motor,design of controller,electric drives,mathematical modeling,mathematical modeling of dc motor,motor,pi controller,separately excited dc motor,simulink,speed control,speed control of dc motor,speed loop,electric_motor_control,power_conversion_control,power_electronics_control",78,5,3,0,94,basic mathematic close loop speed control separately excite close loop speed control separately excite motor close loop control two loop first inner current loop current torque controller outer speed controller loop control speed antiwindup technique controller avoid integrator windup problem close loop controlclose loop control motorcurrent loopdc motordesign motormotorpi excite controlspeed control motorspeed loopelectric motor controlpower conversion controlpower electronics control,"['basic', 'mathematic', 'close', 'loop', 'speed', 'control', 'separately', 'excite', 'close', 'loop', 'speed', 'control', 'separately', 'excite', 'motor', 'close', 'loop', 'control', 'two', 'loop', 'first', 'inner', 'current', 'loop', 'current', 'torque', 'controller', 'outer', 'speed', 'controller', 'loop', 'control', 'speed', 'antiwindup', 'technique', 'controller', 'avoid', 'integrator', 'windup', 'problem', 'close', 'loop', 'controlclose', 'loop', 'control', 'motorcurrent', 'loopdc', 'motordesign', 'motormotorpi', 'excite', 'controlspeed', 'control', 'motorspeed', 'loopelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1185,48125,"scrambler<p>The Scrambler block scrambles the input signal, which must be a scalar or a frame-based column vector. If the Calculation base parameter is N, then the input values must be integers between 0 and N-1.</p>descrambler,scrambler",4,0,1,0,5,scramblerthe scrambler block scramble input signal must scalar frame base column vector calculation base parameter input value must integers,"['scramblerthe', 'scrambler', 'block', 'scramble', 'input', 'signal', 'must', 'scalar', 'frame', 'base', 'column', 'vector', 'calculation', 'base', 'parameter', 'input', 'value', 'must', 'integers']",0
1186,48150,"It is step up dc-dc converter or chopper.<p>It is a basic circuit of boost converter used to step up the input voltage.Vo=Vin/(1-D)</p>power_conversion_control,power_electronics_control,boost,chopper,dc converter,sanjay lodwal,step up",34,2,2,0,36,step converter chopper basic circuit boost converter step input voltage vin power conversion controlpower electronics convertersanjay lodwalstep,"['step', 'converter', 'chopper', 'basic', 'circuit', 'boost', 'converter', 'step', 'input', 'voltage', 'vin', 'power', 'conversion', 'controlpower', 'electronics', 'convertersanjay', 'lodwalstep']",1
1187,48221,"To show the change in I-V characteristics of solar cell with temperature and irradiation.<p>To show the change in I-V characteristics of solar cell with temperature and irradiation. In this file I-V and P-V characteristics are shown for three value of temperature and irradiation.</p>characteristics,irradiation,sanjay lodwal,solar,temperature",54,4,3,0,68,show change characteristic solar cell temperature irradiation show change characteristic solar cell temperature irradiation file characteristic show three value temperature irradiation,"['show', 'change', 'characteristic', 'solar', 'cell', 'temperature', 'irradiation', 'show', 'change', 'characteristic', 'solar', 'cell', 'temperature', 'irradiation', 'file', 'characteristic', 'show', 'three', 'value', 'temperature', 'irradiation']",7
1188,48234,"The LiFePO4 battery model developed on the basis of experimental data.<p>The LiFePO4 battery model has been developed in the PLECS toolbox. The model of electrochemical cell has been created on the basis of the characteristics of Li-ion battery determined experimentally.  The Winston Battery Cell LYP40AHA has been used in the study.  Battery model has been developed to reflect the battery voltage during discharge at various condition. Voltage characteristics take into account the change in battery voltage caused by state of charge, temperature and current. The model is dynamic, i.e. it reflects the transient state of battery output voltage. More details on battery model is presented in <a href=""http://www.pe.org.pl/articles/2014/7/3.pdf.Performed"">http://www.pe.org.pl/articles/2014/7/3.pdf.Performed</a> studies allow to presume that the battery model adequately reflects the LiFePO4 behaviour in the ranges of:- temperature 0C - 40Â°C- cell voltage 2.5V - 3.6V- C-rate current 0-2CThe parameterisation of the model allows to specify a battery pack with a defined cell capacity  and number of cells in series.There is not possible to model pure variable resistors in PLECS, so a capacitive coupled variable resistor with very small capacitance has been used to model a series resistance. The full version is available for the licensed PLECS users. The non-licensed users need the free PLECS Viewer - <a href=""http://www.plexim.com/download/blockset"">http://www.plexim.com/download/blockset</a>.</p>battery equivalent circuit,battery experimental data,battery model,dynamic battery model,electrochemical battery,lifepo4 battery,liion battery,lithiumion battery,lyp40aha,series battery pack,temperature dependent battery model,battery_system_management,power_electronics_control",12,2,2,0,8,lifepo battery develop basis experimental data lifepo battery develop plecs toolbox electrochemical cell create basis characteristic ion battery determine experimentally winston battery cell lyp aha study battery develop reflect battery voltage discharge various condition voltage characteristic take account change battery voltage cause state charge temperature current dynamic reflect transient state battery output voltage detail battery present http org article pdf perform study allow presume battery adequately reflect lifepo behaviour range temperature cell voltage rate current cthe allows specify battery pack define cell capacity number cell series possible pure variable resistor plecs capacitive couple variable resistor small capacitance series resistance full version available licensed plecs user non license user need free plecs viewer http plexim com download blockset battery equivalent circuitbattery experimental databattery modeldynamic battery batterylifepo batteryliion batterylyp ahaseries battery packtemperature dependent battery modelbattery managementpower electronics control,"['lifepo', 'battery', 'develop', 'basis', 'experimental', 'data', 'lifepo', 'battery', 'develop', 'plecs', 'toolbox', 'electrochemical', 'cell', 'create', 'basis', 'characteristic', 'ion', 'battery', 'determine', 'experimentally', 'winston', 'battery', 'cell', 'lyp', 'aha', 'study', 'battery', 'develop', 'reflect', 'battery', 'voltage', 'discharge', 'various', 'condition', 'voltage', 'characteristic', 'take', 'account', 'change', 'battery', 'voltage', 'cause', 'state', 'charge', 'temperature', 'current', 'dynamic', 'reflect', 'transient', 'state', 'battery', 'output', 'voltage', 'detail', 'battery', 'present', 'http', 'org', 'article', 'pdf', 'perform', 'study', 'allow', 'presume', 'battery', 'adequately', 'reflect', 'lifepo', 'behaviour', 'range', 'temperature', 'cell', 'voltage', 'rate', 'current', 'cthe', 'allows', 'specify', 'battery', 'pack', 'define', 'cell', 'capacity', 'number', 'cell', 'series', 'possible', 'pure', 'variable', 'resistor', 'plecs', 'capacitive', 'couple', 'variable', 'resistor', 'small', 'capacitance', 'series', 'resistance', 'full', 'version', 'available', 'licensed', 'plecs', 'user', 'non', 'license', 'user', 'need', 'free', 'plecs', 'viewer', 'http', 'plexim', 'com', 'download', 'blockset', 'battery', 'equivalent', 'circuitbattery', 'experimental', 'databattery', 'modeldynamic', 'battery', 'batterylifepo', 'batteryliion', 'batterylyp', 'ahaseries', 'battery', 'packtemperature', 'dependent', 'battery', 'modelbattery', 'managementpower', 'electronics', 'control']",4
1189,48259,"Digital  SSM modulation with  FDM(frequency division multiplexing)<p>this SLX file inputs two audio files(signals) simulate SSB and FDM algorithms on signals and then outputs  the same signals</p>communications,demodulation,fdm,filtering,modulation,signal processing,simulation,simulink,ssb",39,0,1,0,40,digital ssm modulation fdm frequency division multiplexing slx file input two audio file signal ssb fdm algorithm signal output,"['digital', 'ssm', 'modulation', 'fdm', 'frequency', 'division', 'multiplexing', 'slx', 'file', 'input', 'two', 'audio', 'file', 'signal', 'ssb', 'fdm', 'algorithm', 'signal', 'output']",0
1190,48266,"Three Phase Controlled Rectifier<p>This file contains simulink design of the full-wave controlled three-phase rectifier. PID controller is included.This project were done as a part of ROBT 307 Power Electronics course in Nazarbayev University.Project Specs:To design controlled full-wave three-phase rectifier with RL-load. To select proper parameters of the circuit and construct the controller for the circuit.Specifications:Vinput = AC 480Vrmsfinput = 60 HzVoutput = DC 480 VPout = 500 kWVripple = 1%</p>power_conversion_control,power_electronics_control,power electronics,rectifier,rl load,three phase rectifier",96,1,2,0,128,three phase control rectifierthis file contain design full wave control three phase rectifier pid controller include project part robt power electronics course nazarbayev university project spec design control full wave three phase rectifier load select proper parameter circuit construct controller circuit specification vinput vrmsfinput hzvoutput vpout kwvripple power conversion controlpower electronics controlpower loadthree phase rectifier,"['three', 'phase', 'control', 'rectifierthis', 'file', 'contain', 'design', 'full', 'wave', 'control', 'three', 'phase', 'rectifier', 'pid', 'controller', 'include', 'project', 'part', 'robt', 'power', 'electronics', 'course', 'nazarbayev', 'university', 'project', 'spec', 'design', 'control', 'full', 'wave', 'three', 'phase', 'rectifier', 'load', 'select', 'proper', 'parameter', 'circuit', 'construct', 'controller', 'circuit', 'specification', 'vinput', 'vrmsfinput', 'hzvoutput', 'vpout', 'kwvripple', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower', 'loadthree', 'phase', 'rectifier']",3
1191,48298,"ASK USING SIMULINK<p>Amplitude shift keying(ASK) using simulink</p>bernaulli binary generator,simulink",26,4,3,0,29,ask shift key ask binary,"['ask', 'shift', 'key', 'ask', 'binary']",8
1192,48335,"A simple car simulation<p>This Vehicle model is input a pedal opening, and is output a vehicle speed[km/h].I used this book as reference:<a href=""http://www.amazon.co.jp/gp/switch-language/product/4906864015/ref=dp_change_lang?ie=UTF8&amp;language=en_JP"">http://www.amazon.co.jp/gp/switch-language/product/4906864015/ref=dp_change_lang?ie=UTF8&amp;language=en_JP</a></p>simulink",304,26,5,0,365,simple car vehicle input pedal open output vehicle speed book reference http amazon switch language product ref change lang utf amp language,"['simple', 'car', 'vehicle', 'input', 'pedal', 'open', 'output', 'vehicle', 'speed', 'book', 'reference', 'http', 'amazon', 'switch', 'language', 'product', 'ref', 'change', 'lang', 'utf', 'amp', 'language']",0
1193,48338,"2 TDM signal model using simulink<p>Funtion of Time Division multiplexer</p>demux,multiplexer,simulink",15,0,1,0,18,tdm signal time division,"['tdm', 'signal', 'time', 'division']",0
1194,48340,"Four TDM signal model using simulink<p>Four TDM signal model using simulink</p>communications,simulink",27,0,1,0,34,four tdm signal tdm signal,"['four', 'tdm', 'signal', 'tdm', 'signal']",0
1195,48351,"BLDC motor control using PI controller<p>This model considers the speed control of a brush-less DC motor using a proportional-integral (PI) controller.</p>electric_motor_control,power_conversion_control,power_electronics_control,bldc motor,electrical drive,pi controller,speed control",57,3,2,0,73,bldc motor control controllerthis considers speed control brush motor proportional integral controller electric motor controlpower conversion controlpower electronics controlbldc motorelectrical drivepi controllerspeed control,"['bldc', 'motor', 'control', 'controllerthis', 'considers', 'speed', 'control', 'brush', 'motor', 'proportional', 'integral', 'controller', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlbldc', 'motorelectrical', 'drivepi', 'controllerspeed', 'control']",1
1196,48353,Simulink for integrate firing neuron model<p>Simulink model for integrated firing neuron network model.</p>simulink,131,7,2,0,151,integrate fire neuron integrate firing neuron network,"['integrate', 'fire', 'neuron', 'integrate', 'firing', 'neuron', 'network']",8
1197,48358,"PSK USING SIMULINK<p>PSK USING SIMULINK,BPSK,QPSK</p>communications,simulink",11,0,1,0,13,psk,['psk'],2
1198,48368,"Colors the input and output ports based on the datatype of port<p>The function colors the inputs and outputs of the simulink model based on the data type of the port. It helps in identifying the data type of the port visually and after creating the model if we want to set the color of the ports based on the data type it is helpful. It doesnt color the ports of the library linked in the model, it'll search inside the subsytems, masked subsystems but not inside the linked library. From Workspace and To Workspace are excluded.</p>find_system,get_param,port,set_param,simulink",51,7,3,2,52,color input output port base datatype portthe function color input output base data type port help identify data type port visually create want set color port base data type helpful doesnt color port link search inside subsytems mask subsystem inside link workspace workspace exclude find systemget paramportset,"['color', 'input', 'output', 'port', 'base', 'datatype', 'portthe', 'function', 'color', 'input', 'output', 'base', 'data', 'type', 'port', 'help', 'identify', 'data', 'type', 'port', 'visually', 'create', 'want', 'set', 'color', 'port', 'base', 'data', 'type', 'helpful', 'doesnt', 'color', 'port', 'link', 'search', 'inside', 'subsytems', 'mask', 'subsystem', 'inside', 'link', 'workspace', 'workspace', 'exclude', 'find', 'systemget', 'paramportset']",0
1199,48381,"Interpolation method of SPS R2014b to allow larger time step while preserving model accuracy.<p>This example illustrates a DC-DC buck converter feeding an RC load from a 200 V source. The PWM frequency is set to 5 kHz and duty cycle varies between 0.1 and 0.8. With this 5 kHz PWM frequency, the sample time that would be required to get a 0.5 % resolution on duty cycle using a standard discretization method would be 1e-6 sec:          1 MHz sampling frequency = 200 x 5000 Hz  -&gt; resolution = 1/200 = 0.5 %In the solver tab of the powergui block the simulation type is set to Discrete, and the interpolation option is checked. The Simulation Data Inspector is enabled and the Vload signal is logged. The sample time has been initialized to 20e-6 s in the model properties.1) First perform a simulation with the interpolation in service, with Ts set to 20e-6. 2) In the powergui, uncheck the interpolation and specify Ts=1e-6 in the MATLAB command window. Perform a second simulation.3) In the powergui set the simulation type to Continuous and select Use of Ideal switching devices. Perform a third simulation.4) Open the Data inspector and compare the three simulation runs for the Vload signal. The voltage obtained during first two runs (interpolation with Ts=20e-6 s,  and no interpolation with Ts=1e-6 sec) should be close the continuous simulation result.5) Zoom on the signals and observe that the result obtained with the interpolation solver perfectly matches the result obtained with the continuous solver, and is even more accurate than the standard discrete solver.6) Compare simulation speeds of discrete models (interpolation with Ts=20e-6 sec and no interpolation with Ts=1e-6 sec).  Increase simulation stop time to 0.5 sec.  Run the simulations. The simulation time is displayed at the end of each simulation run in the Diagnostic Viewer. The speed increase obtained with the interpolation method is approximately 4X.About the interpolation option of the powergui block:---------------------------------------------------------------------Select this option to increase simulation speed by enabling the solver to interpolate in discrete models using power electronics. When this option is selected the solver capturesÂ gate transitionsÂ of power electronic devices occurring betweenÂ two sample times, thus allowing larger sample times (typically 20X) than you would normally use with the standard solvers.  For example, simulating a 5 kHz PWM converter with Tustin (no interpolation) or Tustin/Backward Euler would normally require a 1.0 usec sample time (sampling frequency = 200 x  PWM frequency) in order to obtain a good resolution on pulse generation and guarantee accurate results.  With the interpolation enabled, using a sample time as large as 20 usec will execute faster while preserving model accuracy. When you enable this option:Use a continuous pulse generator in order guarantee best accuracy on pulse generation (specify sample time = 0 in the pulse generator blocks). In Simulink Model Configuration Parameters select a continuous, variable step solver (ode45 or ode23tb with default settings). The continuous solver is required by the interpolation solver to compute the gate signals time delays with respect to discrete sample times. These pulse delays are used by the solver to interpolate between sample times and produce accurate results.</p>accuracy,dcdcconverter,interpolation,powergui,pwm,sampletime,electric_motor_control,power_conversion_control,power_electronics_control",22,0,1,0,20,interpolation method sps allow large time step preserve accuracy example illustrate buck converter feed load source pwm frequency set khz duty cycle varies khz pwm frequency sample time would require get resolution duty cycle standard discretization method would sec mhz sample frequency resolution solver tab powergui block type set discrete interpolation option check data inspector enable vload signal log sample time initialized property first perform interpolation service set powergui uncheck interpolation specify command window perform second powergui set type continuous select ideal switch device perform third open data inspector compare three run vload signal voltage obtain first two run interpolation interpolation sec close continuous result zoom signal observe result obtain interpolation solver perfectly match result obtain continuous solver even accurate standard discrete solver compare speed discrete interpolation sec interpolation sec increase stop time sec run time displayed end run diagnostic viewer speed increase obtain interpolation method approximately interpolation option powergui block select option increase speed enable solver interpolate discrete power electronics option select solver capture gate transition power electronic device occur two sample time thus allow large sample time typically would normally standard solver example khz pwm converter tustin interpolation tustin backward euler would normally require usec sample time sample frequency pwm frequency order obtain good resolution pulse generation guarantee accurate result interpolation enable sample time large usec execute faster preserve accuracy enable option continuous pulse generator order guarantee best accuracy pulse generation specify sample time pulse generator block configuration parameter select continuous variable step solver ode ode default setting continuous solver require interpolation solver compute gate signal time delay respect discrete sample time pulse delay solver interpolate sample time produce accurate result motor controlpower conversion controlpower electronics control,"['interpolation', 'method', 'sps', 'allow', 'large', 'time', 'step', 'preserve', 'accuracy', 'example', 'illustrate', 'buck', 'converter', 'feed', 'load', 'source', 'pwm', 'frequency', 'set', 'khz', 'duty', 'cycle', 'varies', 'khz', 'pwm', 'frequency', 'sample', 'time', 'would', 'require', 'get', 'resolution', 'duty', 'cycle', 'standard', 'discretization', 'method', 'would', 'sec', 'mhz', 'sample', 'frequency', 'resolution', 'solver', 'tab', 'powergui', 'block', 'type', 'set', 'discrete', 'interpolation', 'option', 'check', 'data', 'inspector', 'enable', 'vload', 'signal', 'log', 'sample', 'time', 'initialized', 'property', 'first', 'perform', 'interpolation', 'service', 'set', 'powergui', 'uncheck', 'interpolation', 'specify', 'command', 'window', 'perform', 'second', 'powergui', 'set', 'type', 'continuous', 'select', 'ideal', 'switch', 'device', 'perform', 'third', 'open', 'data', 'inspector', 'compare', 'three', 'run', 'vload', 'signal', 'voltage', 'obtain', 'first', 'two', 'run', 'interpolation', 'interpolation', 'sec', 'close', 'continuous', 'result', 'zoom', 'signal', 'observe', 'result', 'obtain', 'interpolation', 'solver', 'perfectly', 'match', 'result', 'obtain', 'continuous', 'solver', 'even', 'accurate', 'standard', 'discrete', 'solver', 'compare', 'speed', 'discrete', 'interpolation', 'sec', 'interpolation', 'sec', 'increase', 'stop', 'time', 'sec', 'run', 'time', 'displayed', 'end', 'run', 'diagnostic', 'viewer', 'speed', 'increase', 'obtain', 'interpolation', 'method', 'approximately', 'interpolation', 'option', 'powergui', 'block', 'select', 'option', 'increase', 'speed', 'enable', 'solver', 'interpolate', 'discrete', 'power', 'electronics', 'option', 'select', 'solver', 'capture', 'gate', 'transition', 'power', 'electronic', 'device', 'occur', 'two', 'sample', 'time', 'thus', 'allow', 'large', 'sample', 'time', 'typically', 'would', 'normally', 'standard', 'solver', 'example', 'khz', 'pwm', 'converter', 'tustin', 'interpolation', 'tustin', 'backward', 'euler', 'would', 'normally', 'require', 'usec', 'sample', 'time', 'sample', 'frequency', 'pwm', 'frequency', 'order', 'obtain', 'good', 'resolution', 'pulse', 'generation', 'guarantee', 'accurate', 'result', 'interpolation', 'enable', 'sample', 'time', 'large', 'usec', 'execute', 'faster', 'preserve', 'accuracy', 'enable', 'option', 'continuous', 'pulse', 'generator', 'order', 'guarantee', 'best', 'accuracy', 'pulse', 'generation', 'specify', 'sample', 'time', 'pulse', 'generator', 'block', 'configuration', 'parameter', 'select', 'continuous', 'variable', 'step', 'solver', 'ode', 'ode', 'default', 'setting', 'continuous', 'solver', 'require', 'interpolation', 'solver', 'compute', 'gate', 'signal', 'time', 'delay', 'respect', 'discrete', 'sample', 'time', 'pulse', 'delay', 'solver', 'interpolate', 'sample', 'time', 'produce', 'accurate', 'result', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",0
1200,48387,"2014 Paper solved<p>anewmultilevelinvertertopologyusing series-connected submultilevel inverters. The proposed multi- level inverter uses reduced number of switches. Initially, the proposed submultilevel inverter is described and then the series connection of them to form a multilevel inverter is discussed.</p>inverter,multilevelinverter,power electronics",58,1,2,0,59,paper series connect submultilevel inverter propose multi level inverter reduced number switch initially propose submultilevel inverter describe series connection form multilevel inverter discuss electronics,"['paper', 'series', 'connect', 'submultilevel', 'inverter', 'propose', 'multi', 'level', 'inverter', 'reduced', 'number', 'switch', 'initially', 'propose', 'submultilevel', 'inverter', 'describe', 'series', 'connection', 'form', 'multilevel', 'inverter', 'discuss', 'electronics']",3
1201,48390,"An angular velocity neuroestimator synthesized in the rotating reference frame is demonstrated.<p>This model illustrates the possibility to use a feedforward neural network (static neural network) to estimate (more precisely to approximate) mechanical speed of the asynchronous motor. The main challenge in such a task is to construct an effective approximation base. In <a href=""http://www.mathworks.com/matlabcentral/fileexchange/48012-speed-sensorless-induction-motor-drive"">http://www.mathworks.com/matlabcentral/fileexchange/48012-speed-sensorless-induction-motor-drive</a> 6 heuristic signals have been proposed. Here the very basic 4 signals, i.e. stator voltages and currents, span the approximation space. These 4 signals are observed in the flux-oriented rotating reference frame and thus one of the key objectives to keep them constant at a steady state is fulfilled.</p>ann,approximatio,artificial neural network,asynchronous motor drive,dsfoc,feedforward neural network,ffnn,field oriented control,foc,induction motor drive,neuroestimation,neuroestimator,rotating reference frame,sfoc,speed estimation,speedsensorless drive,electric_motor_control,power_electronics_control",293,23,4,0,342,angular velocity neuroestimator synthesize rotate reference frame demonstrate illustrates possibility feedforward neural network static neural network estimate precisely approximate mechanical speed asynchronous motor main challenge task construct effective approximation base http mathworks com matlabcentral fileexchange speed sensorless induction motor drive heuristic signal propose basic signal stator voltages current span approximation space signal observe flux orient rotate reference frame thus one key objectives keep constant steady state fulfil neural motor neural orient motor reference framesfocspeed driveelectric motor controlpower electronics control,"['angular', 'velocity', 'neuroestimator', 'synthesize', 'rotate', 'reference', 'frame', 'demonstrate', 'illustrates', 'possibility', 'feedforward', 'neural', 'network', 'static', 'neural', 'network', 'estimate', 'precisely', 'approximate', 'mechanical', 'speed', 'asynchronous', 'motor', 'main', 'challenge', 'task', 'construct', 'effective', 'approximation', 'base', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'speed', 'sensorless', 'induction', 'motor', 'drive', 'heuristic', 'signal', 'propose', 'basic', 'signal', 'stator', 'voltages', 'current', 'span', 'approximation', 'space', 'signal', 'observe', 'flux', 'orient', 'rotate', 'reference', 'frame', 'thus', 'one', 'key', 'objectives', 'keep', 'constant', 'steady', 'state', 'fulfil', 'neural', 'motor', 'neural', 'orient', 'motor', 'reference', 'framesfocspeed', 'driveelectric', 'motor', 'controlpower', 'electronics', 'control']",4
1202,48397,"simulink performed half wave rectifier<p>Half wave rectifier simulation that gives the  output voltage and current waveforms are obtained in simulink. If you open the simulation you will see 2 scope box, scope shows the input and output voltage together, scope1 shows the load current. if you want to obtain the graphs for calculating the rms and average values, you can use halfwave_Is and halfwave_Vo vectors.</p>power electronics,rectifier,simulink",13,0,1,0,16,perform half wave rectifierhalf wave rectifier give output voltage current waveform obtain open see scope box scope show input output voltage together scope show load current want obtain graphs calculate rms average value halfwave halfwave vector power,"['perform', 'half', 'wave', 'rectifierhalf', 'wave', 'rectifier', 'give', 'output', 'voltage', 'current', 'waveform', 'obtain', 'open', 'see', 'scope', 'box', 'scope', 'show', 'input', 'output', 'voltage', 'together', 'scope', 'show', 'load', 'current', 'want', 'obtain', 'graphs', 'calculate', 'rms', 'average', 'value', 'halfwave', 'halfwave', 'vector', 'power']",4
1203,48398,"Single phase rectifier<p>4 diode, bridge rectifier output voltage and current waveforms are obtained in simulink. If you open the simulation you will see 2 scope box, scope1 shows the input and output voltage together, scope2 shows the load current. if you want to obtain the graphs for calculating the rms and average values, you can use fullwave_Is and fullwave_Vo vectors.</p>power electronics,rectifier,simulink",17,0,1,0,16,single phase rectifier diode bridge rectifier output voltage current waveform obtain open see scope box scope show input output voltage together scope show load current want obtain graphs calculate rms average value fullwave fullwave vector power,"['single', 'phase', 'rectifier', 'diode', 'bridge', 'rectifier', 'output', 'voltage', 'current', 'waveform', 'obtain', 'open', 'see', 'scope', 'box', 'scope', 'show', 'input', 'output', 'voltage', 'together', 'scope', 'show', 'load', 'current', 'want', 'obtain', 'graphs', 'calculate', 'rms', 'average', 'value', 'fullwave', 'fullwave', 'vector', 'power']",3
1204,48399,"DC motor position<p>dc motor performance</p>electric_motor_control,power_conversion_control,power_electronics_control,control design,simulink",18,1,2,0,19,motor positiondc motor motor controlpower conversion controlpower electronics controlcontrol,"['motor', 'positiondc', 'motor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",6
1205,48402,Design and Create a natural shape zero pressure scientific balloon<p>Do you want to make your own zero pressure balloon?  Start here!  This code will allow you to specify inputs for a balloon mission and determine the correct balloon shape for your mission.  A stencil will be created to describe the shape of the gores to cut out.</p>gui,17,0,1,0,27,design create natural shape zero pressure scientific balloondo want make zero pressure balloon start code allow specify input balloon mission determine correct balloon shape mission stencil create describe shape gore cut gui,"['design', 'create', 'natural', 'shape', 'zero', 'pressure', 'scientific', 'balloondo', 'want', 'make', 'zero', 'pressure', 'balloon', 'start', 'code', 'allow', 'specify', 'input', 'balloon', 'mission', 'determine', 'correct', 'balloon', 'shape', 'mission', 'stencil', 'create', 'describe', 'shape', 'gore', 'cut', 'gui']",5
1206,48430,"12 Pulse rectifier consists of 12 diode, 3 phase supply. 3 phase supply is converted into DC supply.<p>12 Pulse rectifier consists of 12 diode, 3 phase supply. 3 phase supply is converted into DC supply.In a 12 Pulse rectifier 3phase supply is given two delta to star and delta transformer connected to two 3 phase bridges converting 3 phase AC to DC .</p>power_conversion_control,power_electronics_control,gui,power electronics,simulation",23,0,1,0,28,pulse rectifier consist diode phase supply phase supply convert supply pulse rectifier consist diode phase supply phase supply convert supply pulse rectifier phase supply give two delta star delta transformer connect two phase bridge convert phase power conversion controlpower electronics controlguipower,"['pulse', 'rectifier', 'consist', 'diode', 'phase', 'supply', 'phase', 'supply', 'convert', 'supply', 'pulse', 'rectifier', 'consist', 'diode', 'phase', 'supply', 'phase', 'supply', 'convert', 'supply', 'pulse', 'rectifier', 'phase', 'supply', 'give', 'two', 'delta', 'star', 'delta', 'transformer', 'connect', 'two', 'phase', 'bridge', 'convert', 'phase', 'power', 'conversion', 'controlpower', 'electronics', 'controlguipower']",1
1207,48431,"24 Pulse rectifier consists of 24 diode, 3 phase supply. 3 phase supply is converted into DC supply.<p>24 Pulse rectifier consists of 24 diode, 3 phase supply. 3 phase supply is converted into DC supply.In a 24 Pulse rectifier 3phase supply is given two delta to star and delta transformer connected to two 3 phase bridges converting 3 phase AC to DC .</p>power_conversion_control,power_electronics_control,gui,power electronics,simulink",38,0,1,0,48,pulse rectifier consist diode phase supply phase supply convert supply pulse rectifier consist diode phase supply phase supply convert supply pulse rectifier phase supply give two delta star delta transformer connect two phase bridge convert phase power conversion controlpower electronics controlguipower,"['pulse', 'rectifier', 'consist', 'diode', 'phase', 'supply', 'phase', 'supply', 'convert', 'supply', 'pulse', 'rectifier', 'consist', 'diode', 'phase', 'supply', 'phase', 'supply', 'convert', 'supply', 'pulse', 'rectifier', 'phase', 'supply', 'give', 'two', 'delta', 'star', 'delta', 'transformer', 'connect', 'two', 'phase', 'bridge', 'convert', 'phase', 'power', 'conversion', 'controlpower', 'electronics', 'controlguipower']",1
1208,48434,"Les fichiers du Webinar: Enseigner les sciences de l'ingÃ©nieur avec MATLAB Simulink (Ivan LIEBGOTT)<p>L'ensemble des fichiers qui ont servi Ã  la rÃ©alisation du webinar sont disponibles dans ce tÃ©lÃ©chargement.</p>ivan,matlab,simulink",104,1,1,0,100,fichiers webinar enseigner science ingÃ©nieur avec ivan liebgott ensemble fichiers qui ont servi rÃ©alisation webinar sont disponibles dans tÃ©lÃ©chargement,"['fichiers', 'webinar', 'enseigner', 'science', 'ingÃ©nieur', 'avec', 'ivan', 'liebgott', 'ensemble', 'fichiers', 'qui', 'ont', 'servi', 'rÃ©alisation', 'webinar', 'sont', 'disponibles', 'dans', 'tÃ©lÃ©chargement']",8
1209,48446,"IEEE 30 Bus System<p>IEEE 30 Bus System</p>30 bus,ieee 30 bus,ieee bus,simulink",325,5,3,0,695,iee bus systemiee bus busiee busiee,"['iee', 'bus', 'systemiee', 'bus', 'busiee', 'busiee']",5
1210,48447,"3-phase inverter circuit with star connected load.<p>Three phase inverters are normally used for high power applications. The advantages of a three phase inverter are:â¢ The frequency of the output voltage waveform depends on the switching rate of the switches and hence can be varied over a wide range.â¢ The direction of rotation of the motor can be reversed by changing the output phase sequence of the inverter.â¢ The ac output voltage can be controlled by varying the dc link voltage.Two types of control signals can be applied to the switches:â¢ 180Â° conductionâ¢ 120Â° conductionIn 180 degree mode each SCR has a duration of 180Â°. The SCRs of same arm operate in a complementary manner i.e with a time interval of 180Â° whereas the inverter arms are operated at a 120Â° phase difference.</p>electric_motor_control,power_conversion_control,power_electronics_control,180,degree,inverter,matlab,power electronics,power system,simulation,simulink,three phase",26,0,1,0,28,phase inverter circuit star connect load three phase inverter normally high power application advantage three phase inverter frequency output voltage waveform depend switch rate switch hence vary wide range direction rotation motor reverse change output phase sequence inverter output voltage control vary link voltage two type control signal apply switch conduction conductionin degree mode scr duration scrs arm operate complementary manner time interval whereas inverter arm operate phase difference electric motor controlpower conversion controlpower electronics control phase,"['phase', 'inverter', 'circuit', 'star', 'connect', 'load', 'three', 'phase', 'inverter', 'normally', 'high', 'power', 'application', 'advantage', 'three', 'phase', 'inverter', 'frequency', 'output', 'voltage', 'waveform', 'depend', 'switch', 'rate', 'switch', 'hence', 'vary', 'wide', 'range', 'direction', 'rotation', 'motor', 'reverse', 'change', 'output', 'phase', 'sequence', 'inverter', 'output', 'voltage', 'control', 'vary', 'link', 'voltage', 'two', 'type', 'control', 'signal', 'apply', 'switch', 'conduction', 'conductionin', 'degree', 'mode', 'scr', 'duration', 'scrs', 'arm', 'operate', 'complementary', 'manner', 'time', 'interval', 'whereas', 'inverter', 'arm', 'operate', 'phase', 'difference', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'phase']",3
1211,48450,"buck boost converter<p>set input and output values.duty cycle automatically calculated and applied to pulse generator</p>simulink,dcdc converter,zeta,zeta converter",33,1,2,0,44,buck boost converterset input output value duty cycle automatically calculate applied pulse converter,"['buck', 'boost', 'converterset', 'input', 'output', 'value', 'duty', 'cycle', 'automatically', 'calculate', 'applied', 'pulse', 'converter']",3
1212,48459,"Extremum seeking control (ESC) is another alternate for peak power seeking applications<p>In this simulation a new MPPT approach called ""Extremum Seeking Control (ESC)"" has been simulated and the ability of this algorithm in finding the peak power point of a PV panel has been tested. According to various researchers, a well tuned ESC has a better efficiency compared to other MPPT algorithms like P&amp;O or IC. This simulation needs c-compiler (to setup a c-compiler in your matlab use mex -setup).</p>extremum seeking control,maximum power point tracking,mppt,photovoltaic,power_conversion_control,power_electronics_control",25,0,1,0,27,extremum seek control esc another alternate peak power seek applicationsin new mppt approach call extremum seek control esc ability algorithm find peak power point panel test accord various researcher well tune esc good efficiency compare mppt algorithm like amp need compiler setup compiler mex setup extremum seek controlmaximum power point conversion controlpower electronics control,"['extremum', 'seek', 'control', 'esc', 'another', 'alternate', 'peak', 'power', 'seek', 'applicationsin', 'new', 'mppt', 'approach', 'call', 'extremum', 'seek', 'control', 'esc', 'ability', 'algorithm', 'find', 'peak', 'power', 'point', 'panel', 'test', 'accord', 'various', 'researcher', 'well', 'tune', 'esc', 'good', 'efficiency', 'compare', 'mppt', 'algorithm', 'like', 'amp', 'need', 'compiler', 'setup', 'compiler', 'mex', 'setup', 'extremum', 'seek', 'controlmaximum', 'power', 'point', 'conversion', 'controlpower', 'electronics', 'control']",4
1213,48497,UPQU harmonic distortion<p>UPQU harmonic distortion</p>simulink,58,2,2,0,77,upqu harmonic distortionupqu harmonic,"['upqu', 'harmonic', 'distortionupqu', 'harmonic']",5
1214,48544,"DC-to-DC Step-down Buck Converter and short report containing stress test information is included.<p>This report introduced design process of the DC-to-DC step-down converter. In the report analytical solution of the problem, design process, simulation details, stress tests and experiments were discussed.  As it can be seen from the results of the experiments, controller fulfill given tasks and shows good results for given specifications. In addition, controller and the circuit is able to perform under extreme and dynamic conditions, i.e. when the power increased dramatically or reference changed. Moreover, some additions such as ramp reference voltage introduced in order to avoid overshooting. Finally, I feel very happy with obtained results.</p>power_conversion_control,power_electronics_control,buck,dc,power electronics",35,0,1,0,48,step buck converter short report contain stress test information include report introduce design process step converter report analytical solution problem design process detail stress test experiment discuss see result experiment controller fulfill give task show good result give specification addition controller circuit able perform extreme dynamic condition power increase dramatically reference change moreover addition ramp reference voltage introduce order avoid overshoot finally feel happy obtain result power conversion controlpower electronics electronics,"['step', 'buck', 'converter', 'short', 'report', 'contain', 'stress', 'test', 'information', 'include', 'report', 'introduce', 'design', 'process', 'step', 'converter', 'report', 'analytical', 'solution', 'problem', 'design', 'process', 'detail', 'stress', 'test', 'experiment', 'discuss', 'see', 'result', 'experiment', 'controller', 'fulfill', 'give', 'task', 'show', 'good', 'result', 'give', 'specification', 'addition', 'controller', 'circuit', 'able', 'perform', 'extreme', 'dynamic', 'condition', 'power', 'increase', 'dramatically', 'reference', 'change', 'moreover', 'addition', 'ramp', 'reference', 'voltage', 'introduce', 'order', 'avoid', 'overshoot', 'finally', 'feel', 'happy', 'obtain', 'result', 'power', 'conversion', 'controlpower', 'electronics', 'electronics']",4
1215,48575,"This model shows two methods of converting single precision data to unsigned integer equivalents<p>This model illustrates two methods of converting single precision floating point numbers to equivalent unsigned 32 bit word and 8bit (four byte) data structures and back.The main purpose is to provide a few different methods of handling this type of conversion and bit level operations in Simulink (and not as a comprehensive guide or solution to a specific problem).</p>conversion,ieee754,simulink,single,uint32",79,3,3,0,91,show two method convert single precision data unsigned integer equivalentsthis illustrate two method convert single precision float point number equivalent unsigned bit word bit four byte data structure back main purpose provide different method handle type conversion bit level operation comprehensive guide solution specific problem conversioniee,"['show', 'two', 'method', 'convert', 'single', 'precision', 'data', 'unsigned', 'integer', 'equivalentsthis', 'illustrate', 'two', 'method', 'convert', 'single', 'precision', 'float', 'point', 'number', 'equivalent', 'unsigned', 'bit', 'word', 'bit', 'four', 'byte', 'data', 'structure', 'back', 'main', 'purpose', 'provide', 'different', 'method', 'handle', 'type', 'conversion', 'bit', 'level', 'operation', 'comprehensive', 'guide', 'solution', 'specific', 'problem', 'conversioniee']",0
1216,48627,"A Simulink model file to simulate a 1kHz Sinusoidal Oscillator. Amplitude is fixed as +-10V.<p>The Simulink model file containing the model of a 1kHz Sinusoidal Oscillator, with amplitude +-10V.</p>matlab,oscillator,simulink",5,0,1,0,4,file khz sinusoidal oscillator amplitude fix file contain khz sinusoidal oscillator amplitude,"['file', 'khz', 'sinusoidal', 'oscillator', 'amplitude', 'fix', 'file', 'contain', 'khz', 'sinusoidal', 'oscillator', 'amplitude']",0
1217,48700,"Trackable Location from Optitrack Trackin Tools to Simulink<p>Trackable Location from Optitrack Trackin Tools to Simulinkthis file was inspired by Glen Lichtwark submission Tracking Tools (Optitrack)<a href=""http://www.mathworks.com/matlabcentral/fileexchange/26449-tracking-tools--optitrack-by"">http://www.mathworks.com/matlabcentral/fileexchange/26449-tracking-tools--optitrack-by</a> Or Hirshfeld×××¨ ×××¨×©×¤××<a href=""http://il.linkedin.com/pub/or-hirshfeld/4b/79/577"">http://il.linkedin.com/pub/or-hirshfeld/4b/79/577</a></p>hirshfeld,mocp,optitrack,or,simulink,technion,tracking tools",5,0,1,0,9,trackable location optitrack trackin tool location optitrack trackin tool file inspire glen lichtwark submission tracking tool optitrack http mathworks com matlabcentral fileexchange tracking tool optitrack hirshfeld×××¨ ×××¨×©×¤××http linkedin com pub hirshfeld tool,"['trackable', 'location', 'optitrack', 'trackin', 'tool', 'location', 'optitrack', 'trackin', 'tool', 'file', 'inspire', 'glen', 'lichtwark', 'submission', 'tracking', 'tool', 'optitrack', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'tracking', 'tool', 'optitrack', 'hirshfeld×××¨', '×××¨×©×¤××http', 'linkedin', 'com', 'pub', 'hirshfeld', 'tool']",0
1218,48718,"solar PV Cell 1 KW<p>solar PV Cell simulink 1 KW</p>simulink,aaa",253,6,2,0,247,solar cell kwsolar cell,"['solar', 'cell', 'kwsolar', 'cell']",4
1219,48719,Solar PV Cell 3 Kw<p>solar PV Cell 3 KW</p>simulink,413,10,2,0,396,solar cell kwsolar cell,"['solar', 'cell', 'kwsolar', 'cell']",4
1220,48739,SIMULINK<p>Ð ÐÐ¨ÐÐÐÐ ÐÐÐÐÐ§Ð ÐÐÐ Ð¢ÐÐÐ ÐÐÐ ÐÐÐÐ Ð Ð ÐÐÐÐÐ¡ÐÐ¥ÐÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½ Simulink</p>simulation,37,0,1,0,54,Ð·Ð°Ð´Ð°ÑÐ¸,['Ð·Ð°Ð´Ð°ÑÐ¸'],2
1221,48747,"Smart Grid<p>Smart Grid PV Cell Fuel Cell and Battery</p>battery_system_management,power_electronics_control,simulation",385,17,4,0,407,smart gridsmart grid cell fuel cell batterybattery managementpower electronics,"['smart', 'gridsmart', 'grid', 'cell', 'fuel', 'cell', 'batterybattery', 'managementpower', 'electronics']",4
1222,48791,"The very basic repetitive compensator with forgetting is implemented in a position control system.<p>This model illustrates the repetitive control concept. A servo drive system is selected as the case study. It should be noted that the very basic repetitive compensator introduces integration in the pass to pass direction. Such an approach is not robust. You just cannot do that in a physical control system. To observe possible consequences of doing that please set the forgetting factor gamma=0. The most simple, yet not the most effective, way to robustify the scheme is to use 0</p>ilc,imp,internal model principle,iterative learning control,modulus optimum method,motion control,rc,repetitive compensator,repetitve control,robust control,robust controller,robust repetitive control,servo drive,servo drive system,symmetrical optimum met",42,0,1,0,58,basic repetitive compensator forget implemented position control illustrate repetitive control concept servo drive select case study note basic repetitive compensator introduces integration pas pas direction approach robust physical control observe possible consequence please set forgetting factor gamma simple yet effective way robustify scheme ilcimpinternal learning controlmodulus optimum methodmotion controlrobust controlrobust repetitive controlservo driveservo drive optimum meet,"['basic', 'repetitive', 'compensator', 'forget', 'implemented', 'position', 'control', 'illustrate', 'repetitive', 'control', 'concept', 'servo', 'drive', 'select', 'case', 'study', 'note', 'basic', 'repetitive', 'compensator', 'introduces', 'integration', 'pas', 'pas', 'direction', 'approach', 'robust', 'physical', 'control', 'observe', 'possible', 'consequence', 'please', 'set', 'forgetting', 'factor', 'gamma', 'simple', 'yet', 'effective', 'way', 'robustify', 'scheme', 'ilcimpinternal', 'learning', 'controlmodulus', 'optimum', 'methodmotion', 'controlrobust', 'controlrobust', 'repetitive', 'controlservo', 'driveservo', 'drive', 'optimum', 'meet']",5
1223,48800,"The simulations of the lumped-parameter model in this study for seated human.<p>Biodynamics of seated human subjects has been a topic of interest over the years, and a number of mathematical models have been established.  While much research has been performed on building up speciï¬c biodynamic models based on certain  experimental data under prescribed testing conditions, a thorough investigation of mathematical human models in seated posture has not yet received the same level of attention.</p>simulink",14,2,2,0,15,lump parameter study seat human biodynamics seat human subject topic interest year number mathematical establish much research perform building speciï¬c biodynamic base certain experimental data prescribe test condition thorough investigation mathematical human seat posture yet receive level attention,"['lump', 'parameter', 'study', 'seat', 'human', 'biodynamics', 'seat', 'human', 'subject', 'topic', 'interest', 'year', 'number', 'mathematical', 'establish', 'much', 'research', 'perform', 'building', 'speciï¬c', 'biodynamic', 'base', 'certain', 'experimental', 'data', 'prescribe', 'test', 'condition', 'thorough', 'investigation', 'mathematical', 'human', 'seat', 'posture', 'yet', 'receive', 'level', 'attention']",5
1224,48801,A study on the biodynamic models of seated human.<p>A complete study on lumped-parameter models for seated human subjects without backrest support under vertical vibration excitation has been carried out.</p>simulink,52,2,2,0,51,study biodynamic seat human complete study lump parameter seat human subject without backrest support vertical vibration excitation carry,"['study', 'biodynamic', 'seat', 'human', 'complete', 'study', 'lump', 'parameter', 'seat', 'human', 'subject', 'without', 'backrest', 'support', 'vertical', 'vibration', 'excitation', 'carry']",5
1225,48802,body vibration under low-frequency excitation in seated posture<p>The lumped-parameter models from literature have been analyzed and validated.</p>simulink,37,2,2,0,41,body vibration low frequency excitation seat posturethe lump parameter literature analyze validated,"['body', 'vibration', 'low', 'frequency', 'excitation', 'seat', 'posturethe', 'lump', 'parameter', 'literature', 'analyze', 'validated']",5
1226,48803,body vibration<p>The lumped-parameter models from literature have been analyzed and validated.</p>simulink,73,5,2,0,100,body vibrationthe lump parameter literature analyze validated,"['body', 'vibrationthe', 'lump', 'parameter', 'literature', 'analyze', 'validated']",8
1227,48805,Body vibrations<p>The lumped-parameter models from literature have been analyzed and validated.</p>simulink,49,3,2,0,66,body vibrationsthe lump parameter literature analyze validated,"['body', 'vibrationsthe', 'lump', 'parameter', 'literature', 'analyze', 'validated']",8
1228,48806,body vibrations<p>The lumped-parameter models from literature have been analyzed and validated.</p>simulink,160,11,2,0,202,body vibrationsthe lump parameter literature analyze validated,"['body', 'vibrationsthe', 'lump', 'parameter', 'literature', 'analyze', 'validated']",8
1229,48822,"The DOP-capable PSO is employed to estimate and then track asynchronous motor selected parameters.<p>This is a demonstration of the concept of gradient-free parameter identification in repetitive processes introduced in one of my previous models (<a href=""http://www.mathworks.com/matlabcentral/fileexchange/47893-gradient-free-parameter-identification-in-repetitive-processes"">www.mathworks.com/matlabcentral/fileexchange/47893-gradient-free-parameter-identification-in-repetitive-processes</a>). It is highly recommended to make yourself familiar with ""Gradient-free parameter identification in repetitive processes"" prior to playing with this submission. Please feel free to contact me in case of any questions related to my models.</p>dop,dynamic optimization problem,epetitive process,ilc,induction,iterative learning control,nonstationary process,parameter estimation,parameter identification,parameter tracking,particle swarm optimization,pso,repetitive control,update without evaluation,electric_motor_control,power_electronics_control",159,6,3,0,222,dop capable pso employ estimate track asynchronous motor select parameter demonstration concept gradient free parameter identification repetitive process introduce one previous mathworks com matlabcentral fileexchange gradient free parameter identification repetitive process highly recommended make familiar gradient free parameter identification repetitive process prior play submission please feel free contact case question relate dopdynamic optimization learn swarm controlupdate without motor controlpower electronics control,"['dop', 'capable', 'pso', 'employ', 'estimate', 'track', 'asynchronous', 'motor', 'select', 'parameter', 'demonstration', 'concept', 'gradient', 'free', 'parameter', 'identification', 'repetitive', 'process', 'introduce', 'one', 'previous', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'gradient', 'free', 'parameter', 'identification', 'repetitive', 'process', 'highly', 'recommended', 'make', 'familiar', 'gradient', 'free', 'parameter', 'identification', 'repetitive', 'process', 'prior', 'play', 'submission', 'please', 'feel', 'free', 'contact', 'case', 'question', 'relate', 'dopdynamic', 'optimization', 'learn', 'swarm', 'controlupdate', 'without', 'motor', 'controlpower', 'electronics', 'control']",0
1230,48858,"A set of Simulink blocks to explore Design Verifier in Flight Controls<p>This is a collection of Simulink models which can be used to explore Simulink Design Verifier. The blocks are commonly used in flight control laws. The verification utilities of SDV prove the correctness of implementation. The requirements for the blocks is given as a PDF file. Some of the blocks have mutations introduced to show the working of SDV.</p>algorithm,control,mathematics,modeling,simulink,toolbox",1284,60,3,0,1451,set block explore design verifier flight controlsthis collection explore design verifier block commonly flight control law verification utility sdv prove correctness implementation requirement block give pdf file block mutation introduce show work sdv,"['set', 'block', 'explore', 'design', 'verifier', 'flight', 'controlsthis', 'collection', 'explore', 'design', 'verifier', 'block', 'commonly', 'flight', 'control', 'law', 'verification', 'utility', 'sdv', 'prove', 'correctness', 'implementation', 'requirement', 'block', 'give', 'pdf', 'file', 'block', 'mutation', 'introduce', 'show', 'work', 'sdv']",0
1231,48871,"Matlab files for Feedback Control of Dynamic Systems, 7th Edition, Pearson, 2015<p>Matlab files to create the figures in Feedback Control of Dynamic Systems, 7th Edition, Pearson, 2015, by G. F. Franklin, J. D. Powell, A. Emami-Naeini</p>control design",77,0,1,0,91,file feedback control dynamic edition pearson file create figure feedback control dynamic edition pearson franklin powell emami naeinicontrol design,"['file', 'feedback', 'control', 'dynamic', 'edition', 'pearson', 'file', 'create', 'figure', 'feedback', 'control', 'dynamic', 'edition', 'pearson', 'franklin', 'powell', 'emami', 'naeinicontrol', 'design']",0
1232,48882,"boost-buck cascaded converter is used to improve efficiency of system<p>harmonic content can be improve by some modification</p>power_conversion_control,power_electronics_control,simulation",189,10,3,0,248,boost buck cascade converter improve efficiency systemharmonic content improve conversion controlpower electronics,"['boost', 'buck', 'cascade', 'converter', 'improve', 'efficiency', 'systemharmonic', 'content', 'improve', 'conversion', 'controlpower', 'electronics']",1
1233,48899,"Some basic techniques such as linear regression and recursive least squares filter are presented.<p>Why not the first-order lag element with difference quotient calculator connected in series? Please run diff_noise.slx and see for yourself. The comparison includes, inter alia, two techniques based on the recursive least squares (RLS) filter algorithm.</p>adaptive differentiator,adjustable differentiator,difference quotient,differentiation,differentiator,finite impulse response,finite impulse response filter,fir,fir filter,linear regression,noise,noisy signal,predictive differentiator,recursive least squar",81,4,2,0,100,basic technique linear regression recursive least square filter present first order lag element difference quotient calculator connect series please run diff noise slx see comparison include inter alia two technique base recursive least square rls filter algorithm adaptive impulse responsefinite impulse response filterfirfir filterlinear least squar,"['basic', 'technique', 'linear', 'regression', 'recursive', 'least', 'square', 'filter', 'present', 'first', 'order', 'lag', 'element', 'difference', 'quotient', 'calculator', 'connect', 'series', 'please', 'run', 'diff', 'noise', 'slx', 'see', 'comparison', 'include', 'inter', 'alia', 'two', 'technique', 'base', 'recursive', 'least', 'square', 'rls', 'filter', 'algorithm', 'adaptive', 'impulse', 'responsefinite', 'impulse', 'response', 'filterfirfir', 'filterlinear', 'least', 'squar']",5
1234,48920,"Variable Frequency Tranformer<p>Variable Frequency Transformer (VFT) is a controllable bi-directional transmission device that can transfer power between asynchronous networks. It avoids both HVDC link and FACTS based power transmission control system. Basically, it is a rotatory transformer whose torque is adjusted in order to control the power flow. In this paper, a simulated model of VFT is used as a controllable bidirectional power transmission device that can control power flow through the connected asynchronous power systems.</p>asynchronous power system,phase shifting transformer,power flow,power flow control,variable frequency,vft,vfts",56,0,1,0,74,variable frequency frequency transformer vft controllable directional transmission device transfer power asynchronous network avoids hvdc link fact base power transmission control basically rotatory transformer whose torque adjust order control power flow paper vft controllable bidirectional power transmission device control power flow connect asynchronous power asynchronous power systemphase shift flowpower flow controlvariable,"['variable', 'frequency', 'frequency', 'transformer', 'vft', 'controllable', 'directional', 'transmission', 'device', 'transfer', 'power', 'asynchronous', 'network', 'avoids', 'hvdc', 'link', 'fact', 'base', 'power', 'transmission', 'control', 'basically', 'rotatory', 'transformer', 'whose', 'torque', 'adjust', 'order', 'control', 'power', 'flow', 'paper', 'vft', 'controllable', 'bidirectional', 'power', 'transmission', 'device', 'control', 'power', 'flow', 'connect', 'asynchronous', 'power', 'asynchronous', 'power', 'systemphase', 'shift', 'flowpower', 'flow', 'controlvariable']",4
1235,48921,"Inrush Current At Power Transfomer<p>When a transfomer is first energized, a transient current up to 10 to 15 times larger than the rated transformer current can flow for several cycles. Toroidal transformers, using less copper for the same power handling, can have up to 60 times inrush to running current. Worst case inrush happens when the primary winding is connected at an instant around the zero-crossing of the primary voltage, (which for a pure inductance would be the current maximum in the AC cycle) and if the polarity of the voltage half cycle has the same polarity as the remnance in the iron core has. (The magnetic remanence was left high from a preceding half cycle). Unless the windings and core are sized to normally never exceed 50% of saturation, (and in an efficient transformer they never are, such a construction would be overly heavy and inefficient) then during such a start up the core will be saturated. This can also be expressed as the remnant magnetism in normal operation is nearly as high as the saturation magnetism at the ""knee"" of the hysteresis loop. Once the core saturates however, the winding inductance appears greatly reduced, and only the resistance of the primary side windings and the impedance of the power line are limiting the current. As saturation occurs for part half cycles only, harmonic rich waveforms can be generated, and can cause problems to other equipment.For large transformers with low winding resistance and high inductance, these inrush currents can last for several seconds until the transient has died away (decay time proportional to ~XL/R)and the regular AC equilibrium is established. To avoid magnetic inrush, only for transformers with an air gap in the core, the inductive load needs to be synchronously connected near a supply voltage peak, in contrast with the zero voltage switching which is desirable to minimize sharp edged current transients with resistive loads such as high power heaters. But for toroidal transformers only a premagnetising procedure before switching on allows to start those transformers without any inrush current peak.</p>inrush_current,simulation,simulink",16,0,1,0,24,inrush current power transfomerwhen transfomer first energize transient current time large rat transformer current flow several cycle toroidal transformer less copper power handle time inrush run current bad case inrush happen primary wind connect instant around zero cross primary voltage pure inductance would current maximum cycle polarity voltage half cycle polarity remnance iron core magnetic remanence leave high precede half cycle unless winding core size normally never exceed saturation efficient transformer never construction would overly heavy inefficient start core saturate also express remnant magnetism normal operation nearly high saturation magnetism knee hysteresis loop core saturate however winding inductance appear greatly reduce resistance primary side winding impedance power line limit current saturation occurs part half cycle harmonic rich waveform generate cause problem equipment large transformer low wind resistance high inductance inrush current last several second transient die away decay time proportional regular equilibrium establish avoid magnetic inrush transformer air gap core inductive load need synchronously connect near supply voltage peak contrast zero voltage switch desirable minimize sharp edged current transient resistive load high power heater toroidal transformer premagnetising procedure switch allows start transformer without inrush current peak inrush,"['inrush', 'current', 'power', 'transfomerwhen', 'transfomer', 'first', 'energize', 'transient', 'current', 'time', 'large', 'rat', 'transformer', 'current', 'flow', 'several', 'cycle', 'toroidal', 'transformer', 'less', 'copper', 'power', 'handle', 'time', 'inrush', 'run', 'current', 'bad', 'case', 'inrush', 'happen', 'primary', 'wind', 'connect', 'instant', 'around', 'zero', 'cross', 'primary', 'voltage', 'pure', 'inductance', 'would', 'current', 'maximum', 'cycle', 'polarity', 'voltage', 'half', 'cycle', 'polarity', 'remnance', 'iron', 'core', 'magnetic', 'remanence', 'leave', 'high', 'precede', 'half', 'cycle', 'unless', 'winding', 'core', 'size', 'normally', 'never', 'exceed', 'saturation', 'efficient', 'transformer', 'never', 'construction', 'would', 'overly', 'heavy', 'inefficient', 'start', 'core', 'saturate', 'also', 'express', 'remnant', 'magnetism', 'normal', 'operation', 'nearly', 'high', 'saturation', 'magnetism', 'knee', 'hysteresis', 'loop', 'core', 'saturate', 'however', 'winding', 'inductance', 'appear', 'greatly', 'reduce', 'resistance', 'primary', 'side', 'winding', 'impedance', 'power', 'line', 'limit', 'current', 'saturation', 'occurs', 'part', 'half', 'cycle', 'harmonic', 'rich', 'waveform', 'generate', 'cause', 'problem', 'equipment', 'large', 'transformer', 'low', 'wind', 'resistance', 'high', 'inductance', 'inrush', 'current', 'last', 'several', 'second', 'transient', 'die', 'away', 'decay', 'time', 'proportional', 'regular', 'equilibrium', 'establish', 'avoid', 'magnetic', 'inrush', 'transformer', 'air', 'gap', 'core', 'inductive', 'load', 'need', 'synchronously', 'connect', 'near', 'supply', 'voltage', 'peak', 'contrast', 'zero', 'voltage', 'switch', 'desirable', 'minimize', 'sharp', 'edged', 'current', 'transient', 'resistive', 'load', 'high', 'power', 'heater', 'toroidal', 'transformer', 'premagnetising', 'procedure', 'switch', 'allows', 'start', 'transformer', 'without', 'inrush', 'current', 'peak', 'inrush']",5
1236,48922,"Inrush Current At Power Transformer<p>Sympathetic inrush current phenomenon occurs when a transformer is switched on in a power system network containing other transformers which are already energized.</p>inrush current,simulation,simulink",14,0,1,0,29,inrush current power inrush current phenomenon occur transformer switch power network contain transformer already energize inrush,"['inrush', 'current', 'power', 'inrush', 'current', 'phenomenon', 'occur', 'transformer', 'switch', 'power', 'network', 'contain', 'transformer', 'already', 'energize', 'inrush']",4
1237,48967,"A real-time implementation of the multi-swarm repetitive control algorithm is presented.<p>An on-line optimization of a control signal usually requires significant computational power. However, for some optimization techniques it is possible to distribute relevant calculations in time. This submission demonstrates that the previously developed plug-in direct particle swarm (or multi-swarm) repetitive controller (PDPSRC or PDMSRC) can be implemented in an industrial microcontroller such as TMS320F2812 assuming only 64K words of external memory (as in TMS320F2812 eZdsp Starter Kit (DSK) -- socketed version). You do not need this starter kit nor a physical converter to run the code. The C-code is included as an S-Function and the PLECS Viewer (available free of charge at <a href=""http://www.plexim.com"">www.plexim.com</a>) is employed to model the plant. Please remember to compile it, i.e. prior to running the model go to S-Function block and click Build. This code has been successfully executed on the above-mentioned DSC for 10 kHz sampling period. No code optimization, such as list based evolutionary optimization, is necessary -- standard rand() is used. Computational burden of the algorithm does not grow with increasing number of subswarms. Here the 10-swarm control algorithm is presented. For more information please see <a href=""http://dx.doi.org/10.1007/978-3-319-11313-5_44"">http://dx.doi.org/10.1007/978-3-319-11313-5_44</a> and <a href=""http://dx.doi.org/10.1007/978-3-319-11310-4_15"">http://dx.doi.org/10.1007/978-3-319-11310-4_15</a> and <a href=""http://dx.doi.org/10.1515/bpasts-2015-0098"">http://dx.doi.org/10.1515/bpasts-2015-0098</a> (December 2015) or visit <a href=""http://ufnalski.edu.pl/proceedings/is2014/"">http://ufnalski.edu.pl/proceedings/is2014/</a> .</p>digital signal controller,distributed calculations,iterative learning control,particle swarm optimization,pdmsrc,pdpsrc,real time implementation,real time optimization,repetitive control,tms320f2812,power_conversion_control,power_electronics_control",78,4,2,0,90,real time implementation multi swarm repetitive control algorithm present line optimization control signal usually require significant computational power however optimization technique possible distribute relevant calculation time submission demonstrate previously develop plug direct particle swarm multi swarm repetitive controller pdpsrc pdmsrc implement industrial microcontroller assume word external memory ezdsp starter kit dsk socketed version need starter kit physical converter run code code include function plecs viewer available free charge plexim com employ plant please remember compile prior run function block click build code successfully execute mention dsc khz sample period code optimization list base evolutionary optimization necessary standard rand computational burden algorithm grow increase number subswarms swarm control algorithm present information please see http doi org http doi org http doi org bpasts december visit http ufnalski edu proceeding digital signal learning controlparticle swarm time time controltms power conversion controlpower electronics control,"['real', 'time', 'implementation', 'multi', 'swarm', 'repetitive', 'control', 'algorithm', 'present', 'line', 'optimization', 'control', 'signal', 'usually', 'require', 'significant', 'computational', 'power', 'however', 'optimization', 'technique', 'possible', 'distribute', 'relevant', 'calculation', 'time', 'submission', 'demonstrate', 'previously', 'develop', 'plug', 'direct', 'particle', 'swarm', 'multi', 'swarm', 'repetitive', 'controller', 'pdpsrc', 'pdmsrc', 'implement', 'industrial', 'microcontroller', 'assume', 'word', 'external', 'memory', 'ezdsp', 'starter', 'kit', 'dsk', 'socketed', 'version', 'need', 'starter', 'kit', 'physical', 'converter', 'run', 'code', 'code', 'include', 'function', 'plecs', 'viewer', 'available', 'free', 'charge', 'plexim', 'com', 'employ', 'plant', 'please', 'remember', 'compile', 'prior', 'run', 'function', 'block', 'click', 'build', 'code', 'successfully', 'execute', 'mention', 'dsc', 'khz', 'sample', 'period', 'code', 'optimization', 'list', 'base', 'evolutionary', 'optimization', 'necessary', 'standard', 'rand', 'computational', 'burden', 'algorithm', 'grow', 'increase', 'number', 'subswarms', 'swarm', 'control', 'algorithm', 'present', 'information', 'please', 'see', 'http', 'doi', 'org', 'http', 'doi', 'org', 'http', 'doi', 'org', 'bpasts', 'december', 'visit', 'http', 'ufnalski', 'edu', 'proceeding', 'digital', 'signal', 'learning', 'controlparticle', 'swarm', 'time', 'time', 'controltms', 'power', 'conversion', 'controlpower', 'electronics', 'control']",0
1238,48985,"Simscape to design Electronics Circuits<p>This CMOS NOR gate is designed using Simscape. My contribution might be helpful to someone who wants to start with simscape using basic gates.</p>cmos,nor,simscape",29,2,2,0,33,simscape design electronics circuitsthis cmos gate design simscape contribution might helpful someone want start simscape basic gate cmosnorsimscape,"['simscape', 'design', 'electronics', 'circuitsthis', 'cmos', 'gate', 'design', 'simscape', 'contribution', 'might', 'helpful', 'someone', 'want', 'start', 'simscape', 'basic', 'gate', 'cmosnorsimscape']",0
1239,48997,Frequency conversion<p>Frequency conversion to integer multiples of each other</p>simulation,27,1,2,0,32,frequency conversion integer multiple,"['frequency', 'conversion', 'integer', 'multiple']",3
1240,49023,"A non-local learning rule is employed in a repetitive neurocontroller based on B-spline network.<p>A numerical experiment described in <a href=""http://dx.doi.org/10.1109/TIE.2007.909064"">http://dx.doi.org/10.1109/TIE.2007.909064</a> [*] is reproduced here. In [*] the forgetting mechanism is employed to robustify the control scheme. By contract, in <a href=""http://dx.doi.org/10.1109/IECON.2013.6700120"">http://dx.doi.org/10.1109/IECON.2013.6700120</a> [**] weight constraints are used instead of forgetting and that turns out to robustify the controller. Hence, the same idea has been tested also in the B-spline based repetitive neurocontroller proposed in [*]. To be clear, I haven't invented the controller introduced in this model. I've just modified the robustification mechanism used in [*]. You can play here with both mechanisms and decide for yourself which one of them is more suitable for your application. You can even combine them. It should be noted that [**] uses a global update rule and not necessarily the same robustification mechanisms are equally effective in both controllers. For more information please see m-files and our conference paper: M. Malkowski, B. Ufnalski and L. M. Grzesiak, B-spline based repetitive controller revisited: error shift, higher-order polynomials and smooth pass-to-pass transition, ICSTCC 2015, <a href=""http://ufnalski.edu.pl/proceedings/icstcc2015/"">http://ufnalski.edu.pl/proceedings/icstcc2015/</a> .</p>b spline,b spline network,basis spline,forgetting factor,global learning rule,ilc,iterative learning control,neural network,nonlocal learning rule,repetitive control,robust control,spline,weight constraints",85,2,2,0,99,non local learning rule employ repetitive neurocontroller base spline network numerical experiment describe http doi org tie reproduce forget mechanism employ robustify control scheme contract http doi org iecon weight constraint instead forget turn robustify controller hence idea test also spline base repetitive neurocontroller propose clear invent controller introduce modified robustification mechanism play mechanism decide one suitable application even combine noted global update rule necessarily robustification mechanism equally effective controller information please see file conference paper malkowski ufnalski grzesiak spline base repetitive controller revisit error shift high order polynomial smooth pass pas transition icstcc http ufnalski edu proceeding icstcc splineb spline networkbasis factorglobal learn learn controlneural networknonlocal learn rulerepetitive controlrobust constraint,"['non', 'local', 'learning', 'rule', 'employ', 'repetitive', 'neurocontroller', 'base', 'spline', 'network', 'numerical', 'experiment', 'describe', 'http', 'doi', 'org', 'tie', 'reproduce', 'forget', 'mechanism', 'employ', 'robustify', 'control', 'scheme', 'contract', 'http', 'doi', 'org', 'iecon', 'weight', 'constraint', 'instead', 'forget', 'turn', 'robustify', 'controller', 'hence', 'idea', 'test', 'also', 'spline', 'base', 'repetitive', 'neurocontroller', 'propose', 'clear', 'invent', 'controller', 'introduce', 'modified', 'robustification', 'mechanism', 'play', 'mechanism', 'decide', 'one', 'suitable', 'application', 'even', 'combine', 'noted', 'global', 'update', 'rule', 'necessarily', 'robustification', 'mechanism', 'equally', 'effective', 'controller', 'information', 'please', 'see', 'file', 'conference', 'paper', 'malkowski', 'ufnalski', 'grzesiak', 'spline', 'base', 'repetitive', 'controller', 'revisit', 'error', 'shift', 'high', 'order', 'polynomial', 'smooth', 'pass', 'pas', 'transition', 'icstcc', 'http', 'ufnalski', 'edu', 'proceeding', 'icstcc', 'splineb', 'spline', 'networkbasis', 'factorglobal', 'learn', 'learn', 'controlneural', 'networknonlocal', 'learn', 'rulerepetitive', 'controlrobust', 'constraint']",5
1241,49068,"PV solar panel model using simscape solar cell model.<p>In this simulation, PV solar panel model using solar cell model available in simscape library. 36 solar cell are connected in series. each solar cell having short circuit current of 8.9A and open circuit voltage of 0.632V.</p>power_conversion_control,power_electronics_control,pv,pv cell,pv panel,sanjay lodwal,simulation,solar",79,7,3,0,113,solar panel simscape solar cell solar panel solar cell available simscape solar cell connect series solar cell short circuit current open circuit voltage power conversion controlpower electronics controlpvpv cellpv panelsanjay,"['solar', 'panel', 'simscape', 'solar', 'cell', 'solar', 'panel', 'solar', 'cell', 'available', 'simscape', 'solar', 'cell', 'connect', 'series', 'solar', 'cell', 'short', 'circuit', 'current', 'open', 'circuit', 'voltage', 'power', 'conversion', 'controlpower', 'electronics', 'controlpvpv', 'cellpv', 'panelsanjay']",3
1242,49077,"C-code version of B-spline repetitive controller<p>This model is a C-code version of <a href=""http://www.mathworks.com/matlabcentral/fileexchange/49023-b-spline-based-repetitive-neurocontroller"">http://www.mathworks.com/matlabcentral/fileexchange/49023-b-spline-based-repetitive-neurocontroller</a> uploaded by Bartlomiej Ufnalski.</p>b spline,b spline network,basis spline,forgetting factor,global learning rule,ilc,iterative learning control,neural network,nonlocal learning rule,repetitive control,robust control,spline,weight constraints",66,4,2,0,82,code version spline repetitive controllerthis code version http mathworks com matlabcentral fileexchange spline base repetitive neurocontroller upload bartlomiej ufnalski splineb spline networkbasis factorglobal learn learn controlneural networknonlocal learn rulerepetitive controlrobust constraint,"['code', 'version', 'spline', 'repetitive', 'controllerthis', 'code', 'version', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'spline', 'base', 'repetitive', 'neurocontroller', 'upload', 'bartlomiej', 'ufnalski', 'splineb', 'spline', 'networkbasis', 'factorglobal', 'learn', 'learn', 'controlneural', 'networknonlocal', 'learn', 'rulerepetitive', 'controlrobust', 'constraint']",0
1243,49094,LFC using fiuzzy logic control<p>Power System</p>simulation,30,0,1,0,37,lfc fiuzzy logic controlpower,"['lfc', 'fiuzzy', 'logic', 'controlpower']",3
1244,49115,"Simulink model to find Bit error rate (BER) curve of  BPSK Modulation scheme in AWGN channel.<p>The model represents the baseband simulation of the BPSK system in Matlab Simulink. It consists of a Bernoulli Binary generator which generates a binary sequence {1,0,1,1,0},sample and hold to sample the bit sequence, Baseband BPSK modulator which convert sequence into  {-1,1} form, AWGN Channel to introduce noise in the signal//bit, the demodulator consist of  Discrete time integrator which integrate the noise sample till sample time (i.e 1s), look-up table which convert the signal into {1,0} form, Error block to calculate the BER. The simulink file is used to run the model which give the BER curve Simulated and theoretical. Earlier model don't used such kind of demodulation they directly used BPSK Baseband demodulator block.</p>awgn,ber,communications,ebno,integration,modeling,modulation,noise,plotting,probability,simulink,wireless",17,0,1,0,20,find bit error rate ber curve bpsk modulation scheme awgn channel represent baseband bpsk consist bernoulli binary generator generates binary sequence sample hold sample bit sequence baseband bpsk modulator convert sequence form awgn channel introduce noise signal bit demodulator consist discrete time integrator integrate noise sample till sample time look table convert signal form error block calculate ber file run give ber curve theoretical earlier kind demodulation directly bpsk baseband demodulator block,"['find', 'bit', 'error', 'rate', 'ber', 'curve', 'bpsk', 'modulation', 'scheme', 'awgn', 'channel', 'represent', 'baseband', 'bpsk', 'consist', 'bernoulli', 'binary', 'generator', 'generates', 'binary', 'sequence', 'sample', 'hold', 'sample', 'bit', 'sequence', 'baseband', 'bpsk', 'modulator', 'convert', 'sequence', 'form', 'awgn', 'channel', 'introduce', 'noise', 'signal', 'bit', 'demodulator', 'consist', 'discrete', 'time', 'integrator', 'integrate', 'noise', 'sample', 'till', 'sample', 'time', 'look', 'table', 'convert', 'signal', 'form', 'error', 'block', 'calculate', 'ber', 'file', 'run', 'give', 'ber', 'curve', 'theoretical', 'earlier', 'kind', 'demodulation', 'directly', 'bpsk', 'baseband', 'demodulator', 'block']",0
1245,49118,The Simulink model and the executable m-file is in the zip file.<p>The Simulink model and the executable m-file is in the zip file.</p>gui,172,10,3,0,194,executable file zip file executable file zip file gui,"['executable', 'file', 'zip', 'file', 'executable', 'file', 'zip', 'file', 'gui']",7
1246,49133,sixswitch statcom<p>using 6 switch statcom</p>simulink,147,7,3,0,178,sixswitch statcomusing switch,"['sixswitch', 'statcomusing', 'switch']",8
1247,49137,"Grid consists of conventional power plants and wind power plant<p>Grid consists of conventional power plants and wind power plant. Grid frequency response is estimated in phasor simulation method</p>grid frequency,sim power systems,simulink,wind power plant",1034,59,10,0,1222,grid consist conventional power plant wind power plantgrid consist conventional power plant wind power plant grid frequency response estimate phasor methodgrid frequencysim power power plant,"['grid', 'consist', 'conventional', 'power', 'plant', 'wind', 'power', 'plantgrid', 'consist', 'conventional', 'power', 'plant', 'wind', 'power', 'plant', 'grid', 'frequency', 'response', 'estimate', 'phasor', 'methodgrid', 'frequencysim', 'power', 'power', 'plant']",3
1248,49167,accurate single phase phase difference between voltage and current measurement<p>A simple block that can measure the single phase power phase accurately.You just have to connect the voltage and current from the circuit across the block and it will display the phase difference between voltage and current. This block can be used as a utility block and can be used as a subsytem in any of the simulink model. the block has been design for discrete Simulation type. in order to use it in other domains some modifications are needed.</p>signal processing,25,1,2,0,28,accurate single phase phase difference voltage current measurementa simple block measure single phase power phase accurately connect voltage current circuit across block display phase difference voltage current block utility block subsytem block design discrete type order domain modification need signal processing,"['accurate', 'single', 'phase', 'phase', 'difference', 'voltage', 'current', 'measurementa', 'simple', 'block', 'measure', 'single', 'phase', 'power', 'phase', 'accurately', 'connect', 'voltage', 'current', 'circuit', 'across', 'block', 'display', 'phase', 'difference', 'voltage', 'current', 'block', 'utility', 'block', 'subsytem', 'block', 'design', 'discrete', 'type', 'order', 'domain', 'modification', 'need', 'signal', 'processing']",3
1249,49354,"design of DCM buck converter<p>this is DCM buck converter that step down voltage and it is controlled with a controller to have a fix output</p>controller,dcm,power electronics,simulation,simulink",46,4,3,0,54,design dcm buck converterthis dcm buck converter step voltage control controller fix,"['design', 'dcm', 'buck', 'converterthis', 'dcm', 'buck', 'converter', 'step', 'voltage', 'control', 'controller', 'fix']",3
1250,49355,to detect the frequency of the electrical system<p>enter the frequency in ac source.you may get same result as output.(see in display)</p>simulink,27,3,3,0,27,detect frequency electrical systementer frequency source may get result output see display,"['detect', 'frequency', 'electrical', 'systementer', 'frequency', 'source', 'may', 'get', 'result', 'output', 'see', 'display']",7
1251,49374,"Model of a rolling ball on plane using SimMechancs.<p>This model simulates a rolling ball on plane. It is constructed in SimMechanics (2nd generation). The contact between ball and plane is modelled by taking into accout the support force and simple friction force. The model uses an S-function coded in C language. It must be compiled first by giving a command ""mex ballplanecontact.c"" in the MATLAB Command Window. The model was inspired by SimMechanics Contact Forces Library.</p>pick of the week,potw,contact,contact force,friction,friction force,plane,rolling ball,support force",48,3,2,0,61,roll ball plane simmechancs roll ball plane construct simmechanics generation contact ball plane take accout support force simple friction force function cod language must compile first give command mex command window inspire simmechanics contact force pick ballsupport force,"['roll', 'ball', 'plane', 'simmechancs', 'roll', 'ball', 'plane', 'construct', 'simmechanics', 'generation', 'contact', 'ball', 'plane', 'take', 'accout', 'support', 'force', 'simple', 'friction', 'force', 'function', 'cod', 'language', 'must', 'compile', 'first', 'give', 'command', 'mex', 'command', 'window', 'inspire', 'simmechanics', 'contact', 'force', 'pick', 'ballsupport', 'force']",0
1252,49481,"SMART GRID SYSTEM<p>This is smart grid system in which two way direction power flow so the load on the grid is low at the pick time and during off pick time battery is charged and pick on time battery is discharge through grid power supply.Work is also progress and fully supported by DR.Anurag Tripathi Sir and Dr. Bharti Dwivedi mam.</p>battery_system_management,power_electronics_control,simulink",14,0,1,0,33,smart grid systemthis smart grid two way direction power flow load grid low pick time pick time battery charge pick time battery discharge grid power supply work also progress fully support anurag tripathi sir bharti dwivedi mam battery managementpower electronics,"['smart', 'grid', 'systemthis', 'smart', 'grid', 'two', 'way', 'direction', 'power', 'flow', 'load', 'grid', 'low', 'pick', 'time', 'pick', 'time', 'battery', 'charge', 'pick', 'time', 'battery', 'discharge', 'grid', 'power', 'supply', 'work', 'also', 'progress', 'fully', 'support', 'anurag', 'tripathi', 'sir', 'bharti', 'dwivedi', 'mam', 'battery', 'managementpower', 'electronics']",4
1253,49484,"Am<p>Modulador y demodulador de una seÃ±al en AM</p>signal processing,simulation,simulink",17,0,1,0,17,ammodulador demodulador una seÃ±al amsignal,"['ammodulador', 'demodulador', 'una', 'seÃ±al', 'amsignal']",2
1254,49583,"Fortescue's Symmetrical Components<p>Symmetrical Components is used to simplify analysis of unbalanced three-phase power systems under both normal and abnormal conditions. The basic idea is that an asymmetrical set of N phasors can be expressed as a linear combination of N symmetrical sets of phasors by means of a complex linear transformation.</p>faults,phasors,polyphase signal,symmetrical components,three phase",60,2,2,0,92,fortescue symmetrical component simplify analysis unbalance three phase power normal abnormal condition basic idea asymmetrical set phasors express linear combination symmetrical set phasors mean complex linear transformation componentsthree phase,"['fortescue', 'symmetrical', 'component', 'simplify', 'analysis', 'unbalance', 'three', 'phase', 'power', 'normal', 'abnormal', 'condition', 'basic', 'idea', 'asymmetrical', 'set', 'phasors', 'express', 'linear', 'combination', 'symmetrical', 'set', 'phasors', 'mean', 'complex', 'linear', 'transformation', 'componentsthree', 'phase']",5
1255,49589,"Measuring electrical frequency of DFIG (detailed model)<p>Measure electrical frequency of a machine connected to grid (discrete model)</p>dfig,frequency",825,33,8,0,879,measure electrical frequency dfig detailed measure electrical frequency machine connect grid discrete dfigfrequency,"['measure', 'electrical', 'frequency', 'dfig', 'detailed', 'measure', 'electrical', 'frequency', 'machine', 'connect', 'grid', 'discrete', 'dfigfrequency']",4
1256,49592,"A simulink library block is created to achieve ADP learning methods for second order CT systems<p>A Simulink library block is created to achieve ADP learning methods for second order CT systems. This is based on Y. Jiang and Z. P. Jiang, <a href=""http://www.sciencedirect.com/science/article/pii/S0005109812003664"">http://www.sciencedirect.com/science/article/pii/S0005109812003664</a> Computational adaptive optimal control for continuous-time linear systems with completely unknown system dynamics, Automatica, vol. 48, no. 10, pp. 2699-2704, Oct. 2012. </p>adplib,adptools",16,0,1,0,16,block create achieve adp learn method second order systemsa block create achieve adp learn method second order base jiang jiang http sciencedirect com science article pii computational adaptive optimal control continuous time linear completely unknown dynamic automatica vol oct adplibadptools,"['block', 'create', 'achieve', 'adp', 'learn', 'method', 'second', 'order', 'systemsa', 'block', 'create', 'achieve', 'adp', 'learn', 'method', 'second', 'order', 'base', 'jiang', 'jiang', 'http', 'sciencedirect', 'com', 'science', 'article', 'pii', 'computational', 'adaptive', 'optimal', 'control', 'continuous', 'time', 'linear', 'completely', 'unknown', 'dynamic', 'automatica', 'vol', 'oct', 'adplibadptools']",0
1257,49605,"Electro-mechanical model of a thyristor-based soft starter with SimPowerSystems<p>Soft starters are power electronics topologies allowing soft start/stop of induction motors widely used in industrial applications (i.e. water treatment). Two models of a thyristor-based soft start of a 15kW induction motor are introduced (SimPowerSystems). The first model (ended ST) ensures faster simulation. The second model (ended SC) can be expanded with thermo-electric thyristor representation or a customized machine model.  The models provide both open-loop and closed-loop (speed control) algorithms for thyristor firing.</p>induction motor,industrial automation,power electronics,electric_motor_control,power_conversion_control,power_electronics_control",255,15,4,0,301,electro mechanical thyristor base soft starter starter power electronics topology allow soft start stop induction motor widely industrial application water treatment two thyristor base soft start induction motor introduce simpowersystems first end ensures faster second end expand thermo electric thyristor representation customize machine provide open loop close loop speed control algorithms thyristor fire induction motorindustrial automationpower motor controlpower conversion controlpower electronics control,"['electro', 'mechanical', 'thyristor', 'base', 'soft', 'starter', 'starter', 'power', 'electronics', 'topology', 'allow', 'soft', 'start', 'stop', 'induction', 'motor', 'widely', 'industrial', 'application', 'water', 'treatment', 'two', 'thyristor', 'base', 'soft', 'start', 'induction', 'motor', 'introduce', 'simpowersystems', 'first', 'end', 'ensures', 'faster', 'second', 'end', 'expand', 'thermo', 'electric', 'thyristor', 'representation', 'customize', 'machine', 'provide', 'open', 'loop', 'close', 'loop', 'speed', 'control', 'algorithms', 'thyristor', 'fire', 'induction', 'motorindustrial', 'automationpower', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1258,49611,"Simulation machine Ã  courant continu par un interface graphique (GUI).<p>Simulation d'un modÃ¨le Simulink par une interface graphique (GUI).ModÃ¨le : machine Ã  courant continu (R-L-E) avec une charge (J f).</p>gui,gustave monod,interface graphique,machine courant continu,mcc,ssi",10,0,1,0,10,machine courant continu par interface graphique gui modÃ¨le par une interface graphique gui modÃ¨le machine courant continu avec une charge guigustave monodinterface courant continumccssi,"['machine', 'courant', 'continu', 'par', 'interface', 'graphique', 'gui', 'modÃ¨le', 'par', 'une', 'interface', 'graphique', 'gui', 'modÃ¨le', 'machine', 'courant', 'continu', 'avec', 'une', 'charge', 'guigustave', 'monodinterface', 'courant', 'continumccssi']",5
1259,49616,"Simple leaf disease analysis based on histogram method using MATLAB SIMULINK<p>Simple leaf disease analysis based on histogram method using MATLAB SIMULINK</p>image processing,simulink",120,5,2,0,133,simple leaf disease analysis base histogram method leaf disease analysis base histogram method,"['simple', 'leaf', 'disease', 'analysis', 'base', 'histogram', 'method', 'leaf', 'disease', 'analysis', 'base', 'histogram', 'method']",4
1260,49625,"Simulation of 31 Level Inverter with MCPWM control<p>Simulation of a new general cascaded multilevel inverter using developed H-bridges(published in IEEE transaction 2014) described. Topology requires a lesser number of dc voltage sources and power switches and consists of lower blocking voltage on switches, which results in decreased complexity and total cost of the inverter.</p>simulation,simulink,power_conversion_control,power_electronics_control",657,34,3,0,1022,level inverter mcpwm new general cascade multilevel inverter develop bridge publish iee transaction describe topology require less number voltage source power switch consist low block voltage switch result decrease complexity total cost inverter conversion controlpower electronics control,"['level', 'inverter', 'mcpwm', 'new', 'general', 'cascade', 'multilevel', 'inverter', 'develop', 'bridge', 'publish', 'iee', 'transaction', 'describe', 'topology', 'require', 'less', 'number', 'voltage', 'source', 'power', 'switch', 'consist', 'low', 'block', 'voltage', 'switch', 'result', 'decrease', 'complexity', 'total', 'cost', 'inverter', 'conversion', 'controlpower', 'electronics', 'control']",3
1261,49734,"The concept of B-spline based repetitive control is explored within the frame of motion control.<p>This model employs the idea presented in <a href=""http://dx.doi.org/10.1109/TNN.2004.824268"">http://dx.doi.org/10.1109/TNN.2004.824268</a> . Some modifications described in <a href=""http://www.mathworks.com/matlabcentral/fileexchange/49023-b-spline-based-repetitive-neurocontroller"">http://www.mathworks.com/matlabcentral/fileexchange/49023-b-spline-based-repetitive-neurocontroller</a> are implemented. A very concise C-code (yet still readable) developed by Michal Malkowski for <a href=""http://www.mathworks.com/matlabcentral/fileexchange/49077-b-spline-network-based-repetitive-controller--c-code-"">http://www.mathworks.com/matlabcentral/fileexchange/49077-b-spline-network-based-repetitive-controller--c-code-</a> is used. The plant is identical as in <a href=""http://www.mathworks.com/matlabcentral/fileexchange/48791-iterative-learning-motion-control"">http://www.mathworks.com/matlabcentral/fileexchange/48791-iterative-learning-motion-control</a> . This solution comes with some drawbacks. I encourage you to identify their roots on your own -- and fix them :). The quadratic spline is more smooth than the linear one but is it better? When testing electric drives always examine the shape of the current(s). And remember to click the Build button in the S-Function block before attempting to run the model. More info: M. Malkowski, B. Ufnalski and L. M. Grzesiak, B-spline based repetitive controller revisited: error shift, higher-order polynomials and smooth pass-to-pass transition, 19th International Conference on System Theory, Control and Computing (ICSTCC), 2015, <a href=""http://ufnalski.edu.pl/proceedings/icstcc2015/"">http://ufnalski.edu.pl/proceedings/icstcc2015/</a> .</p>basis spline,closed curve,closed spline,control,ilc,iterative learning control,motion control,position control,repetitive control,repetitive process,servo drive,spline",32,0,1,0,46,concept spline base repetitive control explore within frame motion control employ idea present http doi org tnn modification describe http mathworks com matlabcentral fileexchange spline base repetitive neurocontroller implement concise code yet still readable developed michal malkowski http mathworks com matlabcentral fileexchange spline network base repetitive controller code plant identical http mathworks com matlabcentral fileexchange iterative learn motion control solution come drawback encourage identify root fix quadratic spline smooth linear one good test electric drive always examine shape current remember click build button function block attempt run info malkowski ufnalski grzesiak spline base repetitive controller revisit error shift high order polynomial smooth pass pas transition international conference theory control compute icstcc http ufnalski edu proceeding icstcc basis splineclosed curveclosed learn controlmotion controlposition processervo drivespline,"['concept', 'spline', 'base', 'repetitive', 'control', 'explore', 'within', 'frame', 'motion', 'control', 'employ', 'idea', 'present', 'http', 'doi', 'org', 'tnn', 'modification', 'describe', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'spline', 'base', 'repetitive', 'neurocontroller', 'implement', 'concise', 'code', 'yet', 'still', 'readable', 'developed', 'michal', 'malkowski', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'spline', 'network', 'base', 'repetitive', 'controller', 'code', 'plant', 'identical', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'iterative', 'learn', 'motion', 'control', 'solution', 'come', 'drawback', 'encourage', 'identify', 'root', 'fix', 'quadratic', 'spline', 'smooth', 'linear', 'one', 'good', 'test', 'electric', 'drive', 'always', 'examine', 'shape', 'current', 'remember', 'click', 'build', 'button', 'function', 'block', 'attempt', 'run', 'info', 'malkowski', 'ufnalski', 'grzesiak', 'spline', 'base', 'repetitive', 'controller', 'revisit', 'error', 'shift', 'high', 'order', 'polynomial', 'smooth', 'pass', 'pas', 'transition', 'international', 'conference', 'theory', 'control', 'compute', 'icstcc', 'http', 'ufnalski', 'edu', 'proceeding', 'icstcc', 'basis', 'splineclosed', 'curveclosed', 'learn', 'controlmotion', 'controlposition', 'processervo', 'drivespline']",0
1262,49738,"Target for launchpad (embedded coder required) with msp430g2553<p>Target intended for target development education purposes. Intended for windows only.Inslallation1) Extract zip file in location where you will store target support files.2) Setup compiler ""mex -setup""2) Launch Setup_mymsp430_target.m script from MATLAB.3) Check that RXD/TXD jumpers on the Launchpad is installed in HW UART mode otherwise PIL and serial port won't work.Target was based on: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/37825-simulink--embedded-coder--target-for-ti-launchpad"">http://www.mathworks.com/matlabcentral/fileexchange/37825-simulink--embedded-coder--target-for-ti-launchpad</a>, key differencies:  - Add blocks ""led Init"", ""serial Init"" to avoid initialization code duplication in generated code.  - Add new configuration option: eabi/coffabi format of object code to resolve problem, here: <a href=""http://e2e.ti.com/support/microcontrollers/msp430/f/166/p/390510/1378778#1378778"">http://e2e.ti.com/support/microcontrollers/msp430/f/166/p/390510/1378778#1378778</a></p>launchpad,msp430g2,target",192,14,3,40,124,target launchpad embed coder require msp target intend target development education purpose intend window inslallation extract zip file location store target support file setup compiler mex setup launch setup mymsp target script check rxd txd jumper launchpad installed uart mode otherwise pil serial port work target base http mathworks com matlabcentral fileexchange embed coder target launchpad key differencies add block lead init serial init avoid initialization code duplication generate code add new configuration option eabi coffabi format object code resolve problem http com support msp launchpadmsp target,"['target', 'launchpad', 'embed', 'coder', 'require', 'msp', 'target', 'intend', 'target', 'development', 'education', 'purpose', 'intend', 'window', 'inslallation', 'extract', 'zip', 'file', 'location', 'store', 'target', 'support', 'file', 'setup', 'compiler', 'mex', 'setup', 'launch', 'setup', 'mymsp', 'target', 'script', 'check', 'rxd', 'txd', 'jumper', 'launchpad', 'installed', 'uart', 'mode', 'otherwise', 'pil', 'serial', 'port', 'work', 'target', 'base', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'embed', 'coder', 'target', 'launchpad', 'key', 'differencies', 'add', 'block', 'lead', 'init', 'serial', 'init', 'avoid', 'initialization', 'code', 'duplication', 'generate', 'code', 'add', 'new', 'configuration', 'option', 'eabi', 'coffabi', 'format', 'object', 'code', 'resolve', 'problem', 'http', 'com', 'support', 'msp', 'launchpadmsp', 'target']",0
1263,49746,"This is an active magnetic bearing system for a permanent-magnet synchronous machine.<p>Active magnetic bearings are used to levitate a rotating shaft and allow relative motion without physical contact. The demo shows a multi-domain (mechanical, electrical, and magnetic) physical system which includes a permanent-magnet synchronous machine drive system, two radial bearing systems at both shaft ends, and an axial bearing system. This demo illustrates the general working principles of active magnetic bearings.</p>magnetic bearing,simmechanics",2132,120,5,0,1899,active magnetic bearing permanent magnet synchronous machine active magnetic bearing levitate rotating shaft allow relative motion without physical contact demo show multi domain mechanical electrical magnetic physical include permanent magnet synchronous machine drive two radial bear shaft end axial bearing demo illustrate general work principle active magnetic bearing magnetic,"['active', 'magnetic', 'bearing', 'permanent', 'magnet', 'synchronous', 'machine', 'active', 'magnetic', 'bearing', 'levitate', 'rotating', 'shaft', 'allow', 'relative', 'motion', 'without', 'physical', 'contact', 'demo', 'show', 'multi', 'domain', 'mechanical', 'electrical', 'magnetic', 'physical', 'include', 'permanent', 'magnet', 'synchronous', 'machine', 'drive', 'two', 'radial', 'bear', 'shaft', 'end', 'axial', 'bearing', 'demo', 'illustrate', 'general', 'work', 'principle', 'active', 'magnetic', 'bearing', 'magnetic']",5
1264,49750,"ASK Modulation Simulink Model<p>Model representation of Amplitude Shift Keying Digital Modulation</p>ask,communications,digital,model,modulation,simulink",21,3,3,0,20,ask modulation modelmodel representation amplitude shift keying digital,"['ask', 'modulation', 'modelmodel', 'representation', 'amplitude', 'shift', 'keying', 'digital']",8
1265,49751,"FSK Digital Modulation<p>Frequency Shift Keying Digital Modulation</p>digital,frequency,fsk,model,modulation,simulink",29,4,3,0,29,fsk digital shift key digital,"['fsk', 'digital', 'shift', 'key', 'digital']",5
1266,49757,"PSK Digital Modulation<p>PSK Digital Modulation</p>communications,digital modulation,modulation,phase,psk,simulink",21,3,3,0,19,psk digital modulationpsk digital,"['psk', 'digital', 'modulationpsk', 'digital']",5
1267,49758,"Five Band Equalizer<p>Five Band Equalizer</p>audio,band,dsp,equalizer,five,simulink",15,0,1,0,18,five band equalizerfive band,"['five', 'band', 'equalizerfive', 'band']",8
1268,49759,"This model indicates a sample inverter-based Microgrid in SIMULINK environment.<p>This model indicates a sample inverter-based Microgrid that contains two parallel-connceted DGs.</p>dg,microgrid,power electronics,power systems",32,0,1,0,31,indicates sample inverter base microgrid environment indicate sample inverter base microgrid contains two parallel connceted dgs,"['indicates', 'sample', 'inverter', 'base', 'microgrid', 'environment', 'indicate', 'sample', 'inverter', 'base', 'microgrid', 'contains', 'two', 'parallel', 'connceted', 'dgs']",4
1269,49794,"UPFC<p>UPFC for power system</p>facts,power system,upfc",54,0,1,0,103,upfcupfc power systemupfc,"['upfcupfc', 'power', 'systemupfc']",8
1270,49835,"This Simulink mdl-file is to simulate the spectrum for multirate structured Phase Locked Loop.<p>The multirate phase locked loop structure is equivalent to higher order feedback control loop, however, it separates the design of the voltage controlled oscillator for output from the digital controlled oscillator as the input reference. This version 1 model uses the analogue loop filters, the next release will be digital loop filters.</p>control design,dsp,filter,gaussian,mathematics,measurement,noise,nonlinear,signal processing,simulation,simulink,spectral analysis",57,4,2,0,62,mdl file spectrum multirate structure phase lock loop multirate phase lock loop structure equivalent high order feedback control loop however separate design voltage control oscillator output digital control oscillator input reference version analogue loop filter next release digital loop filter control analysis,"['mdl', 'file', 'spectrum', 'multirate', 'structure', 'phase', 'lock', 'loop', 'multirate', 'phase', 'lock', 'loop', 'structure', 'equivalent', 'high', 'order', 'feedback', 'control', 'loop', 'however', 'separate', 'design', 'voltage', 'control', 'oscillator', 'output', 'digital', 'control', 'oscillator', 'input', 'reference', 'version', 'analogue', 'loop', 'filter', 'next', 'release', 'digital', 'loop', 'filter', 'control', 'analysis']",3
1271,49846,"boost convert voltage multiplier<p>dc to dc convert input 7v to output 80 v</p>power_conversion_control,power_electronics_control,simulink",194,15,4,0,199,boost convert voltage multiplierdc convert input output vpower conversion controlpower electronics,"['boost', 'convert', 'voltage', 'multiplierdc', 'convert', 'input', 'output', 'vpower', 'conversion', 'controlpower', 'electronics']",1
1272,49847,with improve non linear load<p>improvement non linear load in tranmission line</p>simulation,213,15,4,0,217,improve non linear loadimprovement non linear load tranmission,"['improve', 'non', 'linear', 'loadimprovement', 'non', 'linear', 'load', 'tranmission']",4
1273,49848,"fault diagnosis<p>fault detection</p>electric_motor_control,power_electronics_control,simulation",491,25,3,0,614,fault diagnosisfault motor controlpower electronics,"['fault', 'diagnosisfault', 'motor', 'controlpower', 'electronics']",6
1274,49849,11 Level Inverter THD Calculation<p>11 level Inverter THD Calculation</p>simulation,28,0,1,0,36,level inverter thd calculation level inverter thd,"['level', 'inverter', 'thd', 'calculation', 'level', 'inverter', 'thd']",1
1275,49854,"This Simulink mdl-file is to simulate the spectrum for multirate Digital Phase Locked Loop.<p>The multirate digital phase locked loop structure is equivalent to a non-trivial high-order feedback control loop, comparing with the traditional trivial one, it separates the design of the high pass filter for VCO output from many low pass filters for DCOs inputs. This version 2 model uses the 2 digital loop filters, you can extend it to as many rates as you wish, just watch for the stability.</p>dsp,fft,filter,filter analysis,mathematics,noise,optimization,signal processing,simulation,simulink,spectral analysis",57,4,2,0,63,mdl file spectrum multirate digital phase lock loop multirate digital phase lock loop structure equivalent non trivial high order feedback control loop compare traditional trivial one separate design high pas filter vco output many low pas filter dcos input version digital loop filter extend many rate wish watch stability analysis,"['mdl', 'file', 'spectrum', 'multirate', 'digital', 'phase', 'lock', 'loop', 'multirate', 'digital', 'phase', 'lock', 'loop', 'structure', 'equivalent', 'non', 'trivial', 'high', 'order', 'feedback', 'control', 'loop', 'compare', 'traditional', 'trivial', 'one', 'separate', 'design', 'high', 'pas', 'filter', 'vco', 'output', 'many', 'low', 'pas', 'filter', 'dcos', 'input', 'version', 'digital', 'loop', 'filter', 'extend', 'many', 'rate', 'wish', 'watch', 'stability', 'analysis']",4
1276,49870,"Analyse effect of PID controller in chopper circuit<p>Chopper Circuit is used to convert fixed DC to variable DC supply. Here, in this model, we used to PID controller to get stability.</p>power_conversion_control,power_electronics_control,negative feedback,pid controller,simpowersystem,simulink",29,0,1,0,32,analyse effect pid controller chopper circuitchopper circuit convert fix variable supply pid controller get stability power conversion controlpower electronics controlnegative feedbackpid,"['analyse', 'effect', 'pid', 'controller', 'chopper', 'circuitchopper', 'circuit', 'convert', 'fix', 'variable', 'supply', 'pid', 'controller', 'get', 'stability', 'power', 'conversion', 'controlpower', 'electronics', 'controlnegative', 'feedbackpid']",3
1277,49871,"Schmitt Trigger is a device which convert any irregular shape waveform into rectangular wave form.<p>Schmit Trigger model take time varying input, this input is applied to Schmit trigger subsystem which perform operation and pass result to scope.Schmitt trigger Subsystem consist 3 variable Voltage Saturation, R1 resistance (series Resistance) and R2 resistance (feedback Resistance).</p>simulink,subsystem",15,1,2,0,15,schmitt trigger device convert irregular shape waveform rectangular wave form schmit trigger take time vary input input apply schmit trigger subsystem perform operation pas result scope schmitt trigger subsystem consist variable voltage saturation resistance series resistance resistance feedback resistance,"['schmitt', 'trigger', 'device', 'convert', 'irregular', 'shape', 'waveform', 'rectangular', 'wave', 'form', 'schmit', 'trigger', 'take', 'time', 'vary', 'input', 'input', 'apply', 'schmit', 'trigger', 'subsystem', 'perform', 'operation', 'pas', 'result', 'scope', 'schmitt', 'trigger', 'subsystem', 'consist', 'variable', 'voltage', 'saturation', 'resistance', 'series', 'resistance', 'resistance', 'feedback', 'resistance']",5
1278,49872,This is 5 level cascaded inverter<p>This is five level NPC converter</p>simulink,236,10,2,0,229,level cascade inverterthis five level npc,"['level', 'cascade', 'inverterthis', 'five', 'level', 'npc']",4
1279,49885,"Reserves are created through pitch angle control (Deloading Control) for frequency regulation<p>Reserves are created through pitch angle control (Deloading Control) for frequency regulation by reducing the power coefficient value.  Power coefficient Cp is a function of tip speed ratio and pitch angle. To change the value of Cp, pitch angle is varied. Lookup table for pitch offset and percentage of deloading is developed. Look for pitch control block diagram inside the frequency regulation mask. PI controllers and feedback paths can be added to tune the response of pitch angle control. Since we are using constant wind speed as input, such complexity is not required.</p>deloading,dfig,frequency_regulation,pitch_angle_control",1044,61,10,0,1237,reserve create pitch angle control deloading control frequency create pitch angle control deloading control frequency regulation reduce power coefficient value power coefficient function tip speed ratio pitch angle change value pitch angle vary lookup table pitch offset percentage deloading develop look pitch control block diagram inside frequency regulation mask controller feedback path add tune response pitch angle control since constant wind speed input complexity require regulationpitch angle control,"['reserve', 'create', 'pitch', 'angle', 'control', 'deloading', 'control', 'frequency', 'create', 'pitch', 'angle', 'control', 'deloading', 'control', 'frequency', 'regulation', 'reduce', 'power', 'coefficient', 'value', 'power', 'coefficient', 'function', 'tip', 'speed', 'ratio', 'pitch', 'angle', 'change', 'value', 'pitch', 'angle', 'vary', 'lookup', 'table', 'pitch', 'offset', 'percentage', 'deloading', 'develop', 'look', 'pitch', 'control', 'block', 'diagram', 'inside', 'frequency', 'regulation', 'mask', 'controller', 'feedback', 'path', 'add', 'tune', 'response', 'pitch', 'angle', 'control', 'since', 'constant', 'wind', 'speed', 'input', 'complexity', 'require', 'regulationpitch', 'angle', 'control']",4
1280,49894,"DC motor and resolver are coupled by connecting proper sensors check the performance<p>characteristics in Combined operation</p>electric_motor_control,power_conversion_control,power_electronics_control,dcmotor,simulink",39,2,2,0,47,motor resolver couple connect proper sensor check combine motor controlpower conversion controlpower electronics,"['motor', 'resolver', 'couple', 'connect', 'proper', 'sensor', 'check', 'combine', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1281,49897,"The Signature Tool extracts the interface of a Simulink subsystem.<p>The notion of subsystem is used in Simulink to represent systems inside systems in order to provide hierarchical modeling. A Simulink subsystem has inports (explicit links to the subsystem), and outports (explicit links from the subsystem). We view inports and outports as the explicit interface of the subsystem. However, there are hidden (implicit) data dependencies in Simulinkâs subsystems. Hidden dependencies originate due to two Simulink data mechanisms: Data Store Memory/Read/Write and Goto/From blocks. The Signature Tool extracts the signature of a Simulink subsystem. A signature represents the interface of a Simulink subsystem, making the data flow into and out of the subsystem explicit. The tool identifies two useful signatures for a subsystem: strong signature and weak signature. The strong signature identifies the data mechanisms that are accessed by the subsystem or any of its children. The weak signature identifies the data mechanisms that a subsystem can access (those which are declared higher up in the hierarchy), but is not necessarily using. The Signature Tool can be used to either explicitly include the signatures in the model itself, or export the signatures into a text/tex/docx file. For instructions on installation and how to use the tool, see Signature_UserGuide.pdf in the source files.For more about the theoretical background on signatures and how they can be used, an interested reader is referred to: Marc Bender, Karen Laurin, Mark Lawford, Vera Pantelic, Alexandre Korobkine, Jeff Ong, Bennett Mackenzie, Monika Bialy, Steven Postma, âSignature required: Making Simulink data flow and interfaces explicit,â Science of Computer Programming, Elsevier, 2015, 113, Part 1, 29-50.For more about the capabilities of the tool and how it can be used in model-based development with Simulink, see the two papers:Vera Pantelic, Steven Postma, Mark Lawford, Alexandre Korobkine, Bennett Mackenzie, Jeff Ong, Marc Bender, ""A Toolset for Simulink: Improving Software Engineering Practices in Development with Simulink,"" Proceedings of 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD 2015), SCITEPRESS, 2015, 50-61. (Best Paper Award)Vera Pantelic, Steven Postma, Mark Lawford, Monika Jaskolka, Bennett Mackenzie, Alexandre Korobkine, Marc Bender, Jeff Ong, Gordon Marks, Alan Wassyng, âSoftware engineering practices and Simulink: bridging the gap,â International Journal on Software Tools for Technology Transfer (STTT), 2017, 1-23.</p>pick of the week,potw,data flow,documentation,interface,simulink,software engineering,transformation",114,8,4,0,80,signature tool extract interface subsystem notion subsystem represent inside order provide hierarchical modeling subsystem inports explicit link subsystem outports explicit link subsystem view inports outports explicit interface subsystem however hidden implicit data dependency subsystems hidden dependency originate due two data mechanism data store memory read write goto block signature tool extract signature subsystem signature represent interface subsystem make data flow subsystem explicit tool identifies two useful signature subsystem strong signature weak signature strong signature identifies data mechanism access subsystem child weak signature identifies data mechanism subsystem access declare high hierarchy necessarily signature tool either explicitly include signature export signature text tex docx file instruction installation tool see signature userguide pdf source file theoretical background signature interested reader refer marc bender karen laurin mark lawford vera pantelic alexandre korobkine jeff ong bennett mackenzie monika bialy steven postma signature require making data flow interface explicit science computer program elsevier part capability tool base development see two paper vera pantelic steven postma mark lawford alexandre korobkine bennett mackenzie jeff ong marc bender toolset improve software engineering practice development proceeding international conference drive engineering software development modelsward scitepress best paper award vera pantelic steven postma mark lawford monika jaskolka bennett mackenzie alexandre korobkine marc bender jeff ong gordon mark alan wassyng software engineering practice bridge gap international journal software tool technology transfer stt pick weekpotwdata,"['signature', 'tool', 'extract', 'interface', 'subsystem', 'notion', 'subsystem', 'represent', 'inside', 'order', 'provide', 'hierarchical', 'modeling', 'subsystem', 'inports', 'explicit', 'link', 'subsystem', 'outports', 'explicit', 'link', 'subsystem', 'view', 'inports', 'outports', 'explicit', 'interface', 'subsystem', 'however', 'hidden', 'implicit', 'data', 'dependency', 'subsystems', 'hidden', 'dependency', 'originate', 'due', 'two', 'data', 'mechanism', 'data', 'store', 'memory', 'read', 'write', 'goto', 'block', 'signature', 'tool', 'extract', 'signature', 'subsystem', 'signature', 'represent', 'interface', 'subsystem', 'make', 'data', 'flow', 'subsystem', 'explicit', 'tool', 'identifies', 'two', 'useful', 'signature', 'subsystem', 'strong', 'signature', 'weak', 'signature', 'strong', 'signature', 'identifies', 'data', 'mechanism', 'access', 'subsystem', 'child', 'weak', 'signature', 'identifies', 'data', 'mechanism', 'subsystem', 'access', 'declare', 'high', 'hierarchy', 'necessarily', 'signature', 'tool', 'either', 'explicitly', 'include', 'signature', 'export', 'signature', 'text', 'tex', 'docx', 'file', 'instruction', 'installation', 'tool', 'see', 'signature', 'userguide', 'pdf', 'source', 'file', 'theoretical', 'background', 'signature', 'interested', 'reader', 'refer', 'marc', 'bender', 'karen', 'laurin', 'mark', 'lawford', 'vera', 'pantelic', 'alexandre', 'korobkine', 'jeff', 'ong', 'bennett', 'mackenzie', 'monika', 'bialy', 'steven', 'postma', 'signature', 'require', 'making', 'data', 'flow', 'interface', 'explicit', 'science', 'computer', 'program', 'elsevier', 'part', 'capability', 'tool', 'base', 'development', 'see', 'two', 'paper', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'alexandre', 'korobkine', 'bennett', 'mackenzie', 'jeff', 'ong', 'marc', 'bender', 'toolset', 'improve', 'software', 'engineering', 'practice', 'development', 'proceeding', 'international', 'conference', 'drive', 'engineering', 'software', 'development', 'modelsward', 'scitepress', 'best', 'paper', 'award', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'monika', 'jaskolka', 'bennett', 'mackenzie', 'alexandre', 'korobkine', 'marc', 'bender', 'jeff', 'ong', 'gordon', 'mark', 'alan', 'wassyng', 'software', 'engineering', 'practice', 'bridge', 'gap', 'international', 'journal', 'software', 'tool', 'technology', 'transfer', 'stt', 'pick', 'weekpotwdata']",5
1282,49910,Simulated model of full bridge Unipolar SPWM<p>It is a simulated file of Full Bridge inverter with unipolar SPWM</p>simulation,18,0,1,0,20,full bridge unipolar spwmit file full bridge inverter unipolar,"['full', 'bridge', 'unipolar', 'spwmit', 'file', 'full', 'bridge', 'inverter', 'unipolar']",4
1283,49925,hello<p>hello every one i need out put  to this model plz...... i getting only one error</p>simulink,457,40,7,0,525,hellohello every one need put plz get one,"['hellohello', 'every', 'one', 'need', 'put', 'plz', 'get', 'one']",0
1284,49926,"creating blocks in simulink using xilinx blocksets<p>This is the model which I have created for testing a neural network...where constant ,constant1,constant2 ,etc are the inputs for the model.weights i have collected from matlab execution.These inputs are the major axis,minor axis ,aspect ratio and area of an image.last one is bias value.Can any1 tell me is this model is correct. How do I create system generator blocks for feeding these inputs using image not manually.I mean pre processing and extracting those four shape features.[f,p] = uigetfile('*.jpg;*.bmp');I = imread([p f]);a = imresize(I,[256 256]);%% shapeim=a;figure(1)subplot(2,3,1); imshow(im),impixelinfo;title('original image');ValRL1=140;ValRH1=250;ValGL1=22;ValGH1=150;ValBL1=20;ValBH1=100;Iy=(im(:,:,1)&gt;ValRL1)&amp;(im(:,:,2)&gt;ValGL1)&amp;(im(:,:,3)&gt;ValBL1) &amp; (im(:,:,1)</p>image feature extraction,simulink",250,12,2,0,282,create block xilinx blocksetsthis create test neural network constant constant constant etc input weight collect execution input major axisminor axis aspect ratio area image last one bias value tell correct create generator block feed input image manually mean pre process extract four shape feature uigetfile jpg bmp imread imresize shapeim figure subplot imshow impixelinfo title original image valrl valrh valgl valgh valbl valbh valrl amp valgl amp valbl amp image feature,"['create', 'block', 'xilinx', 'blocksetsthis', 'create', 'test', 'neural', 'network', 'constant', 'constant', 'constant', 'etc', 'input', 'weight', 'collect', 'execution', 'input', 'major', 'axisminor', 'axis', 'aspect', 'ratio', 'area', 'image', 'last', 'one', 'bias', 'value', 'tell', 'correct', 'create', 'generator', 'block', 'feed', 'input', 'image', 'manually', 'mean', 'pre', 'process', 'extract', 'four', 'shape', 'feature', 'uigetfile', 'jpg', 'bmp', 'imread', 'imresize', 'shapeim', 'figure', 'subplot', 'imshow', 'impixelinfo', 'title', 'original', 'image', 'valrl', 'valrh', 'valgl', 'valgh', 'valbl', 'valbh', 'valrl', 'amp', 'valgl', 'amp', 'valbl', 'amp', 'image', 'feature']",5
1285,49928,"Ac to dc<p>Ac to dc</p>electric_motor_control,power_conversion_control,power_electronics_control,matlab",13,0,1,0,15,dcac dcelectric motor controlpower conversion controlpower electronics controlmatlab,"['dcac', 'dcelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlmatlab']",6
1286,49935,"DFIG operates on a non-optimal power curve @ speed=10 m/s to provide spinning reserves<p>Generally, DFIG operates at maximum power points. Here 10% reserves are created through rotor speed control (overspeeding) to provide spinning reserves that can be utilized for primary frequency regulation by DFIG. The DFIG operates at lesser power coefficient of 0.9*0.48. This is done by increasing tipspeed ratio or overspeeding rotor and changing the electrical power reference from Pmax t0 0.9 Pmax. Then a frequency regulation loop will provide additional increase in active power whenever there is frequency deviation from 60 Hz</p>deloading,primary_frequency_regulation,rotor_speed_control,simulink,wind",1114,63,10,0,1315,dfig operate non optimal power curve speed provide spin dfig operate maximum power point reserve create rotor speed control overspeeding provide spin reserve utilized primary frequency regulation dfig dfig operate less power coefficient increase tipspeed ratio overspeeding rotor change electrical power reference pmax pmax frequency regulation loop provide additional increase active power whenever frequency deviation frequency regulationrotor speed,"['dfig', 'operate', 'non', 'optimal', 'power', 'curve', 'speed', 'provide', 'spin', 'dfig', 'operate', 'maximum', 'power', 'point', 'reserve', 'create', 'rotor', 'speed', 'control', 'overspeeding', 'provide', 'spin', 'reserve', 'utilized', 'primary', 'frequency', 'regulation', 'dfig', 'dfig', 'operate', 'less', 'power', 'coefficient', 'increase', 'tipspeed', 'ratio', 'overspeeding', 'rotor', 'change', 'electrical', 'power', 'reference', 'pmax', 'pmax', 'frequency', 'regulation', 'loop', 'provide', 'additional', 'increase', 'active', 'power', 'whenever', 'frequency', 'deviation', 'frequency', 'regulationrotor', 'speed']",4
1287,49954,"Simulation of a boost dc-dc converter using transfer functions<p>This file is a simulation of dc-dc boost converter in closed loop. It employs easy to design P and PI regulators to control output voltage. The regulators work to stabilize the small signal part while the steady state is controlled  by Dss. The simulation is an easy to use since it employs transfer functions, is suitable to use without simpowersystem toolbox. Also, it can be modified to accomodate use of simpowersystem depending on the user. Use it and make corrections, suggestion, improvements where necessary.</p>power_conversion_control,power_electronics_control,boost converter,current control,current minor loop,pwm,small signal analysis",71,4,2,0,85,boost converter transfer functionsthis file boost converter close loop employ easy design regulator control output voltage regulator work stabilize small signal part steady state control easy since employ transfer function suitable without simpowersystem toolbox also modify accomodate simpowersystem depend user make correction suggestion improvement necessary power conversion controlpower electronics controlboost controlcurrent minor looppwmsmall signal analysis,"['boost', 'converter', 'transfer', 'functionsthis', 'file', 'boost', 'converter', 'close', 'loop', 'employ', 'easy', 'design', 'regulator', 'control', 'output', 'voltage', 'regulator', 'work', 'stabilize', 'small', 'signal', 'part', 'steady', 'state', 'control', 'easy', 'since', 'employ', 'transfer', 'function', 'suitable', 'without', 'simpowersystem', 'toolbox', 'also', 'modify', 'accomodate', 'simpowersystem', 'depend', 'user', 'make', 'correction', 'suggestion', 'improvement', 'necessary', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'controlcurrent', 'minor', 'looppwmsmall', 'signal', 'analysis']",4
1288,49971,"DC to Ac full bridge by inverter<p>DC to Ac full bridge by inverter</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter",15,0,1,0,19,full bridge inverterdc full bridge motor controlpower conversion controlpower electronics controlinverter,"['full', 'bridge', 'inverterdc', 'full', 'bridge', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlinverter']",6
1289,49972,"Ac to dc by using full bridge thyristor<p>Ac to dc by using full bridge thyristor</p>electric_motor_control,power_conversion_control,power_electronics_control,matlab,simulink",16,0,1,0,21,full bridge thyristorac full bridge motor controlpower conversion controlpower electronics,"['full', 'bridge', 'thyristorac', 'full', 'bridge', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1290,49983,"three phase motor with repeating Sequence torque .<p>three phase motor with repeating Sequence torque , this model shows change of current when applied different torque. The torque in full load,half load and quarter load .</p>electric_motor_control,power_electronics_control,matlab,simulink",14,0,1,0,18,three phase motor repeat sequence torque three phase motor repeat sequence torque show change current applied different torque torque full loadhalf load quarter load electric motor controlpower electronics,"['three', 'phase', 'motor', 'repeat', 'sequence', 'torque', 'three', 'phase', 'motor', 'repeat', 'sequence', 'torque', 'show', 'change', 'current', 'applied', 'different', 'torque', 'torque', 'full', 'loadhalf', 'load', 'quarter', 'load', 'electric', 'motor', 'controlpower', 'electronics']",1
1291,49993,"Dc to Ac single phase<p>Dc to Ac single phase</p>electric_motor_control,power_conversion_control,power_electronics_control,matlab,simulink",11,0,1,0,13,single phasedc single phaseelectric motor controlpower conversion controlpower electronics,"['single', 'phasedc', 'single', 'phaseelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1292,50003,"buck converter simulation<p>A buck converter is a voltage step down and current step up converter.The simplest way to reduce the voltage of a DC supply is to use a linear regulator (such as a 7805), but linear regulators waste energy as they operate by dissipating excess power as heat. Buck converters, on the other hand, can be remarkably efficient (95% or higher for integrated circuits), making them useful for tasks such as converting the main voltage in a computer (12 V in a desktop, 12-24 V in a laptop) down to the 0.8-1.8 volts needed by the processor.</p>power_conversion_control,power_electronics_control,buck,converter acdc,power electrical",21,0,1,0,23,buck converter buck converter voltage step current step converter simple way reduce voltage supply linear regulator linear regulator waste energy operate dissipate excess power heat buck converter hand remarkably efficient high integrated circuit make useful task convert main voltage computer desktop laptop volt need processor power conversion controlpower electronics acdcpower electrical,"['buck', 'converter', 'buck', 'converter', 'voltage', 'step', 'current', 'step', 'converter', 'simple', 'way', 'reduce', 'voltage', 'supply', 'linear', 'regulator', 'linear', 'regulator', 'waste', 'energy', 'operate', 'dissipate', 'excess', 'power', 'heat', 'buck', 'converter', 'hand', 'remarkably', 'efficient', 'high', 'integrated', 'circuit', 'make', 'useful', 'task', 'convert', 'main', 'voltage', 'computer', 'desktop', 'laptop', 'volt', 'need', 'processor', 'power', 'conversion', 'controlpower', 'electronics', 'acdcpower', 'electrical']",3
1293,50004,"full bridge with alpha(deg) = 30<p>A power inverter, or inverter, is an electronic device or circuitry that changes direct current (DC) to alternating current (AC)</p>power_conversion_control,power_electronics_control,full bridge,inverter,power electrical,simulation,three phase inverter",33,1,2,0,48,full bridge alpha deg power inverter inverter electronic device circuitry change direct current alternate current power conversion controlpower electronics controlfull phase inverter,"['full', 'bridge', 'alpha', 'deg', 'power', 'inverter', 'inverter', 'electronic', 'device', 'circuitry', 'change', 'direct', 'current', 'alternate', 'current', 'power', 'conversion', 'controlpower', 'electronics', 'controlfull', 'phase', 'inverter']",1
1294,50009,"Three phase inverter with different conduction mode of operation<p>Here is the simulation of the Three phase inverter which can be work on any conduction mode, like, 180, 150, 120</p>120,150,180,converter,dc to ac,electrical,inverter,power electronics",60,3,2,0,63,three phase inverter different conduction mode operationhere three phase inverter work conduction mode like converterdc electronics,"['three', 'phase', 'inverter', 'different', 'conduction', 'mode', 'operationhere', 'three', 'phase', 'inverter', 'work', 'conduction', 'mode', 'like', 'converterdc', 'electronics']",1
1295,50011,"Capable of doing buck and boost<p>This type of inverter is best suitable when input voltage is changing.</p>power electronics,simulation",80,1,2,0,107,capable buck boostthis type inverter best suitable input voltage change power,"['capable', 'buck', 'boostthis', 'type', 'inverter', 'best', 'suitable', 'input', 'voltage', 'change', 'power']",3
1296,50033,"It is a step up or boost converter using IGBT as a switch<p>It is a step up or boost converter (DC to DC) using and IGBT as a Switch</p>power_conversion_control,power_electronics_control,boost,chopper,igbt,sanniv",14,0,1,0,17,step boost converter igbt switchit step boost converter igbt switchpower conversion controlpower electronics,"['step', 'boost', 'converter', 'igbt', 'switchit', 'step', 'boost', 'converter', 'igbt', 'switchpower', 'conversion', 'controlpower', 'electronics']",1
1297,50034,"Step up or Boost Chopper using Mosfet as Switch<p>Step up or Boost Chopper using Mosfet as Switch</p>power_conversion_control,power_electronics_control,boost,chopper,mosfet,step up",14,0,1,0,18,step boost chopper mosfet switchstep boost chopper mosfet switchpower conversion controlpower electronics,"['step', 'boost', 'chopper', 'mosfet', 'switchstep', 'boost', 'chopper', 'mosfet', 'switchpower', 'conversion', 'controlpower', 'electronics']",1
1298,50035,"Full Wave Rectifier using Thyristor<p>Full Wave Rectifier using Thyristor. It shows the current and voltage waveform across load</p>full wave,rectifier,sanniv,thyristor",14,0,1,0,18,full wave rectifier thyristorfull wave rectifier thyristor show current voltage waveform across loadfull,"['full', 'wave', 'rectifier', 'thyristorfull', 'wave', 'rectifier', 'thyristor', 'show', 'current', 'voltage', 'waveform', 'across', 'loadfull']",3
1299,50039,"DC to AC inverter<p>DC to AC inverter by using Universal Bridge IGBT/Diodes</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,matlab,simulink",6,0,1,0,6,inverterdc inverter universal bridge igbt diodeselectric motor controlpower conversion controlpower electronics,"['inverterdc', 'inverter', 'universal', 'bridge', 'igbt', 'diodeselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1300,50045,"3-level Inverter with PWM triggering<p>Cascaded 3-level Inverter with PWM triggering</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,simulink",151,6,2,0,187,level inverter pwm level inverter pwm motor controlpower conversion controlpower electronics,"['level', 'inverter', 'pwm', 'level', 'inverter', 'pwm', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1301,50064,"his is the single phase wind system with dc generator<p>this is the single phase wind system with dc generator unsing battry and dc-dc converetor and dc-ac invertor .And also using the stepup transformer to get 220 v</p>power_conversion_control,power_electronics_control,simulink",66,2,3,0,83,single phase wind generatorthis single phase wind generator unsing battry converetor invertor also stepup transformer get vpower conversion controlpower electronics,"['single', 'phase', 'wind', 'generatorthis', 'single', 'phase', 'wind', 'generator', 'unsing', 'battry', 'converetor', 'invertor', 'also', 'stepup', 'transformer', 'get', 'vpower', 'conversion', 'controlpower', 'electronics']",3
1302,50065,"A nice environment to visualize a simulation of multi-quadrotors that are controlled by PID.<p>This model combines the power of Simulink modelling and SimMechanics to develop a near-realistic and appealing visualization of multi-quadrotors that are controlled by simple PID loops. The quadrotor is designed in Solidworks with all the mass and inertial properties are defined there, then was exported to XML file to be read by SimMechanics. After some tuning of couple of nested PID loops, using a linearized model of the quadrotor and PID tuning tools in MATLAB, the quadrotor was able to follow some real-time trajectories smoothly. This, then, was lumped in one block, so it can represent an independently controlled quadrotor, with reference inputs (X/Y/Altitude global positions and Yaw) that to be followed, and some outputs for further analysis. This block can be copied as many times, as the Machine computation  capabilities may allow, to do mutli-agent control of independent quadrotors. I hope this helps in some sense!Here is a quick video of What this looks like. <a href=""https://www.youtube.com/watch?v=0bS-ic3Ox5kFeel"">https://www.youtube.com/watch?v=0bS-ic3Ox5kFeel</a> free to contact me.Note: make sure you read the requirements.</p>ardrone,pixhawk,matlab,multi quadrotors control,multiagent control,quadrotor control,simmechanics,simulink",402,32,5,0,429,nice environment visualize multi quadrotors control pid combine power simmechanics develop near realistic appeal visualization multi quadrotors control simple pid loop quadrotor design solidworks mass inertial property define exported xml file read simmechanics tune couple nest pid loop linearized quadrotor pid tuning tool quadrotor able follow real time trajectory smoothly lump one block represent independently control quadrotor reference input altitude global position yaw follow outputs analysis block copy many time machine computation capability may allow mutli agent control independent quadrotors hope help sense quick video look like youtube com watch kfeel free contact note make sure read requirement quadrotors,"['nice', 'environment', 'visualize', 'multi', 'quadrotors', 'control', 'pid', 'combine', 'power', 'simmechanics', 'develop', 'near', 'realistic', 'appeal', 'visualization', 'multi', 'quadrotors', 'control', 'simple', 'pid', 'loop', 'quadrotor', 'design', 'solidworks', 'mass', 'inertial', 'property', 'define', 'exported', 'xml', 'file', 'read', 'simmechanics', 'tune', 'couple', 'nest', 'pid', 'loop', 'linearized', 'quadrotor', 'pid', 'tuning', 'tool', 'quadrotor', 'able', 'follow', 'real', 'time', 'trajectory', 'smoothly', 'lump', 'one', 'block', 'represent', 'independently', 'control', 'quadrotor', 'reference', 'input', 'altitude', 'global', 'position', 'yaw', 'follow', 'outputs', 'analysis', 'block', 'copy', 'many', 'time', 'machine', 'computation', 'capability', 'may', 'allow', 'mutli', 'agent', 'control', 'independent', 'quadrotors', 'hope', 'help', 'sense', 'quick', 'video', 'look', 'like', 'youtube', 'com', 'watch', 'kfeel', 'free', 'contact', 'note', 'make', 'sure', 'read', 'requirement', 'quadrotors']",0
1303,50084,"To convert variable input and yet able to show constant power output  through PWM.<p>It is a modified model from ""power_simplealt"" , I wanted to convert the input to a variable input and yet able to show constant power output  through PWM. Still working on it as I'm kind of confused about why power remains constant at around Pe= 505MW. Any commends on things I could try? Thanks</p>electric_motor_control,power_conversion_control,power_electronics_control,constant power,pwm",30,0,1,0,39,convert variable input yet able show constant power output pwm modify power simplealt want convert input variable input yet able show constant power output pwm still work kind confused power remain constant around commends thing could try thankselectric motor controlpower conversion controlpower electronics controlconstant powerpwm,"['convert', 'variable', 'input', 'yet', 'able', 'show', 'constant', 'power', 'output', 'pwm', 'modify', 'power', 'simplealt', 'want', 'convert', 'input', 'variable', 'input', 'yet', 'able', 'show', 'constant', 'power', 'output', 'pwm', 'still', 'work', 'kind', 'confused', 'power', 'remain', 'constant', 'around', 'commends', 'thing', 'could', 'try', 'thankselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlconstant', 'powerpwm']",3
1304,50109,"Transient model of the three-phase squirrel cage induction motor in abc reference frame.<p>Transient model of the three-phase squirrel cage induction motor in abc reference frame.The equations used in this model are taken from ( Analysis of Electric Machinery and Drive Systems, Paul C. Krause. Second edition, pages 141-147).</p>electric_motor_control,power_electronics_control",174,12,4,0,192,transient three phase squirrel cage induction motor abc reference frame transient three phase squirrel cage induction motor abc reference frame equation take analysis electric machinery drive paul krause second edition page electric motor controlpower electronics control,"['transient', 'three', 'phase', 'squirrel', 'cage', 'induction', 'motor', 'abc', 'reference', 'frame', 'transient', 'three', 'phase', 'squirrel', 'cage', 'induction', 'motor', 'abc', 'reference', 'frame', 'equation', 'take', 'analysis', 'electric', 'machinery', 'drive', 'paul', 'krause', 'second', 'edition', 'page', 'electric', 'motor', 'controlpower', 'electronics', 'control']",3
1305,50117,"This model facilitates understanding the concept multi-machine stability<p>This is a model of the system in example 16.9 in Power System Analysis book, Stevenson. Three-phase fault is applied at time 20 s and the fault is cleared at 20.3 s. 20 s was chosen to study the fault effect after the system reaches steady state operating conditions. You can zoom in the time interval 20-20.3 in the scope to observe the rotor swinging under fault. The critical clearing time is approximately 0.55 s; it differs from that mentioned in the book since the system in this model employs PSS for each machine, which is more related to real world systems.</p>multi machine stability,power system,power system stability,two machine stability",129,9,3,0,167,facilitates understand concept multi machine stabilitythis example power analysis book stevenson three phase fault apply time fault clear choose study fault effect reach steady state operating condition zoom time interval scope observe rotor swing fault critical clearing time approximately differs mention book since employ pss machine relate real world multi machine stabilitypower systempower stabilitytwo machine stability,"['facilitates', 'understand', 'concept', 'multi', 'machine', 'stabilitythis', 'example', 'power', 'analysis', 'book', 'stevenson', 'three', 'phase', 'fault', 'apply', 'time', 'fault', 'clear', 'choose', 'study', 'fault', 'effect', 'reach', 'steady', 'state', 'operating', 'condition', 'zoom', 'time', 'interval', 'scope', 'observe', 'rotor', 'swing', 'fault', 'critical', 'clearing', 'time', 'approximately', 'differs', 'mention', 'book', 'since', 'employ', 'pss', 'machine', 'relate', 'real', 'world', 'multi', 'machine', 'stabilitypower', 'systempower', 'stabilitytwo', 'machine', 'stability']",5
1306,50128,"The toolbox of VisualEA - a simple Simulink library to model evolutionary optimizers<p>With VisualEA you can easily create functional models of evolutionary algorithms (EA), its variations, and other similar optimizers from the evolutionary computing family, such as particle swarm optimization and estimation of distribution algorithms. Simply choose blocks of operators (selection, crossover,...) provided within the library and connect them into the evolution loop of your choice, then insert the system or external Matlab function to be optimized into the prepared fitness function block. For more detail see <a href=""https://cyber.felk.cvut.cz/research/theses/papers/111.pdf"">https://cyber.felk.cvut.cz/research/theses/papers/111.pdf</a></p>estimation of distribution,evolutionary algorithms,optimization,particle swarm optimization,simulink",324,79,4,0,242,toolbox visualea simple evolutionary optimizerswith visualea easily create functional evolutionary algorithms variation similar optimizers evolutionary compute family particle swarm optimization estimation distribution algorithm simply choose block operator selection crossover provide within connect evolution loop choice insert external function optimize prepared fitness function block detail see cyber felk cvut research theses paper pdfestimation swarm,"['toolbox', 'visualea', 'simple', 'evolutionary', 'optimizerswith', 'visualea', 'easily', 'create', 'functional', 'evolutionary', 'algorithms', 'variation', 'similar', 'optimizers', 'evolutionary', 'compute', 'family', 'particle', 'swarm', 'optimization', 'estimation', 'distribution', 'algorithm', 'simply', 'choose', 'block', 'operator', 'selection', 'crossover', 'provide', 'within', 'connect', 'evolution', 'loop', 'choice', 'insert', 'external', 'function', 'optimize', 'prepared', 'fitness', 'function', 'block', 'detail', 'see', 'cyber', 'felk', 'cvut', 'research', 'theses', 'paper', 'pdfestimation', 'swarm']",5
1307,50131,"Boost Converter<p>Boost Converter closed and open loop</p>power_conversion_control,power_electronics_control,fact,power systems",26,2,3,0,28,boost converterboost converter close open looppower conversion controlpower electronics,"['boost', 'converterboost', 'converter', 'close', 'open', 'looppower', 'conversion', 'controlpower', 'electronics']",6
1308,50192,"get two flow temp out<p>get two flow temp out based on the heat transfer and temp in</p>heatexchanger,counterflow_heatexchanger",104,9,2,0,111,get two flow temp outget two flow temp base heat transfer temp heatexchanger,"['get', 'two', 'flow', 'temp', 'outget', 'two', 'flow', 'temp', 'base', 'heat', 'transfer', 'temp', 'heatexchanger']",0
1309,50207,"Induction Motor Controller Using Based On Lyaponov nonlinear controller<p>Non-Linear controller for induction motor using based on lyaponov controller</p>electric_motor_control,power_electronics_control,controller,induction,lyaponov,motor,nonlinear,simulink",57,1,2,0,77,induction motor controller base lyaponov nonlinear controllernon linear controller induction motor base lyaponov motor controlpower electronics,"['induction', 'motor', 'controller', 'base', 'lyaponov', 'nonlinear', 'controllernon', 'linear', 'controller', 'induction', 'motor', 'base', 'lyaponov', 'motor', 'controlpower', 'electronics']",1
1310,50216,"Illustration of H-infinity loop-shaping with Robust Control Toolbox<p>This example illustrates the use of Robust Control Toolbox to design a controller using the Glover-McFarlane H-infinity loop-shaping method.  This control design method is conceptually similar to Bode's frequency-response methods. H-infinity loop-shaping can be applied to multivariable design problems, and uses optimization to produce robust performance and stabilization.There are two Simulink models: one is a standalone plant model for linearization, and the other is the full closed-loop model with the closed-loop controller and an external disturbance model.  The design is performed using a MATLAB script - this works best when run in cell mode, since it generates lots of plots on the way.This example is intended as a teaching aid, and I would be very interested in feedback that I can use to improve it.The example uses the shipping F14 demo model supplied by MathWorks, which I would like to acknowledge - the copyright for that belongs to them, not to me!</p>control design,robust control,simulink,teaching aids",164,11,3,0,177,illustration infinity loop shape robust control toolboxthis example illustrate robust control toolbox design controller glover mcfarlane infinity loop shape method control design method conceptually similar bode frequency response method infinity loop shape apply multivariable design problem optimization produce robust performance stabilization two one standalone plant linearization full close loop close loop controller external disturbance design perform script work best run cell mode since generates lot plot way example intend teaching aid would interested feedback improve example ship demo supply mathworks would like acknowledge copyright belongs control designrobust aid,"['illustration', 'infinity', 'loop', 'shape', 'robust', 'control', 'toolboxthis', 'example', 'illustrate', 'robust', 'control', 'toolbox', 'design', 'controller', 'glover', 'mcfarlane', 'infinity', 'loop', 'shape', 'method', 'control', 'design', 'method', 'conceptually', 'similar', 'bode', 'frequency', 'response', 'method', 'infinity', 'loop', 'shape', 'apply', 'multivariable', 'design', 'problem', 'optimization', 'produce', 'robust', 'performance', 'stabilization', 'two', 'one', 'standalone', 'plant', 'linearization', 'full', 'close', 'loop', 'close', 'loop', 'controller', 'external', 'disturbance', 'design', 'perform', 'script', 'work', 'best', 'run', 'cell', 'mode', 'since', 'generates', 'lot', 'plot', 'way', 'example', 'intend', 'teaching', 'aid', 'would', 'interested', 'feedback', 'improve', 'example', 'ship', 'demo', 'supply', 'mathworks', 'would', 'like', 'acknowledge', 'copyright', 'belongs', 'control', 'designrobust', 'aid']",4
1311,50346,"A generator feed by a constant speed of 1800rpm but electrical power isn't constant why?<p>The circuit consist of a generator running at constant speed input of 1800rpm and is required to power a load of 50kW, 380 V rms, 60Hz. Although I'm feeding in constant speed but the Electrical power, Pe is still fluctuating as seen in the magnified picture on the right. Is there any type of filters or modifications I should do to correct the model? Any comments on the model is greatly appreciated. Thanks :)</p>constant power,filtering",32,0,1,0,50,generator feed constant speed rpm electrical power constant circuit consist generator run constant speed input rpm require power load rms although feed constant speed electrical power still fluctuate see magnified picture right type filter modification correct comment greatly appreciate thanks constant powerfiltering,"['generator', 'feed', 'constant', 'speed', 'rpm', 'electrical', 'power', 'constant', 'circuit', 'consist', 'generator', 'run', 'constant', 'speed', 'input', 'rpm', 'require', 'power', 'load', 'rms', 'although', 'feed', 'constant', 'speed', 'electrical', 'power', 'still', 'fluctuate', 'see', 'magnified', 'picture', 'right', 'type', 'filter', 'modification', 'correct', 'comment', 'greatly', 'appreciate', 'thanks', 'constant', 'powerfiltering']",4
1312,50351,"FO-ESC improves the performance of IO-ESC using fractional order operators<p>In this simulation a new extremum seeking approach called ""Fractional Order Extremum Seeking Control (FO-ESC)"" is simulated and the ability of this algorithm in finding the peak power point of a PV panel is demonstrated. According to various researchers, a well tuned FO-ESC has a better efficiency compared to other ESC algorithms like Integer Order ESC, P&amp;O or IC. This simulation needs c-compiler (to setup a c-compiler in your matlab use mex -setup). For more information please check:1- Hadi Malek, YangQuan Chen, ""Fractional Order Power Point Tracking"" 2- Hadi Malek, Sara Dadras, YangQuan Chen, ""A fractional order maximum power point tracker: Stability analysis and experiments"".3- Hadi Malek, YangQuen Chen, A single-stage three-phase grid-connected photovoltaic system with fractional order MPPT</p>foesc,fractional order extremum seeking control,fractional order maximum power point tracker,fractional order optimization,maximum power point tracking,nonlinear optimization,tracking,power_conversion_control,power_electronics_control",71,5,3,0,88,esc improves performance esc fractional order operatorsin new extremum seek approach call fractional order extremum seek control esc ability algorithm find peak power point panel demonstrate accord various researcher well tune esc good efficiency compare esc algorithms like integer order esc amp need compiler setup compiler mex setup information please check hadi malek yangquan chen fractional order power point track hadi malek sara dadras yangquan chen fractional order maximum power point tracker stability analysis experiment hadi malek yangquen chen single stage three phase grid connect photovoltaic fractional order order extremum seek order maximum power point order power point conversion controlpower electronics control,"['esc', 'improves', 'performance', 'esc', 'fractional', 'order', 'operatorsin', 'new', 'extremum', 'seek', 'approach', 'call', 'fractional', 'order', 'extremum', 'seek', 'control', 'esc', 'ability', 'algorithm', 'find', 'peak', 'power', 'point', 'panel', 'demonstrate', 'accord', 'various', 'researcher', 'well', 'tune', 'esc', 'good', 'efficiency', 'compare', 'esc', 'algorithms', 'like', 'integer', 'order', 'esc', 'amp', 'need', 'compiler', 'setup', 'compiler', 'mex', 'setup', 'information', 'please', 'check', 'hadi', 'malek', 'yangquan', 'chen', 'fractional', 'order', 'power', 'point', 'track', 'hadi', 'malek', 'sara', 'dadras', 'yangquan', 'chen', 'fractional', 'order', 'maximum', 'power', 'point', 'tracker', 'stability', 'analysis', 'experiment', 'hadi', 'malek', 'yangquen', 'chen', 'single', 'stage', 'three', 'phase', 'grid', 'connect', 'photovoltaic', 'fractional', 'order', 'order', 'extremum', 'seek', 'order', 'maximum', 'power', 'point', 'order', 'power', 'point', 'conversion', 'controlpower', 'electronics', 'control']",4
1313,50356,"The reference frame speed (w) can be chosen as the user needs<p>Induction Motor with arbitrary reference frame,The reference frame speed (w) can be chosen as the user needs ,it can be zero ,synchronous speed ,rotor speed ,...etc.,The model was taken from ""Paul C.Krause, Analysis of electric machinery and drive system, Second Edition"",Chapter 4</p>electric_motor_control,power_electronics_control,dq axis,induction,motor,reference frame",71,1,2,0,100,reference frame speed choose user needsinduction motor arbitrary reference framethe reference frame speed choose user need zero synchronous speed rotor speed etc take paul krause analysis electric machinery drive second edition chapter electric motor controlpower electronics controldq frame,"['reference', 'frame', 'speed', 'choose', 'user', 'needsinduction', 'motor', 'arbitrary', 'reference', 'framethe', 'reference', 'frame', 'speed', 'choose', 'user', 'need', 'zero', 'synchronous', 'speed', 'rotor', 'speed', 'etc', 'take', 'paul', 'krause', 'analysis', 'electric', 'machinery', 'drive', 'second', 'edition', 'chapter', 'electric', 'motor', 'controlpower', 'electronics', 'controldq', 'frame']",3
1314,50358,"Simulink block for online trajectory generation using the Reflexxes Motion Library.<p>Simulink block for online trajectory generation using the Reflexxes Motion Library. The block provides instantaneous setpoint generation capabilities for example motion control systems. C++ code can be generated from the block using the Simulink Coder.</p>motion,reflexxes,setpoint generator,simulink,trajectory generator",10,0,1,0,9,block online trajectory generation reflexxes motion block online trajectory generation reflexxes motion block provide instantaneous setpoint generation capability example motion control code generate block coder generator,"['block', 'online', 'trajectory', 'generation', 'reflexxes', 'motion', 'block', 'online', 'trajectory', 'generation', 'reflexxes', 'motion', 'block', 'provide', 'instantaneous', 'setpoint', 'generation', 'capability', 'example', 'motion', 'control', 'code', 'generate', 'block', 'coder', 'generator']",7
1315,50362,"This is a simple model to illustrate the concept of SVPWM<p>This is simple model of SVPWM. the concept of the SVPWM is demonstrated while comparing it to the Simulink standard model. It is easy to use and understand. Reference voltage vector is computed from sinusoidal voltages. The matlab function is used to compute the switching times of IGBTs (Ta, Tb,T0).Symmetrical switching method is used.</p>electric_motor_control,power_conversion_control,power_electronics_control,control design,modeling,modulation,power,power electronics,simulation",179,4,3,0,220,simple illustrate concept svpwmthis simple svpwm concept svpwm demonstrate compare standard easy understand reference voltage vector compute sinusoidal voltage function compute switch time igbts tbt symmetrical switching method electric motor controlpower conversion controlpower electronics controlcontrol,"['simple', 'illustrate', 'concept', 'svpwmthis', 'simple', 'svpwm', 'concept', 'svpwm', 'demonstrate', 'compare', 'standard', 'easy', 'understand', 'reference', 'voltage', 'vector', 'compute', 'sinusoidal', 'voltage', 'function', 'compute', 'switch', 'time', 'igbts', 'tbt', 'symmetrical', 'switching', 'method', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",3
1316,50365,"This model separates the sequence components into positive and negative<p>This model separates the positive sequence from unsymmetrical voltages /currents  without introducing any delay. This can be used in a controller to extract the positive sequence component from unsymmetrical voltages /currents. The dynamic performance of this filter is quite good.</p>filter,negative sequence,positive sequence,power,sequence components",92,5,3,0,109,separate sequence component positive negativethis separate positive sequence unsymmetrical voltage current without introduce delay controller extract positive sequence component unsymmetrical voltage current dynamic performance filter quite good filternegative component,"['separate', 'sequence', 'component', 'positive', 'negativethis', 'separate', 'positive', 'sequence', 'unsymmetrical', 'voltage', 'current', 'without', 'introduce', 'delay', 'controller', 'extract', 'positive', 'sequence', 'component', 'unsymmetrical', 'voltage', 'current', 'dynamic', 'performance', 'filter', 'quite', 'good', 'filternegative', 'component']",4
1317,50367,"This block simulates the Sinusoidal PWM with third harmonic injection<p>This block simulates the Sinusoidal Pulse width modulation with third harmonic injection. The third harmonic injection increases the output voltage by 1.15 times the SPWM. Using the manual switches in the model, one can change between the SPWM and TTHIPWM method.  This model is easy to use and basically used to demonstare the basics and concept of Sinusoidal Pulse Width Modulation technique.</p>electric_motor_control,power_conversion_control,power_electronics_control,modulation,power,power electronics,sinusoidal pwm,third harmonic",47,1,2,0,68,block sinusoidal pwm third harmonic injectionthis block sinusoidal pulse width modulation third harmonic injection third harmonic injection increase output voltage time spwm manual switch one change spwm tthipwm method easy basically demonstare basic concept sinusoidal pulse width modulation technique electric motor controlpower conversion controlpower electronics pwmthird harmonic,"['block', 'sinusoidal', 'pwm', 'third', 'harmonic', 'injectionthis', 'block', 'sinusoidal', 'pulse', 'width', 'modulation', 'third', 'harmonic', 'injection', 'third', 'harmonic', 'injection', 'increase', 'output', 'voltage', 'time', 'spwm', 'manual', 'switch', 'one', 'change', 'spwm', 'tthipwm', 'method', 'easy', 'basically', 'demonstare', 'basic', 'concept', 'sinusoidal', 'pulse', 'width', 'modulation', 'technique', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'pwmthird', 'harmonic']",3
1318,50382,"This inverter model uses the DPWM0 modulation technique<p>This inverter model uses the (discontinuous)DPWM0 modulation technique. The DPWM0 is a variation of SVPWM technique for reducing the switching losses of the inverters.  A simple PI based voltage controller is used in the model. The tuning of the inverter LC filter paramters is not optimal but over all performace of the model is good.</p>dpwm0,inverter,power,power electronics,space vector",138,5,4,0,173,inverter dpwm modulation techniquethis inverter discontinuous dpwm modulation technique dpwm variation svpwm technique reduce switch loss inverter simple base voltage controller tune inverter filter paramters optimal performace good dpwm vector,"['inverter', 'dpwm', 'modulation', 'techniquethis', 'inverter', 'discontinuous', 'dpwm', 'modulation', 'technique', 'dpwm', 'variation', 'svpwm', 'technique', 'reduce', 'switch', 'loss', 'inverter', 'simple', 'base', 'voltage', 'controller', 'tune', 'inverter', 'filter', 'paramters', 'optimal', 'performace', 'good', 'dpwm', 'vector']",4
1319,50393,"First order linear system simulation with different tools<p>This is one of the first tutorials as part of a dynamic optimization course at <a href=""http://apmonitor.com/do"">http://apmonitor.com/do</a>  It simulates the relationship between an input (p) and output (y) with an example of a force balance on an automobile. Below is a link to a corresponding tutorial video.<a href=""https://youtu.be/y0ERNz5Kms8"">https://youtu.be/y0ERNz5Kms8</a></p>apmonitor,comparison,dynamics,tutorial",13,0,1,0,16,first order linear different toolsthis one first tutorial part dynamic optimization course http apmonitor com relationship input output example force balance automobile link correspond tutorial video youtu ernz,"['first', 'order', 'linear', 'different', 'toolsthis', 'one', 'first', 'tutorial', 'part', 'dynamic', 'optimization', 'course', 'http', 'apmonitor', 'com', 'relationship', 'input', 'output', 'example', 'force', 'balance', 'automobile', 'link', 'correspond', 'tutorial', 'video', 'youtu', 'ernz']",7
1320,50396,"design 3 phase filter to get voltage output of 50hz with THD less than 5% at the three phases.<p>the below one is a part of slip power recovery scheme:I have made a 3 phase bridge rectifier to convert 3 phase input voltage to a dc.the output of the rectifier is then connected to 3 phase inverter along with 3 phase filter.I am not able to design a filter to get voltage output of 50 hz with total harmonic distortion less than 5% at the three phases.</p>power_conversion_control,power_electronics_control,3 phase bridge rectifier,3 phase filter,3 phase inverter,3phasefilter,example,filter design,inverter,matlab,rectifier,simulation,slip power recovery scheme,spwm",41,0,1,0,47,design phase filter get voltage output thd less three phase one part slip power recovery scheme make phase bridge rectifier convert phase input voltage output rectifier connect phase inverter along phase filter able design filter get voltage output total harmonic distortion less three phase power conversion controlpower electronics control phase bridge rectifier phase filter phase inverter power recovery schemespwm,"['design', 'phase', 'filter', 'get', 'voltage', 'output', 'thd', 'less', 'three', 'phase', 'one', 'part', 'slip', 'power', 'recovery', 'scheme', 'make', 'phase', 'bridge', 'rectifier', 'convert', 'phase', 'input', 'voltage', 'output', 'rectifier', 'connect', 'phase', 'inverter', 'along', 'phase', 'filter', 'able', 'design', 'filter', 'get', 'voltage', 'output', 'total', 'harmonic', 'distortion', 'less', 'three', 'phase', 'power', 'conversion', 'controlpower', 'electronics', 'control', 'phase', 'bridge', 'rectifier', 'phase', 'filter', 'phase', 'inverter', 'power', 'recovery', 'schemespwm']",1
1321,50419,"Full order / detailed model of the synchronous generator including the controls<p>This model simulates the detailed model of synchronous generator. This is full order model of the machine. AVR (Automatic voltage regulator) and speed governor are also modelled. Please follow the steps 1. Run the script2. enter the time at which the machine is synchronized to the mains3. run the modelObserve the transients during the synchronization. All the parameters of the machine are given in pu. the generator is modelled in dq reference frame. The name of the  reference book from which the equations of the machine are derived is also given in the matlab script.</p>dynamics,generator,power,simulation,synchronous",299,26,4,0,329,full order detail synchronous generator include controlsthis detail synchronous generator full order machine avr automatic voltage regulator speed governor also please follow step run script enter time machine synchronize main run modelobserve transient synchronization parameter machine give generator reference frame name reference book equation machine derive also give script,"['full', 'order', 'detail', 'synchronous', 'generator', 'include', 'controlsthis', 'detail', 'synchronous', 'generator', 'full', 'order', 'machine', 'avr', 'automatic', 'voltage', 'regulator', 'speed', 'governor', 'also', 'please', 'follow', 'step', 'run', 'script', 'enter', 'time', 'machine', 'synchronize', 'main', 'run', 'modelobserve', 'transient', 'synchronization', 'parameter', 'machine', 'give', 'generator', 'reference', 'frame', 'name', 'reference', 'book', 'equation', 'machine', 'derive', 'also', 'give', 'script']",7
1322,50420,"Grid connected single phase PV Inverter<p>This is the model of grid connected single phase PV inverter using the vector control technique. The d component controls the active current while the q component controls the reactive current. The control also employs the feed-forward / cross-coupling terms for the current controller. Two events are simulated in the model 1. at t = 0.7s, a sudden increase of 4.5 kW of DC power occurs2. at t = 1.2s, a change of reference for the reactive current occurs. iq_set is changed to 0.2 from 0 pu.The design of LCL filter is also illustrated in the m file</p>electric_motor_control,power_conversion_control,power_electronics_control,control,control design,power,power electronics,pv,simulation,single phase",201,19,5,0,197,grid connect single phase inverterthis grid connect single phase inverter vector control technique component control active current component control reactive current control also employ feed forward cross coupling term current controller two event sudden increase power occur change reference reactive current occurs set change design lcl filter also illustrate fileelectric motor controlpower conversion controlpower electronics phase,"['grid', 'connect', 'single', 'phase', 'inverterthis', 'grid', 'connect', 'single', 'phase', 'inverter', 'vector', 'control', 'technique', 'component', 'control', 'active', 'current', 'component', 'control', 'reactive', 'current', 'control', 'also', 'employ', 'feed', 'forward', 'cross', 'coupling', 'term', 'current', 'controller', 'two', 'event', 'sudden', 'increase', 'power', 'occur', 'change', 'reference', 'reactive', 'current', 'occurs', 'set', 'change', 'design', 'lcl', 'filter', 'also', 'illustrate', 'fileelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'phase']",3
1323,50422,"Active and reactive power regulation in a grid integrated with wind power plant<p>Active power controller regulates frequency whereas reactive power controller regulates voltage providing required reactive power. Grid consists of infinite grid with 120 kV voltage source, 150 mVA synchronous machine, 90e6 and 30e6 loads, type_I, DFIG, PMSG based wind power plant.</p>active_power,dfig,frequency_regulation,pmsg,power,reactive_power,simulation,simulink,type1_wind,wind",2701,113,8,0,2905,active reactive power regulation grid integrate wind power plantactive power controller regulate frequency whereas reactive power controller regulate voltage providing require reactive power grid consist infinite grid voltage source mva synchronous machine load type dfig pmsg base wind power plant active windwind,"['active', 'reactive', 'power', 'regulation', 'grid', 'integrate', 'wind', 'power', 'plantactive', 'power', 'controller', 'regulate', 'frequency', 'whereas', 'reactive', 'power', 'controller', 'regulate', 'voltage', 'providing', 'require', 'reactive', 'power', 'grid', 'consist', 'infinite', 'grid', 'voltage', 'source', 'mva', 'synchronous', 'machine', 'load', 'type', 'dfig', 'pmsg', 'base', 'wind', 'power', 'plant', 'active', 'windwind']",3
1324,50423,"This model extracts the harmonics of any order from 50 Hz component.<p>This model extracts the harmonics of any order from 50 Hz component. You have to specify the harmonic order which needs to be extracted. To use this filter, it is important to know in advance which harmonic orders can occur in your system.</p>control,harmoincs,harmonic elimination,harmonics filter,power,power system",88,6,3,0,106,extract harmonic order component extract harmonic order component specify harmonic order need extract filter important know advance harmonic order occur,"['extract', 'harmonic', 'order', 'component', 'extract', 'harmonic', 'order', 'component', 'specify', 'harmonic', 'order', 'need', 'extract', 'filter', 'important', 'know', 'advance', 'harmonic', 'order', 'occur']",0
1325,50428,"The sine wave is converted into a cosine one<p>By changing the value in the constant ,the value of shifting can also be changed.</p>power electronics,signal processing,simulation",9,0,1,0,9,sine wave convert cosine oneby change value constant value shift also change power,"['sine', 'wave', 'convert', 'cosine', 'oneby', 'change', 'value', 'constant', 'value', 'shift', 'also', 'change', 'power']",4
1326,50432,"Compares electrical demand and generation data to control when battery charges.<p>Random number generators output electrical consumption vs. PV generation (to be replaced by actual data).When solar PV generation is greater than the demand, the ideal switch is closed allowing the battery to charge and store the theoretical excess PV generation. Otherwise (demand is greater) the switch opens to stop charging the battery. The battery will stop charging as it approaches 100 % SOC.</p>battery_system_management,power_electronics_control,battery,charge control,pv,state of charge",28,1,2,0,23,compare electrical demand generation data control battery charge random number generator output electrical consumption generation replace actual data solar generation great demand ideal switch close allow battery charge store theoretical excess generation otherwise demand great switch open stop charge battery battery stop charge approach soc battery managementpower electronics controlpvstate charge,"['compare', 'electrical', 'demand', 'generation', 'data', 'control', 'battery', 'charge', 'random', 'number', 'generator', 'output', 'electrical', 'consumption', 'generation', 'replace', 'actual', 'data', 'solar', 'generation', 'great', 'demand', 'ideal', 'switch', 'close', 'allow', 'battery', 'charge', 'store', 'theoretical', 'excess', 'generation', 'otherwise', 'demand', 'great', 'switch', 'open', 'stop', 'charge', 'battery', 'battery', 'stop', 'charge', 'approach', 'soc', 'battery', 'managementpower', 'electronics', 'controlpvstate', 'charge']",4
1327,50438,SIMPLE FUEL CELL DESIGN<p>This is a simple mathematical modelling of fuel cell using the nernst equation and considering no losses</p>simulation,20,0,1,0,20,simple fuel cell designthis simple mathematical fuel cell nernst equation consider,"['simple', 'fuel', 'cell', 'designthis', 'simple', 'mathematical', 'fuel', 'cell', 'nernst', 'equation', 'consider']",5
1328,50441,"PWM with adjustable freqency and duty cycle.<p>This model generates PWM waveform using logic which involve s delay blocks only. There is no need to use any other source blocks to get PWM wave.</p>electric_motor_control,power_conversion_control,power_electronics_control,pwm,simulink",32,1,2,0,29,pwm adjustable freqency duty cycle generate pwm waveform logic involve delay block need source block get pwm wave electric motor controlpower conversion controlpower electronics,"['pwm', 'adjustable', 'freqency', 'duty', 'cycle', 'generate', 'pwm', 'waveform', 'logic', 'involve', 'delay', 'block', 'need', 'source', 'block', 'get', 'pwm', 'wave', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
1329,50453,"The ac output voltage varied wrt to change in duty cycle<p>AC voltage regulator varies the output voltage with respect to change in duty cycle of Pulse width to IGBT. four (4)  switch are used for better regulation and negligible variation  according to theoretically calculation.</p>electric_motor_control,power_conversion_control,power_electronics_control,power electronics,voltage regulator",55,2,2,0,69,output voltage vary wrt change duty cycleac voltage regulator varies output voltage respect change duty cycle pulse width igbt four switch good regulation negligible variation accord theoretically calculation electric motor controlpower conversion controlpower electronics controlpower regulator,"['output', 'voltage', 'vary', 'wrt', 'change', 'duty', 'cycleac', 'voltage', 'regulator', 'varies', 'output', 'voltage', 'respect', 'change', 'duty', 'cycle', 'pulse', 'width', 'igbt', 'four', 'switch', 'good', 'regulation', 'negligible', 'variation', 'accord', 'theoretically', 'calculation', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'regulator']",3
1330,50459,"Simulation Solar Panel and trying MPPT algorithm, with InC method<p>pv,MPPT,InC</p>power_conversion_control,power_electronics_control,simulation",234,13,3,0,246,solar panel try mppt algorithm inc conversion controlpower electronics,"['solar', 'panel', 'try', 'mppt', 'algorithm', 'inc', 'conversion', 'controlpower', 'electronics']",1
1331,50512,"Model on basis of IEEE 13 node feeder but without a voltage regulator block.<p>It only models a 13 node IEEE feeder but the load flow results still not matched completely. Also voltage regulator block not present as this was for PV integration that could change settings of voltage regulator.  Load flow results 8/10 accurate in first run. Keep checking. ALSO----Kindly, Kindly convert all angles in the load model blocks given as arctan(P/Q) into( (pi/2) - (pi/180)*Angle in degrees) to convert all angles in radians.</p>13 bus,ieee,ieee 13 bus,ieee bus,distribution,feeder model,radial distribution feeder",573,35,3,0,571,basis iee node feeder without voltage regulator block node iee feeder load flow result still match completely also voltage regulator block present integration could change setting voltage regulator load flow result accurate first run keep checking also kindly kindly convert angle load block give arctan angle degree convert angle radian busieeiee busiee modelradial distribution feeder,"['basis', 'iee', 'node', 'feeder', 'without', 'voltage', 'regulator', 'block', 'node', 'iee', 'feeder', 'load', 'flow', 'result', 'still', 'match', 'completely', 'also', 'voltage', 'regulator', 'block', 'present', 'integration', 'could', 'change', 'setting', 'voltage', 'regulator', 'load', 'flow', 'result', 'accurate', 'first', 'run', 'keep', 'checking', 'also', 'kindly', 'kindly', 'convert', 'angle', 'load', 'block', 'give', 'arctan', 'angle', 'degree', 'convert', 'angle', 'radian', 'busieeiee', 'busiee', 'modelradial', 'distribution', 'feeder']",0
1332,50515,"can any one rectify the error<p>The system can be applied to adjacent feeders to compensate for supply-voltage and load current imperfections on the main feeder and full compensation of supply-voltage imperfections on the other feeders. In the proposed configuration, all converters are connected back to back on the DC side and share a common DC-link capacitor. Therefore, power can be transferred from one feeder to adjacent feeders to compensate for sag/swell and interruption. The performance of the MC-UPQC as well as the adopted control algorithm is illustrated by simulation. The results obtained in PSCAD/EMTDC on a two-bus/two-feeder system show the effectiveness of the proposed configuration.</p>power_conversion_control,power_electronics_control,simulation",586,70,4,0,564,one rectify errorthe applied adjacent feeder compensate supply voltage load current imperfection main feeder full compensation supply voltage imperfection feeder propose configuration converter connect back back side share common link capacitor therefore power transfer one feeder adjacent feeder compensate sag swell interruption performance upqc well adopt control algorithm illustrate result obtain pscad emtdc two bus two feeder show effectiveness propose configuration power conversion controlpower electronics,"['one', 'rectify', 'errorthe', 'applied', 'adjacent', 'feeder', 'compensate', 'supply', 'voltage', 'load', 'current', 'imperfection', 'main', 'feeder', 'full', 'compensation', 'supply', 'voltage', 'imperfection', 'feeder', 'propose', 'configuration', 'converter', 'connect', 'back', 'back', 'side', 'share', 'common', 'link', 'capacitor', 'therefore', 'power', 'transfer', 'one', 'feeder', 'adjacent', 'feeder', 'compensate', 'sag', 'swell', 'interruption', 'performance', 'upqc', 'well', 'adopt', 'control', 'algorithm', 'illustrate', 'result', 'obtain', 'pscad', 'emtdc', 'two', 'bus', 'two', 'feeder', 'show', 'effectiveness', 'propose', 'configuration', 'power', 'conversion', 'controlpower', 'electronics']",4
1333,50516,"Includes dial and bar gauges that can be used to display dynamic information on SimMechanics models.<p>This submission includes bar and dial gauges that can be included in SimMechanics models to display Simulink signals. The fullscale range of the signal can be specified as well as filtering bandwidth.  The size of the gauge can be adjusted to fit the scale of the model.  An example is provided that demonstrates their use in static positions as well as attached to objects.</p>gauges,gage,gauge,simmechanics,visualization",18,4,1,4,21,include dial bar gauge display dynamic information simmechanics submission include bar dial gauge include simmechanics display signal fullscale range signal specify well filter bandwidth size gauge adjust fit scale example provide demonstrate static position well attach object,"['include', 'dial', 'bar', 'gauge', 'display', 'dynamic', 'information', 'simmechanics', 'submission', 'include', 'bar', 'dial', 'gauge', 'include', 'simmechanics', 'display', 'signal', 'fullscale', 'range', 'signal', 'specify', 'well', 'filter', 'bandwidth', 'size', 'gauge', 'adjust', 'fit', 'scale', 'example', 'provide', 'demonstrate', 'static', 'position', 'well', 'attach', 'object']",0
1334,50523,"Multi-DOF robot manipulator designer and simulator<p>model the kinematics and dynamics of robot manipulators. A complete description of the procedure to model and control a Multi-DOF 3D robot manipulator is detailed and simulated using designed toolbox in MATLAB. Examples of path planning, symbolic dynamic derivation and control strategy designs are presented. Advanced path planning by constrained optimization has been developed and verified by this toolbox. One of the advanced position controllers for robot manipulators is the Sliding Mode Control with desired gravity and friction compensation which has been applied and verified in the toolbox. Force contacts and collisions are modeled in nonlinear near real situations. This helps designing more robust force controlled systems.</p>robot,robotics,simulation,sliding mode control",60,3,2,0,79,multi dof robot manipulator designer kinematics dynamic robot manipulator complete description procedure control multi dof robot manipulator detail design toolbox example path plan symbolic dynamic derivation control strategy design present advanced path planning constrain optimization develop verified toolbox one advanced position controller robot manipulator slide mode control desire gravity friction compensation apply verified toolbox force contact collision nonlinear near real situation help design robust force control mode control,"['multi', 'dof', 'robot', 'manipulator', 'designer', 'kinematics', 'dynamic', 'robot', 'manipulator', 'complete', 'description', 'procedure', 'control', 'multi', 'dof', 'robot', 'manipulator', 'detail', 'design', 'toolbox', 'example', 'path', 'plan', 'symbolic', 'dynamic', 'derivation', 'control', 'strategy', 'design', 'present', 'advanced', 'path', 'planning', 'constrain', 'optimization', 'develop', 'verified', 'toolbox', 'one', 'advanced', 'position', 'controller', 'robot', 'manipulator', 'slide', 'mode', 'control', 'desire', 'gravity', 'friction', 'compensation', 'apply', 'verified', 'toolbox', 'force', 'contact', 'collision', 'nonlinear', 'near', 'real', 'situation', 'help', 'design', 'robust', 'force', 'control', 'mode', 'control']",0
1335,50532,variation of pv characteristics with variation of temp and irradiance<p>it provides the information about the variation of pv cell characteristics with the change in temp and irradiance</p>simulation,118,7,3,0,131,variation characteristic variation temp irradianceit provide information variation cell characteristic change temp,"['variation', 'characteristic', 'variation', 'temp', 'irradianceit', 'provide', 'information', 'variation', 'cell', 'characteristic', 'change', 'temp']",5
1336,50537,"Second-order MRAC example<p>Second-order MRAC example.Please use it well~</p>adaptive control,model reference,model reference adaptive control,mrac",65,4,2,0,80,second order mrac examplesecond order mrac example please well adaptive controlmodel referencemodel reference adaptive controlmrac,"['second', 'order', 'mrac', 'examplesecond', 'order', 'mrac', 'example', 'please', 'well', 'adaptive', 'controlmodel', 'referencemodel', 'reference', 'adaptive', 'controlmrac']",0
1337,50581,"generator<p>genereador de pulso modulado</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",9,0,1,0,12,pulso motor controlpower conversion controlpower electronics,"['pulso', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1338,50585,"PV system+boost+load<p>in this model you can simulate PV model and boost converter with ressistive load, you can also change the irradiation,</p>power",159,3,3,0,150,boost loadin boost converter ressistive load also change,"['boost', 'loadin', 'boost', 'converter', 'ressistive', 'load', 'also', 'change']",3
1339,50586,QAM matlab simulink block<p>QAM simulation with the transmitted QAM modulated signal. It also shows the error rate generated output with 20db awgn noise</p>simulink,8,0,1,0,8,qam blockqam transmit qam modulate signal also show error rate generate output awgn,"['qam', 'blockqam', 'transmit', 'qam', 'modulate', 'signal', 'also', 'show', 'error', 'rate', 'generate', 'output', 'awgn']",0
1340,50631,onduleur<p>it figure out how to commande an onduleur with MLI</p>simulation,29,1,2,0,30,onduleurit figure commande onduleur,"['onduleurit', 'figure', 'commande', 'onduleur']",2
1341,50647,"mitigation of ssr in series compensated transmissionline<p>""Subsynchronous resonance is an electric power system condition wherethe electric network exchanges energy with a turbine at one or more of thenatural 'f~equencies of the combined system below the synchronous frequency ofthe system"" .</p>simulink",29,1,2,0,37,mitigation ssr series compensate subsynchronous resonance electric power condition wherethe electric network exchange energy turbine one thenatural equencies combine synchronous frequency ofthe,"['mitigation', 'ssr', 'series', 'compensate', 'subsynchronous', 'resonance', 'electric', 'power', 'condition', 'wherethe', 'electric', 'network', 'exchange', 'energy', 'turbine', 'one', 'thenatural', 'equencies', 'combine', 'synchronous', 'frequency', 'ofthe']",4
1342,50648,"Hybrid Neuro Fuzzy Intelligent controller based MPPT for PV Power System<p>Hybrid Neuro Fuzzy Intelligent controller based MPPT for PV Power System</p>control design,hybrid anfis,power electronics,renewable energy,power_conversion_control,power_electronics_control",186,8,4,0,208,hybrid neuro fuzzy intelligent controller base mppt power systemhybrid neuro fuzzy intelligent controller base mppt power systemcontrol designhybrid anfispower energypower conversion controlpower electronics control,"['hybrid', 'neuro', 'fuzzy', 'intelligent', 'controller', 'base', 'mppt', 'power', 'systemhybrid', 'neuro', 'fuzzy', 'intelligent', 'controller', 'base', 'mppt', 'power', 'systemcontrol', 'designhybrid', 'anfispower', 'energypower', 'conversion', 'controlpower', 'electronics', 'control']",3
1343,50652,circuito de sep introduccion<p>circuito rl  de Â´primer orden</p>simulink,12,0,1,0,13,circuito sep primer,"['circuito', 'sep', 'primer']",2
1344,50687,"This library is a custom vehicle library for Simscape.<p>[Features]- Analyze 6 dof chassis dynamics- Observe behavior difference between Rear-Drive, Front-Drive and All-Wheel-Drive.- Roughly simulate transient response with sideslip.- Change values for ground condition, slope (bank) angle and disturbance.- Air resistance calculation[Application fields]- Vehicle dynamics analysis- Control design for vehicle stability     Ex)  Antilock Brake System, Electronic Stability Control,            Hill Start Assist, and Traction Control System.- Connect with powertrain model (SimDrivelineTM/SimPowerSystemsTM)</p>automotive,physical modeling",212,9,2,3,236,custom vehicle simscape feature analyze dof chassis dynamic observe behavior difference rear drive front drive wheel drive roughly transient response sideslip change value grind condition slope bank angle disturbance air resistance calculation application field vehicle dynamic analysis control design vehicle stability antilock brake electronic stability control hill start assist traction control connect powertrain simdrivelinetm modeling,"['custom', 'vehicle', 'simscape', 'feature', 'analyze', 'dof', 'chassis', 'dynamic', 'observe', 'behavior', 'difference', 'rear', 'drive', 'front', 'drive', 'wheel', 'drive', 'roughly', 'transient', 'response', 'sideslip', 'change', 'value', 'grind', 'condition', 'slope', 'bank', 'angle', 'disturbance', 'air', 'resistance', 'calculation', 'application', 'field', 'vehicle', 'dynamic', 'analysis', 'control', 'design', 'vehicle', 'stability', 'antilock', 'brake', 'electronic', 'stability', 'control', 'hill', 'start', 'assist', 'traction', 'control', 'connect', 'powertrain', 'simdrivelinetm', 'modeling']",4
1345,50699,"Boost converter  BCM PFC<p>Input 230ac,,output  400v,Output power  200watts,switching freq100khz</p>power_conversion_control,power_electronics_control,simulation",22,0,1,0,25,boost converter bcm pfcinput acoutput voutput power wattsswitching freq khzpower conversion controlpower electronics,"['boost', 'converter', 'bcm', 'pfcinput', 'acoutput', 'voutput', 'power', 'wattsswitching', 'freq', 'khzpower', 'conversion', 'controlpower', 'electronics']",1
1346,50721,"The square at the output of inverter is converted into pure sine wave using filter...<p>The simulink model,generates a pure sine(almost)using MOSFET and a RC and RL filter....using further it could also be made as closed loop so as to minimize harmonic in the output...</p>inverter,power electronics",43,1,2,0,51,square output inverter convert pure sine wave filter modelgenerates pure sine almost mosfet filter could also make close loop minimize harmonic output inverterpower electronics,"['square', 'output', 'inverter', 'convert', 'pure', 'sine', 'wave', 'filter', 'modelgenerates', 'pure', 'sine', 'almost', 'mosfet', 'filter', 'could', 'also', 'make', 'close', 'loop', 'minimize', 'harmonic', 'output', 'inverterpower', 'electronics']",4
1347,50751,"Alfa Beta Filter<p>An alpha beta filter is a simplified form of observer for estimation, data smoothing and control applications. It is closely related to Kalman filters and to linear state observers used in control theory. Its principal advantage is that it does not require a detailed system model.</p>filter,kalman filter,model,signal processing,simulink",13,0,1,0,16,alfa beta filteran alpha beta filter simplify form observer estimation data smooth control application closely related kalman filter linear state observer control theory principal advantage require detail filterkalman,"['alfa', 'beta', 'filteran', 'alpha', 'beta', 'filter', 'simplify', 'form', 'observer', 'estimation', 'data', 'smooth', 'control', 'application', 'closely', 'related', 'kalman', 'filter', 'linear', 'state', 'observer', 'control', 'theory', 'principal', 'advantage', 'require', 'detail', 'filterkalman']",5
1348,50752,"Alfa Beta Gamma Filter<p>The alfa-beta-gamma tracker produces, for the nth observation, smothed esimates of position, velocity and acceleration. It also produces predicted position and velocity for the (n+1)th observation. The alfa-beta-gamma tracker will follow an input whose acceleration is constant with no steady state errors.</p>filter,kalman filter,signal processing,simulink",21,0,1,0,27,alfa beta gamma filterthe alfa beta gamma tracker produce nth observation smothed esimates position velocity acceleration also produce predicted position velocity observation alfa beta gamma tracker follow input whose acceleration constant steady state error filterkalman filtersignal,"['alfa', 'beta', 'gamma', 'filterthe', 'alfa', 'beta', 'gamma', 'tracker', 'produce', 'nth', 'observation', 'smothed', 'esimates', 'position', 'velocity', 'acceleration', 'also', 'produce', 'predicted', 'position', 'velocity', 'observation', 'alfa', 'beta', 'gamma', 'tracker', 'follow', 'input', 'whose', 'acceleration', 'constant', 'steady', 'state', 'error', 'filterkalman', 'filtersignal']",8
1349,50768,"boost converter with load resistance R and a switch with on to off state time ratio of 2<p>boost converter with a souerce voltage of 10V,inductor of 0.1H and a load resistance of 10 ohms, with th change in the ratio of on to off state time ratio of switch the output load voltage changes</p>power_conversion_control,power_electronics_control,simulink",21,1,2,0,23,boost converter load resistance switch state time ratio boost converter souerce voltage vinductor load resistance ohms change ratio state time ratio switch output load voltage changespower conversion controlpower electronics,"['boost', 'converter', 'load', 'resistance', 'switch', 'state', 'time', 'ratio', 'boost', 'converter', 'souerce', 'voltage', 'vinductor', 'load', 'resistance', 'ohms', 'change', 'ratio', 'state', 'time', 'ratio', 'switch', 'output', 'load', 'voltage', 'changespower', 'conversion', 'controlpower', 'electronics']",3
1350,50798,7 bit Counter design using D Flip Flops<p>7 bit Counter design using D Flip Flops</p>counter,13,1,2,0,32,bit counter design flip flop bite counter design flip flopscounter,"['bit', 'counter', 'design', 'flip', 'flop', 'bite', 'counter', 'design', 'flip', 'flopscounter']",5
1351,50801,"APMonitor Package for implementing Moving Horizon Estimation<p>Dynamic models constructed with equations that describe physical phenomena may need to be tuned by adjusting parameters so that predicted outputs match with experimental data. Moving Horizon Estimation is an optimization approach to align dynamic models with successive measurements. See additional information and download source code at the Dynamic Optimization course: <a href=""http://apmonitor.com/do/index.php/Main/MovingHorizonEstimationhttps://youtu.be/yQWgSByYjd8"">http://apmonitor.com/do/index.php/Main/MovingHorizonEstimationhttps://youtu.be/yQWgSByYjd8</a></p>kalman filter,moving horizon estimation,observer",31,1,2,0,32,apmonitor package implement move horizon construct equation describe physical phenomenon may need tune adjust parameter predict output match experimental data move horizon estimation optimization approach align dynamic successive measurement see additional information download source code dynamic optimization course http apmonitor com index php main youtu yqwgsbyyjd kalman filtermoving horizon,"['apmonitor', 'package', 'implement', 'move', 'horizon', 'construct', 'equation', 'describe', 'physical', 'phenomenon', 'may', 'need', 'tune', 'adjust', 'parameter', 'predict', 'output', 'match', 'experimental', 'data', 'move', 'horizon', 'estimation', 'optimization', 'approach', 'align', 'dynamic', 'successive', 'measurement', 'see', 'additional', 'information', 'download', 'source', 'code', 'dynamic', 'optimization', 'course', 'http', 'apmonitor', 'com', 'index', 'php', 'main', 'youtu', 'yqwgsbyyjd', 'kalman', 'filtermoving', 'horizon']",0
1352,50808,"One folder contains Rectifier and other folder contains buck<p>A source with ratings 120 Hz, 130 V L-L RMS, 20 mH is converted in to 138 V DC. Again it is converted to 50 V DC through Buck converter</p>ac to dc conversion,dc to dc conversion,power electronics,power_conversion_control,power_electronics_control",109,0,1,0,161,one folder contain rectifier folder contains bucka source rating rms convert converted buck converterac conversiondc conversionpower conversion controlpower electronics control,"['one', 'folder', 'contain', 'rectifier', 'folder', 'contains', 'bucka', 'source', 'rating', 'rms', 'convert', 'converted', 'buck', 'converterac', 'conversiondc', 'conversionpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1353,50834,"modelling of dc motor<p>it gives the input output relationship of the dc motor parameters with respect to load.</p>electric_motor_control,power_conversion_control,power_electronics_control,dc motor,modeling",7,0,1,0,7,motorit give input output relationship motor parameter respect load electric motor controlpower conversion controlpower electronics controldc motormodeling,"['motorit', 'give', 'input', 'output', 'relationship', 'motor', 'parameter', 'respect', 'load', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motormodeling']",1
1354,50873,"Ant Colony is used to find the PID parameters for DC motor speed control<p>Using these files you can solve any optimization problem that involve finding a parameter in some range.</p>aco,ant colony,dc motor,optimization,pid,electric_motor_control,power_conversion_control,power_electronics_control",9,0,1,0,8,ant colony find pid parameter motor speed controlusing file solve optimization problem involve find parameter range acoant colonydc motor controlpower conversion controlpower electronics control,"['ant', 'colony', 'find', 'pid', 'parameter', 'motor', 'speed', 'controlusing', 'file', 'solve', 'optimization', 'problem', 'involve', 'find', 'parameter', 'range', 'acoant', 'colonydc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1355,50922,"VehicleModel is made by  Simscape Vehicle Library, SimDriveline and SimMechanics<p>This file is VehicleModel with Simscape Vehicle Library in SimMechanics.This is base for vehicle model to simulate 3D vehicle dynamics analyze and vehicle dynamics controller test etc... This needs 'Simscape Vehicle Library - 6 dof chassis and tire - ', so please download the following to the beginning.The detail see 'VehicleModel.pdf'.</p>automotive,mechanical modeling,physical modeling",392,66,6,29,399,vehiclemodel make simscape vehicle simdriveline file vehiclemodel simscape vehicle simmechanics base vehicle vehicle dynamic analyze vehicle dynamic controller test etc need simscape vehicle dof chassis tire please download follow begin detail see vehiclemodel pdf modeling,"['vehiclemodel', 'make', 'simscape', 'vehicle', 'simdriveline', 'file', 'vehiclemodel', 'simscape', 'vehicle', 'simmechanics', 'base', 'vehicle', 'vehicle', 'dynamic', 'analyze', 'vehicle', 'dynamic', 'controller', 'test', 'etc', 'need', 'simscape', 'vehicle', 'dof', 'chassis', 'tire', 'please', 'download', 'follow', 'begin', 'detail', 'see', 'vehiclemodel', 'pdf', 'modeling']",7
1356,50946,"Simulates the interaction of a spring and a mass. Gravity is a constant downwards acceleration.<p>Spring-Mass Under Friction and GravitySimulink model created by Abdullah Baig at University of Engineering and Technology, Lahore.For suggestions, feedback and assistance, contact <a href=""mailto:abdullahbaig1618@gmail.comThis"">abdullahbaig1618@gmail.comThis</a> Simulink model simulates the interaction of a spring and a mass. Gravity is implemented as a constant downwards acceleration. The system behaves like a pendulum if the spring-constant is sufficiently large.Physical EntitiesThere is an anchor, a mass and a spring in the simulation. The mass follows the Newton's laws of motion under the forces applied on it, i.e. the force exerted by the spring, the force due to the gravity and the force of friction. The spring connects the mass to the anchor and applies a force on the mass, depending on its position. All forces, accelerations, velocities and positions are 2-d vectors. The base units are cm, s and kg.MassThe mass is made to follow the Newton's laws of motion and classical kinematics. The following equations are used to calculate its position from the forces acting on it.=&gt; F = Mb*g - kf*v + Fb=&gt; a = F / Mb=&gt; v = Vb + int(F)=&gt; Pos = Posb + int(v)Here, ""F"" is the total force acting on the mass, ""Mb"" is the value of the mass, ""g"" is the acceleration due to gravity, ""kf"" is the coefficient of friction, ""v"" is the instantaneous velocity of the mass, ""Fb"" is the external force acting on the mass, ""a"" is the instantaneous aceleration of the mass, ""Vb"" is the initial velocity of the mass, ""Pos"" is its instantaneous position, ""Posb"" is its initial position and int() denotes the integration function.SpringThe spring follows the Hooke's law with no limits. It takes the instantaneous position of the anchor and the mass and calculates the force exerted on the amss at that position. Its dynamics are defined using the following equations.=&gt; L = sqrt((Posa-Posb).(Posa-Posb))=&gt; e = L - Ls=&gt; Fsb = ks * (Posa-Posb) * e / LHere, ""L"" represents the instantaneous length of the spring, ""e"" is the extension, ""Ls"" is the initial or natural length of the spring, ""Fsb"" is the force exreted by the spring on the mass, and ""ks"" is the spring contant of the spring.DisplayThe display block creates an animation of the anchor, the mass and the spring using their positions. The initial position of the mass is marked by a ""+"". The animation can also be exported to a video file named ""output.avi"".</p>2d,differential equations,dynamic system,dynamics,friction,gravity,mass,massspring,pendulum,physics,simulink,spring,spring constant",73,4,3,0,84,interaction spring mass gravity constant downwards acceleration spring mass friction create abdullah baig university engineering technology lahore suggestion feedback assistance contact abdullahbaig gmail comthis interaction spring mass gravity implement constant downwards acceleration behaves like pendulum spring constant sufficiently large physical entitiesthere anchor mass spring mass follow newton law motion force apply force exert spring force due gravity force friction spring connects mass anchor applies force mass depend position force acceleration velocity position vector base unit massthe mass make follow newton law motion classical kinematics follow equation calculate position force act int posb int total force act mass value mass acceleration due gravity coefficient friction instantaneous velocity mass external force act mass instantaneous aceleration mass initial velocity mass instantaneous position posb initial position int denote integration function springthe spring follow hooke law limit take instantaneous position anchor mass calculate force exert amss position dynamic define follow equation sqrt posa posb posa posb fsb posa posb lhere represent instantaneous length spring extension initial natural length spring fsb force exreted spring mass spring contant spring displaythe display block create animation anchor mass spring position initial position mass mark animation also export video file name output avi ddifferential constant,"['interaction', 'spring', 'mass', 'gravity', 'constant', 'downwards', 'acceleration', 'spring', 'mass', 'friction', 'create', 'abdullah', 'baig', 'university', 'engineering', 'technology', 'lahore', 'suggestion', 'feedback', 'assistance', 'contact', 'abdullahbaig', 'gmail', 'comthis', 'interaction', 'spring', 'mass', 'gravity', 'implement', 'constant', 'downwards', 'acceleration', 'behaves', 'like', 'pendulum', 'spring', 'constant', 'sufficiently', 'large', 'physical', 'entitiesthere', 'anchor', 'mass', 'spring', 'mass', 'follow', 'newton', 'law', 'motion', 'force', 'apply', 'force', 'exert', 'spring', 'force', 'due', 'gravity', 'force', 'friction', 'spring', 'connects', 'mass', 'anchor', 'applies', 'force', 'mass', 'depend', 'position', 'force', 'acceleration', 'velocity', 'position', 'vector', 'base', 'unit', 'massthe', 'mass', 'make', 'follow', 'newton', 'law', 'motion', 'classical', 'kinematics', 'follow', 'equation', 'calculate', 'position', 'force', 'act', 'int', 'posb', 'int', 'total', 'force', 'act', 'mass', 'value', 'mass', 'acceleration', 'due', 'gravity', 'coefficient', 'friction', 'instantaneous', 'velocity', 'mass', 'external', 'force', 'act', 'mass', 'instantaneous', 'aceleration', 'mass', 'initial', 'velocity', 'mass', 'instantaneous', 'position', 'posb', 'initial', 'position', 'int', 'denote', 'integration', 'function', 'springthe', 'spring', 'follow', 'hooke', 'law', 'limit', 'take', 'instantaneous', 'position', 'anchor', 'mass', 'calculate', 'force', 'exert', 'amss', 'position', 'dynamic', 'define', 'follow', 'equation', 'sqrt', 'posa', 'posb', 'posa', 'posb', 'fsb', 'posa', 'posb', 'lhere', 'represent', 'instantaneous', 'length', 'spring', 'extension', 'initial', 'natural', 'length', 'spring', 'fsb', 'force', 'exreted', 'spring', 'mass', 'spring', 'contant', 'spring', 'displaythe', 'display', 'block', 'create', 'animation', 'anchor', 'mass', 'spring', 'position', 'initial', 'position', 'mass', 'mark', 'animation', 'also', 'export', 'video', 'file', 'name', 'output', 'avi', 'ddifferential', 'constant']",5
1357,51012,"PD-POD-APOD<p>pulse width modulation with phase disposition,phase opposition disposition and alternative opposition disposition</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",216,0,1,0,243,pod apodpulse width modulation phase opposition disposition alternative opposition motor controlpower conversion controlpower electronics,"['pod', 'apodpulse', 'width', 'modulation', 'phase', 'opposition', 'disposition', 'alternative', 'opposition', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1358,51026,"A PV model for a 230W PV panel with plotting of the I-V and P-V Characteristics<p>It demonstrates the detailed modelling of a solar PV panel using equations and plotting of its I-V and P-V characteristics.</p>mppt,pv",84,9,3,0,89,panel plot demonstrates detail solar panel equation plot characteristic mpptpv,"['panel', 'plot', 'demonstrates', 'detail', 'solar', 'panel', 'equation', 'plot', 'characteristic', 'mpptpv']",0
1359,51045,"Another example of a cascade PI motion control system designed using SYSTUNE.<p>This script demonstrates optimal tuning of a cascade PI control system. SYSTUNE is used to select gains for two controllers in a DC drive: the inner PI current controller and the outer PI speed controller. The submissions serves educational purposes. Please be aware that there is plenty of similar (if not identical in their design) examples out there, e.g. <a href=""http://blogs.mathworks.com/seth/2014/04/03/control-system-tuning-without-guess-or-stress/"">http://blogs.mathworks.com/seth/2014/04/03/control-system-tuning-without-guess-or-stress/</a> or <a href=""http://www.mathworks.com/help/robust/examples/control-of-a-linear-electric-actuator.html"">http://www.mathworks.com/help/robust/examples/control-of-a-linear-electric-actuator.html</a> .</p>dc drive,dc motor,hinfinity,motion control,optimal control,pi,pid,speed control,systune,power_conversion_control,power_electronics_control",27,0,1,0,36,another example cascade motion control design systune script demonstrate optimal tune cascade control systune select gain two controller drive inner current controller outer speed controller submission serve educational purpose please aware plenty similar identical design examples http blog mathworks com seth control tune without guess stress http mathworks com help robust example control linear electric actuator html drivedc controloptimal conversion controlpower electronics control,"['another', 'example', 'cascade', 'motion', 'control', 'design', 'systune', 'script', 'demonstrate', 'optimal', 'tune', 'cascade', 'control', 'systune', 'select', 'gain', 'two', 'controller', 'drive', 'inner', 'current', 'controller', 'outer', 'speed', 'controller', 'submission', 'serve', 'educational', 'purpose', 'please', 'aware', 'plenty', 'similar', 'identical', 'design', 'examples', 'http', 'blog', 'mathworks', 'com', 'seth', 'control', 'tune', 'without', 'guess', 'stress', 'http', 'mathworks', 'com', 'help', 'robust', 'example', 'control', 'linear', 'electric', 'actuator', 'html', 'drivedc', 'controloptimal', 'conversion', 'controlpower', 'electronics', 'control']",4
1360,51053,"speed control of 8/6 srm using anfis is has faster response than conventional control.<p>speed control by conventional method (PI Control) of Switched reluctance motor (SRM) has a slower response hence by introduced some non-linear control (ANFIS- it is neural network work as fuzzy logic control) to the SRM (Current Control) will have better performance than conventional control.</p>fuzzy,anfis,control,control design,example,fuzzy logic,induction motor,motor,neural networks,power electronics,reulctance,simulink,speed control,srm,switched reluctance motor,synchronous,synchronous motor,electric_motor_control,power_electronics_control",144,11,3,0,147,speed control srm anfis faster response conventional control speed control conventional method control switch reluctance motor srm slow response hence introduce non linear control anfis neural network work fuzzy logic control srm current control well performance conventional control logicinduction networkspower reluctance motorelectric motor controlpower electronics control,"['speed', 'control', 'srm', 'anfis', 'faster', 'response', 'conventional', 'control', 'speed', 'control', 'conventional', 'method', 'control', 'switch', 'reluctance', 'motor', 'srm', 'slow', 'response', 'hence', 'introduce', 'non', 'linear', 'control', 'anfis', 'neural', 'network', 'work', 'fuzzy', 'logic', 'control', 'srm', 'current', 'control', 'well', 'performance', 'conventional', 'control', 'logicinduction', 'networkspower', 'reluctance', 'motorelectric', 'motor', 'controlpower', 'electronics', 'control']",3
1361,51054,"makes the source or grid current sinusodial. Application: active shunt filter<p>hysterisis current control rectifier makes source current sinusoidal instead of square wave or quasi square wave in conventional rectifier.</p>control,current,dc,hysterisis,pi,rectifier,voltage",66,1,2,0,84,make source grid current sinusodial application active shunt current control rectifier make source current sinusoidal instead square wave quasi square wave conventional rectifier,"['make', 'source', 'grid', 'current', 'sinusodial', 'application', 'active', 'shunt', 'current', 'control', 'rectifier', 'make', 'source', 'current', 'sinusoidal', 'instead', 'square', 'wave', 'quasi', 'square', 'wave', 'conventional', 'rectifier']",3
1362,51055,"Voltage control inverter ( output voltage is sinusodial)<p>Hysterisis Votlage control inverter makes the output voltage of the inverter sinusoidal instead of pulsed response</p>control,hysterisis,inverter,output,sinusodial,voltage",53,1,2,0,70,voltage control inverter output voltage sinusodial hysterisis votlage control inverter make output voltage inverter sinusoidal instead pulse,"['voltage', 'control', 'inverter', 'output', 'voltage', 'sinusodial', 'hysterisis', 'votlage', 'control', 'inverter', 'make', 'output', 'voltage', 'inverter', 'sinusoidal', 'instead', 'pulse']",1
1363,51056,"Mathematical Model of 1 HP induction motor<p>Induction motor is modelled using mathematical equations and run with load and without load</p>dynamic,induction,mathematical,mathematics,model,modeling,motor,electric_motor_control,power_electronics_control",142,10,3,0,161,mathematical induction motorinduction motor mathematical equation run load without motor controlpower electronics control,"['mathematical', 'induction', 'motorinduction', 'motor', 'mathematical', 'equation', 'run', 'load', 'without', 'motor', 'controlpower', 'electronics', 'control']",1
1364,51058,"PI controlled speed control of induction motor<p>closed loop speed control of induction motor using PI Control</p>closed,control,dynamic,induction,loop,mathematical,model,modelling,motor,speed,electric_motor_control,power_electronics_control",206,14,4,0,248,control speed control induction motorclosed loop speed control induction motor motor controlpower electronics control,"['control', 'speed', 'control', 'induction', 'motorclosed', 'loop', 'speed', 'control', 'induction', 'motor', 'motor', 'controlpower', 'electronics', 'control']",6
1365,51060,"Fuzzy Logic control<p>fuzzy logic controlled by small plant</p>control,control design,example,fuzzy,logic",25,1,2,0,32,fuzzy logic controlfuzzy logic control small,"['fuzzy', 'logic', 'controlfuzzy', 'logic', 'control', 'small']",4
1366,51061,"sliding mode control<p>sliding mode control of a zero damping ratio plant</p>control,example,mode,sliding,smc",10,0,1,0,15,slide mode controlsliding mode control zero damp ratio,"['slide', 'mode', 'controlsliding', 'mode', 'control', 'zero', 'damp', 'ratio']",4
1367,51063,"shunt active filter<p>since nowadays most of the loads are non linear hence the load current is non sinusoidal, by employing a custom power device (shunt active filter) to a distribution system makes the grid current current sinusoidal. Hence power quality is improved</p>active,control design,d,filter,linear,load,non,nonlinear,pi,shunt,statcom",142,8,3,0,170,shunt active filtersince nowadays load non linear hence load current non sinusoidal employ custom power device shunt active filter distribution make grid current current sinusoidal hence power quality,"['shunt', 'active', 'filtersince', 'nowadays', 'load', 'non', 'linear', 'hence', 'load', 'current', 'non', 'sinusoidal', 'employ', 'custom', 'power', 'device', 'shunt', 'active', 'filter', 'distribution', 'make', 'grid', 'current', 'current', 'sinusoidal', 'hence', 'power', 'quality']",4
1368,51064,"custom power device: series active filter<p>Series active filter regulate the voltage across the load in case of sag/swell and harmonics</p>active,custom power device,dvr,dynamic,filter,restorer,series,voltage",105,4,2,0,125,custom power device series active filterseries active filter regulate voltage across load case sag swell power,"['custom', 'power', 'device', 'series', 'active', 'filterseries', 'active', 'filter', 'regulate', 'voltage', 'across', 'load', 'case', 'sag', 'swell', 'power']",4
1369,51066,"sensorless speed control of SRM<p>Sensorless DTC (direct torque control) of SRM has much more advantage than conventional method (current control) interms of speed, torque ripple reduction etc.,</p>86,anifs,control,estimation,motor,position,reluctance,sensorless,srm,switched,electric_motor_control,power_electronics_control",338,18,4,0,360,sensorless speed control srmsensorless dtc direct torque control srm much advantage conventional method current control interms speed torque ripple reduction etc motor controlpower electronics control,"['sensorless', 'speed', 'control', 'srmsensorless', 'dtc', 'direct', 'torque', 'control', 'srm', 'much', 'advantage', 'conventional', 'method', 'current', 'control', 'interms', 'speed', 'torque', 'ripple', 'reduction', 'etc', 'motor', 'controlpower', 'electronics', 'control']",3
1370,51068,"mathematical model of pmsm<p>pmsm is modeled using mathematical equations</p>bldc,dynamic,magnet,mathematical,modeling,motor,permanent,pmsm,synchronous,electric_motor_control,power_electronics_control",94,9,4,0,104,mathematical pmsmpmsm mathematical motor controlpower electronics control,"['mathematical', 'pmsmpmsm', 'mathematical', 'motor', 'controlpower', 'electronics', 'control']",6
1371,51069,"mathematical model of BLDC<p>modeled BLDC motor using mathematical equations</p>back,bldc,brushless,dc,dynamic,emf,mathematical,modeling,motor,trapezodial,electric_motor_control,power_conversion_control,power_electronics_control,smc",155,13,5,0,185,mathematical bldcmodeled bldc motor mathematical motor controlpower conversion controlpower electronics controlsmc,"['mathematical', 'bldcmodeled', 'bldc', 'motor', 'mathematical', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsmc']",6
1372,51070,"h bridge inverter<p>7 Level inverter using H bridge cascade</p>7,bridge,cascade,h,hbridge,inverter,level",189,14,3,0,206,bridge inverter level inverter bridge cascade,"['bridge', 'inverter', 'level', 'inverter', 'bridge', 'cascade']",6
1373,51071,"pv pannel<p>mathematical modeling of PV Cell</p>cell,mathematical,model,pannel,photo,photovoltaic,pv,voltaic,power_conversion_control,power_electronics_control",95,5,3,0,99,conversion controlpower electronics control,"['conversion', 'controlpower', 'electronics', 'control']",6
1374,51072,"GAOT-ECM implements genetic algorithms for industrial plant identification and PID controller design<p>GAOT-ECM (GAOT - Extension For Control And Modeling)  is an extension of the Genetic Algorithm Optimization Toolbox (GAOT) by C.R. Houck, J.A. Joines, M.G. Kay, that implements genetic algorithms for industrial plant identification and PID controller design. Case studies and examples included!This extension brings forth the practical aspect of using genetic algorithms in aiding plant modeling and PID control design for real world industrial processes. Plants such water tanks, heaters, fans and motors are usually hard to model or tune on-site, especially after prolonged use of the equipment when degradation of performances is inevitable. Therefore, this toolbox extension introduces a series of practical steps that can be taken by control engineers in order to re-design viable PID controllers for their plants.Inside the GAOT-ECM archive you will find two main folders: (1) Identification (for model identification) and (2) Control (for controller design).(1) runs a plant model identification genetic algorithm for LTI second order and first order with time delay systems.(2) runs a PID controller design genetic algorithm under various customizable performance criteria.The demonstration files offer real world case studies from which the user can learn step-by-step how to apply genetic algorithms to model identification and PID controller design.GAOT-ECM was implemented and tested under Matlab 7 (R2011b). Thanks for trying the toolbox!Acknowledgements: GAOT-ECM Toolbox(GAOT - Extension For Control And Modeling ) was inspired by Genetic Algorithm Optimization Toolbox (GAOT) by C.R. Houck, J.A. Joines, M.G. Kay.Citing information: Patrascu M., Ion A. 2016 - Evolutionary Modeling of Industrial Plants and Design of PID Controllers. Case Studies and Practical Applications, Nature-Inspired Computing for Control Systems (Ed. H.E.Ponce Espinosa), Series Studies in Systems, Decision and Control, vol. 40, pp. 73-119, Springer International Publishing, doi: 10.1007/978-3-319-26230-7_4</p>electric_motor_control,power_electronics_control,case study,evolutionary computing,ga,genetic algorithm,matlab,model identification,pid,pid controller design,simulation,simulink,tuning pid controllers",86,0,1,0,90,gaot ecm implement genetic algorithms industrial plant identification pid controller designgaot ecm gaot extension control extension genetic algorithm optimization toolbox gaot houck joines kay implement genetic algorithms industrial plant identification pid controller design case study example include extension brings forth practical aspect genetic algorithm aiding plant pid control design real world industrial process plant water tank heater fan motor usually hard tune site especially prolonged equipment degradation performance inevitable therefore toolbox extension introduces series practical step take control engineer order design viable pid controller plant inside gaot ecm archive find two main folder identification identification control controller design run plant identification genetic algorithm lti second order first order time delay run pid controller design genetic algorithm various customizable performance criterion demonstration file offer real world case study user learn step step apply genetic algorithm identification pid controller design gaot ecm implement tested thanks try toolbox gaot ecm toolbox gaot extension control inspire genetic algorithm optimization toolbox gaot houck joines kay cite information patrascu ion evolutionary industrial plant design pid controller case study practical application nature inspire compute control ponce espinosa series study decision control vol springer international publishing doi electric motor controlpower electronics controlcase controller pid controller,"['gaot', 'ecm', 'implement', 'genetic', 'algorithms', 'industrial', 'plant', 'identification', 'pid', 'controller', 'designgaot', 'ecm', 'gaot', 'extension', 'control', 'extension', 'genetic', 'algorithm', 'optimization', 'toolbox', 'gaot', 'houck', 'joines', 'kay', 'implement', 'genetic', 'algorithms', 'industrial', 'plant', 'identification', 'pid', 'controller', 'design', 'case', 'study', 'example', 'include', 'extension', 'brings', 'forth', 'practical', 'aspect', 'genetic', 'algorithm', 'aiding', 'plant', 'pid', 'control', 'design', 'real', 'world', 'industrial', 'process', 'plant', 'water', 'tank', 'heater', 'fan', 'motor', 'usually', 'hard', 'tune', 'site', 'especially', 'prolonged', 'equipment', 'degradation', 'performance', 'inevitable', 'therefore', 'toolbox', 'extension', 'introduces', 'series', 'practical', 'step', 'take', 'control', 'engineer', 'order', 'design', 'viable', 'pid', 'controller', 'plant', 'inside', 'gaot', 'ecm', 'archive', 'find', 'two', 'main', 'folder', 'identification', 'identification', 'control', 'controller', 'design', 'run', 'plant', 'identification', 'genetic', 'algorithm', 'lti', 'second', 'order', 'first', 'order', 'time', 'delay', 'run', 'pid', 'controller', 'design', 'genetic', 'algorithm', 'various', 'customizable', 'performance', 'criterion', 'demonstration', 'file', 'offer', 'real', 'world', 'case', 'study', 'user', 'learn', 'step', 'step', 'apply', 'genetic', 'algorithm', 'identification', 'pid', 'controller', 'design', 'gaot', 'ecm', 'implement', 'tested', 'thanks', 'try', 'toolbox', 'gaot', 'ecm', 'toolbox', 'gaot', 'extension', 'control', 'inspire', 'genetic', 'algorithm', 'optimization', 'toolbox', 'gaot', 'houck', 'joines', 'kay', 'cite', 'information', 'patrascu', 'ion', 'evolutionary', 'industrial', 'plant', 'design', 'pid', 'controller', 'case', 'study', 'practical', 'application', 'nature', 'inspire', 'compute', 'control', 'ponce', 'espinosa', 'series', 'study', 'decision', 'control', 'vol', 'springer', 'international', 'publishing', 'doi', 'electric', 'motor', 'controlpower', 'electronics', 'controlcase', 'controller', 'pid', 'controller']",4
1375,51073,"position estimaiton of srm (direct torque control)<p>direct torque control of switched reluctance motor using ann</p>ann,control,direct,dtc,estimation,motor,position,reulctance,srm,switched,torque,electric_motor_control,power_electronics_control",395,26,5,0,416,position estimaiton srm direct torque control direct torque control switch reluctance motor motor controlpower electronics control,"['position', 'estimaiton', 'srm', 'direct', 'torque', 'control', 'direct', 'torque', 'control', 'switch', 'reluctance', 'motor', 'motor', 'controlpower', 'electronics', 'control']",1
1376,51075,"2 level current current inverter<p>inverter</p>control,current,hysterisis,inverter",50,1,2,0,68,level current current,"['level', 'current', 'current']",1
1377,51076,"Design inner and outer PID loops for controlling the attitude and the displacement of a quadcopter<p>This model implements a simple control of the displacement of a quadcopter according to the notes reported on Robotics SE here: <a href=""http://robotics.stackexchange.com/a/7348/6941"">http://robotics.stackexchange.com/a/7348/6941</a>.</p>control design",93,3,2,0,116,design inner outer pid loop control attitude displacement quadcopterthis implement simple control displacement quadcopter accord note report robotics http robotics stackexchange com control design,"['design', 'inner', 'outer', 'pid', 'loop', 'control', 'attitude', 'displacement', 'quadcopterthis', 'implement', 'simple', 'control', 'displacement', 'quadcopter', 'accord', 'note', 'report', 'robotics', 'http', 'robotics', 'stackexchange', 'com', 'control', 'design']",4
1378,51077,"MPPT algorithm<p>mppt algorithm</p>algorithm,cell,mppt,pv,power_conversion_control,power_electronics_control",139,6,3,0,154,mppt algorithmmppt conversion controlpower electronics control,"['mppt', 'algorithmmppt', 'conversion', 'controlpower', 'electronics', 'control']",6
1379,51084,"Fuzzy Logic Control of SRM by direct torque control<p>direct torque control of srm</p>anfis,ann,control,direct,dtc,estimation,fuzzy,motor,position,reluctance,speed,srm,switched,torrque,vector,electric_motor_control,power_electronics_control",339,18,4,0,361,fuzzy logic control srm direct torque controldirect torque control motor controlpower electronics control,"['fuzzy', 'logic', 'control', 'srm', 'direct', 'torque', 'controldirect', 'torque', 'control', 'motor', 'controlpower', 'electronics', 'control']",1
1380,51086,"diode clamped inverter<p>inverter</p>5,clamped,diode,inverter,level",198,11,3,0,241,diode clamp,"['diode', 'clamp']",4
1381,51107,"the improved boost converter is combination of coupled inductor base voltage doublecell.<p>a normal boost converter is not possible to high voltage conversion it is possible to converts the high voltage and a model based MPPT is different then other MPPT techniques.</p>power_conversion_control,power_electronics_control,modeling,simulation",238,7,4,0,234,improve boost converter combination couple inductor base voltage doublecell normal boost converter possible high voltage conversion possible convert high voltage base mppt different mppt technique power conversion controlpower electronics,"['improve', 'boost', 'converter', 'combination', 'couple', 'inductor', 'base', 'voltage', 'doublecell', 'normal', 'boost', 'converter', 'possible', 'high', 'voltage', 'conversion', 'possible', 'convert', 'high', 'voltage', 'base', 'mppt', 'different', 'mppt', 'technique', 'power', 'conversion', 'controlpower', 'electronics']",1
1382,51131,"GAOT-ECM: Extension For Control And Modeling - Seismic Vibration Case Study with MR Damper<p>GAOT-ECM (GAOT - Extension For Control And Modeling) is an extension of the Genetic Algorithm Optimization Toolbox (GAOT) by C.R. Houck, J.A. Joines, M.G. Kay, that implements genetic algorithms for industrial plant identification and PID controller design.This file contains the Seismic Vibration Case Study. For other examples, please consult the GAOT-ECM: Extension For Control And Modeling main file.This extension brings forth the practical aspect of using genetic algorithms in aiding plant modeling and PID control design for real world industrial processes. Plants such water tanks, heaters, fans and motors are usually hard to model or tune on-site, especially after prolonged use of the equipment when degradation of performances is inevitable. Therefore, this toolbox extension introduces a series of practical steps that can be taken by control engineers in order to re-design viable PID controllers for their plants.Inside the GAOT-ECM Seismic Vibration Case Study archive you will find the folder: MR Damper, which runs a PID controller design genetic algorithm under various customizable performance criteria.For this case study, a base isolation system is considered for a three story building. The damper is mounted in the base of the structure, which is controlled via an LQR law on the outer loop of a cascaded control system. A PID controller is chosen to be designed using GAs for the inner loop containing the damper. The output forces generated by seismic dampers are required to be maintained between specific limits, so they do not cause instability to the structure, breaks support beams and so on. Therefore, a control loop for the actuator is required, that will receive the desired control forces computed by higher algorithms (such as robust laws, intelligent controllers, adaptive, modal, etc.) as setpoints and ensure that they are precisely reproduced by the actual damper output force. Analysis for validation and LQR command matrix are included.GAOT-ECM was implemented and tested under Matlab 7 (R2011b).Enjoy!Acknowledgements: GAOT-ECM Toolbox(GAOT - Extension For Control And Modeling ) was inspired by Genetic Algorithm Optimization Toolbox (GAOT) by C.R. Houck, J.A. Joines, M.G. Kay.Citing information: Patrascu M., Ion A. 2016 - Evolutionary Modeling of Industrial Plants and Design of PID Controllers. Case Studies and Practical Applications, Nature-Inspired Computing for Control Systems (Ed. H.E.Ponce Espinosa), Series Studies in Systems, Decision and Control, vol. 40, pp. 73-119, Springer International Publishing, doi: 10.1007/978-3-319-26230-7_4</p>electric_motor_control,power_electronics_control,cascaded loop control,case study,case study evolutionary computing ga genetic algorithm matlab mo,earhquake engineering,evolutionary computing,genetic algorithms,lqr controller,magnetorheological damper,nonlinear system,pid tuning,seismic vibration,seismic vibration control,simulation,simulink,three story building",189,5,3,0,226,gaot ecm extension control seismic vibration case study dampergaot ecm gaot extension control extension genetic algorithm optimization toolbox gaot houck joines kay implement genetic algorithms industrial plant identification pid controller design file contain seismic vibration case study example please consult gaot ecm extension control main file extension bring forth practical aspect genetic algorithm aiding plant pid control design real world industrial process plant water tank heater fan motor usually hard tune site especially prolonged equipment degradation performance inevitable therefore toolbox extension introduces series practical step take control engineer order design viable pid controller plant inside gaot ecm seismic vibration case study archive find folder damper run pid controller design genetic algorithm various customizable performance criterion case study base isolation consider three story build damper mount base structure control via lqr law outer loop cascade control pid controller chosen design gas inner loop contain damper output force generate seismic damper require maintain specific limit cause instability structure break support beam therefore control loop actuator require receive desire control force compute high algorithm robust law intelligent controller adaptive modal etc setpoints ensure precisely reproduce actual damper output force analysis validation lqr command matrix include gaot ecm implement test enjoy gaot ecm toolbox gaot extension control inspire genetic algorithm optimization toolbox gaot houck joines kay cite information patrascu ion evolutionary industrial plant design pid controller case study practical application nature inspire compute control ponce espinosa series study decision control vol springer international publishing doi electric motor controlpower electronics controlcascaded loop controlcase studycase study evolutionary compute genetic algorithm moearhquake algorithmslqr dampernonlinear systempid tuningseismic vibration story building,"['gaot', 'ecm', 'extension', 'control', 'seismic', 'vibration', 'case', 'study', 'dampergaot', 'ecm', 'gaot', 'extension', 'control', 'extension', 'genetic', 'algorithm', 'optimization', 'toolbox', 'gaot', 'houck', 'joines', 'kay', 'implement', 'genetic', 'algorithms', 'industrial', 'plant', 'identification', 'pid', 'controller', 'design', 'file', 'contain', 'seismic', 'vibration', 'case', 'study', 'example', 'please', 'consult', 'gaot', 'ecm', 'extension', 'control', 'main', 'file', 'extension', 'bring', 'forth', 'practical', 'aspect', 'genetic', 'algorithm', 'aiding', 'plant', 'pid', 'control', 'design', 'real', 'world', 'industrial', 'process', 'plant', 'water', 'tank', 'heater', 'fan', 'motor', 'usually', 'hard', 'tune', 'site', 'especially', 'prolonged', 'equipment', 'degradation', 'performance', 'inevitable', 'therefore', 'toolbox', 'extension', 'introduces', 'series', 'practical', 'step', 'take', 'control', 'engineer', 'order', 'design', 'viable', 'pid', 'controller', 'plant', 'inside', 'gaot', 'ecm', 'seismic', 'vibration', 'case', 'study', 'archive', 'find', 'folder', 'damper', 'run', 'pid', 'controller', 'design', 'genetic', 'algorithm', 'various', 'customizable', 'performance', 'criterion', 'case', 'study', 'base', 'isolation', 'consider', 'three', 'story', 'build', 'damper', 'mount', 'base', 'structure', 'control', 'via', 'lqr', 'law', 'outer', 'loop', 'cascade', 'control', 'pid', 'controller', 'chosen', 'design', 'gas', 'inner', 'loop', 'contain', 'damper', 'output', 'force', 'generate', 'seismic', 'damper', 'require', 'maintain', 'specific', 'limit', 'cause', 'instability', 'structure', 'break', 'support', 'beam', 'therefore', 'control', 'loop', 'actuator', 'require', 'receive', 'desire', 'control', 'force', 'compute', 'high', 'algorithm', 'robust', 'law', 'intelligent', 'controller', 'adaptive', 'modal', 'etc', 'setpoints', 'ensure', 'precisely', 'reproduce', 'actual', 'damper', 'output', 'force', 'analysis', 'validation', 'lqr', 'command', 'matrix', 'include', 'gaot', 'ecm', 'implement', 'test', 'enjoy', 'gaot', 'ecm', 'toolbox', 'gaot', 'extension', 'control', 'inspire', 'genetic', 'algorithm', 'optimization', 'toolbox', 'gaot', 'houck', 'joines', 'kay', 'cite', 'information', 'patrascu', 'ion', 'evolutionary', 'industrial', 'plant', 'design', 'pid', 'controller', 'case', 'study', 'practical', 'application', 'nature', 'inspire', 'compute', 'control', 'ponce', 'espinosa', 'series', 'study', 'decision', 'control', 'vol', 'springer', 'international', 'publishing', 'doi', 'electric', 'motor', 'controlpower', 'electronics', 'controlcascaded', 'loop', 'controlcase', 'studycase', 'study', 'evolutionary', 'compute', 'genetic', 'algorithm', 'moearhquake', 'algorithmslqr', 'dampernonlinear', 'systempid', 'tuningseismic', 'vibration', 'story', 'building']",5
1383,51132,"Modulation et demodulation de 3 canaux de la voiture Tamiya<p>Modulation de 3 canaux de 33, 34, 35MHz plus une modulation parasite de 100MHz pour simuler des Ã©metteurs radio.RÃ©cepteur avec un filtre passe-bande suivie d'une dÃ©modulation synchrone et d'un filtrage passe-bas.Visualisation avec des scopes et analyseur de spectre.</p>communications,filter,filter analysis,signal processing,simulink,tamiya",46,6,2,0,43,modulation demodulation canaux voiture canaux mhz plus une modulation parasite mhz pour Ã©metteurs radio rÃ©cepteur avec filtre passe bande suivie une dÃ©modulation synchrone filtrage passe visualisation avec des scope analyseur spectre analysissignal,"['modulation', 'demodulation', 'canaux', 'voiture', 'canaux', 'mhz', 'plus', 'une', 'modulation', 'parasite', 'mhz', 'pour', 'Ã©metteurs', 'radio', 'rÃ©cepteur', 'avec', 'filtre', 'passe', 'bande', 'suivie', 'une', 'dÃ©modulation', 'synchrone', 'filtrage', 'passe', 'visualisation', 'avec', 'des', 'scope', 'analyseur', 'spectre', 'analysissignal']",8
1384,51137,"Simulation of an Energy Storage System used on a power grid<p>Demonstrate SimPowerSystems capabilities to simulate an electrical circuit  and control system, in phasor mode,  for a full-year period in less than one minute of simulation time. Illustrate concepts related to Energy Storage Systems (ESS). Show how to use public solar data time-series (TMY3 files) and how to create typical load profiles.A simple scenario has been chosen to illustrate one usage of this example: The objective is to determine appropriate sizing (power &amp; capacity) of an ESS equipment connected to a 600V community electrical system, in order to prevent the community from purchasing more power than agreed with the Utility company. Based on a given load profile, PV farm output, ESS power rating and capacity, the simulation will give the number of unavailability for a full year. This sizing study can be performed for various locations around the US.The authors are Pierre Giroux, Gilbert Sybille, Jacques Brochu, and Patrice Brunelle, from IREQ, Hydro-Quebec research institute, with the collaboration of Mathworks.</p>data import,energy storage systems,irradiance,powergui phasor mode,public solar data timeseries,residential load profile",816,62,5,0,860,energy storage power griddemonstrate simpowersystems capability electrical circuit control phasor mode full year period one minute time illustrate concept relate energy storage ess show public solar data time series tmy file create typical load profile simple scenario choose illustrate one usage example objective determine appropriate size power amp capacity equipment connect community electrical order prevent community purchase power agree utility company base give load profile farm output ess power rating capacity give number unavailability full year size study perform various location around author pierre giroux gilbert sybille jacques brochu patrice brunelle ireq hydro quebec research institute collaboration mathworks data importenergy storage phasor modepublic solar data load profile,"['energy', 'storage', 'power', 'griddemonstrate', 'simpowersystems', 'capability', 'electrical', 'circuit', 'control', 'phasor', 'mode', 'full', 'year', 'period', 'one', 'minute', 'time', 'illustrate', 'concept', 'relate', 'energy', 'storage', 'ess', 'show', 'public', 'solar', 'data', 'time', 'series', 'tmy', 'file', 'create', 'typical', 'load', 'profile', 'simple', 'scenario', 'choose', 'illustrate', 'one', 'usage', 'example', 'objective', 'determine', 'appropriate', 'size', 'power', 'amp', 'capacity', 'equipment', 'connect', 'community', 'electrical', 'order', 'prevent', 'community', 'purchase', 'power', 'agree', 'utility', 'company', 'base', 'give', 'load', 'profile', 'farm', 'output', 'ess', 'power', 'rating', 'capacity', 'give', 'number', 'unavailability', 'full', 'year', 'size', 'study', 'perform', 'various', 'location', 'around', 'author', 'pierre', 'giroux', 'gilbert', 'sybille', 'jacques', 'brochu', 'patrice', 'brunelle', 'ireq', 'hydro', 'quebec', 'research', 'institute', 'collaboration', 'mathworks', 'data', 'importenergy', 'storage', 'phasor', 'modepublic', 'solar', 'data', 'load', 'profile']",5
1385,51143,"Vicon Tracker S Function and Simulink Model Samples<p>Tracker 3.0 has added some functionality to make using Simulink available to users in environments where TCP/IP is not supported, for example some embedded platforms.Vicon customers using products that support the DSSDK can use the DSSDK from within a SImulink block to access streamed data. The sample files illustrate a simple mechanism by which both UDP Stream and DataStream SDK can be accessed from a Simulink model.The new functionality available only in Tracker 3.0 and newer is the addition of a UDP stream containing Tracker object translation/rotation data. The UDP stream contains only a very small subset of the data available via the DSSDK.All of the examples consist of an s-function along with a Simulink model showing a block using the custom s-function in a simulation.Single object and multiple object examples on the same port are provided using the DSSDK as well as the UDP stream, the only difference in those examples is the method of data access. There is an additional example for the UDP stream illustrating the object-per-port functionality.</p>robot localisation,vicon",61,0,1,0,67,vicon tracker function samplestracker add functionality make available user environment tcp support example embed platform vicon customer product support dssdk dssdk within block access stream data sample file illustrate simple mechanism udp stream datastream sdk access new functionality available tracker new addition udp stream contain tracker object translation rotation data udp stream contain small subset data available via dssdk example consist function along show block custom function single object multiple object example port provide dssdk well udp stream difference example method data access additional example udp stream illustrate object per port functionality robot,"['vicon', 'tracker', 'function', 'samplestracker', 'add', 'functionality', 'make', 'available', 'user', 'environment', 'tcp', 'support', 'example', 'embed', 'platform', 'vicon', 'customer', 'product', 'support', 'dssdk', 'dssdk', 'within', 'block', 'access', 'stream', 'data', 'sample', 'file', 'illustrate', 'simple', 'mechanism', 'udp', 'stream', 'datastream', 'sdk', 'access', 'new', 'functionality', 'available', 'tracker', 'new', 'addition', 'udp', 'stream', 'contain', 'tracker', 'object', 'translation', 'rotation', 'data', 'udp', 'stream', 'contain', 'small', 'subset', 'data', 'available', 'via', 'dssdk', 'example', 'consist', 'function', 'along', 'show', 'block', 'custom', 'function', 'single', 'object', 'multiple', 'object', 'example', 'port', 'provide', 'dssdk', 'well', 'udp', 'stream', 'difference', 'example', 'method', 'data', 'access', 'additional', 'example', 'udp', 'stream', 'illustrate', 'object', 'per', 'port', 'functionality', 'robot']",0
1386,51144,"PWM generator requiring no supplementary toolboxes<p>Generates a PWM signal output when provided with a duty value (DC signal between 0 and 1). Amplitude of high signal and period can be set</p>embedded,modeling,motor,power electronics,electric_motor_control,power_conversion_control,power_electronics_control",14,1,2,0,11,pwm generator require supplementary pwm signal output provide duty value signal amplitude high signal period motor controlpower conversion controlpower electronics control,"['pwm', 'generator', 'require', 'supplementary', 'pwm', 'signal', 'output', 'provide', 'duty', 'value', 'signal', 'amplitude', 'high', 'signal', 'period', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1387,51148,this is the model to analyse the PAPR and EVM of OFDM signal<p>this is the model to analyse the PAPR and EVM of OFDM signal</p>simulink,60,1,2,0,61,analyse papr evm ofdm signalthis analyse papr evm ofdm,"['analyse', 'papr', 'evm', 'ofdm', 'signalthis', 'analyse', 'papr', 'evm', 'ofdm']",2
1388,51159,It works good<p>It has some problems of 3rd phase</p>apf,145,8,3,0,186,work goodit problem phaseapf,"['work', 'goodit', 'problem', 'phaseapf']",5
1389,51160,"The Data Store Rescope Tool (formerly the Data Store Push-Down Tool) rescopes Simulink data stores.<p>Data stores in Simulink are analogous to variables in traditional programming languages. Therefore, they should be restricted in scope to avoid inadvertent/unwanted access, hide low-level details, and reduce the number of inputs for testing. The Data Store Rescope Tool (formerly known as the Data Store Push-Down Tool) identifies the data stores that have scopes larger than necessary. Then, the declaration (Data Store Memory block) of each identified data store is pushed down the model hierarchy to the lowest level possible, such that all the references to the data store memory are still within its scope. Also, if references to a data store are outside of its scope, the Data Store Rescope Tool can be used for auto-correction: the data storeâs declaration is first moved to the model's top level, and then pushed-down to minimize data store's scope as previously described.For instructions instructions and how to use the tool, see doc/DataStoreRescope_UserGuide.pdf.For more about the capabilities of the tool and how it can be used in model-based development with Simulink, see the two papers:Vera Pantelic, Steven Postma, Mark Lawford, Alexandre Korobkine, Bennett Mackenzie, Jeff Ong, Marc Bender, ""A Toolset for Simulink: Improving Software Engineering Practices in Development with Simulink,"" Proceedings of 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD 2015), SCITEPRESS, 2015, 50-61. (Best Paper Award)Vera Pantelic, Steven Postma, Mark Lawford, Monika Jaskolka, Bennett Mackenzie, Alexandre Korobkine, Marc Bender, Jeff Ong, Gordon Marks, Alan Wassyng, âSoftware engineering practices and Simulink: bridging the gap,â International Journal on Software Tools for Technology Transfer (STTT), 2017, 1-23.</p>data stores,jmaab,modularity,scoping,software engineering",46,4,5,0,32,data store rescope tool formerly data store push tool rescopes data store data store analogous variable traditional programming language therefore restrict scope avoid inadvertent unwanted access hide low level detail reduce number input test data store rescope tool formerly know data store push tool identifies data store scope large necessary declaration data store memory block identify data store push hierarchy low level possible reference data store memory still within scope also reference data store outside scope data store rescope tool auto correction data store declaration first move top level push minimize data store scope previously describe instruction instruction tool see doc userguide pdf capability tool base development see two paper vera pantelic steven postma mark lawford alexandre korobkine bennett mackenzie jeff ong marc bender toolset improve software engineering practice development proceeding international conference drive engineering software development modelsward scitepress best paper award vera pantelic steven postma mark lawford monika jaskolka bennett mackenzie alexandre korobkine marc bender jeff ong gordon mark alan wassyng software engineering practice bridge gap international journal software tool technology transfer stt data engineering,"['data', 'store', 'rescope', 'tool', 'formerly', 'data', 'store', 'push', 'tool', 'rescopes', 'data', 'store', 'data', 'store', 'analogous', 'variable', 'traditional', 'programming', 'language', 'therefore', 'restrict', 'scope', 'avoid', 'inadvertent', 'unwanted', 'access', 'hide', 'low', 'level', 'detail', 'reduce', 'number', 'input', 'test', 'data', 'store', 'rescope', 'tool', 'formerly', 'know', 'data', 'store', 'push', 'tool', 'identifies', 'data', 'store', 'scope', 'large', 'necessary', 'declaration', 'data', 'store', 'memory', 'block', 'identify', 'data', 'store', 'push', 'hierarchy', 'low', 'level', 'possible', 'reference', 'data', 'store', 'memory', 'still', 'within', 'scope', 'also', 'reference', 'data', 'store', 'outside', 'scope', 'data', 'store', 'rescope', 'tool', 'auto', 'correction', 'data', 'store', 'declaration', 'first', 'move', 'top', 'level', 'push', 'minimize', 'data', 'store', 'scope', 'previously', 'describe', 'instruction', 'instruction', 'tool', 'see', 'doc', 'userguide', 'pdf', 'capability', 'tool', 'base', 'development', 'see', 'two', 'paper', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'alexandre', 'korobkine', 'bennett', 'mackenzie', 'jeff', 'ong', 'marc', 'bender', 'toolset', 'improve', 'software', 'engineering', 'practice', 'development', 'proceeding', 'international', 'conference', 'drive', 'engineering', 'software', 'development', 'modelsward', 'scitepress', 'best', 'paper', 'award', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'monika', 'jaskolka', 'bennett', 'mackenzie', 'alexandre', 'korobkine', 'marc', 'bender', 'jeff', 'ong', 'gordon', 'mark', 'alan', 'wassyng', 'software', 'engineering', 'practice', 'bridge', 'gap', 'international', 'journal', 'software', 'tool', 'technology', 'transfer', 'stt', 'data', 'engineering']",5
1390,51177,"SimPowerSystems model of the The Australian simplified 14 generators IEEE benchmark<p>The Australian simplified 14 generators benchmark is loosely based on the southern and eastern Australian power systems. The benchmark was developed by the University of Adelaide (Mike Gibbard &amp; David Vowles) for research-oriented studies and educational purposes.The authors of the SimPowerSystems implementation of this benchmark are Ali Moeini and Innocent Kamwa, from IREQ Hydro-QuÃ©bec research institute. The model has 59 buses, 14 generators (modelling suitable models for turbine and governor system based on common parameters), and 29 loads. Several Power System Stabilizers (PSS) blocks and Multi-band Power System Stabilizer (MBPSS) blocks are also included in this model, along with a Static Var Compensator (SVC) block connected at B_205 bus.__ReferenceA. Moeini, I. Kamwa, P. Brunelle, G. Sybille, ""Open Data IEEE Test Systems Implemented in SimpowerSystems for Education and Research in Power Grid Dynamics and Control,"" Power Engineering Conference (UPEC), 2015 50th International Universities, 1-4 Sept. 2015, Staffordshire University, UK.<a href=""http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7339813&amp;tag=1"">http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7339813&amp;tag=1</a></p>ieee standardized benchmark,power system stabilizer pss,power systems network,static var compensator,14 bus,ieee,ieee 14 bus,ieee bus",798,15,2,0,1626,simpowersystems australian simplify generator iee benchmarkthe australian simplify generator benchmark loosely base southern eastern australian power benchmark develop university adelaide mike gibbard amp david vowles research orient study educational purpose author simpowersystems implementation benchmark ali moeini innocent kamwa ireq hydro quÃ©bec research institute bus generator suitable turbine governor base common parameter load several power stabilizer pss block multi band power stabilizer mbpss block also include along static var compensator svc block connect bus referencea moeini kamwa brunelle sybille open data iee test implement simpowersystems education research power grid dynamic control power engineering conference upec international university sept staffordshire university http ieexplore iee org xpl articledetails jsp arnumber amp tag iee standardize benchmarkpower stabilizer psspower networkstatic var compensator busieeiee busiee bus,"['simpowersystems', 'australian', 'simplify', 'generator', 'iee', 'benchmarkthe', 'australian', 'simplify', 'generator', 'benchmark', 'loosely', 'base', 'southern', 'eastern', 'australian', 'power', 'benchmark', 'develop', 'university', 'adelaide', 'mike', 'gibbard', 'amp', 'david', 'vowles', 'research', 'orient', 'study', 'educational', 'purpose', 'author', 'simpowersystems', 'implementation', 'benchmark', 'ali', 'moeini', 'innocent', 'kamwa', 'ireq', 'hydro', 'quÃ©bec', 'research', 'institute', 'bus', 'generator', 'suitable', 'turbine', 'governor', 'base', 'common', 'parameter', 'load', 'several', 'power', 'stabilizer', 'pss', 'block', 'multi', 'band', 'power', 'stabilizer', 'mbpss', 'block', 'also', 'include', 'along', 'static', 'var', 'compensator', 'svc', 'block', 'connect', 'bus', 'referencea', 'moeini', 'kamwa', 'brunelle', 'sybille', 'open', 'data', 'iee', 'test', 'implement', 'simpowersystems', 'education', 'research', 'power', 'grid', 'dynamic', 'control', 'power', 'engineering', 'conference', 'upec', 'international', 'university', 'sept', 'staffordshire', 'university', 'http', 'ieexplore', 'iee', 'org', 'xpl', 'articledetails', 'jsp', 'arnumber', 'amp', 'tag', 'iee', 'standardize', 'benchmarkpower', 'stabilizer', 'psspower', 'networkstatic', 'var', 'compensator', 'busieeiee', 'busiee', 'bus']",5
1391,51180,"The tool highlights data/control flow dependencies in Simulink models and performs model slicing.<p>The Reach/Coreach Tool tracks and highlights data flow and control flow in the model. The tool identifies, for some specified Simulink blocks, parts of the model that depend on those blocks (Reach functionality), or parts of the model that the specified blocks depend upon (Coreach functionality). After the dependencies have been identified, the extraneous blocks can be removed via the tool's model slicing function. For installation instructions and instructions on how to use the tool, see doc/ReachCoreach_UserGuide.pdf in the source files. For more about the capabilities of the tool and how it can be used in model-based development with Simulink, see the two papers:Vera Pantelic, Steven Postma, Mark Lawford, Monika Jaskolka, Bennett Mackenzie, Alexandre Korobkine, Marc Bender, Jeff Ong, Gordon Marks, Alan Wassyng, âSoftware engineering practices and Simulink: bridging the gap,â International Journal on Software Tools for Technology Transfer (STTT), 2017, 1-23.Vera Pantelic, Steven Postma, Mark Lawford, Alexandre Korobkine, Bennett Mackenzie, Jeff Ong, Marc Bender, ""A Toolset for Simulink: Improving Software Engineering Practices in Development with Simulink,"" Proceedings of 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD 2015), SCITEPRESS, 2015, 50-61. (Best Paper Award)</p>highlight,impact analysis,model slicing,simulink dependencies,trace",60,6,2,0,42,tool highlight data control flow dependency performs slice reach coreach tool track highlight data flow control flow tool identifies specify block part depend block reach functionality part specify block depend upon coreach functionality dependency identify extraneous block remove via tool slice function installation instruction instruction tool see doc reachcoreach userguide pdf source file capability tool base development see two paper vera pantelic steven postma mark lawford monika jaskolka bennett mackenzie alexandre korobkine marc bender jeff ong gordon mark alan wassyng software engineering practice bridge gap international journal software tool technology transfer stt vera pantelic steven postma mark lawford alexandre korobkine bennett mackenzie jeff ong marc bender toolset improve software engineering practice development proceeding international conference drive engineering software development modelsward scitepress best paper award highlightimpact analysismodel,"['tool', 'highlight', 'data', 'control', 'flow', 'dependency', 'performs', 'slice', 'reach', 'coreach', 'tool', 'track', 'highlight', 'data', 'flow', 'control', 'flow', 'tool', 'identifies', 'specify', 'block', 'part', 'depend', 'block', 'reach', 'functionality', 'part', 'specify', 'block', 'depend', 'upon', 'coreach', 'functionality', 'dependency', 'identify', 'extraneous', 'block', 'remove', 'via', 'tool', 'slice', 'function', 'installation', 'instruction', 'instruction', 'tool', 'see', 'doc', 'reachcoreach', 'userguide', 'pdf', 'source', 'file', 'capability', 'tool', 'base', 'development', 'see', 'two', 'paper', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'monika', 'jaskolka', 'bennett', 'mackenzie', 'alexandre', 'korobkine', 'marc', 'bender', 'jeff', 'ong', 'gordon', 'mark', 'alan', 'wassyng', 'software', 'engineering', 'practice', 'bridge', 'gap', 'international', 'journal', 'software', 'tool', 'technology', 'transfer', 'stt', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'alexandre', 'korobkine', 'bennett', 'mackenzie', 'jeff', 'ong', 'marc', 'bender', 'toolset', 'improve', 'software', 'engineering', 'practice', 'development', 'proceeding', 'international', 'conference', 'drive', 'engineering', 'software', 'development', 'modelsward', 'scitepress', 'best', 'paper', 'award', 'highlightimpact', 'analysismodel']",5
1392,51198,"Files to accompany the webinar: 'Modeling Systems with Multilevel Converters in MATLAB and Simulink'<p>We demonstrate how MathWorks tools may be used to model and simulate systems containing multilevel converter technology. A modular multilevel converter example will be used to explore the following topics,- Build models of multilevel converters programatically from base components- Use configurable subsystems to switch between different converter architectures- Analyze pulse-width modulation (PWM) harmonic signatures to verify the correctness of the models- Simulate different operational scenarios to test control system operation- HVDC power transfer- PMSM generation control- Automate report generation to record the output of simulation studies</p>webinar,electric_motor_control,power_conversion_control,power_electronics_control",356,27,3,0,391,file accompany webinar multilevel converter demonstrate mathworks tool may contain multilevel converter technology modular multilevel converter example explore follow topic build multilevel converter programatically base component configurable subsystem switch different converter architecture analyze pulse width modulation pwm harmonic signature verify correctness different operational scenario test control operation hvdc power transfer pmsm generation control automate report generation record output motor controlpower conversion controlpower electronics control,"['file', 'accompany', 'webinar', 'multilevel', 'converter', 'demonstrate', 'mathworks', 'tool', 'may', 'contain', 'multilevel', 'converter', 'technology', 'modular', 'multilevel', 'converter', 'example', 'explore', 'follow', 'topic', 'build', 'multilevel', 'converter', 'programatically', 'base', 'component', 'configurable', 'subsystem', 'switch', 'different', 'converter', 'architecture', 'analyze', 'pulse', 'width', 'modulation', 'pwm', 'harmonic', 'signature', 'verify', 'correctness', 'different', 'operational', 'scenario', 'test', 'control', 'operation', 'hvdc', 'power', 'transfer', 'pmsm', 'generation', 'control', 'automate', 'report', 'generation', 'record', 'output', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1393,51199,"Simulation of a wheeled inverted pendulum with casters<p>The SimMechanics model simulates a wheeled inverted pendulum with casters in the presence of friction and external disturbances.The input are the two torques applied to the wheel and pendulum, respectively.The task is to control the wheel and pendulum angles.</p>casters,control,inverted pendulum,simmechanics",113,7,4,0,127,wheel inverted pendulum castersthe simmechanics wheel inverted pendulum caster presence friction external disturbance input two torque apply wheel pendulum respectively task control wheel pendulum angle,"['wheel', 'inverted', 'pendulum', 'castersthe', 'simmechanics', 'wheel', 'inverted', 'pendulum', 'caster', 'presence', 'friction', 'external', 'disturbance', 'input', 'two', 'torque', 'apply', 'wheel', 'pendulum', 'respectively', 'task', 'control', 'wheel', 'pendulum', 'angle']",5
1394,51228,"The Auto Layout Tool is used to automatically improve the layout of Simulink models.<p>Modeling operations often perturb a model's layout. Layout readjustment is usually needed, and represents a tedious activity if performed manually. Although achieving a proper layout of a Simulink model is deemed very important, there does not exist a comprehensive commercial automatic layout tool for Simulink models. The Auto Layout Tool resizes models' blocks based on number of inputs and outputs, and organizes the signal lines such that the number of crossings is minimized. Auto Layout Tool can leverage three different layout approaches: 1) ""Graphviz"", a third-party open source tool for drawing graphs; 2) Matlabâs built-in ""GraphPlot"" layout capability; 3) an in-house ""DepthBased"" method. Approaches 1) and 3) can be utilized on any version of Matlab/Simulink, while approach 2) only works on R2015b+.For installation instructions and instructions on how to use the tool, see AutoLayout/doc/AutoLayout_UserGuide.pdf.For more about the capabilities of the tool and how it can be used in model-based development with Simulink, see the following two papers:Vera Pantelic, Steven Postma, Mark Lawford, Alexandre Korobkine, Bennett Mackenzie, Jeff Ong, Marc Bender, ""A Toolset for Simulink: Improving Software Engineering Practices in Development with Simulink,"" Proceedings of 3rd International Conference on Model-Driven Engineering and Software Development (MODELSWARD 2015), SCITEPRESS, 2015, 50-61. (Best Paper Award)Vera Pantelic, Steven Postma, Mark Lawford, Monika Jaskolka, Bennett Mackenzie, Alexandre Korobkine, Marc Bender, Jeff Ong, Gordon Marks, Alan Wassyng, âSoftware engineering practices and Simulink: bridging the gap,â International Journal on Software Tools for Technology Transfer (STTT), 2017, 1-23.</p>live script,automatic layout,model formatting,readability of simulink models",37,2,3,0,33,auto layout tool automatically improve layout operation often perturb layout layout readjustment usually need represent tedious activity perform manually although achieve proper layout deem important exist comprehensive commercial automatic layout tool auto layout tool resizes block base number input output organizes signal line number crossing minimized auto layout tool leverage three different layout approach graphviz third party open source tool draw graph matlabs build graphplot layout capability house depthbased method approach utilized version approach work installation instruction instruction tool see autolayout doc autolayout userguide pdf capability tool base development see follow two paper vera pantelic steven postma mark lawford alexandre korobkine bennett mackenzie jeff ong marc bender toolset improve software engineering practice development proceeding international conference drive engineering software development modelsward scitepress best paper award vera pantelic steven postma mark lawford monika jaskolka bennett mackenzie alexandre korobkine marc bender jeff ong gordon mark alan wassyng software engineering practice bridge gap international journal software tool technology transfer stt live scriptautomatic layoutmodel,"['auto', 'layout', 'tool', 'automatically', 'improve', 'layout', 'operation', 'often', 'perturb', 'layout', 'layout', 'readjustment', 'usually', 'need', 'represent', 'tedious', 'activity', 'perform', 'manually', 'although', 'achieve', 'proper', 'layout', 'deem', 'important', 'exist', 'comprehensive', 'commercial', 'automatic', 'layout', 'tool', 'auto', 'layout', 'tool', 'resizes', 'block', 'base', 'number', 'input', 'output', 'organizes', 'signal', 'line', 'number', 'crossing', 'minimized', 'auto', 'layout', 'tool', 'leverage', 'three', 'different', 'layout', 'approach', 'graphviz', 'third', 'party', 'open', 'source', 'tool', 'draw', 'graph', 'matlabs', 'build', 'graphplot', 'layout', 'capability', 'house', 'depthbased', 'method', 'approach', 'utilized', 'version', 'approach', 'work', 'installation', 'instruction', 'instruction', 'tool', 'see', 'autolayout', 'doc', 'autolayout', 'userguide', 'pdf', 'capability', 'tool', 'base', 'development', 'see', 'follow', 'two', 'paper', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'alexandre', 'korobkine', 'bennett', 'mackenzie', 'jeff', 'ong', 'marc', 'bender', 'toolset', 'improve', 'software', 'engineering', 'practice', 'development', 'proceeding', 'international', 'conference', 'drive', 'engineering', 'software', 'development', 'modelsward', 'scitepress', 'best', 'paper', 'award', 'vera', 'pantelic', 'steven', 'postma', 'mark', 'lawford', 'monika', 'jaskolka', 'bennett', 'mackenzie', 'alexandre', 'korobkine', 'marc', 'bender', 'jeff', 'ong', 'gordon', 'mark', 'alan', 'wassyng', 'software', 'engineering', 'practice', 'bridge', 'gap', 'international', 'journal', 'software', 'tool', 'technology', 'transfer', 'stt', 'live', 'scriptautomatic', 'layoutmodel']",5
1395,51232,"Driver blocks allowing Simulink models to interface with PWM, MCP3008/ADS1115 ADC, MCP4725 DAC<p>Support for the Raspberry Pi beyond toggling GPIO. Joshua Hurst did some good work creating these blocks: <a href=""http://uk.mathworks.com/matlabcentral/fileexchange/41529-raspberry-pi-pwm-driver-block-sfunction"">http://uk.mathworks.com/matlabcentral/fileexchange/41529-raspberry-pi-pwm-driver-block-sfunction</a> but there were a number of errors/steps lacking to get them compiling and working on a Raspberry Pi.Uncomment or copy into another Raspberry Pi model the blocks you wish to use.# Usage* You must open the S-Function driver block and click 'Build' to generate the  embedded coder files otherwise you will receive an error 'sfcn\_.... does  not exist'.* If using the ADS1115 and MCP4725 you will require my fork of wiringPi:  <a href=""https://github.com/tuna-f1sh/wiringPi-mcp4725"">https://github.com/tuna-f1sh/wiringPi-mcp4725</a> see the README for  installation instructions.* If using the PWM block, you will need to enable SPI in Raspbian - see: <a href=""http://uk.mathworks.com/help/supportpkg/raspberrypiio/examples/analog-input-using-spi.html"">http://uk.mathworks.com/help/supportpkg/raspberrypiio/examples/analog-input-using-spi.html</a> or enable via SSH.* The scopes work in real-time on the Pi to see the correct data is going  to/coming from blocks.* The discrete timestep is set to 'Ts' throughout the model. This is  initialised as 1e-3s at model load - it seems to be the sweet spot for  performance/usage. Remember to consider quantisation that this can create  with signals driving the blocks.# Notes* wiringPi softPWM:  <a href=""https://projects.drogon.net/raspberry-pi/wiringpi/software-pwm-library/*"">https://projects.drogon.net/raspberry-pi/wiringpi/software-pwm-library/*</a> Do not sure both ADC blocks at once without changing the wiringPi 'pin'  assignment - it won't work.* See the post on my blog explaining how these work: <a href=""http://wp.me/p2C0Bi-bK#"">http://wp.me/p2C0Bi-bK#</a> Install wiringPi Fork1. Login to the Pi via SSH.2. `git clone <a href=""https://github.com/tuna-f1sh/wiringPi-mcp4725`3"">https://github.com/tuna-f1sh/wiringPi-mcp4725`3</a>. `cd wiringPi-mcp4725`4. `./build`<a href=""http://www.jbrengineering.co.uk"">www.jbrengineering.co.uk</a> - @j_whittington - 2015</p>adc,dac,drivers,pwm,raspberrypi,rpi,electric_motor_control,power_conversion_control,power_electronics_control",5,0,1,0,13,driver block allow interface pwm mcp adc mcp dacsupport raspberry beyond toggle gpio joshua hurst good work create block http mathworks com matlabcentral fileexchange raspberry pwm driver block sfunction number error step lack get compile work raspberry uncomment copy another raspberry block wish usage must open function driver block click build generate embed coder file otherwise receive error sfcn exist mcp require fork wiringpi github com tuna wiringpi mcp see readme installation instruction pwm block need enable spi raspbian see http mathworks com help supportpkg raspberrypiio example analog input spi html enable via ssh scope work real time see correct data come block discrete timestep set throughout initialised load seem sweet spot performance usage remember consider quantisation create signal drive block note wiringpi softpwm project drogon net raspberry wiringpi software pwm sure adc block without change wiringpi pin assignment work see post blog explain work http install wiringpi fork login via ssh git clone github com tuna wiringpi mcp wiringpi mcp build jbrengineering whittington motor controlpower conversion controlpower electronics control,"['driver', 'block', 'allow', 'interface', 'pwm', 'mcp', 'adc', 'mcp', 'dacsupport', 'raspberry', 'beyond', 'toggle', 'gpio', 'joshua', 'hurst', 'good', 'work', 'create', 'block', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'raspberry', 'pwm', 'driver', 'block', 'sfunction', 'number', 'error', 'step', 'lack', 'get', 'compile', 'work', 'raspberry', 'uncomment', 'copy', 'another', 'raspberry', 'block', 'wish', 'usage', 'must', 'open', 'function', 'driver', 'block', 'click', 'build', 'generate', 'embed', 'coder', 'file', 'otherwise', 'receive', 'error', 'sfcn', 'exist', 'mcp', 'require', 'fork', 'wiringpi', 'github', 'com', 'tuna', 'wiringpi', 'mcp', 'see', 'readme', 'installation', 'instruction', 'pwm', 'block', 'need', 'enable', 'spi', 'raspbian', 'see', 'http', 'mathworks', 'com', 'help', 'supportpkg', 'raspberrypiio', 'example', 'analog', 'input', 'spi', 'html', 'enable', 'via', 'ssh', 'scope', 'work', 'real', 'time', 'see', 'correct', 'data', 'come', 'block', 'discrete', 'timestep', 'set', 'throughout', 'initialised', 'load', 'seem', 'sweet', 'spot', 'performance', 'usage', 'remember', 'consider', 'quantisation', 'create', 'signal', 'drive', 'block', 'note', 'wiringpi', 'softpwm', 'project', 'drogon', 'net', 'raspberry', 'wiringpi', 'software', 'pwm', 'sure', 'adc', 'block', 'without', 'change', 'wiringpi', 'pin', 'assignment', 'work', 'see', 'post', 'blog', 'explain', 'work', 'http', 'install', 'wiringpi', 'fork', 'login', 'via', 'ssh', 'git', 'clone', 'github', 'com', 'tuna', 'wiringpi', 'mcp', 'wiringpi', 'mcp', 'build', 'jbrengineering', 'whittington', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",0
1396,51243,"The ultracapacitor model developed on the basis of experimental data.<p>The ultracapacitor model has been developed in the PLECS toolbox. The experimental tests have been carried out in order to identify the parameters of ultracapacitor. The Maxwell Cell BCAP0310 (310 F) has been used in the study.  The model is dynamic, i.e. it reflects the transient state of ultracapacitor voltage. More details on the ultracapacitor model is presented in [1]. The parameterisation of the model allows to specify an ultracapacitor pack with a defined number of cells in series or parallel.The model is able to simulate terminal voltage of energy storage including the dependencies on state of charge and temperature. Performed studies allow to presume that the model adequately reflects ultracapacitor behaviour in the ranges of: - temperature -5Â°C â 40Â°C - cell voltage 0.5V â 2.7V  There is not possible to model pure variable resistors in PLECS, so a capacitive coupled variable resistor with very small capacitance has been used to model a series resistance. The full version is available for the licensed PLECS users. The non-licensed users need the free PLECS Viewer - <a href=""http://www.plexim.com/download/blockset.[1]"">http://www.plexim.com/download/blockset.[1]</a> Marek Michalczuk, Lech M. Grzesiak and Bartlomiej Ufnalski, Experimental parameter identification of battery-ultracapacitor energy storage system, IEEE International Symposium on Industrial Electronics (ISIE), 2015</p>bcap0310,boostcap,double layer capacitor,doublelayer capacitor,nonlinear capacitor,supercapacitor,supercapacitor model,supercapacitor pack,temperature dependent ultracapacitor model,ultracapacitor,ultracpacitor equivalent circuit,battery_system_management,power_electronics_control",12,2,2,0,8,ultracapacitor develop basis experimental data ultracapacitor develop plecs toolbox experimental test carry order identify parameter ultracapacitor maxwell cell bcap study dynamic reflect transient state ultracapacitor voltage detail ultracapacitor present allows specify ultracapacitor pack define number cell series parallel able terminal voltage energy storage include dependency state charge temperature perform study allow presume adequately reflect ultracapacitor behaviour range temperature cell voltage possible pure variable resistor plecs capacitive couple variable resistor small capacitance series resistance full version available licensed plecs user non license user need free plecs viewer http plexim com download blockset marek michalczuk lech grzesiak bartlomiej ufnalski experimental parameter identification battery ultracapacitor energy storage iee international symposium industrial electronics isie bcap boostcapdouble layer packtemperature dependent ultracapacitor equivalent circuitbattery managementpower electronics control,"['ultracapacitor', 'develop', 'basis', 'experimental', 'data', 'ultracapacitor', 'develop', 'plecs', 'toolbox', 'experimental', 'test', 'carry', 'order', 'identify', 'parameter', 'ultracapacitor', 'maxwell', 'cell', 'bcap', 'study', 'dynamic', 'reflect', 'transient', 'state', 'ultracapacitor', 'voltage', 'detail', 'ultracapacitor', 'present', 'allows', 'specify', 'ultracapacitor', 'pack', 'define', 'number', 'cell', 'series', 'parallel', 'able', 'terminal', 'voltage', 'energy', 'storage', 'include', 'dependency', 'state', 'charge', 'temperature', 'perform', 'study', 'allow', 'presume', 'adequately', 'reflect', 'ultracapacitor', 'behaviour', 'range', 'temperature', 'cell', 'voltage', 'possible', 'pure', 'variable', 'resistor', 'plecs', 'capacitive', 'couple', 'variable', 'resistor', 'small', 'capacitance', 'series', 'resistance', 'full', 'version', 'available', 'licensed', 'plecs', 'user', 'non', 'license', 'user', 'need', 'free', 'plecs', 'viewer', 'http', 'plexim', 'com', 'download', 'blockset', 'marek', 'michalczuk', 'lech', 'grzesiak', 'bartlomiej', 'ufnalski', 'experimental', 'parameter', 'identification', 'battery', 'ultracapacitor', 'energy', 'storage', 'iee', 'international', 'symposium', 'industrial', 'electronics', 'isie', 'bcap', 'boostcapdouble', 'layer', 'packtemperature', 'dependent', 'ultracapacitor', 'equivalent', 'circuitbattery', 'managementpower', 'electronics', 'control']",5
1397,51282,"Matlab function block access the masked system parameter<p>This file helps to access the masked subsystem parameter values to an embedded matlab function block.</p>embedded matlab function,mask,matlab function,simulink",9,1,2,0,7,function block access mask parameterthis file help access mask subsystem parameter value embed function block embed,"['function', 'block', 'access', 'mask', 'parameterthis', 'file', 'help', 'access', 'mask', 'subsystem', 'parameter', 'value', 'embed', 'function', 'block', 'embed']",7
1398,51465,"This Active filter based on the p-q theory is effectively compensating the harmonic currents.<p>Here, three-phase four wire source is implemented with phase to phase voltage of 400 v. It consists of Swing type generator. Unbalanced and Non-Linear Load is constructed using three bridge rectifiers connected to each phase and Neutral. Construction of Non-Linear load comprises only resistive and Inductive Load connected to the Bridge rectifier.A block called Shunt Active Filter is compensating the harmonic currents, Neutral current and reactive currents. This block is connected at the PCC through the circuit breaker. This block calculates the Instantaneous   active and reactive power of Non-Linear load based on Instantaneous P-Q theory . Thus obtained Active Power is filtered. Filtered Instantaneous Active Power together with Ploss, Reactive Power and neutral current are transformed to current in Î±Î² frame. Thus obtained currents in Î±Î² undergo inverse Clarke transformation and reference currents are calculated. Now, According to the reference current hysteresis band controller generates signals to Inverter. And these currents are feed to the load. This block is consists of following componentsa.Clarke transformation blocksb.P-Q calculation blockc.Digital High pass filterd.A Î±Î² calculation blocke. Inverse Clarke transformation blockf. Capacitors and Digital PI controller (Ploss calculation)g.Three phase Inverterh.Hysteresis band controller</p>electric_motor_control,power_electronics_control,active power filter,digital active power filter,power electronics,three phase four wire active power filter",209,11,4,0,261,active filter base theory effectively compensate harmonic current three phase four wire source implement phase phase voltage consist swing type generator unbalance non linear load construct three bridge rectifier connect phase neutral construction non linear load comprises resistive inductive load connect bridge rectifier block call shunt active filter compensate harmonic current neutral current reactive current block connect pcc circuit breaker block calculate instantaneous active reactive power non linear load base instantaneous theory thus obtain active power filter filtered instantaneous active power together ploss reactive power neutral current transform current frame thus obtain current undergo inverse clarke transformation reference current calculate accord reference current hysteresis band controller generate signal inverter current fee load block consist follow componentsa clarke transformation blocksb calculation blockc digital high pas filterd calculation blocke inverse clarke transformation blockf capacitor digital controller plo calculation three phase inverterh hysteresis band motor controlpower electronics controlactive power filterdigital active power filterpower phase four wire active power filter,"['active', 'filter', 'base', 'theory', 'effectively', 'compensate', 'harmonic', 'current', 'three', 'phase', 'four', 'wire', 'source', 'implement', 'phase', 'phase', 'voltage', 'consist', 'swing', 'type', 'generator', 'unbalance', 'non', 'linear', 'load', 'construct', 'three', 'bridge', 'rectifier', 'connect', 'phase', 'neutral', 'construction', 'non', 'linear', 'load', 'comprises', 'resistive', 'inductive', 'load', 'connect', 'bridge', 'rectifier', 'block', 'call', 'shunt', 'active', 'filter', 'compensate', 'harmonic', 'current', 'neutral', 'current', 'reactive', 'current', 'block', 'connect', 'pcc', 'circuit', 'breaker', 'block', 'calculate', 'instantaneous', 'active', 'reactive', 'power', 'non', 'linear', 'load', 'base', 'instantaneous', 'theory', 'thus', 'obtain', 'active', 'power', 'filter', 'filtered', 'instantaneous', 'active', 'power', 'together', 'ploss', 'reactive', 'power', 'neutral', 'current', 'transform', 'current', 'frame', 'thus', 'obtain', 'current', 'undergo', 'inverse', 'clarke', 'transformation', 'reference', 'current', 'calculate', 'accord', 'reference', 'current', 'hysteresis', 'band', 'controller', 'generate', 'signal', 'inverter', 'current', 'fee', 'load', 'block', 'consist', 'follow', 'componentsa', 'clarke', 'transformation', 'blocksb', 'calculation', 'blockc', 'digital', 'high', 'pas', 'filterd', 'calculation', 'blocke', 'inverse', 'clarke', 'transformation', 'blockf', 'capacitor', 'digital', 'controller', 'plo', 'calculation', 'three', 'phase', 'inverterh', 'hysteresis', 'band', 'motor', 'controlpower', 'electronics', 'controlactive', 'power', 'filterdigital', 'active', 'power', 'filterpower', 'phase', 'four', 'wire', 'active', 'power', 'filter']",4
1399,51536,"Fade an LED<p>Get acquainted with using the Simulink Support Package to program the Arduino.This example shows you how to make an LED increase and decrease gradually in brightness (fade effect).A sine-wave block is used to implement the fading effect. As the amplitude of the Sine Wave varies, the volume/brightness of the buzzer/LED will vary.</p>arduino,fade led,simulink support package for arduino",3,0,1,1,2,fade ledget acquaint support package program arduino example show make led increase decrease gradually brightness fade effect sine wave block implement fade effect amplitude sine wave varies volume brightness buzzer lead vary arduinofade support package arduino,"['fade', 'ledget', 'acquaint', 'support', 'package', 'program', 'arduino', 'example', 'show', 'make', 'led', 'increase', 'decrease', 'gradually', 'brightness', 'fade', 'effect', 'sine', 'wave', 'block', 'implement', 'fade', 'effect', 'amplitude', 'sine', 'wave', 'varies', 'volume', 'brightness', 'buzzer', 'lead', 'vary', 'arduinofade', 'support', 'package', 'arduino']",0
1400,51545,"Model a traffic light switching sequence using Stateflow<p>This project models a traffic light switching sequence, where the switching sequence is automated as follows:Red (5 sec) &gt; Amber (2 sec) &gt; Green (5 sec)The code initializes first by blinking all three LEDs three times, and then proceeds with the traffic light sequence.In the model, a Stateflow chart is used for the logical modelling.Adapted from Simon Monk's ""30 Arduino Projects for the Evil Genius"".</p>arduino,matlab,simulink support package for arduino,stateflow and arduino,traffic light arduino",5,3,1,3,6,traffic light switch sequence stateflowthis project traffic light switch sequence switch sequence automate follow red sec amber sec green sec code initialize first blinking three led three time proceeds traffic light sequence stateflow chart logical modelling adapt simon monk arduino project evil genius support package arduinotraffic light arduino,"['traffic', 'light', 'switch', 'sequence', 'stateflowthis', 'project', 'traffic', 'light', 'switch', 'sequence', 'switch', 'sequence', 'automate', 'follow', 'red', 'sec', 'amber', 'sec', 'green', 'sec', 'code', 'initialize', 'first', 'blinking', 'three', 'led', 'three', 'time', 'proceeds', 'traffic', 'light', 'sequence', 'stateflow', 'chart', 'logical', 'modelling', 'adapt', 'simon', 'monk', 'arduino', 'project', 'evil', 'genius', 'support', 'package', 'arduinotraffic', 'light', 'arduino']",5
1401,51597,"ModÃ©lisation Multi-physique du robot Maxpid avec SimMechanics2G<p>Le fichier propose une modÃ©lisation multi-physique du robot Maxpid avec SimMechanics2G.DÃ©compresser le fichier, mettre le fichier dans le ""path"" de MATLAB, lancer la simulation.Ivan LIEBGOTT</p>cpge,ivan,liebgott,matlab,maxpid,multi,multiphysique,physique,simmechanics,simscape",294,50,4,3,160,modÃ©lisation multi physique robot maxpid avec simmechanics gle fichier propose une modÃ©lisation multi physique robot maxpid avec simmechanics dÃ©compresser fichier mettre fichier dans path lancer ivan,"['modÃ©lisation', 'multi', 'physique', 'robot', 'maxpid', 'avec', 'simmechanics', 'gle', 'fichier', 'propose', 'une', 'modÃ©lisation', 'multi', 'physique', 'robot', 'maxpid', 'avec', 'simmechanics', 'dÃ©compresser', 'fichier', 'mettre', 'fichier', 'dans', 'path', 'lancer', 'ivan']",5
1402,51608,"A simple scheduled gain PID problem<p>This is a simple aircraft control problem which has some additional complexities added so make a test benchmark model. The model was designed as there was a requirement from one of the premium institutes of India to provide a benchmark model for formal method validation of a control system. Additional complexities are added to make it close to an actual control system.</p>aerospace,control,control design,example,simulink",233,12,3,0,243,simple schedule gain pid problemthis simple aircraft control problem additional complexity add make test benchmark design requirement one premium institute india provide benchmark formal method validation control additional complexity add make close actual control,"['simple', 'schedule', 'gain', 'pid', 'problemthis', 'simple', 'aircraft', 'control', 'problem', 'additional', 'complexity', 'add', 'make', 'test', 'benchmark', 'design', 'requirement', 'one', 'premium', 'institute', 'india', 'provide', 'benchmark', 'formal', 'method', 'validation', 'control', 'additional', 'complexity', 'add', 'make', 'close', 'actual', 'control']",0
1403,51704,"SOS -> Arduino -> LED<p>An SOS example is a great way to introduce yourself on how you will be able to use Matlab and Simulink with the Arduino hardware. We may relate a âhello worldâ example in C programming however in Arduinos and Microcontrollers, a Blinking LED is a way to do it but with a mixture of complexity.</p>arduino,arl,morse code,sos",3,0,1,0,2,arduino ledan sos example great way introduce able arduino hardware may relate hello world example program however arduinos blink lead way mixture complexity arduinoarlmorse codesos,"['arduino', 'ledan', 'sos', 'example', 'great', 'way', 'introduce', 'able', 'arduino', 'hardware', 'may', 'relate', 'hello', 'world', 'example', 'program', 'however', 'arduinos', 'blink', 'lead', 'way', 'mixture', 'complexity', 'arduinoarlmorse', 'codesos']",5
1404,51705,"ASCII -> Arduino -> LED or Piezo Electric Speaker<p>Extending the SOS Flasher, we wanted to create a project where in it takes in different combination of characters and converting it to morse code. The first thing the application would do is create a look up table of pulses with its associated alphabet and then it will determine how much short pulses and long pulses will it take for each alphabet you have entered. Simply it is an ASCII to Morse Code application.</p>arduino,ascii,morse,sos",4,0,1,0,3,ascii arduino lead piezo electric flasher want create project take different combination character convert morse code first thing application would create look table pulse associate alphabet determine much short pulse long pulse take alphabet enter simply ascii morse code application,"['ascii', 'arduino', 'lead', 'piezo', 'electric', 'flasher', 'want', 'create', 'project', 'take', 'different', 'combination', 'character', 'convert', 'morse', 'code', 'first', 'thing', 'application', 'would', 'create', 'look', 'table', 'pulse', 'associate', 'alphabet', 'determine', 'much', 'short', 'pulse', 'long', 'pulse', 'take', 'alphabet', 'enter', 'simply', 'ascii', 'morse', 'code', 'application']",0
1405,51707,"Have automated and manual modes for traffic light switching. Change anytime between the two modes!<p>This project is an extension to the âTraffic Light on Arduino using Stateflowâ project. In addition to modeling the switching of traffic lights, there are two modes: automated and manual. A Stateflow chart is used to create state machines for the automated and manual mode.Automated:Automates the switching sequence when the push button is held down for more than 1.5 seconds. Red (5 sec) &gt; Amber (2 sec) &gt; Green (5 sec).Manual:Changes the light each time the button is pressed.Transition from Manual to Automated mode:At any time within manual mode, if the pushbutton is held down for longer than 1.5 seconds, the mode will change to automated. The sequence will restart: Red &gt; Amber &gt; Green, even though the light may have been at amber or green at the point of change.Transition from Automated to Manual mode:At any time within automated mode, if the pushbutton is pressed, the mode will change to manual.Adapted from Simon Monk's ""30 Arduino Projects for the Evil Genius"".</p>maker,arduino,arduinostateflow,simulink support package for arduino,simulinkarduino,traffic light",13,8,1,7,16,automate manual mode traffic light switch change anytime two mode project extension traffic light arduino stateflow project addition switch traffic light two mode automate manual stateflow chart create state machine automate manual mode automate automates switch sequence push button hold second red sec amber sec green sec manual change light time button press transition manual automate mode time within manual mode pushbutton hold long second mode change automate sequence restart red amber green even though light may amber green point change transition automate manual mode time within automate mode pushbutton press mode change manual adapt simon monk arduino project evil genius support package light,"['automate', 'manual', 'mode', 'traffic', 'light', 'switch', 'change', 'anytime', 'two', 'mode', 'project', 'extension', 'traffic', 'light', 'arduino', 'stateflow', 'project', 'addition', 'switch', 'traffic', 'light', 'two', 'mode', 'automate', 'manual', 'stateflow', 'chart', 'create', 'state', 'machine', 'automate', 'manual', 'mode', 'automate', 'automates', 'switch', 'sequence', 'push', 'button', 'hold', 'second', 'red', 'sec', 'amber', 'sec', 'green', 'sec', 'manual', 'change', 'light', 'time', 'button', 'press', 'transition', 'manual', 'automate', 'mode', 'time', 'within', 'manual', 'mode', 'pushbutton', 'hold', 'long', 'second', 'mode', 'change', 'automate', 'sequence', 'restart', 'red', 'amber', 'green', 'even', 'though', 'light', 'may', 'amber', 'green', 'point', 'change', 'transition', 'automate', 'manual', 'mode', 'time', 'within', 'automate', 'mode', 'pushbutton', 'press', 'mode', 'change', 'manual', 'adapt', 'simon', 'monk', 'arduino', 'project', 'evil', 'genius', 'support', 'package', 'light']",5
1406,51708,"For Beginers - Blink an LED on Arduino with Simulink<p>This is the first Arduino demo with Simulink that you should try (if you're a beginner) before you attempt the rest in this list. It shows how you can blink an LED using a Digital output pin with signals coming from a pulse block in Simulink.Try using Arduino MEGA 2560 in external mode if you want to change the parameter in real time.</p>2560,arduino,blink,flash,led,pulse,uno,innovate msia competition",3,1,1,1,2,beginers blink lead arduino first arduino demo try beginner attempt rest list show blink lead digital output pin signal come pulse block try arduino mega external mode want change parameter real time msia competition,"['beginers', 'blink', 'lead', 'arduino', 'first', 'arduino', 'demo', 'try', 'beginner', 'attempt', 'rest', 'list', 'show', 'blink', 'lead', 'digital', 'output', 'pin', 'signal', 'come', 'pulse', 'block', 'try', 'arduino', 'mega', 'external', 'mode', 'want', 'change', 'parameter', 'real', 'time', 'msia', 'competition']",0
1407,51709,"Displays DICE output on LEDs with Arduino<p>This Arduino project displays the DICE count on an LED array. The LEDs will illuminate just like how a dice will display its values. The randomness of the dice is simulated using the random number generation block. The timer is controlled with a Stateflow chart. The selection of LEDs to be lighted up based on the final digit displayed by the dice is done using a truthtable.Adapted from Simon Monk's ""30 Arduino Projects for the Evil Genius"".</p>maker,arduino,dice,led,random number,stateflow,truthtable",14,8,1,8,13,display dice output led arduinothis arduino project display dice count lead array led illuminate like dice display value randomness dice random number generation block timer control stateflow chart selection led light base final digit display dice truthtable adapted simon monk arduino project evil genius,"['display', 'dice', 'output', 'led', 'arduinothis', 'arduino', 'project', 'display', 'dice', 'count', 'lead', 'array', 'led', 'illuminate', 'like', 'dice', 'display', 'value', 'randomness', 'dice', 'random', 'number', 'generation', 'block', 'timer', 'control', 'stateflow', 'chart', 'selection', 'led', 'light', 'base', 'final', 'digit', 'display', 'dice', 'truthtable', 'adapted', 'simon', 'monk', 'arduino', 'project', 'evil', 'genius']",5
1408,51710,"Program a Data Logging Shield using the S-Function Builder<p>This Simulink Model uses the S-Function Builder to program a Data Logging Shield attached to an Arduino UNO.It is makes use of existing C-code by Adafruit Industries (see below link), and shows how to integrate it into Simulink.<a href=""https://learn.adafruit.com/adafruit-data-logger-shield/overviewThe"">https://learn.adafruit.com/adafruit-data-logger-shield/overviewThe</a> data logger is portable and enables you to log sensor readings based on the sample time you set. The shield houses a real-time clock (RTC) that is powered by an external battery. This means that the clock is continuously ticking, regardless of whether the board is powered up or not. Data is logged onto an SD card in .csv format.You can connect the external circuit to an LDR to log light intensity in a room. Alternatively, you can utilize other sensors.Blog post on the data logger:<a href=""https://dashboardproject.wordpress.com/2015/12/29/simulink-device-driver-for-adafruit-data-logger-shield/**NEW**"">https://dashboardproject.wordpress.com/2015/12/29/simulink-device-driver-for-adafruit-data-logger-shield/**NEW**</a> Youtube Demonstration:<a href=""https://www.youtube.com/watch?v=RuIEY9heaSkBy"">https://www.youtube.com/watch?v=RuIEY9heaSkBy</a>: Esther Ling, Edu Engineer</p>battery_system_management,power_electronics_control,adafruit data logger,arduino,data logging shield,data logging shield arduino,simulink arduino,simulink support package arduino",1,0,1,0,0,program data log shield function builderthis function builder program data log shield attach arduino uno make exist code adafruit industry see link show integrate learn adafruit com adafruit data logger shield overviewthe data logger portable enables log sensor reading base sample time set shield house real time clock rtc power external battery mean clock continuously tick regardless whether board power data log onto card csv format connect external circuit ldr log light intensity room alternatively utilize sensor blog post data logger wordpress com device driver adafruit data logger shield new youtube demonstration youtube com watch ruiey heaskby esther ling edu engineerbattery managementpower electronics controladafruit data log shielddata log shield support package arduino,"['program', 'data', 'log', 'shield', 'function', 'builderthis', 'function', 'builder', 'program', 'data', 'log', 'shield', 'attach', 'arduino', 'uno', 'make', 'exist', 'code', 'adafruit', 'industry', 'see', 'link', 'show', 'integrate', 'learn', 'adafruit', 'com', 'adafruit', 'data', 'logger', 'shield', 'overviewthe', 'data', 'logger', 'portable', 'enables', 'log', 'sensor', 'reading', 'base', 'sample', 'time', 'set', 'shield', 'house', 'real', 'time', 'clock', 'rtc', 'power', 'external', 'battery', 'mean', 'clock', 'continuously', 'tick', 'regardless', 'whether', 'board', 'power', 'data', 'log', 'onto', 'card', 'csv', 'format', 'connect', 'external', 'circuit', 'ldr', 'log', 'light', 'intensity', 'room', 'alternatively', 'utilize', 'sensor', 'blog', 'post', 'data', 'logger', 'wordpress', 'com', 'device', 'driver', 'adafruit', 'data', 'logger', 'shield', 'new', 'youtube', 'demonstration', 'youtube', 'com', 'watch', 'ruiey', 'heaskby', 'esther', 'ling', 'edu', 'engineerbattery', 'managementpower', 'electronics', 'controladafruit', 'data', 'log', 'shielddata', 'log', 'shield', 'support', 'package', 'arduino']",0
1409,51718,"Simulink model to read data from Edu_Ball at 100 Hz.<p>Simulink model to check the feasibility of the EduBall platform im developing.See more information at the project page: <a href=""https://hackaday.io/project/5466-smart-juggling-ballsThe"">https://hackaday.io/project/5466-smart-juggling-ballsThe</a> model reads Acc/Gyro values through a COM port and performs basic data analysis, including demonstration of how to build a complementary filter based on acceleration and gyro information/</p>complementary filter,edu_ball,eduball,signal processing,smart juggling",152,10,2,0,167,read data edu ball check feasibility eduball platform develop see information project page hackaday project smart juggle ballsthe read acc gyro value com port performs basic data analysis include demonstration build complementary filter base acceleration gyro information complementary filteredu processingsmart juggling,"['read', 'data', 'edu', 'ball', 'check', 'feasibility', 'eduball', 'platform', 'develop', 'see', 'information', 'project', 'page', 'hackaday', 'project', 'smart', 'juggle', 'ballsthe', 'read', 'acc', 'gyro', 'value', 'com', 'port', 'performs', 'basic', 'data', 'analysis', 'include', 'demonstration', 'build', 'complementary', 'filter', 'base', 'acceleration', 'gyro', 'information', 'complementary', 'filteredu', 'processingsmart', 'juggling']",0
1410,51842,"Solar Photovoltaic Generators With MPPT and Battery Storage in Microgrids<p>In a microgrid, the microsources and storage devices are connectedto the feeders through the microsource controllers (MCs)and the coordination among the microsources is carried out bythe central controller (CC) [2]. The microgrid is connected tothe medium voltage level utility grid at the point of commoncoupling (PCC) through the circuit breakers. When a microgridis connected to the grid, the operational control of voltage andfrequency is done entirely by the grid; however, amicrogrid stillsupplies the critical loads at PCC, thus, acting as a PQ bus. Inislanded condition, a microgrid has to operate on its own, independentof the grid, to control the voltage and frequency of themicrogrid and hence, acts like a PV (power-voltage) bus. The operation and management in both the modes is controlled andcoordinated with the help of microsource controllers (MCs) atthe local level and central controller (CCs) at the global level.Similar to the traditional synchronous generator frequencycontrol [3], themicrogrid voltage and frequency control can alsobe performed using droop control methods [4]â[8]. The presentwork provides fast response characteristics for voltage and frequencycontrol as compared to the secondary control consideredin [8]. The analogy between inverter control and the synchronousgenerator control in an islanded microgrid is studiedin detail in [9]. In the islanded mode, there is the necessity ofhaving a reference voltage and frequency signals in the microgridinverter control [10].The operation and control of the inverter interface of renewable-based distributed energy resources (DERs), like SolarPhotovoltaic (PV) in a microgrid, is a real challenge, especiallywhen it comes to maintaining both microgrid voltage and frequencywithin an acceptable range. A voltage control methodbased on traditional droop control for voltage sag mitigationalong with voltage ride through capability is proposed in [11].A dynamic voltage regulation based on adaptive control isproposed in [12], [13]. However, there are not many researchworks performed on V-f or P-Q control using solar PV includingMPPT control and battery storage in microgrids. In[14], frequency regulation with PV in microgrids is studied;however, this work does not consider the voltage controlobjective and lacks battery storage in the microgrid.In [15], a small scale PV is considered in a grid-connectedmode to control the active and reactive power of the system.Here, the control methods consider abc-dq0 transformation andvice versa which is avoided in the present paper. In [16], powermodulation of solar PV generators with an electric double layercapacitor as energy storage is considered for frequency control.In [17], load frequency control is implemented in microgridwithPV and storage; however, this work also lacks the considerationof a voltage control objective. The voltage and frequency controlwith solar PV and battery in microgrid with an inductionmachine is investigated in [18]; however, this work does not explainthe transfer mechanism of controls to consider the batterySOC constraint. In summary, the previous works in this topiceither lack the incorporation of an energy storage componentor the voltage control objective along with frequency controlor the incorporation of control transition in different scenarios.The present work fulfills these gaps by considering all of theseobjectives.</p>battery_system_management,power_conversion_control,power_electronics_control,boost conveter,inverter,simulation,simulink,solar",522,21,5,0,617,solar photovoltaic generator mppt battery storage microgridsin microgrid microsources storage device connectedto feeder microsource controller mcs coordination among microsources carry bythe central controller microgrid connect tothe medium voltage level utility grid point commoncoupling pcc circuit breaker microgridis connect grid operational control voltage andfrequency entirely grid however amicrogrid stillsupplies critical load pcc thus act bus inislanded condition microgrid operate independentof grid control voltage frequency themicrogrid hence act like power voltage bus operation management mode control andcoordinated help microsource controller mcs atthe local level central controller global level similar traditional synchronous generator themicrogrid voltage frequency control alsobe perform droop control method presentwork provide fast response characteristic voltage compare secondary control consideredin analogy inverter control control islanded microgrid studiedin detail islanded mode necessity ofhaving reference voltage frequency signal control operation control inverter interface renewable base distribute energy resource ders like microgrid real challenge especiallywhen come maintain microgrid voltage frequencywithin acceptable range voltage control methodbased traditional droop control voltage sag mitigationalong voltage ride capability propose dynamic voltage regulation base adaptive control isproposed however many researchworks perform control solar includingmppt control battery storage microgrids frequency regulation microgrids study however work consider voltage lack battery storage microgrid small scale consider grid connectedmode control active reactive power control method consider abc transformation andvice versa avoid present paper powermodulation solar generator electric double layercapacitor energy storage consider frequency control load frequency control implement microgridwithpv storage however work also lack considerationof voltage control objective voltage frequency controlwith solar battery microgrid investigate however work explainthe transfer mechanism control consider batterysoc constraint summary previous work topiceither lack incorporation energy storage componentor voltage control objective along frequency controlor incorporation control transition different scenario present work fulfills gap consider theseobjectives battery managementpower conversion controlpower electronics controlboost,"['solar', 'photovoltaic', 'generator', 'mppt', 'battery', 'storage', 'microgridsin', 'microgrid', 'microsources', 'storage', 'device', 'connectedto', 'feeder', 'microsource', 'controller', 'mcs', 'coordination', 'among', 'microsources', 'carry', 'bythe', 'central', 'controller', 'microgrid', 'connect', 'tothe', 'medium', 'voltage', 'level', 'utility', 'grid', 'point', 'commoncoupling', 'pcc', 'circuit', 'breaker', 'microgridis', 'connect', 'grid', 'operational', 'control', 'voltage', 'andfrequency', 'entirely', 'grid', 'however', 'amicrogrid', 'stillsupplies', 'critical', 'load', 'pcc', 'thus', 'act', 'bus', 'inislanded', 'condition', 'microgrid', 'operate', 'independentof', 'grid', 'control', 'voltage', 'frequency', 'themicrogrid', 'hence', 'act', 'like', 'power', 'voltage', 'bus', 'operation', 'management', 'mode', 'control', 'andcoordinated', 'help', 'microsource', 'controller', 'mcs', 'atthe', 'local', 'level', 'central', 'controller', 'global', 'level', 'similar', 'traditional', 'synchronous', 'generator', 'themicrogrid', 'voltage', 'frequency', 'control', 'alsobe', 'perform', 'droop', 'control', 'method', 'presentwork', 'provide', 'fast', 'response', 'characteristic', 'voltage', 'compare', 'secondary', 'control', 'consideredin', 'analogy', 'inverter', 'control', 'control', 'islanded', 'microgrid', 'studiedin', 'detail', 'islanded', 'mode', 'necessity', 'ofhaving', 'reference', 'voltage', 'frequency', 'signal', 'control', 'operation', 'control', 'inverter', 'interface', 'renewable', 'base', 'distribute', 'energy', 'resource', 'ders', 'like', 'microgrid', 'real', 'challenge', 'especiallywhen', 'come', 'maintain', 'microgrid', 'voltage', 'frequencywithin', 'acceptable', 'range', 'voltage', 'control', 'methodbased', 'traditional', 'droop', 'control', 'voltage', 'sag', 'mitigationalong', 'voltage', 'ride', 'capability', 'propose', 'dynamic', 'voltage', 'regulation', 'base', 'adaptive', 'control', 'isproposed', 'however', 'many', 'researchworks', 'perform', 'control', 'solar', 'includingmppt', 'control', 'battery', 'storage', 'microgrids', 'frequency', 'regulation', 'microgrids', 'study', 'however', 'work', 'consider', 'voltage', 'lack', 'battery', 'storage', 'microgrid', 'small', 'scale', 'consider', 'grid', 'connectedmode', 'control', 'active', 'reactive', 'power', 'control', 'method', 'consider', 'abc', 'transformation', 'andvice', 'versa', 'avoid', 'present', 'paper', 'powermodulation', 'solar', 'generator', 'electric', 'double', 'layercapacitor', 'energy', 'storage', 'consider', 'frequency', 'control', 'load', 'frequency', 'control', 'implement', 'microgridwithpv', 'storage', 'however', 'work', 'also', 'lack', 'considerationof', 'voltage', 'control', 'objective', 'voltage', 'frequency', 'controlwith', 'solar', 'battery', 'microgrid', 'investigate', 'however', 'work', 'explainthe', 'transfer', 'mechanism', 'control', 'consider', 'batterysoc', 'constraint', 'summary', 'previous', 'work', 'topiceither', 'lack', 'incorporation', 'energy', 'storage', 'componentor', 'voltage', 'control', 'objective', 'along', 'frequency', 'controlor', 'incorporation', 'control', 'transition', 'different', 'scenario', 'present', 'work', 'fulfills', 'gap', 'consider', 'theseobjectives', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlboost']",4
1411,51921,"Fuzzy based grid connected PV system<p>Fuzzy controller based</p>fuzzy,fuzzy logic,grid,photovoltaic,power_conversion_control,power_electronics_control",207,8,3,0,244,fuzzy base grid connect systemfuzzy controller basedfuzzyfuzzy conversion controlpower electronics control,"['fuzzy', 'base', 'grid', 'connect', 'systemfuzzy', 'controller', 'basedfuzzyfuzzy', 'conversion', 'controlpower', 'electronics', 'control']",1
1412,51925,rectifier in simulink<p>rectifier in simulink</p>simulink,12,0,1,0,16,rectifier,['rectifier'],1
1413,51927,"Driving a power window with Arduino motor shield R3<p>This submission demonstrates a simple demo to control a Power Window. A youtube video showing the workings of the power window can be seen here: <a href=""https://www.youtube.com/watch?v=wF2_TT3C-98This"">https://www.youtube.com/watch?v=wF2_TT3C-98This</a> submission uses motor shiel blocks from: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/46133-motor-shields"">http://www.mathworks.com/matlabcentral/fileexchange/46133-motor-shields</a></p>electric_motor_control,power_electronics_control,arduino,motor shield r3,power window,simulink,stateflow",7,0,1,3,9,drive power window arduino motor shield submission demonstrate simple demo control power window youtube video show working power window see youtube com watch submission motor shiel block http mathworks com matlabcentral fileexchange motor shieldselectric motor controlpower electronics shield power,"['drive', 'power', 'window', 'arduino', 'motor', 'shield', 'submission', 'demonstrate', 'simple', 'demo', 'control', 'power', 'window', 'youtube', 'video', 'show', 'working', 'power', 'window', 'see', 'youtube', 'com', 'watch', 'submission', 'motor', 'shiel', 'block', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'motor', 'shieldselectric', 'motor', 'controlpower', 'electronics', 'shield', 'power']",7
1414,51928,"Simulation of voltage sag and swell disturance cause by line fault.<p>This line fault model is capable of simulating voltage sag and voltage swell cause by various line faults including single line to ground, double line to ground, line to line, three phase fault and multistage.You can download my book chapter from the link below for details readinghttps://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulinkorhttps://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulinkorhttps://www.intechopen.com/download/pdf/48982</a></p>ieee bus,line fault,power quality,voltage sag,voltage swell,over load",12,0,1,0,22,voltage sag swell disturance cause line fault line fault capable voltage sag voltage swell cause various line fault include single line ground double line ground line line three phase fault multistage download book chapter link detail read intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf iee busline faultpower qualityvoltage sagvoltage swellover load,"['voltage', 'sag', 'swell', 'disturance', 'cause', 'line', 'fault', 'line', 'fault', 'capable', 'voltage', 'sag', 'voltage', 'swell', 'cause', 'various', 'line', 'fault', 'include', 'single', 'line', 'ground', 'double', 'line', 'ground', 'line', 'line', 'three', 'phase', 'fault', 'multistage', 'download', 'book', 'chapter', 'link', 'detail', 'read', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'iee', 'busline', 'faultpower', 'qualityvoltage', 'sagvoltage', 'swellover', 'load']",0
1415,51929,"Simulation of voltage sag caused by starting a high-power industry induction motor<p>The induction motor starting model is used to simulate voltage sag caused by starting a high-power industry induction motorYou can download my book chapter from the link below for details readinghttp://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982</a></p>electric_motor_control,power_electronics_control,induction motor,power quality,voltage sag",14,0,1,0,27,voltage sag cause start high power industry induction motorthe induction motor start voltage sag cause start high power industry induction motoryou download book chapter link detail readinghttp intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf electric motor controlpower electronics motorpower qualityvoltage sag,"['voltage', 'sag', 'cause', 'start', 'high', 'power', 'industry', 'induction', 'motorthe', 'induction', 'motor', 'start', 'voltage', 'sag', 'cause', 'start', 'high', 'power', 'industry', 'induction', 'motoryou', 'download', 'book', 'chapter', 'link', 'detail', 'readinghttp', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'electric', 'motor', 'controlpower', 'electronics', 'motorpower', 'qualityvoltage', 'sag']",4
1416,51931,"Simulation of voltage sag caused by transformer energizing<p>Transformer Energizing Model is used to simulate voltage sag caused by transformer inrush current and core saturation during energizing.You can download my book chapter from the link below for details readinghttp://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982</a></p>power quality,transformer energizing,voltage sag",9,0,1,0,16,voltage sag cause transformer energizing voltage sag cause transformer inrush current core saturation energize download book chapter link detail readinghttp intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf power sag,"['voltage', 'sag', 'cause', 'transformer', 'energizing', 'voltage', 'sag', 'cause', 'transformer', 'inrush', 'current', 'core', 'saturation', 'energize', 'download', 'book', 'chapter', 'link', 'detail', 'readinghttp', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'power', 'sag']",0
1417,51933,"Simulation of oscillatory transient caused by capacitor banking energizing<p>The capacitor bank switching model is used to simulate voltage oscillatory transient caused by capacitor banking energizing for power factor correction in the power system.<a href=""https://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulink"">https://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulink</a> or <a href=""https://www.intechopen.com/download/pdf/48982"">https://www.intechopen.com/download/pdf/48982</a></p>capacitor bank,oscillatory transient,power quality,transient",11,0,1,0,20,oscillatory transient cause capacitor banking energizingthe capacitor bank switch voltage oscillatory transient cause capacitor banking energize power factor correction power intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf capacitor bankoscillatory transientpower,"['oscillatory', 'transient', 'cause', 'capacitor', 'banking', 'energizingthe', 'capacitor', 'bank', 'switch', 'voltage', 'oscillatory', 'transient', 'cause', 'capacitor', 'banking', 'energize', 'power', 'factor', 'correction', 'power', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'capacitor', 'bankoscillatory', 'transientpower']",4
1418,51934,"Simulation of impulsive transient caused by lightning<p>Lightning model is used to simulate impulsive transient caused by lightning near the transmission lineYou can download my book chapter from the link below for details readinghttp://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982</a></p>impulsive transient,lightning,power quality,transient",22,1,2,0,29,impulsive transient cause used impulsive transient cause lightning near transmission lineyou download book chapter link detail readinghttp intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf impulsive,"['impulsive', 'transient', 'cause', 'used', 'impulsive', 'transient', 'cause', 'lightning', 'near', 'transmission', 'lineyou', 'download', 'book', 'chapter', 'link', 'detail', 'readinghttp', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'impulsive']",0
1419,51935,"Simulation of triplen harmonic caused by single phase bridge rectfier and filter capacitor<p>The Single Phase Non Linear Load Model is used to simulate triplen harmonic voltage disturbance caused by single-phase power electronic converter load, bridge rectifier with filter capacitor that is commonly found in domestic and commercial buildings.You can download my book chapter from the link below for details readinghttps://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulinkorhttps://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulinkorhttps://www.intechopen.com/download/pdf/48982</a></p>power_conversion_control,power_electronics_control,capacitor filter,harmonic,non linear load,power quality,single phase bridge rectifier,triplen harmonic",15,0,1,0,28,triplen harmonic cause single phase bridge rectfier filter capacitorthe single phase non linear load triplen harmonic voltage disturbance cause single phase power electronic converter load bridge rectifier filter capacitor commonly find domestic commercial building download book chapter link detail read intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf power conversion controlpower electronics linear loadpower qualitysingle phase bridge harmonic,"['triplen', 'harmonic', 'cause', 'single', 'phase', 'bridge', 'rectfier', 'filter', 'capacitorthe', 'single', 'phase', 'non', 'linear', 'load', 'triplen', 'harmonic', 'voltage', 'disturbance', 'cause', 'single', 'phase', 'power', 'electronic', 'converter', 'load', 'bridge', 'rectifier', 'filter', 'capacitor', 'commonly', 'find', 'domestic', 'commercial', 'building', 'download', 'book', 'chapter', 'link', 'detail', 'read', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'power', 'conversion', 'controlpower', 'electronics', 'linear', 'loadpower', 'qualitysingle', 'phase', 'bridge', 'harmonic']",3
1420,51936,"Simulation of voltage notches and harmonic caused by 6-pulse three phase rectifier<p>This three phase nonlinear load model is used to simulate voltage notches and harmonic caused by 6-pulse three-phase rectifier.You can download my book chapter from the link below for details readinghttps://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulinkorhttps://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-simulinkorhttps://www.intechopen.com/download/pdf/48982</a></p>6pulse rectifier,harmonic,power quality,voltage notch",13,0,1,0,22,voltage notch harmonic cause pulse three phase rectifierthis three phase nonlinear load voltage notch harmonic cause pulse three phase rectifier download book chapter link detail read intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf pulse qualityvoltage notch,"['voltage', 'notch', 'harmonic', 'cause', 'pulse', 'three', 'phase', 'rectifierthis', 'three', 'phase', 'nonlinear', 'load', 'voltage', 'notch', 'harmonic', 'cause', 'pulse', 'three', 'phase', 'rectifier', 'download', 'book', 'chapter', 'link', 'detail', 'read', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'pulse', 'qualityvoltage', 'notch']",4
1421,51937,"Simulation of voltage flicker caused by electric arc furnace<p>The Electric Arc Furnace Model is used to simulate flicker disturbance caused by the electric arc furnace based on hyperbolic model.You can download my book chapter from the link below for details readinghttp://<a href=""http://www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982"">www.intechopen.com/books/power-quality-issues-in-distributed-generation/a-comprehensive-modeling-and-simulation-of-power-quality-disturbances-using-matlab-Simulinkorhttp://www.intechopen.com/download/pdf/48982</a></p>electric arc furnace,flicker,power quality",26,1,2,0,31,voltage flicker cause electric arc furnacethe electric arc furnace flicker disturbance cause electric arc furnace base hyperbolic download book chapter link detail readinghttp intechopen com book power quality issue distribute generation comprehensive power quality disturbance intechopen com download pdf electric arc quality,"['voltage', 'flicker', 'cause', 'electric', 'arc', 'furnacethe', 'electric', 'arc', 'furnace', 'flicker', 'disturbance', 'cause', 'electric', 'arc', 'furnace', 'base', 'hyperbolic', 'download', 'book', 'chapter', 'link', 'detail', 'readinghttp', 'intechopen', 'com', 'book', 'power', 'quality', 'issue', 'distribute', 'generation', 'comprehensive', 'power', 'quality', 'disturbance', 'intechopen', 'com', 'download', 'pdf', 'electric', 'arc', 'quality']",4
1422,51939,"Simple encoder with Arduino, LED and LDR<p>This model illustrates motor encoder using an LED and LDR. A black disk with a single hole (where light passes through) is attached to the motor shaft. Each time the motor completes a revolution, the LED light passes through the hole and LDR receives it, which then alter the resistance of the LDR and hence the signal reading at the digital input port.</p>electric_motor_control,power_electronics_control,arduino,dc motor,encoder,ldr,led,simulink,support package",29,3,2,2,29,simple encoder arduino lead ldrthis illustrates motor encoder lead ldr black disk single hole light pass attach motor shaft time motor complete revolution lead light pass hole ldr receives alter resistance ldr hence signal reading digital input port electric motor controlpower electronics package,"['simple', 'encoder', 'arduino', 'lead', 'ldrthis', 'illustrates', 'motor', 'encoder', 'lead', 'ldr', 'black', 'disk', 'single', 'hole', 'light', 'pass', 'attach', 'motor', 'shaft', 'time', 'motor', 'complete', 'revolution', 'lead', 'light', 'pass', 'hole', 'ldr', 'receives', 'alter', 'resistance', 'ldr', 'hence', 'signal', 'reading', 'digital', 'input', 'port', 'electric', 'motor', 'controlpower', 'electronics', 'package']",4
1423,51950,"Automatic night light which switches on when its dark - using Arduino and LDR<p>This model illustrates a simple automatic light switch with an LDR.When the light is on, the LED will be off. When itâs off, the LED will turn on.Remember to tune the LDR value in Stateflow model depending on the light intensity of your environment.</p>arduino,controller,ldr,light,simulink,stateflow,switch",4,1,1,2,3,automatic night light switch dark arduino ldrthis illustrate simple automatic light switch ldr light lead lead turn remember tune ldr value stateflow depend light intensity environment,"['automatic', 'night', 'light', 'switch', 'dark', 'arduino', 'ldrthis', 'illustrate', 'simple', 'automatic', 'light', 'switch', 'ldr', 'light', 'lead', 'lead', 'turn', 'remember', 'tune', 'ldr', 'value', 'stateflow', 'depend', 'light', 'intensity', 'environment']",5
1424,51980,"Use of Arduino Capacitive Sensing Library in Simulink using S-Functions<p>The 3-Note Piano makes use of the capacitive sensing library to generate a tone when a sensing plate is touched. A sensing plate, which is a material with insulating properties, is connected to a high value resistor enables the Arduino to sense the electrical capacitance of the human body.In Simulink, C-code is wrapped in an S-Function.</p>arduino,arduino s function,capacitive sensing library",5,0,1,0,4,arduino capacitive sense functionsthe note piano make capacitive sense generate tone sense plate touch sense plate material insulate property connect high value resistor enable arduino sense electrical capacitance human body code wrap function arduinoarduino sense,"['arduino', 'capacitive', 'sense', 'functionsthe', 'note', 'piano', 'make', 'capacitive', 'sense', 'generate', 'tone', 'sense', 'plate', 'touch', 'sense', 'plate', 'material', 'insulate', 'property', 'connect', 'high', 'value', 'resistor', 'enable', 'arduino', 'sense', 'electrical', 'capacitance', 'human', 'body', 'code', 'wrap', 'function', 'arduinoarduino', 'sense']",5
1425,51983,"An early introduction to using S-Functions with Simulink + Arduino.<p>Play a simple tune on a buzzer using an Arduino. Learn how to integrate existing C-code from the Arduino IDE examples through the S-Function Builder.Adapted from Simon Monk's ""30 Arduino Projects for the Evil Genius"" - Project 19.By:Esther Ling, Edu Engineer</p>arduino,maker,arduino s function,arduino simulink,tune arduino",1,0,1,0,0,early introduction function arduino play simple tune buzzer arduino learn integrate exist code arduino ide examples function builder adapt simon monk arduino project evil genius project esther ling edu functionarduino arduino,"['early', 'introduction', 'function', 'arduino', 'play', 'simple', 'tune', 'buzzer', 'arduino', 'learn', 'integrate', 'exist', 'code', 'arduino', 'ide', 'examples', 'function', 'builder', 'adapt', 'simon', 'monk', 'arduino', 'project', 'evil', 'genius', 'project', 'esther', 'ling', 'edu', 'functionarduino', 'arduino']",0
1426,51987,"Detect how close an object is and map its proximity to a note.<p>Write an S-Function to detect proximity of an object and play a note in response. This project uses an IR LED that emits light in the IR region. An IR sensor (photo-transistor) is used in pair with the IR LED, and is connected closely to the IR LED. When an object is brought close to the IR-LED, IR-light will be reflected and will cause the light intensity to change, depending on how close the object is. The sensor will measure the changes in intensity and map those values to different notes.In the modelling stage, use Simulink External Mode to run the model live-time in order to locate and program appropriate threshold values.By:Esther Ling, Edu Engineer</p>arduino s function,mathematics,theremin",3,0,1,1,2,detect close object map proximity note write function detect proximity object play note response project lead emits light region sensor photo transistor pair lead connect closely lead object bring close lead light reflect cause light intensity change depend close object sensor measure change intensity map value different note stage external mode run live time order locate program appropriate threshold value esther ling edu engineerarduino,"['detect', 'close', 'object', 'map', 'proximity', 'note', 'write', 'function', 'detect', 'proximity', 'object', 'play', 'note', 'response', 'project', 'lead', 'emits', 'light', 'region', 'sensor', 'photo', 'transistor', 'pair', 'lead', 'connect', 'closely', 'lead', 'object', 'bring', 'close', 'lead', 'light', 'reflect', 'cause', 'light', 'intensity', 'change', 'depend', 'close', 'object', 'sensor', 'measure', 'change', 'intensity', 'map', 'value', 'different', 'note', 'stage', 'external', 'mode', 'run', 'live', 'time', 'order', 'locate', 'program', 'appropriate', 'threshold', 'value', 'esther', 'ling', 'edu', 'engineerarduino']",0
1427,52000,"Onephase Ac-AC<p>This simulation show onephase AC-AC convertor</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",74,8,3,0,75,onephase acthis show onephase motor controlpower conversion controlpower electronics,"['onephase', 'acthis', 'show', 'onephase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1428,52002,"Explorer les fonctionnalitÃ©s du Robot LEGO EV3<p>Cet exemple fait partie de l'atelier Math &amp; Robot proposer par le Palais de la dÃ©couverte.<a href=""http://www.palais-decouverte.fr/fr/vous-etes/enseignants/a-la-une/maths-et-robot/Lors"">http://www.palais-decouverte.fr/fr/vous-etes/enseignants/a-la-une/maths-et-robot/Lors</a> de cette sÃ©ance, nous vous proposons de vous familiariser avec la programmation via Simulink pour piloter un robot EV3.A l'issue de l'atelier, votre robot sera capable de suivre une piste de faÃ§on autonome.Les exemples vont vous permettre d'explorer les diffÃ©rentes fonctionnalitÃ©s proposÃ©es par le ROBOT Lego EV3Faire avancer, reculer ou tourner le robot avec une consigne de vitesse et une consigne de direction.Utiliser le sonar, le haut-parleur et le capteur de couleur</p>robotics,lego ev3,ev3",8,0,1,0,8,explorer les fonctionnalitÃ©s robot lego cet exemple fait partie atelier math amp robot proposer par palais dÃ©couverte http palais decouverte vous etes enseignants une math robot lors cette sÃ©ance nous vous proposons vous familiariser avec programmation via pour piloter robot issue atelier votre robot serum capable suivre une piste faÃ§on autonome exemples vont vous permettre explorer diffÃ©rentes fonctionnalitÃ©s proposÃ©es par robot lego faire avancer reculer tourner robot avec une consigne vitesse une consigne direction utiliser sonar haut parleur capteur,"['explorer', 'les', 'fonctionnalitÃ©s', 'robot', 'lego', 'cet', 'exemple', 'fait', 'partie', 'atelier', 'math', 'amp', 'robot', 'proposer', 'par', 'palais', 'dÃ©couverte', 'http', 'palais', 'decouverte', 'vous', 'etes', 'enseignants', 'une', 'math', 'robot', 'lors', 'cette', 'sÃ©ance', 'nous', 'vous', 'proposons', 'vous', 'familiariser', 'avec', 'programmation', 'via', 'pour', 'piloter', 'robot', 'issue', 'atelier', 'votre', 'robot', 'serum', 'capable', 'suivre', 'une', 'piste', 'faÃ§on', 'autonome', 'exemples', 'vont', 'vous', 'permettre', 'explorer', 'diffÃ©rentes', 'fonctionnalitÃ©s', 'proposÃ©es', 'par', 'robot', 'lego', 'faire', 'avancer', 'reculer', 'tourner', 'robot', 'avec', 'une', 'consigne', 'vitesse', 'une', 'consigne', 'direction', 'utiliser', 'sonar', 'haut', 'parleur', 'capteur']",8
1429,52004,"Driver for Arduino Data Logging Shield<p>Write a device driver using the MATLAB function block approach for the Arduino Data Logging Shield. This project is an extension to the earlier submission ""Data Logger on Arduino using S-Functions"" available here:<a href=""http://www.mathworks.com/matlabcentral/fileexchange/51710-data-logger-on-arduino-uno-using-s-functionsFor"">http://www.mathworks.com/matlabcentral/fileexchange/51710-data-logger-on-arduino-uno-using-s-functionsFor</a> this particular project, this is the easier approach for creating a device driver compared to the S-Function Builder project for two reasons:- Easier to add the include lines for the libraries.- Eliminates the need to keep re-building whenever a change needs to be made to the code.By: Esther Ling, Edu Engineer</p>arduino,arduino driver,arduino logger,data logging shield,driver data logger",1,0,1,0,0,driver arduino data log shieldwrite device driver function block approach arduino data log shield project extension earlier submission data logger arduino function available http mathworks com matlabcentral fileexchange data logger arduino uno functionsfor particular project easy approach create device driver compare function builder project two reason easier add include line eliminates need keep building whenever change need make code esther ling edu driverarduino loggerdata log shielddriver data logger,"['driver', 'arduino', 'data', 'log', 'shieldwrite', 'device', 'driver', 'function', 'block', 'approach', 'arduino', 'data', 'log', 'shield', 'project', 'extension', 'earlier', 'submission', 'data', 'logger', 'arduino', 'function', 'available', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'data', 'logger', 'arduino', 'uno', 'functionsfor', 'particular', 'project', 'easy', 'approach', 'create', 'device', 'driver', 'compare', 'function', 'builder', 'project', 'two', 'reason', 'easier', 'add', 'include', 'line', 'eliminates', 'need', 'keep', 'building', 'whenever', 'change', 'need', 'make', 'code', 'esther', 'ling', 'edu', 'driverarduino', 'loggerdata', 'log', 'shielddriver', 'data', 'logger']",7
1430,52006,"Convert Decimal to Binary number up to 4 bits<p>This Simulink model shows a simple code to convert decimal to binary numbers up to 8 bits (0 to 255 dec). It is easily configurable however, e.g if 9 bits is required, simply change 2 lines of the codes int he Matlab function block as shown below:1)a=zeros(1,8);to a=zeros(1,9);2)x=[a(8),a(7),a(6),a(5),a(4),a(3),a(2),a(1)];tox=[a(9),a(8),a(7),a(6),a(5),a(4),a(3),a(2),a(1)];The code was modified to remove the bug during conversion at decimal 0.</p>binary,converter,decimal,matlab,simulink",8,0,1,0,14,convert decimal binary number bitsthis show simple code convert decimal binary number bit dec easily configurable however bit require simply change line code int function block show zero zero tox code modify remove bug conversion decimal,"['convert', 'decimal', 'binary', 'number', 'bitsthis', 'show', 'simple', 'code', 'convert', 'decimal', 'binary', 'number', 'bit', 'dec', 'easily', 'configurable', 'however', 'bit', 'require', 'simply', 'change', 'line', 'code', 'int', 'function', 'block', 'show', 'zero', 'zero', 'tox', 'code', 'modify', 'remove', 'bug', 'conversion', 'decimal']",0
1431,52007,"Trapezoidal Wave as modulating signal and modified triangular wave as carrier signal<p>Conventional Sinusoidal PWM cannot be employed for CSI and therefore it require changes. Trapezoidal Wave as modulating signal and modified triangular wave as carrier signal are used.</p>electric_motor_control,power_conversion_control,power_electronics_control,csi,tpwm",35,0,1,0,43,trapezoidal wave modulate signal modify triangular wave carrier sinusoidal pwm employ csi therefore require change trapezoidal wave modulate signal modify triangular wave carrier signal electric motor controlpower conversion controlpower electronics controlcsitpwm,"['trapezoidal', 'wave', 'modulate', 'signal', 'modify', 'triangular', 'wave', 'carrier', 'sinusoidal', 'pwm', 'employ', 'csi', 'therefore', 'require', 'change', 'trapezoidal', 'wave', 'modulate', 'signal', 'modify', 'triangular', 'wave', 'carrier', 'signal', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcsitpwm']",3
1432,52015,"Separate Digits from a single number in Simulink<p>Just a simple function that separates a single number (also decimals) to its constituent digits.For example, if the number is 4328.76,The model separates this number to 6 digits/output signals: '4' , '3' , '2' , '8' , '7' and '6'.</p>decimal,digit,extract,integer,separate,simulink",6,0,1,0,5,separate digit single number simple function separate single number also decimals constituent digit example number separate number digit output signal,"['separate', 'digit', 'single', 'number', 'simple', 'function', 'separate', 'single', 'number', 'also', 'decimals', 'constituent', 'digit', 'example', 'number', 'separate', 'number', 'digit', 'output', 'signal']",0
1433,52017,"An Arduino stopwatch with a series of LEDs<p>This submission shows how to use Simulink with Arduino Support package to build a binary clock.What's a binary clock?<a href=""https://en.wikipedia.org/wiki/Binary_clockSeveral"">https://en.wikipedia.org/wiki/Binary_clockSeveral</a> things that can be learnt here include:1)Using clock block to generate the time.2)Separating the time value(a number) to individual digits, using the 'fix' and 'mod' function.3)Converting the decimal value to binary values with a Matlab function block.4)Sending the binary values to LEDs via digital output pins.There are 4 sets of 4 LEDs (total 16 LEDs).Orange is in hundredths of a second, Blue in tenths of a second, green in ones(0-9) and Red in tens.This model is easily configured to include hundreds if needed.</p>arduino,binary,clock,digital,gauges,led,matlab,mega,simulink",138,16,1,16,147,arduino stopwatch series ledsthis submission show arduino support package build binary clock binary clock wikipedia org wiki binary clockseveral thing learn include clock block generate time separate time value number individual digit fix mod function convert decimal value binary value function block send binary value led via digital output pin set leds total led orange hundredths second blue tenth second green one red ten easily configure include hundred need,"['arduino', 'stopwatch', 'series', 'ledsthis', 'submission', 'show', 'arduino', 'support', 'package', 'build', 'binary', 'clock', 'binary', 'clock', 'wikipedia', 'org', 'wiki', 'binary', 'clockseveral', 'thing', 'learn', 'include', 'clock', 'block', 'generate', 'time', 'separate', 'time', 'value', 'number', 'individual', 'digit', 'fix', 'mod', 'function', 'convert', 'decimal', 'value', 'binary', 'value', 'function', 'block', 'send', 'binary', 'value', 'led', 'via', 'digital', 'output', 'pin', 'set', 'leds', 'total', 'led', 'orange', 'hundredths', 'second', 'blue', 'tenth', 'second', 'green', 'one', 'red', 'ten', 'easily', 'configure', 'include', 'hundred', 'need']",0
1434,52034,"Static Exciters IEEE  ST1A, power system stabilizer with multi-machine, nine-bus system<p>Static Exciters IEEE  ST1A, power system stabilizer with multi-machine, nine-bus system. The base MVA is 100, and system frequency is 60 Hz, The disturbance here is the transient by a single-phase fault time [ 11.0 11.3]</p>9 bus,ieee,ieee 9 bus,ieee bus,control",235,11,2,0,314,static exciters iee power stabilizer multi machine nine bus systemstatic exciters iee power stabilizer multi machine nine bus base mva frequency disturbance transient single phase fault time busieeiee busiee buscontrol,"['static', 'exciters', 'iee', 'power', 'stabilizer', 'multi', 'machine', 'nine', 'bus', 'systemstatic', 'exciters', 'iee', 'power', 'stabilizer', 'multi', 'machine', 'nine', 'bus', 'base', 'mva', 'frequency', 'disturbance', 'transient', 'single', 'phase', 'fault', 'time', 'busieeiee', 'busiee', 'buscontrol']",4
1435,52078,"half wave rectifier using thyrisrtor<p>it is half wave recifier which converts AC into pulsating DC. it is belong to power electronics.</p>power_conversion_control,power_electronics_control,simulink",10,0,1,0,12,half wave rectifier thyrisrtorit half wave recifier convert pulsate belong power electronics power conversion controlpower electronics,"['half', 'wave', 'rectifier', 'thyrisrtorit', 'half', 'wave', 'recifier', 'convert', 'pulsate', 'belong', 'power', 'electronics', 'power', 'conversion', 'controlpower', 'electronics']",1
1436,52092,"Simple H-Bridge inverter without filter<p>Since no filter is used Output of the inverter is square AC wave</p>hbridge,inverter",13,0,1,0,15,simple bridge inverter without filtersince filter output inverter square,"['simple', 'bridge', 'inverter', 'without', 'filtersince', 'filter', 'output', 'inverter', 'square']",3
1437,52154,"This is the HF inverter,it combined with switched capacitor and Cascaded H-bridge inverter<p>Multi level inverter used for low harmonics,high efficiency in high-frequency AC power distribution system.But here theMultilevel inverter is a combination of switched capacitor and h-bridge inverter.</p>matlab,simulation,simulink",34,0,1,0,41,inverterit combine switch capacitor cascade bridge invertermulti level inverter low harmonicshigh efficiency high frequency power distribution themultilevel inverter combination switch capacitor bridge inverter,"['inverterit', 'combine', 'switch', 'capacitor', 'cascade', 'bridge', 'invertermulti', 'level', 'inverter', 'low', 'harmonicshigh', 'efficiency', 'high', 'frequency', 'power', 'distribution', 'themultilevel', 'inverter', 'combination', 'switch', 'capacitor', 'bridge', 'inverter']",3
1438,52156,"13-level inverter<p>Multi-level inverter used to reduce the harmonics and it  produce more efficiency to Load.</p>power electronics,simulation,simulink",53,0,1,0,68,level invertermulti level inverter reduce harmonic produce efficiency load power,"['level', 'invertermulti', 'level', 'inverter', 'reduce', 'harmonic', 'produce', 'efficiency', 'load', 'power']",3
1439,52158,"Single Phase Full Wave Diode Rectifier<p>Rectifies single phase AC into pulsating DC</p>power_conversion_control,power_electronics_control,diode,full wave,rectifier",11,0,1,0,15,single phase full wave diode single phase pulsate dcpower conversion controlpower electronics waverectifier,"['single', 'phase', 'full', 'wave', 'diode', 'single', 'phase', 'pulsate', 'dcpower', 'conversion', 'controlpower', 'electronics', 'waverectifier']",1
1440,52181,"An Assortment  of Simulink PLL Models<p>This is a collection of PLL modeling examples, both continuous and discrete time. It includes integer as well as fractional N, dual modulus, SERDES clock recovery, as well as design sequences that step through the design flow.</p>delay lock loop,frequency synthesis,phase detector,phase locked loop,phase noise,pll,serdes",3106,283,5,0,3287,assortment pll modelsthis collection pll example continuous discrete time include integer well fractional dual modulus serdes clock recovery well design sequence step design flow delay lock loopfrequency synthesisphase detectorphase lock loopphase noisepllserdes,"['assortment', 'pll', 'modelsthis', 'collection', 'pll', 'example', 'continuous', 'discrete', 'time', 'include', 'integer', 'well', 'fractional', 'dual', 'modulus', 'serdes', 'clock', 'recovery', 'well', 'design', 'sequence', 'step', 'design', 'flow', 'delay', 'lock', 'loopfrequency', 'synthesisphase', 'detectorphase', 'lock', 'loopphase', 'noisepllserdes']",5
1441,52184,"Direct Rotor Field Oriented Controlled (DRFOC) drive with two different flux calculators/estimators.<p>For more details please see the m-file.</p>ann,asynchronous motor,drfoc,electric drives,feedforward neural network,ffnn,field oriented control,flux calculator,flux estimator,foc,induction motor,neural networks,power electronics,rfoc,electric_motor_control,power_electronics_control",352,24,4,0,428,direct rotor field orient controlled drfoc drive two different flux calculator estimator detail please see file annasynchronous neural orient controlflux calculatorflux motorneural networkspower motor controlpower electronics control,"['direct', 'rotor', 'field', 'orient', 'controlled', 'drfoc', 'drive', 'two', 'different', 'flux', 'calculator', 'estimator', 'detail', 'please', 'see', 'file', 'annasynchronous', 'neural', 'orient', 'controlflux', 'calculatorflux', 'motorneural', 'networkspower', 'motor', 'controlpower', 'electronics', 'control']",4
1442,52188,"Fuzzy logic based grid connected multilevel inverter<p>Fuzzy logic based grid connected Photovoltaic using cascade H-bridge multilevel inverter</p>fuzzy,fuzzy logic,multilevel inverter,renewable energy,simulation,power_conversion_control,power_electronics_control",1267,64,4,0,1415,fuzzy logic base grid connect multilevel inverterfuzzy logic base grid connect photovoltaic cascade bridge multilevel logicmultilevel conversion controlpower electronics control,"['fuzzy', 'logic', 'base', 'grid', 'connect', 'multilevel', 'inverterfuzzy', 'logic', 'base', 'grid', 'connect', 'photovoltaic', 'cascade', 'bridge', 'multilevel', 'logicmultilevel', 'conversion', 'controlpower', 'electronics', 'control']",1
1443,52196,sevel level reduced switch multilevel inverter<p>sevel level reduced switch multilevel inverter</p>simulation,53,0,1,0,60,sevel level reduce switch multilevel invertersevel level reduce switch multilevel,"['sevel', 'level', 'reduce', 'switch', 'multilevel', 'invertersevel', 'level', 'reduce', 'switch', 'multilevel']",3
1444,52221,"No any summary.<p>Converts the dc voltage into square ac voltage of desired magnitude.</p>power_conversion_control,power_electronics_control,simpowersytem",18,0,1,0,16,summary convert voltage square voltage desire magnitude power conversion controlpower electronics,"['summary', 'convert', 'voltage', 'square', 'voltage', 'desire', 'magnitude', 'power', 'conversion', 'controlpower', 'electronics']",1
1445,52224,"Half Wave Diode Rectifier<p>Rectifies positive half wave of AC input into pulsating DC output</p>power_conversion_control,power_electronics_control,diode,half wave,rectifier",8,0,1,0,10,half wave diode positive half wave input pulsate outputpower conversion controlpower electronics waverectifier,"['half', 'wave', 'diode', 'positive', 'half', 'wave', 'input', 'pulsate', 'outputpower', 'conversion', 'controlpower', 'electronics', 'waverectifier']",1
1446,52230,"Optimal Fuzzy Logic Controller using Particel Swarm Optimization<p>This package is only for optimization of the scaling factors. It is assumed that the 5 triangular membership functions equally distributed with 25 rules. This may not be the best way to construct the Fuzzy Logic Controller (FLC),  because the FLC is reconstructed at every simulation run and hence it may be much slower than a fixed FLC structure. However, here we are able to optimize not only the input-output scaling factors, but also the the input/output membership function distribution and the rule-base.  Three sets of files will be uploaded eventually: 1- Only optimizes the scaling factors (T) 2- Only optimizes the distribution of the membership functions (S), assuming that âTâs are already optimized. 3- Only optimizes the rule-base (R), assuming that âTâs and âSâs are already optimized.Note: You have to use MATLAB 2014b or later</p>fuzzy,control design,fuzzy logic,fuzzy logic controller,nonlinear systems,optimization,particle swarm optimization,pid,pidtype fuzzy logic controller",35,1,2,0,39,optimal fuzzy logic controller particel swarm package optimization scale factor assume triangular membership function equally distribute rule may best way construct fuzzy logic controller flc flc reconstruct every run hence may much slower fixed flc structure however able optimize input output scale factor also input output membership function distribution rule base three set file uploaded eventually optimize scale factor optimize distribution membership function assume already optimize optimizes rule base assume already optimize note designfuzzy logicfuzzy logic swarm fuzzy logic controller,"['optimal', 'fuzzy', 'logic', 'controller', 'particel', 'swarm', 'package', 'optimization', 'scale', 'factor', 'assume', 'triangular', 'membership', 'function', 'equally', 'distribute', 'rule', 'may', 'best', 'way', 'construct', 'fuzzy', 'logic', 'controller', 'flc', 'flc', 'reconstruct', 'every', 'run', 'hence', 'may', 'much', 'slower', 'fixed', 'flc', 'structure', 'however', 'able', 'optimize', 'input', 'output', 'scale', 'factor', 'also', 'input', 'output', 'membership', 'function', 'distribution', 'rule', 'base', 'three', 'set', 'file', 'uploaded', 'eventually', 'optimize', 'scale', 'factor', 'optimize', 'distribution', 'membership', 'function', 'assume', 'already', 'optimize', 'optimizes', 'rule', 'base', 'assume', 'already', 'optimize', 'note', 'designfuzzy', 'logicfuzzy', 'logic', 'swarm', 'fuzzy', 'logic', 'controller']",5
1447,52232,"solar pv pannel is connected to inverter throuth mppt technique<p>in this model we designed the solar model of 200w and it is connected with the inverter with mppt algorithm.here we used the coding type algorithm.</p>power_conversion_control,power_electronics_control",13555,1294,7,0,14169,solar pannel connect inverter throuth mppt techniquein design solar connect inverter mppt algorithm cod type algorithm power conversion controlpower electronics control,"['solar', 'pannel', 'connect', 'inverter', 'throuth', 'mppt', 'techniquein', 'design', 'solar', 'connect', 'inverter', 'mppt', 'algorithm', 'cod', 'type', 'algorithm', 'power', 'conversion', 'controlpower', 'electronics', 'control']",1
1448,52290,"Complete analysis  and simulation of mobile inverted pendulum using PID controller.<p>This paper is the collection of MATLAB simulation scripts and SIMULINK model of mobile inverted pendulum. And consists of following sections:Introduction of Mobile inverted pendulum  and its applicationAnalysis of system (pole/zero and rootlocus).Finding PID parametersSimulation of multivariable PID control (SIMULINK) for the mobile inverted pendulum system for tilt angle and direction control.</p>mobile inverted pendulum,multivariable pid controller,pid,polezero plot,root locus,simulation,simulink,two wheel self balance robot",22,1,2,0,23,complete analysis mobile invert pendulum pid controller paper collection script mobile invert pendulum consist follow section introduction mobile invert pendulum pole zero rootlocus find pid multivariable pid control mobile invert pendulum tilt angle direction control mobile invert pid plotroot wheel self balance robot,"['complete', 'analysis', 'mobile', 'invert', 'pendulum', 'pid', 'controller', 'paper', 'collection', 'script', 'mobile', 'invert', 'pendulum', 'consist', 'follow', 'section', 'introduction', 'mobile', 'invert', 'pendulum', 'pole', 'zero', 'rootlocus', 'find', 'pid', 'multivariable', 'pid', 'control', 'mobile', 'invert', 'pendulum', 'tilt', 'angle', 'direction', 'control', 'mobile', 'invert', 'pid', 'plotroot', 'wheel', 'self', 'balance', 'robot']",5
1449,52291,"Seven Segment with arduino (Look Up Table)<p>Seven Segment with arduino (Look Up Table)Adapted from Simon Monk's ""30 Arduino Projects for the Evil Genius"" - Project 9. Previously fully coded in Arduino, this example shows how to achieve the same result using Simulink.</p>maker,arduino",144,27,2,22,135,seven segment arduino look table seven segment arduino look table adapted simon monk arduino project evil genius project previously fully cod arduino example show achieve result makerarduino,"['seven', 'segment', 'arduino', 'look', 'table', 'seven', 'segment', 'arduino', 'look', 'table', 'adapted', 'simon', 'monk', 'arduino', 'project', 'evil', 'genius', 'project', 'previously', 'fully', 'cod', 'arduino', 'example', 'show', 'achieve', 'result', 'makerarduino']",0
1450,52292,"LCD Light with S Function<p>Light Sensor &gt; Arduino &gt; LCD</p>arduino,arl,lcd,light sensor",5,0,1,1,4,lcd light functionlight sensor arduino sensor,"['lcd', 'light', 'functionlight', 'sensor', 'arduino', 'sensor']",0
1451,52293,"Arduino > Speaker > LCD<p>A demo on how to use a light sensor (LDR) from the analog input and display the intensity that it reads from the LCD. It might be simple as you think but the LCD requires a device driver in order for the developer to use it.</p>arduino,arl,jogging,lcd,tempo",30,1,1,1,28,arduino speaker lcda demo light sensor ldr analog input display intensity read lcd might simple think lcd require device driver order developer,"['arduino', 'speaker', 'lcda', 'demo', 'light', 'sensor', 'ldr', 'analog', 'input', 'display', 'intensity', 'read', 'lcd', 'might', 'simple', 'think', 'lcd', 'require', 'device', 'driver', 'order', 'developer']",0
1452,52294,"Tilt Sensor > Arduino > LCD<p>A demo on how to use a Tilt Sensor from the analog/digital input and display the position of the sensor that it reads to the LCD. It might be simple as you think but the LCD requires a device driver in order for the developer to use it.</p>arduino,arl,lcd,tilt sensor",5,1,1,1,4,tilt sensor arduino lcda demo tilt sensor analog digital input display position sensor read lcd might simple think lcd require device driver order developer sensor,"['tilt', 'sensor', 'arduino', 'lcda', 'demo', 'tilt', 'sensor', 'analog', 'digital', 'input', 'display', 'position', 'sensor', 'read', 'lcd', 'might', 'simple', 'think', 'lcd', 'require', 'device', 'driver', 'order', 'developer', 'sensor']",0
1453,52296,"Potentiometer > Arduino > LCD<p>A demo on how to use potentiometer input and display the voltage output of the potentiometer that it reads to the LCD. It might be simple as you think but the LCD requires a device driver in order for the developer to use it.</p>arduino,arl,lcd,volt meter",24,0,1,1,24,potentiometer arduino lcda demo potentiometer input display voltage output potentiometer read lcd might simple think lcd require device driver order developer meter,"['potentiometer', 'arduino', 'lcda', 'demo', 'potentiometer', 'input', 'display', 'voltage', 'output', 'potentiometer', 'read', 'lcd', 'might', 'simple', 'think', 'lcd', 'require', 'device', 'driver', 'order', 'developer', 'meter']",0
1454,52297,"LDR > Arduino > LED<p>A Demo on how to combine different components and create a simple yet helpful project. The demo will be using a Light Sensor and a LED. The project will control the intensity of the LED with the intensity of the light the LDR sensor has captured.</p>arduino,arl,dimmer,led",8,0,1,2,7,ldr arduino leda demo combine different component create simple yet helpful project demo light sensor lead project control intensity lead intensity light ldr sensor capture,"['ldr', 'arduino', 'leda', 'demo', 'combine', 'different', 'component', 'create', 'simple', 'yet', 'helpful', 'project', 'demo', 'light', 'sensor', 'lead', 'project', 'control', 'intensity', 'lead', 'intensity', 'light', 'ldr', 'sensor', 'capture']",0
1455,52315,"A_Cascaded_Multilevel_Inverter_Based on switched capacitor using Boolean PWM control technique<p>A_Cascaded_Multilevel_Inverter_Based on switched capacitor using Boolean PWM control technique.</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,multilevel inverter,sc based multilevel inverter,switched capacitor,switched capacitor mli",139,7,3,0,136,cascade multilevel inverter base switch capacitor boolean pwm control techniquea cascade multilevel inverter base switch capacitor boolean pwm control technique electric motor controlpower conversion controlpower electronics invertersc base multilevel capacitor mli,"['cascade', 'multilevel', 'inverter', 'base', 'switch', 'capacitor', 'boolean', 'pwm', 'control', 'techniquea', 'cascade', 'multilevel', 'inverter', 'base', 'switch', 'capacitor', 'boolean', 'pwm', 'control', 'technique', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'invertersc', 'base', 'multilevel', 'capacitor', 'mli']",1
1456,52334,"Mathematical Modelling of PV cell<p>VI plot, PV plot of PV array</p>cell arrays,modeling,pv,simulation,simulink",37,1,2,0,45,mathematical modelling cellvi plot plot arraycell,"['mathematical', 'modelling', 'cellvi', 'plot', 'plot', 'arraycell']",8
1457,52366,"Duty cycle isn't changing as per the MPPT algorithm<p>The maximum power point tracking isn't working properly because of no change whatsoever in the duty cycle by changing the irradiance of the panel. Help needed.</p>power_conversion_control,power_electronics_control,model,simulink",125,5,4,0,132,duty cycle change per mppt algorithmthe maximum power point track work properly change whatsoever duty cycle change irradiance panel help need power conversion controlpower electronics,"['duty', 'cycle', 'change', 'per', 'mppt', 'algorithmthe', 'maximum', 'power', 'point', 'track', 'work', 'properly', 'change', 'whatsoever', 'duty', 'cycle', 'change', 'irradiance', 'panel', 'help', 'need', 'power', 'conversion', 'controlpower', 'electronics']",3
1458,52371,fuel cell<p>fuel cell with statcom</p>fuel cell,80,3,4,0,94,fuel cellfuel cell statcomfuel cell,"['fuel', 'cellfuel', 'cell', 'statcomfuel', 'cell']",8
1459,52413,"POUR L'ENSEIGNEMENT DES SCIENCES INDUSTRIELLES POUR L'INGENIEUR<p>Ce dossier est destinÃ© aux enseignants de Sciences de L'ingÃ©nieur souhaitant exploiter en classe la plateforme Mars Rover crÃ©Ã©e par MathWorks dans le cadre de la compÃ©tition Â« Mission On Mars Â» Robot Challenge.Il contient:. Une activitÃ© pÃ©dagogique sur la modÃ©lisation des paramÃ¨tres moteur et la comparaison entre rÃ©el et modÃ¨le. Cette activitÃ© s'appuie sur le robot Mars Rover mais la dÃ©marche et l'activitÃ© peuvent Ãªtre rÃ©utilisÃ©es sur d'autres robots mobiles.. les modÃ¨les Simulink (Ã©quations et fonction de transfert) et Simscape des moteurs du robot Mars Rover. Le modÃ¨le SimMechanics idÃ©al du robot Mars Rover (pas de saturation, effet dynamique du robot sur l'axe moteur non pris en compte, patinage des roues absent)</p>control,ivan,ivan liebgott,liebgott,robot,robotics",143,26,1,18,143,pour enseignement science industrielles pour ingenieurce dossier est destinÃ© aux enseignants science ingÃ©nieur souhaitant exploiter classe plateforme mar rover crÃ©Ã©e par mathworks dans cadre compÃ©tition mission mar robot challenge contient une activitÃ© pÃ©dagogique sur modÃ©lisation paramÃ¨tres moteur comparaison entre rÃ©el modÃ¨le cette activitÃ© appuie sur robot mar rover mais dÃ©marche activitÃ© peuvent Ãªtre rÃ©utilisÃ©es sur autres robot mobile modÃ¨les Ã©quations fonction transfert simscape moteurs robot mar rover modÃ¨le simmechanics idÃ©al robot mar rover pas saturation effet dynamique robot sur axe moteur non pris compte patinage roues absent controlivanivan,"['pour', 'enseignement', 'science', 'industrielles', 'pour', 'ingenieurce', 'dossier', 'est', 'destinÃ©', 'aux', 'enseignants', 'science', 'ingÃ©nieur', 'souhaitant', 'exploiter', 'classe', 'plateforme', 'mar', 'rover', 'crÃ©Ã©e', 'par', 'mathworks', 'dans', 'cadre', 'compÃ©tition', 'mission', 'mar', 'robot', 'challenge', 'contient', 'une', 'activitÃ©', 'pÃ©dagogique', 'sur', 'modÃ©lisation', 'paramÃ¨tres', 'moteur', 'comparaison', 'entre', 'rÃ©el', 'modÃ¨le', 'cette', 'activitÃ©', 'appuie', 'sur', 'robot', 'mar', 'rover', 'mais', 'dÃ©marche', 'activitÃ©', 'peuvent', 'Ãªtre', 'rÃ©utilisÃ©es', 'sur', 'autres', 'robot', 'mobile', 'modÃ¨les', 'Ã©quations', 'fonction', 'transfert', 'simscape', 'moteurs', 'robot', 'mar', 'rover', 'modÃ¨le', 'simmechanics', 'idÃ©al', 'robot', 'mar', 'rover', 'pas', 'saturation', 'effet', 'dynamique', 'robot', 'sur', 'axe', 'moteur', 'non', 'pris', 'compte', 'patinage', 'roues', 'absent', 'controlivanivan']",8
1460,52419,"This example reveals limitations of MATLAB simulation of PLLs.<p>This examples demonstrates limitations of PLL simulation in MATLAB. Simulation of the same model of 2-phase PLL gives qualitatively wrong (false) results with default simulation step (sampling step). Complete description of the model and mathematical explanation can be found in arxiv.org/pdf/1506.02484How to run this example:1. Open ""phase_portret_pll_hidden.m"" file in MATLAB. Run this script.This script initialize parameters and plots phase portrait of 2-phase PLL. Phase portrait consists of three trajectories with different initial conditions of filter.2. Open ""pll_hidden_new.slx"". Run simulation. Change simulation step to ""auto"" and back to ""1e-3"". You should see different results in the output of filter.</p>limitation,phaselocked loop,pll,simulation",16,0,1,0,18,example reveals limitation plls example demonstrate limitation pll phase pll give qualitatively wrong false result default step sample step complete description mathematical explanation find arxiv org pdf run example open phase portret pll hide file run script script initialize parameter plot phase portrait phase pll phase portrait consist three trajectory different initial condition filter open pll hide new slx run change step auto back see different result output filter,"['example', 'reveals', 'limitation', 'plls', 'example', 'demonstrate', 'limitation', 'pll', 'phase', 'pll', 'give', 'qualitatively', 'wrong', 'false', 'result', 'default', 'step', 'sample', 'step', 'complete', 'description', 'mathematical', 'explanation', 'find', 'arxiv', 'org', 'pdf', 'run', 'example', 'open', 'phase', 'portret', 'pll', 'hide', 'file', 'run', 'script', 'script', 'initialize', 'parameter', 'plot', 'phase', 'portrait', 'phase', 'pll', 'phase', 'portrait', 'consist', 'three', 'trajectory', 'different', 'initial', 'condition', 'filter', 'open', 'pll', 'hide', 'new', 'slx', 'run', 'change', 'step', 'auto', 'back', 'see', 'different', 'result', 'output', 'filter']",0
1461,52434,"Photovoltaic system<p>It consists of an arrangement of several components, including solar panels to absorb and convert sunlight into electricity, a solar inverter to change the electric current from DC to AC, as well as mounting, cabling and other electrical accessories to set up a working system. It may also use a solar tracking system to improve the system's overall performance and include an integrated battery solution, as prices for storage devices are expected to decline. Strictly speaking, a solar array only encompasses the ensemble of solar panels, the visible part of the PV system, and does not include all the other hardware, often summarized as balance of system (BOS). Moreover, PV systems convert light directly into electricity and shouldn't be confused with other technologies, such as concentrated solar power or solar thermal, used for heating and cooling.</p>battery_system_management,power_conversion_control,power_electronics_control,pv array power,simulation,vsc control",94,7,3,0,97,photovoltaic systemit consist arrangement several component include solar panel absorb convert sunlight electricity solar inverter change electric current well mount cable electrical accessory set work may also solar track improve overall performance include integrate battery solution price storage device expect decline strictly speak solar array encompass ensemble solar panel visible part include hardware often summarize balance bos moreover convert light directly electricity confuse technology concentrate solar power solar thermal heat cool battery managementpower conversion controlpower electronics controlpv array control,"['photovoltaic', 'systemit', 'consist', 'arrangement', 'several', 'component', 'include', 'solar', 'panel', 'absorb', 'convert', 'sunlight', 'electricity', 'solar', 'inverter', 'change', 'electric', 'current', 'well', 'mount', 'cable', 'electrical', 'accessory', 'set', 'work', 'may', 'also', 'solar', 'track', 'improve', 'overall', 'performance', 'include', 'integrate', 'battery', 'solution', 'price', 'storage', 'device', 'expect', 'decline', 'strictly', 'speak', 'solar', 'array', 'encompass', 'ensemble', 'solar', 'panel', 'visible', 'part', 'include', 'hardware', 'often', 'summarize', 'balance', 'bos', 'moreover', 'convert', 'light', 'directly', 'electricity', 'confuse', 'technology', 'concentrate', 'solar', 'power', 'solar', 'thermal', 'heat', 'cool', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlpv', 'array', 'control']",4
1462,52546,"A DC-DC Converter block supporting Buck, Boost, Buck-Boost converter selection and dynamic analysis<p>The DC-DC Converter block represents a behavioral model of a DC to DC power converter using state space average model. The DC-DC Converter support Buck, Boost, Buck-Boost converter selection and converter dynamic analysis including bode plot, pole-zero map and step response.For more information and details of the model please download my paper entitle ""DC-DC Converter Modeling and Simulation using State Space Approach"" at IEEEXplore link belowhttp://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7409511&amp;newsearch=true&amp;queryText=cencon%202015</p>power_conversion_control,power_electronics_control,bode plot,boost converter,buck converter,buckboost converter,dcdc converter,state space model",9,1,2,0,8,converter block support buck boost buck boost converter selection dynamic analysisthe converter block represent behavioral power converter state space average converter support buck boost buck boost converter selection converter dynamic analysis include bode plot pole zero map step response information detail please download paper entitle converter state space approach ieexplore link belowhttp ieexplore iee org xpl articledetails jsp arnumber amp newsearch true amp querytext cencon power conversion controlpower electronics controlbode plotboost converterbuck converterdcdc converterstate space,"['converter', 'block', 'support', 'buck', 'boost', 'buck', 'boost', 'converter', 'selection', 'dynamic', 'analysisthe', 'converter', 'block', 'represent', 'behavioral', 'power', 'converter', 'state', 'space', 'average', 'converter', 'support', 'buck', 'boost', 'buck', 'boost', 'converter', 'selection', 'converter', 'dynamic', 'analysis', 'include', 'bode', 'plot', 'pole', 'zero', 'map', 'step', 'response', 'information', 'detail', 'please', 'download', 'paper', 'entitle', 'converter', 'state', 'space', 'approach', 'ieexplore', 'link', 'belowhttp', 'ieexplore', 'iee', 'org', 'xpl', 'articledetails', 'jsp', 'arnumber', 'amp', 'newsearch', 'true', 'amp', 'querytext', 'cencon', 'power', 'conversion', 'controlpower', 'electronics', 'controlbode', 'plotboost', 'converterbuck', 'converterdcdc', 'converterstate', 'space']",4
1463,52578,"Transmit and receive data arrays of any type and length with an Arduino UDP Ethernet Shield<p>The default UDP blocks in R2015a's Simulink Arduino Support Package can transmit and receive scalar bytes of data. This entry expands this functionality to enable the user to transmit and receive arrays of data where the type is an integer. The supported data types are {uint8, int8, uint16, int16, uint32, int32}.This entry supports Windows, Linux and Mac. Install:To install this entry, run the included .mltbx file.Documentation and Examples:For examples showing how to use the blocks, see the ""Supplemental Software"" section of the main doc page. There will be link called ""Arduino UDP Ethernet Shield"" .To see the files directly, navigate to Home-&gt;Add-Ons-&gt;Manage Custom Toolboxes-&gt;Open FolderDependencies:This toolbox also provides a custom toolbox ""Pack and Unpack Data"", containing the packData and unpackData functions which convert an array of integers into an array of bytes and vice-versa. This is used on the desktop computer to translate integers into bytes and vice-versa for communication via UDP.The Instrument Control Toolbox is necessary to receive and transmit UDP data from the Desktop Computer.</p>arduino,custom driver block,ethernet,shield,udp",26,8,2,8,18,transmit receive data array type length arduino udp ethernet shieldthe default udp block arduino support package transmit receive scalar byte data entry expand functionality enable user transmit receive array data type integer support data type uint int uint int uint int entry support window linux mac install install entry run include mltbx file documentation example examples show block see supplemental software section main doc page link call arduino udp ethernet shield see file directly navigate home add ons manage custom toolbox open toolbox also provide custom toolbox pack unpack data contain packdata unpackdata function convert array integer array byte vice versa desktop computer translate integer bytes vice versa communication via udp instrument control toolbox necessary receive transmit udp data desktop computer arduinocustom driver,"['transmit', 'receive', 'data', 'array', 'type', 'length', 'arduino', 'udp', 'ethernet', 'shieldthe', 'default', 'udp', 'block', 'arduino', 'support', 'package', 'transmit', 'receive', 'scalar', 'byte', 'data', 'entry', 'expand', 'functionality', 'enable', 'user', 'transmit', 'receive', 'array', 'data', 'type', 'integer', 'support', 'data', 'type', 'uint', 'int', 'uint', 'int', 'uint', 'int', 'entry', 'support', 'window', 'linux', 'mac', 'install', 'install', 'entry', 'run', 'include', 'mltbx', 'file', 'documentation', 'example', 'examples', 'show', 'block', 'see', 'supplemental', 'software', 'section', 'main', 'doc', 'page', 'link', 'call', 'arduino', 'udp', 'ethernet', 'shield', 'see', 'file', 'directly', 'navigate', 'home', 'add', 'ons', 'manage', 'custom', 'toolbox', 'open', 'toolbox', 'also', 'provide', 'custom', 'toolbox', 'pack', 'unpack', 'data', 'contain', 'packdata', 'unpackdata', 'function', 'convert', 'array', 'integer', 'array', 'byte', 'vice', 'versa', 'desktop', 'computer', 'translate', 'integer', 'bytes', 'vice', 'versa', 'communication', 'via', 'udp', 'instrument', 'control', 'toolbox', 'necessary', 'receive', 'transmit', 'udp', 'data', 'desktop', 'computer', 'arduinocustom', 'driver']",0
1464,52609,"Fabry Perot ecuation simulation<p>Use simulink to solve Fabry Perot Filter equation</p>equation,fabry,filter,perot,simulink",91,7,3,0,90,fabry perot ecuation solve fabry perot filter,"['fabry', 'perot', 'ecuation', 'solve', 'fabry', 'perot', 'filter']",8
1465,52625,"Buck,Boost and Buck Boost Converter<p>DC to DC converter includes Buck,Boost and Buck-Boost Converter. the Buck Converter work as a step down and boost Converter as a step up converter. In buck-boost the operation of converter is control by Duty Cycle.</p>power_conversion_control,power_electronics_control,boost,buck,buckboost,dcdc converter,simulation",61,1,2,0,57,buckboost buck boost converterdc converter include buckboost buck boost converter buck converter work step boost converter step converter buck boost operation converter control duty cycle power conversion controlpower electronics,"['buckboost', 'buck', 'boost', 'converterdc', 'converter', 'include', 'buckboost', 'buck', 'boost', 'converter', 'buck', 'converter', 'work', 'step', 'boost', 'converter', 'step', 'converter', 'buck', 'boost', 'operation', 'converter', 'control', 'duty', 'cycle', 'power', 'conversion', 'controlpower', 'electronics']",1
1466,52676,"controlled rectifiers<p>this is the simulation of single phase controlled rectifiers(both half and full).the output waveform of voltage and current is controlled by controlling the firing angle of thyristors.</p>controlled rectifiers,fullwave rectifiers,halfwave rectifiers,simulation",38,0,1,0,34,control rectifiersthis single phase control rectifier half full output waveform voltage current control control fire angle thyristors control,"['control', 'rectifiersthis', 'single', 'phase', 'control', 'rectifier', 'half', 'full', 'output', 'waveform', 'voltage', 'current', 'control', 'control', 'fire', 'angle', 'thyristors', 'control']",1
1467,52706,"Simple yet effective and practical PI controller analytical tuning in the DSFOC drive.<p>The modulus [magnitude] and symmetric[al] optimum criteria (the Kessler's variants) are used to tune the PI current and speed controllers in a direct stator field-oriented controller (DSFOC) for asynchronous motor drives. The PID Tuner (Control System Toolbox) is employed to design the flux controller.</p>asynchronous motor,controller design,controller tuning,electric drive,field oriented control,foc,induction motor,kessler,modulus optimum,naslin,optimal control,symmetric optimum,symmetrical optimum,electric_motor_control,power_electronics_control",169,8,3,0,213,simple yet effective practical controller analytical tuning dsfoc drive modulus magnitude symmetric optimum criterion kessler variant tune current speed controller direct stator field orient controller dsfoc asynchronous motor drive pid tuner control toolbox employ design flux controller asynchronous motorcontroller tuningelectric drivefield orient optimumelectric motor controlpower electronics control,"['simple', 'yet', 'effective', 'practical', 'controller', 'analytical', 'tuning', 'dsfoc', 'drive', 'modulus', 'magnitude', 'symmetric', 'optimum', 'criterion', 'kessler', 'variant', 'tune', 'current', 'speed', 'controller', 'direct', 'stator', 'field', 'orient', 'controller', 'dsfoc', 'asynchronous', 'motor', 'drive', 'pid', 'tuner', 'control', 'toolbox', 'employ', 'design', 'flux', 'controller', 'asynchronous', 'motorcontroller', 'tuningelectric', 'drivefield', 'orient', 'optimumelectric', 'motor', 'controlpower', 'electronics', 'control']",4
1468,52764,"Simulation of Ferranti Effect<p>This model explains about ferranti effect which happnes in power system.</p>ferranti effect,power systems,voltage",15,0,1,0,13,ferranti effectthis explain ferranti effect happnes power ferranti effectpower systemsvoltage,"['ferranti', 'effectthis', 'explain', 'ferranti', 'effect', 'happnes', 'power', 'ferranti', 'effectpower', 'systemsvoltage']",8
1469,52765,"Open Circuit Test on Single Phase Transformer<p>Open Circuit Test of Single Phase Transformer has been simulated.</p>oc test,open circuit test,transformer testing,transformers",6,0,1,0,7,open circuit test single phase transformeropen circuit test single phase transformer testopen circuit testtransformer,"['open', 'circuit', 'test', 'single', 'phase', 'transformeropen', 'circuit', 'test', 'single', 'phase', 'transformer', 'testopen', 'circuit', 'testtransformer']",3
1470,52766,"Three Phase Rectifier with RLE load<p>Simulates three phase six-pulse rectifier With R load, RL Load, RLE Load.</p>power electronics,rle,three phase rectifier",24,0,1,0,22,three phase rectifier rle three phase six pulse rectifier load load rle load power phase rectifier,"['three', 'phase', 'rectifier', 'rle', 'three', 'phase', 'six', 'pulse', 'rectifier', 'load', 'load', 'rle', 'load', 'power', 'phase', 'rectifier']",1
1471,52767,"Simulates Superposition Theorem<p>A circuit is solved using superposition theorem.</p>network theorem,superposition theorem,theorem",25,0,1,0,24,superposition theorema circuit solve superposition theorem network theoremtheorem,"['superposition', 'theorema', 'circuit', 'solve', 'superposition', 'theorem', 'network', 'theoremtheorem']",8
1472,52768,"Simulation of Thevenin's Theorem<p>A circuit is simulated and solved by using thevenin's theorem.</p>network theorem,power system,thevenins theorem",16,0,1,0,14,thevenin theorema circuit solve thevenin theorem network theorempower systemthevenins theorem,"['thevenin', 'theorema', 'circuit', 'solve', 'thevenin', 'theorem', 'network', 'theorempower', 'systemthevenins', 'theorem']",8
1473,52806,"Space Vector PWM<p>Space vector pulse with modulation.</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",195,9,3,0,261,space vector pwmspace vector pulse modulation electric motor controlpower conversion controlpower electronics,"['space', 'vector', 'pwmspace', 'vector', 'pulse', 'modulation', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1474,52809,"This file provide a block to measure PWM frequency.<p>I have searched the net to find a block for measuring PWM frequency but, i couldn't find it. So, i decided to make a PWM frequency meter. It can be used to measure variable PWM frequency such as Hysteresis Control and etc.Hope to be useful for you</p>electric_motor_control,power_conversion_control,power_electronics_control,control design,hysteresis,pwm,simulation",5,0,1,0,4,file provide block measure pwm frequency search net find block measure pwm frequency find decide make pwm frequency meter measure variable pwm frequency hysteresis control etc hope useful youelectric motor controlpower conversion controlpower electronics controlcontrol,"['file', 'provide', 'block', 'measure', 'pwm', 'frequency', 'search', 'net', 'find', 'block', 'measure', 'pwm', 'frequency', 'find', 'decide', 'make', 'pwm', 'frequency', 'meter', 'measure', 'variable', 'pwm', 'frequency', 'hysteresis', 'control', 'etc', 'hope', 'useful', 'youelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",3
1475,52825,"The DC-DC Converter support Buck, Boost, Buck-Boost Converter selection and closed loop design.<p>The DC-DC Converter block represents a behavioral model of a DC to DC power converter using first principle mathematical model. The DC-DC Converter support Buck, Boost, Buck-Boost Converter selection and closed loop design.</p>power_conversion_control,power_electronics_control,boost converter,buck converter,buckboost converter,dcdc converter,mathematical model,electronics",32,1,2,0,43,converter support buck boost buck boost converter selection close loop design converter block represent behavioral power converter first principle mathematical converter support buck boost buck boost converter selection close loop design power conversion controlpower electronics controlboost converterbuck converterdcdc,"['converter', 'support', 'buck', 'boost', 'buck', 'boost', 'converter', 'selection', 'close', 'loop', 'design', 'converter', 'block', 'represent', 'behavioral', 'power', 'converter', 'first', 'principle', 'mathematical', 'converter', 'support', 'buck', 'boost', 'buck', 'boost', 'converter', 'selection', 'close', 'loop', 'design', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterbuck', 'converterdcdc']",1
1476,52948,"A collection of basic open loop buck, boost and buck-boost converter models<p>A collection of basic open loop buck, boost and buck-boost converter models</p>power_conversion_control,power_electronics_control,boost converter,buck converter,buckboost converter,circuitry model,dcdc converter",33,0,1,0,44,collection basic open loop buck boost buck boost converter modelsa collection basic open loop buck boost buck boost converter modelspower conversion controlpower electronics controlboost converterbuck modeldcdc converter,"['collection', 'basic', 'open', 'loop', 'buck', 'boost', 'buck', 'boost', 'converter', 'modelsa', 'collection', 'basic', 'open', 'loop', 'buck', 'boost', 'buck', 'boost', 'converter', 'modelspower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterbuck', 'modeldcdc', 'converter']",1
1477,52953,"Simulink model of DPFC IEEE paper.<p>The DPFC is derived from the Unified Power Flow Controller (UPFC). The DPFC can be considered as a UPFC with an eliminated common dc link. The active power ex-change between the shunt and series converters, which is through the common dc link in the UPFC, is now through the transmission lines at the third-harmonic frequency. The DPFC employs the distributed FACTS (D-FACTS) concept, which is to use multiple small-size single-phase converters instead of the one large-size three-phase series converter in the UPFC. The large number of series converters provides redundancy, thereby increasing the system reliability. As the D-FACTS converters are single-phase and floating with respect to the ground, there is no high-voltage isolation required between the phases. Accordingly, the cost of the DPFC system is lower than the UPFC. The DPFC has the same control capability as the UPFC, which comprises the adjustment of the line impedance, the transmission angle, and the bus voltage. This simulation (simulink model) is based on the IEEE paper: A FACTS Device: Distributed Power-Flow Controller (DPFC), IEEE TRANSACTIONS ON POWER ELECTRONICS, VOL. 25, NO. 10To prevent duplicate publishing of this model, some part/files of this model has not been published here, to get them contact me at: <a href=""mailto:ankitceo@gmail.com"">ankitceo@gmail.com</a></p>power_conversion_control,power_electronics_control,distributed power flow controller,dpfc,fact,facts,ieee projects in power electronics and power system,latest project topic,upfc",41,4,4,0,45,dpfc iee paper dpfc derive unified power flow controller upfc dpfc consider upfc eliminated common link active power change shunt series converter common link upfc transmission line third harmonic frequency dpfc employ distributed fact fact concept multiple small size single phase converter instead one large size three phase series converter upfc large number series converter provide redundancy thereby increase reliability facts converter single phase float respect ground high voltage isolation require phase accordingly cost dpfc low upfc dpfc control capability upfc comprises adjustment line impedance transmission angle bus voltage base iee paper fact device distribute power flow controller dpfc iee transaction power electronics vol prevent duplicate publish part file publish get contact ankitceo gmail compower conversion controlpower electronics power flow project power electronics power systemlatest project topicupfc,"['dpfc', 'iee', 'paper', 'dpfc', 'derive', 'unified', 'power', 'flow', 'controller', 'upfc', 'dpfc', 'consider', 'upfc', 'eliminated', 'common', 'link', 'active', 'power', 'change', 'shunt', 'series', 'converter', 'common', 'link', 'upfc', 'transmission', 'line', 'third', 'harmonic', 'frequency', 'dpfc', 'employ', 'distributed', 'fact', 'fact', 'concept', 'multiple', 'small', 'size', 'single', 'phase', 'converter', 'instead', 'one', 'large', 'size', 'three', 'phase', 'series', 'converter', 'upfc', 'large', 'number', 'series', 'converter', 'provide', 'redundancy', 'thereby', 'increase', 'reliability', 'facts', 'converter', 'single', 'phase', 'float', 'respect', 'ground', 'high', 'voltage', 'isolation', 'require', 'phase', 'accordingly', 'cost', 'dpfc', 'low', 'upfc', 'dpfc', 'control', 'capability', 'upfc', 'comprises', 'adjustment', 'line', 'impedance', 'transmission', 'angle', 'bus', 'voltage', 'base', 'iee', 'paper', 'fact', 'device', 'distribute', 'power', 'flow', 'controller', 'dpfc', 'iee', 'transaction', 'power', 'electronics', 'vol', 'prevent', 'duplicate', 'publish', 'part', 'file', 'publish', 'get', 'contact', 'ankitceo', 'gmail', 'compower', 'conversion', 'controlpower', 'electronics', 'power', 'flow', 'project', 'power', 'electronics', 'power', 'systemlatest', 'project', 'topicupfc']",4
1478,52954,"Simulation and Modeling of Wind Turbine using PMSG<p>During the last two decades, the production of wind turbines has grown in size from 20 KW to 5 MW. There currently exist various competing technologies for wind generator systems whose differences lie in the complexity, cost and degree of control over the system characteristics. In the wind energy conservation system, the wind turbine captures the wind energy. Then the generator changes it to the electrical power. Wind turbines are classified into two types as fixed speed wind turbine and variable speed wind turbine. Variable speed wind turbines yield more energy than the fixed speed wind turbines, reduce power fluctuations and improve reactive power supply. Basically direct drive Permanent Magnet Synchronous Generator (PMSG) and Double Fed Induction Generator (DFIG) are used in variable speed wind turbine generator. In this paper, the simulations of a variable-speed wind turbine with a permanent magnet synchronous generator and power electronics devices have been analyzed to performance during various input wind velocities. International Journal of Recent Research and Review, Vol. VII, Issue 2, June 2014. To prevent duplicate publishing of this model, some part/files of this model has not been published here, to get them contact me at: <a href=""mailto:ankitceo@gmail.com"">ankitceo@gmail.com</a></p>power_conversion_control,power_electronics_control,btech minor major projects,latest project topics,pmsg,pmsg matlab simulink,projects in power electronics and power systems,research based projects,wind turbine simulation",44,2,2,0,54,wind turbine pmsgduring last two decade production wind turbine grow size currently exist various compete technology wind generator whose difference lie complexity cost degree control characteristic wind energy conservation wind turbine capture wind energy generator change electrical power wind turbine classify two type fix speed wind turbine variable speed wind turbine variable speed wind turbine yield energy fix speed wind turbine reduce power fluctuation improve reactive power supply basically direct drive permanent magnet synchronous generator pmsg double feed induction generator dfig variable speed wind turbine generator paper variable speed wind turbine permanent magnet synchronous generator power electronics device analyze performance various input wind velocity international journal recent research review vol vii issue june prevent duplicate publish part file publish get contact ankitceo gmail compower conversion controlpower electronics controlbtech minor major projectslatest project topicspmsgpmsg power electronics power systemsresearch base projectswind turbine,"['wind', 'turbine', 'pmsgduring', 'last', 'two', 'decade', 'production', 'wind', 'turbine', 'grow', 'size', 'currently', 'exist', 'various', 'compete', 'technology', 'wind', 'generator', 'whose', 'difference', 'lie', 'complexity', 'cost', 'degree', 'control', 'characteristic', 'wind', 'energy', 'conservation', 'wind', 'turbine', 'capture', 'wind', 'energy', 'generator', 'change', 'electrical', 'power', 'wind', 'turbine', 'classify', 'two', 'type', 'fix', 'speed', 'wind', 'turbine', 'variable', 'speed', 'wind', 'turbine', 'variable', 'speed', 'wind', 'turbine', 'yield', 'energy', 'fix', 'speed', 'wind', 'turbine', 'reduce', 'power', 'fluctuation', 'improve', 'reactive', 'power', 'supply', 'basically', 'direct', 'drive', 'permanent', 'magnet', 'synchronous', 'generator', 'pmsg', 'double', 'feed', 'induction', 'generator', 'dfig', 'variable', 'speed', 'wind', 'turbine', 'generator', 'paper', 'variable', 'speed', 'wind', 'turbine', 'permanent', 'magnet', 'synchronous', 'generator', 'power', 'electronics', 'device', 'analyze', 'performance', 'various', 'input', 'wind', 'velocity', 'international', 'journal', 'recent', 'research', 'review', 'vol', 'vii', 'issue', 'june', 'prevent', 'duplicate', 'publish', 'part', 'file', 'publish', 'get', 'contact', 'ankitceo', 'gmail', 'compower', 'conversion', 'controlpower', 'electronics', 'controlbtech', 'minor', 'major', 'projectslatest', 'project', 'topicspmsgpmsg', 'power', 'electronics', 'power', 'systemsresearch', 'base', 'projectswind', 'turbine']",4
1479,52970,"Design and Implementation of Fuzzy Gain Scheduling for PID Controllers in Simulink<p>For more information, see following link:<a href=""http://yarpiz.com/311/ypfz103-fuzzy-pid"">http://yarpiz.com/311/ypfz103-fuzzy-pid</a></p>fuzzy,fuzzy control systems,fuzzy gain scheduling,fuzzy gain scheduling for pid,fuzzy pid,pid",103,6,2,0,205,design implementation fuzzy gain schedule pid controller information see follow link http yarpiz com ypfz fuzzy pidfuzzyfuzzy control systemsfuzzy gain schedulingfuzzy gain schedule pidfuzzy pidpid,"['design', 'implementation', 'fuzzy', 'gain', 'schedule', 'pid', 'controller', 'information', 'see', 'follow', 'link', 'http', 'yarpiz', 'com', 'ypfz', 'fuzzy', 'pidfuzzyfuzzy', 'control', 'systemsfuzzy', 'gain', 'schedulingfuzzy', 'gain', 'schedule', 'pidfuzzy', 'pidpid']",0
1480,53125,"SImulation of three phase ac voltage controller with diffrent operating mode<p>Three Phase AC voltage controller which can able to control it with three different mode.(1) Phase Angle Control(2) Integral Cycle control(3) Integral Cycle control with phase angle control also</p>electric_motor_control,power_conversion_control,power_electronics_control,ac,controller,integral cycle control,integral cycle control with phase angle control,phase angle control,simulation,three phase,voltage",79,2,2,0,102,three phase voltage controller diffrent operate modethree phase voltage controller able control three different mode phase angle control integral cycle control integral cycle control phase angle control alsoelectric motor controlpower conversion controlpower electronics cycle controlintegral cycle control phase angle controlphase angle phasevoltage,"['three', 'phase', 'voltage', 'controller', 'diffrent', 'operate', 'modethree', 'phase', 'voltage', 'controller', 'able', 'control', 'three', 'different', 'mode', 'phase', 'angle', 'control', 'integral', 'cycle', 'control', 'integral', 'cycle', 'control', 'phase', 'angle', 'control', 'alsoelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'cycle', 'controlintegral', 'cycle', 'control', 'phase', 'angle', 'controlphase', 'angle', 'phasevoltage']",1
1481,53126,"Simulate and animate a box which is being pushed via an admittance model.<p>Simulate and animate a box which is being pushed via an admittance model.</p>admittance,dynamics,pushing a box,simulink",49,2,2,0,55,animate box push via admittance animate box push via admittance,"['animate', 'box', 'push', 'via', 'admittance', 'animate', 'box', 'push', 'via', 'admittance']",8
1482,53174,"This model improves the standard model available in SimPowersystem for induction machines<p>In Simpowersystem, the model of induction machines does not allow the connection of inductances in series to the motor (at least up to my version 2012b). This can be inconvenient when the machine is connected to a real grid, modelled with its equivalent impedance. This model solves the problems by calculating the induced voltages in the stator winding, rather than the stator currents and therefore it is a voltage-source model rather than a current-source model, allowing the connection of series inductances to the stator.</p>electric_motor_control,power_electronics_control,simulation",133,2,3,0,150,improves standard available simpowersystem induction machinesin simpowersystem induction machine allow connection inductance series motor least version inconvenient machine connect real grid equivalent impedance solves problem calculate induced voltage stator wind rather stator current therefore voltage source rather current source allow connection series inductance stator electric motor controlpower electronics,"['improves', 'standard', 'available', 'simpowersystem', 'induction', 'machinesin', 'simpowersystem', 'induction', 'machine', 'allow', 'connection', 'inductance', 'series', 'motor', 'least', 'version', 'inconvenient', 'machine', 'connect', 'real', 'grid', 'equivalent', 'impedance', 'solves', 'problem', 'calculate', 'induced', 'voltage', 'stator', 'wind', 'rather', 'stator', 'current', 'therefore', 'voltage', 'source', 'rather', 'current', 'source', 'allow', 'connection', 'series', 'inductance', 'stator', 'electric', 'motor', 'controlpower', 'electronics']",4
1483,53182,updatemodel-how to use<p>A Matlab function UpdateModel() is defined to dynamically create aSimulink model which can simulate the outputs of a given transfer functionwith input data in a vector.</p>simulation,66,3,3,0,79,updatemodel usea function updatemodel define dynamically create output give transfer functionwith input data vector,"['updatemodel', 'usea', 'function', 'updatemodel', 'define', 'dynamically', 'create', 'output', 'give', 'transfer', 'functionwith', 'input', 'data', 'vector']",0
1484,53224,"Brake System developed by ASURT introduced in MATLAB & Simulink Racing Lounge<p>* This submission contains a model of the brake system developed by Ain Shams University Racing Team in 2014 within the events of Formula Student Silver stone race track in the UK .  The model contains:-1- Extensive Volumetric Analysis (Master Cylinder-Brake Line - Brake Hose - Adjusting Limiter Valve ""TCM"" - Caliper).2- Stick-Slip Model between the tire and the ground taking into consideration the elastic properties of the tire.3- Data Acquisition of some data such friction stresses for FEA analysis.4- Vehicle Dynamic Analysis of the vehicle performance taking into consideration the elastic properties of the vehicle.* Full Visual Illustration of the model will be presented at MATLAB and Simulink Racing Loungehttp://<a href=""http://www.mathworks.com/racinglounge*"">www.mathworks.com/racinglounge*</a> Full Written Documented Illustration of the model was presented at SAE Brake Colloquium &amp; Exhibition - 32nd Annualhttp://papers.sae.org/2014-01-2487/Citation: Barakat, M., ""ASURT Formula Student Brake Design,"" SAE Int. J. Passeng. Cars - Mech. Syst. 7(4):1274-1286, 2014, doi:10.4271/2014-01-2487.1- SAE International Journal of Passenger Cars - Mechanical Systems - V123-6EJ2- SAE International Journal of Passenger Cars - Mechanical Systems - V123-6* Please follow the upcoming steps, so you would have a running model:-1- Run ""ASURT_2014_Brake_System.m"" till a message appears on the command window, that indicates successful run of the initial conditions.2- Run ""ASURT_2014_BrakeSystem.slx"".3- Open the red colored scopes, because they represent the most important dynamic features of the system.4- Enjoy interpreting the results ;)</p>automotive,mathematics,matlab,modeling,msrl",963,46,4,0,934,brake develop asurt introduce race lounge submission contains brake developed sham university race team within event formula student silver stone race track contain extensive volumetric analysis master cylinder brake line brake hose adjust limiter valve tcm caliper stick slip tire ground take consideration elastic property tire data acquisition data friction stress fea analysis vehicle dynamic analysis vehicle performance take consideration elastic property vehicle full visual illustration present race loungehttp mathworks com racinglounge full write documented illustration present sae brake colloquium amp exhibition annualhttp paper sae org citation barakat asurt formula student brake design sae int passeng car mech syst doi sae international journal passenger car mechanical sae international journal passenger car mechanical please follow upcoming step would run run asurt brake till message appear command window indicate successful run initial condition run asurt brakesystem slx open red color scope represent important dynamic feature enjoy interpret result,"['brake', 'develop', 'asurt', 'introduce', 'race', 'lounge', 'submission', 'contains', 'brake', 'developed', 'sham', 'university', 'race', 'team', 'within', 'event', 'formula', 'student', 'silver', 'stone', 'race', 'track', 'contain', 'extensive', 'volumetric', 'analysis', 'master', 'cylinder', 'brake', 'line', 'brake', 'hose', 'adjust', 'limiter', 'valve', 'tcm', 'caliper', 'stick', 'slip', 'tire', 'ground', 'take', 'consideration', 'elastic', 'property', 'tire', 'data', 'acquisition', 'data', 'friction', 'stress', 'fea', 'analysis', 'vehicle', 'dynamic', 'analysis', 'vehicle', 'performance', 'take', 'consideration', 'elastic', 'property', 'vehicle', 'full', 'visual', 'illustration', 'present', 'race', 'loungehttp', 'mathworks', 'com', 'racinglounge', 'full', 'write', 'documented', 'illustration', 'present', 'sae', 'brake', 'colloquium', 'amp', 'exhibition', 'annualhttp', 'paper', 'sae', 'org', 'citation', 'barakat', 'asurt', 'formula', 'student', 'brake', 'design', 'sae', 'int', 'passeng', 'car', 'mech', 'syst', 'doi', 'sae', 'international', 'journal', 'passenger', 'car', 'mechanical', 'sae', 'international', 'journal', 'passenger', 'car', 'mechanical', 'please', 'follow', 'upcoming', 'step', 'would', 'run', 'run', 'asurt', 'brake', 'till', 'message', 'appear', 'command', 'window', 'indicate', 'successful', 'run', 'initial', 'condition', 'run', 'asurt', 'brakesystem', 'slx', 'open', 'red', 'color', 'scope', 'represent', 'important', 'dynamic', 'feature', 'enjoy', 'interpret', 'result']",5
1485,53232,"HVDC system with three level neutral-point clamped VSC<p>The Sending end converter (SEC) controls the AC and DC voltage while the receiving end converter (REC) controls the active power (P) and reactive power (Q). Both converters use current controllers.- The active power set point is changed at 1 second from 1 pu to 0.8 pu.-The reactive power set point is changed at 1.2 seconds from 0 to -0.2 pu.Both converters use the consumer oriented sign convention.Simulation of the faults is not implemented in the model but can be extended.</p>power_conversion_control,power_electronics_control,control,hvdc,power,power electronics,vsc",493,34,6,0,531,hvdc three level neutral point clamp vscthe send end converter sec control voltage receive end converter rec control active power reactive power converter current controller active power set point change second reactive power set point change second converter consumer orient sign convention fault implement extended power conversion controlpower electronics electronicsvsc,"['hvdc', 'three', 'level', 'neutral', 'point', 'clamp', 'vscthe', 'send', 'end', 'converter', 'sec', 'control', 'voltage', 'receive', 'end', 'converter', 'rec', 'control', 'active', 'power', 'reactive', 'power', 'converter', 'current', 'controller', 'active', 'power', 'set', 'point', 'change', 'second', 'reactive', 'power', 'set', 'point', 'change', 'second', 'converter', 'consumer', 'orient', 'sign', 'convention', 'fault', 'implement', 'extended', 'power', 'conversion', 'controlpower', 'electronics', 'electronicsvsc']",3
1486,53259,"DOP-capable PSO is used to tune the PI speed controller for the BLDC motor with variable inertia.<p>This file contains an implementation of DOP-capable PSO used to adapt controller gains in a situation of sudden inertia change of the motor. The .pro file contains an implementation for PLC (developed on Moeller EC4P-200 controller) with simple visualization allowing testing of the algorithm on modified Schaffer F6 and Griewank benchmark functions.In order to open this file you are going to need easySoftCoDeSys software.Idea and development based on <a href=""http://www.mathworks.com/matlabcentral/fileexchange/47947-adaptive-optimal-control-for-repetitive-processes"">http://www.mathworks.com/matlabcentral/fileexchange/47947-adaptive-optimal-control-for-repetitive-processes</a></p>electric_motor_control,power_electronics_control,bldc,dop,dynamic optimization problem,optimal control,particle swarm optimization,plc,pso",98,2,2,0,116,dop capable pso tune speed controller bldc motor variable inertia file contain implementation dop capable pso adapt controller gain situation sudden inertia change motor pro file contain implementation plc develop moeller controller simple visualization allow test algorithm modify schaffer griewank benchmark function order open file need easysoftcodesys software idea development base http mathworks com matlabcentral fileexchange adaptive optimal control repetitive motor controlpower electronics optimization problemoptimal controlparticle swarm,"['dop', 'capable', 'pso', 'tune', 'speed', 'controller', 'bldc', 'motor', 'variable', 'inertia', 'file', 'contain', 'implementation', 'dop', 'capable', 'pso', 'adapt', 'controller', 'gain', 'situation', 'sudden', 'inertia', 'change', 'motor', 'pro', 'file', 'contain', 'implementation', 'plc', 'develop', 'moeller', 'controller', 'simple', 'visualization', 'allow', 'test', 'algorithm', 'modify', 'schaffer', 'griewank', 'benchmark', 'function', 'order', 'open', 'file', 'need', 'easysoftcodesys', 'software', 'idea', 'development', 'base', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'adaptive', 'optimal', 'control', 'repetitive', 'motor', 'controlpower', 'electronics', 'optimization', 'problemoptimal', 'controlparticle', 'swarm']",0
1487,53262,"Fuzzy controller implemented<p>simulink fuzzy controller implemented</p>fuzzy,fuzzy controller,system control",16,0,1,0,16,fuzzy controller fuzzy controller control,"['fuzzy', 'controller', 'fuzzy', 'controller', 'control']",1
1488,53274,"VSC based STATCOM model<p>STATCOM model for the voltage regulation using the three level neutral-clamped voltage source converter. During the simulation, the voltage setpoint is changed, reducing and increasing the AC voltage, the STATCOM supplies the required reactive power to support the voltage.</p>power_conversion_control,power_electronics_control,control design,power,power electronics,simulation,statcom,vsc",248,16,6,0,264,vsc base statcom modelstatcom voltage regulation three level neutral clamp voltage source converter voltage setpoint change reduce increase voltage statcom supply require reactive power support voltage power conversion controlpower electronics controlcontrol,"['vsc', 'base', 'statcom', 'modelstatcom', 'voltage', 'regulation', 'three', 'level', 'neutral', 'clamp', 'voltage', 'source', 'converter', 'voltage', 'setpoint', 'change', 'reduce', 'increase', 'voltage', 'statcom', 'supply', 'require', 'reactive', 'power', 'support', 'voltage', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",1
1489,53279,"This file provides the accurate representation of over & under-production phase of Inertial response<p>This file provides the accurate representation of over &amp; under-production phase of Inertial response provided by Wind Generation Resources. Previous Submission didn't include the under-production phase as the turbine was already operating below its maximum operating point</p>dfig,emulated inertia response,power,simulation,simulink,wind",1929,114,10,0,2250,file provide accurate representation production phase inertial responsethis file provide accurate representation amp production phase inertial response provide wind generation resource previous submission include production phase turbine already operate maximum operating inertia,"['file', 'provide', 'accurate', 'representation', 'production', 'phase', 'inertial', 'responsethis', 'file', 'provide', 'accurate', 'representation', 'amp', 'production', 'phase', 'inertial', 'response', 'provide', 'wind', 'generation', 'resource', 'previous', 'submission', 'include', 'production', 'phase', 'turbine', 'already', 'operate', 'maximum', 'operating', 'inertia']",0
1490,53311,"In this model the equation of a single diode model photo-voltaic cell is designed.<p>This model is the basic PV model. here the inputs are temperature and irradiance. for different characteristic  we can vary the inputs. First of all the equations are implemented and the connections are done. Then the value of series and parallel resistance made to fixed one. IN the PV system four blocks are there and implementing different values. The output characteristics can analysed by running the simulation (P-V and I-V curves). The alternate of getting result is like this: 1 st go to command window, write plot(v,p) and press enter.so we can see the characteristics of a PV array.</p>gui,mathematics,simulink",107,5,3,0,108,equation single diode photo voltaic cell design basic input temperature irradiance different characteristic vary input first equation implement connection value series parallel resistance make fix one four block implement different value output characteristic analyse run curve alternate get result like command window write plot press enter see characteristic array,"['equation', 'single', 'diode', 'photo', 'voltaic', 'cell', 'design', 'basic', 'input', 'temperature', 'irradiance', 'different', 'characteristic', 'vary', 'input', 'first', 'equation', 'implement', 'connection', 'value', 'series', 'parallel', 'resistance', 'make', 'fix', 'one', 'four', 'block', 'implement', 'different', 'value', 'output', 'characteristic', 'analyse', 'run', 'curve', 'alternate', 'get', 'result', 'like', 'command', 'window', 'write', 'plot', 'press', 'enter', 'see', 'characteristic', 'array']",7
1491,53315,"Simple boost open loop control of Z-source inverter<p>Simple boost open loop control of Z-source inverter</p>inverter,pulse width modulation,zsource inverter",83,2,2,0,129,simple boost open loop control source invertersimple boost open loop control source width inverter,"['simple', 'boost', 'open', 'loop', 'control', 'source', 'invertersimple', 'boost', 'open', 'loop', 'control', 'source', 'width', 'inverter']",1
1492,53325,"Matrix converter with snubber circuit<p>Matrix converter with snubber circuit</p>matrix converter,power electronics,pwm",60,5,2,0,61,matrix converter snubber circuitmatrix converter snubber circuitmatrix converterpower electronicspwm,"['matrix', 'converter', 'snubber', 'circuitmatrix', 'converter', 'snubber', 'circuitmatrix', 'converterpower', 'electronicspwm']",8
1493,53327,"Z-Source Inverter_Maximum Boost Control_Open loop<p>Z-Source Inverter_Maximum Boost Control_Open loop</p>pwm,zsource inverter",87,2,3,0,135,source inverter maximum boost control open loopz source inverter maximum boost control open looppwmzsource inverter,"['source', 'inverter', 'maximum', 'boost', 'control', 'open', 'loopz', 'source', 'inverter', 'maximum', 'boost', 'control', 'open', 'looppwmzsource', 'inverter']",1
1494,53328,"Z-Source Inverter_Constant Boost Control_Open Loop<p>Z-Source Inverter_Constant Boost Control_Open Loop</p>pwm,zsource inverter",77,2,3,0,114,source inverter constant boost control open loopz source inverter constant boost control open looppwmzsource inverter,"['source', 'inverter', 'constant', 'boost', 'control', 'open', 'loopz', 'source', 'inverter', 'constant', 'boost', 'control', 'open', 'looppwmzsource', 'inverter']",1
1495,53377,"LCL filter design for PWM converters including the tuning of the current controller<p>In this model, the LCL filter parameters are designed using a matlab script. The calculated LCL parameters have been used in the simulink model to check the performance of the LCL filter and THD content of the voltages and currents. In the simulink model, the voltage at the load bus is regulated with the help of PI controller. The LCL filter parameters calculated using the script give very good performance.  In the matlab script, the tuning of the PI current controller has also been demonstrated using two techniques. One can check the step response of the tuned PI controllers.</p>electric_motor_control,power_conversion_control,power_electronics_control,control design,inverter,lcl filter,pi,power,power electronics,system design",67,1,2,0,85,lcl filter design pwm converter include tune current controllerin lcl filter parameter design script calculate lcl parameter check performance lcl filter thd content voltages current voltage load bus regulate help controller lcl filter parameter calculate script give good performance script tune current controller also demonstrate two technique one check step response tune controller electric motor controlpower conversion controlpower electronics controlcontrol design,"['lcl', 'filter', 'design', 'pwm', 'converter', 'include', 'tune', 'current', 'controllerin', 'lcl', 'filter', 'parameter', 'design', 'script', 'calculate', 'lcl', 'parameter', 'check', 'performance', 'lcl', 'filter', 'thd', 'content', 'voltages', 'current', 'voltage', 'load', 'bus', 'regulate', 'help', 'controller', 'lcl', 'filter', 'parameter', 'calculate', 'script', 'give', 'good', 'performance', 'script', 'tune', 'current', 'controller', 'also', 'demonstrate', 'two', 'technique', 'one', 'check', 'step', 'response', 'tune', 'controller', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'design']",3
1496,53428,"Simscape implementation of thermo-electric effects<p>This submission illustrates how Simscape language is used to simulate heat generation and subsequent cooling of  a resistance. As heat is created by Joule losses (Pj = R*i^2), the value of resistance R increases depending upon air or water cooling. The implementation is based upon components available in Foundation Libraries (Electrical,  Thermal, Thermal Liquids).</p>electric,multidomain simulation,simscape language,thermal",34,3,2,3,34,simscape implementation thermo electric effectsthis submission illustrate simscape language heat generation subsequent cool resistance heat create joule loss value resistance increase depend upon air water cool implementation base upon component available foundation electrical thermal thermal liquid languagethermal,"['simscape', 'implementation', 'thermo', 'electric', 'effectsthis', 'submission', 'illustrate', 'simscape', 'language', 'heat', 'generation', 'subsequent', 'cool', 'resistance', 'heat', 'create', 'joule', 'loss', 'value', 'resistance', 'increase', 'depend', 'upon', 'air', 'water', 'cool', 'implementation', 'base', 'upon', 'component', 'available', 'foundation', 'electrical', 'thermal', 'thermal', 'liquid', 'languagethermal']",5
1497,53466,"A dozen or so training algorithms are investigated here.<p>This submission can be used to reproduce the experiments presented at EPE'15-ECCE Europe and described in ""Repetitive neurocontroller with disturbance dual feedforward -- choosing the right dynamic optimization algorithm"" by Bartlomiej Ufnalski and Lech M. Grzesiak. More info can be found at <a href=""http://ufnalski.edu.pl/proceedings/epe2015/"">http://ufnalski.edu.pl/proceedings/epe2015/</a> and in ""Repetitive neurocontroller with disturbance feedforward path active in the pass-to-pass direction for a VSI inverter with an output LC filter"" (<a href=""http://dx.doi.org/10.1515/bpasts-2016-0013"">http://dx.doi.org/10.1515/bpasts-2016-0013</a>).</p>dop,dynamic optimization problem,ilc,iterative learning control,neural network,neurocontroller,repetitive control,training",57,3,2,0,59,dozen training algorithms investigated submission reproduce experiment present epe ecce europe describe repetitive neurocontroller disturbance dual feedforward choose right dynamic optimization algorithm bartlomiej ufnalski lech grzesiak info find http ufnalski edu proceeding epe repetitive neurocontroller disturbance feedforward path active pas pas direction vsi inverter output filter http doi org bpasts dopdynamic optimization learn controlneural controltraining,"['dozen', 'training', 'algorithms', 'investigated', 'submission', 'reproduce', 'experiment', 'present', 'epe', 'ecce', 'europe', 'describe', 'repetitive', 'neurocontroller', 'disturbance', 'dual', 'feedforward', 'choose', 'right', 'dynamic', 'optimization', 'algorithm', 'bartlomiej', 'ufnalski', 'lech', 'grzesiak', 'info', 'find', 'http', 'ufnalski', 'edu', 'proceeding', 'epe', 'repetitive', 'neurocontroller', 'disturbance', 'feedforward', 'path', 'active', 'pas', 'pas', 'direction', 'vsi', 'inverter', 'output', 'filter', 'http', 'doi', 'org', 'bpasts', 'dopdynamic', 'optimization', 'learn', 'controlneural', 'controltraining']",5
1498,53498,"This is the code for the Rice Krispies Loader robotic arm project<p>This code times the movement of 4 servos for a robotic arm. This arm moves downwards and then up again when either a button is pressed or a force resistance sensor is touched. The sequence of movement is useful because all  the servos aren't activated at the same time; instead they happen in a smooth succession with the base servo leading to the arm servo, then ""hand"" and ""finger"" servo in a domino effect. This was necessary because the arm needs to dip into a bowl of cereal and for this the base had to move first and then the rest of the parts follow. The inverse sequence of parts (with the same timing) happens going back up and only after the down and up movement is complete can the arm be activated again.</p>rice krispies loader,robotic arm",41,7,2,10,38,code rice krispies loader robotic arm projectthis code time movement servo robotic arm arm move downwards either button press force resistance sensor touch sequence movement useful servos activated time instead happen smooth succession base servo lead arm servo hand finger servo domino effect necessary arm need dip bowl cereal base move first rest part follow inverse sequence part time happen back movement complete arm activate rice krispies loaderrobotic arm,"['code', 'rice', 'krispies', 'loader', 'robotic', 'arm', 'projectthis', 'code', 'time', 'movement', 'servo', 'robotic', 'arm', 'arm', 'move', 'downwards', 'either', 'button', 'press', 'force', 'resistance', 'sensor', 'touch', 'sequence', 'movement', 'useful', 'servos', 'activated', 'time', 'instead', 'happen', 'smooth', 'succession', 'base', 'servo', 'lead', 'arm', 'servo', 'hand', 'finger', 'servo', 'domino', 'effect', 'necessary', 'arm', 'need', 'dip', 'bowl', 'cereal', 'base', 'move', 'first', 'rest', 'part', 'follow', 'inverse', 'sequence', 'part', 'time', 'happen', 'back', 'movement', 'complete', 'arm', 'activate', 'rice', 'krispies', 'loaderrobotic', 'arm']",5
1499,53502,Bergman Model in Simulink<p>Bergman Model in Simulink</p>bergman model,53,0,1,0,46,bergman,['bergman'],2
1500,53561,"Speed and position controllers for a DC/BLDC drive are tuned simultaneously using PSO.<p>ISE, ITSE and CUSTOM performance indices are used alternatively here. The benefits of the CUSTOM performance index can be investigated using this submission. More info in Advanced and Intelligent Control in Power Electronics and Drives (<a href=""http://www.springer.com/us/book/9783319034003"">www.springer.com/us/book/9783319034003</a>).</p>control,controller tuning,electric drive,fitness function,ise,itse,motion control,optimal control,particle swarm optimization,performance index,pi,pid,position control,pso,speed control,electric_motor_control,power_conversion_control,power_electronics_control",68,4,2,0,87,speed position controller bldc drive tune pso ise itse custom performance index alternatively benefit custom performance index investigate submission info advance intelligent control power electronics drive springer com book tuningelectric drivefitness controloptimal controlparticle swarm controlpsospeed controlelectric motor controlpower conversion controlpower electronics control,"['speed', 'position', 'controller', 'bldc', 'drive', 'tune', 'pso', 'ise', 'itse', 'custom', 'performance', 'index', 'alternatively', 'benefit', 'custom', 'performance', 'index', 'investigate', 'submission', 'info', 'advance', 'intelligent', 'control', 'power', 'electronics', 'drive', 'springer', 'com', 'book', 'tuningelectric', 'drivefitness', 'controloptimal', 'controlparticle', 'swarm', 'controlpsospeed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1501,53566,"This is the Simulink code for the Rice Krispies Loader robotic arm project<p>The Rice Krispies Loader is a 3D printed robotic arm which loads cereal into a line following robot. An Arduino Due is the brains behind this project; the cascade of movements for the arm is modeled by way of a Simulink model. -The movement of the arm is triggered by either pressing a momentary switch button or through pressure upon a -Force Resistance Sensor (FRS). -The lach subsystem controls when the arm can be activated again after an initial input signal.-A secondary subsystem controls the timing of servo motors in conjunction with LEDs which turn on and off when a specific servo moves.  Video of Project:<a href=""https://www.youtube.com/watch?v=mucktOz6lOo"">https://www.youtube.com/watch?v=mucktOz6lOo</a></p>electric_motor_control,power_electronics_control,rice krispies loader,robotic arm",51,7,2,10,40,code rice krispies loader robotic arm projectthe rice krispies loader print robotic arm load cereal line follow robot arduino due brain behind project cascade movement arm way movement arm trigger either press momentary switch button pressure upon force resistance sensor frs lach subsystem control arm activate initial input signal secondary subsystem control time servo motor conjunction led turn specific servo move video project youtube com watch mucktoz looelectric motor controlpower electronics controlrice krispies loaderrobotic arm,"['code', 'rice', 'krispies', 'loader', 'robotic', 'arm', 'projectthe', 'rice', 'krispies', 'loader', 'print', 'robotic', 'arm', 'load', 'cereal', 'line', 'follow', 'robot', 'arduino', 'due', 'brain', 'behind', 'project', 'cascade', 'movement', 'arm', 'way', 'movement', 'arm', 'trigger', 'either', 'press', 'momentary', 'switch', 'button', 'pressure', 'upon', 'force', 'resistance', 'sensor', 'frs', 'lach', 'subsystem', 'control', 'arm', 'activate', 'initial', 'input', 'signal', 'secondary', 'subsystem', 'control', 'time', 'servo', 'motor', 'conjunction', 'led', 'turn', 'specific', 'servo', 'move', 'video', 'project', 'youtube', 'com', 'watch', 'mucktoz', 'looelectric', 'motor', 'controlpower', 'electronics', 'controlrice', 'krispies', 'loaderrobotic', 'arm']",5
1502,53573,"Generating variable frequency PWM signal with adjustable dead-band<p>Frequency and dead-band of the generated PWM signal is adjustable. Ensure that defined dead-band is not larger than the period of PWM signal.</p>converter,inverter,power electronics,electric_motor_control,power_conversion_control,power_electronics_control",25,1,2,0,28,generate variable frequency pwm signal adjustable dead bandfrequency dead band generate pwm signal adjustable ensure define dead band large period pwm signal motor controlpower conversion controlpower electronics control,"['generate', 'variable', 'frequency', 'pwm', 'signal', 'adjustable', 'dead', 'bandfrequency', 'dead', 'band', 'generate', 'pwm', 'signal', 'adjustable', 'ensure', 'define', 'dead', 'band', 'large', 'period', 'pwm', 'signal', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1503,53588,"Port the jet pump model from SimHydraulics to Simscape's thermal liquid foundation domain<p>As written here:<a href=""http://www.mathworks.com/matlabcentral/answers/248377-build-a-jet-pump-model-in-simscape-s-thermal-liquid-domainPort"">http://www.mathworks.com/matlabcentral/answers/248377-build-a-jet-pump-model-in-simscape-s-thermal-liquid-domainPort</a> of the ""Jet pump"" block from the simhydraulics domain: <a href=""http://de.mathworks.com/help/physmod/hydro/ref/jetpump.html-"">http://de.mathworks.com/help/physmod/hydro/ref/jetpump.html-</a> written in simscape language- no heat lossUpdate: Finally working as expected.</p>jet pump,simscape,thermal liquid",13,0,1,1,13,port jet pump simhydraulics simscape thermal liquid foundation domainas write http mathworks com matlabcentral answer build jet pump simscape thermal liquid domainport jet pump block simhydraulics domain http mathworks com help physmod hydro ref jetpump html write simscape language heat lossupdate finally work expect jet liquid,"['port', 'jet', 'pump', 'simhydraulics', 'simscape', 'thermal', 'liquid', 'foundation', 'domainas', 'write', 'http', 'mathworks', 'com', 'matlabcentral', 'answer', 'build', 'jet', 'pump', 'simscape', 'thermal', 'liquid', 'domainport', 'jet', 'pump', 'block', 'simhydraulics', 'domain', 'http', 'mathworks', 'com', 'help', 'physmod', 'hydro', 'ref', 'jetpump', 'html', 'write', 'simscape', 'language', 'heat', 'lossupdate', 'finally', 'work', 'expect', 'jet', 'liquid']",0
1504,53592,"Frequency response of grid when suddenly a wind generator trips at t=30 seconds<p>Frequency response of grid when suddenly a wind generator trips at t=30 seconds</p>dfig,frequency,frequencyresponse,powersystems,tripping,two area,wind",1018,59,10,0,1202,frequency response grid suddenly wind generator trip response grid suddenly wind generator trip areawind,"['frequency', 'response', 'grid', 'suddenly', 'wind', 'generator', 'trip', 'response', 'grid', 'suddenly', 'wind', 'generator', 'trip', 'areawind']",4
1505,53649,distributed generator connected to grid<p>distributed generator connected to grid</p>simulink,80,3,3,0,107,distribute generator connect griddistributed generator connect,"['distribute', 'generator', 'connect', 'griddistributed', 'generator', 'connect']",4
1506,53687,"Secondary frequency response or automatic generation control by synchronous generators is explained<p>Secondary frequency response or automatic generation control by synchronous generators is explained using a two area system consisting of four generators of 900 MVA capacity. M2 is the swing bus. A disturbance is applied at t=10 seconds. The system frequency gets recovered close to 60 Hz due to inherent governor response but the steady state frequency deviation is not equal to zero. In order to make the steady state frequency deviation to zero, the transmission system operator sends commands to the dispatch able plants (here M1 and M2) to provide additional active power to compensate the frequency deviation and thus restore it to nominal value of 60 Hz. PI controller is developed to reflect the AGC</p>agc,automaticgenerationcontrol,synchronousgenerator",150,7,3,0,211,secondary frequency response automatic generation control synchronous generator frequency response automatic generation control synchronous generator explain two area consist four generator mva capacity swing bus disturbance apply second frequency get recover close due inherent governor response steady state frequency deviation equal zero order make steady state frequency deviation zero transmission operator send command dispatch able plant provide additional active power compensate frequency deviation thus restore nominal value controller develop reflect,"['secondary', 'frequency', 'response', 'automatic', 'generation', 'control', 'synchronous', 'generator', 'frequency', 'response', 'automatic', 'generation', 'control', 'synchronous', 'generator', 'explain', 'two', 'area', 'consist', 'four', 'generator', 'mva', 'capacity', 'swing', 'bus', 'disturbance', 'apply', 'second', 'frequency', 'get', 'recover', 'close', 'due', 'inherent', 'governor', 'response', 'steady', 'state', 'frequency', 'deviation', 'equal', 'zero', 'order', 'make', 'steady', 'state', 'frequency', 'deviation', 'zero', 'transmission', 'operator', 'send', 'command', 'dispatch', 'able', 'plant', 'provide', 'additional', 'active', 'power', 'compensate', 'frequency', 'deviation', 'thus', 'restore', 'nominal', 'value', 'controller', 'develop', 'reflect']",4
1507,53689,"Script files and models used in MATLAB Expo 2015 Japan, Session E1 (in Japanese)<p>Script files and models used in MATLAB Expo 2015 Japan, Session E1:  Building rapid prototyping system including image recognition for developing autonomous driving technology (in Japanese).ex1_intro_ex2015_dist.slx : demo model to demonstrate simple image processing on Simulink.ex2b_myCarDetection.m   : MATLAB script file to detect cars in front of the camera.ex2c_carDetection1a_dist.slx : Simulink model to detect cars in front of the camera.ex3_stereo_SL_view_persistClass_dist.slx : Simulink model to view stereo image.ex4_pointCloudsExample_R2015b_EXPO_dist.m : MATLAB script file for point cloud processing example.(Note: video files used in the seminar have been replaced with still images.)</p>adas,computer vision,image processing,image recognition,matlab expo 2015,point cloud processing,stereo image",17,0,1,0,16,script file expo japan session japanese script file expo japan session building rapid prototyping include image recognition develop autonomous drive technology japanese intro dist slx demo demonstrate simple image process mycardetection script file detect car front camera cardetection dist slx detect car front camera stereo view persistclass dist slx view stereo image expo dist script file point cloud process example note video file seminar replace still image adascomputer visionimage processingimage expo point cloud image,"['script', 'file', 'expo', 'japan', 'session', 'japanese', 'script', 'file', 'expo', 'japan', 'session', 'building', 'rapid', 'prototyping', 'include', 'image', 'recognition', 'develop', 'autonomous', 'drive', 'technology', 'japanese', 'intro', 'dist', 'slx', 'demo', 'demonstrate', 'simple', 'image', 'process', 'mycardetection', 'script', 'file', 'detect', 'car', 'front', 'camera', 'cardetection', 'dist', 'slx', 'detect', 'car', 'front', 'camera', 'stereo', 'view', 'persistclass', 'dist', 'slx', 'view', 'stereo', 'image', 'expo', 'dist', 'script', 'file', 'point', 'cloud', 'process', 'example', 'note', 'video', 'file', 'seminar', 'replace', 'still', 'image', 'adascomputer', 'visionimage', 'processingimage', 'expo', 'point', 'cloud', 'image']",5
1508,53711,"This program executes a Multimodel control simulation<p>This program is the numerical simulation of the Fuzzy state feedback controller for attitude stabilization of a Quadrotor. This is published in the paper Fuzzy state feedback for attitude stabilization of Quadrotor of the International Journal of Advanced Robotic Systems. Year 2015. <a href=""http://www.intechopen.com/journals/international_journal_of_advanced_robotic_systems"">http://www.intechopen.com/journals/international_journal_of_advanced_robotic_systems</a></p>fuzzy,fuzzy state feedback,multimodel",94,2,2,0,143,program execute multimodel control program numerical fuzzy state feedback controller attitude stabilization quadrotor publish paper fuzzy state feedback attitude stabilization quadrotor international journal advance robotic year http intechopen com journal international journal advance robotic state,"['program', 'execute', 'multimodel', 'control', 'program', 'numerical', 'fuzzy', 'state', 'feedback', 'controller', 'attitude', 'stabilization', 'quadrotor', 'publish', 'paper', 'fuzzy', 'state', 'feedback', 'attitude', 'stabilization', 'quadrotor', 'international', 'journal', 'advance', 'robotic', 'year', 'http', 'intechopen', 'com', 'journal', 'international', 'journal', 'advance', 'robotic', 'state']",0
1509,53733,"single phase full bridge inverter with the help of IGBT/Diode<p>This simulation file is the single phase full bridge inverter using the IGBT/Diode. When the T2, T2 conduct(triggered), load voltage is Vs and when T3, T4 conduct load voltage is -Vs. Frequency of output voltage can be controlled by varying the periodic time T.Thyristor T1, T2 are in series across the source ; Thyristors T1, T4, or T3, T4 are also in series across the source. During inverter operation, it should be ensured that two SCRs in the same branch, such as T1, T2 in diagram, do not conduct simultaneously as this would lead to a direct short circuit of the source.The main  drawback of half-bridge inverter is that it requires 3-wire dc supply. This difficulty can be overcome by the use of a full-bridge inverter.</p>power_conversion_control,power_electronics_control,simulation",26,0,1,0,23,single phase full bridge inverter help igbt diodethis file single phase full bridge inverter igbt diode conduct trigger load voltage conduct load voltage frequency output voltage control vary periodic time thyristor series across source thyristors also series across source inverter operation ensure two scrs branch diagram conduct would lead direct short circuit source main drawback half bridge inverter require wire supply difficulty overcome full bridge inverter power conversion controlpower electronics,"['single', 'phase', 'full', 'bridge', 'inverter', 'help', 'igbt', 'diodethis', 'file', 'single', 'phase', 'full', 'bridge', 'inverter', 'igbt', 'diode', 'conduct', 'trigger', 'load', 'voltage', 'conduct', 'load', 'voltage', 'frequency', 'output', 'voltage', 'control', 'vary', 'periodic', 'time', 'thyristor', 'series', 'across', 'source', 'thyristors', 'also', 'series', 'across', 'source', 'inverter', 'operation', 'ensure', 'two', 'scrs', 'branch', 'diagram', 'conduct', 'would', 'lead', 'direct', 'short', 'circuit', 'source', 'main', 'drawback', 'half', 'bridge', 'inverter', 'require', 'wire', 'supply', 'difficulty', 'overcome', 'full', 'bridge', 'inverter', 'power', 'conversion', 'controlpower', 'electronics']",3
1510,53746,"DC Microgrid performance when the main grid is faulted<p>credits to ankith reddy. DC microgrid operates at 480v. AC input from the 120 kv main grid is stepped down to 11 kv and then stepped down to 480v and then it is converted to DC by converter (rectifier). And DC microgrid inpputs to AC grid when the converter is inverter mode. fault occurs at t=10 sec</p>dcmicrogrid,fault,microgrid,power_conversion_control,power_electronics_control",834,59,4,0,939,microgrid performance main grid faultedcredits ankith reddy microgrid operate input main grid step step convert converter rectifier microgrid inpputs grid converter inverter mode fault occur conversion controlpower electronics control,"['microgrid', 'performance', 'main', 'grid', 'faultedcredits', 'ankith', 'reddy', 'microgrid', 'operate', 'input', 'main', 'grid', 'step', 'step', 'convert', 'converter', 'rectifier', 'microgrid', 'inpputs', 'grid', 'converter', 'inverter', 'mode', 'fault', 'occur', 'conversion', 'controlpower', 'electronics', 'control']",3
1511,53747,"AC Microgrid Performance when the main grid is faulted<p>credits to ankith reddy. AC microgrid operates at 480v. AC input from the 120 kv main grid is stepped down to 11 kv and then stepped down to 480v. Fault occurs at t=10 sec. AC microgrid is separated from the main grid through a breaker</p>acmicrogrid,fault,microgrid,electric_motor_control,power_conversion_control,power_electronics_control",532,20,3,0,767,microgrid performance main grid faultedcredits ankith reddy microgrid operate input main grid step step fault occur sec microgrid separate main grid motor controlpower conversion controlpower electronics control,"['microgrid', 'performance', 'main', 'grid', 'faultedcredits', 'ankith', 'reddy', 'microgrid', 'operate', 'input', 'main', 'grid', 'step', 'step', 'fault', 'occur', 'sec', 'microgrid', 'separate', 'main', 'grid', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1512,53764,"Automatic Generation Control by Wind generation resource co-ordinated with synchronous generator<p>without automatic generation control, the droop control or governor response by a generation resource would not be able to bring the steady state frequency to 60 Hz after the disturbance occurs. In this model, a PI controller is built to reduce the steady state frequency deviation to zero. Rotor speed and pitch control is performed to reduce the active power in proportion to change in frequency. This AGC controller co-ordinates with another synchronous generator 'M2'. Time response plots of various parameters for both Wind turbine and Synchronous generator with and without AGC is provided. A matlab code is written to plot corresponding curves. The disturbance occurs at t= 50 sec and the AGC control loop activates at t=110 sec once the commands is received from the transmission system operator. Wind generation resource was operating at wind speed of 10 m/s and was running at less than its maximum power point. WGR is supplying 10% of the total load.</p>agc,automaticgenerationcontrol,dfig,frequency,wind",1082,62,10,0,1276,automatic generation control wind generation resource ordinate synchronous automatic generation control droop control governor response generation resource would able bring steady state frequency disturbance occur controller build reduce steady state frequency deviation zero rotor speed pitch control perform reduce active power proportion change frequency agc controller ordinate another synchronous generator time response plot various parameter wind turbine synchronous generator without agc provide code write plot correspond curve disturbance occur sec agc control loop activate sec command receive transmission operator wind generation resource operate wind speed run less maximum power point wgr supply total load,"['automatic', 'generation', 'control', 'wind', 'generation', 'resource', 'ordinate', 'synchronous', 'automatic', 'generation', 'control', 'droop', 'control', 'governor', 'response', 'generation', 'resource', 'would', 'able', 'bring', 'steady', 'state', 'frequency', 'disturbance', 'occur', 'controller', 'build', 'reduce', 'steady', 'state', 'frequency', 'deviation', 'zero', 'rotor', 'speed', 'pitch', 'control', 'perform', 'reduce', 'active', 'power', 'proportion', 'change', 'frequency', 'agc', 'controller', 'ordinate', 'another', 'synchronous', 'generator', 'time', 'response', 'plot', 'various', 'parameter', 'wind', 'turbine', 'synchronous', 'generator', 'without', 'agc', 'provide', 'code', 'write', 'plot', 'correspond', 'curve', 'disturbance', 'occur', 'sec', 'agc', 'control', 'loop', 'activate', 'sec', 'command', 'receive', 'transmission', 'operator', 'wind', 'generation', 'resource', 'operate', 'wind', 'speed', 'run', 'less', 'maximum', 'power', 'point', 'wgr', 'supply', 'total', 'load']",4
1513,53770,"Vector control of PMSM with model of Inverter and relay current regulator<p>Vector control of permanent magnet synchronous motor in rotor flux reference with angular velocity sensor. Model uses Model of real Voltage Inverter, ideal Invertor and current relay regulator (most rapid). In the top of schematic the model of PMSM presents (by Syed Abdul Rahman Kashif; 42048).</p>electric_motor_control,power_electronics_control,power electronics",392,21,4,0,489,vector control pmsm inverter relay current regulatorvector control permanent magnet synchronous motor rotor flux reference angular velocity sensor real voltage inverter ideal invertor current relay regulator rapid top schematic pmsm present syed abdul rahman kashif electric motor controlpower electronics controlpower electronics,"['vector', 'control', 'pmsm', 'inverter', 'relay', 'current', 'regulatorvector', 'control', 'permanent', 'magnet', 'synchronous', 'motor', 'rotor', 'flux', 'reference', 'angular', 'velocity', 'sensor', 'real', 'voltage', 'inverter', 'ideal', 'invertor', 'current', 'relay', 'regulator', 'rapid', 'top', 'schematic', 'pmsm', 'present', 'syed', 'abdul', 'rahman', 'kashif', 'electric', 'motor', 'controlpower', 'electronics', 'controlpower', 'electronics']",3
1514,53830,PAM_DSP<p>Communication discrete</p>communications,15,0,1,0,21,pam,['pam'],2
1515,53831,"LMTD approach to calculate temperatures and heat transfer. Based on pipe blocks.<p>For steady state considerations, you can often use the LMTD approach to calculate temperatures and heat transfer for heat exchangers.Instead of writing a new simscape block, I used the standard block from thermal_liquid, overrode the internal heat transfer and calculated the LMTD.for use:- heat exchanger dimensioning &amp; quick'n'dirty check in overall plantplease note:- not working for flow reversal and highly dynamic simulationpotential for optimization:- heat transfer coefficient from lookup-table- maybe replacing LMTD with NTU approach</p>model,simscape,heat exchanger,thermal liquid",32,0,1,0,38,lmtd approach calculate temperature heat transfer base pipe block steady state consideration often lmtd approach calculate temperature heat transfer heat exchanger instead write new simscape block standard block thermal liquid override internal heat transfer calculate lmtd heat exchanger dimension amp quick dirty check overall plantplease note work flow reversal highly dynamic optimization heat transfer coefficient lookup table maybe replace lmtd ntu liquid,"['lmtd', 'approach', 'calculate', 'temperature', 'heat', 'transfer', 'base', 'pipe', 'block', 'steady', 'state', 'consideration', 'often', 'lmtd', 'approach', 'calculate', 'temperature', 'heat', 'transfer', 'heat', 'exchanger', 'instead', 'write', 'new', 'simscape', 'block', 'standard', 'block', 'thermal', 'liquid', 'override', 'internal', 'heat', 'transfer', 'calculate', 'lmtd', 'heat', 'exchanger', 'dimension', 'amp', 'quick', 'dirty', 'check', 'overall', 'plantplease', 'note', 'work', 'flow', 'reversal', 'highly', 'dynamic', 'optimization', 'heat', 'transfer', 'coefficient', 'lookup', 'table', 'maybe', 'replace', 'lmtd', 'ntu', 'liquid']",5
1516,53834,"This file contains an OFDM transceiver inspired from the physical layer of IEEE 802.11 (WiFi)<p>The numbers used are those from IEEE 802.11 (WiFi). The transceiver can run in stand-alone mode as a simulation by using the channel model. The transmitter and receiver can also be paired with a USRP Source and Sink nodes for over-the-air experimentation and performance evaluation. The USRP Source/Sink File are not included and can be obtained from the Matlab Communication Toolbox for USRPs.</p>ofdm,ofdm physical layer,transceiver,wifi 80211",210,21,4,0,249,file contains ofdm transceiver inspired physical layer iee wifi number iee wifi transceiver run stand alone mode channel transmitter receiver also pair usrp source sink node air experimentation performance evaluation usrp source sink file include obtain communication toolbox usrps ofdmofdm physical,"['file', 'contains', 'ofdm', 'transceiver', 'inspired', 'physical', 'layer', 'iee', 'wifi', 'number', 'iee', 'wifi', 'transceiver', 'run', 'stand', 'alone', 'mode', 'channel', 'transmitter', 'receiver', 'also', 'pair', 'usrp', 'source', 'sink', 'node', 'air', 'experimentation', 'performance', 'evaluation', 'usrp', 'source', 'sink', 'file', 'include', 'obtain', 'communication', 'toolbox', 'usrps', 'ofdmofdm', 'physical']",0
1517,53848,"Tool for adaptive control design in Matlab/Simulink environment.<p>Keywords:Adaptive Control; System Identification; Recursive Least Squares Method; Pole Placement Design; Pole-Shifting Technique; Diophantine Equation; Pseudo-Random Binary Signal.</p>adaptive control,diophantine equation,pole placement design,poleshifting technique,pseudorandom binary signal,recursive least squares method,system identification",49,1,2,0,48,tool adaptive control design environment keywords adaptive control identification recursive least square method pole placement design pole shifting technique diophantine equation pseudo random binary signal adaptive equationpole placement binary signalrecursive least square methodsystem identification,"['tool', 'adaptive', 'control', 'design', 'environment', 'keywords', 'adaptive', 'control', 'identification', 'recursive', 'least', 'square', 'method', 'pole', 'placement', 'design', 'pole', 'shifting', 'technique', 'diophantine', 'equation', 'pseudo', 'random', 'binary', 'signal', 'adaptive', 'equationpole', 'placement', 'binary', 'signalrecursive', 'least', 'square', 'methodsystem', 'identification']",5
1518,53852,"Reactive power control for a small wind farm connected to infinite grid<p>Credits to selman sekai. This file is modified from submission file id#  44746. A test system consists of 20 MVA type III variable speed wind turbines, 10 MVA type I fixed speed wind turbine generators and Â±3 MVAr STATCOM connected to 25 kV medium voltage collection bus. This test system is investigated for reactive power management with the 230 kV power grid. An algorithm is written in the master controller titled""reactive management"". In this algorithm, the reactive power references are computed using the voltage and net reactive power at the point of interconnection and their values are proportional to each of the individual quadrature axis current components. The voltage dips are programmed by creating a voltage event at t=5 sec and by changing the wind speed of fixed speed wind turbine from 8 m/sec to 10 m/sec at t=11 sec. Figures and matlab code for plotting the figure are included with the submission</p>dfig,reactive,statcom,wind,aaa",1104,47,8,0,1201,reactive power control small wind farm connect infinite gridcredits selman sekai file modify submission file test consist mva type variable speed wind turbine mva type fix speed wind turbine generator mvar statcom connect medium voltage collection bus test investigate reactive power management power grid algorithm write master controller title reactive management algorithm reactive power reference compute voltage net reactive power point interconnection value proportional individual quadrature axis current component voltage dip program create voltage event sec change wind speed fixed speed wind turbine sec sec sec figure code plot figure include,"['reactive', 'power', 'control', 'small', 'wind', 'farm', 'connect', 'infinite', 'gridcredits', 'selman', 'sekai', 'file', 'modify', 'submission', 'file', 'test', 'consist', 'mva', 'type', 'variable', 'speed', 'wind', 'turbine', 'mva', 'type', 'fix', 'speed', 'wind', 'turbine', 'generator', 'mvar', 'statcom', 'connect', 'medium', 'voltage', 'collection', 'bus', 'test', 'investigate', 'reactive', 'power', 'management', 'power', 'grid', 'algorithm', 'write', 'master', 'controller', 'title', 'reactive', 'management', 'algorithm', 'reactive', 'power', 'reference', 'compute', 'voltage', 'net', 'reactive', 'power', 'point', 'interconnection', 'value', 'proportional', 'individual', 'quadrature', 'axis', 'current', 'component', 'voltage', 'dip', 'program', 'create', 'voltage', 'event', 'sec', 'change', 'wind', 'speed', 'fixed', 'speed', 'wind', 'turbine', 'sec', 'sec', 'sec', 'figure', 'code', 'plot', 'figure', 'include']",4
1519,53865,"Real time dispatch and frequency control by WGRs for variable load and wind speed conditions<p>balancing and frequency control functions are provided by WGRs while receiving dispatch commands from the ISO's. A variable load block is created to implement variations in load and wind speed is varied after every 100 seconds to show its intermittent nature. Active power is controlled in such a way that it follows dispatch commands and maintains 60 Hz frequency for varying wind speed and load conditions. Wind generation serves 10% of total static and dynamic load while other generators serve 30% load each.</p>agc,balancing,control,dispatch,frequency,power,variableload,variablewind,wind",1176,70,10,0,1366,real time dispatch frequency control wgrs variable load wind speed frequency control function provide wgrs receive dispatch command iso variable load block create implement variation load wind speed vary every second show intermittent nature active power control way follow dispatch command maintain frequency vary wind speed load condition wind generation serf total static dynamic load generator serve load,"['real', 'time', 'dispatch', 'frequency', 'control', 'wgrs', 'variable', 'load', 'wind', 'speed', 'frequency', 'control', 'function', 'provide', 'wgrs', 'receive', 'dispatch', 'command', 'iso', 'variable', 'load', 'block', 'create', 'implement', 'variation', 'load', 'wind', 'speed', 'vary', 'every', 'second', 'show', 'intermittent', 'nature', 'active', 'power', 'control', 'way', 'follow', 'dispatch', 'command', 'maintain', 'frequency', 'vary', 'wind', 'speed', 'load', 'condition', 'wind', 'generation', 'serf', 'total', 'static', 'dynamic', 'load', 'generator', 'serve', 'load']",4
1520,53866,"This file contains the complete physical layer of a 16 QAM transceiver ready to be used with USRPs<p>The file contains the complete chain required for over the air transmissions on hardware using 16 QAM modulation scheme. RRC Pulse shaping is employed. Some parts of this file are modifications of the matlab implementation ""commqpsktxrx"". The receiver chain consists of a data aided AGC, matched filtering, frequency compensation, timing synchronization and decoding blocks respectively.</p>16 qam,m qam physical layer,qam,syncronization",192,26,5,0,207,file contain complete physical layer qam transceiver ready usrpsthe file contain complete chain require air transmission hardware qam modulation scheme rrc pulse shape employed part file modification implementation commqpsktxrx receiver chain consist data aid agc match filtering frequency compensation time synchronization decode block respectively qamm qam physical,"['file', 'contain', 'complete', 'physical', 'layer', 'qam', 'transceiver', 'ready', 'usrpsthe', 'file', 'contain', 'complete', 'chain', 'require', 'air', 'transmission', 'hardware', 'qam', 'modulation', 'scheme', 'rrc', 'pulse', 'shape', 'employed', 'part', 'file', 'modification', 'implementation', 'commqpsktxrx', 'receiver', 'chain', 'consist', 'data', 'aid', 'agc', 'match', 'filtering', 'frequency', 'compensation', 'time', 'synchronization', 'decode', 'block', 'respectively', 'qamm', 'qam', 'physical']",0
1521,53967,"Some similarities and differences between these two controllers can be studied here.<p>Some similarities and differences between multiresonant (multi-oscillatory) and iterative learning controllers can be studied using this submission. Both control approaches are based on the internal model principle (IMP) and can be applied to repetitive processes. Analogous graphs for ILC are available here: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/48791-iterative-learning-motion-control"">http://www.mathworks.com/matlabcentral/fileexchange/48791-iterative-learning-motion-control</a> .</p>control,drive,ilc,imp,internal model principle,iterative learning control,mosc,motion,multioscillatory,multiresonant,pi,pid,pr,rc,repetitive control,resonant,robust",67,0,1,0,92,similarity difference two controller study similarity difference multiresonant multi oscillatory iterative learning controller study submission control approach base internal principle imp apply repetitive process analogous graph ilc available http mathworks com matlabcentral fileexchange iterative learn motion control learn,"['similarity', 'difference', 'two', 'controller', 'study', 'similarity', 'difference', 'multiresonant', 'multi', 'oscillatory', 'iterative', 'learning', 'controller', 'study', 'submission', 'control', 'approach', 'base', 'internal', 'principle', 'imp', 'apply', 'repetitive', 'process', 'analogous', 'graph', 'ilc', 'available', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'iterative', 'learn', 'motion', 'control', 'learn']",0
1522,54022,"shunt acive filter to eliminate current harmonics as well as to improve power factor.<p>This filter improves he current THD and power factor of the system. PI controllers are used to make this system fast and to stablize it. Feedback as well as feedforward both control loops are there. Voltage source inverter is used here as active filter that is injecting harmonics in opposite phase and of same magnitude that are present in source side to eliminate them. Both current control and voltage current loops are there.</p>clarl transformation,control design,simulation,srf theory,voltage inverter",319,7,4,0,443,shunt acive filter eliminate current harmonic well improve power factor filter improve current thd power factor controller make fast stablize feedback well feedforward control loop voltage source inverter active filter inject harmonic opposite phase magnitude present source side eliminate current control voltage current loop clarl theoryvoltage inverter,"['shunt', 'acive', 'filter', 'eliminate', 'current', 'harmonic', 'well', 'improve', 'power', 'factor', 'filter', 'improve', 'current', 'thd', 'power', 'factor', 'controller', 'make', 'fast', 'stablize', 'feedback', 'well', 'feedforward', 'control', 'loop', 'voltage', 'source', 'inverter', 'active', 'filter', 'inject', 'harmonic', 'opposite', 'phase', 'magnitude', 'present', 'source', 'side', 'eliminate', 'current', 'control', 'voltage', 'current', 'loop', 'clarl', 'theoryvoltage', 'inverter']",3
1523,54036,"SIMULINK model n this file detects green color in pepper image in software.<p>SIMULINK model in this file detects green color in pepper image in software , the simulink model displays 2 images one of them is orignal image and other image will be binary which shows green colored objects in white color. Same model could be used to detect red as well as blue color by selecting different color space and by making some changes in thresholding value.</p>simulink",8,0,1,0,7,file detects green color pepper image software file detects green color pepper image software display image one orignal image image binary show green colored object white color could detect red well blue color select different color space making change thresholding value,"['file', 'detects', 'green', 'color', 'pepper', 'image', 'software', 'file', 'detects', 'green', 'color', 'pepper', 'image', 'software', 'display', 'image', 'one', 'orignal', 'image', 'image', 'binary', 'show', 'green', 'colored', 'object', 'white', 'color', 'could', 'detect', 'red', 'well', 'blue', 'color', 'select', 'different', 'color', 'space', 'making', 'change', 'thresholding', 'value']",0
1524,54055,"VSC based UPFC (Unified-Power Flow Controller)<p>The shunt converter controls the AC and DC voltage while the Series converter controls the active power (P) and reactive power (Q). Both converters use current controllers. - The active power set point is changed at 1.3 seconds -The reactive power set point is changed at 0.9 seconds The model uses the three level NPC converters for the UPFC.</p>power_conversion_control,power_electronics_control,control,control design,facts,hvdc,power electronics,power system,upfc",576,39,6,0,642,vsc base upfc unified power flow controller shunt converter control voltage series converter control active power reactive power converter current controller active power set point change second reactive power set point change second three level npc converter upfc power conversion controlpower electronics systemupfc,"['vsc', 'base', 'upfc', 'unified', 'power', 'flow', 'controller', 'shunt', 'converter', 'control', 'voltage', 'series', 'converter', 'control', 'active', 'power', 'reactive', 'power', 'converter', 'current', 'controller', 'active', 'power', 'set', 'point', 'change', 'second', 'reactive', 'power', 'set', 'point', 'change', 'second', 'three', 'level', 'npc', 'converter', 'upfc', 'power', 'conversion', 'controlpower', 'electronics', 'systemupfc']",1
1525,54098,"ModÃ©lisation multi-physique MATLAB 2015b de l'axe linÃ©aire Control'X (Ivan LIEBGOTT)<p>La modÃ©lisation multi-physique proposÃ©e utilise MATLAB, Simulink, Simscape, SimElectronics, SimMechanics et propose un modÃ¨le validÃ© de l'axe linÃ©aire Control'X. Le fichier ""ControlX_MATLAB_2015b"" contient le modÃ¨le exploitable et modifiable. Le fichier ""ControlX_MATLAB_2015b_Compar_rÃ©el_model"" propose une comparaison avec les rÃ©sultats expÃ©rimentaux et une Ã©valuation des Ã©carts constatÃ©s entre le rÃ©el et le modÃ¨le.Avant d'ouvrir les fichiers et de lancer la simulation, il faut impÃ©rativement placer le dossier ""ControlX_Matlab_2015b"" dans le Path de MATLAB.</p>asservissement,automatique,axe,axe lineaire,control design,control x,controlx,ivan,liebgott,lineaire,matlab,modele,modelisation,multi,multiphysique,physique,sciences de lingenieur,si,simelectronics,simmechanics,simscape,simulation,simulink",490,74,5,0,324,modÃ©lisation multi physique axe linÃ©aire control ivan liebgott modÃ©lisation multi physique proposÃ©e utilise simscape simelectronics simmechanics propose modÃ¨le validÃ© axe linÃ©aire control fichier controlx contient modÃ¨le exploitable modifiable fichier controlx compar rÃ©el propose une comparaison avec les rÃ©sultats expÃ©rimentaux une Ã©valuation Ã©carts constatÃ©s entre rÃ©el modÃ¨le avant ouvrir les fichiers lancer faut impÃ©rativement placer dossier controlx dans path lineairecontrol designcontrol,"['modÃ©lisation', 'multi', 'physique', 'axe', 'linÃ©aire', 'control', 'ivan', 'liebgott', 'modÃ©lisation', 'multi', 'physique', 'proposÃ©e', 'utilise', 'simscape', 'simelectronics', 'simmechanics', 'propose', 'modÃ¨le', 'validÃ©', 'axe', 'linÃ©aire', 'control', 'fichier', 'controlx', 'contient', 'modÃ¨le', 'exploitable', 'modifiable', 'fichier', 'controlx', 'compar', 'rÃ©el', 'propose', 'une', 'comparaison', 'avec', 'les', 'rÃ©sultats', 'expÃ©rimentaux', 'une', 'Ã©valuation', 'Ã©carts', 'constatÃ©s', 'entre', 'rÃ©el', 'modÃ¨le', 'avant', 'ouvrir', 'les', 'fichiers', 'lancer', 'faut', 'impÃ©rativement', 'placer', 'dossier', 'controlx', 'dans', 'path', 'lineairecontrol', 'designcontrol']",8
1526,54148,"Grid connected threee phase PV inverter<p>This is the model of grid connected three phase PV inverter using the vector control technique. The d component controls the active current while the q component controls the reactive current. The control also employs the feed-forward / cross-coupling terms for the current controller.  The outer control loop controls the DC link voltage and the ac voltage of the three phase converter.  Two level converter is used for the model.</p>electric_motor_control,power_conversion_control,power_electronics_control,converter,current controller,grid,power,power electronics,pv,simulation",161,10,5,0,180,grid connect three phase inverterthis grid connect three phase inverter vector control technique component control active current component control reactive current control also employ feed forward cross coupling term current controller outer control loop control link voltage voltage three phase converter two level converter electric motor controlpower conversion controlpower electronics,"['grid', 'connect', 'three', 'phase', 'inverterthis', 'grid', 'connect', 'three', 'phase', 'inverter', 'vector', 'control', 'technique', 'component', 'control', 'active', 'current', 'component', 'control', 'reactive', 'current', 'control', 'also', 'employ', 'feed', 'forward', 'cross', 'coupling', 'term', 'current', 'controller', 'outer', 'control', 'loop', 'control', 'link', 'voltage', 'voltage', 'three', 'phase', 'converter', 'two', 'level', 'converter', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1527,54195,"Chaine d'Ã©nergie d'une voiture radio commandÃ©.<p>Le modÃ¨le se lance par le fichier voiture_RC.m afin de charger certains paramÃ¨tres. Par la suite il est possible de modifier les valeurs par l'intermÃ©diaire des boites de dialogues. Les valeurs des tensions, courants, couples, vitesses, distance parcouru et puissances sont affichÃ©s.</p>chaine dnergie,machine courant continu,pi,projet,radio commande,sciences de lingnieur,ssi,voiture",326,40,6,0,323,chaine Ã©nergie une voiture radio commandÃ© modÃ¨le lance par fichier voiture afin charger certains paramÃ¨tres par suite est possible modifier valeurs par intermÃ©diaire boites dialogue valeurs tension courants couple vitesses distance parcouru puissance sont affichÃ©s chaine dnergiemachine courant,"['chaine', 'Ã©nergie', 'une', 'voiture', 'radio', 'commandÃ©', 'modÃ¨le', 'lance', 'par', 'fichier', 'voiture', 'afin', 'charger', 'certains', 'paramÃ¨tres', 'par', 'suite', 'est', 'possible', 'modifier', 'valeurs', 'par', 'intermÃ©diaire', 'boites', 'dialogue', 'valeurs', 'tension', 'courants', 'couple', 'vitesses', 'distance', 'parcouru', 'puissance', 'sont', 'affichÃ©s', 'chaine', 'dnergiemachine', 'courant']",8
1528,54196,"ChaÃ®ne d'Ã©nergie du chariot de marchÃ©.<p>Le modÃ¨le se lance par le fichier Chariot_de_marche.m afin de charger certains paramÃ¨tres. Par la suite il est possible de modifier les valeurs par l'intermÃ©diaire des boites de dialogues.</p>chaine dnergie,chaine dnergie machine courant continu pi projet radio commande,chariot de march,machine courant continu,pi,projet,radio commande,sciences de lingnieur,ssi",224,28,6,0,211,chaÃ®ne Ã©nergie chariot marchÃ© modÃ¨le lance par fichier chariot marche afin charger certains paramÃ¨tres par suite est possible modifier valeurs par intermÃ©diaire boites dialogue chaine dnergiechaine dnergie machine courant continu projet radio commandechariot marchmachine courant lingnieurssi,"['chaÃ®ne', 'Ã©nergie', 'chariot', 'marchÃ©', 'modÃ¨le', 'lance', 'par', 'fichier', 'chariot', 'marche', 'afin', 'charger', 'certains', 'paramÃ¨tres', 'par', 'suite', 'est', 'possible', 'modifier', 'valeurs', 'par', 'intermÃ©diaire', 'boites', 'dialogue', 'chaine', 'dnergiechaine', 'dnergie', 'machine', 'courant', 'continu', 'projet', 'radio', 'commandechariot', 'marchmachine', 'courant', 'lingnieurssi']",8
1529,54209,"VSC based  Modular Multi-Level Converter (MMC) including control<p>A 20 level VSC based (IGBTs) MMC is used to control the voltage of the load bus using PI controller. At 0.1 seconds , the reference  voltage set point is changed from 1 to 0.9 p.u. The controller tracks the reference with a very good response. The Internal inductances of the MMC are not part of the model. The  energy balancing and circulating current supression controllers are also not included in the model (It is assumed that the capaictor voltages are balanced and there are no circulating currents) but can be added and the model can be extended.  The model is a good start for those who want to learn about the MMC and how it is constructed and controlled. Further extension is possible and can be done if the user has interesst in it.</p>control design,mmc,modular multilevel converter,power,power electronics,simulation",1123,131,4,0,1132,vsc base modular multi level converter mmc include controla level vsc base igbts mmc control voltage load bus controller second reference voltage set point change controller track reference good response internal inductance mmc part energy balance circulate current supression controller also include assumed capaictor voltage balance circulate current add extend good start want learn mmc construct controlled extension possible user interesst control multilevel,"['vsc', 'base', 'modular', 'multi', 'level', 'converter', 'mmc', 'include', 'controla', 'level', 'vsc', 'base', 'igbts', 'mmc', 'control', 'voltage', 'load', 'bus', 'controller', 'second', 'reference', 'voltage', 'set', 'point', 'change', 'controller', 'track', 'reference', 'good', 'response', 'internal', 'inductance', 'mmc', 'part', 'energy', 'balance', 'circulate', 'current', 'supression', 'controller', 'also', 'include', 'assumed', 'capaictor', 'voltage', 'balance', 'circulate', 'current', 'add', 'extend', 'good', 'start', 'want', 'learn', 'mmc', 'construct', 'controlled', 'extension', 'possible', 'user', 'interesst', 'control', 'multilevel']",4
1530,54233,"assignment<p>inverted pendulum, simulink, pid, nonlinear system</p>um",15,0,1,0,23,pendulum pid nonlinear systemum,"['pendulum', 'pid', 'nonlinear', 'systemum']",5
1531,54360,"Basic DC-DC converters in form of circuits<p>The modeling of basic DC-DC converters (buck, boost and buck-boost) using fundamentals of power electronics and circuit simulation. Circuit simulations for these models are executed using the MATLAB extension, Simulink.</p>power_conversion_control,power_electronics_control,boost converter,buck converter,buckboost converter,circuitry",152,7,3,0,192,basic converter form circuitsthe modeling basic converter buck boost buck boost fundamental power electronics circuit circuit execute extension power conversion controlpower electronics controlboost converterbuck,"['basic', 'converter', 'form', 'circuitsthe', 'modeling', 'basic', 'converter', 'buck', 'boost', 'buck', 'boost', 'fundamental', 'power', 'electronics', 'circuit', 'circuit', 'execute', 'extension', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterbuck']",1
1532,54361,"Basic DC-DC converters in the form of state-space<p>The modeling of basic DC-DC converters (buck, boost and buck-boost) using state-space representations for control uses. State-space representation is dependent on the derivative state variables, as well as the switching mode of the converter by its duty cycle.</p>power_conversion_control,power_electronics_control,boost converter,buck converter,buckboost converter,control,statespace",55,4,3,0,56,basic converter form state spacethe basic converter buck boost buck boost state space representation control state space representation dependent derivative state variable well switch mode converter duty cycle power conversion controlpower electronics controlboost converterbuck,"['basic', 'converter', 'form', 'state', 'spacethe', 'basic', 'converter', 'buck', 'boost', 'buck', 'boost', 'state', 'space', 'representation', 'control', 'state', 'space', 'representation', 'dependent', 'derivative', 'state', 'variable', 'well', 'switch', 'mode', 'converter', 'duty', 'cycle', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterbuck']",1
1533,54362,"Basic DC-DC converters in the form of mathematics<p>The modeling of basic DC-DC converters (buck, boost and buck-boost) using fundamentals of calculus and basic circuitry knowledge. Electrical terms are determined from the circuitry knowledge, such as Kirchoff's Current Law, Kirchoff's Voltage Law, Ohm's Law, Voltage Divider Rule, Current Divider Rule, etc.; and is simplified using calculus' derivative and integral. This is distinct of all the modeling methods, where the switching mode is generalized by the bilinear systems. Note: Bilinear system is where the two switching modes are taken into account together; both ON and OFF.</p>power_conversion_control,power_electronics_control,bilinear,boost converter,buck converter,buckboost converter,mathematics",198,7,3,0,234,basic converter form mathematicsthe modeling basic converter buck boost buck boost fundamental calculus basic circuitry knowledge electrical term determine circuitry knowledge kirchoff current law kirchoff voltage law ohm law voltage divider rule current divider rule etc simplify calculus derivative integral distinct method switch mode generalize bilinear note bilinear two switch mode take account together power conversion controlpower electronics converterbuck,"['basic', 'converter', 'form', 'mathematicsthe', 'modeling', 'basic', 'converter', 'buck', 'boost', 'buck', 'boost', 'fundamental', 'calculus', 'basic', 'circuitry', 'knowledge', 'electrical', 'term', 'determine', 'circuitry', 'knowledge', 'kirchoff', 'current', 'law', 'kirchoff', 'voltage', 'law', 'ohm', 'law', 'voltage', 'divider', 'rule', 'current', 'divider', 'rule', 'etc', 'simplify', 'calculus', 'derivative', 'integral', 'distinct', 'method', 'switch', 'mode', 'generalize', 'bilinear', 'note', 'bilinear', 'two', 'switch', 'mode', 'take', 'account', 'together', 'power', 'conversion', 'controlpower', 'electronics', 'converterbuck']",4
1534,54363,get the best flying pose<p>éè¿è¿ä¸ªä»¿çï¼å¯ä»¥å¾å°åä¸ªéåº¦çå¹³è¡¡ç¹ï¼ä¸ºæ»ç¿èçè®¾è®¡åè¿å¨æä¾åè</p>simulink,7,0,1,0,7,get best fly,"['get', 'best', 'fly']",5
1535,54379,"Basic DC-DC converters in the form of single Simulink block.<p>This is the ideal Simulink block of DC-DC converters; where users can simulate Simulink model of basic DC-DC converters. Users can choose between three types of DC-DC converters: buck, boost, and buck-boost; choose between three modelling methods: mathematical, state-space, and circuitry; choose between types of semiconductors: MOSFET and IGBT; editing the required parameters; apply to the Simulink application for simulation, as well as presenting the industrial uses. The construction of this block is based on the previous file uploaded:1) DC-DC Converters Using Mathematical Methods: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods2"">http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods2</a>) DC-DC Converters Using State-Space Methods: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54361-dc-dc-converters-using-state-space-methods3"">http://www.mathworks.com/matlabcentral/fileexchange/54361-dc-dc-converters-using-state-space-methods3</a>) DC-DC Converters Using Circuitry Methods: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-method"">http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-method</a></p>power_conversion_control,power_electronics_control,boost converter,buck converter,buckboost converter,circuitry modeling,dcdc converters,mathematical modeling,single block,statespace modeling",199,22,6,0,235,basic converter form single block ideal block converter user basic converter user choose three type converter buck boost buck boost choose three method mathematical state space circuitry choose type semiconductor mosfet igbt editing require parameter apply application well present industrial construction block base previous file upload converter mathematical method http mathworks com matlabcentral fileexchange converter mathematical method converter state space method http mathworks com matlabcentral fileexchange converter state space method converter circuitry method http mathworks com matlabcentral fileexchange converter circuitry methodpower conversion controlpower electronics controlboost converterbuck modelingdcdc modelingsingle blockstatespace modeling,"['basic', 'converter', 'form', 'single', 'block', 'ideal', 'block', 'converter', 'user', 'basic', 'converter', 'user', 'choose', 'three', 'type', 'converter', 'buck', 'boost', 'buck', 'boost', 'choose', 'three', 'method', 'mathematical', 'state', 'space', 'circuitry', 'choose', 'type', 'semiconductor', 'mosfet', 'igbt', 'editing', 'require', 'parameter', 'apply', 'application', 'well', 'present', 'industrial', 'construction', 'block', 'base', 'previous', 'file', 'upload', 'converter', 'mathematical', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'mathematical', 'method', 'converter', 'state', 'space', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'state', 'space', 'method', 'converter', 'circuitry', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'circuitry', 'methodpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterbuck', 'modelingdcdc', 'modelingsingle', 'blockstatespace', 'modeling']",7
1536,54455,"6DoF robot simulink diagram for simulation<p>Simulink diagram that simulates a 6DoF manipulator that has been used in surgical robotics.The diagram solves the constrained movements of a manipulator that holds a surgical instrument that is introduced inside the patient's abdomen using a trocar. In this situation, the movements are performed taking into account the insertion point (fulcrum). To solve this issue, a Jacobian based position control scheme has been used, which is able to generate the manipulator joint angles references to perform a movement taking into account a previously fixed fulcrum point. The obtained joint angles are then used to animate a 3D model (VRML) of the 6DoF manipulator. Morever, this 3D model allows to place the instrument tip at any orientation using Euler ZYZ angles or a rotation matrix. The 3D model can also be used for teaching or research purposes, e.g. to calculate its kinematics.The Jacobian based position control scheme has been presented in the paper:Perez-del-Pulgar, C.J.; Munoz, V.F.; Velasco, J.J.; Gomez, R., ""Parallel force-position control scheme with fuzzy gain tuning for single port laparoscopic surgery,"" in Control, Automation and Systems (ICCAS), 2013 13th International Conference on , vol., no., pp.101-106, 20-23 Oct. 2013. doi: 10.1109/ICCAS.2013.6703871Please, reference this paper if you use the model.This work has been developed by the University of Malaga students:Ana MarÃ­a GÃ³mez DelgadoJosÃ© Ricardo SÃ¡nchez IbÃ¡Ã±ezIgnacio Alzugaray LÃ³pezPedro Cervera PedregosaJuan JosÃ© Velasco Manzanares</p>control,robot,robotics",114,6,2,0,153,dof robot diagram diagram dof manipulator surgical robotics diagram solves constrain movement manipulator hold surgical instrument introduce inside patient abdomen trocar situation movement perform take account insertion point fulcrum solve issue jacobian base position control scheme able generate manipulator joint angle reference perform movement take account previously fix fulcrum point obtain joint angle animate vrml dof manipulator morever allow place instrument tip orientation euler zyz angle rotation matrix also teach research purpose calculate kinematics jacobian base position control scheme present paper perez del pulgar munoz velasco gomez parallel force position control scheme fuzzy gain tune single port laparoscopic surgery control automation iccas international conference vol oct doi iccas please reference paper work develop university malaga student ana marÃ­a gÃ³mez delgadojosÃ© ricardo sÃ¡nchez ibÃ¡Ã±ezignacio alzugaray lÃ³pezpedro cervera pedregosajuan josÃ© velasco,"['dof', 'robot', 'diagram', 'diagram', 'dof', 'manipulator', 'surgical', 'robotics', 'diagram', 'solves', 'constrain', 'movement', 'manipulator', 'hold', 'surgical', 'instrument', 'introduce', 'inside', 'patient', 'abdomen', 'trocar', 'situation', 'movement', 'perform', 'take', 'account', 'insertion', 'point', 'fulcrum', 'solve', 'issue', 'jacobian', 'base', 'position', 'control', 'scheme', 'able', 'generate', 'manipulator', 'joint', 'angle', 'reference', 'perform', 'movement', 'take', 'account', 'previously', 'fix', 'fulcrum', 'point', 'obtain', 'joint', 'angle', 'animate', 'vrml', 'dof', 'manipulator', 'morever', 'allow', 'place', 'instrument', 'tip', 'orientation', 'euler', 'zyz', 'angle', 'rotation', 'matrix', 'also', 'teach', 'research', 'purpose', 'calculate', 'kinematics', 'jacobian', 'base', 'position', 'control', 'scheme', 'present', 'paper', 'perez', 'del', 'pulgar', 'munoz', 'velasco', 'gomez', 'parallel', 'force', 'position', 'control', 'scheme', 'fuzzy', 'gain', 'tune', 'single', 'port', 'laparoscopic', 'surgery', 'control', 'automation', 'iccas', 'international', 'conference', 'vol', 'oct', 'doi', 'iccas', 'please', 'reference', 'paper', 'work', 'develop', 'university', 'malaga', 'student', 'ana', 'marÃ­a', 'gÃ³mez', 'delgadojosÃ©', 'ricardo', 'sÃ¡nchez', 'ibÃ¡Ã±ezignacio', 'alzugaray', 'lÃ³pezpedro', 'cervera', 'pedregosajuan', 'josÃ©', 'velasco']",5
1537,54506,"This SPS simulation is optimized by using an aggregate MMC model.<p>DC links are becoming the preferred means for power exchange between countries andtransmission of power from renewables (hydroelectric plants, off-shore wind power andsolar farms) to power grids. Several of these systems are presently in operation, forexample the INELFE project (France-Spain interconnection), the Dolwin1 project(offshore wind HVDC link), or planned for future projects such as the Northern Pass(Canada-USA 1090-MW DC link).Our example will illustrate one typical VSC topology used nowadays: the Modular MultilevelConverters (MMC) technology. In the example, MMC converter is implementedusing an aggregate model to simulate 36 power modules per arm. With this aggregatemodel, control system dynamics, converter harmonics and circulating currentsphenomena are all well-represented. However, having only one virtual capacitor torepresent the 36 capacitors of the arm, the model assumes that capacitor voltages of allpower modules are well-balanced. The aggregate model runs much faster than a detailedmodel that would use two switching devices and one capacitor for each individual powermodule. This aggregate model is also well-suited for real-time simulation.Simulating our SPS model for 10 seconds allows observation of the interconnectionoperation during start-up (capacitor charging), voltage regulation, and power regulation.A comparison between this aggregated model and a SPS detailed model is also provided.A Help File containing useful information on the model is included as well.</p>control systems,dc interconnection,high voltage direct current hvdc,modular multilevel converter mmc,pwm modulation,renewables,switching function,transmission system,power_conversion_control,power_electronics_control",930,49,4,0,898,sps optimize aggregate mmc link become preferred mean power exchange country andtransmission power renewables hydroelectric plant shore wind power andsolar farm power grid several presently operation forexample inelfe project france spain interconnection dolwin project offshore wind hvdc link plan future project northern pass canada usa link example illustrate one typical vsc topology nowadays modular mmc technology example mmc converter aggregate power module per arm aggregatemodel control dynamic converter harmonic circulate well represent however one virtual capacitor torepresent capacitor arm assumes capacitor voltage allpower module well balanced aggregate run much faster detailedmodel would two switch device one capacitor individual powermodule aggregate also well suit real time sps second allow observation start capacitor charge voltage regulation power regulation comparison aggregate sps detail also provide help file contain useful information include well control systemsdc voltage direct current hvdcmodular multilevel converter mmcpwm systempower conversion controlpower electronics control,"['sps', 'optimize', 'aggregate', 'mmc', 'link', 'become', 'preferred', 'mean', 'power', 'exchange', 'country', 'andtransmission', 'power', 'renewables', 'hydroelectric', 'plant', 'shore', 'wind', 'power', 'andsolar', 'farm', 'power', 'grid', 'several', 'presently', 'operation', 'forexample', 'inelfe', 'project', 'france', 'spain', 'interconnection', 'dolwin', 'project', 'offshore', 'wind', 'hvdc', 'link', 'plan', 'future', 'project', 'northern', 'pass', 'canada', 'usa', 'link', 'example', 'illustrate', 'one', 'typical', 'vsc', 'topology', 'nowadays', 'modular', 'mmc', 'technology', 'example', 'mmc', 'converter', 'aggregate', 'power', 'module', 'per', 'arm', 'aggregatemodel', 'control', 'dynamic', 'converter', 'harmonic', 'circulate', 'well', 'represent', 'however', 'one', 'virtual', 'capacitor', 'torepresent', 'capacitor', 'arm', 'assumes', 'capacitor', 'voltage', 'allpower', 'module', 'well', 'balanced', 'aggregate', 'run', 'much', 'faster', 'detailedmodel', 'would', 'two', 'switch', 'device', 'one', 'capacitor', 'individual', 'powermodule', 'aggregate', 'also', 'well', 'suit', 'real', 'time', 'sps', 'second', 'allow', 'observation', 'start', 'capacitor', 'charge', 'voltage', 'regulation', 'power', 'regulation', 'comparison', 'aggregate', 'sps', 'detail', 'also', 'provide', 'help', 'file', 'contain', 'useful', 'information', 'include', 'well', 'control', 'systemsdc', 'voltage', 'direct', 'current', 'hvdcmodular', 'multilevel', 'converter', 'mmcpwm', 'systempower', 'conversion', 'controlpower', 'electronics', 'control']",4
1538,54509,"Hybrid PV/Wind - Intelligent controller based Battery management System<p>Hybrid PV/Wind - Intelligent controller based Battery management System</p>battery management system,fuzzy controller,hybrid pv wind,renewable energy,battery_system_management,power_electronics_control",241,12,3,0,307,hybrid wind intelligent controller base battery management systemhybrid wind intelligent controller base battery management systembattery management systemfuzzy windrenewable energybattery managementpower electronics control,"['hybrid', 'wind', 'intelligent', 'controller', 'base', 'battery', 'management', 'systemhybrid', 'wind', 'intelligent', 'controller', 'base', 'battery', 'management', 'systembattery', 'management', 'systemfuzzy', 'windrenewable', 'energybattery', 'managementpower', 'electronics', 'control']",4
1539,54510,"fuzzy logic based Energy management system for hybrid PV / Wind power system<p>fuzzy logic based Energy management system for hybrid PV / Wind power system</p>energy management system,fuzzy controlller,hybrid pv wind,intelligent controller,renewable energy",247,12,3,0,313,fuzzy logic base energy management hybrid wind power systemfuzzy logic base energy management hybrid wind power systemenergy management systemfuzzy windintelligent energy,"['fuzzy', 'logic', 'base', 'energy', 'management', 'hybrid', 'wind', 'power', 'systemfuzzy', 'logic', 'base', 'energy', 'management', 'hybrid', 'wind', 'power', 'systemenergy', 'management', 'systemfuzzy', 'windintelligent', 'energy']",3
1540,54511,"Fuzzy logic based  Photovoltaic power system<p>Fuzzy logic based  Photovoltaic power system</p>battery management system,fuzzy,intelliegent,load,pv,renewable energy,power_conversion_control,power_electronics_control",149,7,3,0,174,fuzzy logic base photovoltaic power systemfuzzy logic base photovoltaic power systembattery management energypower conversion controlpower electronics control,"['fuzzy', 'logic', 'base', 'photovoltaic', 'power', 'systemfuzzy', 'logic', 'base', 'photovoltaic', 'power', 'systembattery', 'management', 'energypower', 'conversion', 'controlpower', 'electronics', 'control']",1
1541,54541,"PV panel of 36 solar cell in Simscape<p>PV panel of 36 solar cell in Simscape</p>pv panel,simulink,solar cell",78,7,3,0,120,panel solar cell simscapepv panel solar cell simscapepv cell,"['panel', 'solar', 'cell', 'simscapepv', 'panel', 'solar', 'cell', 'simscapepv', 'cell']",4
1542,54546,"This Simulink model has an S-function builder block to access the linux system time via gettimeofday<p>------------------------------------------------------------------------------------------------This model uses Raspberry Pi library block to toggle the LED and a executes custom written S-function to access the targeted system time for comparisonto the running simulation time. This is helpful in quantifying soft-real-time performance.The POSIX gettimeofday() function has resolution down to microseconds but windows and linux have good resolution to around10ms and about 1ms, respecctively, depending.The S-function builder auto-generates a .tlc file and generates a fully-inlined S-function that is helpful in targeting the Raspberry Pi device(or any other Simulink Coder target).getSystemClockTimeval.c works on the host PC and also the Raspberry Pi runnning Debian Wheezy linux. The simulink code computes the differnce betweenthe operating system's local time and the simulation time then logs that to a file. The write-to-file block works on the host or the targeted Raspberry Pi.------------------------------------------------------------------------------------------------This Simulink model was tested and runs on R2015b on Windows 10 with the gcc MinGW 64-bit compiler.To run this model on a PC with Matlab, double click the light blue initiailzation block to specify h_fixed=0.1 seconds, then open the s-function builder block, hit build, and upon successfully creating the s-function getSystemClockTimeval.c and associated .tlc file it will build getSystemClockTimeval.mexw64. You can then run the simulation on the host PC. It logs a matfile called myTestData.mat in the working directory.To run this file on the Rasperry Pi 2 model B, double click the initialization block to assign h_fixed=0.1 seconds, then open the S-function builder, build the s-function and associated .tlc file, then close that dialogue box. Press ctrl-B to build and target the model to your properly configured Raspberry Pi 2 device.------------------------------------------------------------------------------------------------Marc Compere, <a href=""mailto:comperem@erau.educreated"">comperem@erau.educreated</a> : 16 December 2015modified: 16 December 2015</p>clock,embedded code,raspberry pi 2,rpi2,simulation time,simulink,soft real time,system time",33,2,2,0,31,function builder block access linux time via gettimeofday raspberry block toggle lead executes custom write function access target time comparisonto run time helpful quantify soft real time performance posix gettimeofday function resolution microseconds window linux good resolution around respecctively depend function builder auto generates tlc file generates fully inlined function helpful target raspberry device coder target work host also raspberry run debian wheezy linux code compute differnce betweenthe operate local time time log file write file block work host target raspberry test run window gcc mingw bit compiler run double click light blue initiailzation block specify fix second open function builder block hit build upon successfully create function associate tlc file build mexw run host log matfile call mytestdata mat work directory run file rasperry double click initialization block assign fix second open function builder build function associate tlc file close dialogue box press ctrl build target properly configure raspberry device marc compere comperem erau educreated december modify december clockembedded coderaspberry rpi real timesystem time,"['function', 'builder', 'block', 'access', 'linux', 'time', 'via', 'gettimeofday', 'raspberry', 'block', 'toggle', 'lead', 'executes', 'custom', 'write', 'function', 'access', 'target', 'time', 'comparisonto', 'run', 'time', 'helpful', 'quantify', 'soft', 'real', 'time', 'performance', 'posix', 'gettimeofday', 'function', 'resolution', 'microseconds', 'window', 'linux', 'good', 'resolution', 'around', 'respecctively', 'depend', 'function', 'builder', 'auto', 'generates', 'tlc', 'file', 'generates', 'fully', 'inlined', 'function', 'helpful', 'target', 'raspberry', 'device', 'coder', 'target', 'work', 'host', 'also', 'raspberry', 'run', 'debian', 'wheezy', 'linux', 'code', 'compute', 'differnce', 'betweenthe', 'operate', 'local', 'time', 'time', 'log', 'file', 'write', 'file', 'block', 'work', 'host', 'target', 'raspberry', 'test', 'run', 'window', 'gcc', 'mingw', 'bit', 'compiler', 'run', 'double', 'click', 'light', 'blue', 'initiailzation', 'block', 'specify', 'fix', 'second', 'open', 'function', 'builder', 'block', 'hit', 'build', 'upon', 'successfully', 'create', 'function', 'associate', 'tlc', 'file', 'build', 'mexw', 'run', 'host', 'log', 'matfile', 'call', 'mytestdata', 'mat', 'work', 'directory', 'run', 'file', 'rasperry', 'double', 'click', 'initialization', 'block', 'assign', 'fix', 'second', 'open', 'function', 'builder', 'build', 'function', 'associate', 'tlc', 'file', 'close', 'dialogue', 'box', 'press', 'ctrl', 'build', 'target', 'properly', 'configure', 'raspberry', 'device', 'marc', 'compere', 'comperem', 'erau', 'educreated', 'december', 'modify', 'december', 'clockembedded', 'coderaspberry', 'rpi', 'real', 'timesystem', 'time']",0
1543,54571,"open loop configuration without simscape in matlab<p>open loop configuration without simscape in matlab</p>power_conversion_control,power_electronics_control,buck converter,open loop,simulation,simulink",33,3,3,0,38,open loop configuration without simscape matlabopen loop configuration without simscape matlabpower conversion controlpower electronics controlbuck converteropen,"['open', 'loop', 'configuration', 'without', 'simscape', 'matlabopen', 'loop', 'configuration', 'without', 'simscape', 'matlabpower', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converteropen']",3
1544,54577,"closed loop buck converter<p>closed loop buck converter</p>power_conversion_control,power_electronics_control,control design,matlab,simulation",46,2,2,0,57,closed loop buck converterclosed loop buck converterpower conversion controlpower electronics controlcontrol,"['closed', 'loop', 'buck', 'converterclosed', 'loop', 'buck', 'converterpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",1
1545,54601,"This submission enables serial communication between Arduino and Raspberry Pi in Simulink.<p>Contains a driver block for serial receive on Raspberry Pi. This submission enables serial communication between Arduino and Raspberry Pi.There are two models in this submission:1) Arduino model: Transmits a character via the TX pin. Can either be run in External Mode or deployed to board.2) Raspberry Pi model: Receives the character via the RX pin. Run in External Mode to view the character received.Watch the video demonstration here:<a href=""https://www.youtube.com/watch?v=Kt5_9h84CrQRefer"">https://www.youtube.com/watch?v=Kt5_9h84CrQRefer</a> here for a write-up describing this submission:<a href=""https://dashboardproject.wordpress.com/2015/12/14/serial-communication-between-raspberry-pi-and-arduino-in-simulink/By"">https://dashboardproject.wordpress.com/2015/12/14/serial-communication-between-raspberry-pi-and-arduino-in-simulink/By</a> Esther Ling, Edu Engineer</p>maker,arduino,arduino raspberry pi,arduino raspberry pi serial communication,raspberry pi,raspberry pi driver,raspberry pi serial receive driver block",4,0,1,1,2,submission enable serial communication arduino raspberry contain driver block serial receive raspberry submission enable serial communication arduino raspberry two submission arduino transmits character via pin either run external mode deploy board raspberry receive character via pin run external mode view character receive watch video demonstration youtube com watch crqrefer write describe submission wordpress com serial communication raspberry arduino esther ling edu raspberry piarduino raspberry serial piraspberry driverraspberry serial receive driver block,"['submission', 'enable', 'serial', 'communication', 'arduino', 'raspberry', 'contain', 'driver', 'block', 'serial', 'receive', 'raspberry', 'submission', 'enable', 'serial', 'communication', 'arduino', 'raspberry', 'two', 'submission', 'arduino', 'transmits', 'character', 'via', 'pin', 'either', 'run', 'external', 'mode', 'deploy', 'board', 'raspberry', 'receive', 'character', 'via', 'pin', 'run', 'external', 'mode', 'view', 'character', 'receive', 'watch', 'video', 'demonstration', 'youtube', 'com', 'watch', 'crqrefer', 'write', 'describe', 'submission', 'wordpress', 'com', 'serial', 'communication', 'raspberry', 'arduino', 'esther', 'ling', 'edu', 'raspberry', 'piarduino', 'raspberry', 'serial', 'piraspberry', 'driverraspberry', 'serial', 'receive', 'driver', 'block']",0
1546,54690,"this is a simulink model of three phase voltage controller with variable output voltage<p>In this model the load is star connected, and output voltage can be varied by varying the delay of the thyristors.</p>delay,three phase,variable,voltage controller",195,16,3,0,214,three phase voltage controller variable output voltagein load star connect output voltage vary vary delay thyristors delaythree controller,"['three', 'phase', 'voltage', 'controller', 'variable', 'output', 'voltagein', 'load', 'star', 'connect', 'output', 'voltage', 'vary', 'vary', 'delay', 'thyristors', 'delaythree', 'controller']",3
1547,54741,"mechatronics engineering department jordan university<p>12 pulse rectifier from three phase source , three windings transformer and using universal bridge</p>electric_motor_control,power_conversion_control,power_electronics_control,simpower systems",14,0,1,0,22,mechatronics engineering department jordan university pulse rectifier three phase source three winding transformer universal bridgeelectric motor controlpower conversion controlpower electronics controlsimpower,"['mechatronics', 'engineering', 'department', 'jordan', 'university', 'pulse', 'rectifier', 'three', 'phase', 'source', 'three', 'winding', 'transformer', 'universal', 'bridgeelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsimpower']",1
1548,54742,"AC/DC converter<p>6 pulse controlled rectifier by using six SCR   and 6 pulse generator</p>power_conversion_control,power_electronics_control,simpower systems",22,0,1,0,19,converter pulse control rectifier six scr pulse generatorpower conversion controlpower electronics controlsimpower,"['converter', 'pulse', 'control', 'rectifier', 'six', 'scr', 'pulse', 'generatorpower', 'conversion', 'controlpower', 'electronics', 'controlsimpower']",1
1549,54771,"SimPowerSystems model of the IEEE 39-bus system, known as the 10-machine New-England Power System<p>The model is loosely based on the IEEE 39-bus system presented by T. Athay et al for research-oriented studies and educational purposes. The authors of the SimPowerSystems implementation of this benchmark are Ali Moeini and Innocent Kamwa, from IREQ Hydro-QuÃ©bec research institute.__ Reference A. Moeini, I. Kamwa, P. Brunelle, G. Sybille, ""Open Data IEEE Test Systems Implemented in SimpowerSystems for Education and Research in Power Grid Dynamics and Control,"" Power Engineering Conference (UPEC), 2015 50th International Universities, 1-4 Sept. 2015, Staffordshire University, UK.<a href=""http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7339813&amp;tag=1"">http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7339813&amp;tag=1</a></p>ieee standardized benchmark,39 bus,ieee,ieee 10 bus,ieee 39 bus,ieee bus,ieee 68 bus",851,24,3,0,1137,simpowersystems iee bus know machine new england power systemthe loosely base iee bus present athay research orient study educational purpose author simpowersystems implementation benchmark ali moeini innocent kamwa ireq hydro quÃ©bec research institute reference moeini kamwa brunelle sybille open data iee test implement simpowersystems education research power grid dynamic control power engineering conference upec international university sept staffordshire university http ieexplore iee org xpl articledetails jsp arnumber amp tag iee standardize benchmark busieeiee busiee busiee busiee bus,"['simpowersystems', 'iee', 'bus', 'know', 'machine', 'new', 'england', 'power', 'systemthe', 'loosely', 'base', 'iee', 'bus', 'present', 'athay', 'research', 'orient', 'study', 'educational', 'purpose', 'author', 'simpowersystems', 'implementation', 'benchmark', 'ali', 'moeini', 'innocent', 'kamwa', 'ireq', 'hydro', 'quÃ©bec', 'research', 'institute', 'reference', 'moeini', 'kamwa', 'brunelle', 'sybille', 'open', 'data', 'iee', 'test', 'implement', 'simpowersystems', 'education', 'research', 'power', 'grid', 'dynamic', 'control', 'power', 'engineering', 'conference', 'upec', 'international', 'university', 'sept', 'staffordshire', 'university', 'http', 'ieexplore', 'iee', 'org', 'xpl', 'articledetails', 'jsp', 'arnumber', 'amp', 'tag', 'iee', 'standardize', 'benchmark', 'busieeiee', 'busiee', 'busiee', 'busiee', 'bus']",5
1550,54774,"new variable-size rerceive serial  block in xpc-target<p>We modified serial receive simulink block  (rs232rcv) in XPC-Target to receive variable-size signal in each sample-time.</p>rs232rcv,variablesize,xpctarget",2,0,1,0,1,new variable size rerceive serial block xpc targetwe modify serial receive block rcv xpc target receive variable size signal sample time,"['new', 'variable', 'size', 'rerceive', 'serial', 'block', 'xpc', 'targetwe', 'modify', 'serial', 'receive', 'block', 'rcv', 'xpc', 'target', 'receive', 'variable', 'size', 'signal', 'sample', 'time']",0
1551,54776,"new variable-size send serial  block in xpc-target<p>We modified serial send simulink block (rs232snd) in XPC-Target to receive variable-size signal in each sample-time.</p>rs232snd,variablesize,xpctarget",57,4,2,0,71,new variable size send serial block xpc targetwe modify serial send block snd xpc target receive variable size signal sample time,"['new', 'variable', 'size', 'send', 'serial', 'block', 'xpc', 'targetwe', 'modify', 'serial', 'send', 'block', 'snd', 'xpc', 'target', 'receive', 'variable', 'size', 'signal', 'sample', 'time']",0
1552,54777,"SimPowerSystems model of the IEEE RTS96 73 bus system benchmark<p>The RTS96 73 bus benchmark is loosely based on the IEEE Reliability test system - 1996,  for research-oriented studies and educational purposes. The authors of the SimPowerSystems implementation of this benchmark are Ali Moeini, Patrice Brunelle, Gilbert Sybille, and Innocent Kamwa, from IREQ Hydro-QuÃ©bec research institute.__ Reference A. Moeini, I. Kamwa, P. Brunelle, G. Sybille, ""Open Data IEEE Test Systems Implemented in SimpowerSystems for Education and Research in Power Grid Dynamics and Control,"" Power Engineering Conference (UPEC), 2015 50th International Universities, 1-4 Sept. 2015, Staffordshire University, UK.<a href=""http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7339813&amp;tag=1"">http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7339813&amp;tag=1</a></p>ieee standardized benchmark,73 bus,ieee,ieee 73 bus,ieee bus",1634,37,3,0,2330,simpowersystems iee rts bus benchmarkthe rts bus benchmark loosely base iee reliability test research orient study educational purpose author simpowersystems implementation benchmark ali moeini patrice brunelle gilbert sybille innocent kamwa ireq hydro quÃ©bec research institute reference moeini kamwa brunelle sybille open data iee test implement simpowersystems education research power grid dynamic control power engineering conference upec international university sept staffordshire university http ieexplore iee org xpl articledetails jsp arnumber amp tag iee standardize benchmark busieeiee busiee bus,"['simpowersystems', 'iee', 'rts', 'bus', 'benchmarkthe', 'rts', 'bus', 'benchmark', 'loosely', 'base', 'iee', 'reliability', 'test', 'research', 'orient', 'study', 'educational', 'purpose', 'author', 'simpowersystems', 'implementation', 'benchmark', 'ali', 'moeini', 'patrice', 'brunelle', 'gilbert', 'sybille', 'innocent', 'kamwa', 'ireq', 'hydro', 'quÃ©bec', 'research', 'institute', 'reference', 'moeini', 'kamwa', 'brunelle', 'sybille', 'open', 'data', 'iee', 'test', 'implement', 'simpowersystems', 'education', 'research', 'power', 'grid', 'dynamic', 'control', 'power', 'engineering', 'conference', 'upec', 'international', 'university', 'sept', 'staffordshire', 'university', 'http', 'ieexplore', 'iee', 'org', 'xpl', 'articledetails', 'jsp', 'arnumber', 'amp', 'tag', 'iee', 'standardize', 'benchmark', 'busieeiee', 'busiee', 'bus']",5
1553,54800,"basic solar cell with the operation of inverter!<p>here, it is a diode based solar cell with booster and inverter.</p>simulink",55,2,3,0,54,basic solar cell operation inverter diode base solar cell booster inverter,"['basic', 'solar', 'cell', 'operation', 'inverter', 'diode', 'base', 'solar', 'cell', 'booster', 'inverter']",3
1554,54806,"Simulink initialization and sequential block execution examples<p>This file contains simple examples (based on the use of the ""Enabled Subsystem"" block) showing:1) how to execute some Simulink blocks only for initialization, (while executing other blocks only after initialization)2) how to sequentially schedule the execution of different subsystems</p>enable,execution,initialization,scheduling,sequential,trigger",94,10,3,0,61,initialization sequential block execution examplesthis file contain simple example base enabled subsystem block show execute block initialization execute block initialization sequentially schedule execution different,"['initialization', 'sequential', 'block', 'execution', 'examplesthis', 'file', 'contain', 'simple', 'example', 'base', 'enabled', 'subsystem', 'block', 'show', 'execute', 'block', 'initialization', 'execute', 'block', 'initialization', 'sequentially', 'schedule', 'execution', 'different']",0
1555,54819,"DC Bias Circuit for AC voltage or current measurement interface with single ended ADC application<p>DC Bias Circuit Model consist of 3 models below 1. DC Bias Circuit Fundamental model demonstrate the fundamental of DC bias circuit2. DC Voltage Source Bias Circuit model commonly used for AC voltage measurement. It demonstrate how AC voltage source is scaled down and biased above 0V for single ended analog to digital converter interface application3. DC Current Source Bias Circuit model commonly used for AC current measurement. It demonstrate how AC current source is converted to voltage and biased above 0V for single ended analog to digital converter interface application</p>power_conversion_control,power_electronics_control,ac measurement,dc bias,dc offset,single ended adc interface",35,0,1,0,53,bias circuit voltage current measurement interface single end adc applicationdc bias circuit consist bias circuit fundamental demonstrate fundamental bias circuit voltage source bias circuit commonly voltage measurement demonstrate voltage source scale biased single end analog digital converter interface application current source bias circuit commonly current measurement demonstrate current source convert voltage bias single end analog digital converter interface conversion controlpower electronics controlac measurementdc biasdc offsetsingle end adc interface,"['bias', 'circuit', 'voltage', 'current', 'measurement', 'interface', 'single', 'end', 'adc', 'applicationdc', 'bias', 'circuit', 'consist', 'bias', 'circuit', 'fundamental', 'demonstrate', 'fundamental', 'bias', 'circuit', 'voltage', 'source', 'bias', 'circuit', 'commonly', 'voltage', 'measurement', 'demonstrate', 'voltage', 'source', 'scale', 'biased', 'single', 'end', 'analog', 'digital', 'converter', 'interface', 'application', 'current', 'source', 'bias', 'circuit', 'commonly', 'current', 'measurement', 'demonstrate', 'current', 'source', 'convert', 'voltage', 'bias', 'single', 'end', 'analog', 'digital', 'converter', 'interface', 'conversion', 'controlpower', 'electronics', 'controlac', 'measurementdc', 'biasdc', 'offsetsingle', 'end', 'adc', 'interface']",3
1556,54852,"This is a simple 2D kinematic vehicle's steering motion and visualization in Simulink.<p>-------------------------------------------------------------------------------This is the Readme file for a simple 2D kinematic vehicle's steering motion and visualzation implemented in Matlab's Simulink. There are no special libraries or additional toolboxes required.This Simulink model solves for the fixed terrain frame's XY position of the simple kinematic vehicle motion and visualizes the result using Matlab graphics. The Simulink model's base simulation timestep is h_fixed=0.05(s), or 50ms. On a 2Ghz Dell Inspiron laptop this model achieves near real-time operation at animation frame rates of 20fps to 30fps.The Ackermann steering relationship delta_Ack = L / R is an approximation for a vehicle of wheelbase length L and track width W turning without slipping on a constant radius circle at low speed.The Ackermann relationships are presented in Gillespie's 1992 text on page 186, Milliken and Milliken's 1995 text on page 128, or Wong's 2008 text page. 364. However none of these text's adequately and succinctly summarize the body-fixed velocity transformed into inertial, or terrain-fixed SAE XY coordinates. The handwritten notes provided here summarize the complete kinematic equation development.Software Versions Tested:-------------------------This model was developed and tested using Matlab R2014 and R2015 and should work with most other versions. The animation s-function is a modified version of the level 1 m-file s-function from the Mathworks example provided in sanim.m.Writing .jpeg animation frames to disk at each animation interval slows the simulation considerably. Set animation frames per second, anim_fps, in setup.m and re-run setup.m. Don't forget to turn off your file synchronization services to avoid syncing all the new image files.Getting started:-------------------------Get started by unzipping the .zip file, changing directories to the folder, then running setup.mat the Matlb command prompt. This will clear the workspace then populate it with the necessary variables to run the Simulink model and associated animation. It will also open the Simulink model file. Press Play or Simulation | Run to execute the Simulink model. The light blue s-function block will bring up the 2D animation figure window and display the steering vehicle at anim_fps frames per second.-------------------------------------------------------------------------------Distribution file list:-------------------------------------------------------------------------------   [00_Readme.mdc.txt] - this file   [setup.m] - run this first, it will bring up the Simulink, then press play to simulate the vehicle   [createAviMovieFromAnimationSequence.m] - auxiliary m-file script for converting a sequence of .jpg images into an Avi using Matlab's VideoWriter() function.   [graphical_development.m] - auxiliary m-file script useful for developing the s-function graphics   [sanim_XY_vehicle_viz.m] - Simulink m-file s-function that displays Matlab graphics objects each animation interval (set by anim_fps in setup.m) to create the animation.   [veh_object2.m] - supporting m-file function to create vertices and faces for vehicle and tire graphics objects   [vehicle_animation_sim.jpg] - desktop screenshot showing the Simulink model and animation window   [vehicle_animation_sim.pdf] - printout of the Simulink block diagram in case you cannot open the Simulink   [vehicle_animation_sim.slx] - Matlab/Simulink R2015b model that expressed non-holonomically constrained (rolling) CG velocities and solves for vehicle position as a function of time.   [.\anim_sequences] - folder where animation frame sequence .jpg files are stored; change this in sanim_XY_vehicle_viz.m   [.\Documentation\Compere_handwritten_notes_2D_Patch_Vehicle_and_Tire_Objects_Dec_2015.pdf] - example struture for defining Matlab handle graphics patch object faces and vertices, see veh_object2.m for implementation   [.\Documentation\Compere_handwritten_notes_kinematic_2D_vehicle_steering_model_Dec_2015.pdf] - Compere's handwritten notes with equations suitable for determining position of a steered vehicle in the terrain-fixed XY frame.   [.\Documentation\Lecture_01_A Simple 2D Kinematic Steering Model.pdf] - brief description of the model and interesting results with animation traces from points 'o' and 'g'.-------------------------------------------------------------------------------Texxtbook references:-------------------------------------------------------------------------------(1) Thomas Gillespie, Fundamentals of Vehicle Dynamics, SAE, 1992(2) Milliken and Milliken, Race Car Vehicle Dynamics, SAE, 2005(3) J. Y. Wong, Theory of Ground Vehicles, 4th Ed., Wiley, 2008-----------------------------------Marc Compere, <a href=""mailto:comperem@gmail.comcreated"">comperem@gmail.comcreated</a> : 11 Jan 2016modified: 17 Jan 2016-----------------------------------</p>2d,2d animation,ackermann steering,low speed rolling vehicle,nonholonomic rolling,steering model,steering vehicle,vehicle animation,vehicle kinematics",140,10,2,0,138,simple kinematic vehicle steer motion visualization readme file simple kinematic vehicle steer motion visualzation implement special additional toolbox require solves fix terrain frame position simple kinematic vehicle motion visualize result graphic base timestep fix ghz dell inspiron laptop achieves near real time operation animation frame rate fps fps ackermann steer relationship delta ack approximation vehicle wheelbase length track width turn without slip constant radius circle low speed ackermann relationship present gillespie text page milliken milliken text page wong text page however none text adequately succinctly summarize body fixed velocity transform inertial terrain fix sae coordinate handwritten note provide summarize complete kinematic equation development software version test developed test work version animation function modify version level file function mathworks example provide sanim write jpeg animation frame disk animation interval slow considerably set animation frame per second anim fps setup run setup forget turn file synchronization service avoid sync new image file get start get start unzipping zip file change directory folder run setup mat matlb command prompt clear workspace populate necessary variable run associate animation also open file press play run execute light blue function block bring animation figure window display steer vehicle anim fps frame per second distribution file list readme mdc txt file setup run first bring press play vehicle auxiliary file script convert sequence jpg image avi videowriter function graphical development auxiliary file script useful develop function graphic sanim vehicle viz file function display graphic object animation interval set anim fps setup create animation veh object support file function create vertex face vehicle tire graphic object vehicle animation sim jpg desktop screenshot show animation window vehicle animation sim pdf printout block diagram case open vehicle animation sim slx express non holonomically constrain roll velocity solve vehicle position function time anim sequence folder animation frame sequence jpg file store change sanim vehicle viz documentation compere handwritten note patch vehicle tire object dec pdf example struture define handle graphic patch object face vertex see veh object implementation documentation compere handwritten note kinematic vehicle steer dec pdf compere handwritten note equation suitable determine position steer vehicle terrain fix frame documentation lecture simple kinematic steer pdf brief description interest result animation trace point texxtbook reference thomas gillespie fundamental vehicle dynamic sae milliken milliken race car vehicle dynamic sae wong theory ground vehicle wiley marc compere comperem gmail comcreated jan modify jan steeringlow speed roll rollingsteering modelsteering vehiclevehicle kinematics,"['simple', 'kinematic', 'vehicle', 'steer', 'motion', 'visualization', 'readme', 'file', 'simple', 'kinematic', 'vehicle', 'steer', 'motion', 'visualzation', 'implement', 'special', 'additional', 'toolbox', 'require', 'solves', 'fix', 'terrain', 'frame', 'position', 'simple', 'kinematic', 'vehicle', 'motion', 'visualize', 'result', 'graphic', 'base', 'timestep', 'fix', 'ghz', 'dell', 'inspiron', 'laptop', 'achieves', 'near', 'real', 'time', 'operation', 'animation', 'frame', 'rate', 'fps', 'fps', 'ackermann', 'steer', 'relationship', 'delta', 'ack', 'approximation', 'vehicle', 'wheelbase', 'length', 'track', 'width', 'turn', 'without', 'slip', 'constant', 'radius', 'circle', 'low', 'speed', 'ackermann', 'relationship', 'present', 'gillespie', 'text', 'page', 'milliken', 'milliken', 'text', 'page', 'wong', 'text', 'page', 'however', 'none', 'text', 'adequately', 'succinctly', 'summarize', 'body', 'fixed', 'velocity', 'transform', 'inertial', 'terrain', 'fix', 'sae', 'coordinate', 'handwritten', 'note', 'provide', 'summarize', 'complete', 'kinematic', 'equation', 'development', 'software', 'version', 'test', 'developed', 'test', 'work', 'version', 'animation', 'function', 'modify', 'version', 'level', 'file', 'function', 'mathworks', 'example', 'provide', 'sanim', 'write', 'jpeg', 'animation', 'frame', 'disk', 'animation', 'interval', 'slow', 'considerably', 'set', 'animation', 'frame', 'per', 'second', 'anim', 'fps', 'setup', 'run', 'setup', 'forget', 'turn', 'file', 'synchronization', 'service', 'avoid', 'sync', 'new', 'image', 'file', 'get', 'start', 'get', 'start', 'unzipping', 'zip', 'file', 'change', 'directory', 'folder', 'run', 'setup', 'mat', 'matlb', 'command', 'prompt', 'clear', 'workspace', 'populate', 'necessary', 'variable', 'run', 'associate', 'animation', 'also', 'open', 'file', 'press', 'play', 'run', 'execute', 'light', 'blue', 'function', 'block', 'bring', 'animation', 'figure', 'window', 'display', 'steer', 'vehicle', 'anim', 'fps', 'frame', 'per', 'second', 'distribution', 'file', 'list', 'readme', 'mdc', 'txt', 'file', 'setup', 'run', 'first', 'bring', 'press', 'play', 'vehicle', 'auxiliary', 'file', 'script', 'convert', 'sequence', 'jpg', 'image', 'avi', 'videowriter', 'function', 'graphical', 'development', 'auxiliary', 'file', 'script', 'useful', 'develop', 'function', 'graphic', 'sanim', 'vehicle', 'viz', 'file', 'function', 'display', 'graphic', 'object', 'animation', 'interval', 'set', 'anim', 'fps', 'setup', 'create', 'animation', 'veh', 'object', 'support', 'file', 'function', 'create', 'vertex', 'face', 'vehicle', 'tire', 'graphic', 'object', 'vehicle', 'animation', 'sim', 'jpg', 'desktop', 'screenshot', 'show', 'animation', 'window', 'vehicle', 'animation', 'sim', 'pdf', 'printout', 'block', 'diagram', 'case', 'open', 'vehicle', 'animation', 'sim', 'slx', 'express', 'non', 'holonomically', 'constrain', 'roll', 'velocity', 'solve', 'vehicle', 'position', 'function', 'time', 'anim', 'sequence', 'folder', 'animation', 'frame', 'sequence', 'jpg', 'file', 'store', 'change', 'sanim', 'vehicle', 'viz', 'documentation', 'compere', 'handwritten', 'note', 'patch', 'vehicle', 'tire', 'object', 'dec', 'pdf', 'example', 'struture', 'define', 'handle', 'graphic', 'patch', 'object', 'face', 'vertex', 'see', 'veh', 'object', 'implementation', 'documentation', 'compere', 'handwritten', 'note', 'kinematic', 'vehicle', 'steer', 'dec', 'pdf', 'compere', 'handwritten', 'note', 'equation', 'suitable', 'determine', 'position', 'steer', 'vehicle', 'terrain', 'fix', 'frame', 'documentation', 'lecture', 'simple', 'kinematic', 'steer', 'pdf', 'brief', 'description', 'interest', 'result', 'animation', 'trace', 'point', 'texxtbook', 'reference', 'thomas', 'gillespie', 'fundamental', 'vehicle', 'dynamic', 'sae', 'milliken', 'milliken', 'race', 'car', 'vehicle', 'dynamic', 'sae', 'wong', 'theory', 'ground', 'vehicle', 'wiley', 'marc', 'compere', 'comperem', 'gmail', 'comcreated', 'jan', 'modify', 'jan', 'steeringlow', 'speed', 'roll', 'rollingsteering', 'modelsteering', 'vehiclevehicle', 'kinematics']",0
1557,54853,"Closed-loop buck converter models using PID Controller.<p>Based on the previous submissions uploaded;1) DC-DC Converters Using Mathematical Methods: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods2"">http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods2</a>) DC-DC Converters Using Circuitry Method: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-methodThe"">http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-methodThe</a> submissions listed above are the modeling and simulation of the DC-DC converters in the open-loop scheme. This submission here, named Closed-Loop Buck Converter Models, outlines the modeling and simulation of buck converter in the closed-loop scheme with the control of the PID Controller.</p>power_conversion_control,power_electronics_control,buck converter,circuitry modeling,closedloop,dcdc converters,mathematical modeling,pid controller",46,2,2,0,53,closed loop buck converter pid controller base previous submission upload converter mathematical method http mathworks com matlabcentral fileexchange converter mathematical method converter circuitry method http mathworks com matlabcentral fileexchange converter circuitry methodthe submission list converter open loop scheme submission name close loop buck converter outline buck converter close loop scheme control pid controller power conversion controlpower electronics controlbuck modelingpid controller,"['closed', 'loop', 'buck', 'converter', 'pid', 'controller', 'base', 'previous', 'submission', 'upload', 'converter', 'mathematical', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'mathematical', 'method', 'converter', 'circuitry', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'circuitry', 'methodthe', 'submission', 'list', 'converter', 'open', 'loop', 'scheme', 'submission', 'name', 'close', 'loop', 'buck', 'converter', 'outline', 'buck', 'converter', 'close', 'loop', 'scheme', 'control', 'pid', 'controller', 'power', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'modelingpid', 'controller']",3
1558,54854,"Closed-loop boost converter models using PID Controller.<p>Based on the previous submissions uploaded; 1) DC-DC Converters Using Mathematical Methods: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods"">http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods</a> 2) DC-DC Converters Using Circuitry Method: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-method"">http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-method</a> The submissions listed above are the modeling and simulation of the DC-DC converters in the open-loop scheme. This submission here, named Closed-Loop Boost Converter Models, outlines the modeling and simulation of boost converter in the closed-loop scheme with the control of the PID Controller.</p>power_conversion_control,power_electronics_control,boost converter,circuitry modeling,closedloop,dcdc converters,mathematical modeling,pid controller",49,2,2,0,59,closed loop boost converter pid controller base previous submission upload converter mathematical method http mathworks com matlabcentral fileexchange converter mathematical method converter circuitry method http mathworks com matlabcentral fileexchange converter circuitry method submission list converter open loop scheme submission name closed loop boost converter outline boost converter close loop scheme control pid controller power conversion controlpower electronics controlboost modelingpid controller,"['closed', 'loop', 'boost', 'converter', 'pid', 'controller', 'base', 'previous', 'submission', 'upload', 'converter', 'mathematical', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'mathematical', 'method', 'converter', 'circuitry', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'circuitry', 'method', 'submission', 'list', 'converter', 'open', 'loop', 'scheme', 'submission', 'name', 'closed', 'loop', 'boost', 'converter', 'outline', 'boost', 'converter', 'close', 'loop', 'scheme', 'control', 'pid', 'controller', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'modelingpid', 'controller']",3
1559,54867,MAS<p>simulation du rÃ©glage de vitesse associÃ© a la commande scalaire indirecte avec contrÃ´le du flux rotorique d'une machine asynchrone alimentÃ©e en tension</p>simulation,278,21,3,0,313,rÃ©glage vitesse associÃ© commande scalaire indirecte avec contrÃ´le flux rotorique une machine asynchrone alimentÃ©e,"['rÃ©glage', 'vitesse', 'associÃ©', 'commande', 'scalaire', 'indirecte', 'avec', 'contrÃ´le', 'flux', 'rotorique', 'une', 'machine', 'asynchrone', 'alimentÃ©e']",8
1560,54871,"Closed-loop buck converter models using PID Controller.<p>Based on the previous submissions uploaded; 1) DC-DC Converters Using Mathematical Methods: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods"">http://www.mathworks.com/matlabcentral/fileexchange/54362-dc-dc-converters-using-mathematical-methods</a> 2) DC-DC Converters Using Circuitry Method: <a href=""http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-method"">http://www.mathworks.com/matlabcentral/fileexchange/54360-dc-dc-converters-using-circuitry-method</a> The submissions listed above are the modeling and simulation of the DC-DC converters in the open-loop scheme. This submission here, named Closed-Loop Buck-Boost Converter Models, outlines the modeling and simulation of buck-boost converter in the closed-loop scheme with the control of the PID Controller.</p>power_conversion_control,power_electronics_control,buckboost converter,circuitry modeling,closedloop,dcdc converters,mathematical modeling,pid controller",50,2,2,0,59,closed loop buck converter pid controller base previous submission upload converter mathematical method http mathworks com matlabcentral fileexchange converter mathematical method converter circuitry method http mathworks com matlabcentral fileexchange converter circuitry method submission list converter open loop scheme submission name close loop buck boost converter outline buck boost converter close loop scheme control pid controller power conversion controlpower electronics modelingpid controller,"['closed', 'loop', 'buck', 'converter', 'pid', 'controller', 'base', 'previous', 'submission', 'upload', 'converter', 'mathematical', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'mathematical', 'method', 'converter', 'circuitry', 'method', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'converter', 'circuitry', 'method', 'submission', 'list', 'converter', 'open', 'loop', 'scheme', 'submission', 'name', 'close', 'loop', 'buck', 'boost', 'converter', 'outline', 'buck', 'boost', 'converter', 'close', 'loop', 'scheme', 'control', 'pid', 'controller', 'power', 'conversion', 'controlpower', 'electronics', 'modelingpid', 'controller']",3
1561,54929,"Support for low cost Texas Instruments LaunchPads<p>Energia (<a href=""http://www.energia.nu"">www.energia.nu</a>) is a low-cost open-source electronics prototyping platform based on flexible, easy-to-use hardware and software. Simulink example models for Energia supported low cost TI boards. This target includes support for Tiva TM4C123G and MSP-EXP430G2 LaunchPads with Simulink. To get started, start MATLAB R2015b in administrator mode, and go to the installed folder (you can find the installed location with the help of Add ons Manager tool bar in MATLAB) and run the Setup file in order to install the support for Energia. Also the version 0101E0016 of Energia IDE is required. To know about complete setup and help, follow step by step instructions in Help browser--&gt;Supplemental Software--&gt;Embedded Coder Target for Energia--&gt;Getting Started Guide. <a href=""https://www.youtube.com/watch?v=ktn1UKEr87s"">https://www.youtube.com/watch?v=ktn1UKEr87s</a></p>automotive,communications,control design,signal processing",12,3,1,3,6,support low cost texas instrument energia low cost open source electronics prototyping platform base flexible easy hardware software example energia support low cost board target include support tiva msp exp launchpads get started start administrator mode instal folder find installed location help add ons manager tool bar run setup file order install support energia also version energia ide require know complete setup help follow step step instruction help browser supplemental software embed coder target energia get start guide youtube com watch ktn uker designsignal processing,"['support', 'low', 'cost', 'texas', 'instrument', 'energia', 'low', 'cost', 'open', 'source', 'electronics', 'prototyping', 'platform', 'base', 'flexible', 'easy', 'hardware', 'software', 'example', 'energia', 'support', 'low', 'cost', 'board', 'target', 'include', 'support', 'tiva', 'msp', 'exp', 'launchpads', 'get', 'started', 'start', 'administrator', 'mode', 'instal', 'folder', 'find', 'installed', 'location', 'help', 'add', 'ons', 'manager', 'tool', 'bar', 'run', 'setup', 'file', 'order', 'install', 'support', 'energia', 'also', 'version', 'energia', 'ide', 'require', 'know', 'complete', 'setup', 'help', 'follow', 'step', 'step', 'instruction', 'help', 'browser', 'supplemental', 'software', 'embed', 'coder', 'target', 'energia', 'get', 'start', 'guide', 'youtube', 'com', 'watch', 'ktn', 'uker', 'designsignal', 'processing']",0
1562,54945,"This is a script to generate NuSMV and Matlab code for Mode Transitions<p>Mode transitions defined as tables can be easily converted to Matlab and NuSMV code for use in SDV and NuSMV tool. This is used for formally proving the correctness of the mode transition. Two examples - one an earlier autopilot mode transition and another generic table is provided.</p>formal methods,mode transition,simulink",90,2,2,0,99,script generate nusmv code mode transitionsmode transition define table easily convert nusmv code sdv nusmv tool formally prove correctness mode transition two examples one early autopilot mode transition another generic table provide formal methodsmode,"['script', 'generate', 'nusmv', 'code', 'mode', 'transitionsmode', 'transition', 'define', 'table', 'easily', 'convert', 'nusmv', 'code', 'sdv', 'nusmv', 'tool', 'formally', 'prove', 'correctness', 'mode', 'transition', 'two', 'examples', 'one', 'early', 'autopilot', 'mode', 'transition', 'another', 'generic', 'table', 'provide', 'formal', 'methodsmode']",5
1563,54959,"S-functions and Simulink Models for the simulation of Finite-State Machines and Petri Net models<p>This is a set of Simulink Level-2 S-functions implementing Finite-State Machines (FSM) and Petri Net (PN) models for the simulation of Discrete-Event Systems within Matlab/Simulink. The code includes two examples, one for each type of model. By the one hand, a Microwave oven is modeled and simulates as a FSM. On the other hand, a Flexible Manufacturing System is modeled and simulated as a PN.</p>discreteevent systems,finitestate machines,petri nets,simulation",18,2,2,0,27,function finite state machine petri net modelsthis set level function implement finite state machine fsm petri net discrete event within code include two example one type one hand microwave oven modeled fsm hand flexible manufacturing discreteevent machinespetri,"['function', 'finite', 'state', 'machine', 'petri', 'net', 'modelsthis', 'set', 'level', 'function', 'implement', 'finite', 'state', 'machine', 'fsm', 'petri', 'net', 'discrete', 'event', 'within', 'code', 'include', 'two', 'example', 'one', 'type', 'one', 'hand', 'microwave', 'oven', 'modeled', 'fsm', 'hand', 'flexible', 'manufacturing', 'discreteevent', 'machinespetri']",0
1564,55040,"This demo employs the SimulinkÂ® Support Package for Android to program an Samsung device.<p>This is an example of a Simulink model that uses the SimulinkÂ® Support Package for Samsung GALAXYÂ® Androidâ¢ Hardware to deploy and run an algorithm on a Samsung device. The support package lets you to design and run algorithms on Android-based Samsung smartphones and tablet devices using its sensors as inputs and the screen as an output.This Simulink model makes use of blocks from the support package to implement a color detection algorithm on a live video feed from the camera of the Android device. The algorithm is designed to use the camera of the smartphone or tablet device, detect a color specified as a ""reference"", replace it with a predefined color, and display the resulting video on the screen of the Android device.The reference color is defined in the ""Reference_Color"" block. The color detection algorithm is found in the ""Color Detection"" subsystem block, which makes use of MATLAB Function blocks to implement the color matching logic. The detected color is then ""marked"" (or replaced) with the color defined by the marking blocks, containing values for the R, G, and B components.With the SimulinkÂ® Support Package for Samsung GALAXYÂ® Androidâ¢ Hardware, you can design signal or image processing algorithms and applications for Android devices from Simulink. You can also develop more elaborate algorithms using the DSP System Toolbox and the Computer Vision System Toolbox.For more information, examples, requirements of this support package and other recommended products, please visit the following hardware catalog page:<a href=""http://www.mathworks.com/hardware-support/android-programming-simulink.html"">http://www.mathworks.com/hardware-support/android-programming-simulink.html</a></p>android,camera,color detection,computer vision,maker,mobile",51,4,3,0,59,demo employ support package android program samsung device example support package samsung galaxy android hardware deploy run algorithm samsung device support package let design run algorithms android base samsung smartphones tablet device sensor input screen output make block support package implement color detection algorithm live video feed camera android device algorithm design camera smartphone tablet device detect color specify reference replace predefined color display result video screen android device reference color define reference color block color detection algorithm find color detection subsystem block make function block implement color match logic detect color mark replaced color define mark block contain value component support package samsung galaxy android hardware design signal image processing algorithm application android device also develop elaborate algorithm dsp toolbox computer vision toolbox information examples requirement support package recommend product please visit follow hardware catalog page http mathworks com hardware support android programming,"['demo', 'employ', 'support', 'package', 'android', 'program', 'samsung', 'device', 'example', 'support', 'package', 'samsung', 'galaxy', 'android', 'hardware', 'deploy', 'run', 'algorithm', 'samsung', 'device', 'support', 'package', 'let', 'design', 'run', 'algorithms', 'android', 'base', 'samsung', 'smartphones', 'tablet', 'device', 'sensor', 'input', 'screen', 'output', 'make', 'block', 'support', 'package', 'implement', 'color', 'detection', 'algorithm', 'live', 'video', 'feed', 'camera', 'android', 'device', 'algorithm', 'design', 'camera', 'smartphone', 'tablet', 'device', 'detect', 'color', 'specify', 'reference', 'replace', 'predefined', 'color', 'display', 'result', 'video', 'screen', 'android', 'device', 'reference', 'color', 'define', 'reference', 'color', 'block', 'color', 'detection', 'algorithm', 'find', 'color', 'detection', 'subsystem', 'block', 'make', 'function', 'block', 'implement', 'color', 'match', 'logic', 'detect', 'color', 'mark', 'replaced', 'color', 'define', 'mark', 'block', 'contain', 'value', 'component', 'support', 'package', 'samsung', 'galaxy', 'android', 'hardware', 'design', 'signal', 'image', 'processing', 'algorithm', 'application', 'android', 'device', 'also', 'develop', 'elaborate', 'algorithm', 'dsp', 'toolbox', 'computer', 'vision', 'toolbox', 'information', 'examples', 'requirement', 'support', 'package', 'recommend', 'product', 'please', 'visit', 'follow', 'hardware', 'catalog', 'page', 'http', 'mathworks', 'com', 'hardware', 'support', 'android', 'programming']",7
1565,55045,"A composite microgrid model is designed.<p>This file present a composite microgrid model based on IEEE 14 bus standard model. The microgrid includes diesel generators, PV model, battery energy storage system, nonlinear loads such as arc furnace... . The microgrid operates in grid-connected mode.I have used the IEEE 14 bus standard model to build this model. the diesel generators parameters have been taken from my recent work:A new approach for soft synchronization of microgrid using robust control theory, IEEE Transactions on Power Delivery, 2017</p>battery_system_management,power_electronics_control,microgrid,standard microgrid",166,8,3,0,274,composite microgrid design file present composite microgrid base iee bus standard microgrid include diesel generator battery energy storage nonlinear load arc furnace microgrid operate grid connect mode iee bus standard build diesel generator parameter take recent work new approach soft synchronization microgrid robust control theory iee transaction power delivery battery managementpower electronics microgrid,"['composite', 'microgrid', 'design', 'file', 'present', 'composite', 'microgrid', 'base', 'iee', 'bus', 'standard', 'microgrid', 'include', 'diesel', 'generator', 'battery', 'energy', 'storage', 'nonlinear', 'load', 'arc', 'furnace', 'microgrid', 'operate', 'grid', 'connect', 'mode', 'iee', 'bus', 'standard', 'build', 'diesel', 'generator', 'parameter', 'take', 'recent', 'work', 'new', 'approach', 'soft', 'synchronization', 'microgrid', 'robust', 'control', 'theory', 'iee', 'transaction', 'power', 'delivery', 'battery', 'managementpower', 'electronics', 'microgrid']",4
1566,55054,"This has two models that try to find a solution to old puzzles using SDV<p>The puzzles are taken from <a href=""https://cs.swan.ac.uk/~csfm/Pubs/fwfm13.pdfThe"">https://cs.swan.ac.uk/~csfm/Pubs/fwfm13.pdfThe</a> Man-Wolf-Goat-Cabbage RiddleA man needs to cross a river with a wolf, a goat and a cabbage. His boat is only large enough to carry himself and one of his three possessions, so he must transport these items one at a time. However, if he leaves the wolf and the goat together unattended, then the wolf will eat the goat; similarly, if he leaves the goat and the cabbage togetherunattended, then the goat will eat the cabbage. How can the man get across safely with his three items?The Water Jugs RiddleIn the 1995 film Die Hard: With a Vengeance, New York Detective John McClane (played byBruce Willis) and Harlem dry cleaner Zeus Carver (played by Samuel L. Jackson) had to solve the following problem in order to prevent a bomb from exploding at a public fountain.Given only a five-gallon jug and a three-gallon jug, neither with any markings on them, they had to fill the larger jug with exactly four gallons of water from the fountain, and place it onto a scale in order to stop the bombâs timer and prevent disaster.How did they manage this feat?</p>examples,formal,methods,puzzles",64,0,1,0,72,two try find solution old puzzle sdvthe puzzle take swan csfm pub fwfm pdfthe man wolf goat cabbage riddlea man need cross river wolf goat cabbage boat large enough carry one three possession must transport item one time however leave wolf goat together unattended wolf eat goat similarly leave goat cabbage goat eat cabbage man get across safely three item water jug riddlein film die hard vengeance new york detective john mcclane play bybruce willis harlem dry cleaner zeus carver play samuel jackson solve follow problem order prevent bomb explode public fountain give five gallon jug three gallon jug neither marking fill large jug exactly four gallon water fountain place onto scale order stop bomb timer prevent disaster manage feat,"['two', 'try', 'find', 'solution', 'old', 'puzzle', 'sdvthe', 'puzzle', 'take', 'swan', 'csfm', 'pub', 'fwfm', 'pdfthe', 'man', 'wolf', 'goat', 'cabbage', 'riddlea', 'man', 'need', 'cross', 'river', 'wolf', 'goat', 'cabbage', 'boat', 'large', 'enough', 'carry', 'one', 'three', 'possession', 'must', 'transport', 'item', 'one', 'time', 'however', 'leave', 'wolf', 'goat', 'together', 'unattended', 'wolf', 'eat', 'goat', 'similarly', 'leave', 'goat', 'cabbage', 'goat', 'eat', 'cabbage', 'man', 'get', 'across', 'safely', 'three', 'item', 'water', 'jug', 'riddlein', 'film', 'die', 'hard', 'vengeance', 'new', 'york', 'detective', 'john', 'mcclane', 'play', 'bybruce', 'willis', 'harlem', 'dry', 'cleaner', 'zeus', 'carver', 'play', 'samuel', 'jackson', 'solve', 'follow', 'problem', 'order', 'prevent', 'bomb', 'explode', 'public', 'fountain', 'give', 'five', 'gallon', 'jug', 'three', 'gallon', 'jug', 'neither', 'marking', 'fill', 'large', 'jug', 'exactly', 'four', 'gallon', 'water', 'fountain', 'place', 'onto', 'scale', 'order', 'stop', 'bomb', 'timer', 'prevent', 'disaster', 'manage', 'feat']",8
1567,55224,"it is a simple simulation using simmechanics. I have used a CAD software for visualization.<p>It is a simple design. I have used CAD for design and simmechanics for assembling and simulation. Just ""look under mask"", It is easy to understand and manipulate.. kudos..</p>robotics,simmechanics,simulink",105,17,4,0,86,simple simmechanics cad software visualization simple design cad design simmechanics assemble look mask easy understand manipulate kudos,"['simple', 'simmechanics', 'cad', 'software', 'visualization', 'simple', 'design', 'cad', 'design', 'simmechanics', 'assemble', 'look', 'mask', 'easy', 'understand', 'manipulate', 'kudos']",5
1568,55225,"The Triac block is made up of two thyristor blocks connect in parallel opposite direction.<p>The Triac block is made up of two thyristor blocks connect in parallel opposite direction.The Triac block also contains a series Rs-Cs snubber circuit connects in parallel to the Triac device. In on-state the Triac model has an internal resistance (Ron) and inductance (Lon).For most applications the internal inductance should be set to zero.In off-state the Triac as an infinite impedance.</p>acac converter,thyristor,triac",14,1,2,0,18,triac block make two thyristor block connect parallel opposite direction triac block make two thyristor block connect parallel opposite direction triac block also contain series snubber circuit connects parallel triac device state triac internal resistance ron inductance lon application internal inductance set zero state triac infinite impedance acac,"['triac', 'block', 'make', 'two', 'thyristor', 'block', 'connect', 'parallel', 'opposite', 'direction', 'triac', 'block', 'make', 'two', 'thyristor', 'block', 'connect', 'parallel', 'opposite', 'direction', 'triac', 'block', 'also', 'contain', 'series', 'snubber', 'circuit', 'connects', 'parallel', 'triac', 'device', 'state', 'triac', 'internal', 'resistance', 'ron', 'inductance', 'lon', 'application', 'internal', 'inductance', 'set', 'zero', 'state', 'triac', 'infinite', 'impedance', 'acac']",0
1569,55244,"Documentation, Simulation and Arduino/Raspberry Pi design and models<p>This content includes documentation and MATLAB and Simulink files for the 2016 ""Mission On Mars Robot Challenge"" Competition.</p>arduino,pick of the week,potw,raspberrypi,robot",276,28,6,1,316,documentation arduino raspberry design modelsthis content include documentation file mission mar robot challenge competition arduinopick,"['documentation', 'arduino', 'raspberry', 'design', 'modelsthis', 'content', 'include', 'documentation', 'file', 'mission', 'mar', 'robot', 'challenge', 'competition', 'arduinopick']",0
1570,55269,"Performance of Short Transmission Line<p>Performance of Short Transmission Line.</p>power,simulink",47,0,1,0,54,performance short transmission lineperformance short transmission line,"['performance', 'short', 'transmission', 'lineperformance', 'short', 'transmission', 'line']",0
1571,55374,"It can generates impulse from 1 kV DC source.<p>This system can produce voltage impulse of 5 kV from 1 kV DC source. The system is consists of capacitor and thyristor valves. By charging capacitors in parallel and discharging them in series can produce impulse voltage of very high value. This Simulation is helpful for studying the characteristics of Impulse voltage and also act as an impulse voltage source for testing the insulator used in the various equipment in the power systems.</p>highvoltage,power,power_conversion_control,power_electronics_control",14,0,1,0,13,generates impulse source produce voltage impulse source consist capacitor thyristor valve charge capacitor parallel discharge series produce impulse voltage high value helpful study characteristic impulse voltage also act impulse voltage source test insulator various equipment power conversion controlpower electronics control,"['generates', 'impulse', 'source', 'produce', 'voltage', 'impulse', 'source', 'consist', 'capacitor', 'thyristor', 'valve', 'charge', 'capacitor', 'parallel', 'discharge', 'series', 'produce', 'impulse', 'voltage', 'high', 'value', 'helpful', 'study', 'characteristic', 'impulse', 'voltage', 'also', 'act', 'impulse', 'voltage', 'source', 'test', 'insulator', 'various', 'equipment', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
1572,55456,"Contact: electricmani@yahoo.co.in<p>Measure the frequency of input square wave. This is useful for speed measurement. Also you can change your different waves for other applications into square, then measure the frequency by yourself for various analysis purpose.</p>measurement",10,1,2,0,9,contact electricmani yahoo inmeasure frequency input square wave useful speed measurement also change different wave application square measure frequency various analysis purpose measurement,"['contact', 'electricmani', 'yahoo', 'inmeasure', 'frequency', 'input', 'square', 'wave', 'useful', 'speed', 'measurement', 'also', 'change', 'different', 'wave', 'application', 'square', 'measure', 'frequency', 'various', 'analysis', 'purpose', 'measurement']",4
1573,55481,2015<p>FURUTA.mdl</p>simulation,384,41,6,0,403,furuta,['furuta'],2
1574,55513,"Advanced trebuchet model that predicts dynamic performance based on design changes.<p>This advanced trebuchet model can be used for simulating the Trebuchet mechanics using SimMechanics tools. The inputs to this model are finger angle, pivot position, and sling length. Wheels can also be added or removed. Output of this model is projectile range as a function of these inputs along with a mechanics explorer simulation. This model was used as part of a freshman engineering course that introduced students to model-based design at the University of Illinois at Urbana-Champaign. An article based on the use of this model and the physical trebuchet project has been published recently in the journal Education Sciences (free download): <a href=""http://dx.doi.org/10.3390/educsci6010007In"">http://dx.doi.org/10.3390/educsci6010007In</a> addition, complete instructions, CAD files, and drawings for fabricating your own trebuchet kits based on this model have been made available. Curricular materials are also available so that instructors can incorporate this activity into their own courses. It was designed for freshman engineering students, but has been adapted for use with K-12 students as well. We have engaged with students as young as five years old to help them learn how computer simulation is important for engineering design. You can download these additional materials (fabrication documents, curriculum documents) from:<a href=""http://systemdesign.illinois.edu/projects/trebuchets.phpA"">http://systemdesign.illinois.edu/projects/trebuchets.phpA</a> large number of people have contributed to this project, including many graduate and undergraduate students. Several are acknowledged in the above journal paper. Anand Deshmukh was a primary contributor to the SimMechanics model, and Dan Herber was a core contributor to the documentation and many other aspects of the complete trebuchet project as used in class.</p>pick of the week,potw,design,education,simmechanics,simulation",337,29,4,0,326,advanced trebuchet predicts dynamic performance base design change advance trebuchet trebuchet mechanic simmechanics tool input finger angle pivot position sling length wheel also add remove output projectile range function input along mechanic explorer part freshman engineering course introduce student base design university illinois urbana champaign article base physical trebuchet project publish recently journal education science free download http doi org educsci addition complete instruction cad file drawing fabricate trebuchet kit base make available curricular material also available instructor incorporate activity course design freshman engineering student adapt student well engage student young five year old help learn computer important engineering design download additional material fabrication document curriculum document http systemdesign illinois edu project trebuchet phpa large number people contribute project include many graduate undergraduate student several acknowledge journal paper anand deshmukh primary contributor simmechanics dan herber core contributor documentation many aspect complete trebuchet project class pick,"['advanced', 'trebuchet', 'predicts', 'dynamic', 'performance', 'base', 'design', 'change', 'advance', 'trebuchet', 'trebuchet', 'mechanic', 'simmechanics', 'tool', 'input', 'finger', 'angle', 'pivot', 'position', 'sling', 'length', 'wheel', 'also', 'add', 'remove', 'output', 'projectile', 'range', 'function', 'input', 'along', 'mechanic', 'explorer', 'part', 'freshman', 'engineering', 'course', 'introduce', 'student', 'base', 'design', 'university', 'illinois', 'urbana', 'champaign', 'article', 'base', 'physical', 'trebuchet', 'project', 'publish', 'recently', 'journal', 'education', 'science', 'free', 'download', 'http', 'doi', 'org', 'educsci', 'addition', 'complete', 'instruction', 'cad', 'file', 'drawing', 'fabricate', 'trebuchet', 'kit', 'base', 'make', 'available', 'curricular', 'material', 'also', 'available', 'instructor', 'incorporate', 'activity', 'course', 'design', 'freshman', 'engineering', 'student', 'adapt', 'student', 'well', 'engage', 'student', 'young', 'five', 'year', 'old', 'help', 'learn', 'computer', 'important', 'engineering', 'design', 'download', 'additional', 'material', 'fabrication', 'document', 'curriculum', 'document', 'http', 'systemdesign', 'illinois', 'edu', 'project', 'trebuchet', 'phpa', 'large', 'number', 'people', 'contribute', 'project', 'include', 'many', 'graduate', 'undergraduate', 'student', 'several', 'acknowledge', 'journal', 'paper', 'anand', 'deshmukh', 'primary', 'contributor', 'simmechanics', 'dan', 'herber', 'core', 'contributor', 'documentation', 'many', 'aspect', 'complete', 'trebuchet', 'project', 'class', 'pick']",5
1575,55522,"This is a simple prototype of Simulink based Fault Tree<p>This type of Fault Tree has some limitations:* No repeated event is allowed.* No repair is allowed* It only support static gatesSome papers have been published based on this simulink:1.K. Aslansefat and G. Latif-Shabgahi, ""A Novel Classification for Underwater Robots,"" in 5th Offshore Industries Conference, Tehran, Iran, 2013.2.K. Aslansefat, G. Latif-Shabgahi and M. Kamarloie, ""Faults Taxonomy in Autonomous Underwater Vehicle and Provide their Fault Tree,"" in 15th Marine Industries Conference, Kish, Iran, 2013.3.K. Aslansefat, G. Latif-Shabgahi and M. Kamarlouei, ""A Strategy for Reliability Evaluation of Autonomous Underwater Gliding Robots,"" in Third International Conference on Robotics, Automation and Communication Engineering (ICRACE 2014), Dubai, 2014.4.G. Latif-Shabgahi, K. Aslansefat and M. Kamarlouei, ""Reliability and Sensitivity Evaluation of an AUV through Fault Tree Model with Uncertainty Consideration,"" International journal of Maritime Technology.5.M. Bahar-Gogani, M. Ramezani, A. Yazdizadeh, K. Aslansefat, âReliability Evaluation in Propulsion System of Diesel-Electric Locomotive through Fuzzy Fault Treeâ, in 4th International Conference on Recent Advances in Railway Engineering (ICRARE2015), University of Science and Technology, Tehran, Iran.</p>fault tree,reliability,robotics,simulation",1131,200,3,0,1010,simple prototype base fault treethis type fault tree limitation repeat event allow repair allow support static gatessome paper publish base aslansefat latif shabgahi novel classification underwater robot offshore industry conference tehran iran aslansefat latif shabgahi kamarloie fault taxonomy autonomous underwater vehicle provide fault tree marine industry conference kish iran aslansefat latif shabgahi kamarlouei strategy reliability evaluation autonomous underwater glide robot third international conference robotics automation communication engineering icrace dubai latif shabgahi aslansefat kamarlouei reliability sensitivity evaluation auv fault tree uncertainty consideration international journal maritime technology bahar gogani ramezani yazdizadeh aslansefat reliability evaluation propulsion diesel electric locomotive fuzzy fault tree international conference recent advance railway engineering icrare university science technology tehran iran fault,"['simple', 'prototype', 'base', 'fault', 'treethis', 'type', 'fault', 'tree', 'limitation', 'repeat', 'event', 'allow', 'repair', 'allow', 'support', 'static', 'gatessome', 'paper', 'publish', 'base', 'aslansefat', 'latif', 'shabgahi', 'novel', 'classification', 'underwater', 'robot', 'offshore', 'industry', 'conference', 'tehran', 'iran', 'aslansefat', 'latif', 'shabgahi', 'kamarloie', 'fault', 'taxonomy', 'autonomous', 'underwater', 'vehicle', 'provide', 'fault', 'tree', 'marine', 'industry', 'conference', 'kish', 'iran', 'aslansefat', 'latif', 'shabgahi', 'kamarlouei', 'strategy', 'reliability', 'evaluation', 'autonomous', 'underwater', 'glide', 'robot', 'third', 'international', 'conference', 'robotics', 'automation', 'communication', 'engineering', 'icrace', 'dubai', 'latif', 'shabgahi', 'aslansefat', 'kamarlouei', 'reliability', 'sensitivity', 'evaluation', 'auv', 'fault', 'tree', 'uncertainty', 'consideration', 'international', 'journal', 'maritime', 'technology', 'bahar', 'gogani', 'ramezani', 'yazdizadeh', 'aslansefat', 'reliability', 'evaluation', 'propulsion', 'diesel', 'electric', 'locomotive', 'fuzzy', 'fault', 'tree', 'international', 'conference', 'recent', 'advance', 'railway', 'engineering', 'icrare', 'university', 'science', 'technology', 'tehran', 'iran', 'fault']",8
1576,55544,"simulates the self excitation of the induction machine<p>it shows the effect speed , load and saturation on the process of voltage build up and collapse</p>simulation",39,1,2,0,53,self excitation induction machineit show effect speed load saturation process voltage build,"['self', 'excitation', 'induction', 'machineit', 'show', 'effect', 'speed', 'load', 'saturation', 'process', 'voltage', 'build']",4
1577,55591,"it is a basic concepts of close loop control of buck converter.<p>Close loop control</p>power_conversion_control,power_electronics_control,example",62,0,1,0,64,basic concept close loop control buck converter close loop controlpower conversion controlpower electronics controlexample,"['basic', 'concept', 'close', 'loop', 'control', 'buck', 'converter', 'close', 'loop', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlexample']",6
1578,55592,"Basic DC-DC Boost Converter Control Concept<p>Basic DC-DC Boost Converter Control Concept</p>power_conversion_control,power_electronics_control,control design",35,0,1,0,40,basic boost converter control conceptbasic boost converter control conceptpower conversion controlpower electronics controlcontrol design,"['basic', 'boost', 'converter', 'control', 'conceptbasic', 'boost', 'converter', 'control', 'conceptpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'design']",6
1579,55606,"Several diversity measures are illustrated within the context of repetitive control.<p>This submission already supports: mean standard deviation across all subswarms, mean standard deviation across each swarm, dimension-wise variance, dimension-wise radius, dimension-wise mean distance to the mean. The dimension-wise radius is our winner in the category of hard real-time systems. This is going to be justified in our paper ""Direct Multi-Swarm Repetitive Controller for the Sine Wave Inverter -- on Keeping Particles Diversified in a Dynamic and Noisy Environment"" accepted for presentation at CPE-POWERENG 2016 conference. Keep your stick on the ice!</p>diversity measure,iterative learning control,particle swarm optimization,pso,repetitive control,swarm diversity,swarm repetitive controller",40,1,2,0,47,several diversity measure illustrate within context repetitive control submission already support mean standard deviation across subswarms mean standard deviation across swarm dimension wise variance dimension wise radius dimension wise mean distance mean dimension wise radius winner category hard real time justified paper direct multi swarm repetitive controller sine wave inverter keep particle diversify dynamic noisy environment accept presentation cpe powereng conference keep stick ice diversity learn controlparticle swarm controlswarm diversityswarm repetitive controller,"['several', 'diversity', 'measure', 'illustrate', 'within', 'context', 'repetitive', 'control', 'submission', 'already', 'support', 'mean', 'standard', 'deviation', 'across', 'subswarms', 'mean', 'standard', 'deviation', 'across', 'swarm', 'dimension', 'wise', 'variance', 'dimension', 'wise', 'radius', 'dimension', 'wise', 'mean', 'distance', 'mean', 'dimension', 'wise', 'radius', 'winner', 'category', 'hard', 'real', 'time', 'justified', 'paper', 'direct', 'multi', 'swarm', 'repetitive', 'controller', 'sine', 'wave', 'inverter', 'keep', 'particle', 'diversify', 'dynamic', 'noisy', 'environment', 'accept', 'presentation', 'cpe', 'powereng', 'conference', 'keep', 'stick', 'ice', 'diversity', 'learn', 'controlparticle', 'swarm', 'controlswarm', 'diversityswarm', 'repetitive', 'controller']",5
1580,55621,120 degree conduction of each switch<p>120 degree conduction type 3-phase VSI basic concept..</p>power electronics,42,0,1,0,36,degree conduction switch degree conduction type phase vsi basic concept power electronics,"['degree', 'conduction', 'switch', 'degree', 'conduction', 'type', 'phase', 'vsi', 'basic', 'concept', 'power', 'electronics']",3
1581,55628,"Particle swarm is employed to optimize a multiresonant controller synthesized in the dq0 frame.<p>Please see <a href=""http://dx.doi.org/10.1109/TIE.2014.2334669"">http://dx.doi.org/10.1109/TIE.2014.2334669</a> [Ufnalski, B.; Kaszewski, A.; Grzesiak, L.M., ""Particle Swarm Optimization of the Multioscillatory LQR for a Three-Phase Four-Wire Voltage-Source Inverter With an LC Output Filter,"" in IEEE Transactions on Industrial Electronics, vol. 62, no. 1, pp. 484-493, Jan. 2015] for more details. And remember that OPTIMALITY DOES NOT IMPLY ROBUSTNESS! Selecting a sufficient penalty for control signal dynamics is crucial in this control system. The good news is that this is the only parameter to be guessed and checked in the proposed tuning procedure. More reference frames compared in <a href=""http://dx.doi.org/10.1109/EPE.2013.6631891"">http://dx.doi.org/10.1109/EPE.2013.6631891</a> [Kaszewski, A.; Ufnalski, B.; Grzesiak, L.M., ""The LQ controller for the 3-phase 4-leg inverter with an LC output filter â Choosing the right reference frame,"" in 15th European Conference on Power Electronics and Applications (EPE 2013), pp. 1-9, 2-6 Sept. 2013] are on its way to File Exchange. Keep your stick on the ice!</p>control,inverter,lqr,multioscillatory,multiresonant,optimal,particle swarm optimization,power electronics,pso,robust,power_conversion_control,power_electronics_control",608,38,3,0,614,particle swarm employ optimize multiresonant controller synthesize frame please see http doi org tie ufnalski kaszewski grzesiak particle swarm optimization lqr three phase four wire voltage source inverter output filter iee transaction industrial electronics vol jan detail remember optimality imply robustness select sufficient penalty control signal dynamic crucial control good news parameter guess checked propose tune procedure reference frame compare http doi org epe kaszewski ufnalski grzesiak controller phase leg inverter output filter choose right reference frame european conference power electronics application epe sept way file exchange keep stick ice swarm conversion controlpower electronics control,"['particle', 'swarm', 'employ', 'optimize', 'multiresonant', 'controller', 'synthesize', 'frame', 'please', 'see', 'http', 'doi', 'org', 'tie', 'ufnalski', 'kaszewski', 'grzesiak', 'particle', 'swarm', 'optimization', 'lqr', 'three', 'phase', 'four', 'wire', 'voltage', 'source', 'inverter', 'output', 'filter', 'iee', 'transaction', 'industrial', 'electronics', 'vol', 'jan', 'detail', 'remember', 'optimality', 'imply', 'robustness', 'select', 'sufficient', 'penalty', 'control', 'signal', 'dynamic', 'crucial', 'control', 'good', 'news', 'parameter', 'guess', 'checked', 'propose', 'tune', 'procedure', 'reference', 'frame', 'compare', 'http', 'doi', 'org', 'epe', 'kaszewski', 'ufnalski', 'grzesiak', 'controller', 'phase', 'leg', 'inverter', 'output', 'filter', 'choose', 'right', 'reference', 'frame', 'european', 'conference', 'power', 'electronics', 'application', 'epe', 'sept', 'way', 'file', 'exchange', 'keep', 'stick', 'ice', 'swarm', 'conversion', 'controlpower', 'electronics', 'control']",4
1582,55642,"These are the files for the ""Intro to Optimization"" webinar<p>These are the files for the ""Introduction to Optimization"" webinar. For English code, use files under ""code_en"" directory.There are four parts in this set: 1. Optimization of length of three rectangular edges2. Using global optimization - Particle Swarm Optimization3. Production process line optimization 4. Route optimization with graph object ãã®ãã¡ã¤ã«ã¯ãwebã»ããã¼ãæé©åã«ããèª²é¡è§£æ±ºã¨ããã©ã¼ãã³ã¹åä¸ãã®ãã¢ãã¡ã¤ã«ã§ããè±èªã®ãã¡ã¤ã«ã¯ code_en ã®ãã©ã«ãã«ãæ¥æ¬èªã®ãã¡ã¤ã«ã¯ code_jp ã®ãã©ã«ãã«å¥ã£ã¦ãã¾ããä¸»ãªãã¡ã¤ã«ã¯ä»¥ä¸ã®4ã¤ã§ãã 1. ç´æ¹ä½ã®3è¾ºã®æé©å2. å¤§åçæé©å - Particle Swarm Optimization3. çç£ãã­ã»ã¹ã®ã¹ã±ã¸ã¥ã¼ãªã³ã°ã¨æé©å 4. ã°ã©ããªãã¸ã§ã¯ããä½¿ç¨ããã«ã¼ãæé©åæ¥æ¬èªã® web ã»ããã¯ä»¥ä¸ãããè¦§ããã ãã¾ãã<a href=""http://jp.mathworks.com/videos/optimization-to-solve-problems-and-improve-performance-116782.html"">http://jp.mathworks.com/videos/optimization-to-solve-problems-and-improve-performance-116782.html</a></p>graph,graphics,japanese,modeling,oop,optimization,particle swarm optimization,simulation,visualization",202,32,2,6,162,file intro optimization webinarthese file introduction optimization webinar english code file code directory four part set optimization length three rectangular edge global optimization particle swarm optimization production process line optimization route optimization graph object code ã®ãã©ã«ãã«æ¥æ¬èªã®ãã¡ã¤ã«ã¯ code ã¤ã§ã ç´æ¹ä½ã® è¾ºã®æé©å å¤§åçæé©å particle swarm optimization web mathworks com videos optimization solve problem improve performance swarm,"['file', 'intro', 'optimization', 'webinarthese', 'file', 'introduction', 'optimization', 'webinar', 'english', 'code', 'file', 'code', 'directory', 'four', 'part', 'set', 'optimization', 'length', 'three', 'rectangular', 'edge', 'global', 'optimization', 'particle', 'swarm', 'optimization', 'production', 'process', 'line', 'optimization', 'route', 'optimization', 'graph', 'object', 'code', 'ã®ãã©ã«ãã«æ¥æ¬èªã®ãã¡ã¤ã«ã¯', 'code', 'ã¤ã§ã', 'ç´æ¹ä½ã®', 'è¾ºã®æé©å', 'å¤§åçæé©å', 'particle', 'swarm', 'optimization', 'web', 'mathworks', 'com', 'videos', 'optimization', 'solve', 'problem', 'improve', 'performance', 'swarm']",0
1583,55648,"Simulation and control of a two wheel robot<p>Simulation and control of a two wheel robot using Simulink.</p>control,robotics,simulink",1155,79,4,7,1283,control two wheel control two wheel robot,"['control', 'two', 'wheel', 'control', 'two', 'wheel', 'robot']",3
1584,55652,"I am suganya, M.E Embedded system technologies, I have developed the multilevel inverter.<p>This multilevel inverter reduces number of switches. It's five level inverter.</p>power electronics",113,4,2,0,105,suganya embed technology develop multilevel inverter multilevel inverter reduces number switch five level inverter power electronics,"['suganya', 'embed', 'technology', 'develop', 'multilevel', 'inverter', 'multilevel', 'inverter', 'reduces', 'number', 'switch', 'five', 'level', 'inverter', 'power', 'electronics']",3
1585,55653,"SVM<p>two level space vector modulation</p>2,3,inverter,level,modulation,phase,space,svm,three,two,vector",197,5,2,0,258,svmtwo level space vector modulation,"['svmtwo', 'level', 'space', 'vector', 'modulation']",3
1586,55654,"6 ph IM<p>Mathematical model of 6 phase induction motor</p>6,induction,modeling,motor,ph,electric_motor_control,power_electronics_control",119,8,3,0,135,immathematical phase induction motor motor controlpower electronics control,"['immathematical', 'phase', 'induction', 'motor', 'motor', 'controlpower', 'electronics', 'control']",6
1587,55691,"Calculate time for 1 loop iteration in Arduino<p>Calculate time for 1 loop iteration in Arduino.The output is in ms. Replace millis() to micros() to get output in us.Tested on Leonardo, Uno and Mega 2560</p>arduino,sfunction,simulink",2,0,1,0,1,calculate time loop iteration time loop iteration arduino output replace millis micros get output test leonardo uno mega,"['calculate', 'time', 'loop', 'iteration', 'time', 'loop', 'iteration', 'arduino', 'output', 'replace', 'millis', 'micros', 'get', 'output', 'test', 'leonardo', 'uno', 'mega']",0
1588,55769,"General Algorithm of Three-Phase Multi-Level Space Vector Pulse Width Modulation (N-Level SVPWM)<p>The function block ""Three-Phase Multi-Level SVPWM"" in Simulink can generate a three-phase N-level SVPWM pattern, where N is specified by the user.</p>electric_motor_control,power_conversion_control,power_electronics_control,power electronics,simulink,svpwm",136,7,2,0,154,general algorithm three phase multi level space vector pulse width modulation level svpwm function block three phase multi level svpwm generate three phase level svpwm pattern specify user electric motor controlpower conversion controlpower electronics controlpower,"['general', 'algorithm', 'three', 'phase', 'multi', 'level', 'space', 'vector', 'pulse', 'width', 'modulation', 'level', 'svpwm', 'function', 'block', 'three', 'phase', 'multi', 'level', 'svpwm', 'generate', 'three', 'phase', 'level', 'svpwm', 'pattern', 'specify', 'user', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower']",1
1589,55806,"Basic Modelling<p>study the performance of three-phase induction motor under symmetrical conditions.</p>electric_motor_control,power_electronics_control,simulink",110,6,2,0,121,basic modellingstudy performance three phase induction motor symmetrical condition electric motor controlpower electronics,"['basic', 'modellingstudy', 'performance', 'three', 'phase', 'induction', 'motor', 'symmetrical', 'condition', 'electric', 'motor', 'controlpower', 'electronics']",1
1590,55807,simulation of a magnetic actuator<p>Study the performance of a magnetic actuator circuit.</p>simulink,25,0,1,0,34,magnetic actuatorstudy performance magnetic actuator circuit,"['magnetic', 'actuatorstudy', 'performance', 'magnetic', 'actuator', 'circuit']",5
1591,55816,"Simulation of three phase AC voltage controller circuit<p>Simulation of three phase AC voltage controller circuit based on textbook âPower Electronics: Devices, Circuits, and Applicationsâ, 4th Edition by Muhammad H. Rashid, Chapter 11 AC Voltage Controllers, Page 588-590. This model allows user to change the firing delay angle in degree, view the gate control signal, output phase to neutral voltage and current waveform, output voltage and current in rms.Three phase AC Voltage Controller model also comes with three phase thyristor block which is implemented by a total of six thyristor blocks.The excerpt of the book chapter 11 teaching resource slides also included for your learning reference.</p>electric_motor_control,power_conversion_control,power_electronics_control,ac controller,acac converter,three phase ac voltage controller,three phase thyristor block",43,1,2,0,55,three phase voltage controller three phase voltage controller circuit base textbook power electronics device circuit application edition muhammad rashid chapter voltage controller page allow user change fire delay angle degree view gate control signal output phase neutral voltage current waveform output voltage current rms three phase voltage controller also come three phase thyristor block implement total six thyristor block excerpt book chapter teach resource slide also include learn reference electric motor controlpower conversion controlpower electronics controlac controlleracac converterthree phase voltage controllerthree phase thyristor block,"['three', 'phase', 'voltage', 'controller', 'three', 'phase', 'voltage', 'controller', 'circuit', 'base', 'textbook', 'power', 'electronics', 'device', 'circuit', 'application', 'edition', 'muhammad', 'rashid', 'chapter', 'voltage', 'controller', 'page', 'allow', 'user', 'change', 'fire', 'delay', 'angle', 'degree', 'view', 'gate', 'control', 'signal', 'output', 'phase', 'neutral', 'voltage', 'current', 'waveform', 'output', 'voltage', 'current', 'rms', 'three', 'phase', 'voltage', 'controller', 'also', 'come', 'three', 'phase', 'thyristor', 'block', 'implement', 'total', 'six', 'thyristor', 'block', 'excerpt', 'book', 'chapter', 'teach', 'resource', 'slide', 'also', 'include', 'learn', 'reference', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'controlleracac', 'converterthree', 'phase', 'voltage', 'controllerthree', 'phase', 'thyristor', 'block']",3
1592,55821,smc controller example<p>smc controller example</p>simulink,12,1,2,0,16,smc controller examplesmc controller,"['smc', 'controller', 'examplesmc', 'controller']",4
1593,55836,"Multi Bit Delta Sigma Digital to Analog Converter - Simulink model<p>DAC is a Simulink model of a multi bit delta sigma digital to analog converter.The DAC is based on a 9 bits set split in :- 4 MSBs (bits : 8/7/6/5, respective weights : 32/16/8/4)- 5 LSBs (bits 4/3/2/1/0, weights : 1/1/1/1/1)The redundancy between bit#5 and LSBs allows two combinations to code a same value. Both combinations are used according to a hysteris cycle depending on the sign of the signal gradient (bit#5 is used if the signal increase while LSBs are used if the signal decrease).Video demonstration :<a href=""https://www.youtube.com/watch?v=ExwdHEWAorU&amp;ab_channel=Pseudonymeoriginal"">https://www.youtube.com/watch?v=ExwdHEWAorU&amp;ab_channel=Pseudonymeoriginal</a></p>analog,bit,code,converter,dac,delta,deltasigma,digit,digital,electronic,electronics,model,modulation,modulator,multi,pwm,sigma,sigmadelta,simulation,simulink,subfunction",19,1,2,0,25,multi bit delta sigma digital analog converter modeldac multi bit delta sigma digital analog converter dac base bit set split msb bit respective weight lsbs bit weight redundancy bit lsbs allow two combination code value combination accord hysteris cycle depend sign signal gradient bit used signal increase lsbs signal decrease video demonstration youtube com watch exwdhewaoru amp channel,"['multi', 'bit', 'delta', 'sigma', 'digital', 'analog', 'converter', 'modeldac', 'multi', 'bit', 'delta', 'sigma', 'digital', 'analog', 'converter', 'dac', 'base', 'bit', 'set', 'split', 'msb', 'bit', 'respective', 'weight', 'lsbs', 'bit', 'weight', 'redundancy', 'bit', 'lsbs', 'allow', 'two', 'combination', 'code', 'value', 'combination', 'accord', 'hysteris', 'cycle', 'depend', 'sign', 'signal', 'gradient', 'bit', 'used', 'signal', 'increase', 'lsbs', 'signal', 'decrease', 'video', 'demonstration', 'youtube', 'com', 'watch', 'exwdhewaoru', 'amp', 'channel']",0
1594,55876,"Buck converter<p>Buck converter to step down DC voltage.</p>power_conversion_control,power_electronics_control,power electronics,simulink",14,0,1,0,20,buck converterbuck converter step voltage power conversion controlpower electronics controlpower,"['buck', 'converterbuck', 'converter', 'step', 'voltage', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower']",6
1595,55878,"These files accompany the text Control and Estimation with MATLAB, 4th Edition<p>. The code is organized as is the textbook and is composed of six chapters. The 1st chapter has to do with state estimation and data smoothing. The chapter includes Luenberger observers, alpha-beta-gamma filters, Kalman filters, extended Kalman filters, proportional-integral Kalman filters, Hâ filters, unscented Kalman filters, sliding mode observers, Inertial Measurement Unit estimation, data fusion ideas, and zero phase filters. It is given at the beginning of the text as it is a necessary interface between control algorithms and sensors. Chapter 2 describes RLS and Kalman filter state estimation approaches to fault detection and includes an example. Chapter 3 has to do with control system design to mitigate the effects of disturbances, including disturbance accommodating control, Hâ, Active Disturbance Rejection Control and harmonic oscillation control. Chapter 4 has a few adaptive control methods that are described including model reference adaptive control, L1 Adaptive Control, and model free adaptive control. Chapter 5 describes ways to tune proportional integral derivative (PID) control algorithms. This is the most commonly used and, therefore, most important control algorithm. Chapter 6 describes several adaptive and non-adaptive feedforward control techniques. Chapter 7 has a few applications that may be of interest to the reader. It shows a few of the techniques explained in the text by using control system and estimation methods.</p>adaptive control,control design,estimation,pid control",1829,41,4,0,2143,file accompany text control estimation edition code organize textbook compose six chapter chapter state estimation data smooth chapter include luenberger observer alpha beta gamma filter kalman filter extend kalman filter proportional integral kalman filter filter unscented kalman filter slide mode observer inertial measurement unit estimation data fusion idea zero phase filter give begin text necessary interface control algorithms sensor chapter describe rls kalman filter state estimation approach fault detection include example chapter control design mitigate effect disturbances include disturbance accommodate control active disturbance rejection control harmonic oscillation control chapter adaptive control method describe include reference adaptive control adaptive control free adaptive control chapter describe way tune proportional integral derivative pid control algorithms commonly therefore important control algorithm chapter describes several adaptive non adaptive feedforward control techniques chapter application may interest reader show technique explain text control estimation method adaptive controlcontrol control,"['file', 'accompany', 'text', 'control', 'estimation', 'edition', 'code', 'organize', 'textbook', 'compose', 'six', 'chapter', 'chapter', 'state', 'estimation', 'data', 'smooth', 'chapter', 'include', 'luenberger', 'observer', 'alpha', 'beta', 'gamma', 'filter', 'kalman', 'filter', 'extend', 'kalman', 'filter', 'proportional', 'integral', 'kalman', 'filter', 'filter', 'unscented', 'kalman', 'filter', 'slide', 'mode', 'observer', 'inertial', 'measurement', 'unit', 'estimation', 'data', 'fusion', 'idea', 'zero', 'phase', 'filter', 'give', 'begin', 'text', 'necessary', 'interface', 'control', 'algorithms', 'sensor', 'chapter', 'describe', 'rls', 'kalman', 'filter', 'state', 'estimation', 'approach', 'fault', 'detection', 'include', 'example', 'chapter', 'control', 'design', 'mitigate', 'effect', 'disturbances', 'include', 'disturbance', 'accommodate', 'control', 'active', 'disturbance', 'rejection', 'control', 'harmonic', 'oscillation', 'control', 'chapter', 'adaptive', 'control', 'method', 'describe', 'include', 'reference', 'adaptive', 'control', 'adaptive', 'control', 'free', 'adaptive', 'control', 'chapter', 'describe', 'way', 'tune', 'proportional', 'integral', 'derivative', 'pid', 'control', 'algorithms', 'commonly', 'therefore', 'important', 'control', 'algorithm', 'chapter', 'describes', 'several', 'adaptive', 'non', 'adaptive', 'feedforward', 'control', 'techniques', 'chapter', 'application', 'may', 'interest', 'reader', 'show', 'technique', 'explain', 'text', 'control', 'estimation', 'method', 'adaptive', 'controlcontrol', 'control']",4
1596,55904,"3 level h bridge multilevel inverter<p>h bridge inverter using subsystems</p>gui,simulink",35,2,2,0,35,level bridge multilevel inverterh bridge inverter,"['level', 'bridge', 'multilevel', 'inverterh', 'bridge', 'inverter']",1
1597,55905,cascaded h bridge<p>firing technique used is pulse generators</p>gui,13,1,2,0,12,cascade bridgefiring technique pulse generatorsgui,"['cascade', 'bridgefiring', 'technique', 'pulse', 'generatorsgui']",4
1598,55912,"Integrating Analog to Digital Converter - Simulink model<p>Description: ADC is a simple Simulink model of an integrating analog to digital converter, including :- A counter (clock : 160MHz, size : 10 bits)- A resettable integrator (reset : every 2^10 160MHz clock period)- A comparator (input signal versus the analog ramp from the integrator)- A polynomial extrapolator (order : 5, calculating samples at deterministic instants from stochastic samples)Video demonstration :<a href=""https://www.youtube.com/watch?v=8GZUZwL03d4&amp;ab_channel=Pseudonymeoriginal"">https://www.youtube.com/watch?v=8GZUZwL03d4&amp;ab_channel=Pseudonymeoriginal</a></p>adc,analog,clock,converter,counter,deterministic,digital,electronic,electronics,extrapolation,extrapolator,iadc,integrator,interpolation,interpolator,model,polynomial,ramp,simulation,simulink,stochastic",40,5,2,0,39,integrate analog digital converter adc simple integrate analog digital converter include counter clock mhz size bit resettable integrator reset every mhz clock period comparator input signal versus analog ramp integrator polynomial extrapolator order calculate sample deterministic instant stochastic sample video demonstration youtube com watch gzuzwl amp channel,"['integrate', 'analog', 'digital', 'converter', 'adc', 'simple', 'integrate', 'analog', 'digital', 'converter', 'include', 'counter', 'clock', 'mhz', 'size', 'bit', 'resettable', 'integrator', 'reset', 'every', 'mhz', 'clock', 'period', 'comparator', 'input', 'signal', 'versus', 'analog', 'ramp', 'integrator', 'polynomial', 'extrapolator', 'order', 'calculate', 'sample', 'deterministic', 'instant', 'stochastic', 'sample', 'video', 'demonstration', 'youtube', 'com', 'watch', 'gzuzwl', 'amp', 'channel']",0
1599,55949,"This simulink model is simple PWM generator can be used or modified further for other simulations.<p>Simulating the inverter in simulink sometime requires manual PWM generation of signal which can be manually controlled by some other signal inputs. The design includes only two blocks adder and comparator to generate the PWM wave. By changing amplitude of the saw tooth wave or sine wave the output PWM generation can be controlled.</p>pwm,pwm generator,simulink,electric_motor_control,power_conversion_control,power_electronics_control",6,0,1,0,8,simple pwm generator modify inverter sometime require manual pwm generation signal manually control signal input design include two block adder comparator generate pwm wave change amplitude saw tooth wave sine wave output pwm generation control pwmpwm motor controlpower conversion controlpower electronics control,"['simple', 'pwm', 'generator', 'modify', 'inverter', 'sometime', 'require', 'manual', 'pwm', 'generation', 'signal', 'manually', 'control', 'signal', 'input', 'design', 'include', 'two', 'block', 'adder', 'comparator', 'generate', 'pwm', 'wave', 'change', 'amplitude', 'saw', 'tooth', 'wave', 'sine', 'wave', 'output', 'pwm', 'generation', 'control', 'pwmpwm', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1600,55952,Trying to port in a matrix consisting of signed floating point numbers<p>I am using Symphony Model compiler Floating point toolbox and getting error for negetive numbers(signed) input</p>symphony model compiler,19,0,1,0,18,try port matrix consist sign float point numbersi symphony compiler float point toolbox get error negetive number sign inputsymphony compiler,"['try', 'port', 'matrix', 'consist', 'sign', 'float', 'point', 'numbersi', 'symphony', 'compiler', 'float', 'point', 'toolbox', 'get', 'error', 'negetive', 'number', 'sign', 'inputsymphony', 'compiler']",5
1601,55954,open-circuit and short-circuit test<p>open-circuit and short-circuit test...</p>measurement,41,0,1,0,45,open circuit short circuit testopen circuit short circuit test measurement,"['open', 'circuit', 'short', 'circuit', 'testopen', 'circuit', 'short', 'circuit', 'test', 'measurement']",7
1602,56018,"AC motor simulation modeling<p>verify the characteristics of AC  squirrel cage  motor</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",27,0,1,0,27,motor modelingverify characteristic squirrel cage motorelectric motor controlpower conversion controlpower electronics,"['motor', 'modelingverify', 'characteristic', 'squirrel', 'cage', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1603,56020,"PMSM Start<p>Control PMSM Using FOC for EPS</p>electric_motor_control,power_electronics_control,fun",230,19,5,0,258,pmsm startcontrol pmsm foc epselectric motor controlpower electronics controlfun,"['pmsm', 'startcontrol', 'pmsm', 'foc', 'epselectric', 'motor', 'controlpower', 'electronics', 'controlfun']",3
1604,56021,"Speed control of DC motor using hybrid Neuro Fuzzy Intelligent controller<p>Speed control of DC motor using hybrid Neuro Fuzzy Intelligent controller</p>dc motor,neuro fuzzy,speed control,electric_motor_control,power_conversion_control,power_electronics_control",50,2,3,0,60,speed control motor hybrid neuro fuzzy intelligent controllerspeed control motor hybrid neuro fuzzy intelligent controllerdc motorneuro fuzzyspeed controlelectric motor controlpower conversion controlpower electronics control,"['speed', 'control', 'motor', 'hybrid', 'neuro', 'fuzzy', 'intelligent', 'controllerspeed', 'control', 'motor', 'hybrid', 'neuro', 'fuzzy', 'intelligent', 'controllerdc', 'motorneuro', 'fuzzyspeed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1605,56023,"ANN Based Speed Control of  Solar  Powered DC Motor<p>ANN Based Speed Control of  Solar  Powered DC Motor</p>ann,dc motor,intelligent,solar,electric_motor_control,power_conversion_control,power_electronics_control",83,9,4,0,87,ann base speed control solar power motorann base speed control solar power motoranndc motor controlpower conversion controlpower electronics control,"['ann', 'base', 'speed', 'control', 'solar', 'power', 'motorann', 'base', 'speed', 'control', 'solar', 'power', 'motoranndc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
1606,56048,How to use the Embedded coder with a modular automation system<p>This example shows how to use the embedded coder with a modular automation system having digital and analog IO. It uses WAGO Kontakttechnik PFC200 Hardware running under Linux.Also you can learn how to create S-Bus Functions accessing the modular IO using dynamic user masks</p>embedded code,7,0,1,0,0,embed coder modular automation systemthis example show embed coder modular automation digital analog wago kontakttechnik pfc hardware run linux also learn create bus function access modular dynamic user masksembedded code,"['embed', 'coder', 'modular', 'automation', 'systemthis', 'example', 'show', 'embed', 'coder', 'modular', 'automation', 'digital', 'analog', 'wago', 'kontakttechnik', 'pfc', 'hardware', 'run', 'linux', 'also', 'learn', 'create', 'bus', 'function', 'access', 'modular', 'dynamic', 'user', 'masksembedded', 'code']",0
1607,56061,"Three phase AC Voltage Controller Drive Induction Motor<p>this file describe soft starter for induction motor by change the  firing angle to SCR  in sequence</p>electric_motor_control,power_conversion_control,power_electronics_control,drive systems,power electronics",38,0,1,0,42,three phase voltage controller drive induction motorthis file describe soft starter induction motor change fire angle scr motor controlpower conversion controlpower electronics controldrive systemspower electronics,"['three', 'phase', 'voltage', 'controller', 'drive', 'induction', 'motorthis', 'file', 'describe', 'soft', 'starter', 'induction', 'motor', 'change', 'fire', 'angle', 'scr', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldrive', 'systemspower', 'electronics']",1
1608,56184,"Hexapod Robot (Simulations) by Dr. Claudio Urrea & M.Sc.-Eng. Luis Valenzuela<p>The main file is composed of the following three folders:The folder called Hexapod Robot (Simscape Multibody and Virtual Reality) allows making the simulation of the displacement of a hexapod robot using Simscape Multibody as well as Virtual Reality (simulation model created in wrl format).The folder called Hexapod Robot Leg (Simscape Multibody) allows making the simulation of a leg of a hexapod robot using only Simscape Multibody.The folder called Hexapod Robot Leg (Virtual Reality) allows making a simulation, in Simulink, for modeling a leg of a hexapod robot using the tools provided by Simscape Multibody. It includes a 3D visualization using the Simulink 3D Animation toolbox.</p>hexapod robot,robotics,simulation,simulink,virtual reality",389,19,2,0,422,hexapod robot claudio urrea eng luis valenzuelathe main file compose follow three folder folder call hexapod robot simscape multibody virtual reality allow make displacement hexapod robot simscape multibody well virtual reality create wrl format folder call hexapod robot leg simscape multibody allow make leg hexapod robot simscape multibody folder call hexapod robot leg virtual reality allow make leg hexapod robot tool provide simscape multibody include visualization animation toolbox hexapod reality,"['hexapod', 'robot', 'claudio', 'urrea', 'eng', 'luis', 'valenzuelathe', 'main', 'file', 'compose', 'follow', 'three', 'folder', 'folder', 'call', 'hexapod', 'robot', 'simscape', 'multibody', 'virtual', 'reality', 'allow', 'make', 'displacement', 'hexapod', 'robot', 'simscape', 'multibody', 'well', 'virtual', 'reality', 'create', 'wrl', 'format', 'folder', 'call', 'hexapod', 'robot', 'leg', 'simscape', 'multibody', 'allow', 'make', 'leg', 'hexapod', 'robot', 'simscape', 'multibody', 'folder', 'call', 'hexapod', 'robot', 'leg', 'virtual', 'reality', 'allow', 'make', 'leg', 'hexapod', 'robot', 'tool', 'provide', 'simscape', 'multibody', 'include', 'visualization', 'animation', 'toolbox', 'hexapod', 'reality']",0
1609,56355,"Mise en oeuvre de l'accÃ©lÃ©romÃ¨tre gyroscope numÃ©rique MPU 6050 sur Arduino Mega<p>Mise en Åuvre de l'accÃ©lÃ©romÃ¨tre gyroscope numÃ©rique MPU 6050 sur Arduino Mega 2560Initialisation et exploitation avec Stateflow</p>2560,6050,accelerometre,arduino,gyroscope,mega,simulink,stateflow",17,0,3,2,20,mise oeuvre accÃ©lÃ©romÃ¨tre gyroscope numÃ©rique mpu sur arduino megamise Åuvre accÃ©lÃ©romÃ¨tre gyroscope numÃ©rique mpu sur arduino mega initialisation exploitation avec stateflow,"['mise', 'oeuvre', 'accÃ©lÃ©romÃ¨tre', 'gyroscope', 'numÃ©rique', 'mpu', 'sur', 'arduino', 'megamise', 'Åuvre', 'accÃ©lÃ©romÃ¨tre', 'gyroscope', 'numÃ©rique', 'mpu', 'sur', 'arduino', 'mega', 'initialisation', 'exploitation', 'avec', 'stateflow']",8
1610,56358,"Mise en oeuvre de l'afficheur matriciel bi couleur 8x8 avec son dÃ©codeur I2C<p>Mise en Åuvre de l'afficheur matriciel bi couleur 8x8 avec son dÃ©codeur I2C et Stateflow.ascii.mat contient les matrices des caractÃ¨res ASCII</p>2560,adafruit,arduino,bicolor,hardware,i2c,led,matrix,mega,pixel,simulink,stateflow",17,0,3,2,18,mise oeuvre afficheur matriciel couleur avec son dÃ©codeur cmise Åuvre afficheur matriciel couleur avec son dÃ©codeur stateflow ascii mat contient les matrix caractÃ¨res ascii,"['mise', 'oeuvre', 'afficheur', 'matriciel', 'couleur', 'avec', 'son', 'dÃ©codeur', 'cmise', 'Åuvre', 'afficheur', 'matriciel', 'couleur', 'avec', 'son', 'dÃ©codeur', 'stateflow', 'ascii', 'mat', 'contient', 'les', 'matrix', 'caractÃ¨res', 'ascii']",8
1611,56359,"Mise en oeuvre du capteur de pression BMP180 (GY68) compatible avec BMP85<p>Mise en oeuvre du capteur de pression BMP180 (GY68) compatible avec BMP85 avec une carte Arduino Mega 2560 et Stateflow. Fichier de desciptions et d'explications inclus.</p>2560,arduino,bmp180,bosch,digital,hardware,i2c,mega,pressure,sensor,stateflow",17,0,3,3,19,mise oeuvre capteur pression bmp compatible avec bmp mise oeuvre capteur pression bmp compatible avec bmp avec une carte arduino mega stateflow fichier desciptions explication inclus arduinobmp,"['mise', 'oeuvre', 'capteur', 'pression', 'bmp', 'compatible', 'avec', 'bmp', 'mise', 'oeuvre', 'capteur', 'pression', 'bmp', 'compatible', 'avec', 'bmp', 'avec', 'une', 'carte', 'arduino', 'mega', 'stateflow', 'fichier', 'desciptions', 'explication', 'inclus', 'arduinobmp']",8
1612,56377,"PV system with Buck Boost based MPPT System<p>From the system one can observe the P and O based MPPT for Buck Boost converter for PV system.</p>buck boost,energy,power electronics,pv,power_conversion_control,power_electronics_control",96,5,3,0,107,buck boost base mppt systemfrom one observe base mppt buck boost converter buck conversion controlpower electronics control,"['buck', 'boost', 'base', 'mppt', 'systemfrom', 'one', 'observe', 'base', 'mppt', 'buck', 'boost', 'converter', 'buck', 'conversion', 'controlpower', 'electronics', 'control']",1
1613,56429,"the mdl file runs different output voltage values<p>The system has controller. Assume that, the customer wants different output voltages. For example, for [0 5] interval, output voltage 10 V,  for [5  15]  interval output voltage 20 V etc...</p>control design,power_conversion_control,power_electronics_control",47,7,4,0,42,mdl file run different output voltage valuesthe controller assume customer want different output voltage example interval output voltage interval output voltage etc control designpower conversion controlpower electronics control,"['mdl', 'file', 'run', 'different', 'output', 'voltage', 'valuesthe', 'controller', 'assume', 'customer', 'want', 'different', 'output', 'voltage', 'example', 'interval', 'output', 'voltage', 'interval', 'output', 'voltage', 'etc', 'control', 'designpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1614,56430,The circuit is  a CUK CONVERTER<p>The circuit produces different output voltages you want. Output voltages can be lower or higher from the input voltages. The circuit uses P controller.</p>power electronics,42,1,1,0,46,circuit cuk converterthe circuit produce different output voltage want output voltage low high input voltage circuit controller power electronics,"['circuit', 'cuk', 'converterthe', 'circuit', 'produce', 'different', 'output', 'voltage', 'want', 'output', 'voltage', 'low', 'high', 'input', 'voltage', 'circuit', 'controller', 'power', 'electronics']",3
1615,56431,"full bridge bipolar pwm dc dc_converter drives dc motor with different output voltages<p>If you want to control the dc motor using full bridge bipolar pwm dc dc_converter, the simulink circit is useful for an engineer.</p>power electronics,electric_motor_control,power_conversion_control,power_electronics_control",38,1,1,0,45,full bridge bipolar pwm converter drive motor different output voltagesif want control motor full bridge bipolar pwm converter circit useful engineer power motor controlpower conversion controlpower electronics control,"['full', 'bridge', 'bipolar', 'pwm', 'converter', 'drive', 'motor', 'different', 'output', 'voltagesif', 'want', 'control', 'motor', 'full', 'bridge', 'bipolar', 'pwm', 'converter', 'circit', 'useful', 'engineer', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1616,56440,"This block is used for  machine modelling analysis<p>This block is used for  machine modelling analysis, and power system also</p>conversion,measurement,simulation,simulink",18,2,2,0,19,block machine analysisthis block machine analysis power,"['block', 'machine', 'analysisthis', 'block', 'machine', 'analysis', 'power']",7
1617,56448,"Particle swarm based repetitive spline compensator in two different arrangements is demonstrated.<p>Particle swarm based repetitive spline compensator for precision position control is proposed here. These models have been developed by my student Karol Basinski. Two different concepts can be investigated using this submission: a swarm plus spline based modification of the position controller input and a swarm plus spline based modification of the speed controller input. More details in ""Particle swarm based repetitive spline compensator for servo drives"" <a href=""https://doi.org/10.15199/48.2017.02.40"">https://doi.org/10.15199/48.2017.02.40</a> (the paper is openly accessible at <a href=""http://pe.org.pl/articles/2017/2/40.pdf"">http://pe.org.pl/articles/2017/2/40.pdf</a>).</p>dynamic optimization problem,ilc,iterative learning control,kessler,motion control,naslin,optimal control,particle swarm optimization,position control,precision control,pso,repetitive control,spline",313,12,2,0,317,particle swarm base repetitive spline compensator two different arrangement demonstrate particle swarm base repetitive spline compensator precision position control propose develop student karol basinski two different concept investigate submission swarm plus spline base modification position controller input swarm plus spline base modification speed controller input detail particle swarm base repetitive spline compensator servo drive doi org paper openly accessible http org article pdf dynamic optimization learn controlparticle swarm controlspline,"['particle', 'swarm', 'base', 'repetitive', 'spline', 'compensator', 'two', 'different', 'arrangement', 'demonstrate', 'particle', 'swarm', 'base', 'repetitive', 'spline', 'compensator', 'precision', 'position', 'control', 'propose', 'develop', 'student', 'karol', 'basinski', 'two', 'different', 'concept', 'investigate', 'submission', 'swarm', 'plus', 'spline', 'base', 'modification', 'position', 'controller', 'input', 'swarm', 'plus', 'spline', 'base', 'modification', 'speed', 'controller', 'input', 'detail', 'particle', 'swarm', 'base', 'repetitive', 'spline', 'compensator', 'servo', 'drive', 'doi', 'org', 'paper', 'openly', 'accessible', 'http', 'org', 'article', 'pdf', 'dynamic', 'optimization', 'learn', 'controlparticle', 'swarm', 'controlspline']",0
1618,56453,a simple SPWM<p>a simple SPWM</p>simulink,53,0,1,0,55,simple spwma simple,"['simple', 'spwma', 'simple']",0
1619,56456,"ac regulator model for matlab<p>ac regulator model for matlab</p>electric_motor_control,power_conversion_control,power_electronics_control,simulink",11,0,1,0,11,regulator matlabac regulator matlabelectric motor controlpower conversion controlpower electronics,"['regulator', 'matlabac', 'regulator', 'matlabelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1620,56459,Analisis del coeficiente de rigidez<p>Se calcula el desplazamiento y el comportamiento del sistema de un muelle</p>simulink,52,4,2,0,56,analisis del coeficiente rigidezse calcula desplazamiento comportamiento del sistema,"['analisis', 'del', 'coeficiente', 'rigidezse', 'calcula', 'desplazamiento', 'comportamiento', 'del', 'sistema']",2
1621,56467,"A fuel cell feeding step load is connected through a Boost converter with Voltage control.<p>Using Voltage control loop of Boost converter, the output voltage is controlled to 48v irrespective of the load changes</p>power electronics",37,1,2,0,45,fuel cell feed step load connect boost converter voltage control voltage control loop boost converter output voltage control irrespective load changespower electronics,"['fuel', 'cell', 'feed', 'step', 'load', 'connect', 'boost', 'converter', 'voltage', 'control', 'voltage', 'control', 'loop', 'boost', 'converter', 'output', 'voltage', 'control', 'irrespective', 'load', 'changespower', 'electronics']",1
1622,56474,"Fourier Analysis of a Single PWM Signal & a Particular Harmonic Mitigation<p>Description:  Here, Fourier Analysis of a Single PWM Signal &amp; a Particular Harmonic Mitigation for 1-ph inverter is studied.REF. Book:Power Electronics:Circuit, Devices and Application (3rd Ed.)ByM. H. RashidISBN no: 978-81-317-0246-8To run this file you need MATLAB 8.4 (R2014b) or higher version</p>fourier,pwm,electric_motor_control,power_conversion_control,power_electronics_control",25,1,2,0,29,fourier analysis single pwm signal particular harmonic fourier analysis single pwm signal amp particular harmonic mitigation inverter study ref book power electronics circuit device application bym rashidisbn run file need high motor controlpower conversion controlpower electronics control,"['fourier', 'analysis', 'single', 'pwm', 'signal', 'particular', 'harmonic', 'fourier', 'analysis', 'single', 'pwm', 'signal', 'amp', 'particular', 'harmonic', 'mitigation', 'inverter', 'study', 'ref', 'book', 'power', 'electronics', 'circuit', 'device', 'application', 'bym', 'rashidisbn', 'run', 'file', 'need', 'high', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1623,56482,"PV MPPT usning arduino board with  fuzzy  controller<p>PV MPPT using real time implementation  Arduino board with  fuzzy  controller</p>arduino,fuzzy,mppt,pv,real time,power_conversion_control,power_electronics_control",15,1,1,1,15,mppt usning arduino board fuzzy controllerpv mppt real time implementation arduino board fuzzy timepower conversion controlpower electronics control,"['mppt', 'usning', 'arduino', 'board', 'fuzzy', 'controllerpv', 'mppt', 'real', 'time', 'implementation', 'arduino', 'board', 'fuzzy', 'timepower', 'conversion', 'controlpower', 'electronics', 'control']",3
1624,56483,"fuzzy Logic control  based  speed control of DC motor using Arduino Mega 2560 Hardware<p>fuzzy Logic control  based  speed control of DC motor using Arduino Mega 2560 Hardware</p>dc motor,fuzzy,speed control,electric_motor_control,power_conversion_control,power_electronics_control",24,1,1,1,28,fuzzy logic control base speed control motor arduino mega hardwarefuzzy logic control base speed control motor arduino mega hardwaredc motorfuzzyspeed controlelectric motor controlpower conversion controlpower electronics control,"['fuzzy', 'logic', 'control', 'base', 'speed', 'control', 'motor', 'arduino', 'mega', 'hardwarefuzzy', 'logic', 'control', 'base', 'speed', 'control', 'motor', 'arduino', 'mega', 'hardwaredc', 'motorfuzzyspeed', 'controlelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1625,56506,"This model demonstrate the basic design and fundamental operation of aPure Sine Wave Off Grid Inverter<p>This model demonstrate the basic design and fundamental operation of aPure Sine Wave Off Grid inverter with the following specificationInput Voltage: 24V DCNominal Output Voltage: 230V ACRated Power Output: 1kVA See Linear Transformer BlockModulation Method: Sinusoidal PWM See PWM Generator BlockPower Frequency: 50Hz See PWM Generator BlockCarrier Frequency: 10kHz (200*50Hz) See PWM Generator BlockControl Method: PI Voltage Feedback ControlTHD: &lt; 1.2% at rated power outputTHD: &lt; 2.5% at 50% of rated power outputTHD: &lt; 5% at &gt; 25% of rated power outputFor simplicity the input DC link capacitor and output LC filter were </p>electric_motor_control,power_conversion_control,power_electronics_control,dcac converter,inverter,single phase inverter,sinusoidal pwm,spwm",25,0,1,0,30,demonstrate basic design fundamental operation apure sine wave grid inverterthis demonstrate basic design fundamental operation apure sine wave grid inverter follow voltage dcnominal output voltage acrated power output kva see linear transformer blockmodulation method sinusoidal pwm see pwm generator blockpower frequency see pwm generator blockcarrier frequency khz see pwm generator blockcontrol method voltage feedback controlthd rat power outputthd rat power outputthd rat power outputfor simplicity input link capacitor output filter electric motor controlpower conversion controlpower electronics controldcac phase pwmspwm,"['demonstrate', 'basic', 'design', 'fundamental', 'operation', 'apure', 'sine', 'wave', 'grid', 'inverterthis', 'demonstrate', 'basic', 'design', 'fundamental', 'operation', 'apure', 'sine', 'wave', 'grid', 'inverter', 'follow', 'voltage', 'dcnominal', 'output', 'voltage', 'acrated', 'power', 'output', 'kva', 'see', 'linear', 'transformer', 'blockmodulation', 'method', 'sinusoidal', 'pwm', 'see', 'pwm', 'generator', 'blockpower', 'frequency', 'see', 'pwm', 'generator', 'blockcarrier', 'frequency', 'khz', 'see', 'pwm', 'generator', 'blockcontrol', 'method', 'voltage', 'feedback', 'controlthd', 'rat', 'power', 'outputthd', 'rat', 'power', 'outputthd', 'rat', 'power', 'outputfor', 'simplicity', 'input', 'link', 'capacitor', 'output', 'filter', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldcac', 'phase', 'pwmspwm']",3
1626,56511,"Simulink Transfer Function with Coefficients Input<p>These simulink blocks allow to input the transfer function its coefficients for the first, second and third order systems. This is beneficial for time varying parameters systems. The idea is simple, just to break down the transfer function into smaller blocks. Each Block is validated by an attached example.</p>simulink transfer funciton,transfer function coefficients,transfer function with variable coefficients",113,7,3,0,138,transfer function coefficient inputthese block allow input transfer function coefficient first second third order beneficial time vary parameter idea simple break transfer function small block block validate attached example transfer function function variable coefficient,"['transfer', 'function', 'coefficient', 'inputthese', 'block', 'allow', 'input', 'transfer', 'function', 'coefficient', 'first', 'second', 'third', 'order', 'beneficial', 'time', 'vary', 'parameter', 'idea', 'simple', 'break', 'transfer', 'function', 'small', 'block', 'block', 'validate', 'attached', 'example', 'transfer', 'function', 'function', 'variable', 'coefficient']",7
1627,56514,"Simscape tutorial to evaluate Simscape by yourself<p>This tutorial is shown about the basic usage of Simscape. There are an explanation material (Japanese) and a sample model to evaluate Simscape by yourself. The example is the mechanical system model that consists of mass, spring, damper.æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscapeã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããSimscapeã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ããã¹ã»ããã»ãã³ãã¼ã§æ§æãããæ©æ¢°ç³»ã¢ãã«ã§ãã</p>physical modeling,simscape,simulation",17,3,2,0,14,simscape tutorial evaluate simscape yourselfthis tutorial show basic usage simscape explanation material japanese sample evaluate simscape example mechanical consist mass spring damper,"['simscape', 'tutorial', 'evaluate', 'simscape', 'yourselfthis', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'simscape', 'example', 'mechanical', 'consist', 'mass', 'spring', 'damper']",7
1628,56545,"Extremum Seeking Control Algorithm is employed to seek the max/min point of nonlinear functions<p>In this simulation a new MPPT approach called ""Extremum Seeking Control (ESC)"" has been employed to seek the peak power point of a PV system. According to various researchers, a well tuned ESC has a better efficiency compared to other MPPT algorithms like P&amp;O or IC. For more information regarding the operation of ESC please review1- H. Malek; S. Dadras; Y. Chen, ""Performance analysis of fractional order extremum seeking control"", ISA Transactions, Vol 16, doi: 10.1016/j.isatra.2016.02.024.2- H. Malek; Y. Chen, ""Fractional Order Extremum Seeking Control; Performance and Stability Analysis"", IEEE/ASME Transactions on Mechatronics, doi: 10.1109/TMECH.2016.2517621You can also check Extremum Seeking Control MPPT for PV and Fractional Order Extremum Seeking Control at fileexchange.</p>extremum seeking control,photovoltaic,power point tracker,renewable,power_conversion_control,power_electronics_control",193,8,2,0,247,extremum seek control algorithm employ seek max min point nonlinear functionsin new mppt approach call extremum seek control esc employ seek peak power point accord various researcher well tune esc good efficiency compare mppt algorithm like amp information regard operation esc please review malek dadras chen performance analysis fractional order extremum seek control isa transaction vol doi isatra malek chen fractional order extremum seek control performance stability analysis iee asme transaction mechatronics doi tmech also check extremum seek control mppt fractional order extremum seek control fileexchange extremum seek point conversion controlpower electronics control,"['extremum', 'seek', 'control', 'algorithm', 'employ', 'seek', 'max', 'min', 'point', 'nonlinear', 'functionsin', 'new', 'mppt', 'approach', 'call', 'extremum', 'seek', 'control', 'esc', 'employ', 'seek', 'peak', 'power', 'point', 'accord', 'various', 'researcher', 'well', 'tune', 'esc', 'good', 'efficiency', 'compare', 'mppt', 'algorithm', 'like', 'amp', 'information', 'regard', 'operation', 'esc', 'please', 'review', 'malek', 'dadras', 'chen', 'performance', 'analysis', 'fractional', 'order', 'extremum', 'seek', 'control', 'isa', 'transaction', 'vol', 'doi', 'isatra', 'malek', 'chen', 'fractional', 'order', 'extremum', 'seek', 'control', 'performance', 'stability', 'analysis', 'iee', 'asme', 'transaction', 'mechatronics', 'doi', 'tmech', 'also', 'check', 'extremum', 'seek', 'control', 'mppt', 'fractional', 'order', 'extremum', 'seek', 'control', 'fileexchange', 'extremum', 'seek', 'point', 'conversion', 'controlpower', 'electronics', 'control']",4
1629,56568,"Animation of a hydraulic pressure wave & Energy saving with VFD pump control<p>A MATLAB script executes a Simscape hydraulic model and animates the pressure shock wave transient with sudden valve closure. A multi-domain model (hydraulic-mechanic-electric) illustrates the advantage of variable frequency control  (VFD) for flow regulation. Energy saving at pump shaft is underlined.Execute the MATLAB scripts for pressure wave animation. Simulate the pump model directly from Simulink.</p>electric motor,industrial automation,variable speed control,water hammer",148,8,3,0,142,animation hydraulic pressure wave energy save vfd pump controla script execute simscape hydraulic animates pressure shock wave transient sudden valve closure multi domain hydraulic mechanic electric illustrate advantage variable frequency control vfd flow regulation energy save pump shaft underline execute script pressure wave animation pump directly electric motorindustrial speed controlwater hammer,"['animation', 'hydraulic', 'pressure', 'wave', 'energy', 'save', 'vfd', 'pump', 'controla', 'script', 'execute', 'simscape', 'hydraulic', 'animates', 'pressure', 'shock', 'wave', 'transient', 'sudden', 'valve', 'closure', 'multi', 'domain', 'hydraulic', 'mechanic', 'electric', 'illustrate', 'advantage', 'variable', 'frequency', 'control', 'vfd', 'flow', 'regulation', 'energy', 'save', 'pump', 'shaft', 'underline', 'execute', 'script', 'pressure', 'wave', 'animation', 'pump', 'directly', 'electric', 'motorindustrial', 'speed', 'controlwater', 'hammer']",5
1630,56634,matlab<p>control strategy</p>gui,467,25,5,0,502,matlabcontrol strategygui,"['matlabcontrol', 'strategygui']",2
1631,56697,"Regardless of the polarity of Input Signal, the Output is always positive_going<p>One of the applications of operational amplifier is to get absolute value of output whatever may be the polarity of applied input signal.</p>electronics,simulation",19,0,1,0,21,regardless polarity input signal output always positive goingone application operational amplifier get absolute value output whatever may polarity apply input signal,"['regardless', 'polarity', 'input', 'signal', 'output', 'always', 'positive', 'goingone', 'application', 'operational', 'amplifier', 'get', 'absolute', 'value', 'output', 'whatever', 'may', 'polarity', 'apply', 'input', 'signal']",4
1632,56743,"For AC Input, AC Output obtained with a closed loop gain,the phase shift being 180 deg.<p>AC Inverting Amplifier using op amp is shown here. The closed loop gain can be varied by changing the value of feedback resistor and there is always a phase shift of 180 degrees between AC Input and AC Output.</p>electronics,simulation,electric_motor_control,power_conversion_control,power_electronics_control",14,0,1,0,16,input output obtain closed loop gainthe phase shift deg invert amplifier amp show close loop gain vary change value feedback resistor always phase shift degree input output motor controlpower conversion controlpower electronics control,"['input', 'output', 'obtain', 'closed', 'loop', 'gainthe', 'phase', 'shift', 'deg', 'invert', 'amplifier', 'amp', 'show', 'close', 'loop', 'gain', 'vary', 'change', 'value', 'feedback', 'resistor', 'always', 'phase', 'shift', 'degree', 'input', 'output', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1633,56751,"AC Non_Inverting Amplifier using op amp with closed loop gain 10 and zero phase shift<p>Closed loop gain of Non_Inverting Amplifier is (1+Rf/R)=1+(90k/10k)=10. So applied input is 0.5 vots AC and AC output obtained is 5 volts. One can vary closed loop gain by changing the value of Rf feedback resistor. But AC Input and AC Output are in same phase.</p>electronics,simulation,electric_motor_control,power_conversion_control,power_electronics_control",14,0,1,0,16,non invert amplifier amp close loop gain zero phase shiftclosed loop gain non invert amplifier apply input vots output obtain volt one vary close loop gain change value feedback resistor input output phase motor controlpower conversion controlpower electronics control,"['non', 'invert', 'amplifier', 'amp', 'close', 'loop', 'gain', 'zero', 'phase', 'shiftclosed', 'loop', 'gain', 'non', 'invert', 'amplifier', 'apply', 'input', 'vots', 'output', 'obtain', 'volt', 'one', 'vary', 'close', 'loop', 'gain', 'change', 'value', 'feedback', 'resistor', 'input', 'output', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1634,56754,"Adder cum Subtractor using op amp is shown by choosing four DC Voltages.<p>Four DC Voltages namely V1,V2,V3 and V4 are chosen as input voltages applied and the DC output obtained is such that Vo=(V1+V2)-(V3+V4) with this op amp circuit. V1=3V , V2=4V , V3= 1V and V2=2V and output Vo=4V</p>electronics,simulation,power_conversion_control,power_electronics_control",16,0,1,0,18,adder cum subtractor amp show choose four voltage four voltage namely choose input voltage apply output obtain amp circuit output conversion controlpower electronics control,"['adder', 'cum', 'subtractor', 'amp', 'show', 'choose', 'four', 'voltage', 'four', 'voltage', 'namely', 'choose', 'input', 'voltage', 'apply', 'output', 'obtain', 'amp', 'circuit', 'output', 'conversion', 'controlpower', 'electronics', 'control']",3
1635,56755,"Differential amplifier using op amp with variable gain is shown.<p>The DC Ouput Vo of this op amp circuit is n(V2-V1) where n is the gain of Differential amplifier and V1 and V2 are the applied DC input voltages. Here n=5 and V1 =1 volt and V2 =2 volts. So DC output Vo = 5 volts</p>electronics,simulation,power_conversion_control,power_electronics_control",12,0,1,0,13,differential amplifier amp variable gain show ouput amp circuit gain differential amplifier apply input voltage volt volt output conversion controlpower electronics control,"['differential', 'amplifier', 'amp', 'variable', 'gain', 'show', 'ouput', 'amp', 'circuit', 'gain', 'differential', 'amplifier', 'apply', 'input', 'voltage', 'volt', 'volt', 'output', 'conversion', 'controlpower', 'electronics', 'control']",3
1636,56756,"Second order differential equation is solved with Analog Computer set up using op amps<p>Analog Computer is set up using op amps to solve second order differential equation m(d^2x/dt^2)+b(dx/dt)+kx=F(t) and x output is found.</p>electronics,simulation",20,0,1,0,19,second order differential equation solve analog computer set ampsanalog computer set amps solve second order differential equation output find,"['second', 'order', 'differential', 'equation', 'solve', 'analog', 'computer', 'set', 'ampsanalog', 'computer', 'set', 'amps', 'solve', 'second', 'order', 'differential', 'equation', 'output', 'find']",0
1637,56757,"Applied DC input voltages are added at the output with a phase shift of 180 deg<p>V1 and V2 are two DC voltages applied at the input and the op amp circuit gives DC output Vo= -(V1+V2), the minus sign shows that there is a phase shift of 180 degrees between the output and the inputs.</p>electronics,simulation,power_conversion_control,power_electronics_control",11,0,1,0,10,apply input voltage add output phase shift degv two voltage apply input amp circuit give output minus sign show phase shift degree output input conversion controlpower electronics control,"['apply', 'input', 'voltage', 'add', 'output', 'phase', 'shift', 'degv', 'two', 'voltage', 'apply', 'input', 'amp', 'circuit', 'give', 'output', 'minus', 'sign', 'show', 'phase', 'shift', 'degree', 'output', 'input', 'conversion', 'controlpower', 'electronics', 'control']",3
1638,56761,"The output gives addition of all input voltages multiplied by Gain along with phase shift of 180 deg<p>The output Vo of this op amp circuit gives the sum of all input voltages V1, V2 &amp; V3 multiplied by Gain (RF/R) along with phase shift of 180 degrees. That is Vo = -(RF/R)(V1+V2+V3)</p>electronics,simulation",13,0,1,0,15,output give addition input voltage multiply gain along phase shift degthe output amp circuit give sum input voltage amp multiply gain along phase shift degree,"['output', 'give', 'addition', 'input', 'voltage', 'multiply', 'gain', 'along', 'phase', 'shift', 'degthe', 'output', 'amp', 'circuit', 'give', 'sum', 'input', 'voltage', 'amp', 'multiply', 'gain', 'along', 'phase', 'shift', 'degree']",3
1639,56762,"Phase shift oscillator using op amp is constructed generating sine wave at the output<p>Phase shift oscillator using op amp is constructed and Sine wave output is displayed in the scope.</p>electronics,simulation",15,0,1,0,15,phase shift oscillator amp construct generate sine wave outputphase shift oscillator amp construct sine wave output display scope,"['phase', 'shift', 'oscillator', 'amp', 'construct', 'generate', 'sine', 'wave', 'outputphase', 'shift', 'oscillator', 'amp', 'construct', 'sine', 'wave', 'output', 'display', 'scope']",4
1640,56763,"Both sine wave and cosine wave outputs are obtained with this circuit using op amp<p>Quadrature Oscillator circuit using op amp provides generation of both sine wave and cosine wave</p>electronics,simulation",19,0,1,0,21,sine wave cosine wave output obtain circuit ampquadrature oscillator circuit amp provide generation sine wave cosine,"['sine', 'wave', 'cosine', 'wave', 'output', 'obtain', 'circuit', 'ampquadrature', 'oscillator', 'circuit', 'amp', 'provide', 'generation', 'sine', 'wave', 'cosine']",4
1641,56764,"Schmitt trigger circuit using op amp converts sine into square<p>Schmitt trigger circuit using op amp demonstrates how sine wave is converted square wave.</p>electronics,simulation",19,0,1,0,21,schmitt trigger circuit amp convert sine squareschmitt trigger circuit amp demonstrates sine wave convert square wave,"['schmitt', 'trigger', 'circuit', 'amp', 'convert', 'sine', 'squareschmitt', 'trigger', 'circuit', 'amp', 'demonstrates', 'sine', 'wave', 'convert', 'square', 'wave']",4
1642,56776,"Solution of Simultaneous equations using Analog Computer set up using op amps<p>Analog Computer using op amps is set up for solution of simultaneous equations  X+Y=22X+Y=2.5 and X Output and Y output are displayed as 0.5 and 1.5 as shown.</p>electronics,simulation",19,0,1,0,20,solution equation analog computer set ampsanalog computer amp set solution equation output output display show,"['solution', 'equation', 'analog', 'computer', 'set', 'ampsanalog', 'computer', 'amp', 'set', 'solution', 'equation', 'output', 'output', 'display', 'show']",7
1643,56777,"Subtractor output of op amp gives difference between two applied input voltages<p>If V1 and V2 are the applied inputs to op amp with V1 connected to inverting input and V2 to Non-inverting input,then output Vo is given by Vo = V2-V1, the difference between the two applied input voltages.</p>electronics,simulation",12,0,1,0,13,subtractor output amp give difference two apply input voltagesif apply input amp connect invert input non invert inputthen output give difference two apply input voltage,"['subtractor', 'output', 'amp', 'give', 'difference', 'two', 'apply', 'input', 'voltagesif', 'apply', 'input', 'amp', 'connect', 'invert', 'input', 'non', 'invert', 'inputthen', 'output', 'give', 'difference', 'two', 'apply', 'input', 'voltage']",4
1644,56778,"Full Adder block adds 3 bits at a time displaying Sum and Carry outputs.<p>Full Adder in Digital Electronics adds 3 bits A, B, C Inputs and displays Sum and Carry outputs simultaneously. Truth table for Full Adder can be verified</p>electronics,simulation",41,1,2,0,32,full adder block add bit time display sum carry output full adder digital electronics add bit input display sum carry output truth table full adder,"['full', 'adder', 'block', 'add', 'bit', 'time', 'display', 'sum', 'carry', 'output', 'full', 'adder', 'digital', 'electronics', 'add', 'bit', 'input', 'display', 'sum', 'carry', 'output', 'truth', 'table', 'full', 'adder']",4
1645,56781,"Transistor Hartley oscillator with LC feedback generates sine waves<p>Hartley oscillator using Transistor generates sine waves with the use of LC feedback and output demonstrating the sine pattern</p>electronics,simulation",17,0,1,0,19,transistor hartley oscillator feedback generate sine waveshartley oscillator transistor generates sine wave feedback output demonstrate sine,"['transistor', 'hartley', 'oscillator', 'feedback', 'generate', 'sine', 'waveshartley', 'oscillator', 'transistor', 'generates', 'sine', 'wave', 'feedback', 'output', 'demonstrate', 'sine']",4
1646,56782,"Transistor Colpitts oscillator with LC feedback generates sine waves<p>Colpitts oscillator using Transistor generates sine waves with the use of LC feedback and the output scope displays the sine wave pattern</p>electronics,simulation",17,0,1,0,17,transistor colpitts oscillator feedback generate sine wavescolpitts oscillator transistor generates sine wave feedback output scope display sine wave,"['transistor', 'colpitts', 'oscillator', 'feedback', 'generate', 'sine', 'wavescolpitts', 'oscillator', 'transistor', 'generates', 'sine', 'wave', 'feedback', 'output', 'scope', 'display', 'sine', 'wave']",4
1647,56786,"Tutorial on Simulink Data Type Propagation Engine<p>This tutorial will explain SimulinkÂ®âs data type propagation engine at an architectural level. It will be explained how SimulinkÂ® engine gives blocks the ability initialize data type choices, accept or reject data type proposals, and propagate additional data type choices. Simulinkâs mechanism for attempting to heuristically resolved underspecified situations will be briefly discussed. Please note: this tutorial is about how SimulinkÂ® engine interacts with blocks. It is NOT about detailed type propagation choices of specific blocks. But some simpler block behaviors will be described for illustration.</p>data type,propagation,simulink",55,0,1,0,41,tutorial data type propagation enginethis tutorial explain data type propagation engine architectural level explain engine give block ability initialize data type choice accept reject data type proposal propagate additional data type choice mechanism attempt heuristically resolve underspecified situation briefly discussed please note tutorial engine interacts block detail type propagation choice specific block simpler block behavior describe illustration data,"['tutorial', 'data', 'type', 'propagation', 'enginethis', 'tutorial', 'explain', 'data', 'type', 'propagation', 'engine', 'architectural', 'level', 'explain', 'engine', 'give', 'block', 'ability', 'initialize', 'data', 'type', 'choice', 'accept', 'reject', 'data', 'type', 'proposal', 'propagate', 'additional', 'data', 'type', 'choice', 'mechanism', 'attempt', 'heuristically', 'resolve', 'underspecified', 'situation', 'briefly', 'discussed', 'please', 'note', 'tutorial', 'engine', 'interacts', 'block', 'detail', 'type', 'propagation', 'choice', 'specific', 'block', 'simpler', 'block', 'behavior', 'describe', 'illustration', 'data']",0
1648,56805,"Construction of Decade Counter-Mod 10 using JK Flip Flops<p>For every application of ten clock input pulses, one output pulse is obtained serving as Decade Counter- Mod 10 Counter which has lot of applications in Electronics.</p>electronics,simulation",14,1,2,0,22,construction decade counter mod flip flopsfor every application ten clock input pulse one output pulse obtain serve decade counter mod counter lot application electronics,"['construction', 'decade', 'counter', 'mod', 'flip', 'flopsfor', 'every', 'application', 'ten', 'clock', 'input', 'pulse', 'one', 'output', 'pulse', 'obtain', 'serve', 'decade', 'counter', 'mod', 'counter', 'lot', 'application', 'electronics']",4
1649,56806,"Binary Counter-Mod 16 is constructed using JK Flip Flops<p>Using JK Flip Flops Binary Counter-Mod 10 Counter is constructed and one output pulse is obtained for the application of sixteen clock input pulses.</p>electronics,simulation",14,1,2,0,21,binary counter mod construct flip flopsusing flip flop binary counter mod counter construct one output pulse obtain application sixteen clock input pulse,"['binary', 'counter', 'mod', 'construct', 'flip', 'flopsusing', 'flip', 'flop', 'binary', 'counter', 'mod', 'counter', 'construct', 'one', 'output', 'pulse', 'obtain', 'application', 'sixteen', 'clock', 'input', 'pulse']",5
1650,56809,"Construction of Up-Down Counter using three JK Flip-Flops<p>Up-Down Counter using three JK Flip-Flops is constructed and verified its operation. For Up-Count mode, Count-up pin is high(1) while Count-down pin is low(0). For Down-Count mode,  Count-up pin is low(0) while Count-down pin is high(1).</p>electronics,simulation",18,1,2,0,27,construction counter three flip flopsup counter three flip flop construct verified operation count mode count pin high count pin low count mode count pin low count pin high,"['construction', 'counter', 'three', 'flip', 'flopsup', 'counter', 'three', 'flip', 'flop', 'construct', 'verified', 'operation', 'count', 'mode', 'count', 'pin', 'high', 'count', 'pin', 'low', 'count', 'mode', 'count', 'pin', 'low', 'count', 'pin', 'high']",5
1651,56822,"Rate Limiter Dynamic is used to convert sine wave input into triangular wave output.<p>Rate Limiter Dynamic is used to convert applied sine wave input into triangular wave output.The external signal Pin up sets the upper limit on the rising rate of the signal. The external signal Pin lo sets the lowerlimit on the falling rate of the signal.</p>electronics,simulation",6,0,1,0,6,rate limiter dynamic convert sine wave input triangular wave output rate limiter dynamic convert apply sine wave input triangular wave output external signal pin set upper limit rise rate signal external signal pin set lowerlimit fall rate signal,"['rate', 'limiter', 'dynamic', 'convert', 'sine', 'wave', 'input', 'triangular', 'wave', 'output', 'rate', 'limiter', 'dynamic', 'convert', 'apply', 'sine', 'wave', 'input', 'triangular', 'wave', 'output', 'external', 'signal', 'pin', 'set', 'upper', 'limit', 'rise', 'rate', 'signal', 'external', 'signal', 'pin', 'set', 'lowerlimit', 'fall', 'rate', 'signal']",0
1652,56824,"Quantization model is created using Quantizer block with Quantization interval 0.25<p>Quantization model is created using Quantizer block with Quantization interval 0.25. The applied input is sine wave with amplitude 1 and frequency 0.25 Hz and both input and output are displayed in the scope.</p>electronics,simulation",4,0,1,0,4,quantization create quantizer block quantization interval quantization create quantizer block quantization interval apply input sine wave amplitude frequency input output display scope,"['quantization', 'create', 'quantizer', 'block', 'quantization', 'interval', 'quantization', 'create', 'quantizer', 'block', 'quantization', 'interval', 'apply', 'input', 'sine', 'wave', 'amplitude', 'frequency', 'input', 'output', 'display', 'scope']",0
1653,56830,"PAM modulator and demodulator with AWGN channel<p>This model is a 8-ary modulator/demodulator based on Pulse Amplitude Modulation (PAM).You can change the Eb/N0 parameter in the AWGN channel block to see the effect of the channel noise on the demodulated signal. There is also a Matlab implementation, visit: <a href=""http://www.behindthesciences.com/signal-processing/pulse-amplitude-modulation-pam-matlab-tutorial"">http://www.behindthesciences.com/signal-processing/pulse-amplitude-modulation-pam-matlab-tutorial</a></p>awgn,communications,demodulation,digital,modulation,noise,signal processing",13,0,1,0,11,pam modulator demodulator awgn channelthis ary modulator demodulator base pulse amplitude modulation pam change parameter awgn channel block see effect channel noise demodulate signal also implementation visit http com signal processing pulse amplitude modulation pam processing,"['pam', 'modulator', 'demodulator', 'awgn', 'channelthis', 'ary', 'modulator', 'demodulator', 'base', 'pulse', 'amplitude', 'modulation', 'pam', 'change', 'parameter', 'awgn', 'channel', 'block', 'see', 'effect', 'channel', 'noise', 'demodulate', 'signal', 'also', 'implementation', 'visit', 'http', 'com', 'signal', 'processing', 'pulse', 'amplitude', 'modulation', 'pam', 'processing']",0
1654,56850,"Four-stage shift counter is constructed using clocked JK Flip Flops<p>Four-stage shift counter is constructed using clocked JK Flip Flops and their output waveforms are displayed showing how the shift operation works.</p>electronics,simulation",9,1,2,0,20,four stage shift counter construct clock flip flopsfour stage shift counter construct clock flip flop output waveform display show shift operation work,"['four', 'stage', 'shift', 'counter', 'construct', 'clock', 'flip', 'flopsfour', 'stage', 'shift', 'counter', 'construct', 'clock', 'flip', 'flop', 'output', 'waveform', 'display', 'show', 'shift', 'operation', 'work']",5
1655,56860,AGC FOR TWO AREA INTERCONNECTED SYSTEMS<p>load frequecy control</p>simulation,32,0,1,0,40,agc two area interconnect systemsload frequecy,"['agc', 'two', 'area', 'interconnect', 'systemsload', 'frequecy']",8
1656,56866,"Demonstration of Amplitude Modulation with modulating signal and modulated signal display<p>Amplitude Modulation is demonstrated with modulating signal and modulated signal displayed in the scope.Frequency of modulating signal is 100 Hz and Frequency of Carrier is 8000 Hz..</p>electronics,simulation",6,0,1,0,6,demonstration amplitude modulation modulate signal modulate signal modulation demonstrate modulate signal modulate signal displayed scope frequency modulate signal frequency carrier,"['demonstration', 'amplitude', 'modulation', 'modulate', 'signal', 'modulate', 'signal', 'modulation', 'demonstrate', 'modulate', 'signal', 'modulate', 'signal', 'displayed', 'scope', 'frequency', 'modulate', 'signal', 'frequency', 'carrier']",0
1657,56868,"Adaptive speed control in the PMSM drive for a non-stationary repetitive process using PSO<p>This program presents the adaptive speed control in the permanent synchronous motor (PMSM) drive for a non-stationary repetitive process using particle swarms. The implementation of the particle swarm optimizer (PSO) for the speed controller on-line optimization in PMSM drive system is proposed. The PSO is utilized for the purpose of optimizing in real-time the proportional and integral gains of the speed PI controller for the PMSM drive system with a variable moment of inertia. The variable evaporation factor is  introduced, instead of the classical evaporation constant for the PSO.</p>electric_motor_control,power_electronics_control,dynamic optimization,optimization,pmsm speed control,pso,repetitive control",393,26,5,0,501,adaptive speed control pmsm drive non stationary repetitive process psothis program present adaptive speed control permanent synchronous motor pmsm drive non stationary repetitive process particle swarm implementation particle swarm optimizer pso speed controller line optimization pmsm drive propose pso utilized purpose optimize real time proportional integral gain speed controller pmsm drive variable moment inertia variable evaporation factor introduce instead classical evaporation constant pso electric motor controlpower electronics controldynamic speed control,"['adaptive', 'speed', 'control', 'pmsm', 'drive', 'non', 'stationary', 'repetitive', 'process', 'psothis', 'program', 'present', 'adaptive', 'speed', 'control', 'permanent', 'synchronous', 'motor', 'pmsm', 'drive', 'non', 'stationary', 'repetitive', 'process', 'particle', 'swarm', 'implementation', 'particle', 'swarm', 'optimizer', 'pso', 'speed', 'controller', 'line', 'optimization', 'pmsm', 'drive', 'propose', 'pso', 'utilized', 'purpose', 'optimize', 'real', 'time', 'proportional', 'integral', 'gain', 'speed', 'controller', 'pmsm', 'drive', 'variable', 'moment', 'inertia', 'variable', 'evaporation', 'factor', 'introduce', 'instead', 'classical', 'evaporation', 'constant', 'pso', 'electric', 'motor', 'controlpower', 'electronics', 'controldynamic', 'speed', 'control']",4
1658,56895,"Computation of Displacement and Velocity of a Mechanical Translational System<p>Mechanical Translational System is described by m(d^2x/dt^2) = F(t)-B(dx/dt)-kx where m= 1 unit; F(t)= 25 units;B= 5; k= 25.The second order differential equation is solved for displacement and velocity.</p>electronics,simulation",9,0,1,0,10,computation displacement velocity mechanical translational translational describe unit unit second order differential equation solve displacement velocity,"['computation', 'displacement', 'velocity', 'mechanical', 'translational', 'translational', 'describe', 'unit', 'unit', 'second', 'order', 'differential', 'equation', 'solve', 'displacement', 'velocity']",5
1659,56899,"Study of RLC Circuit - AC by observing variation of current and voltage across each element<p>Study of RLC Circuit - AC by observing variation of current and voltage across R,L and C whose waveforms are displayed. R = 100 Ohms; L  = 1mH; and C = 0.01 Farad. Peak amplitude of applied AC sinusoidal input is 100 volts and frequency = 1 Hz</p>electronics,simulation,electric_motor_control,power_conversion_control,power_electronics_control",13,0,1,0,11,study rlc circuit observe variation current voltage across elementstudy rlc circuit observe variation current voltage across whose waveform display ohms farad peak amplitude apply sinusoidal input volt frequency motor controlpower conversion controlpower electronics control,"['study', 'rlc', 'circuit', 'observe', 'variation', 'current', 'voltage', 'across', 'elementstudy', 'rlc', 'circuit', 'observe', 'variation', 'current', 'voltage', 'across', 'whose', 'waveform', 'display', 'ohms', 'farad', 'peak', 'amplitude', 'apply', 'sinusoidal', 'input', 'volt', 'frequency', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1660,56914,"Triac<p>FunciÃ³n triac con tiristores</p>simulink,triac",19,0,1,0,28,triacfunciÃ³n triac con,"['triacfunciÃ³n', 'triac', 'con']",8
1661,56925,"3 Phase Inverter with Wye connected Load<p>3 Phase Inverter with Wye connected Load</p>inverter,power electronics,simulink",32,0,1,0,34,phase inverter wye connect load phase inverter wye connect,"['phase', 'inverter', 'wye', 'connect', 'load', 'phase', 'inverter', 'wye', 'connect']",1
1662,56954,"Astable Multivibrator using op amp is constructed and its square waveform is displayed.<p>Using op amp Astable Multivibrator is constructed and the circuit generates square wave thereby proving that no state is stable in this circuit. C = 0.05uF  and Feedback Resistor R = 10 k ohms.</p>electronics,simulation",14,1,2,0,12,astable multivibrator amp construct square waveform display amp astable multivibrator construct circuit generates square wave thereby prove state stable circuit feedback resistor ohm,"['astable', 'multivibrator', 'amp', 'construct', 'square', 'waveform', 'display', 'amp', 'astable', 'multivibrator', 'construct', 'circuit', 'generates', 'square', 'wave', 'thereby', 'prove', 'state', 'stable', 'circuit', 'feedback', 'resistor', 'ohm']",5
1663,56959,"HOW IT WORKS USING A DC MACHINE ,CHOPPER FED METHOD OF CONTROLLING A DC MOTOR<p>USE MATLAB SIMULINK,V</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",36,0,1,0,43,work machine chopper feed method control motoruse motor controlpower conversion controlpower electronics,"['work', 'machine', 'chopper', 'feed', 'method', 'control', 'motoruse', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1664,56961,"Bistable Multivibrator using transistors is constructed and waveform display is shown.<p>Bistable Multivibrator using transistors is constructed. This circuit has two stable states, being Q1 on and Q2 off; Q1 off and Q2 on. Second stable state is demonstrated in the shown display. To view the First stable state the connection terminal PIN is to be connected to BASE2.</p>electronics,simulation",22,0,1,0,23,bistable multivibrator transistor construct waveform display show bistable multivibrator transistor construct circuit two stable state second stable state demonstrate show display view first stable state connection terminal pin connect base,"['bistable', 'multivibrator', 'transistor', 'construct', 'waveform', 'display', 'show', 'bistable', 'multivibrator', 'transistor', 'construct', 'circuit', 'two', 'stable', 'state', 'second', 'stable', 'state', 'demonstrate', 'show', 'display', 'view', 'first', 'stable', 'state', 'connection', 'terminal', 'pin', 'connect', 'base']",0
1665,56970,"Monostable Multivibrator is constructed & its input and output waveforms are displayed.<p>Monostable Multivibrator using transistors is constructed &amp; its input and output waveforms are displayed. This circuit has only one stable state namely Q1 OFF &amp; Q2 ON. When external positive trigger pulse is applied, quasi stable state Q1 ON &amp; Q2 OFF exists temporarily and the circuit returns to its original permanent stable state.</p>electronics,simulation",23,0,1,0,22,monostable multivibrator construct input output waveform display monostable multivibrator transistor construct amp input output waveform display circuit one stable state namely amp external positive trigger pulse apply quasi stable state amp exist temporarily circuit return original permanent stable state,"['monostable', 'multivibrator', 'construct', 'input', 'output', 'waveform', 'display', 'monostable', 'multivibrator', 'transistor', 'construct', 'amp', 'input', 'output', 'waveform', 'display', 'circuit', 'one', 'stable', 'state', 'namely', 'amp', 'external', 'positive', 'trigger', 'pulse', 'apply', 'quasi', 'stable', 'state', 'amp', 'exist', 'temporarily', 'circuit', 'return', 'original', 'permanent', 'stable', 'state']",4
1666,56972,"Common Source Amplifier using JFET has been constructed and waveforms are displayed.<p>Common Source Amplifier using JFET has been constructed and its input and output waveforms are displayed. AC Input voltage applied is 1 volts and AC Output voltage is 10 volts so that Gain of JFET amplifier is 10.</p>electronics,simulation",20,0,1,0,21,common source amplifier jfet construct waveform displayed common source amplifier jfet construct input output waveform display input voltage apply volt output voltage volt gain jfet amplifier,"['common', 'source', 'amplifier', 'jfet', 'construct', 'waveform', 'displayed', 'common', 'source', 'amplifier', 'jfet', 'construct', 'input', 'output', 'waveform', 'display', 'input', 'voltage', 'apply', 'volt', 'output', 'voltage', 'volt', 'gain', 'jfet', 'amplifier']",4
1667,56973,"Phase shift oscillator using transistor is constructed and its sine wave output is displayed.<p>Phase shift oscillator using transistor is constructed and its sine wave output waveform is displayed in the scope.</p>electronics,simulation",18,0,1,0,18,phase shift oscillator transistor construct sine wave output display phase shift oscillator transistor construct sine wave output waveform display scope,"['phase', 'shift', 'oscillator', 'transistor', 'construct', 'sine', 'wave', 'output', 'display', 'phase', 'shift', 'oscillator', 'transistor', 'construct', 'sine', 'wave', 'output', 'waveform', 'display', 'scope']",4
1668,56975,"Triangular waveform generator using op amps is constructed and the waveform output is displayed.<p>Triangular waveform generator using op amps is constructed and the waveform output is displayed. First op amp generates square wave and the second op amp as integrator converts square wave into triangular wave.</p>electronics,simulation",13,0,1,0,10,triangular waveform generator amp construct waveform output display triangular waveform generator amp construct waveform output display first amp generates square wave second amp integrator convert square wave triangular wave,"['triangular', 'waveform', 'generator', 'amp', 'construct', 'waveform', 'output', 'display', 'triangular', 'waveform', 'generator', 'amp', 'construct', 'waveform', 'output', 'display', 'first', 'amp', 'generates', 'square', 'wave', 'second', 'amp', 'integrator', 'convert', 'square', 'wave', 'triangular', 'wave']",4
1669,56998,"Model of a wound rotor induction machine with accessible stator and rotor windings<p>This model solves the main problem of the current models of wound-rotor induction machine, as it allow the connection of the machine in series to inductors. Moreover, the model allow the choice of the turns ratio and the stator and rotor winding factors, which is not possible in the standard model.</p>electric machines",270,2,3,0,307,wound rotor induction machine accessible stator rotor windingsthis solve main problem current wound rotor induction machine allow connection machine series inductor moreover allow choice turn ratio stator rotor wind factor possible standard electric machine,"['wound', 'rotor', 'induction', 'machine', 'accessible', 'stator', 'rotor', 'windingsthis', 'solve', 'main', 'problem', 'current', 'wound', 'rotor', 'induction', 'machine', 'allow', 'connection', 'machine', 'series', 'inductor', 'moreover', 'allow', 'choice', 'turn', 'ratio', 'stator', 'rotor', 'wind', 'factor', 'possible', 'standard', 'electric', 'machine']",4
1670,57059,Convert incoming signal's unit to the required output units.<p>The block can be used to convert the units of the incoming signal to the required units at the output. Provided the user knows the units of the incoming signal.Note: The block will work in Matlab 2014b and above.</p>simulink,10,1,2,0,8,convert incoming signal unit require output unit block convert unit incoming signal require unit output provide user know unit incoming signal note block work,"['convert', 'incoming', 'signal', 'unit', 'require', 'output', 'unit', 'block', 'convert', 'unit', 'incoming', 'signal', 'require', 'unit', 'output', 'provide', 'user', 'know', 'unit', 'incoming', 'signal', 'note', 'block', 'work']",7
1671,57061,"trouble converging<p>Je suis un Ã©tudiant qui cherche pour mon projet final de bac Ã  rÃ©aliser une simulation pour connaitre en combien de temps mon panneau solaire rechargerais mes 3 batteries.Merci d'avance.</p>battery_system_management,power_electronics_control,simulation",14,0,1,0,16,trouble convergingje suis Ã©tudiant qui cherche pour mon projet final bac rÃ©aliser une pour connaitre combien temp mon panneau solaire rechargerais battery merci avance battery managementpower electronics,"['trouble', 'convergingje', 'suis', 'Ã©tudiant', 'qui', 'cherche', 'pour', 'mon', 'projet', 'final', 'bac', 'rÃ©aliser', 'une', 'pour', 'connaitre', 'combien', 'temp', 'mon', 'panneau', 'solaire', 'rechargerais', 'battery', 'merci', 'avance', 'battery', 'managementpower', 'electronics']",8
1672,57065,"Compute power factor and phase angle of AC circuit voltage-current pair at fundamental frequency.<p>The computation is based on Power block and Complex number function block.For the first cycle of simulation, the outputs are held constant to the powers computed for the Voltage initial input and Current initial input parameters.</p>phase angle,power factor",17,1,2,0,20,compute power factor phase angle circuit voltage current pair fundamental frequency computation base power block complex number function block first cycle output hold constant power compute voltage initial input current initial input parameter phase anglepower factor,"['compute', 'power', 'factor', 'phase', 'angle', 'circuit', 'voltage', 'current', 'pair', 'fundamental', 'frequency', 'computation', 'base', 'power', 'block', 'complex', 'number', 'function', 'block', 'first', 'cycle', 'output', 'hold', 'constant', 'power', 'compute', 'voltage', 'initial', 'input', 'current', 'initial', 'input', 'parameter', 'phase', 'anglepower', 'factor']",3
1673,57087,Modular multilevel converter<p>This circuit gives to the reader for understanding the concept of modular multilevel converter.</p>power electronics,189,18,3,0,211,modular multilevel converterthis circuit give reader understand concept modular multilevel converter power electronics,"['modular', 'multilevel', 'converterthis', 'circuit', 'give', 'reader', 'understand', 'concept', 'modular', 'multilevel', 'converter', 'power', 'electronics']",3
1674,57148,"Buck-Boost Converter is implemented in Simulink , in the form of its State-Space Model<p>You might have to build physical model of power converters in Simulink including transistors, inductors and capacitors to simulate Power Converters. This is a new and advanced approach of simulation of the power converters. Here state space model of the BUCK-BOOST Power converter is implemented in matlab . You can modify the values of source voltage, capacitor and inductor easily by clicking on matlab function block in simulink. This model accepts mathematical value of input ""U"" , duty ratio, which lies in between 0 and 1. This file works in Matlab 2016 version, as it is tested to be 100 percent working in latest version of matlab.</p>power_conversion_control,power_electronics_control,control design,dcdc,power converters,power electronics",7,1,1,0,7,buck boost converter implement form state space modelyou might build physical power converter include transistor inductor capacitor power converter new advanced approach power converter state space buck boost power converter implement modify value source voltage capacitor inductor easily click function block accepts mathematical value input duty ratio lie file work version test percent work late version power conversion controlpower electronics controlcontrol designdcdcpower converterspower electronics,"['buck', 'boost', 'converter', 'implement', 'form', 'state', 'space', 'modelyou', 'might', 'build', 'physical', 'power', 'converter', 'include', 'transistor', 'inductor', 'capacitor', 'power', 'converter', 'new', 'advanced', 'approach', 'power', 'converter', 'state', 'space', 'buck', 'boost', 'power', 'converter', 'implement', 'modify', 'value', 'source', 'voltage', 'capacitor', 'inductor', 'easily', 'click', 'function', 'block', 'accepts', 'mathematical', 'value', 'input', 'duty', 'ratio', 'lie', 'file', 'work', 'version', 'test', 'percent', 'work', 'late', 'version', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designdcdcpower', 'converterspower', 'electronics']",3
1675,57169,"Yet another demonstration for my students.<p>Some parts are commented in Polish. Sorry for that :) You might be also interested in <a href=""http://www.mathworks.com/matlabcentral/fileexchange/57352-extended-luenberger-observer-for-speed-sensorless-ac-motor-drive"">http://www.mathworks.com/matlabcentral/fileexchange/57352-extended-luenberger-observer-for-speed-sensorless-ac-motor-drive</a> .</p>control,dc drive,dc motor,luenberger observer,sensorless,state observer,electric_motor_control,power_conversion_control,power_electronics_control",24,0,1,0,28,yet another demonstration student part comment polish sorry might also interested http mathworks com matlabcentral fileexchange extend luenberger observer speed sensorless motor drive controldc drivedc motorluenberger motor controlpower conversion controlpower electronics control,"['yet', 'another', 'demonstration', 'student', 'part', 'comment', 'polish', 'sorry', 'might', 'also', 'interested', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'extend', 'luenberger', 'observer', 'speed', 'sensorless', 'motor', 'drive', 'controldc', 'drivedc', 'motorluenberger', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1676,57179,"Demo files from the Building Smart Robots with Simulink and Arduino Webinar<p>In this webinar we will use Simulink and Stateflow to build an Arduino-based robot that is able to detect obstacles and neighboring robots, and then automatically brake or alter speed to avoid collisions. We will highlight some of the key benefits of using Simulink for Arduino programming, including the ability to:1) Simulate robot behavior before implementing the algorithms on hardware.2) Define different states (cruise, start following leader and brake) using Stateflow and program the robot to behave accordingly.3) Interactively tune and optimize these algorithms as they run on the hardware device.We will also discuss MATLAB and Simulink connectivity with other hardware platforms that are popular for educational and hobbyist use, such as Raspberry Pi and LEGO.</p>robotics",164,33,3,13,151,demo file build smart robot arduino webinarin webinar stateflow build arduino base robot able detect obstacle neighbor robot automatically brake alter speed avoid collision highlight key benefit arduino program include ability robot behavior implement algorithm hardware define different state cruise start follow leader brake stateflow program robot behave accordingly interactively tune optimize algorithms run hardware device also discuss connectivity hardware platform popular educational hobbyist raspberry lego robotics,"['demo', 'file', 'build', 'smart', 'robot', 'arduino', 'webinarin', 'webinar', 'stateflow', 'build', 'arduino', 'base', 'robot', 'able', 'detect', 'obstacle', 'neighbor', 'robot', 'automatically', 'brake', 'alter', 'speed', 'avoid', 'collision', 'highlight', 'key', 'benefit', 'arduino', 'program', 'include', 'ability', 'robot', 'behavior', 'implement', 'algorithm', 'hardware', 'define', 'different', 'state', 'cruise', 'start', 'follow', 'leader', 'brake', 'stateflow', 'program', 'robot', 'behave', 'accordingly', 'interactively', 'tune', 'optimize', 'algorithms', 'run', 'hardware', 'device', 'also', 'discuss', 'connectivity', 'hardware', 'platform', 'popular', 'educational', 'hobbyist', 'raspberry', 'lego', 'robotics']",0
1677,57190,"Simscape Multibody tutorial to evaluate Simscape Multibody by yourself<p>This tutorial is shown about the basic usage of Simscape Multibody. There are an explanation material (Japanese) and a sample model to evaluate Simscape Multibody by yourself. The example is the 3D mechanical system model of simple pendulum. Then, if you want to know the overview of Simscape Multibody, please see the following short movie.æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Multibodyã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããSimscape Multibodyã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ãåæ¯ãå­ã®3Dæ©æ¢°ç³»ã¢ãã«ã§ããã¾ããSimscape Multibodyã®æ¦è¦ã«ã¤ãã¦ã¯ãæ¬¡ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããShort movieï¼ã·ã§ã¼ãã ã¼ãã¼ï¼âSimscape Multibody Overview (Simscape Multibodyæ¦è¦)â (1:50)<a href=""http://jp.mathworks.com/videos/simscape-multibody-overview-117986.htmlRelated"">http://jp.mathworks.com/videos/simscape-multibody-overview-117986.htmlRelated</a> tutorialï¼é¢é£ãã¥ã¼ããªã¢ã«ï¼ âSimscape ãã¥ã¼ããªã¢ã« (Simscape Tutorial)â<a href=""http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-"">http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-</a></p>physical modeling,simscape,simscape multibody,simulation",41,6,2,3,29,simscape multibody tutorial evaluate simscape multibody yourselfthis tutorial show basic usage simscape multibody explanation material japanese sample evaluate simscape multibody example mechanical simple pendulum want know overview simscape multibody please see follow short movie multibody overview simscape http mathworks com videos simscape multibody overview htmlrelated simscape ãã¥ã¼ããªã¢ã« simscape tutorial http mathworks com matlabcentral fileexchange simscape simscape tutorial physical,"['simscape', 'multibody', 'tutorial', 'evaluate', 'simscape', 'multibody', 'yourselfthis', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'multibody', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'simscape', 'multibody', 'example', 'mechanical', 'simple', 'pendulum', 'want', 'know', 'overview', 'simscape', 'multibody', 'please', 'see', 'follow', 'short', 'movie', 'multibody', 'overview', 'simscape', 'http', 'mathworks', 'com', 'videos', 'simscape', 'multibody', 'overview', 'htmlrelated', 'simscape', 'ãã¥ã¼ããªã¢ã«', 'simscape', 'tutorial', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'simscape', 'tutorial', 'physical']",7
1678,57191,"Simscape Driveline tutorial to evaluate Simscape Driveline by yourself<p>This tutorial is shown about the basic usage of Simscape Driveline. There are an explanation material (Japanese) and a sample model to evaluate Simscape Driveline by yourself. The example is the 1D vehicle model that includes power transmission mechanism. Then, if you want to know the overview of Simscape Driveline, please see the following short movie.æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Drivelineã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããSimscape Drivelineã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ãååä¼éæ©æ§ãå«ã1Dè»ä¸¡ã¢ãã«ã§ããã¾ããSimscape Drivelineã®æ¦è¦ã«ã¤ãã¦ã¯ãæ¬¡ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããShort movieï¼ã·ã§ã¼ãã ã¼ãã¼ï¼âSimscape Driveline Overview (Simscape Drivelineæ¦è¦)â (1:57)<a href=""http://jp.mathworks.com/videos/simscape-driveline-overview-117981.htmlRelated"">http://jp.mathworks.com/videos/simscape-driveline-overview-117981.htmlRelated</a> tutorialï¼é¢é£ãã¥ã¼ããªã¢ã«ï¼ âSimscape ãã¥ã¼ããªã¢ã« (Simscape Tutorial)â<a href=""http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-"">http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-</a></p>physical modeling,simscape,simscape driveline,simulation",18,2,2,0,14,simscape driveline tutorial evaluate simscape driveline yourselfthis tutorial show basic usage simscape driveline explanation material japanese sample evaluate simscape driveline example vehicle include power transmission mechanism want know overview simscape driveline please see follow short movie driveline overview simscape http mathworks com videos simscape driveline overview htmlrelated simscape ãã¥ã¼ããªã¢ã« simscape tutorial http mathworks com matlabcentral fileexchange simscape simscape tutorial physical,"['simscape', 'driveline', 'tutorial', 'evaluate', 'simscape', 'driveline', 'yourselfthis', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'driveline', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'simscape', 'driveline', 'example', 'vehicle', 'include', 'power', 'transmission', 'mechanism', 'want', 'know', 'overview', 'simscape', 'driveline', 'please', 'see', 'follow', 'short', 'movie', 'driveline', 'overview', 'simscape', 'http', 'mathworks', 'com', 'videos', 'simscape', 'driveline', 'overview', 'htmlrelated', 'simscape', 'ãã¥ã¼ããªã¢ã«', 'simscape', 'tutorial', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'simscape', 'tutorial', 'physical']",7
1679,57193,"Simscape Electronics tutorial to evaluate Simscape Electronics by yourself<p>This tutorial is shown about the basic usage of Simscape Electronics. There are an explanation material (Japanese) and a sample model to evaluate Simscape Electronics by yourself. The example is the electrical and mechanical model of DC brush motor. Then, if you want to know the overview of Simscape Electronics, please see the following short movie.æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Electronicsã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããSimscape Electronicsã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ããã©ã·ä»ãDCã¢ã¼ã¿ã®é»æ°/æ©æ¢°ç³»ã®ã¢ãã«ã§ããã¾ããSimscape Electronicsã®æ¦è¦ã«ã¤ãã¦ã¯ãæ¬¡ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããShort movieï¼ã·ã§ã¼ãã ã¼ãã¼ï¼âSimscape Electronics Overview (Simscape Electronicsæ¦è¦)â (2:03)<a href=""http://jp.mathworks.com/videos/simscape-electronics-overview-117984.htmlRelated"">http://jp.mathworks.com/videos/simscape-electronics-overview-117984.htmlRelated</a> tutorialï¼é¢é£ãã¥ã¼ããªã¢ã«ï¼ âSimscape ãã¥ã¼ããªã¢ã« (Simscape Tutorial)â<a href=""http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-"">http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-</a></p>physical modeling,simscape,simscape electronics,simulation,electric_motor_control,power_conversion_control,power_electronics_control",15,2,2,0,18,simscape electronics tutorial evaluate simscape electronics yourselfthis tutorial show basic usage simscape electronics explanation material japanese sample evaluate simscape electronics example electrical mechanical brush motor want know overview simscape electronics please see follow short movie electronics overview simscape http mathworks com videos simscape electronics overview htmlrelated simscape ãã¥ã¼ããªã¢ã« simscape tutorial http mathworks com matlabcentral fileexchange simscape simscape tutorial physical motor controlpower conversion controlpower electronics control,"['simscape', 'electronics', 'tutorial', 'evaluate', 'simscape', 'electronics', 'yourselfthis', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'electronics', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'simscape', 'electronics', 'example', 'electrical', 'mechanical', 'brush', 'motor', 'want', 'know', 'overview', 'simscape', 'electronics', 'please', 'see', 'follow', 'short', 'movie', 'electronics', 'overview', 'simscape', 'http', 'mathworks', 'com', 'videos', 'simscape', 'electronics', 'overview', 'htmlrelated', 'simscape', 'ãã¥ã¼ããªã¢ã«', 'simscape', 'tutorial', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'simscape', 'tutorial', 'physical', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",7
1680,57245,"there are 4 pv cell in panel.<p>i have designed it for ongrid solar system.</p>matlab,simulation,simulink",9,1,2,0,10,cell panel design ongrid solar,"['cell', 'panel', 'design', 'ongrid', 'solar']",4
1681,57277,controlador pendulo<p>controlador pendulo</p>matrix,31,1,2,0,40,controlador pendulomatrix,"['controlador', 'pendulomatrix']",2
1682,57293,"Different Multilevel Converter Topologies for High Power Photovoltaic Application.<p>Six multilevel converter topologies of NPC, Z-source, QuasiZ-source, Cascaded, Capacitor clamped and Hybrid cascaded NPC have been investigated and compared in terms of their THD, efficiency, number of required semiconductors and other important characteristics in order to find the most suitable topology, which is appropriate to use in PV applications. The results prove that quasi Z-source converter has better performance in comparison with other types.If you are using this package in your research or teaching, please include explicit mention of the reference paper:__Reference:A. Delavari, I. Kamwa, A. Zabihinejad, ""Different Multilevel Converter Topologies for High Power Photovoltaic Application,"" Power Electronics, Drives Systems and Technologies Conference (PEDSTC2016 ).<a href=""http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7556897"">http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7556897</a></p>power_conversion_control,power_electronics_control,paper,simulation",1371,45,3,0,1516,different multilevel converter topology high power photovoltaic application six multilevel converter topology npc source quasiz source cascade capacitor clamp hybrid cascade npc investigate compare term thd efficiency number require semiconductor important characteristic order find suitable topology appropriate application result prove quasi source converter well performance comparison type package research teach please include explicit mention reference paper reference delavari kamwa zabihinejad different multilevel converter topology high power photovoltaic application power electronics drive technology conference pedstc http ieexplore iee org stamp stamp jsp arnumber power conversion controlpower electronics,"['different', 'multilevel', 'converter', 'topology', 'high', 'power', 'photovoltaic', 'application', 'six', 'multilevel', 'converter', 'topology', 'npc', 'source', 'quasiz', 'source', 'cascade', 'capacitor', 'clamp', 'hybrid', 'cascade', 'npc', 'investigate', 'compare', 'term', 'thd', 'efficiency', 'number', 'require', 'semiconductor', 'important', 'characteristic', 'order', 'find', 'suitable', 'topology', 'appropriate', 'application', 'result', 'prove', 'quasi', 'source', 'converter', 'well', 'performance', 'comparison', 'type', 'package', 'research', 'teach', 'please', 'include', 'explicit', 'mention', 'reference', 'paper', 'reference', 'delavari', 'kamwa', 'zabihinejad', 'different', 'multilevel', 'converter', 'topology', 'high', 'power', 'photovoltaic', 'application', 'power', 'electronics', 'drive', 'technology', 'conference', 'pedstc', 'http', 'ieexplore', 'iee', 'org', 'stamp', 'stamp', 'jsp', 'arnumber', 'power', 'conversion', 'controlpower', 'electronics']",4
1683,57305,"ieee 14 bus system<p>in this model upfc controller block is exchange with VSCS based upfc controller. please show me the active and reactive power and voltage profile will be improve</p>14 bus,ieee 14 bus,ieee bus,simulation",121,1,2,0,117,iee bus systemin upfc controller block exchange vscs base upfc controller please show active reactive power voltage profile improve busiee busiee,"['iee', 'bus', 'systemin', 'upfc', 'controller', 'block', 'exchange', 'vscs', 'base', 'upfc', 'controller', 'please', 'show', 'active', 'reactive', 'power', 'voltage', 'profile', 'improve', 'busiee', 'busiee']",4
1684,57319,"Yet another demonstration for my students.<p>Some parts are commented in Polish. Sorry for that :) If you need a similar solution for an AC drive please see <a href=""http://ufnalski.edu.pl/dissertation/"">http://ufnalski.edu.pl/dissertation/</a> -- also in Polish :) You might be also interested in <a href=""http://www.mathworks.com/matlabcentral/fileexchange/57351-extended-kalman-filter-for-speed-sensorless-ac-motor-drive"">http://www.mathworks.com/matlabcentral/fileexchange/57351-extended-kalman-filter-for-speed-sensorless-ac-motor-drive</a> .</p>control,dc drive,dc motor,kalman filter,sensorless,state observer,electric_motor_control,power_conversion_control,power_electronics_control",25,0,1,0,25,yet another demonstration student part comment polish sorry need similar solution drive please see http ufnalski edu dissertation also polish might also interested http mathworks com matlabcentral fileexchange extend kalman filter speed sensorless motor drive controldc drivedc motorkalman motor controlpower conversion controlpower electronics control,"['yet', 'another', 'demonstration', 'student', 'part', 'comment', 'polish', 'sorry', 'need', 'similar', 'solution', 'drive', 'please', 'see', 'http', 'ufnalski', 'edu', 'dissertation', 'also', 'polish', 'might', 'also', 'interested', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'extend', 'kalman', 'filter', 'speed', 'sensorless', 'motor', 'drive', 'controldc', 'drivedc', 'motorkalman', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1685,57343,"Simscape Power Systems tutorial to evaluate Simscape Power Systems by yourself<p>This tutorial is shown about the basic usage of Simscape Power Systems. There are an explanation material (Japanese) and a sample model to evaluate Simscape Power Systems by yourself. The example is the electrical and mechanical model of induction motor drive system. Then, if you want to know the overview of Simscape Power Systems, please see the following short movie.æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Power Systemsã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããSimscape Power Systemsã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ãèªå°ã¢ã¼ã¿é§åè£ç½®ã®é»æ°/æ©æ¢°ç³»ã®ã¢ãã«ã§ããã¾ããSimscape Power Systemsã®æ¦è¦ã«ã¤ãã¦ã¯ãæ¬¡ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããShort movieï¼ã·ã§ã¼ãã ã¼ãã¼ï¼âSimscape Power Systems Overview (Simscape Power Systemsæ¦è¦)â (2:26)<a href=""http://jp.mathworks.com/videos/simscape-power-systems-overview-117987.htmlRelated"">http://jp.mathworks.com/videos/simscape-power-systems-overview-117987.htmlRelated</a> tutorialï¼é¢é£ãã¥ã¼ããªã¢ã«ï¼ âSimscape ãã¥ã¼ããªã¢ã« (Simscape Tutorial)â<a href=""http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-"">http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-</a></p>physical modeling,simscape,simscape power systems,simulation,electric_motor_control,power_electronics_control",14,2,2,0,15,simscape power tutorial evaluate simscape power yourselfthis tutorial show basic usage simscape power explanation material japanese sample evaluate simscape power example electrical mechanical induction motor drive want know overview simscape power please see follow short movie power power power power overview simscape power systemsæ¦è¦ http mathworks com videos simscape power overview htmlrelated simscape ãã¥ã¼ããªã¢ã« simscape tutorial http mathworks com matlabcentral fileexchange simscape simscape tutorial physical power motor controlpower electronics control,"['simscape', 'power', 'tutorial', 'evaluate', 'simscape', 'power', 'yourselfthis', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'power', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'simscape', 'power', 'example', 'electrical', 'mechanical', 'induction', 'motor', 'drive', 'want', 'know', 'overview', 'simscape', 'power', 'please', 'see', 'follow', 'short', 'movie', 'power', 'power', 'power', 'power', 'overview', 'simscape', 'power', 'systemsæ¦è¦', 'http', 'mathworks', 'com', 'videos', 'simscape', 'power', 'overview', 'htmlrelated', 'simscape', 'ãã¥ã¼ããªã¢ã«', 'simscape', 'tutorial', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'simscape', 'tutorial', 'physical', 'power', 'motor', 'controlpower', 'electronics', 'control']",7
1686,57350,"Simscape Fluids tutorial to evaluate Simscape Fluids by yourself<p>This tutorial is shown about the basic usage of Simscape Fluids. There are an explanation material (Japanese) and a sample model to evaluate Simscape Fluids by yourself. The example is the hydraulic and mechanical model of hydraulic drive mechanism system. Then, if you want to know the overview of Simscape Fluids, please see the following short movie.æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Fluidsã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããSimscape Fluidsã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ãã·ã³ãã«ãªæ²¹å§é§åæ©æ§ã®æ²¹å§/æ©æ¢°ç³»ã®ã¢ãã«ã§ããã¾ããSimscape Fluidsã®æ¦è¦ã«ã¤ãã¦ã¯ãæ¬¡ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããShort movieï¼ã·ã§ã¼ãã ã¼ãã¼ï¼âSimscape Fluids Overview (Simscape Fluidsæ¦è¦)â (1:49)<a href=""http://jp.mathworks.com/videos/simscape-fluids-overview-117985.html"">http://jp.mathworks.com/videos/simscape-fluids-overview-117985.html</a> Related tutorialï¼é¢é£ãã¥ã¼ããªã¢ã«ï¼ âSimscape ãã¥ã¼ããªã¢ã« (Simscape Tutorial)â<a href=""http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-"">http://www.mathworks.com/matlabcentral/fileexchange/56514-simscape%E3%83%81%E3%83%A5%E3%83%BC%E3%83%88%E3%83%AA%E3%82%A2%E3%83%AB-simscape-tutorial-</a></p>physical modeling,simscape,simscape fluids,simulation",20,2,2,0,18,simscape fluid tutorial evaluate simscape fluid yourselfthis tutorial show basic usage simscape fluid explanation material japanese sample evaluate simscape fluid example hydraulic mechanical hydraulic drive mechanism want know overview simscape fluid please see follow short movie fluid overview simscape fluidsæ¦è¦ http mathworks com videos simscape fluid overview html relate simscape ãã¥ã¼ããªã¢ã« simscape tutorial http mathworks com matlabcentral fileexchange simscape simscape tutorial physical,"['simscape', 'fluid', 'tutorial', 'evaluate', 'simscape', 'fluid', 'yourselfthis', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'fluid', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'simscape', 'fluid', 'example', 'hydraulic', 'mechanical', 'hydraulic', 'drive', 'mechanism', 'want', 'know', 'overview', 'simscape', 'fluid', 'please', 'see', 'follow', 'short', 'movie', 'fluid', 'overview', 'simscape', 'fluidsæ¦è¦', 'http', 'mathworks', 'com', 'videos', 'simscape', 'fluid', 'overview', 'html', 'relate', 'simscape', 'ãã¥ã¼ããªã¢ã«', 'simscape', 'tutorial', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'simscape', 'tutorial', 'physical']",7
1687,57351,"Yet another demonstration for my students.<p>Some parts are commented in Polish. Sorry for that :) For more details please consult <a href=""http://ufnalski.edu.pl/dissertation/"">http://ufnalski.edu.pl/dissertation/</a> -- also in Polish :) This submission contains two EKFs: one that assumes no knowledge of the moment of inertia and another one that can be applied if the moment of inertia is known.</p>ac drive,ac motor,control,ekf,extended kalman filter,kalman filter,sensorless,state observer,electric_motor_control,power_conversion_control,power_electronics_control",155,9,3,0,166,yet another demonstration student part comment polish sorry detail please consult http ufnalski edu dissertation also polish submission contain two ekfs one assume knowledge moment inertia another one apply moment inertia know driveac kalman filterkalman motor controlpower conversion controlpower electronics control,"['yet', 'another', 'demonstration', 'student', 'part', 'comment', 'polish', 'sorry', 'detail', 'please', 'consult', 'http', 'ufnalski', 'edu', 'dissertation', 'also', 'polish', 'submission', 'contain', 'two', 'ekfs', 'one', 'assume', 'knowledge', 'moment', 'inertia', 'another', 'one', 'apply', 'moment', 'inertia', 'know', 'driveac', 'kalman', 'filterkalman', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1688,57358,"A MIMO Control Analysis and Design toolbox<p>Allows the user to create and load square or non-square LTI or LTI approximated systems with or without dead time. Allows the user to analyse these models, to perform either decoupling or control or both decoupling and control on the system. Allows the user to evaluate the control design and to save, export or compare the control design with other designs.</p>analysis,control design,decoupling,gui,io pairing,mimo,multivariable systems,toolbox",62,6,2,0,56,mimo control analysis design toolboxallows user create load square non square lti lti approximate without dead time allow user analyse perform either decouple control decouple control allow user evaluate control design save export compare control design design analysiscontrol systemstoolbox,"['mimo', 'control', 'analysis', 'design', 'toolboxallows', 'user', 'create', 'load', 'square', 'non', 'square', 'lti', 'lti', 'approximate', 'without', 'dead', 'time', 'allow', 'user', 'analyse', 'perform', 'either', 'decouple', 'control', 'decouple', 'control', 'allow', 'user', 'evaluate', 'control', 'design', 'save', 'export', 'compare', 'control', 'design', 'design', 'analysiscontrol', 'systemstoolbox']",4
1689,57423,"Simulink model of mechanism<p>This file solves the ode of movement for a spring-link mechanism.</p>dynamics,mechanical modeling",21,0,1,0,25,mechanismthis file solve ode movement spring link mechanism,"['mechanismthis', 'file', 'solve', 'ode', 'movement', 'spring', 'link', 'mechanism']",0
1690,57441,"DFIG Wind turbine Model<p>this model explains the working of the DFIG WT. The rotor side converter is modelled as controlled voltage source and grid side converter is neglected as machine is basically controlled by the rotor side converter and most of the active and reactive power is supplied by the machine. The vector control technique is used for controlling the DFIG.  This is not a full model but only a starting guide for those who want to learn about DFIG control.  the active and reactive power of the machine are regulated by the rotor side converter.</p>power_conversion_control,power_electronics_control,control design,dfig,power,power electronics,power system,wind turbine",267,10,3,0,359,dfig wind turbine modelthis explain work dfig rotor side converter controlled voltage source grid side converter neglect machine basically control rotor side converter active reactive power supply machine vector control technique control dfig full start guide want learn dfig control active reactive power machine regulate rotor side converter power conversion controlpower electronics controlcontrol systemwind turbine,"['dfig', 'wind', 'turbine', 'modelthis', 'explain', 'work', 'dfig', 'rotor', 'side', 'converter', 'controlled', 'voltage', 'source', 'grid', 'side', 'converter', 'neglect', 'machine', 'basically', 'control', 'rotor', 'side', 'converter', 'active', 'reactive', 'power', 'supply', 'machine', 'vector', 'control', 'technique', 'control', 'dfig', 'full', 'start', 'guide', 'want', 'learn', 'dfig', 'control', 'active', 'reactive', 'power', 'machine', 'regulate', 'rotor', 'side', 'converter', 'power', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'systemwind', 'turbine']",3
1691,57449,"GUI window that show you multi circuits of Dc high voltage or impulse high voltage<p>you can choose the name of circuit to open it in simulinkor you can press simulate to simulate it without open and show high voltage on axes</p>cockroft,doubler,electrical engineer,gui,high voltage,marks,power electronics,tripler,power_conversion_control,power_electronics_control",168,3,2,0,161,gui window show multi circuit high voltage impulse high voltageyou choose name circuit open press without open show high voltage engineerguihigh conversion controlpower electronics control,"['gui', 'window', 'show', 'multi', 'circuit', 'high', 'voltage', 'impulse', 'high', 'voltageyou', 'choose', 'name', 'circuit', 'open', 'press', 'without', 'open', 'show', 'high', 'voltage', 'engineerguihigh', 'conversion', 'controlpower', 'electronics', 'control']",3
1692,57500,"dynamic model of three phase im<p>mathatical model of three phase im</p>modeling,simulation",166,16,3,0,184,dynamic three phase immathatical three phase,"['dynamic', 'three', 'phase', 'immathatical', 'three', 'phase']",1
1693,57510,"indranil saaki<p>This project presents a modified adaptive Kalman filter for sensor less current control of a three-phase inverter-based distributed generation system. Measurement and digital signal processor delays have been compensated by using a modified Kalman filter. The control variable states can be estimated one sample in advance with a reduced number of sensors. Two current control loops with the steepest descent adaptive control for grid voltage estimation have been employed to boost robustness. Stability and dynamic performance have been examined for different state variables using root locus. Simulation and experimental results validate the proposed control approach. A PLL performs the transformation from a three-phase stationary reference frame to a two-phase synchronously rotating reference frame. The control system dynamics are investigated to assess system stability and to select feedback variables. Simulation and practical results verify the derived expressions and system performance. With the modified Kalman filter, the control state variables are predicted one sample in advance and the number of measurement sensors is reduced. The fluctuations are reflected to the dc side, as harmonic frequencies that are sourced from the dc-link capacitor. The harmonic impedance is determined by the proportional gain of the controller. From the Bode analysis, it is clear that the system with inductor voltage feedback is inherently more stable against low-order frequency harmonics than the other feedback control variables. The performance of the control algorithm described has been investigated using MATLAB/SIMULINK simulations. The proposed controller bandwidth is extended compared to the conventional controller; hence, the proposed delay compensation technique enhances the digital controller bandwidth. The experimental system was implemented with the same system parameters as the simulated studies. The results show that the currents are balanced and high quality sinusoidal. The switching frequency content is minimized with the presence of the âfilter with the isolating transformer. This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>electric_motor_control,power_conversion_control,power_electronics_control,indraneel saki,indranil saaki,induction motor,power,power electronics,simulation,simulink",324,30,4,0,386,indranil saakithis project present modify adaptive kalman filter sensor current control three phase inverter base distribute generation measurement digital signal processor delay compensate modify kalman filter control variable state estimate one sample advance reduce number sensor two current control loop steep descent adaptive control grid voltage estimation employ boost robustness stability dynamic performance examine different state variable root locus experimental result validate propose control approach pll performs transformation three phase stationary reference frame two phase synchronously rotate reference frame control dynamic investigate assess stability select feedback variable practical result verify derived expression performance modify kalman filter control state variable predict one sample advance number measurement sensor reduce fluctuation reflect side harmonic frequency source link capacitor harmonic impedance determine proportional gain controller bode analysis clear inductor voltage feedback inherently stable low order frequency harmonic feedback control variable performance control algorithm describe investigated propose controller bandwidth extend compare conventional controller hence propose delay compensation technique enhance digital controller bandwidth experimental implement parameter study result show current balance high quality sinusoidal switch frequency content minimize presence filter isolate transformer guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute electric motor controlpower conversion controlpower electronics sakiindranil saakiinduction motorpowerpower,"['indranil', 'saakithis', 'project', 'present', 'modify', 'adaptive', 'kalman', 'filter', 'sensor', 'current', 'control', 'three', 'phase', 'inverter', 'base', 'distribute', 'generation', 'measurement', 'digital', 'signal', 'processor', 'delay', 'compensate', 'modify', 'kalman', 'filter', 'control', 'variable', 'state', 'estimate', 'one', 'sample', 'advance', 'reduce', 'number', 'sensor', 'two', 'current', 'control', 'loop', 'steep', 'descent', 'adaptive', 'control', 'grid', 'voltage', 'estimation', 'employ', 'boost', 'robustness', 'stability', 'dynamic', 'performance', 'examine', 'different', 'state', 'variable', 'root', 'locus', 'experimental', 'result', 'validate', 'propose', 'control', 'approach', 'pll', 'performs', 'transformation', 'three', 'phase', 'stationary', 'reference', 'frame', 'two', 'phase', 'synchronously', 'rotate', 'reference', 'frame', 'control', 'dynamic', 'investigate', 'assess', 'stability', 'select', 'feedback', 'variable', 'practical', 'result', 'verify', 'derived', 'expression', 'performance', 'modify', 'kalman', 'filter', 'control', 'state', 'variable', 'predict', 'one', 'sample', 'advance', 'number', 'measurement', 'sensor', 'reduce', 'fluctuation', 'reflect', 'side', 'harmonic', 'frequency', 'source', 'link', 'capacitor', 'harmonic', 'impedance', 'determine', 'proportional', 'gain', 'controller', 'bode', 'analysis', 'clear', 'inductor', 'voltage', 'feedback', 'inherently', 'stable', 'low', 'order', 'frequency', 'harmonic', 'feedback', 'control', 'variable', 'performance', 'control', 'algorithm', 'describe', 'investigated', 'propose', 'controller', 'bandwidth', 'extend', 'compare', 'conventional', 'controller', 'hence', 'propose', 'delay', 'compensation', 'technique', 'enhance', 'digital', 'controller', 'bandwidth', 'experimental', 'implement', 'parameter', 'study', 'result', 'show', 'current', 'balance', 'high', 'quality', 'sinusoidal', 'switch', 'frequency', 'content', 'minimize', 'presence', 'filter', 'isolate', 'transformer', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'sakiindranil', 'saakiinduction', 'motorpowerpower']",4
1694,57512,"Indranil Saaki<p>The first five-phase induction motor drive system was proposed in the late 1970s for adjustable speed drive applications. Since then, a considerable research effort has been in place to develop commercially feasible multiphase drive systems. Since the three-phase supply is available from the grid, there is a need to develop a static phase transformation system to obtain a multiphase supply from the available three-phase supply. Thus, this project proposes a novel transformer connection scheme to convert the three-phase grid supply to a five-phase fixed voltage and fixed frequency supply. The proposed transformer connection outputs five phases and, thus, can be used in applications requiring a five-phase supply. Currently, the five-phase motor drive is a commercially viable solution. The five-phase transmission system can be investigated further as an efficient solution for bulk power transfer with the wavelet technique. The connection scheme is elaborated by using the simulation and experimental approach to prove the viability of the implementation and detect faults in the transformer using wavelets. The geometry of the fabricated transformer is elaborated in this paper. KeywordsââFive phase, multiphase, three-phase, transformer, turn ratio.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share an idea. Thank you for your willingness to contribute.</p>electric_motor_control,power_electronics_control,control design,power electronics,simulink",41,0,1,0,61,indranil saakithe first five phase induction motor drive propose late adjustable speed drive application since considerable research effort place develop commercially feasible multiphase drive since three phase supply available grid need develop static phase transformation obtain multiphase supply available three phase supply thus project propose novel transformer connection scheme convert three phase grid supply five phase fix voltage fix frequency supply propose transformer connection output five phase thus application require five phase supply currently five phase motor drive commercially viable solution five phase transmission investigate efficient solution bulk power transfer wavelet technique connection scheme elaborate experimental approach prove viability implementation detect fault transformer wavelet geometry fabricate transformer elaborate paper keywordsfive phase multiphase three phase transformer turn ratio guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute electric motor controlpower electronics controlcontrol designpower,"['indranil', 'saakithe', 'first', 'five', 'phase', 'induction', 'motor', 'drive', 'propose', 'late', 'adjustable', 'speed', 'drive', 'application', 'since', 'considerable', 'research', 'effort', 'place', 'develop', 'commercially', 'feasible', 'multiphase', 'drive', 'since', 'three', 'phase', 'supply', 'available', 'grid', 'need', 'develop', 'static', 'phase', 'transformation', 'obtain', 'multiphase', 'supply', 'available', 'three', 'phase', 'supply', 'thus', 'project', 'propose', 'novel', 'transformer', 'connection', 'scheme', 'convert', 'three', 'phase', 'grid', 'supply', 'five', 'phase', 'fix', 'voltage', 'fix', 'frequency', 'supply', 'propose', 'transformer', 'connection', 'output', 'five', 'phase', 'thus', 'application', 'require', 'five', 'phase', 'supply', 'currently', 'five', 'phase', 'motor', 'drive', 'commercially', 'viable', 'solution', 'five', 'phase', 'transmission', 'investigate', 'efficient', 'solution', 'bulk', 'power', 'transfer', 'wavelet', 'technique', 'connection', 'scheme', 'elaborate', 'experimental', 'approach', 'prove', 'viability', 'implementation', 'detect', 'fault', 'transformer', 'wavelet', 'geometry', 'fabricate', 'transformer', 'elaborate', 'paper', 'keywordsfive', 'phase', 'multiphase', 'three', 'phase', 'transformer', 'turn', 'ratio', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'electric', 'motor', 'controlpower', 'electronics', 'controlcontrol', 'designpower']",4
1695,57514,"indraneel saki<p>The Distributed Power Flow Controller (DPFC) is a new device within the FACTS family. It is emerged from the UPFC and has relatively low cost and high reliability. The DPFC consists of two types of converters that are in shunt and series connection with grids. The common dc link between the shunt and the series converters is eliminated. The active power exchange between the shunt and series converters that is through the common dc link in the UPFC, though the transmission line at the 3rd harmonic frequency. The redundancy of the series converters provides the high reliability of the system. In this Project, the DPFC behavior during the failure of a single series converter unit is considered. A control scheme to improve the DPFC performance during the failure is proposed. The principle of the control is based on the facts that, the failure of single series converter will lead to unsymmetrical current at the fundamental frequency. By controlling the negative and zero sequence current to zero, the failure of the series converter is compensated.              In this Project, the principle of the DPFC is first introduced and followed by the behavior of the DPFC during the failure of a single series converter. The design of the control scheme and corresponding simulations are presented by using matlab/simulink.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>power_conversion_control,power_electronics_control,indraneel saki,indranil saaki,power,power electronics,simulation",285,34,4,0,283,indraneel sakithe distributed power flow controller dpfc new device within fact family emerge upfc relatively low cost high reliability dpfc consist two type converter shunt series connection grid common link shunt series converter eliminate active power exchange shunt series converter common link upfc though transmission line harmonic frequency redundancy series converter provide high reliability project dpfc behavior failure single series converter unit consider control scheme improve dpfc performance failure propose principle control base fact failure single series converter lead unsymmetrical current fundamental frequency control negative zero sequence current zero failure series converter compensate project principle dpfc first introduce follow behavior dpfc failure single series converter design control scheme correspond present guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute power conversion controlpower electronics sakiindranil saakipowerpower,"['indraneel', 'sakithe', 'distributed', 'power', 'flow', 'controller', 'dpfc', 'new', 'device', 'within', 'fact', 'family', 'emerge', 'upfc', 'relatively', 'low', 'cost', 'high', 'reliability', 'dpfc', 'consist', 'two', 'type', 'converter', 'shunt', 'series', 'connection', 'grid', 'common', 'link', 'shunt', 'series', 'converter', 'eliminate', 'active', 'power', 'exchange', 'shunt', 'series', 'converter', 'common', 'link', 'upfc', 'though', 'transmission', 'line', 'harmonic', 'frequency', 'redundancy', 'series', 'converter', 'provide', 'high', 'reliability', 'project', 'dpfc', 'behavior', 'failure', 'single', 'series', 'converter', 'unit', 'consider', 'control', 'scheme', 'improve', 'dpfc', 'performance', 'failure', 'propose', 'principle', 'control', 'base', 'fact', 'failure', 'single', 'series', 'converter', 'lead', 'unsymmetrical', 'current', 'fundamental', 'frequency', 'control', 'negative', 'zero', 'sequence', 'current', 'zero', 'failure', 'series', 'converter', 'compensate', 'project', 'principle', 'dpfc', 'first', 'introduce', 'follow', 'behavior', 'dpfc', 'failure', 'single', 'series', 'converter', 'design', 'control', 'scheme', 'correspond', 'present', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'power', 'conversion', 'controlpower', 'electronics', 'sakiindranil', 'saakipowerpower']",4
1696,57515,"by indranil saaki<p>The proposed method develops a fuzzy rule-based classifier that was tested using features for islanding detection in distributed generation.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>fuzzy,control design,electronics,fuzzy logic,indraneel saki,indranil saaki,modeling,power,power electronics,simulation,simulink",1568,155,5,0,1892,indranil saakithe propose method develop fuzzy rule base classifier test feature islanding detection distribute generation guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute fuzzycontrol logicindraneel sakiindranil,"['indranil', 'saakithe', 'propose', 'method', 'develop', 'fuzzy', 'rule', 'base', 'classifier', 'test', 'feature', 'islanding', 'detection', 'distribute', 'generation', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'fuzzycontrol', 'logicindraneel', 'sakiindranil']",0
1697,57516,"Indranil Saaki<p>It discusses the topology used to achieve the said objective, the rationale used in choosing this topology, detailed component selection optimized to minimize cost, and the dc/dc and dc/ac converter control. Finally some conclusions are made and a new total-system approach design using a high voltage fuel cell is proposed to further reduce the cost of the power converter.This guide is useful to anyone who would like to contribute to open source projects on MATLAB.</p>power_conversion_control,power_electronics_control,indraneel saki,indranil saaki,modeling,power electronics,simulation,simulink",328,12,3,0,378,indranil saakiit discuss topology achieve say objective rationale choose topology detailed component selection optimize minimize cost converter control finally conclusion make new total approach design high voltage fuel cell propose reduce cost power converter guide useful anyone would like contribute open source project power conversion controlpower electronics sakiindranil,"['indranil', 'saakiit', 'discuss', 'topology', 'achieve', 'say', 'objective', 'rationale', 'choose', 'topology', 'detailed', 'component', 'selection', 'optimize', 'minimize', 'cost', 'converter', 'control', 'finally', 'conclusion', 'make', 'new', 'total', 'approach', 'design', 'high', 'voltage', 'fuel', 'cell', 'propose', 'reduce', 'cost', 'power', 'converter', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'power', 'conversion', 'controlpower', 'electronics', 'sakiindranil']",4
1698,57517,"indranil saaki<p>This design focus in modeling and simulation of photovoltaic/ hydro hybrid electric power system inter connected to the electrical utility, PV/hydro turbine, taking into account all radiation, temperature, HYDRO speeds and variation of the load demand during the day. A computer simulation program has been designed to simulate all quantities of HEPS such as phase voltage of the inverter leg and current in each IGBTâs for PV and HTG. It also simulates AC output current of the inverter that injected to the load/grid, load current, grid current, power output from PV and HTG, power delivered to or from grid and finally power factor of the inverter for PV, HTG and grid. The proposed computer simulation uses hysteresis current control and instantaneous p-q (real-imaginary) power theory. The computer simulation program is confirmed on a realistic circuit model which implemented in the Simulink environment of Matlab and works as if ON-line.</p>power_conversion_control,power_electronics_control,dg system,indraneel saki,indranil saaki,modeling,power,power electronics,pv cell,renewable energy,simulation,simulink",686,102,4,0,732,indranil saakithis design focus photovoltaic hydro hybrid electric power inter connect electrical utility hydro turbine take account radiation temperature hydro speed variation load demand day computer program design quantity heps phase voltage inverter leg current igbts htg also output current inverter inject load grid load current grid current power output htg power deliver grid finally power factor inverter htg grid propose computer hysteresis current control instantaneous real imaginary power theory computer program confirm realistic circuit implement environment work line power conversion controlpower electronics controldg systemindraneel sakiindranil electronicspv cellrenewable,"['indranil', 'saakithis', 'design', 'focus', 'photovoltaic', 'hydro', 'hybrid', 'electric', 'power', 'inter', 'connect', 'electrical', 'utility', 'hydro', 'turbine', 'take', 'account', 'radiation', 'temperature', 'hydro', 'speed', 'variation', 'load', 'demand', 'day', 'computer', 'program', 'design', 'quantity', 'heps', 'phase', 'voltage', 'inverter', 'leg', 'current', 'igbts', 'htg', 'also', 'output', 'current', 'inverter', 'inject', 'load', 'grid', 'load', 'current', 'grid', 'current', 'power', 'output', 'htg', 'power', 'deliver', 'grid', 'finally', 'power', 'factor', 'inverter', 'htg', 'grid', 'propose', 'computer', 'hysteresis', 'current', 'control', 'instantaneous', 'real', 'imaginary', 'power', 'theory', 'computer', 'program', 'confirm', 'realistic', 'circuit', 'implement', 'environment', 'work', 'line', 'power', 'conversion', 'controlpower', 'electronics', 'controldg', 'systemindraneel', 'sakiindranil', 'electronicspv', 'cellrenewable']",3
1699,57519,"Indranil Saaki<p>The quality of the Electrical power is effected by many factors like harmonic contamination, due to non-linear loads, such as large thyristor power converters, rectifiers, voltage and current flickering due to arc in arc furnaces, sag and swell due to the switching of the loads etc. One of the many solutions is the use of a combined system of shunt and active series filters like unified power quality conditioner (UPQC) This device combines a shunt active filter together with a series active filter in a back-to-back configuration, to simultaneously compensate the supply voltage and the load current or to mitigate any type of voltage and current fluctuations and power factor correction in a power distribution network. The present work study the compensation principle and different control strategies used here are based on PI &amp; ANN controller of the UPQC in detail. The control strategies are modeled using MATLAB/SIMULINK. The simulation results are listed in comparison of different control strategies and for the verification of results. This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.All projects are open source to everyone for any Other Requirements &amp; queries kindly contact.</p>power_conversion_control,power_electronics_control,active power filter,artificial neural network-ann,control techniques,data export,harmonics,indranil saaki,mathematics,modeling,power electronics,power quality,simulation,simulink,unified power quality conditioner",1584,174,5,0,1596,indranil saakithe quality electrical power effect many factor like harmonic contamination due non linear load large thyristor power converter rectifier voltage current flickering due arc arc furnace sag swell due switch load etc one many solution combine shunt active series filter like unified power quality conditioner upqc device combine shunt active filter together series active filter back back configuration compensate supply voltage load current mitigate type voltage current fluctuation power factor correction power distribution network present work study compensation principle different control strategy base amp ann controller upqc detail control strategy result list comparison different control strategy verification result guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute project open source everyone requirement amp query kindly contact power conversion controlpower electronics controlactive power neural network anncontrol techniquesdata power quality conditioner,"['indranil', 'saakithe', 'quality', 'electrical', 'power', 'effect', 'many', 'factor', 'like', 'harmonic', 'contamination', 'due', 'non', 'linear', 'load', 'large', 'thyristor', 'power', 'converter', 'rectifier', 'voltage', 'current', 'flickering', 'due', 'arc', 'arc', 'furnace', 'sag', 'swell', 'due', 'switch', 'load', 'etc', 'one', 'many', 'solution', 'combine', 'shunt', 'active', 'series', 'filter', 'like', 'unified', 'power', 'quality', 'conditioner', 'upqc', 'device', 'combine', 'shunt', 'active', 'filter', 'together', 'series', 'active', 'filter', 'back', 'back', 'configuration', 'compensate', 'supply', 'voltage', 'load', 'current', 'mitigate', 'type', 'voltage', 'current', 'fluctuation', 'power', 'factor', 'correction', 'power', 'distribution', 'network', 'present', 'work', 'study', 'compensation', 'principle', 'different', 'control', 'strategy', 'base', 'amp', 'ann', 'controller', 'upqc', 'detail', 'control', 'strategy', 'result', 'list', 'comparison', 'different', 'control', 'strategy', 'verification', 'result', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'project', 'open', 'source', 'everyone', 'requirement', 'amp', 'query', 'kindly', 'contact', 'power', 'conversion', 'controlpower', 'electronics', 'controlactive', 'power', 'neural', 'network', 'anncontrol', 'techniquesdata', 'power', 'quality', 'conditioner']",4
1700,57521,"AC Time Overcurrent Relay Block (51) that operates when the current exceeds a predetermined value.<p>AC Time Overcurrent Relay (ANSI/IEEE C37.2 device number 51) that operates when the current exceeds a predetermined value.This relay operates with either a Definite Minimum Time (DMT) or Inverse Definite Minimum Time (IDMT) characteristic.This relay support both IEC 60255 Standard and IEEE Standard C37.112-1996 IDMT trip characteristic.</p>electric_motor_control,power_conversion_control,power_electronics_control,ac time overcurrent relay,ansi device number 51,digital protective relay,idmt relay,iec 60255,ieee std c37112,numerical protection relay,overcurrent protection relay,protection relay",20,1,2,0,34,time overcurrent relay block operate current exceeds predetermine value time overcurrent relay ansi iee device number operate current exceeds predetermine value relay operate either definite minimum time dmt inverse definite minimum time idmt characteristic relay support iec standard iee standard idmt trip characteristic electric motor controlpower conversion controlpower electronics controlac time overcurrent relayansi device number digital protective relayidmt relayiec iee std numerical protection protection relayprotection relay,"['time', 'overcurrent', 'relay', 'block', 'operate', 'current', 'exceeds', 'predetermine', 'value', 'time', 'overcurrent', 'relay', 'ansi', 'iee', 'device', 'number', 'operate', 'current', 'exceeds', 'predetermine', 'value', 'relay', 'operate', 'either', 'definite', 'minimum', 'time', 'dmt', 'inverse', 'definite', 'minimum', 'time', 'idmt', 'characteristic', 'relay', 'support', 'iec', 'standard', 'iee', 'standard', 'idmt', 'trip', 'characteristic', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'time', 'overcurrent', 'relayansi', 'device', 'number', 'digital', 'protective', 'relayidmt', 'relayiec', 'iee', 'std', 'numerical', 'protection', 'protection', 'relayprotection', 'relay']",4
1701,57523,"PMSM fed by Voltage Source Converter<p>The control of a permanent-magnet synchronous motor (PMSM) is a nontrivial issue in AC drives, because of its nonlinear dynamics and time-varying parameters. This paper investigates the application of a new adaptive logic fuzzy controller (FLC) for the speed control of field oriented PMSM fed by voltage source inverter. A model-reference adaptive scheme is proposed in which the adaptation mechanism is executed by fuzzy logic based on the error and changes of error measured between the motor speed and the output of a reference model. To make the controller less dependent on the quality of the expert knowledge, the fuzzy speed controller is augmented by the model following error driven fuzzy adaptive mechanism to provide fast and robust control for various operating conditions. The effectiveness of the proposed control is illustrated by numerical simulation resultsThis guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.All projects are open source to everyone for any Other Requirements &amp; queries kindly contact </p>fuzzy,electric_motor_control,power_electronics_control,electrical machine,electronics,fuzzy logic,indraneel saki,indranil saaki,modeling,pmsm,power electronics,simulation,simulink",1110,90,4,0,1296,pmsm feed voltage source converterthe control permanent magnet synchronous motor pmsm nontrivial issue drive nonlinear dynamic time vary parameter paper investigate application new adaptive logic fuzzy controller flc speed control field orient pmsm fed voltage source inverter reference adaptive scheme propose adaptation mechanism execute fuzzy logic base error change error measure motor speed output reference make controller less dependent quality expert knowledge fuzzy speed controller augment follow error drive fuzzy adaptive mechanism provide fast robust control various operate condition effectiveness propose control illustrated numerical resultsthis guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute project open source everyone requirement amp query kindly contact fuzzyelectric motor controlpower electronics logicindraneel sakiindranil,"['pmsm', 'feed', 'voltage', 'source', 'converterthe', 'control', 'permanent', 'magnet', 'synchronous', 'motor', 'pmsm', 'nontrivial', 'issue', 'drive', 'nonlinear', 'dynamic', 'time', 'vary', 'parameter', 'paper', 'investigate', 'application', 'new', 'adaptive', 'logic', 'fuzzy', 'controller', 'flc', 'speed', 'control', 'field', 'orient', 'pmsm', 'fed', 'voltage', 'source', 'inverter', 'reference', 'adaptive', 'scheme', 'propose', 'adaptation', 'mechanism', 'execute', 'fuzzy', 'logic', 'base', 'error', 'change', 'error', 'measure', 'motor', 'speed', 'output', 'reference', 'make', 'controller', 'less', 'dependent', 'quality', 'expert', 'knowledge', 'fuzzy', 'speed', 'controller', 'augment', 'follow', 'error', 'drive', 'fuzzy', 'adaptive', 'mechanism', 'provide', 'fast', 'robust', 'control', 'various', 'operate', 'condition', 'effectiveness', 'propose', 'control', 'illustrated', 'numerical', 'resultsthis', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'project', 'open', 'source', 'everyone', 'requirement', 'amp', 'query', 'kindly', 'contact', 'fuzzyelectric', 'motor', 'controlpower', 'electronics', 'logicindraneel', 'sakiindranil']",4
1702,57543,"indraneel saki<p>This project presents an interactive distributed generation(DG) interface for flexible micro-grid operation in the smart distribution system environment. Under the smart grid environment, DG units should be included in the system operational control framework, where they can be used to enhance system reliability by providing backup generation in isolated mode, and to provide ancillary services (e.g. voltage support and reactive power control) in the grid-connected mode. To meet these requirements for consumers, the proposed flexible interface utilizes a fixed powerâvoltageâcurrent cascaded control structure to minimize control function switching and is equipped with robust internal model control structure to maximize the disturbance rejection performance within the DG interface. The proposed control system facilitates flexible and robust DG operational characteristics such as 1) active/reactive power (PQ) or active power/voltage (PV) bus operation in the grid-connected mode, 2) regulated power control in autonomous micro-grid mode, 3) smooth transition between autonomous mode and PV or PQ grid connected modes and vice versa, 4) reduced voltage distortion under heavily nonlinear loading conditions, and 5) robust control performance under islanding detection delays. Evaluation results are presented to demonstrate the flexibility and effectiveness of the proposed Grid controller.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>fuell cell,indraneel saki,indranil saaki,mtg,power,power electronics,pv cell,renewable energy resources,wind power",1154,81,7,0,1312,indraneel sakithis project present interactive distribute generation interface flexible micro grid operation smart distribution environment smart grid environment unit include operational control framework enhance reliability provide backup generation isolate mode provide ancillary service voltage support reactive power control grid connect mode meet requirement consumer propose flexible interface utilizes fix cascade control structure minimize control function switch equip robust internal control structure maximize disturbance rejection performance within interface propose control facilitate flexible robust operational characteristic active reactive power active power voltage bus operation grid connect mode regulated power control autonomous micro grid mode smooth transition autonomous mode grid connect mode vice versa reduce voltage distortion heavily nonlinear load condition robust control performance islanding detection delay evaluation result present demonstrate flexibility effectiveness propose grid controller guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute fuell cellindraneel sakiindranil electronicspv cellrenewable energy resourceswind power,"['indraneel', 'sakithis', 'project', 'present', 'interactive', 'distribute', 'generation', 'interface', 'flexible', 'micro', 'grid', 'operation', 'smart', 'distribution', 'environment', 'smart', 'grid', 'environment', 'unit', 'include', 'operational', 'control', 'framework', 'enhance', 'reliability', 'provide', 'backup', 'generation', 'isolate', 'mode', 'provide', 'ancillary', 'service', 'voltage', 'support', 'reactive', 'power', 'control', 'grid', 'connect', 'mode', 'meet', 'requirement', 'consumer', 'propose', 'flexible', 'interface', 'utilizes', 'fix', 'cascade', 'control', 'structure', 'minimize', 'control', 'function', 'switch', 'equip', 'robust', 'internal', 'control', 'structure', 'maximize', 'disturbance', 'rejection', 'performance', 'within', 'interface', 'propose', 'control', 'facilitate', 'flexible', 'robust', 'operational', 'characteristic', 'active', 'reactive', 'power', 'active', 'power', 'voltage', 'bus', 'operation', 'grid', 'connect', 'mode', 'regulated', 'power', 'control', 'autonomous', 'micro', 'grid', 'mode', 'smooth', 'transition', 'autonomous', 'mode', 'grid', 'connect', 'mode', 'vice', 'versa', 'reduce', 'voltage', 'distortion', 'heavily', 'nonlinear', 'load', 'condition', 'robust', 'control', 'performance', 'islanding', 'detection', 'delay', 'evaluation', 'result', 'present', 'demonstrate', 'flexibility', 'effectiveness', 'propose', 'grid', 'controller', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'fuell', 'cellindraneel', 'sakiindranil', 'electronicspv', 'cellrenewable', 'energy', 'resourceswind', 'power']",4
1703,57547,"Scale receives the weight and is zeroed by the tare button<p>The dial sets the weight input from 0 to 100. Set the weight to a low value such as 20, press the tare button. The wt dial goes to zero. Now raise the weight input. The wt output is the weight input minus the tare_wt.</p>example,simulink",9,0,1,0,9,scale receives weight zeroed tare buttonthe dial set weight input set weight low value press tare button dial zero raise weight input output weight input minus tare,"['scale', 'receives', 'weight', 'zeroed', 'tare', 'buttonthe', 'dial', 'set', 'weight', 'input', 'set', 'weight', 'low', 'value', 'press', 'tare', 'button', 'dial', 'zero', 'raise', 'weight', 'input', 'output', 'weight', 'input', 'minus', 'tare']",5
1704,57554,"Pwm 3 phase<p>Pwm 3 phase</p>electric_motor_control,power_conversion_control,power_electronics_control,2d,3d,svm",194,3,2,0,248,pwm phasepwm phaseelectric motor controlpower conversion controlpower electronics control dsvm,"['pwm', 'phasepwm', 'phaseelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'dsvm']",6
1705,57561,"five level diode clamped single phase inverter<p>five level diode clamped single phase inverter based on pwm</p>electric_motor_control,power_conversion_control,power_electronics_control,diode,inverter",64,2,2,0,64,five level diode clamp single phase inverterfive level diode clamp single phase inverter base pwmelectric motor controlpower conversion controlpower electronics,"['five', 'level', 'diode', 'clamp', 'single', 'phase', 'inverterfive', 'level', 'diode', 'clamp', 'single', 'phase', 'inverter', 'base', 'pwmelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1706,57577,"by indranil saaki<p>A new, hybrid integrated topology, fed by photovoltaic (PV) and fuel cell (FC) sources and suitable for distributed generation applications, is proposed. It works as an uninterruptible power source that is able to feed a certain amount of power into the grid under all conditions. PV is used as the primary source of power operating near maximum power point (MPP), with the FC section (block), acting as a current source, feeding only the deficit power. The unique âintegratedâ approach obviates the need for dedicated communication between the two sources for coordination and eliminates the use of a separate, conventional dc/dc boost converter stage required for PV power processing, resulting in a reduction of the number of devices, components, and sensors. Presence of the FCsource in parallel (with the PVsource) improves the quality of power fed into the grid by minimizing the voltage dips in the PVoutput.Another desirable feature is that even a small amount of PV power (e.g., during low insolation), can be fed into the grid. On the other hand, excess power is diverted for auxiliary functions like electrolysis, resulting in an optimal use of the energy sources. The other advantages of the proposed system include low cost, compact structure, and high reliability, which render the system suitable formodular assemblies and âplug-n-playâ type applications. All the analytical, simulation, and experimental results of this research are presented.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>power_conversion_control,power_electronics_control,battery,control system,fuell cell,indraneel saki,indranil saki,matlab design,non conventional energy resources,pv cell,renewable energy resourses,simulation",1651,109,5,0,1510,indranil saakia new hybrid integrate topology feed photovoltaic fuel cell source suitable distributed generation application propose work uninterruptible power source able feed certain amount power grid condition primary source power operate near maximum power point mpp section block act current source feeding deficit power unique integrate approach obviates need dedicate communication two source coordination eliminate separate conventional boost converter stage required power processing result reduction number device component sensor presence fcsource parallel pvsource improve quality power feed grid minimize voltage dip pvoutput another desirable feature even small amount power low insolation feed grid hand excess power divert auxiliary function like electrolysis result optimal energy source advantage propose include low cost compact structure high reliability render suitable formodular assembly plug play type application analytical experimental result research present guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute power conversion controlpower electronics systemfuell cellindraneel sakiindranil sakimatlab designnon conventional energy resourcespv cellrenewable energy,"['indranil', 'saakia', 'new', 'hybrid', 'integrate', 'topology', 'feed', 'photovoltaic', 'fuel', 'cell', 'source', 'suitable', 'distributed', 'generation', 'application', 'propose', 'work', 'uninterruptible', 'power', 'source', 'able', 'feed', 'certain', 'amount', 'power', 'grid', 'condition', 'primary', 'source', 'power', 'operate', 'near', 'maximum', 'power', 'point', 'mpp', 'section', 'block', 'act', 'current', 'source', 'feeding', 'deficit', 'power', 'unique', 'integrate', 'approach', 'obviates', 'need', 'dedicate', 'communication', 'two', 'source', 'coordination', 'eliminate', 'separate', 'conventional', 'boost', 'converter', 'stage', 'required', 'power', 'processing', 'result', 'reduction', 'number', 'device', 'component', 'sensor', 'presence', 'fcsource', 'parallel', 'pvsource', 'improve', 'quality', 'power', 'feed', 'grid', 'minimize', 'voltage', 'dip', 'pvoutput', 'another', 'desirable', 'feature', 'even', 'small', 'amount', 'power', 'low', 'insolation', 'feed', 'grid', 'hand', 'excess', 'power', 'divert', 'auxiliary', 'function', 'like', 'electrolysis', 'result', 'optimal', 'energy', 'source', 'advantage', 'propose', 'include', 'low', 'cost', 'compact', 'structure', 'high', 'reliability', 'render', 'suitable', 'formodular', 'assembly', 'plug', 'play', 'type', 'application', 'analytical', 'experimental', 'result', 'research', 'present', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'power', 'conversion', 'controlpower', 'electronics', 'systemfuell', 'cellindraneel', 'sakiindranil', 'sakimatlab', 'designnon', 'conventional', 'energy', 'resourcespv', 'cellrenewable', 'energy']",4
1707,57579,"by indranil saaki<p>Developing active series compensation in transmission systems is challenging due to the large currents and voltage capabilities required. The main purpose of this project is to show that the magnetic energy recovery switch (MERS) can be an attractive new series compensator by applying appropriate control.The MERS is similar to a single-phase full bridge, meaning that compared to the gate-commutated series capacitor, it has twicethe number of active switches. However, advantages, such as the double voltageâcurrent operating range, eliminating the need for reverse blocking switches, zero current turn-on, and a lower current conduction period of each switch can make the MERS an attractive alternative. The basic characteristics of the MERS have been found to be similar to a series connection of a voltage source and a capacitor in steady state. With this dual characteristic, a control method has been developed where the minimization of the harmonics in the series-injected voltage and stable operation during large setpoint changes have been achieved. The resulting subharmonic characteristic also indicates a low risk of subsynchronous resonance. Experimental results verify the proposed configuration and control.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.All projects are open source to everyone for any Other Requirements &amp; queries kindly contact </p>facts,indraneel saki,indranil saki,mers,power electronics,power system,simulink",656,78,4,0,663,indranil saakideveloping active series compensation transmission challenge due large current voltage capability require main purpose project show magnetic energy recovery switch mers attractive new series compensator apply appropriate control mers similar single phase full bridge meaning compare gate commutate series capacitor twicethe number active switch however advantage double voltagecurrent operate range eliminate need reverse block switch zero current turn lower current conduction period switch make mers attractive alternative basic characteristic mers find similar series connection voltage source capacitor steady state dual characteristic control method develop minimization harmonic series inject voltage stable operation large setpoint change achieve result subharmonic characteristic also indicate low risk subsynchronous resonance experimental result verify proposed configuration control guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute project open source everyone requirement amp query kindly contact factsindraneel sakiindranil sakimerspower,"['indranil', 'saakideveloping', 'active', 'series', 'compensation', 'transmission', 'challenge', 'due', 'large', 'current', 'voltage', 'capability', 'require', 'main', 'purpose', 'project', 'show', 'magnetic', 'energy', 'recovery', 'switch', 'mers', 'attractive', 'new', 'series', 'compensator', 'apply', 'appropriate', 'control', 'mers', 'similar', 'single', 'phase', 'full', 'bridge', 'meaning', 'compare', 'gate', 'commutate', 'series', 'capacitor', 'twicethe', 'number', 'active', 'switch', 'however', 'advantage', 'double', 'voltagecurrent', 'operate', 'range', 'eliminate', 'need', 'reverse', 'block', 'switch', 'zero', 'current', 'turn', 'lower', 'current', 'conduction', 'period', 'switch', 'make', 'mers', 'attractive', 'alternative', 'basic', 'characteristic', 'mers', 'find', 'similar', 'series', 'connection', 'voltage', 'source', 'capacitor', 'steady', 'state', 'dual', 'characteristic', 'control', 'method', 'develop', 'minimization', 'harmonic', 'series', 'inject', 'voltage', 'stable', 'operation', 'large', 'setpoint', 'change', 'achieve', 'result', 'subharmonic', 'characteristic', 'also', 'indicate', 'low', 'risk', 'subsynchronous', 'resonance', 'experimental', 'result', 'verify', 'proposed', 'configuration', 'control', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'project', 'open', 'source', 'everyone', 'requirement', 'amp', 'query', 'kindly', 'contact', 'factsindraneel', 'sakiindranil', 'sakimerspower']",4
1708,57581,"Prevent motor runaway by monitoring the speed<p>Induction motors can speed up when there is too small or no load on the shaft. To limit the speed this circuit will cut the power to the motor if the speed exceeds a certain limit. For this example the speed limit is 4, which is a low number, but it simplifies the model.</p>example,motor,simulation,simulink,speed,electric_motor_control,power_conversion_control,power_electronics_control",19,2,2,0,18,prevent motor runaway monitoring speedinduction motor speed small load shaft limit speed circuit cut power motor speed exceed certain limit example speed limit low number simplifies motor controlpower conversion controlpower electronics control,"['prevent', 'motor', 'runaway', 'monitoring', 'speedinduction', 'motor', 'speed', 'small', 'load', 'shaft', 'limit', 'speed', 'circuit', 'cut', 'power', 'motor', 'speed', 'exceed', 'certain', 'limit', 'example', 'speed', 'limit', 'low', 'number', 'simplifies', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1709,57586,"Indranil saaki<p>This projects presents the control of a grid interfacing inverter with integrated voltage unbalance correction. It is proposed to add an additional function to the inverter to decrease the negative-sequence voltage at the point of connection with the utility grid. Based on a symmetric sequence voltage decomposition and using an improved multi-variable filter, the grid-interfacing inverter intentionally absorbs a small amount of negative-sequence current from the grid, thereby helping to correct the negative-sequence voltage. Although the amplitude reduction contributed by each individual inverter system is small compared to the total negative-sequence component, grid interfacing inverter modules can collectively achieve substantial results in the grid. The integrated function and proposed control has been verified in simulations and by experiments on a laboratory prototype.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.All projects are open source to everyone for any Other Requirements &amp; queries kindly contact </p>fuzzy,fuzzy logic,grid intereface,indraneel saki,indranil saaki,power,power electronics,powersystems",805,63,5,0,854,indranil saakithis project present control grid interfacing inverter integrate voltage unbalance correction propose add additional function inverter decrease negative sequence voltage point connection utility grid base symmetric sequence voltage decomposition improve multi variable filter grid interfacing inverter intentionally absorbs small amount negative sequence current grid thereby help correct negative sequence voltage although amplitude reduction contribute individual inverter small compare total negative sequence component grid interfacing inverter module collectively achieve substantial result grid integrated function propose control verified experiment laboratory prototype guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute project open source everyone requirement amp query kindly contact fuzzyfuzzy logicgrid sakiindranil saakipowerpower,"['indranil', 'saakithis', 'project', 'present', 'control', 'grid', 'interfacing', 'inverter', 'integrate', 'voltage', 'unbalance', 'correction', 'propose', 'add', 'additional', 'function', 'inverter', 'decrease', 'negative', 'sequence', 'voltage', 'point', 'connection', 'utility', 'grid', 'base', 'symmetric', 'sequence', 'voltage', 'decomposition', 'improve', 'multi', 'variable', 'filter', 'grid', 'interfacing', 'inverter', 'intentionally', 'absorbs', 'small', 'amount', 'negative', 'sequence', 'current', 'grid', 'thereby', 'help', 'correct', 'negative', 'sequence', 'voltage', 'although', 'amplitude', 'reduction', 'contribute', 'individual', 'inverter', 'small', 'compare', 'total', 'negative', 'sequence', 'component', 'grid', 'interfacing', 'inverter', 'module', 'collectively', 'achieve', 'substantial', 'result', 'grid', 'integrated', 'function', 'propose', 'control', 'verified', 'experiment', 'laboratory', 'prototype', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'project', 'open', 'source', 'everyone', 'requirement', 'amp', 'query', 'kindly', 'contact', 'fuzzyfuzzy', 'logicgrid', 'sakiindranil', 'saakipowerpower']",4
1710,57588,"Indranil Saaki<p>The project deals with simulation studies on grid connected wind electric generators (WEG) employing SquirrelCage Induction Generator (SCIG) and Doubly Fed Induction Generator (DFIG). Their dynamic responses to wind speed variations and transient faults on transmission line are simulated in matlab software(2009b).This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>control system,faults response,grid interface,indraneel saki,indranil saaki,power electronics,power system stability,renweable energy resources,wind energy",506,21,3,0,569,indranil saakithe project deal study grid connect wind electric generator weg employ squirrelcage induction generator scig doubly feed induction generator dfig dynamic response wind speed variation transient fault transmission line software guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute control systemfaults responsegrid sakiindranil saakipower energy resourceswind energy,"['indranil', 'saakithe', 'project', 'deal', 'study', 'grid', 'connect', 'wind', 'electric', 'generator', 'weg', 'employ', 'squirrelcage', 'induction', 'generator', 'scig', 'doubly', 'feed', 'induction', 'generator', 'dfig', 'dynamic', 'response', 'wind', 'speed', 'variation', 'transient', 'fault', 'transmission', 'line', 'software', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'control', 'systemfaults', 'responsegrid', 'sakiindranil', 'saakipower', 'energy', 'resourceswind', 'energy']",4
1711,57589,"Indranil Saaki<p>Wind Farms (WF) employing squirrel cage induction generator (SCIG) directly connected to the grid, represent a large percentage of the wind energy conversion systems around the world. In facilities with moderated power generation, the WF are connected through medium voltage (MV) distribution headlines. A situation commonly found in such scheme is that the power generated is comparable to the transport capacity of the grid. This case is known as Wind Farm to Weak Grid Connection, and its main problem is the poor voltage regulation at the point of common coupling (PCC). Thus, the combination of weak grids, wind power fluctuation and system load changes produce disturbances in the PCC voltage, worsening the Power Quality and WF stability. This situation can be improved using control methods at generator level, or compensation techniques at PCC. In case of wind farms based on SCIG directly connected to the grid, is necessary to employ the last alternative. Custom power devices technology (CUPS) result very useful for this kind of application. In this paper is proposed a compensation strategy based on a particular CUPS device, the Unified Power Quality Compensator (UPQC). A customized internal fuzzy logic control scheme of the UPQC device was developed to regulate the voltage in the WF terminals, and to mitigate voltage fluctuations at grid side. The internal control strategy is based on the management of active and reactive power in the series and shunt converters of the UPQC, and the exchange of power between converters through UPQC DCâLink. This approach increase the compensation capability of the UPQC with respect to other custom strategies that use reactive power only. Simulations results show the effectiveness of the proposed compensation strategy for the enhancement of Power Quality and Wind Farm stability.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.All projects are open source to everyone for any Other Requirements &amp; queries kindly contact </p>power_conversion_control,power_electronics_control,facts,fuzzy ogic,grid intereface,indraneel saki,indranil saaki,non conventional energy,powersystem,renweable,upqc,wind energy",1852,256,5,0,1905,indranil saakiwind farm employ squirrel cage induction generator scig directly connect grid represent large percentage wind energy conversion around world facility moderate power generation connect medium voltage distribution headline situation commonly find scheme power generate comparable transport capacity grid case know wind farm weak grid connection main problem poor voltage regulation point common couple pcc thus combination weak grid wind power fluctuation load change produce disturbance pcc voltage worsen power quality stability situation improve control method generator level compensation technique pcc case wind farm base scig directly connect grid necessary employ last alternative custom power device technology cup result useful kind application paper propose compensation strategy base particular cup device unify power quality compensator upqc customize internal fuzzy logic control scheme upqc device develop regulate voltage terminal mitigate voltage fluctuation grid side internal control strategy base management active reactive power series shunt converter upqc exchange power converter upqc dclink approach increase compensation capability upqc respect custom strategy reactive power result show effectiveness propose compensation strategy enhancement power quality wind farm stability guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute project open source everyone requirement amp query kindly contact power conversion controlpower electronics ogicgrid sakiindranil saakinon conventional energy,"['indranil', 'saakiwind', 'farm', 'employ', 'squirrel', 'cage', 'induction', 'generator', 'scig', 'directly', 'connect', 'grid', 'represent', 'large', 'percentage', 'wind', 'energy', 'conversion', 'around', 'world', 'facility', 'moderate', 'power', 'generation', 'connect', 'medium', 'voltage', 'distribution', 'headline', 'situation', 'commonly', 'find', 'scheme', 'power', 'generate', 'comparable', 'transport', 'capacity', 'grid', 'case', 'know', 'wind', 'farm', 'weak', 'grid', 'connection', 'main', 'problem', 'poor', 'voltage', 'regulation', 'point', 'common', 'couple', 'pcc', 'thus', 'combination', 'weak', 'grid', 'wind', 'power', 'fluctuation', 'load', 'change', 'produce', 'disturbance', 'pcc', 'voltage', 'worsen', 'power', 'quality', 'stability', 'situation', 'improve', 'control', 'method', 'generator', 'level', 'compensation', 'technique', 'pcc', 'case', 'wind', 'farm', 'base', 'scig', 'directly', 'connect', 'grid', 'necessary', 'employ', 'last', 'alternative', 'custom', 'power', 'device', 'technology', 'cup', 'result', 'useful', 'kind', 'application', 'paper', 'propose', 'compensation', 'strategy', 'base', 'particular', 'cup', 'device', 'unify', 'power', 'quality', 'compensator', 'upqc', 'customize', 'internal', 'fuzzy', 'logic', 'control', 'scheme', 'upqc', 'device', 'develop', 'regulate', 'voltage', 'terminal', 'mitigate', 'voltage', 'fluctuation', 'grid', 'side', 'internal', 'control', 'strategy', 'base', 'management', 'active', 'reactive', 'power', 'series', 'shunt', 'converter', 'upqc', 'exchange', 'power', 'converter', 'upqc', 'dclink', 'approach', 'increase', 'compensation', 'capability', 'upqc', 'respect', 'custom', 'strategy', 'reactive', 'power', 'result', 'show', 'effectiveness', 'propose', 'compensation', 'strategy', 'enhancement', 'power', 'quality', 'wind', 'farm', 'stability', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'project', 'open', 'source', 'everyone', 'requirement', 'amp', 'query', 'kindly', 'contact', 'power', 'conversion', 'controlpower', 'electronics', 'ogicgrid', 'sakiindranil', 'saakinon', 'conventional', 'energy']",4
1712,57590,"Indranil Saaki<p>With the advance in wind turbine technologies, the cost of wind energy becomes competitive with other fuel-based generation resources. Due to the price hike of the fossil fuels and the concern of the global warming, the development of wind power has rapidly progressed over the last decade. Many countries have set goal for high penetration levels of wind generations. Recently, several large-scale wind generation projects have been implemented all over the world. It is economically beneficial to integrate very large amounts of wind capacity in power systems. Unlike other traditional generation facilities, using wind turbines present technical challenges in producing continuous and controllable electric power. With increase in contribution of wind power into electric power grid, energy storage devices will be required to dynamically match the intermitting of wind energy.     When wind turbines are connected to a grid, they should always maintain constant power. In order to maintain constant active power, the use of Doubly-Fed Induction Generators (DFIG) with Energy Storage System (ESS) like super capacitor (or) batteries can be used, with a two layer control scheme. In the two layers control there is a high-layer controller known as Wind Farm Supervisory Control (WFSC), which generates the active power (P), Stator Power (Ps), Energy storage power (Pe), DC voltage (Vdc) etc., references for the low-layer WTG controllers. The low-layer controller has two different controls i.e., Grid side controller (GSC) and Rotor side controller (RSC) which are used to control the AC/DC/AC converters of DFIG wind turbines and to generate the desired active power demand specified by the grid operator. Simulation is carried out in Matlab to evaluate the performance of wind farm equipped with 15 DFIG wind turbines with and without ESS to provide a constant active power of 36MW.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.</p>battery_system_management,power_conversion_control,power_electronics_control,dfig wind,indraneel saki,indranil saaki,power electronics,power system,renweable energy resouces,wind fram",12522,566,8,0,13145,indranil saakiwith advance wind turbine technology cost wind energy becomes competitive fuel base generation resource due price hike fossil fuel concern global warming development wind power rapidly progress last decade many country set goal high penetration level wind generation recently several large scale wind generation project implement world economically beneficial integrate large amount wind capacity power unlike traditional generation facility wind turbines present technical challenge produce continuous controllable electric power increase contribution wind power electric power grid energy storage device require dynamically match intermit wind energy wind turbine connect grid always maintain constant power order maintain constant active power doubly feed induction generator dfig energy storage like super capacitor battery two layer control scheme two layer control high layer controller know wind farm supervisory control wfsc generates active power stator power energy storage power voltage vdc etc reference low layer wtg controller low layer controller two different control grid side controller gsc rotor side controller rsc control converter dfig wind turbine generate desire active power demand specify grid operator carry evaluate performance wind farm equip dfig wind turbine without ess provide constant active power guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute battery managementpower conversion controlpower electronics controldfig windindraneel sakiindranil saakipower systemrenweable energy resouceswind fram,"['indranil', 'saakiwith', 'advance', 'wind', 'turbine', 'technology', 'cost', 'wind', 'energy', 'becomes', 'competitive', 'fuel', 'base', 'generation', 'resource', 'due', 'price', 'hike', 'fossil', 'fuel', 'concern', 'global', 'warming', 'development', 'wind', 'power', 'rapidly', 'progress', 'last', 'decade', 'many', 'country', 'set', 'goal', 'high', 'penetration', 'level', 'wind', 'generation', 'recently', 'several', 'large', 'scale', 'wind', 'generation', 'project', 'implement', 'world', 'economically', 'beneficial', 'integrate', 'large', 'amount', 'wind', 'capacity', 'power', 'unlike', 'traditional', 'generation', 'facility', 'wind', 'turbines', 'present', 'technical', 'challenge', 'produce', 'continuous', 'controllable', 'electric', 'power', 'increase', 'contribution', 'wind', 'power', 'electric', 'power', 'grid', 'energy', 'storage', 'device', 'require', 'dynamically', 'match', 'intermit', 'wind', 'energy', 'wind', 'turbine', 'connect', 'grid', 'always', 'maintain', 'constant', 'power', 'order', 'maintain', 'constant', 'active', 'power', 'doubly', 'feed', 'induction', 'generator', 'dfig', 'energy', 'storage', 'like', 'super', 'capacitor', 'battery', 'two', 'layer', 'control', 'scheme', 'two', 'layer', 'control', 'high', 'layer', 'controller', 'know', 'wind', 'farm', 'supervisory', 'control', 'wfsc', 'generates', 'active', 'power', 'stator', 'power', 'energy', 'storage', 'power', 'voltage', 'vdc', 'etc', 'reference', 'low', 'layer', 'wtg', 'controller', 'low', 'layer', 'controller', 'two', 'different', 'control', 'grid', 'side', 'controller', 'gsc', 'rotor', 'side', 'controller', 'rsc', 'control', 'converter', 'dfig', 'wind', 'turbine', 'generate', 'desire', 'active', 'power', 'demand', 'specify', 'grid', 'operator', 'carry', 'evaluate', 'performance', 'wind', 'farm', 'equip', 'dfig', 'wind', 'turbine', 'without', 'ess', 'provide', 'constant', 'active', 'power', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controldfig', 'windindraneel', 'sakiindranil', 'saakipower', 'systemrenweable', 'energy', 'resouceswind', 'fram']",4
1713,57616,"Indicates software is executing correctly<p>The circuit has a flashing green and blue lamp to show the diagnostic loop is running. The circuit indicates software is well as long as the data received is correct. As soon as the data is incorrect the output goes low indicating not well. The data is read at a specific time that is synchronized with the processor. If the data is clocked at the wrong time the output will also go to not well.</p>simulation,simulink",15,1,2,0,11,indicates software execute correctlythe circuit flash green blue lamp show diagnostic loop run circuit indicate software well long data receive correct soon data incorrect output low indicate well data read specific time synchronize processor data clock wrong time output also well,"['indicates', 'software', 'execute', 'correctlythe', 'circuit', 'flash', 'green', 'blue', 'lamp', 'show', 'diagnostic', 'loop', 'run', 'circuit', 'indicate', 'software', 'well', 'long', 'data', 'receive', 'correct', 'soon', 'data', 'incorrect', 'output', 'low', 'indicate', 'well', 'data', 'read', 'specific', 'time', 'synchronize', 'processor', 'data', 'clock', 'wrong', 'time', 'output', 'also', 'well']",0
1714,57617,"Easy to use solar panel model<p>This is the simulation of a single diode solar panel model which is of course self explanatory</p>modeling,power,simulink",114,9,5,0,120,easy solar panel modelthis single diode solar panel course self,"['easy', 'solar', 'panel', 'modelthis', 'single', 'diode', 'solar', 'panel', 'course', 'self']",4
1715,57618,"P&O MPPT USING BUCK CONVERTER<p>A SIMPLE SIMULATION OF P&amp;O MPPT ALGORITHM USING BUCK CONVERTER AND RESISTANCE LOAD</p>power_conversion_control,power_electronics_control,power,power electronics,simulation,simulink",170,12,5,0,179,mppt buck convertera simple amp mppt algorithm buck converter resistance loadpower conversion controlpower electronics,"['mppt', 'buck', 'convertera', 'simple', 'amp', 'mppt', 'algorithm', 'buck', 'converter', 'resistance', 'loadpower', 'conversion', 'controlpower', 'electronics']",1
1716,57633,diseÃ±o controlador pid analogo y digital<p>diseÃ±o de controlador pid analogo  con amplificadores operacionales y  diseÃ±o del controlador pid  digital hecho en arduino con simulink.</p>simulink,20,0,1,3,21,diseÃ±o controlador pid analogo digitaldiseÃ±o controlador pid analogo con amplificadores operacionales diseÃ±o del controlador pid digital hecho arduino con,"['diseÃ±o', 'controlador', 'pid', 'analogo', 'digitaldiseÃ±o', 'controlador', 'pid', 'analogo', 'con', 'amplificadores', 'operacionales', 'diseÃ±o', 'del', 'controlador', 'pid', 'digital', 'hecho', 'arduino', 'con']",8
1717,57635,exemple of CCM simulation<p>modelisation of a CCM</p>matlab,17,0,1,0,17,exemple ccm ccmmatlab,"['exemple', 'ccm', 'ccmmatlab']",2
1718,57662,"Simulink Models to control a DC Motor with a Raspberry Pi.<p>Our affordable and portable laboratory kit provides a versatile platform for engineering experiments in control systems courses.  This kit was developed as part of my dissertation research at the University of Illinois at Urbana-Champaign.  The models provided here are for a proportional and a proportional plus speed closed loop control of a DC motor.  The kit includes a Raspberry Pi, an H-Bridge (L239D), an ADC (MCP3002), a potentiometer, and other 3D printed parts.Learn more at <a href=""http://rebeccaee.com/labshttps://youtu.be/kc52rvpZ5Mk"">http://rebeccaee.com/labshttps://youtu.be/kc52rvpZ5Mk</a></p>electric_motor_control,power_conversion_control,power_electronics_control,raspberry pi,control,control design,control systems,dc motor,laboratory kit,mechatronics,pid,robotics,simulation",89,5,2,0,92,control motor raspberry affordable portable laboratory kit provide versatile platform engineering experiment control course kit develop part dissertation research university illinois urbana champaign provide proportional proportional plus speed close loop control motor kit include raspberry bridge adc mcp potentiometer print part learn http rebeccaee com lab youtu rvpz mkelectric motor controlpower conversion controlpower electronics designcontrol systemsdc motorlaboratory,"['control', 'motor', 'raspberry', 'affordable', 'portable', 'laboratory', 'kit', 'provide', 'versatile', 'platform', 'engineering', 'experiment', 'control', 'course', 'kit', 'develop', 'part', 'dissertation', 'research', 'university', 'illinois', 'urbana', 'champaign', 'provide', 'proportional', 'proportional', 'plus', 'speed', 'close', 'loop', 'control', 'motor', 'kit', 'include', 'raspberry', 'bridge', 'adc', 'mcp', 'potentiometer', 'print', 'part', 'learn', 'http', 'rebeccaee', 'com', 'lab', 'youtu', 'rvpz', 'mkelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'designcontrol', 'systemsdc', 'motorlaboratory']",4
1719,57665,"indraneel saki ( indranil Saaki)<p>When dealing with angle stability of power systems, damping of power system oscillations is very important factor particularly when a fault occurrence in the system.  This work is dealing with damping of oscillations in an SMIB system by a proposed combination of PSS and STATCOM. A new additional support for PSS even during severe disturbances is also provided by proposed fuzzy controller. STATCOM is also added to power system to exchange reactive power and to inject active power which will further enhance damping of oscillations          STATCOM is one of the most significant devices in FACTS technology which is used in parallel compensation, enhancing the transient stability, limiting the low frequency oscillations and etc. designing a proper controller is effective in operation of STATCOM. In this work, the equations that describe the proposed system have been linearized and then the fuzzy logic controller has been designed for power System stabilizer. Damping the transients of the synchronous generator is the aim of designing of fuzzy logic controller whether the input power of generator has been changed suddenly. The fuzzy logic controller performance in a SMIB system is also examined using simulation studies and the results validate the efficiency of the proposed controller.This guide is useful to anyone who would like to contribute to open source projects on MATLAB. Open Source is a Great Platform for MATLAB Enthusiasts to share idea. Thank you for your willingness to contribute.All projects are open source to everyone for any Other Requirements &amp; queries kindly contact Designed By Indraneel saki (Indranil saaki)</p>facts,fuzzy,indraneel saki,indranil saaki,power system,pss,simulation,statcom",1970,122,7,0,1235,indraneel saki indranil saaki deal angle stability power damp power oscillation important factor particularly fault occurrence work deal damp oscillation smib propose combination statcom new additional support pss even severe disturbance also provide propose fuzzy controller statcom also add power exchange reactive power inject active power enhance damp oscillation statcom one significant device facts technology parallel compensation enhance transient stability limit low frequency oscillation etc design proper controller effective operation statcom work equation describe propose linearized fuzzy logic controller design power stabilizer damp transient synchronous generator aim design fuzzy logic controller whether input power generator change suddenly fuzzy logic controller performance smib also examine study result validate efficiency propose controller guide useful anyone would like contribute open source project open source great platform enthusiast share idea thank willingness contribute project open source everyone requirement amp query kindly contact design indraneel saki indranil saaki sakiindranil saakipower,"['indraneel', 'saki', 'indranil', 'saaki', 'deal', 'angle', 'stability', 'power', 'damp', 'power', 'oscillation', 'important', 'factor', 'particularly', 'fault', 'occurrence', 'work', 'deal', 'damp', 'oscillation', 'smib', 'propose', 'combination', 'statcom', 'new', 'additional', 'support', 'pss', 'even', 'severe', 'disturbance', 'also', 'provide', 'propose', 'fuzzy', 'controller', 'statcom', 'also', 'add', 'power', 'exchange', 'reactive', 'power', 'inject', 'active', 'power', 'enhance', 'damp', 'oscillation', 'statcom', 'one', 'significant', 'device', 'facts', 'technology', 'parallel', 'compensation', 'enhance', 'transient', 'stability', 'limit', 'low', 'frequency', 'oscillation', 'etc', 'design', 'proper', 'controller', 'effective', 'operation', 'statcom', 'work', 'equation', 'describe', 'propose', 'linearized', 'fuzzy', 'logic', 'controller', 'design', 'power', 'stabilizer', 'damp', 'transient', 'synchronous', 'generator', 'aim', 'design', 'fuzzy', 'logic', 'controller', 'whether', 'input', 'power', 'generator', 'change', 'suddenly', 'fuzzy', 'logic', 'controller', 'performance', 'smib', 'also', 'examine', 'study', 'result', 'validate', 'efficiency', 'propose', 'controller', 'guide', 'useful', 'anyone', 'would', 'like', 'contribute', 'open', 'source', 'project', 'open', 'source', 'great', 'platform', 'enthusiast', 'share', 'idea', 'thank', 'willingness', 'contribute', 'project', 'open', 'source', 'everyone', 'requirement', 'amp', 'query', 'kindly', 'contact', 'design', 'indraneel', 'saki', 'indranil', 'saaki', 'sakiindranil', 'saakipower']",4
1720,57671,"indraneel saki ( indranil Saaki)<p>In this project, a buck half-bridge DC-DC converter is used as a single-stage power factor correction (PFC) converter for feeding a voltage source inverter (VSI) based permanent magnet brushless DC motor (PMBLDCM) drive. The front end of this PFC converter is a diode bridge rectifier (DBR) fed from pv power generation. The PMBLDCM is used to drive a compressor load of an air conditioner through a three-phase VSI fed from a controlled DC link voltage. The speed of the compressor is controlled to achieve energy conservation using a concept of the voltage control at PV DC link proportional to the desired speed of the PMBLDCM. Therefore the VSI is operated only as an electronic commutator of the PMBLDCM. The stator current of the PMBLDCM during step change of reference speed is controlled by a rate limiter for the reference voltage at DC link. The proposed PMBLDCM drive with PV voltage control based PFC converter is designed, modelled and its performanceis simulated in Matlab-Simulink environment for an air conditioner compressor driven through a 1.5 kW, 1500 rpmPMBLDC motor. The evaluation results of the proposed speed control scheme are presented to demonstrate an improved efficiency of the proposed drive system with PFC feature in wide range of the speed and an Dc input voltage.</p>electric_motor_control,power_conversion_control,power_electronics_control,air conditioner,buck halfbridge converter,hall sensors,indraneel saki,indranil saaki,modleing,pfc,pmbldcm,pv cell,simulink,voltage control,vsi",315,33,6,0,333,indraneel saki indranil saaki project buck half bridge converter single stage power factor correction pfc converter feed voltage source inverter vsi base permanent magnet brushless motor pmbldcm drive front end pfc converter diode bridge rectifier dbr feed power generation pmbldcm drive compressor load air conditioner three phase vsi fed control link voltage speed compressor control achieve energy conservation concept voltage control link proportional desire speed pmbldcm therefore vsi operated electronic commutator pmbldcm stator current pmbldcm step change reference speed control rate limiter reference voltage link propose pmbldcm drive voltage control base pfc converter design performanceis environment air conditioner compressor drive rpmpmbldc motor evaluation result propose speed control scheme present demonstrate improve efficiency propose drive pfc feature wide range speed input voltage electric motor controlpower conversion controlpower electronics controlair conditionerbuck halfbridge converterhall sakiindranil controlvsi,"['indraneel', 'saki', 'indranil', 'saaki', 'project', 'buck', 'half', 'bridge', 'converter', 'single', 'stage', 'power', 'factor', 'correction', 'pfc', 'converter', 'feed', 'voltage', 'source', 'inverter', 'vsi', 'base', 'permanent', 'magnet', 'brushless', 'motor', 'pmbldcm', 'drive', 'front', 'end', 'pfc', 'converter', 'diode', 'bridge', 'rectifier', 'dbr', 'feed', 'power', 'generation', 'pmbldcm', 'drive', 'compressor', 'load', 'air', 'conditioner', 'three', 'phase', 'vsi', 'fed', 'control', 'link', 'voltage', 'speed', 'compressor', 'control', 'achieve', 'energy', 'conservation', 'concept', 'voltage', 'control', 'link', 'proportional', 'desire', 'speed', 'pmbldcm', 'therefore', 'vsi', 'operated', 'electronic', 'commutator', 'pmbldcm', 'stator', 'current', 'pmbldcm', 'step', 'change', 'reference', 'speed', 'control', 'rate', 'limiter', 'reference', 'voltage', 'link', 'propose', 'pmbldcm', 'drive', 'voltage', 'control', 'base', 'pfc', 'converter', 'design', 'performanceis', 'environment', 'air', 'conditioner', 'compressor', 'drive', 'rpmpmbldc', 'motor', 'evaluation', 'result', 'propose', 'speed', 'control', 'scheme', 'present', 'demonstrate', 'improve', 'efficiency', 'propose', 'drive', 'pfc', 'feature', 'wide', 'range', 'speed', 'input', 'voltage', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlair', 'conditionerbuck', 'halfbridge', 'converterhall', 'sakiindranil', 'controlvsi']",3
1721,57673,"indraneel saki ( indranil Saaki)<p>This project proposes a new control approach for a unified power flow controller (UPFC) for power system oscillation damping. This control is simple to implement, yet is valid over a wide range of operating conditions. It is also effective in the presence of multiple modes of oscillation. The proposed control is implemented in several test systems and is compared against a traditional PI control.</p>facts,indraneel saki,indranil saaki,oscillation damping,power system stability,unified power flow controller upfc",1404,101,5,0,1627,indraneel saki indranil saaki project propose new control approach unified power flow controller upfc power oscillation damp control simple implement yet valid wide range operate condition also effective presence multiple mode oscillation propose control implement several test compare traditional control factsindraneel sakiindranil dampingpower power flow controller upfc,"['indraneel', 'saki', 'indranil', 'saaki', 'project', 'propose', 'new', 'control', 'approach', 'unified', 'power', 'flow', 'controller', 'upfc', 'power', 'oscillation', 'damp', 'control', 'simple', 'implement', 'yet', 'valid', 'wide', 'range', 'operate', 'condition', 'also', 'effective', 'presence', 'multiple', 'mode', 'oscillation', 'propose', 'control', 'implement', 'several', 'test', 'compare', 'traditional', 'control', 'factsindraneel', 'sakiindranil', 'dampingpower', 'power', 'flow', 'controller', 'upfc']",4
1722,57675,"indraneel saki ( indranil Saaki)<p>This project discusses the economic analysis and environmental impacts of integrating a photovoltaic (PV) array into diesel-electric power systems for remote villages. MATLAB Simulink is used to match the load with the demand and apportion the electrical production between the PV and diesel-electric generator. The economic part of the model calculates the fuel consumed, the kilo watt hours obtained per gallon of fuel supplied, and the total cost of fuel. The environmental part of the model calculates the 2, particulate matter (PM), and the x emitted to the atmosphere. Simulations based on an actual system in the remote Alaskan community of Lime Village were performed for three cases: 1) diesel only; 2) diesel-battery; and 3) PV with diesel-battery using a one-year time period. The simulation results were utilized to calculate the energy payback, the simple payback time for the PV module, and the avoided costs of 2, x, and PM. Post-simulation analysis includes the comparison of results with those predicted by Hybrid Optimization Model for Electric Renewables (HOMER). The life-cycle cost (LCC) and air emissions results of our Simulink model were comparable to those predicted by HOMER.</p>battery_system_management,power_electronics_control,diesel generator,hybrid power generation,indraneel saki,indranil saaki,pv cell,renweable energy resourses,simulation,wind",650,26,4,0,731,indraneel saki indranil saaki project discuss economic analysis environmental impact integrate photovoltaic array diesel electric power remote village match load demand apportion electrical production diesel electric generator economic part calculate fuel consume kilo watt hour obtain per gallon fuel supply total cost fuel environmental part calculate particulate matter emit atmosphere base actual remote alaskan community lime village perform three case diesel diesel battery diesel battery one year time period result utilized calculate energy payback simple payback time module avoid cost post analysis include comparison result predict hybrid optimization electric renewables homer life cycle cost lcc air emission result comparable predicted homer battery managementpower electronics controldiesel generatorhybrid power sakiindranil saakipv cellrenweable energy,"['indraneel', 'saki', 'indranil', 'saaki', 'project', 'discuss', 'economic', 'analysis', 'environmental', 'impact', 'integrate', 'photovoltaic', 'array', 'diesel', 'electric', 'power', 'remote', 'village', 'match', 'load', 'demand', 'apportion', 'electrical', 'production', 'diesel', 'electric', 'generator', 'economic', 'part', 'calculate', 'fuel', 'consume', 'kilo', 'watt', 'hour', 'obtain', 'per', 'gallon', 'fuel', 'supply', 'total', 'cost', 'fuel', 'environmental', 'part', 'calculate', 'particulate', 'matter', 'emit', 'atmosphere', 'base', 'actual', 'remote', 'alaskan', 'community', 'lime', 'village', 'perform', 'three', 'case', 'diesel', 'diesel', 'battery', 'diesel', 'battery', 'one', 'year', 'time', 'period', 'result', 'utilized', 'calculate', 'energy', 'payback', 'simple', 'payback', 'time', 'module', 'avoid', 'cost', 'post', 'analysis', 'include', 'comparison', 'result', 'predict', 'hybrid', 'optimization', 'electric', 'renewables', 'homer', 'life', 'cycle', 'cost', 'lcc', 'air', 'emission', 'result', 'comparable', 'predicted', 'homer', 'battery', 'managementpower', 'electronics', 'controldiesel', 'generatorhybrid', 'power', 'sakiindranil', 'saakipv', 'cellrenweable', 'energy']",5
1723,57690,"indraneel saki ( indranil Saaki)<p>A new transformerless four-leg topology is suggested for shunt compensation, themodular multilevel converters (MMC) based on the half-bridge converters, to achieve higher performance a STATCOM in a distorted and unbalanced mediumvoltage large-current (MV-LC) system. Further, an extendedMMC (EMMC) is proposed in order to manage more accurate compensation for high-power applications. Both proposals can be controlledfor various purposes such as reactive power and unbalance compensation, voltage regulation, and harmonic cancellation.Moreover, related control strategies are also suggested for both the MMC and the EMMC to ensure that the source-end three-phase currents are sinusoidal and balanced. Also, the dc-link capacitors of the half-bridge converters are regulated. One interesting application for the EMMC-based STATCOMcould be the improvement in power quality and performance of the electrified railway traction power supply system. Both the MMC- and the EMMC-based STATCOM along with their proposed control strategies were simulated;further, to verify the suggestions, these proposals were also implemented on a 30-kVA modular laboratory prototype. Experiments and simulations confirm the predefined objectives.</p>power_conversion_control,power_electronics_control,dsp controller,facts,harmonics,mediumvoltage largecurrent mvlc,modular multilevel converters,statcom,unbalanced compensation",601,45,5,0,687,indraneel saki indranil saaki new transformerless four leg topology suggest shunt compensation themodular multilevel converter mmc base half bridge converter achieve high performance statcom distort unbalanced mediumvoltage large current extendedmmc emmc propose order manage accurate compensation high power application proposal controlledfor various purpose reactive power unbalance compensation voltage regulation harmonic cancellation moreover relate control strategy also suggest mmc emmc ensure source end three phase current sinusoidal balance also link capacitor half bridge converter regulate one interesting application emmc base statcomcould improvement power quality performance electrify railway traction power supply mmc emmc base statcom along propose control strategies verify suggestion proposal also implement kva modular laboratory prototype experiment confirm predefined objective power conversion controlpower electronics controldsp largecurrent mvlcmodular multilevel compensation,"['indraneel', 'saki', 'indranil', 'saaki', 'new', 'transformerless', 'four', 'leg', 'topology', 'suggest', 'shunt', 'compensation', 'themodular', 'multilevel', 'converter', 'mmc', 'base', 'half', 'bridge', 'converter', 'achieve', 'high', 'performance', 'statcom', 'distort', 'unbalanced', 'mediumvoltage', 'large', 'current', 'extendedmmc', 'emmc', 'propose', 'order', 'manage', 'accurate', 'compensation', 'high', 'power', 'application', 'proposal', 'controlledfor', 'various', 'purpose', 'reactive', 'power', 'unbalance', 'compensation', 'voltage', 'regulation', 'harmonic', 'cancellation', 'moreover', 'relate', 'control', 'strategy', 'also', 'suggest', 'mmc', 'emmc', 'ensure', 'source', 'end', 'three', 'phase', 'current', 'sinusoidal', 'balance', 'also', 'link', 'capacitor', 'half', 'bridge', 'converter', 'regulate', 'one', 'interesting', 'application', 'emmc', 'base', 'statcomcould', 'improvement', 'power', 'quality', 'performance', 'electrify', 'railway', 'traction', 'power', 'supply', 'mmc', 'emmc', 'base', 'statcom', 'along', 'propose', 'control', 'strategies', 'verify', 'suggestion', 'proposal', 'also', 'implement', 'kva', 'modular', 'laboratory', 'prototype', 'experiment', 'confirm', 'predefined', 'objective', 'power', 'conversion', 'controlpower', 'electronics', 'controldsp', 'largecurrent', 'mvlcmodular', 'multilevel', 'compensation']",4
1724,57706,"indraneel saki ( indranil Saaki)<p>Integration of significant amount of solar power challenges the power system stability operation. This projectpresents analyses on the static and transient voltage characteristics at the point of common coupling of agrid-connected photovoltaic system. The static voltage response,known as a PV curve, for the photovoltaic system is analyzed. The voltage transient behaviors caused by the disturbance of parameters in photovoltaic generation system are also studied. In particular, we try to find out the impact of system parameters, such as temperature, solar irradiance, and load changes on the voltage stability. In addition, a method of voltage stability sensitivity analysis is presented for comparison between the impacts of different parameters on voltage stability.</p>power_conversion_control,power_electronics_control,indraneel saki,indranil saaki,mppt,photovoltaic generation,pv cell,pv curve,stability sensitivity analysis,transient voltage response",548,58,7,0,530,indraneel saki indranil saaki integration significant amount solar power challenge power stability operation projectpresents analyse static transient voltage characteristic point common couple agrid connect photovoltaic static voltage responseknown curve photovoltaic analyze voltage transient behavior cause disturbance parameter photovoltaic generation also study particular try find impact parameter temperature solar irradiance load change voltage stability addition method voltage stability sensitivity analysis present comparison impact different parameter voltage stability power conversion controlpower electronics sakiindranil generationpv cellpv curvestability sensitivity voltage response,"['indraneel', 'saki', 'indranil', 'saaki', 'integration', 'significant', 'amount', 'solar', 'power', 'challenge', 'power', 'stability', 'operation', 'projectpresents', 'analyse', 'static', 'transient', 'voltage', 'characteristic', 'point', 'common', 'couple', 'agrid', 'connect', 'photovoltaic', 'static', 'voltage', 'responseknown', 'curve', 'photovoltaic', 'analyze', 'voltage', 'transient', 'behavior', 'cause', 'disturbance', 'parameter', 'photovoltaic', 'generation', 'also', 'study', 'particular', 'try', 'find', 'impact', 'parameter', 'temperature', 'solar', 'irradiance', 'load', 'change', 'voltage', 'stability', 'addition', 'method', 'voltage', 'stability', 'sensitivity', 'analysis', 'present', 'comparison', 'impact', 'different', 'parameter', 'voltage', 'stability', 'power', 'conversion', 'controlpower', 'electronics', 'sakiindranil', 'generationpv', 'cellpv', 'curvestability', 'sensitivity', 'voltage', 'response']",4
1725,57718,"indraneel saki ( indranil Saaki)<p>Maglev trains use magnetism to levitate above the tracks on which they travel. They are faster, more efficient, and more environmentally friendly than modern wheeled trains. It may be that one day soon, maglev technology will be commonplace throughout the world. This project reviews the history of these trains, how they work, as well as their benefits and drawbacks. It also discusses the importance of electrical engineering in developing maglev, and how electrical engineers can make this technology the next transportation revolution.so the proposed control NARAM_L2 method developed for better performance in magnetic levitation train system.</p>indraneel saki,indranil saaki,magnetic levitation,naram_l2,simulation",104,11,3,0,104,indraneel saki indranil saaki maglev train magnetism levitate track travel faster efficient environmentally friendly modern wheel train may one day soon maglev technology commonplace throughout world project review history train work well benefit drawback also discuss importance electrical engineering develop maglev electrical engineer make technology next transportation revolution propose control naram method develop good performance magnetic levitation train indraneel sakiindranil saakimagnetic levitationnaram,"['indraneel', 'saki', 'indranil', 'saaki', 'maglev', 'train', 'magnetism', 'levitate', 'track', 'travel', 'faster', 'efficient', 'environmentally', 'friendly', 'modern', 'wheel', 'train', 'may', 'one', 'day', 'soon', 'maglev', 'technology', 'commonplace', 'throughout', 'world', 'project', 'review', 'history', 'train', 'work', 'well', 'benefit', 'drawback', 'also', 'discuss', 'importance', 'electrical', 'engineering', 'develop', 'maglev', 'electrical', 'engineer', 'make', 'technology', 'next', 'transportation', 'revolution', 'propose', 'control', 'naram', 'method', 'develop', 'good', 'performance', 'magnetic', 'levitation', 'train', 'indraneel', 'sakiindranil', 'saakimagnetic', 'levitationnaram']",5
1726,57719,"indraneel saki ( indranil Saaki)<p>plant flow rate control by neural network predictive controller designed in 2016a</p>ann plant control,indraneel saki,indranil saaki,neural network predictive controller",82,8,4,0,89,indraneel saki indranil saaki plant flow rate control neural network predictive controller design aann plant sakiindranil saakineural network predictive controller,"['indraneel', 'saki', 'indranil', 'saaki', 'plant', 'flow', 'rate', 'control', 'neural', 'network', 'predictive', 'controller', 'design', 'aann', 'plant', 'sakiindranil', 'saakineural', 'network', 'predictive', 'controller']",4
1727,57720,"indraneel saki ( indranil Saaki)<p>In order to solve more serious harmonic problems of the grid, hybrid active power filters (HAPF) have been proposed earlier. The HAPF is the combination of active and passive power filters. The aim in the HAPF design is to complement or enhance the performance of the active power filter or passive power filter by adding passive or active components to its structure. HAPF is categorized in parallel hybrid active power filters (PHAPFs) and series hybrid active power filters (SHAPFs) based on the used active filter type. A series of PHAPFs was proposed after the 1990s. Cheng et al. proposed a new hybrid active power filter to achieve the power-rating reduction of the active filter. But the active power filter still bears the fundamental voltage in this design. In this project a novel HAPF with injection circuit was proposed. The novel topology has great promise in reducing harmonics with a relatively low capacity APF. For harmonic current tracking controls, there are two schemes: One is the linear current control, such as ramp comparison control, deadbeat control, sinusoidal internal model control, generalized integrators control, etc.; the other is nonlinear current control, such as hysteresis control, predictive control, etc.This project deals with a hybrid active power filter with injection circuit (IHAPF). It shows great promise in reducing harmonics and improving the power factor with a relatively low capacity active power filter. An adaptive fuzzy dividing frequency-control method composed of a generalized PI control unit and fuzzy adjustor unit was proposed. In the new control scheme, the generalized PI control unit is used to achieve dividing frequency control; the fuzzy adjustor unit is used to adjusted parameters of the PI control unit to produce better adaptive ability and dynamic response. At the same time, the control strategy is generally useful and applicable to other active filters. This project concluded that the stability of the IHAPF based on detection supply current is superior to that of others. To minimize the capacity of IHAPF, an adaptive fuzzy dividing frequency-control method is proposed by analyzing the bode diagram, which consists of two control units: a generalized integrator control unit and fuzzy adjustor unit. The generalized integrator is used for dividing frequency integral control, while fuzzy arithmetic is used for adjusting proportional-integral coefficients timely. And the control method is generally useful and applicable to any other active filters. Compared to other IHAPF control methods, the adaptive fuzzy dividing frequency control shows the advantages of shorter response time and higher control precision. The simulation and experimental results show in  marine and offshore industry.  that the new control method is not only easy to be calculated and implemented, but also very effective in reducing harmonics.</p>apf,dividing frequency control,dsatcom,fuzzy adjustor,generalized integrator,harmaonics,hybrid active power filter hapf,hybride active power filters,indraneel saki,indranil saaki,marine applications,power quality",450,42,5,0,456,indraneel saki indranil saaki order solve serious harmonic problem grid hybrid active power filter hapf propose earlier hapf combination active passive power filter aim hapf design complement enhance performance active power filter passive power filter add passive active component structure hapf categorize parallel hybrid active power filter phapfs series hybrid active power filter shapfs base used active filter type series phapfs propose cheng propose new hybrid active power filter achieve power rating reduction active filter active power filter still bear fundamental voltage design project novel hapf injection circuit propose novel topology great promise reduce harmonic relatively low capacity apf harmonic current tracking control two scheme one linear current control ramp comparison control deadbeat control sinusoidal internal control generalize integrator control etc nonlinear current control hysteresis control predictive control etc project deal hybrid active power filter injection circuit ihapf show great promise reduce harmonic improve power factor relatively low capacity active power filter adaptive fuzzy divide frequency control method compose generalize control unit fuzzy adjustor unit propose new control scheme generalize control unit achieve divide frequency control fuzzy adjustor unit adjusted parameter control unit produce well adaptive ability dynamic response time control strategy generally useful applicable active filter project conclude stability ihapf base detection supply current superior others minimize capacity ihapf adaptive fuzzy divide frequency control method propose analyze bode diagram consist two control unit generalize integrator control unit fuzzy adjustor unit generalize integrator divide frequency integral control fuzzy arithmetic adjust proportional integral coefficient timely control method generally useful applicable active filter compare ihapf control method adaptive fuzzy divide frequency control show advantage short response time high control precision experimental result show marine offshore industry new control method easy calculate implement also effective reduce harmonic apfdividing frequency active power filter hapfhybride active power sakiindranil saakimarine quality,"['indraneel', 'saki', 'indranil', 'saaki', 'order', 'solve', 'serious', 'harmonic', 'problem', 'grid', 'hybrid', 'active', 'power', 'filter', 'hapf', 'propose', 'earlier', 'hapf', 'combination', 'active', 'passive', 'power', 'filter', 'aim', 'hapf', 'design', 'complement', 'enhance', 'performance', 'active', 'power', 'filter', 'passive', 'power', 'filter', 'add', 'passive', 'active', 'component', 'structure', 'hapf', 'categorize', 'parallel', 'hybrid', 'active', 'power', 'filter', 'phapfs', 'series', 'hybrid', 'active', 'power', 'filter', 'shapfs', 'base', 'used', 'active', 'filter', 'type', 'series', 'phapfs', 'propose', 'cheng', 'propose', 'new', 'hybrid', 'active', 'power', 'filter', 'achieve', 'power', 'rating', 'reduction', 'active', 'filter', 'active', 'power', 'filter', 'still', 'bear', 'fundamental', 'voltage', 'design', 'project', 'novel', 'hapf', 'injection', 'circuit', 'propose', 'novel', 'topology', 'great', 'promise', 'reduce', 'harmonic', 'relatively', 'low', 'capacity', 'apf', 'harmonic', 'current', 'tracking', 'control', 'two', 'scheme', 'one', 'linear', 'current', 'control', 'ramp', 'comparison', 'control', 'deadbeat', 'control', 'sinusoidal', 'internal', 'control', 'generalize', 'integrator', 'control', 'etc', 'nonlinear', 'current', 'control', 'hysteresis', 'control', 'predictive', 'control', 'etc', 'project', 'deal', 'hybrid', 'active', 'power', 'filter', 'injection', 'circuit', 'ihapf', 'show', 'great', 'promise', 'reduce', 'harmonic', 'improve', 'power', 'factor', 'relatively', 'low', 'capacity', 'active', 'power', 'filter', 'adaptive', 'fuzzy', 'divide', 'frequency', 'control', 'method', 'compose', 'generalize', 'control', 'unit', 'fuzzy', 'adjustor', 'unit', 'propose', 'new', 'control', 'scheme', 'generalize', 'control', 'unit', 'achieve', 'divide', 'frequency', 'control', 'fuzzy', 'adjustor', 'unit', 'adjusted', 'parameter', 'control', 'unit', 'produce', 'well', 'adaptive', 'ability', 'dynamic', 'response', 'time', 'control', 'strategy', 'generally', 'useful', 'applicable', 'active', 'filter', 'project', 'conclude', 'stability', 'ihapf', 'base', 'detection', 'supply', 'current', 'superior', 'others', 'minimize', 'capacity', 'ihapf', 'adaptive', 'fuzzy', 'divide', 'frequency', 'control', 'method', 'propose', 'analyze', 'bode', 'diagram', 'consist', 'two', 'control', 'unit', 'generalize', 'integrator', 'control', 'unit', 'fuzzy', 'adjustor', 'unit', 'generalize', 'integrator', 'divide', 'frequency', 'integral', 'control', 'fuzzy', 'arithmetic', 'adjust', 'proportional', 'integral', 'coefficient', 'timely', 'control', 'method', 'generally', 'useful', 'applicable', 'active', 'filter', 'compare', 'ihapf', 'control', 'method', 'adaptive', 'fuzzy', 'divide', 'frequency', 'control', 'show', 'advantage', 'short', 'response', 'time', 'high', 'control', 'precision', 'experimental', 'result', 'show', 'marine', 'offshore', 'industry', 'new', 'control', 'method', 'easy', 'calculate', 'implement', 'also', 'effective', 'reduce', 'harmonic', 'apfdividing', 'frequency', 'active', 'power', 'filter', 'hapfhybride', 'active', 'power', 'sakiindranil', 'saakimarine', 'quality']",4
1728,57745,"In this project are shown how to control a SISO system with arduino and simulink<p>This project shown a way to calibrate PI+D gains, by controlling a beam system. This project use Arduino, MATLAB, Simulink, and the real time functions implemented in simulink platform. this project shown that using simulink with arduino is too simple, motivating the constant develop of control systems in schools and universities.The control tools of matlab are very powerful, the increasing of open hardware community  is an excellent way to create new projects and algorithms, the develop and the exploring the capabilities of Matlab has to be a constant effort. That community has a lot to give in this process.i have a lot of project with matlab and arduino, my english is not good but i think that i could improve every time, if you help me, i will be very grateful. Thanks. This is my blog i hope that you enjoy it.  tutosingenieria.blogspot.comhttps://youtu.be/cBer77LwpM8AquÃ­ se encuentra la versiÃ³n de este proyecto tambien en espaÃ±ol, para que los hispano hablantes no se queden con las ganas de conocer el proyecto y seguir mi canal de youtube. Donde explico muchos temas relacionados con ingenierÃ­a, matlab y hardware libre. <a href=""https://youtu.be/sVaxsy6FIt4"">https://youtu.be/sVaxsy6FIt4</a></p>arduino,control,control design,matlab,matlabhw2k16,open source,pid,youtube",19,0,1,2,23,project show control siso arduino project show way calibrate gain control beam project arduino real time function implement platform project show arduino simple motivating constant develop control school university control tool powerful increase open hardware community excellent way create new project algorithms develop explore capability constant effort community lot give process lot project arduino english good think could improve every time help grateful thanks blog hope enjoy tutosingenieria blogspot com youtu cber lwpm aquÃ­ encuentra versiÃ³n este proyecto tambien espaÃ±ol para que los hispano hablantes queden con ganas conocer proyecto seguir canal youtube donde explico muchos temas relacionados con ingenierÃ­a hardware libre youtu svaxsy fit open,"['project', 'show', 'control', 'siso', 'arduino', 'project', 'show', 'way', 'calibrate', 'gain', 'control', 'beam', 'project', 'arduino', 'real', 'time', 'function', 'implement', 'platform', 'project', 'show', 'arduino', 'simple', 'motivating', 'constant', 'develop', 'control', 'school', 'university', 'control', 'tool', 'powerful', 'increase', 'open', 'hardware', 'community', 'excellent', 'way', 'create', 'new', 'project', 'algorithms', 'develop', 'explore', 'capability', 'constant', 'effort', 'community', 'lot', 'give', 'process', 'lot', 'project', 'arduino', 'english', 'good', 'think', 'could', 'improve', 'every', 'time', 'help', 'grateful', 'thanks', 'blog', 'hope', 'enjoy', 'tutosingenieria', 'blogspot', 'com', 'youtu', 'cber', 'lwpm', 'aquÃ­', 'encuentra', 'versiÃ³n', 'este', 'proyecto', 'tambien', 'espaÃ±ol', 'para', 'que', 'los', 'hispano', 'hablantes', 'queden', 'con', 'ganas', 'conocer', 'proyecto', 'seguir', 'canal', 'youtube', 'donde', 'explico', 'muchos', 'temas', 'relacionados', 'con', 'ingenierÃ­a', 'hardware', 'libre', 'youtu', 'svaxsy', 'fit', 'open']",5
1729,57752,"indraneel saki ( indranil Saaki)<p>power quality problems solved in Aircraft power generation and distribution system with dstatcom with ANN technique</p>aircraft,ann,dstatcom,indraneel saki,indranil saaki,power quality",695,66,6,0,735,indraneel saki indranil saaki power quality problem solve aircraft power generation distribution dstatcom ann sakiindranil saakipower quality,"['indraneel', 'saki', 'indranil', 'saaki', 'power', 'quality', 'problem', 'solve', 'aircraft', 'power', 'generation', 'distribution', 'dstatcom', 'ann', 'sakiindranil', 'saakipower', 'quality']",5
1730,57792,"indraneel saki ( indranil Saaki)<p>Survey results suggest that 92% of interruption at industrial facilities is voltage sag related. The voltage sag compensator,based on a transformer-coupled series-connected voltagesource inverter, is among the most cost-effective solution against voltage sags. When voltage sags happen, the transformers, which are often installed in front of critical loads for electrical isolation,are exposed to the disfigured voltages and a dc offset will occur inits flux linkage. When the compensator restores the load voltage,the flux linkage will be driven to the level of magnetic saturation and severe inrush current occurs. The compensator is likely to be interrupted because of its own overcurrent protection, and eventually, the compensation fails, and the critical loads are interrupted by the voltage sag. This project proposes an inrush current mitigation technique together with a state-feedback controller for the voltage sag compensator. The operation principles of the proposed method are specifically presented, and experiments are provided to validate the proposed approach.</p>power_conversion_control,power_electronics_control,flux linkage,indraneel saki,indranil saaki,inrush current,power quality,simulation,transformer,voltage sag,voltage sag compensator",433,31,4,0,542,indraneel saki indranil saaki survey result suggest interruption industrial facility voltage sag relate voltage sag transformer couple series connect voltagesource inverter among cost effective solution voltage sags voltage sag happen transformer often instal front critical load electrical isolationare expose disfigure voltage offset occur inits flux linkage compensator restore load voltagethe flux linkage drive level magnetic saturation severe inrush current occur compensator likely interrupt overcurrent protection eventually compensation fail critical load interrupt voltage sag project propose inrush current mitigation technique together state feedback controller voltage sag compensator operation principle propose method specifically present experiment provide validate propose approach power conversion controlpower electronics controlflux sakiindranil saakiinrush currentpower sagvoltage sag compensator,"['indraneel', 'saki', 'indranil', 'saaki', 'survey', 'result', 'suggest', 'interruption', 'industrial', 'facility', 'voltage', 'sag', 'relate', 'voltage', 'sag', 'transformer', 'couple', 'series', 'connect', 'voltagesource', 'inverter', 'among', 'cost', 'effective', 'solution', 'voltage', 'sags', 'voltage', 'sag', 'happen', 'transformer', 'often', 'instal', 'front', 'critical', 'load', 'electrical', 'isolationare', 'expose', 'disfigure', 'voltage', 'offset', 'occur', 'inits', 'flux', 'linkage', 'compensator', 'restore', 'load', 'voltagethe', 'flux', 'linkage', 'drive', 'level', 'magnetic', 'saturation', 'severe', 'inrush', 'current', 'occur', 'compensator', 'likely', 'interrupt', 'overcurrent', 'protection', 'eventually', 'compensation', 'fail', 'critical', 'load', 'interrupt', 'voltage', 'sag', 'project', 'propose', 'inrush', 'current', 'mitigation', 'technique', 'together', 'state', 'feedback', 'controller', 'voltage', 'sag', 'compensator', 'operation', 'principle', 'propose', 'method', 'specifically', 'present', 'experiment', 'provide', 'validate', 'propose', 'approach', 'power', 'conversion', 'controlpower', 'electronics', 'controlflux', 'sakiindranil', 'saakiinrush', 'currentpower', 'sagvoltage', 'sag', 'compensator']",4
1731,57793,"indraneel saki ( indranil Saaki)<p>This project presents an efficient wavelet and neural network (WNN) based algorithm for distinguishing magnetizing inrush currents from internal fault currents in three phase power transformers. The wavelet transform is applied first to decompose the current signals of the power transformer into a series of detailed wavelet components. The values of the detailed coefficients obtained can accurately discriminate between an internal fault and magnetizing inrush currents in power transformers. The detailed coefficients are further used to train an Artificial Neural Network (ANN). The trained ANN clearly distinguishes an internal fault current from magnetizing inrush current. A typical 750 MVA, 27/420KV, ï¿½/Y power transformer connected between a 27KV source atthe sending end and a 420KV transmission line connected to an infinite bus power system at thereceiving end were simulated using MATLAB/ PSCAD/EMTDC software. The generated data were used by theMATLAB software to test the performance of the proposed technique. The simulation results obtainedshow that the new algorithm is more reliable and accurate. It provides a high operating sensitivity forinternal faults and remains stable for inrush currents of the power transformers.</p>artificial neural network,differential protection,discrete wavelet transform,fault detection,indraneel saki,indranil saaki,magnetizing inrush current,power transformer,simulink,wavelet transform",396,11,3,0,480,indraneel saki indranil saaki project present efficient wavelet neural network wnn base algorithm distinguish magnetize inrush current internal fault current three phase power transformer wavelet transform apply first decompose current signal power transformer series detail wavelet component value detail coefficient obtain accurately discriminate internal fault magnetize inrush current power transformer detail coefficient train artificial neural network ann train ann clearly distinguish internal fault current magnetizing inrush current typical mva power transformer connect source atthe send end transmission line connect infinite bus power thereceiving end pscad emtdc software generate data thematlab software test performance propose technique result obtainedshow new algorithm reliable accurate provide high operate sensitivity forinternal fault remain stable inrush current power transformer artificial neural wavelet transformfault sakiindranil inrush currentpower transform,"['indraneel', 'saki', 'indranil', 'saaki', 'project', 'present', 'efficient', 'wavelet', 'neural', 'network', 'wnn', 'base', 'algorithm', 'distinguish', 'magnetize', 'inrush', 'current', 'internal', 'fault', 'current', 'three', 'phase', 'power', 'transformer', 'wavelet', 'transform', 'apply', 'first', 'decompose', 'current', 'signal', 'power', 'transformer', 'series', 'detail', 'wavelet', 'component', 'value', 'detail', 'coefficient', 'obtain', 'accurately', 'discriminate', 'internal', 'fault', 'magnetize', 'inrush', 'current', 'power', 'transformer', 'detail', 'coefficient', 'train', 'artificial', 'neural', 'network', 'ann', 'train', 'ann', 'clearly', 'distinguish', 'internal', 'fault', 'current', 'magnetizing', 'inrush', 'current', 'typical', 'mva', 'power', 'transformer', 'connect', 'source', 'atthe', 'send', 'end', 'transmission', 'line', 'connect', 'infinite', 'bus', 'power', 'thereceiving', 'end', 'pscad', 'emtdc', 'software', 'generate', 'data', 'thematlab', 'software', 'test', 'performance', 'propose', 'technique', 'result', 'obtainedshow', 'new', 'algorithm', 'reliable', 'accurate', 'provide', 'high', 'operate', 'sensitivity', 'forinternal', 'fault', 'remain', 'stable', 'inrush', 'current', 'power', 'transformer', 'artificial', 'neural', 'wavelet', 'transformfault', 'sakiindranil', 'inrush', 'currentpower', 'transform']",4
1732,57825,"Matlab/Simulink code for functional disturbance observer based control<p>This is the Matlab/Simulink code for the paper ""On Relationship between Time-Domain and Frequency-Domain Disturbance Observers and Its Applications"". In this code, the functional disturbance observer is designed for the purpose of disturbance estimation and rejection.</p>control design,mechanical modeling,signal processing,simulation",89,7,3,0,95,code functional disturbance observer base controlthis code paper relationship time domain frequency domain disturbance observer application code functional disturbance observer design purpose disturbance estimation rejection control modelingsignal,"['code', 'functional', 'disturbance', 'observer', 'base', 'controlthis', 'code', 'paper', 'relationship', 'time', 'domain', 'frequency', 'domain', 'disturbance', 'observer', 'application', 'code', 'functional', 'disturbance', 'observer', 'design', 'purpose', 'disturbance', 'estimation', 'rejection', 'control', 'modelingsignal']",0
1733,57828,"indraneel saki ( indranil Saaki),indraneel saki<p>The Wind Turbine Modeling in Wind Energy Conversion System (WECS) using Doubly-Fed Induction Generator(DFIG) PI Controller based design is presented. To study about the variable wind speed. The PI controller performs responding to the dynamic performance. The objective is to study the characteristic of wind turbine and finding the optimum wind speed suitable for wind turbine performance. This system will allow the specification setting (2.5MW). The output active power also corresponding same the input is given. And the reactive power produced by the wind turbine is regulated at 0 Mvar. Variable wind speed is optimum for drive train performance at 12.5 m/s (at maximum power coefficient point) from the simulation of DFIG by Simulation/MATLAB is described.</p>dfig,doublyfed induction generator dfig,indraneel,indraneel saki,indranil saaki,maximum power point tracking mppt,vector control vc with pi controller,wind turbine generation system wtgs",439,31,4,0,501,indraneel saki indranil saaki indraneel sakithe wind turbine modeling wind energy conversion wecs doubly feed induction generator dfig controller base design present study variable wind speed controller performs respond dynamic performance objective study characteristic wind turbine find optimum wind speed suitable wind turbine performance allow specification set output active power also correspond input give reactive power produce wind turbine regulate mvar variable wind speed optimum drive train performance maximum power coefficient point dfig describe dfigdoublyfed induction generator sakiindranil saakimaximum power point track mpptvector control controllerwind turbine generation wtgs,"['indraneel', 'saki', 'indranil', 'saaki', 'indraneel', 'sakithe', 'wind', 'turbine', 'modeling', 'wind', 'energy', 'conversion', 'wecs', 'doubly', 'feed', 'induction', 'generator', 'dfig', 'controller', 'base', 'design', 'present', 'study', 'variable', 'wind', 'speed', 'controller', 'performs', 'respond', 'dynamic', 'performance', 'objective', 'study', 'characteristic', 'wind', 'turbine', 'find', 'optimum', 'wind', 'speed', 'suitable', 'wind', 'turbine', 'performance', 'allow', 'specification', 'set', 'output', 'active', 'power', 'also', 'correspond', 'input', 'give', 'reactive', 'power', 'produce', 'wind', 'turbine', 'regulate', 'mvar', 'variable', 'wind', 'speed', 'optimum', 'drive', 'train', 'performance', 'maximum', 'power', 'coefficient', 'point', 'dfig', 'describe', 'dfigdoublyfed', 'induction', 'generator', 'sakiindranil', 'saakimaximum', 'power', 'point', 'track', 'mpptvector', 'control', 'controllerwind', 'turbine', 'generation', 'wtgs']",4
1734,57829,"indraneel saki ( indranil Saaki),indraneel saki<p>With the advance in wind turbine technologies, the cost of wind energy becomes competitive with other fuel-based generation resources. Due to the price hike of the fossil fuels and the concern of the global warming, the development of wind power has rapidly progressed over the last decade. Many countries have set goal for high penetration levels of wind generations. Recently, several large-scale wind generation projects have been implemented all over the world. It is economically beneficial to integrate very large amounts of wind capacity in power systems. Unlike other traditional generation facilities, using wind turbines present technical challenges in producing continuous and controllable electric power. With increase in contribution of wind power into electric power grid, energy storage devices will be required to dynamically match the intermitting of wind energy.     When wind turbines are connected to a grid, they should always maintain constant power. In order to maintain constant active power, the use of Doubly-Fed Induction Generators (DFIG)â In this project, intelligent control scheme using artificial neural network (ANN) is proposed for doubly fed induction generator (DFIG) based variable speed wind turbine system. ANN based rotor loop design is developed for variable speed wind turbine and therotor side controller is proposed for DFIG to improve its transient performance in all wind speed conditions. For comparative analysis,the conventional vector control scheme is also implemented for the system under investigation. It is observed, from the results, that the dynamic performance of the DFIG is improved with the proposed intelligent control scheme, as compared to the conventional control.The simulations are carried out using MATLAB platform.</p>artificial neural network ann,doubly fed induction generator dfig,indraneel,indraneel saki,indranil saaki,intelligent control,variable speed wind turbine,vector control",643,49,5,0,747,indraneel saki indranil saaki indraneel sakiwith advance wind turbine technology cost wind energy becomes competitive fuel base generation resource due price hike fossil fuel concern global warming development wind power rapidly progress last decade many country set goal high penetration level wind generation recently several large scale wind generation project implement world economically beneficial integrate large amount wind capacity power unlike traditional generation facility wind turbines present technical challenge produce continuous controllable electric power increase contribution wind power electric power grid energy storage device require dynamically match intermit wind energy wind turbine connect grid always maintain constant power order maintain constant active power doubly feed induction generator dfig project intelligent control scheme artificial neural network ann propose doubly feed induction generator dfig base variable speed wind turbine ann base rotor loop design develop variable speed wind turbine therotor side controller propose dfig improve transient performance wind speed condition comparative analysisthe conventional vector control scheme also implement investigation observe result dynamic performance dfig improve proposed intelligent control scheme compare conventional control carry platform artificial neural network anndoubly feed induction generator sakiindranil controlvariable speed wind turbinevector control,"['indraneel', 'saki', 'indranil', 'saaki', 'indraneel', 'sakiwith', 'advance', 'wind', 'turbine', 'technology', 'cost', 'wind', 'energy', 'becomes', 'competitive', 'fuel', 'base', 'generation', 'resource', 'due', 'price', 'hike', 'fossil', 'fuel', 'concern', 'global', 'warming', 'development', 'wind', 'power', 'rapidly', 'progress', 'last', 'decade', 'many', 'country', 'set', 'goal', 'high', 'penetration', 'level', 'wind', 'generation', 'recently', 'several', 'large', 'scale', 'wind', 'generation', 'project', 'implement', 'world', 'economically', 'beneficial', 'integrate', 'large', 'amount', 'wind', 'capacity', 'power', 'unlike', 'traditional', 'generation', 'facility', 'wind', 'turbines', 'present', 'technical', 'challenge', 'produce', 'continuous', 'controllable', 'electric', 'power', 'increase', 'contribution', 'wind', 'power', 'electric', 'power', 'grid', 'energy', 'storage', 'device', 'require', 'dynamically', 'match', 'intermit', 'wind', 'energy', 'wind', 'turbine', 'connect', 'grid', 'always', 'maintain', 'constant', 'power', 'order', 'maintain', 'constant', 'active', 'power', 'doubly', 'feed', 'induction', 'generator', 'dfig', 'project', 'intelligent', 'control', 'scheme', 'artificial', 'neural', 'network', 'ann', 'propose', 'doubly', 'feed', 'induction', 'generator', 'dfig', 'base', 'variable', 'speed', 'wind', 'turbine', 'ann', 'base', 'rotor', 'loop', 'design', 'develop', 'variable', 'speed', 'wind', 'turbine', 'therotor', 'side', 'controller', 'propose', 'dfig', 'improve', 'transient', 'performance', 'wind', 'speed', 'condition', 'comparative', 'analysisthe', 'conventional', 'vector', 'control', 'scheme', 'also', 'implement', 'investigation', 'observe', 'result', 'dynamic', 'performance', 'dfig', 'improve', 'proposed', 'intelligent', 'control', 'scheme', 'compare', 'conventional', 'control', 'carry', 'platform', 'artificial', 'neural', 'network', 'anndoubly', 'feed', 'induction', 'generator', 'sakiindranil', 'controlvariable', 'speed', 'wind', 'turbinevector', 'control']",4
1735,57885,"50Hz SPWM generation<p>In this project I have generate SPWM with 50Hz frequency using arduino mega2560.this is useful for single phase inverter</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation,simulink",5,0,1,1,4,spwm generationin project generate spwm frequency arduino mega useful single phase motor controlpower conversion controlpower electronics,"['spwm', 'generationin', 'project', 'generate', 'spwm', 'frequency', 'arduino', 'mega', 'useful', 'single', 'phase', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1736,57886,"power system control<p>parallel connected inverter control</p>inverter,power system,simulink",141,14,3,0,158,power controlparallel connect inverter,"['power', 'controlparallel', 'connect', 'inverter']",1
1737,57892,"Control of dc-dc boost converter<p>Control of dc-dc boost converter</p>power_conversion_control,power_electronics_control,control design,power electronics",50,1,2,0,57,control boost boost converterpower conversion controlpower electronics controlcontrol designpower electronics,"['control', 'boost', 'boost', 'converterpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designpower', 'electronics']",6
1738,57893,"control of dc-dc Cuk converter<p>Two-loop control of dc-dc Cuk converter</p>power_conversion_control,power_electronics_control,control design,power electronics",25,0,1,0,31,control cuk convertertwo loop control cuk converterpower conversion controlpower electronics controlcontrol designpower electronics,"['control', 'cuk', 'convertertwo', 'loop', 'control', 'cuk', 'converterpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designpower', 'electronics']",1
1739,57934,simple HWR<p>Simple hwr for reference</p>simulink,9,0,1,0,15,simple hwrsimple hwr,"['simple', 'hwrsimple', 'hwr']",8
1740,57950,This circuit shows the graph of a basic circuit in simulink<p>This circuit shows the graph of a basic circuit in simulink  for use in a main circuit</p>simulation,11,0,1,0,15,circuit show graph basic circuit circuit show graph basic circuit main,"['circuit', 'show', 'graph', 'basic', 'circuit', 'circuit', 'show', 'graph', 'basic', 'circuit', 'main']",7
1741,57970,"This method is used for inverter<p>The selective harmonic elimination method for three-phase voltage source inverter (VSI) is generally based on ideas of opposite harmonic injection. The lower order harmonics (3rd,5th,7th and 9th) are eliminated by the dominant harmonics of same order generated in opposite phase by sinusoidal pulse width modulation (SPWM) inverter and by using this scheme the total harmonic distortion (THD) is reduced.</p>electric_motor_control,power_conversion_control,power_electronics_control,signal processing,simulink",78,4,3,0,78,method inverterthe selective harmonic elimination method three phase voltage source inverter vsi generally base idea opposite harmonic injection low order harmonic eliminate dominant harmonic order generate opposite phase sinusoidal pulse width modulation spwm inverter scheme total harmonic distortion thd reduce electric motor controlpower conversion controlpower electronics controlsignal,"['method', 'inverterthe', 'selective', 'harmonic', 'elimination', 'method', 'three', 'phase', 'voltage', 'source', 'inverter', 'vsi', 'generally', 'base', 'idea', 'opposite', 'harmonic', 'injection', 'low', 'order', 'harmonic', 'eliminate', 'dominant', 'harmonic', 'order', 'generate', 'opposite', 'phase', 'sinusoidal', 'pulse', 'width', 'modulation', 'spwm', 'inverter', 'scheme', 'total', 'harmonic', 'distortion', 'thd', 'reduce', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsignal']",3
1742,57971,"this is demo of multipwm inverter<p>Multiple PWM is the basic PWM technique which is rarely used for three phase inverter nowadays.</p>electric_motor_control,power_conversion_control,power_electronics_control,signal processing,simulink",36,1,2,0,35,demo multipwm pwm basic pwm technique rarely three phase inverter nowadays electric motor controlpower conversion controlpower electronics controlsignal,"['demo', 'multipwm', 'pwm', 'basic', 'pwm', 'technique', 'rarely', 'three', 'phase', 'inverter', 'nowadays', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsignal']",1
1743,57976,"this is demo for space vector modulation inverter<p>To generate a rotating space vector with constant amplitude, the reference voltage vector must be limited to the inscribed circle inside the hexagon.</p>electric_motor_control,power_conversion_control,power_electronics_control,svpwm,signal processing,simulation,simulink",146,2,2,0,171,demo space vector modulation inverterto generate rotate space vector constant amplitude reference voltage vector must limit inscribed circle inside hexagon electric motor controlpower conversion controlpower electronics,"['demo', 'space', 'vector', 'modulation', 'inverterto', 'generate', 'rotate', 'space', 'vector', 'constant', 'amplitude', 'reference', 'voltage', 'vector', 'must', 'limit', 'inscribed', 'circle', 'inside', 'hexagon', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
1744,57980,"sinusoidal pwm for three phase inverter<p>In Multiple Pulse Width Modulation, by varying the width of each pulse in proportion to the amplitude of the reference wave the distortion factor and lower order harmonics can be reduced significantly and the width of all the pulses are maintained the same. This type of modulation is known as Sinusoidal Pulse Width Modulation. By comparing sinusoidal reference signal with a triangular carrier wave of frequency, the gating signal is generated.</p>electric_motor_control,power_conversion_control,power_electronics_control,signal processing,simulation,simulink",43,1,2,0,51,sinusoidal pwm three phase inverterin multiple pulse width modulation vary width pulse proportion amplitude reference wave distortion factor low order harmonic reduce significantly width pulse maintain type modulation know sinusoidal pulse width modulation compare sinusoidal reference signal triangular carrier wave frequency gate signal generate electric motor controlpower conversion controlpower electronics controlsignal,"['sinusoidal', 'pwm', 'three', 'phase', 'inverterin', 'multiple', 'pulse', 'width', 'modulation', 'vary', 'width', 'pulse', 'proportion', 'amplitude', 'reference', 'wave', 'distortion', 'factor', 'low', 'order', 'harmonic', 'reduce', 'significantly', 'width', 'pulse', 'maintain', 'type', 'modulation', 'know', 'sinusoidal', 'pulse', 'width', 'modulation', 'compare', 'sinusoidal', 'reference', 'signal', 'triangular', 'carrier', 'wave', 'frequency', 'gate', 'signal', 'generate', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsignal']",3
1745,57985,"indraneel saki ( indranil Saaki)<p>This project a study of the performance of distance protection relays when applied to protect shunt &amp; series Flexible AC Transmission System (FACTS) compensated transmission lines. The objective of this study is to evaluate the performance of distance relays on transmission lines with FACTS devices applied for mid point control. Effect of two types of  FACTS devices, Unified Power flow controller (UPFC) and Static SynchronousCompensators (STATCOM) are studied. The project is conducted in three stages. First the situation is studied analytically, where the errors introduced in the impedance measurement due to the presence of  FACTS devices on the line are analyzed. In the second stage, the situation is simulated using transient simulation matlab/EMTDC software. In this method, the response of FACTS devices for different fault conditions and system conditions is also modeled.This method brings out some unique problems that would be experienced by the distance relays due to some specific characteristics of the FACTS devices. Finally, the findings are confirmed by testing a commercial distance relay using a Real Time Digital Simulator (RTDS). The results obtained by testing the commercialrelay validate the analytical and simulation studies.</p>distance protection relay,flexible ac transmission system facts,indraneel saki,indranil saaki,power system protection,realtime digital simulator rtds,shunt compensation,static synchronous compensators statcom,static var compensators svc,unified power flow controllerupfc",1895,144,7,0,1751,indraneel saki indranil saaki project study performance distance protection relay apply protect shunt amp series flexible transmission fact compensate transmission line objective study evaluate performance distance relay transmission line fact device apply mid point control effect two type fact device unified power flow controller upfc static statcom study project conduct three stage first situation study analytically error introduce impedance measurement due presence fact device line analyze second stage situation transient emtdc software method response facts device different fault condition condition also method brings unique problem would experience distance relay due specific characteristic fact device finally finding confirm test commercial distance relay real time digital rtds result obtain test commercialrelay validate analytical study distance protection relayflexible transmission factsindraneel sakiindranil saakipower digital rtdsshunt synchronous compensators statcomstatic var compensators svcunified power flow controllerupfc,"['indraneel', 'saki', 'indranil', 'saaki', 'project', 'study', 'performance', 'distance', 'protection', 'relay', 'apply', 'protect', 'shunt', 'amp', 'series', 'flexible', 'transmission', 'fact', 'compensate', 'transmission', 'line', 'objective', 'study', 'evaluate', 'performance', 'distance', 'relay', 'transmission', 'line', 'fact', 'device', 'apply', 'mid', 'point', 'control', 'effect', 'two', 'type', 'fact', 'device', 'unified', 'power', 'flow', 'controller', 'upfc', 'static', 'statcom', 'study', 'project', 'conduct', 'three', 'stage', 'first', 'situation', 'study', 'analytically', 'error', 'introduce', 'impedance', 'measurement', 'due', 'presence', 'fact', 'device', 'line', 'analyze', 'second', 'stage', 'situation', 'transient', 'emtdc', 'software', 'method', 'response', 'facts', 'device', 'different', 'fault', 'condition', 'condition', 'also', 'method', 'brings', 'unique', 'problem', 'would', 'experience', 'distance', 'relay', 'due', 'specific', 'characteristic', 'fact', 'device', 'finally', 'finding', 'confirm', 'test', 'commercial', 'distance', 'relay', 'real', 'time', 'digital', 'rtds', 'result', 'obtain', 'test', 'commercialrelay', 'validate', 'analytical', 'study', 'distance', 'protection', 'relayflexible', 'transmission', 'factsindraneel', 'sakiindranil', 'saakipower', 'digital', 'rtdsshunt', 'synchronous', 'compensators', 'statcomstatic', 'var', 'compensators', 'svcunified', 'power', 'flow', 'controllerupfc']",5
1746,57986,"indraneel saki ( indranil Saaki)<p>Static Var Compensators (SVC) are widely used in shunt compensation of transmission lines. With the acceptability of Gate Turn Off thyristors (GTO) among the utilities, Static Synchronous Compensators (STATCOM)are also becomingpopular . The location of the shunt FACTS device depends on the application for which it is installed. Shunt compensation FACTS devices are installed at theendpoints of transmission lines (buses) when used for applications, such as, improving system stability, improvingHVDClink performance etc.However, for controllingthe power flow or increasing the power transfer capability of very long transmission lines (tie lines connecting two major grids) mid-point of the lines is the best location for shunt connected FACTS devices. In this project, the performance of distance relays on mid-point compensated lines simulated</p>distance protection relay,distance protection relays,flexible ac transmission system facts,indraneel saki,indranil saaki,power system protection,realtime digital simulator rtds,shunt compensation,static synchronous compensators statcom,static var compensators svc",1630,122,7,0,1869,indraneel saki indranil saaki static var compensators svc widely shunt compensation transmission line acceptability gate turn thyristors gto among utility static synchronous compensators statcom also becomingpopular location shunt fact device depend application instal shunt compensation fact device instal theendpoints transmission line bus application improve stability performance etc however controllingthe power flow increase power transfer capability long transmission line tie line connect two major grid mid point line best location shunt connect fact device project performance distance relay mid point compensate line protection relaydistance protection relaysflexible transmission factsindraneel sakiindranil saakipower digital rtdsshunt synchronous compensators statcomstatic var compensators svc,"['indraneel', 'saki', 'indranil', 'saaki', 'static', 'var', 'compensators', 'svc', 'widely', 'shunt', 'compensation', 'transmission', 'line', 'acceptability', 'gate', 'turn', 'thyristors', 'gto', 'among', 'utility', 'static', 'synchronous', 'compensators', 'statcom', 'also', 'becomingpopular', 'location', 'shunt', 'fact', 'device', 'depend', 'application', 'instal', 'shunt', 'compensation', 'fact', 'device', 'instal', 'theendpoints', 'transmission', 'line', 'bus', 'application', 'improve', 'stability', 'performance', 'etc', 'however', 'controllingthe', 'power', 'flow', 'increase', 'power', 'transfer', 'capability', 'long', 'transmission', 'line', 'tie', 'line', 'connect', 'two', 'major', 'grid', 'mid', 'point', 'line', 'best', 'location', 'shunt', 'connect', 'fact', 'device', 'project', 'performance', 'distance', 'relay', 'mid', 'point', 'compensate', 'line', 'protection', 'relaydistance', 'protection', 'relaysflexible', 'transmission', 'factsindraneel', 'sakiindranil', 'saakipower', 'digital', 'rtdsshunt', 'synchronous', 'compensators', 'statcomstatic', 'var', 'compensators', 'svc']",5
1747,57990,"indraneel saki ( indranil Saaki)<p>The power system of an all-electric navy ship has an integrated network, where the propulsion load, the distribution loads, sensor and other emergency loads and pulse loads (rail guns, aircraft launchers etc.) â all are part of the same electrical network. Among the loads, the effects of pulsed loads are most detrimental for the power quality of ship power distribution system as the pulsed loads require a very high amount of power for a very short period of time [1]. In order to improve the survivability of a navy ship in battle condition, DSTATCOM or Distribution Static Compensator can be used, which reduces the impact of pulsed loads on the bus voltage and thus keeps the bus voltage at desired level.Distribution Static Compensator (DSTATCOM) is a shunt compensation device which is generally used to solve power quality problems in distribution systems. In an all-electric ship power system, these power quality problemsmainly arise due to the pulsed loads, which causes the degradation of the entire system performance. This projectpresents the application of DSTATCOM to improve the power quality in a ship power system during and afterpulsed loads. The control strategy of the DSTATCOM plays an important role in maintaining the voltage at the point of common coupling. A novel adaptive control strategy for the DSTATCOM based on artificial  system (AIS) isproposed. The optimal parameters of the controller are first found using particle swarm optimization. This provides a sort of innate immunity to common system disturbances.For unusual system disturbances, these optimal parameters are modified online, thus providing adaptive immunity in the control system. To evaluate the performance of the DSTATCOM and the AIS adaptive controller, a ship power system is developed in the MATLAB/SIMULINK environment. The effectiveness of the DSTATCOM and the AIS controller is examined for pulsed loads of different magnitudes and durations.</p>ann controller,dfacts,dstatcom,indraneel saki,indranil saaki,power quality,pso",1730,153,6,0,1053,indraneel saki indranil saaki power electric navy ship integrate network propulsion load distribution load sensor emergency load pulse load rail gun aircraft launcher etc part electrical network among loads effect pulse load detrimental power quality ship power distribution pulse load require high amount power short period time order improve survivability navy ship battle condition dstatcom distribution static compensator reduces impact pulse load bus voltage thus keep bus voltage desire level distribution static compensator dstatcom shunt compensation device generally solve power quality problem distribution electric ship power power quality problemsmainly arise due pulse loads cause degradation entire performance projectpresents application dstatcom improve power quality ship power afterpulsed load control strategy dstatcom play important role maintain voltage point common couple novel adaptive control strategy dstatcom base artificial isproposed optimal parameter controller first find particle swarm optimization provide sort innate immunity common disturbance unusual disturbance optimal parameter modify online thus provide adaptive immunity control evaluate performance dstatcom ais adaptive controller ship power develop environment effectiveness dstatcom ais controller examine pulsed load different magnitude duration ann sakiindranil saakipower qualitypso,"['indraneel', 'saki', 'indranil', 'saaki', 'power', 'electric', 'navy', 'ship', 'integrate', 'network', 'propulsion', 'load', 'distribution', 'load', 'sensor', 'emergency', 'load', 'pulse', 'load', 'rail', 'gun', 'aircraft', 'launcher', 'etc', 'part', 'electrical', 'network', 'among', 'loads', 'effect', 'pulse', 'load', 'detrimental', 'power', 'quality', 'ship', 'power', 'distribution', 'pulse', 'load', 'require', 'high', 'amount', 'power', 'short', 'period', 'time', 'order', 'improve', 'survivability', 'navy', 'ship', 'battle', 'condition', 'dstatcom', 'distribution', 'static', 'compensator', 'reduces', 'impact', 'pulse', 'load', 'bus', 'voltage', 'thus', 'keep', 'bus', 'voltage', 'desire', 'level', 'distribution', 'static', 'compensator', 'dstatcom', 'shunt', 'compensation', 'device', 'generally', 'solve', 'power', 'quality', 'problem', 'distribution', 'electric', 'ship', 'power', 'power', 'quality', 'problemsmainly', 'arise', 'due', 'pulse', 'loads', 'cause', 'degradation', 'entire', 'performance', 'projectpresents', 'application', 'dstatcom', 'improve', 'power', 'quality', 'ship', 'power', 'afterpulsed', 'load', 'control', 'strategy', 'dstatcom', 'play', 'important', 'role', 'maintain', 'voltage', 'point', 'common', 'couple', 'novel', 'adaptive', 'control', 'strategy', 'dstatcom', 'base', 'artificial', 'isproposed', 'optimal', 'parameter', 'controller', 'first', 'find', 'particle', 'swarm', 'optimization', 'provide', 'sort', 'innate', 'immunity', 'common', 'disturbance', 'unusual', 'disturbance', 'optimal', 'parameter', 'modify', 'online', 'thus', 'provide', 'adaptive', 'immunity', 'control', 'evaluate', 'performance', 'dstatcom', 'ais', 'adaptive', 'controller', 'ship', 'power', 'develop', 'environment', 'effectiveness', 'dstatcom', 'ais', 'controller', 'examine', 'pulsed', 'load', 'different', 'magnitude', 'duration', 'ann', 'sakiindranil', 'saakipower', 'qualitypso']",4
1748,57997,"indranil saaki<p>The impact of a large photovoltaic (PV) penetration on power system small signal oscillation stability. A comprehensive model of a single-machine infinite-bus power system integrated with a PV power generation power plant is established. There exists an operational limit of the PV power plant as far as system oscillation stability is concerned. Beyond the operational limit, the PV generation supplies negative damping torque, Thus damping system oscillation stability. Hence for the safe penetration of PV generation into power systems. The operational limit of oscillation stability of the PV power plant must be considered.The fast development of photovoltaic (PV) technology in recent two decades strongly indicates that in medium to long term, PV generation will become one of most attractive renewable energy sources in large-scale applications. Evidence of such indication is that the growth of demand on solar energy has consistently been by over 20% per annum due to the decreasing cost and price. The European Union is well on the track to fulfilling its own target of 3GW PV generation by 2010; while capacity of PV generation in the UK is forecasted to 30GW by 2050 Grid connection is the operational practice of large-scale PV generation for its best utilization. Large scale grid-connected PV generation will significantly affect power transmission and generation systems. In this aspect, one of the most important issues is the impact of large penetration of PV generation on power system stability, which must be examined carefully Dynamic of PV generation is considerably different with that of conventional generation involving rotating machines. Hence a thorough study on the case of interaction of PV generation with conventional power generation and transmission .systems is an urgent task to be pursued. There exists an operational limit of the PV power plant as far as system oscillation stability is concerned. Beyond the operational limit, the PV generation supplies negative damping torque, thus damaging system oscillation stability. Hence for the safe penetration of PV generation into power systems, the operational limit of oscillation stability of the PV power plant must be considered.The objective of the proposed work is to examine the effect of operation of PV generation jointly with that of conventional generator and transmission system on power system small signal oscillation stability. It with the establishment of a comprehensive model of a single-machine infinite-bus power system integrated with a Large scale grid-connected PV generation Plant.</p>power_conversion_control,power_electronics_control,hybride system,indraneel saki,indranil saaki,mppt controller,pv penetration,pv",413,39,5,0,451,indranil saakithe impact large photovoltaic penetration power small signal oscillation stability comprehensive single machine infinite bus power integrate power generation power plant establish exist operational limit power plant far oscillation stability concern beyond operational limit generation supply negative damp torque thus damp oscillation stability hence safe penetration generation power operational limit oscillation stability power plant must consider fast development photovoltaic technology recent two decade strongly indicate medium long term generation become one attractive renewable energy source large scale application evidence indication growth demand solar energy consistently per annum due decrease cost price european union well track fulfil target generation capacity generation forecast grid connection operational practice large scale generation best utilization large scale grid connect generation significantly affect power transmission generation aspect one important issue impact large penetration generation power stability must examine carefully dynamic generation considerably different conventional generation involve rotate machine hence thorough study case interaction generation conventional power generation transmission urgent task pursue exist operational limit power plant far oscillation stability concern beyond operational limit generation supply negative damp torque thus damaging oscillation stability hence safe penetration generation power operational limit oscillation stability power plant must consider objective propose work examine effect operation generation jointly conventional generator transmission power small signal oscillation stability establishment comprehensive single machine infinite bus power integrate large scale grid connect generation plant power conversion controlpower electronics controlhybride systemindraneel sakiindranil saakimppt controllerpv penetrationpv,"['indranil', 'saakithe', 'impact', 'large', 'photovoltaic', 'penetration', 'power', 'small', 'signal', 'oscillation', 'stability', 'comprehensive', 'single', 'machine', 'infinite', 'bus', 'power', 'integrate', 'power', 'generation', 'power', 'plant', 'establish', 'exist', 'operational', 'limit', 'power', 'plant', 'far', 'oscillation', 'stability', 'concern', 'beyond', 'operational', 'limit', 'generation', 'supply', 'negative', 'damp', 'torque', 'thus', 'damp', 'oscillation', 'stability', 'hence', 'safe', 'penetration', 'generation', 'power', 'operational', 'limit', 'oscillation', 'stability', 'power', 'plant', 'must', 'consider', 'fast', 'development', 'photovoltaic', 'technology', 'recent', 'two', 'decade', 'strongly', 'indicate', 'medium', 'long', 'term', 'generation', 'become', 'one', 'attractive', 'renewable', 'energy', 'source', 'large', 'scale', 'application', 'evidence', 'indication', 'growth', 'demand', 'solar', 'energy', 'consistently', 'per', 'annum', 'due', 'decrease', 'cost', 'price', 'european', 'union', 'well', 'track', 'fulfil', 'target', 'generation', 'capacity', 'generation', 'forecast', 'grid', 'connection', 'operational', 'practice', 'large', 'scale', 'generation', 'best', 'utilization', 'large', 'scale', 'grid', 'connect', 'generation', 'significantly', 'affect', 'power', 'transmission', 'generation', 'aspect', 'one', 'important', 'issue', 'impact', 'large', 'penetration', 'generation', 'power', 'stability', 'must', 'examine', 'carefully', 'dynamic', 'generation', 'considerably', 'different', 'conventional', 'generation', 'involve', 'rotate', 'machine', 'hence', 'thorough', 'study', 'case', 'interaction', 'generation', 'conventional', 'power', 'generation', 'transmission', 'urgent', 'task', 'pursue', 'exist', 'operational', 'limit', 'power', 'plant', 'far', 'oscillation', 'stability', 'concern', 'beyond', 'operational', 'limit', 'generation', 'supply', 'negative', 'damp', 'torque', 'thus', 'damaging', 'oscillation', 'stability', 'hence', 'safe', 'penetration', 'generation', 'power', 'operational', 'limit', 'oscillation', 'stability', 'power', 'plant', 'must', 'consider', 'objective', 'propose', 'work', 'examine', 'effect', 'operation', 'generation', 'jointly', 'conventional', 'generator', 'transmission', 'power', 'small', 'signal', 'oscillation', 'stability', 'establishment', 'comprehensive', 'single', 'machine', 'infinite', 'bus', 'power', 'integrate', 'large', 'scale', 'grid', 'connect', 'generation', 'plant', 'power', 'conversion', 'controlpower', 'electronics', 'controlhybride', 'systemindraneel', 'sakiindranil', 'saakimppt', 'controllerpv', 'penetrationpv']",4
1749,57998,"indranil saaki<p>Direct Torque Control is a control technique in AC drive systems to obtain high performance torque control. The conventional DTC drive contains a pair of hysteresis comparators.DTC drives utilizing hysteresis comparators suffer from high torque ripple and variable switching frequency. The most common solution to those problems is to use the space vector depends on the reference Torque and flux. This Project presents a review of the most popular control and modulation strategies studied for matrix converters (MCs) in the last decade. The purpose of most of these methods is to generate sinusoidal current on the input and output sides. These methods are compared considering theoretical complexity and performance. In this Project the space vector modulation Technique (SVPWM) is applied to 2 level inverter controls in the proposed DTC_SVM based induction motor drive system, thereby dramatically reducing the torque ripple. Then the controller based on space vector modulation is designed to be applied in the control of Induction Motor (IM) with a three-level Inverter.In This project concludes that the control strategy has a significant impact on the resonance of the MC input filter with EKF Technique. This type of Inverter has Several advantages over the standard two-level VSI, such as a greater number of levels in the output voltage waveforms, Lower dv/dt, less harmonic distortion in voltage and current waveforms and lower switching frequencies Eliminated By EKF Method. The SVM_DTC IM with MC Using EKF proposed scheme is described clearly and simulation results are reported to demonstrate its effectiveness. The entire control scheme is implemented with Matlab/Simulink.</p>space vector pulse width modulation,svpwm,electric_motor_control,power_electronics_control,acac conversion,control strategies,direct torque control,dtc with induction motor,ekf,matrix converter mc,modulation schemes,neutral point clamped npc,simulation,state vector modulation,twolevel inverter",1102,84,6,0,956,indranil saakidirect torque control control technique drive obtain high performance torque control conventional dtc drive contains pair hysteresis comparators dtc drive utilize hysteresis comparators suffer high torque ripple variable switching frequency common solution problem space vector depend reference torque flux project present review popular control modulation strategy study matrix converter mcs last decade purpose method generate sinusoidal current input output side method compare consider theoretical complexity performance project space vector modulation technique svpwm apply level inverter control propose dtc svm base induction motor drive thereby dramatically reduce torque ripple controller base space vector modulation design apply control induction motor three level inverter project conclude control strategy significant impact resonance input filter ekf technique type inverter several advantage standard two level vsi great number level output voltage waveform low less harmonic distortion voltage current waveform low switch frequency eliminate ekf method svm dtc ekf propose scheme describe clearly result report demonstrate effectiveness entire control scheme implement space vector pulse width motor controlpower electronics controlacac torque controldtc induction motorekfmatrix converter mcmodulation schemesneutral point clamp vector inverter,"['indranil', 'saakidirect', 'torque', 'control', 'control', 'technique', 'drive', 'obtain', 'high', 'performance', 'torque', 'control', 'conventional', 'dtc', 'drive', 'contains', 'pair', 'hysteresis', 'comparators', 'dtc', 'drive', 'utilize', 'hysteresis', 'comparators', 'suffer', 'high', 'torque', 'ripple', 'variable', 'switching', 'frequency', 'common', 'solution', 'problem', 'space', 'vector', 'depend', 'reference', 'torque', 'flux', 'project', 'present', 'review', 'popular', 'control', 'modulation', 'strategy', 'study', 'matrix', 'converter', 'mcs', 'last', 'decade', 'purpose', 'method', 'generate', 'sinusoidal', 'current', 'input', 'output', 'side', 'method', 'compare', 'consider', 'theoretical', 'complexity', 'performance', 'project', 'space', 'vector', 'modulation', 'technique', 'svpwm', 'apply', 'level', 'inverter', 'control', 'propose', 'dtc', 'svm', 'base', 'induction', 'motor', 'drive', 'thereby', 'dramatically', 'reduce', 'torque', 'ripple', 'controller', 'base', 'space', 'vector', 'modulation', 'design', 'apply', 'control', 'induction', 'motor', 'three', 'level', 'inverter', 'project', 'conclude', 'control', 'strategy', 'significant', 'impact', 'resonance', 'input', 'filter', 'ekf', 'technique', 'type', 'inverter', 'several', 'advantage', 'standard', 'two', 'level', 'vsi', 'great', 'number', 'level', 'output', 'voltage', 'waveform', 'low', 'less', 'harmonic', 'distortion', 'voltage', 'current', 'waveform', 'low', 'switch', 'frequency', 'eliminate', 'ekf', 'method', 'svm', 'dtc', 'ekf', 'propose', 'scheme', 'describe', 'clearly', 'result', 'report', 'demonstrate', 'effectiveness', 'entire', 'control', 'scheme', 'implement', 'space', 'vector', 'pulse', 'width', 'motor', 'controlpower', 'electronics', 'controlacac', 'torque', 'controldtc', 'induction', 'motorekfmatrix', 'converter', 'mcmodulation', 'schemesneutral', 'point', 'clamp', 'vector', 'inverter']",3
1750,57999,"indranil saaki<p>Distributed Generation (DG) is predicted to play an important role in electric power system in the near future. The insertion of DG system into existing distribution network has great impact on real-time system operation and planning. It is widely accepted that micro turbine generation (MTG) systems are currently attracting lot of attention to meet customers need in the distributed power generation market In order to investigate the performance of micro turbine generation systems their efficient modeling is required. This paper presents a dynamic model of a MTG system, suitable for grid connection/islanding operation. The presented model allows the bidirectional power flow between grid and MTG system. The components of the system are built from the dynamics of each part with their interconnections. The control strategies for both grid connected and intentional islanding operation mode of a DG system are also given.</p>electric_motor_control,power_conversion_control,power_electronics_control,distributedgeneration,filter,grid connected mode,hvdc,indraneel saki,indranil saaki,islanding mode,matlab,micro turbine model,microturbine,permanent magnet synchronous generator,power conditioning unit,power converters,simulink",232,34,4,0,224,indranil generation predict play important role electric power near future insertion exist distribution network great impact real time operation plan widely accept micro turbine generation mtg currently attract lot attention meet customer need distributed power generation market order investigate performance micro turbine generation efficient modeling require paper present dynamic mtg suitable grid connection islanding operation present allow bidirectional power flow grid mtg component build dynamic part control strategies grid connect intentional islanding operation mode also give electric motor controlpower conversion controlpower electronics connect sakiindranil saakiislanding modematlabmicro turbine magnet synchronous generatorpower conditioning unitpower,"['indranil', 'generation', 'predict', 'play', 'important', 'role', 'electric', 'power', 'near', 'future', 'insertion', 'exist', 'distribution', 'network', 'great', 'impact', 'real', 'time', 'operation', 'plan', 'widely', 'accept', 'micro', 'turbine', 'generation', 'mtg', 'currently', 'attract', 'lot', 'attention', 'meet', 'customer', 'need', 'distributed', 'power', 'generation', 'market', 'order', 'investigate', 'performance', 'micro', 'turbine', 'generation', 'efficient', 'modeling', 'require', 'paper', 'present', 'dynamic', 'mtg', 'suitable', 'grid', 'connection', 'islanding', 'operation', 'present', 'allow', 'bidirectional', 'power', 'flow', 'grid', 'mtg', 'component', 'build', 'dynamic', 'part', 'control', 'strategies', 'grid', 'connect', 'intentional', 'islanding', 'operation', 'mode', 'also', 'give', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'connect', 'sakiindranil', 'saakiislanding', 'modematlabmicro', 'turbine', 'magnet', 'synchronous', 'generatorpower', 'conditioning', 'unitpower']",4
1751,58031,"indranil saaki<p>The penetration level of a photovoltaic (PV) system is often limited due to the violation of voltage variation introduced by the large intermittent power generation. This project discusses the use of an active power curtailment strategy to reduce PV power injection during peak solar irradiation to prevent voltage violation so that the PV penetration level of a distribution feeder can be in-creased to fully utilize solar energy. The PV power generation is simulated according to the hourly solar irradiation and tempera-ture data provided by the weather bureau. The voltage variation at the point of common coupling (PCC) is also derived by executing the 3-  load flow analysis to investigate the maximum PV power injection without causing a voltage violation problem. When using the proposed voltage control scheme for limiting PV power injec-tion into the study distribution feeder during high solar irradiation periods, the total power generation and total energy delivered by the PV system over a one-year period are determined according to the annual duration of solar irradiation. The annual cash flow from sales of PV power, the O&amp;M cost over the system life cycle, and the capital investment in the PV system are then used to calculate the payback years and the net present value (NPV) of the PV project. With the proposed voltage control to perform the partial genera-tion rejection of PV systems, the optimal installation capacity of PV systems can be determined by maximizing the net present value of the system so that better cost effectiveness of the PV project and better utilization of solar energy can be obtained.</p>power_conversion_control,power_electronics_control,distribution systems annual curve of solar irradiation,indraneel saki,indranil saaki,mppt technique,net present value,payback year,peak solar irradiation,photovoltaic,pv penetration level,renawable power generation,simulation",787,86,8,0,819,indranil saakithe penetration level photovoltaic often limit due violation voltage variation introduce large intermittent power generation project discuss active power curtailment strategy reduce power injection peak solar irradiation prevent voltage violation penetration level distribution feeder crease fully utilize solar energy power generation accord hourly solar irradiation tempera ture data provide weather bureau voltage variation point common coupling pcc also derive execute load flow analysis investigate maximum power injection without cause voltage violation problem propose voltage control scheme limit power injec tion study distribution feeder high solar irradiation period total power generation total energy deliver one year period determine accord annual duration solar irradiation annual cash flow sale power amp cost life cycle capital investment calculate payback year net present value npv project propose voltage control perform partial genus tion rejection optimal installation capacity determine maximize net present value well cost effectiveness project good utilization solar energy obtain power conversion controlpower electronics annual curve solar sakiindranil saakimppt techniquenet present valuepayback yearpeak solar penetration levelrenawable power,"['indranil', 'saakithe', 'penetration', 'level', 'photovoltaic', 'often', 'limit', 'due', 'violation', 'voltage', 'variation', 'introduce', 'large', 'intermittent', 'power', 'generation', 'project', 'discuss', 'active', 'power', 'curtailment', 'strategy', 'reduce', 'power', 'injection', 'peak', 'solar', 'irradiation', 'prevent', 'voltage', 'violation', 'penetration', 'level', 'distribution', 'feeder', 'crease', 'fully', 'utilize', 'solar', 'energy', 'power', 'generation', 'accord', 'hourly', 'solar', 'irradiation', 'tempera', 'ture', 'data', 'provide', 'weather', 'bureau', 'voltage', 'variation', 'point', 'common', 'coupling', 'pcc', 'also', 'derive', 'execute', 'load', 'flow', 'analysis', 'investigate', 'maximum', 'power', 'injection', 'without', 'cause', 'voltage', 'violation', 'problem', 'propose', 'voltage', 'control', 'scheme', 'limit', 'power', 'injec', 'tion', 'study', 'distribution', 'feeder', 'high', 'solar', 'irradiation', 'period', 'total', 'power', 'generation', 'total', 'energy', 'deliver', 'one', 'year', 'period', 'determine', 'accord', 'annual', 'duration', 'solar', 'irradiation', 'annual', 'cash', 'flow', 'sale', 'power', 'amp', 'cost', 'life', 'cycle', 'capital', 'investment', 'calculate', 'payback', 'year', 'net', 'present', 'value', 'npv', 'project', 'propose', 'voltage', 'control', 'perform', 'partial', 'genus', 'tion', 'rejection', 'optimal', 'installation', 'capacity', 'determine', 'maximize', 'net', 'present', 'value', 'well', 'cost', 'effectiveness', 'project', 'good', 'utilization', 'solar', 'energy', 'obtain', 'power', 'conversion', 'controlpower', 'electronics', 'annual', 'curve', 'solar', 'sakiindranil', 'saakimppt', 'techniquenet', 'present', 'valuepayback', 'yearpeak', 'solar', 'penetration', 'levelrenawable', 'power']",4
1752,58032,"indranil saaki<p>The proposed system presents power-control strategies of a grid-connected hybrid generation system with versatile power transfer. This hybrid system allows maximum utilization of freely available renewable energy sources like wind, fuel and photovoltaic energies. For this, an adaptive MPPT algorithm along with standard perturbs and observes method will be used for the system. The objective of this paper is to study a novel five and seven level multistring inverter topology for DERs based DC/AC conversion system. In this study, a high step-up converter is introduced as a front-end stage to improve the conversion efficiency of conventional boost converters and to stabilize the output DC voltage of various DERs such as PV, Wind and fuel cell modules for use with the simplified newly constructed multilevel inverter. The proposed multilevel inverter requires only six active switches instead of the eight required in the conventional cascaded H- bridge (CCHB) multilevel inverter, control with SVM technique.The inverter converts the DC output from non-conventional energy into useful AC power for the connected load. This hybrid system operates under normal conditions which include conventional and proposed cases of solar energy, fuel and wind energy. The proposed simulation results are presented to illustrate the operating principle, feasibility and reliability of this proposed system for Renewable resources</p>space vector pulse width modulation,svpwm,power_conversion_control,power_electronics_control,battery system,dc micro grid,dcac multilevel inveter,dcac power conversion,dcdc power converters,distributed power generation,fuell cell power,hybrid grid,indraneel saki,indranil saaki,matlab circute for micro grid,microturbine power generation,multilevel inverter,power electronics,simulation,smart grid,svpwm techniques,wind tubine power generation",1529,149,7,0,1516,indranil saakithe propose present power control strategies grid connect hybrid generation versatile power transfer hybrid allow maximum utilization freely available renewable energy source like wind fuel photovoltaic energy adaptive mppt algorithm along standard perturbs observe method objective paper study novel five seven level multistring inverter topology ders base conversion study high step converter introduce front end stage improve conversion efficiency conventional boost converter stabilize output voltage various ders wind fuel cell module simplify newly construct multilevel inverter propose multilevel inverter require six active switch instead eight required conventional cascade bridge cchb multilevel inverter control svm technique inverter convert output non conventional energy useful power connect load hybrid operate normal condition include conventional proposed case solar energy fuel wind energy propose result present illustrate operating principle feasibility reliability propose renewable resourcesspace vector pulse width conversion controlpower electronics controlbattery systemdc micro griddcac multilevel inveterdcac power conversiondcdc power power generationfuell cell powerhybrid gridindraneel sakiindranil saakimatlab circute micro power inverterpower gridsvpwm techniqueswind tubine power generation,"['indranil', 'saakithe', 'propose', 'present', 'power', 'control', 'strategies', 'grid', 'connect', 'hybrid', 'generation', 'versatile', 'power', 'transfer', 'hybrid', 'allow', 'maximum', 'utilization', 'freely', 'available', 'renewable', 'energy', 'source', 'like', 'wind', 'fuel', 'photovoltaic', 'energy', 'adaptive', 'mppt', 'algorithm', 'along', 'standard', 'perturbs', 'observe', 'method', 'objective', 'paper', 'study', 'novel', 'five', 'seven', 'level', 'multistring', 'inverter', 'topology', 'ders', 'base', 'conversion', 'study', 'high', 'step', 'converter', 'introduce', 'front', 'end', 'stage', 'improve', 'conversion', 'efficiency', 'conventional', 'boost', 'converter', 'stabilize', 'output', 'voltage', 'various', 'ders', 'wind', 'fuel', 'cell', 'module', 'simplify', 'newly', 'construct', 'multilevel', 'inverter', 'propose', 'multilevel', 'inverter', 'require', 'six', 'active', 'switch', 'instead', 'eight', 'required', 'conventional', 'cascade', 'bridge', 'cchb', 'multilevel', 'inverter', 'control', 'svm', 'technique', 'inverter', 'convert', 'output', 'non', 'conventional', 'energy', 'useful', 'power', 'connect', 'load', 'hybrid', 'operate', 'normal', 'condition', 'include', 'conventional', 'proposed', 'case', 'solar', 'energy', 'fuel', 'wind', 'energy', 'propose', 'result', 'present', 'illustrate', 'operating', 'principle', 'feasibility', 'reliability', 'propose', 'renewable', 'resourcesspace', 'vector', 'pulse', 'width', 'conversion', 'controlpower', 'electronics', 'controlbattery', 'systemdc', 'micro', 'griddcac', 'multilevel', 'inveterdcac', 'power', 'conversiondcdc', 'power', 'power', 'generationfuell', 'cell', 'powerhybrid', 'gridindraneel', 'sakiindranil', 'saakimatlab', 'circute', 'micro', 'power', 'inverterpower', 'gridsvpwm', 'techniqueswind', 'tubine', 'power', 'generation']",4
1753,58041,"Lateral Vehicle Dynamics Model<p>Lateral Vehicle Dynamics helps to simulate the Yawing Characteristics in a vehicle using dynamic load transfer equations.</p>optimization,simulation,testing",403,27,5,0,517,lateral vehicle dynamic modellateral vehicle dynamic help yaw characteristic vehicle dynamic load transfer equation,"['lateral', 'vehicle', 'dynamic', 'modellateral', 'vehicle', 'dynamic', 'help', 'yaw', 'characteristic', 'vehicle', 'dynamic', 'load', 'transfer', 'equation']",7
1754,58045,"SHEPWM of 3 phase, 2 level inverter with 3, 5 and 7 switching angles per quarter cycle.<p>This set of models and scripts demonstrate how SHEPWM works. The Simulink models generate pulses for two level inverter based on precomputed SHEPWM angles and modulation index. Three models are provided, with 3, 5 and 7 switching angles per quarter cycle of the output fundamental frequency. The models have preload functions, that compute the angles whenever the models are started. The models also have sine triangle PWM with comparable frequency carrier to show how SHEPWM excels at low switching frequencies, relative to output fundamental frequency. For 5 and 7 angles per quarter cycle, there are four solutions of angles and some are better than others. In the given scripts, 2 sets have been provided for each case (3,5 and 7 pulse).The preload functions have also been provided separately as .m files, with comments about the initial values given for Newton Raphson method for each iteration. The expressions used in the equations for SHEPWM are taken from the following reference.V. G. Agelidis, A. Balouktsis, I. Balouktsis and C. Cossar, ""Multiple sets of solutions for harmonic elimination PWM bipolar waveforms: analysis and experimental verification,"" in IEEE Transactions on Power Electronics, vol. 21, no. 2, pp. 415-421, March 2006.doi: 10.1109/TPEL.2005.869752</p>electric_motor_control,power_conversion_control,power_electronics_control,newton raphson,selective harmonic,shepwm,two level inverter",1082,45,4,0,1658,shepwm phase level inverter switch angle per quarter cycle set script demonstrate shepwm work generate pulse two level inverter base precomputed shepwm angle modulation index three provide switch angle per quarter cycle output fundamental frequency preload function compute angle whenever start also sine triangle pwm comparable frequency carrier show shepwm excels low switch frequency relative output fundamental frequency angle per quarter cycle four solution angle good others give script set provide case pulse preload function also provide separately files comment initial value give newton raphson method iteration expression equation shepwm take follow reference agelidis balouktsis balouktsis cossar multiple set solution harmonic elimination pwm bipolar waveform analysis experimental verification iee transaction power electronics vol march doi tpel electric motor controlpower conversion controlpower electronics controlnewton level inverter,"['shepwm', 'phase', 'level', 'inverter', 'switch', 'angle', 'per', 'quarter', 'cycle', 'set', 'script', 'demonstrate', 'shepwm', 'work', 'generate', 'pulse', 'two', 'level', 'inverter', 'base', 'precomputed', 'shepwm', 'angle', 'modulation', 'index', 'three', 'provide', 'switch', 'angle', 'per', 'quarter', 'cycle', 'output', 'fundamental', 'frequency', 'preload', 'function', 'compute', 'angle', 'whenever', 'start', 'also', 'sine', 'triangle', 'pwm', 'comparable', 'frequency', 'carrier', 'show', 'shepwm', 'excels', 'low', 'switch', 'frequency', 'relative', 'output', 'fundamental', 'frequency', 'angle', 'per', 'quarter', 'cycle', 'four', 'solution', 'angle', 'good', 'others', 'give', 'script', 'set', 'provide', 'case', 'pulse', 'preload', 'function', 'also', 'provide', 'separately', 'files', 'comment', 'initial', 'value', 'give', 'newton', 'raphson', 'method', 'iteration', 'expression', 'equation', 'shepwm', 'take', 'follow', 'reference', 'agelidis', 'balouktsis', 'balouktsis', 'cossar', 'multiple', 'set', 'solution', 'harmonic', 'elimination', 'pwm', 'bipolar', 'waveform', 'analysis', 'experimental', 'verification', 'iee', 'transaction', 'power', 'electronics', 'vol', 'march', 'doi', 'tpel', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlnewton', 'level', 'inverter']",4
1755,58126,"PID controller<p>This simulink file is about PID controller as a subsystem and without the term                    N--------------------  s     +     N</p>classical control,control,control design,pid controller",31,2,2,0,32,pid controllerthis file pid controller subsystem without term nclassical designpid controller,"['pid', 'controllerthis', 'file', 'pid', 'controller', 'subsystem', 'without', 'term', 'nclassical', 'designpid', 'controller']",0
1756,58140,"indranil saaki<p>This project presents the genetic optimization of the parameters of a fuzzy PI controller for UPFC( Unified Powerflow controller) using an improved genetic algorithm to enhance the transient stability performance of power systems. The function based Takagi-Sugeno-Kang (TSK) fuzzy controller uses minimum number of rules(hvo rules) and generates the proportional action which by one-to-two inference mapping gives a variable gain PI controller. This single input function based scheme dispenses the gain dependency of the proportional orintegral gains and generates independent control actions.Computer simulation results on a 2-area 4-machine 12-bus power system with an UPFC installed between buses sand r confirm the efficacy of the new approach in damping the local-mode and inter-area mode of oscillations.</p>crossover,facts,fitness function,fuzzy controller,genetic algorithm,improved genetic algorithm,indraneel saki,indranil saaki,mutation,neural networks,onetotwo inference mapping,power systems stability,simulation,stability control,takagi sugenokang tsk fuzzy control,two are power system simulation,unified power flow controller upfc",473,41,5,0,614,indranil saakithis project present genetic optimization parameter fuzzy controller upfc unify powerflow controller improve genetic algorithm enhance transient stability performance power function base takagi sugeno kang tsk fuzzy controller minimum number rule hvo rule generates proportional action one two inference map give variable gain controller single input function base scheme dispenses gain dependency proportional orintegral gain generate independent control action computer result area machine bus power upfc installed bus sand confirm efficacy new approach damp local mode inter area mode oscillation functionfuzzy genetic sakiindranil inference mappingpower controltakagi sugenokang tsk fuzzy controltwo power power flow controller upfc,"['indranil', 'saakithis', 'project', 'present', 'genetic', 'optimization', 'parameter', 'fuzzy', 'controller', 'upfc', 'unify', 'powerflow', 'controller', 'improve', 'genetic', 'algorithm', 'enhance', 'transient', 'stability', 'performance', 'power', 'function', 'base', 'takagi', 'sugeno', 'kang', 'tsk', 'fuzzy', 'controller', 'minimum', 'number', 'rule', 'hvo', 'rule', 'generates', 'proportional', 'action', 'one', 'two', 'inference', 'map', 'give', 'variable', 'gain', 'controller', 'single', 'input', 'function', 'base', 'scheme', 'dispenses', 'gain', 'dependency', 'proportional', 'orintegral', 'gain', 'generate', 'independent', 'control', 'action', 'computer', 'result', 'area', 'machine', 'bus', 'power', 'upfc', 'installed', 'bus', 'sand', 'confirm', 'efficacy', 'new', 'approach', 'damp', 'local', 'mode', 'inter', 'area', 'mode', 'oscillation', 'functionfuzzy', 'genetic', 'sakiindranil', 'inference', 'mappingpower', 'controltakagi', 'sugenokang', 'tsk', 'fuzzy', 'controltwo', 'power', 'power', 'flow', 'controller', 'upfc']",4
1757,58142,"Fuzzy logic based MPPT for PV and Fuel cell and Fuzzy Based Battery Management System<p>Fuzzy logic based MPPT for PV and Fuel cell and Fuzzy Based Battery Management System</p>fuel cell,fuzzy,mppt,power management system,pv,battery_system_management,power_conversion_control,power_electronics_control",389,24,4,0,492,fuzzy logic base mppt fuel cell fuzzy base battery management systemfuzzy logic base mppt fuel cell fuzzy base battery management systemfuel management systempvbattery managementpower conversion controlpower electronics control,"['fuzzy', 'logic', 'base', 'mppt', 'fuel', 'cell', 'fuzzy', 'base', 'battery', 'management', 'systemfuzzy', 'logic', 'base', 'mppt', 'fuel', 'cell', 'fuzzy', 'base', 'battery', 'management', 'systemfuel', 'management', 'systempvbattery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1758,58143,"Proposed ANN based MC-UPQC<p>Power quality (PQ) of power operating device is one of todayâs most discussed topic but also it is a most problematic subject in recent years. The increasing application of power operating device can cause PQ disturbances. Avoiding the PQ disturbance and enhancing the PQ are the difficult tasks. More power electronics devices are used to overcome the PQ disturbances. Multi converter -Unified power quality conditioner (MC-UPQC) is one of the new power electronics devices that are used for enhancing the PQ. This project presents a new unified power-quality conditioning system (MC-UPQC), capable of simultaneous  compensation for voltage and current in multibus/multifeeder systems. In this configuration, one shunt voltagesource converter (shunt VSC) and two or more series VSCs exist. The system can be applied to adjacent feeders to compensate for supply-voltage and load current imperfections on the main feeder and full compensation of supply voltage imperfections on the other feeders. In the proposed configuration, all converters are connected back to back on the dc side and share a common dc-link capacitor. sharing with one DC link capacitor. The discharging time of DC link capacitor is very high, and so it is the main problem in MC- UPQC device. To eliminate this problem, an enhanced ANN based MC-UPQC is proposed in this paper. Initially, the error voltage and change of error voltage of a nonlinear load is determined. Then the voltage variation is applied separately to ANN-based controller. In order to regulate the dc-link capacitor voltage, conventionally, a proportional controller (PI) is used to maintain the dc-link voltage at the reference value. The transient response of the PI dc-link voltage controller is slow. So, a fast acting dc-link voltage controller based on the energy of a dc-link capacitor is proposed. The transient response of this controller is very fast when compared to that of the conventional dc-link voltage controller. By using fuzzy logic controller instead of the PI controller the transient response is improved. The DC capacitor charging output voltage is increased and the response is fast when compared with PI by using the ANN controller and hence, the PQ of the system is enhanced. The proposed controller is tested and the results of tested system and their performances are evaluated. Therefore, power can be transferred from one feeder to adjacent feeders to compensate for sag/swell and interruption. The performance of the proposed configuration has been verified through simulation studies using MATLAB/SIMULATION on a two-bus/two-feeder system show the effectiveness of the proposed configuration.</p>power_conversion_control,power_electronics_control,ann techniques,artificial neural network ann,control systems,dfacts,fuzzy controller,indraneel saki,indranil saaki,matlabsimulation multi converter unified powerquality conditione,mcupqc,power electronics,power quality pq,upqc,voltagesource converter vsc",704,81,5,0,693,propose ann base upqcpower quality power operate device one today discuss topic also problematic subject recent year increase application power operate device cause disturbance avoid disturbance enhance difficult task power electronics device overcome disturbance multi converter unified power quality conditioner upqc one new power electronics device enhance project present new unified power quality condition upqc capable compensation voltage current multibus multifeeder configuration one shunt voltagesource converter shunt vsc two series vscs exist applied adjacent feeder compensate supply voltage load current imperfection main feeder full compensation supply voltage imperfection feeder propose configuration converter connect back back side share common link capacitor share one link capacitor discharge time link capacitor high main problem upqc device eliminate problem enhance ann base upqc propose paper initially error voltage change error voltage nonlinear load determine voltage variation apply separately ann base controller order regulate link capacitor voltage conventionally proportional controller maintain link voltage reference value transient response link voltage controller slow fast act link voltage controller base energy link capacitor propose transient response controller fast compare conventional link voltage controller fuzzy logic controller instead controller transient response improve capacitor charge output voltage increase response fast compare ann controller hence enhance propose controller test result test performance evaluate therefore power transfer one feeder adjacent feeder compensate sag swell interruption performance propose configuration verify study two bus two feeder show effectiveness propose configuration power conversion controlpower electronics controlann neural network anncontrol sakiindranil multi converter unify powerquality quality converter vsc,"['propose', 'ann', 'base', 'upqcpower', 'quality', 'power', 'operate', 'device', 'one', 'today', 'discuss', 'topic', 'also', 'problematic', 'subject', 'recent', 'year', 'increase', 'application', 'power', 'operate', 'device', 'cause', 'disturbance', 'avoid', 'disturbance', 'enhance', 'difficult', 'task', 'power', 'electronics', 'device', 'overcome', 'disturbance', 'multi', 'converter', 'unified', 'power', 'quality', 'conditioner', 'upqc', 'one', 'new', 'power', 'electronics', 'device', 'enhance', 'project', 'present', 'new', 'unified', 'power', 'quality', 'condition', 'upqc', 'capable', 'compensation', 'voltage', 'current', 'multibus', 'multifeeder', 'configuration', 'one', 'shunt', 'voltagesource', 'converter', 'shunt', 'vsc', 'two', 'series', 'vscs', 'exist', 'applied', 'adjacent', 'feeder', 'compensate', 'supply', 'voltage', 'load', 'current', 'imperfection', 'main', 'feeder', 'full', 'compensation', 'supply', 'voltage', 'imperfection', 'feeder', 'propose', 'configuration', 'converter', 'connect', 'back', 'back', 'side', 'share', 'common', 'link', 'capacitor', 'share', 'one', 'link', 'capacitor', 'discharge', 'time', 'link', 'capacitor', 'high', 'main', 'problem', 'upqc', 'device', 'eliminate', 'problem', 'enhance', 'ann', 'base', 'upqc', 'propose', 'paper', 'initially', 'error', 'voltage', 'change', 'error', 'voltage', 'nonlinear', 'load', 'determine', 'voltage', 'variation', 'apply', 'separately', 'ann', 'base', 'controller', 'order', 'regulate', 'link', 'capacitor', 'voltage', 'conventionally', 'proportional', 'controller', 'maintain', 'link', 'voltage', 'reference', 'value', 'transient', 'response', 'link', 'voltage', 'controller', 'slow', 'fast', 'act', 'link', 'voltage', 'controller', 'base', 'energy', 'link', 'capacitor', 'propose', 'transient', 'response', 'controller', 'fast', 'compare', 'conventional', 'link', 'voltage', 'controller', 'fuzzy', 'logic', 'controller', 'instead', 'controller', 'transient', 'response', 'improve', 'capacitor', 'charge', 'output', 'voltage', 'increase', 'response', 'fast', 'compare', 'ann', 'controller', 'hence', 'enhance', 'propose', 'controller', 'test', 'result', 'test', 'performance', 'evaluate', 'therefore', 'power', 'transfer', 'one', 'feeder', 'adjacent', 'feeder', 'compensate', 'sag', 'swell', 'interruption', 'performance', 'propose', 'configuration', 'verify', 'study', 'two', 'bus', 'two', 'feeder', 'show', 'effectiveness', 'propose', 'configuration', 'power', 'conversion', 'controlpower', 'electronics', 'controlann', 'neural', 'network', 'anncontrol', 'sakiindranil', 'multi', 'converter', 'unify', 'powerquality', 'quality', 'converter', 'vsc']",4
1759,58150,"First Order System Adjustment (MIT Rule)<p>This simulink is used to apply model reference control using MIT Rule on the first order system using zero order controller Reference : Adaptive control by Astrom</p>adaptive control,control,control design,first order system adjustment mit rule,mit rule,model reference adaptation systems,mras",15,0,1,0,21,first order adjustment mit rule apply reference control mit rule first order zero order controller reference adaptive control astromadaptive designfirst order adjustment mit rulemit rulemodel reference adaptation systemsmras,"['first', 'order', 'adjustment', 'mit', 'rule', 'apply', 'reference', 'control', 'mit', 'rule', 'first', 'order', 'zero', 'order', 'controller', 'reference', 'adaptive', 'control', 'astromadaptive', 'designfirst', 'order', 'adjustment', 'mit', 'rulemit', 'rulemodel', 'reference', 'adaptation', 'systemsmras']",4
1760,58151,"gain adiustment (MIT Rule)<p>This simulink is used to apply model reference control using MIT Rule on the zero order system using zero order controller Reference : Adaptive control by Astrom</p>adaptive control,control,control design,gain adiustment mit rule,mit rule,model reference adaptation system,mras",9,0,1,0,12,gain adiustment mit rule apply reference control mit rule zero order zero order controller reference adaptive control astromadaptive designgain adiustment mit rulemit rulemodel reference adaptation systemmras,"['gain', 'adiustment', 'mit', 'rule', 'apply', 'reference', 'control', 'mit', 'rule', 'zero', 'order', 'zero', 'order', 'controller', 'reference', 'adaptive', 'control', 'astromadaptive', 'designgain', 'adiustment', 'mit', 'rulemit', 'rulemodel', 'reference', 'adaptation', 'systemmras']",4
1761,58157,"Non-linear valve Gain Scheduling<p>This simulink file is used to solve Non-linear valve problem which presented in the adaptive control reference by Astrom using Gain Scheduling technic Reference : Adaptive control by Astrom</p>adaptive control,control,control design,gain scheduling,gs,nonlinear valve,nonlinear valve gain scheduling",52,2,2,0,57,non linear valve gain schedulingthis file solve non linear valve problem present adaptive control reference astrom gain schedule technic reference adaptive control astromadaptive designgain valvenonlinear valve gain scheduling,"['non', 'linear', 'valve', 'gain', 'schedulingthis', 'file', 'solve', 'non', 'linear', 'valve', 'problem', 'present', 'adaptive', 'control', 'reference', 'astrom', 'gain', 'schedule', 'technic', 'reference', 'adaptive', 'control', 'astromadaptive', 'designgain', 'valvenonlinear', 'valve', 'gain', 'scheduling']",4
1762,58158,"Tank system Gain Scheduling<p>This simulink file is used to solve Tank system problem which presented in the adaptive control reference by Astrom using Gain Scheduling technic</p>adaptive control,control,control design,gain scheduling,gs,tank system,tank system gain scheduling",40,2,2,0,50,tank gain schedulingthis file solve tank problem present adaptive control reference astrom gain schedule technicadaptive designgain systemtank gain scheduling,"['tank', 'gain', 'schedulingthis', 'file', 'solve', 'tank', 'problem', 'present', 'adaptive', 'control', 'reference', 'astrom', 'gain', 'schedule', 'technicadaptive', 'designgain', 'systemtank', 'gain', 'scheduling']",5
1763,58163,"indranil saaki<p>This project presents the simulation studies on a Cascaded H-Bridge converter based Distribution StaticSynchronous Compensator (DSTATCOM) for improving the power quality of a distribution system. Voltage source converter based DSTATCOM has been established as the most preferred solution for management of reactive power in distribution utilities and for improving voltage regulation, power factor and power quality in industries. For high power applications,cascaded H-Bridge converter is the most ideal choice compared to two-level inverter with series connected power devices. In the presnt work DSTATCOM controller is designed using DQO modelling for reactive power management and thereby improving the power factor in distribution systems. The dc linkvoltage and the three phase load currents are ued as feed back signals for the controller and it is designed in such a way that DSTATCOM is able to supply the reactive current demanded by the load both during steady state and transient conditions using noval modulation control.</p>power_conversion_control,power_electronics_control,dfacts,dstatcom,flexiable ac transmisson,indraneel saki,indranil saaki,matlab dstatcom circute,modeling,power quality,pwm techniques,simulation",311,6,2,0,339,indranil saakithis project present study cascade bridge converter base distribution compensator dstatcom improve power quality distribution voltage source converter base dstatcom establish preferred solution management reactive power distribution utility improve voltage regulation power factor power quality industry high power bridge converter ideal choice compare two level inverter series connect power device presnt work dstatcom controller design dqo reactive power management thereby improve power factor distribution linkvoltage three phase load current ued fee back signal controller design way dstatcom able supply reactive current demand load steady state transient condition noval modulation control power conversion controlpower electronics sakiindranil saakimatlab dstatcom qualitypwm,"['indranil', 'saakithis', 'project', 'present', 'study', 'cascade', 'bridge', 'converter', 'base', 'distribution', 'compensator', 'dstatcom', 'improve', 'power', 'quality', 'distribution', 'voltage', 'source', 'converter', 'base', 'dstatcom', 'establish', 'preferred', 'solution', 'management', 'reactive', 'power', 'distribution', 'utility', 'improve', 'voltage', 'regulation', 'power', 'factor', 'power', 'quality', 'industry', 'high', 'power', 'bridge', 'converter', 'ideal', 'choice', 'compare', 'two', 'level', 'inverter', 'series', 'connect', 'power', 'device', 'presnt', 'work', 'dstatcom', 'controller', 'design', 'dqo', 'reactive', 'power', 'management', 'thereby', 'improve', 'power', 'factor', 'distribution', 'linkvoltage', 'three', 'phase', 'load', 'current', 'ued', 'fee', 'back', 'signal', 'controller', 'design', 'way', 'dstatcom', 'able', 'supply', 'reactive', 'current', 'demand', 'load', 'steady', 'state', 'transient', 'condition', 'noval', 'modulation', 'control', 'power', 'conversion', 'controlpower', 'electronics', 'sakiindranil', 'saakimatlab', 'dstatcom', 'qualitypwm']",3
1764,58189,"This is a Simulink Model to Control a Robotic Arm By Gestures that are captured using Kinect Sensor.<p>This is a Simulink Model to Control a Robotic Arm By Gestures that are captured using Kinect Sensor. A Robot Arm is developed using Servo Motors that replicates the Right Arm Shoulder, Elbow and Hand Movements. Software Required:1. Matlab 2013a or later2. Arduino IDEComponents Required : 1. Kinect Sensor 2. Arduino Board 3. Servo Motors 4. Matlab 2013a A Project By J.Karthikeyan B.Avinashhttps://<a href=""http://www.youtube.com/watch?v=Z4z3K5SwySEThe"">www.youtube.com/watch?v=Z4z3K5SwySEThe</a> Zip file contains the Matlab Simulink Support for Kinect and the Simulink Model named ""GestureControlledRoboticArm"" that WE HAVE CREATED and also the Arduino Code/Wiring Diagram. The Simulink Support for Kinect was downloaded from Mathworks File Exchange and the full credits go to ""Takashi Chikamasa"" for providing it. We do not own the copyrights or have developed the Simulink Support For Kinect.  Simulink Support for Kinect consists of IMAQ, Image, IR, Depth, Motion and Skeleton blocks to achieve real-time image data acquisition from Kinect devices such as Microsoft Kinect or ASUS Xtion PRO under Simulink simulation environment. It works with 32bit/64bit version of MATLAB R2010b or later in Windows7 32bit/64bit and it requires the following 3rd party software:[C MEX Compiler] - Microsoft Visual Studio 2010 Express Edition (VC++) - Microsoft Windows SDK 7.1[To use OpenNI <a href=""http://openni.ru/"">http://openni.ru/</a> ] - OpenNI - PrimeSense NITE - PrimeSensor Module[To use Microsoft Kinect SDK <a href=""http://www.microsoft.com/en-us/kinectforwindows/"">http://www.microsoft.com/en-us/kinectforwindows/</a> ] - Microsoft Kinect for Windows SDK v1.6For more detailed information, please refer to document in the zip file and help of the blocks.[Optional MATLAB products] - Computer Vision System Toolbox (highly recommended) - DSP System Toolbox (to acquire Kinect Microphone Array data) - Simulink Coder (to generate *.exe file)</p>pick of the week,potw,electric_motor_control,power_electronics_control,arduino,arm,control design,gesture,gesture control,ide,kinect,kinect v2,matlab,robo,robot arm",417,11,2,75,466,control robotic arm gesture capture kinect sensor control robotic arm gesture capture kinect sensor robot arm develop servo motor replicate right arm shoulder elbow hand movement software require later arduino idecomponents require kinect sensor arduino board servo motor project karthikeyan avinash youtube com watch swysethe zip file contain support kinect name create also arduino code wire diagram support kinect download mathworks file exchange full credit takashi chikamasa provide copyright develop support kinect support kinect consist imaq image depth motion skeleton block achieve real time image data acquisition kinect device microsoft kinect asus xtion pro environment work bit bit version later windows bit bit require follow party software mex compiler microsoft visual studio express edition microsoft windows sdk openni http openni openni primesense nite primesensor module microsoft kinect sdk http microsoft com microsoft kinect windows sdk detailed information please refer document zip file help block optional product computer vision toolbox highly recommend dsp toolbox acquire kinect microphone array data coder generate exe file pick motor controlpower electronics matlabroborobot arm,"['control', 'robotic', 'arm', 'gesture', 'capture', 'kinect', 'sensor', 'control', 'robotic', 'arm', 'gesture', 'capture', 'kinect', 'sensor', 'robot', 'arm', 'develop', 'servo', 'motor', 'replicate', 'right', 'arm', 'shoulder', 'elbow', 'hand', 'movement', 'software', 'require', 'later', 'arduino', 'idecomponents', 'require', 'kinect', 'sensor', 'arduino', 'board', 'servo', 'motor', 'project', 'karthikeyan', 'avinash', 'youtube', 'com', 'watch', 'swysethe', 'zip', 'file', 'contain', 'support', 'kinect', 'name', 'create', 'also', 'arduino', 'code', 'wire', 'diagram', 'support', 'kinect', 'download', 'mathworks', 'file', 'exchange', 'full', 'credit', 'takashi', 'chikamasa', 'provide', 'copyright', 'develop', 'support', 'kinect', 'support', 'kinect', 'consist', 'imaq', 'image', 'depth', 'motion', 'skeleton', 'block', 'achieve', 'real', 'time', 'image', 'data', 'acquisition', 'kinect', 'device', 'microsoft', 'kinect', 'asus', 'xtion', 'pro', 'environment', 'work', 'bit', 'bit', 'version', 'later', 'windows', 'bit', 'bit', 'require', 'follow', 'party', 'software', 'mex', 'compiler', 'microsoft', 'visual', 'studio', 'express', 'edition', 'microsoft', 'windows', 'sdk', 'openni', 'http', 'openni', 'openni', 'primesense', 'nite', 'primesensor', 'module', 'microsoft', 'kinect', 'sdk', 'http', 'microsoft', 'com', 'microsoft', 'kinect', 'windows', 'sdk', 'detailed', 'information', 'please', 'refer', 'document', 'zip', 'file', 'help', 'block', 'optional', 'product', 'computer', 'vision', 'toolbox', 'highly', 'recommend', 'dsp', 'toolbox', 'acquire', 'kinect', 'microphone', 'array', 'data', 'coder', 'generate', 'exe', 'file', 'pick', 'motor', 'controlpower', 'electronics', 'matlabroborobot', 'arm']",0
1765,58202,"DFIG Wind Turbine<p>Based on the existing MatLab model of the DFIG wind farm, few modifications have been introduced plus adding the variable speed part.This simulation is a part of my graduation project on ""SMART HOMES &amp; RENEWABLE ENERGY"".Feedbacks are more than appreciated and i'll try to answer any inquiry as soon and best as I can.Faculty of Engineering, Alexandria University, Egypt.Electrical Engineering Department - Power and Machines Section4th Year Graduation Project Under the Supervision of Prof. Dr. Mohamed Yousry</p>grid,modeling,power,power electronics,simulation,simulink",959,43,8,0,1018,dfig wind turbinebased exist dfig wind farm modification introduce plus add variable speed part part graduation project smart home amp renewable energy feedback appreciate try answer inquiry soon best faculty engineering alexandria university egypt electrical engineering department power machine section year graduation project supervision prof mohamed,"['dfig', 'wind', 'turbinebased', 'exist', 'dfig', 'wind', 'farm', 'modification', 'introduce', 'plus', 'add', 'variable', 'speed', 'part', 'part', 'graduation', 'project', 'smart', 'home', 'amp', 'renewable', 'energy', 'feedback', 'appreciate', 'try', 'answer', 'inquiry', 'soon', 'best', 'faculty', 'engineering', 'alexandria', 'university', 'egypt', 'electrical', 'engineering', 'department', 'power', 'machine', 'section', 'year', 'graduation', 'project', 'supervision', 'prof', 'mohamed']",5
1766,58209,"Control model for Elbow Rehabilitation Exoskeleton based on Bioinspired Actuators #MATLABHW2k16<p>This is the control model for the video submission titled:Elbow Rehabilitation Exoskeleton based on bioinspired actuators #MATLABHW2k16<a href=""https://youtu.be/Fnw6cQ4kX9AThis"">https://youtu.be/Fnw6cQ4kX9AThis</a> model is useful to test how a Bilineal PID controller can be designed using Simulink.The version provided is compatible from Matlab 2011b to Matlab 2016Project description: The entire task is based on create an economically affordable elbow exoskeleton intended for rehabilitation purposes, for repetitive movement scenarios. Exoskeleton operation needs to produce no noise, and its weight needs to be as low as possible. Due to these requirements, and high needed torque, we use a custom developed Shape Memory Alloy based actuators.The controller is based on a low cost and powerful industrial grade available microcontroller, STM32F4; and the programming and verification/debugging stages are based on Model Based Design paradigm thanks to Matlab/Simulink, that provides a Rapid Control Prototyping scenario.Control algorithm is based on a Bilineal PID controller, suitable for non linear actuators and require little computational effort.If you enjoy the presented work, please do like and provide feedback at Youtube!Thanks for watching (and control model download)!</p>control design,elbow rehabilitation exoskeleton based on bioinspired actuators,matlabhw2k16,simulink,stm32f4",254,12,5,0,195,control elbow rehabilitation exoskeleton base bioinspired actuator matlabhw control video submission title elbow rehabilitation exoskeleton base bioinspired actuator matlabhw youtu fnw athis useful test bilineal pid controller design version provide compatible project description entire task base create economically affordable elbow exoskeleton intend rehabilitation purpose repetitive movement scenario exoskeleton operation need produce noise weight need low possible due requirement high need torque custom develop shape memory alloy base actuator controller base low cost powerful industrial grade available microcontroller stm program verification debug stage base base design paradigm thanks provide rapid control prototyping scenario control algorithm base bilineal pid controller suitable non linear actuator require little computational effort enjoy present work please like provide feedback youtube thanks watch control download control designelbow rehabilitation exoskeleton base bioinspired,"['control', 'elbow', 'rehabilitation', 'exoskeleton', 'base', 'bioinspired', 'actuator', 'matlabhw', 'control', 'video', 'submission', 'title', 'elbow', 'rehabilitation', 'exoskeleton', 'base', 'bioinspired', 'actuator', 'matlabhw', 'youtu', 'fnw', 'athis', 'useful', 'test', 'bilineal', 'pid', 'controller', 'design', 'version', 'provide', 'compatible', 'project', 'description', 'entire', 'task', 'base', 'create', 'economically', 'affordable', 'elbow', 'exoskeleton', 'intend', 'rehabilitation', 'purpose', 'repetitive', 'movement', 'scenario', 'exoskeleton', 'operation', 'need', 'produce', 'noise', 'weight', 'need', 'low', 'possible', 'due', 'requirement', 'high', 'need', 'torque', 'custom', 'develop', 'shape', 'memory', 'alloy', 'base', 'actuator', 'controller', 'base', 'low', 'cost', 'powerful', 'industrial', 'grade', 'available', 'microcontroller', 'stm', 'program', 'verification', 'debug', 'stage', 'base', 'base', 'design', 'paradigm', 'thanks', 'provide', 'rapid', 'control', 'prototyping', 'scenario', 'control', 'algorithm', 'base', 'bilineal', 'pid', 'controller', 'suitable', 'non', 'linear', 'actuator', 'require', 'little', 'computational', 'effort', 'enjoy', 'present', 'work', 'please', 'like', 'provide', 'feedback', 'youtube', 'thanks', 'watch', 'control', 'download', 'control', 'designelbow', 'rehabilitation', 'exoskeleton', 'base', 'bioinspired']",5
1767,58221,"Visualize signals from MPU9150 in Simulink<p>By Esther Ling, Edu Engineer.A driver block written using the S-Function builder to stream accelerometer and gyro values from the IMU MPU9150 into Simulink. Connect the IMU to an Arduino Mega and run in external mode.Complements the blog post:<a href=""https://dashboardproject.wordpress.com/2016/03/25/configuring-mpu-9150-arduino-and-matlab/"">https://dashboardproject.wordpress.com/2016/03/25/configuring-mpu-9150-arduino-and-matlab/</a></p>arduino,arduino imu,mpu9150,simulink imu sensor",4,0,1,0,13,visualize signal mpu esther ling edu engineer driver block write function builder stream accelerometer gyro value imu mpu connect imu arduino mega run external mode complement blog post wordpress com configure mpu arduino arduinoarduino imumpu imu sensor,"['visualize', 'signal', 'mpu', 'esther', 'ling', 'edu', 'engineer', 'driver', 'block', 'write', 'function', 'builder', 'stream', 'accelerometer', 'gyro', 'value', 'imu', 'mpu', 'connect', 'imu', 'arduino', 'mega', 'run', 'external', 'mode', 'complement', 'blog', 'post', 'wordpress', 'com', 'configure', 'mpu', 'arduino', 'arduinoarduino', 'imumpu', 'imu', 'sensor']",5
1768,58231,"Model based control of a Lego Mindstorms EV3 bike<p>The design of a self-stabilized bike has been developed using model based control and the Matlab/Simulink support to the Lego Mindstorms EV3 hardware.The control system allows the bike to self-balance exploiting measures of the lean angle rate from the gyro sensor. The vehicle maintains a straight trajectory until it stops after a given elapsed time or when the ultrasonic sensor detects an obstacle.Building instruction are included. The bike has been realized using a standard Lego Mindstorms EV3 ""education kit"" except for the wheels which have the following Lego product codes: 290301 (RIM) + 290226 (TYRE)<a href=""https://youtu.be/2YtpPu-SI5M"">https://youtu.be/2YtpPu-SI5M</a></p>pick of the week,potw,bike,control design,hardware support,lego mindstorms ev3,simulink",241,15,4,0,257,base control lego mindstorms bikethe design self stabilize bike develop base control support lego mindstorms hardware control allow bike self balance exploit measure lean angle rate gyro sensor vehicle maintains straight trajectory stop give elapsed time ultrasonic sensor detects obstacle build instruction include bike realize standard lego mindstorms education kit except wheel follow lego product code rim tyre youtu ytppu mpick designhardware supportlego mindstorms,"['base', 'control', 'lego', 'mindstorms', 'bikethe', 'design', 'self', 'stabilize', 'bike', 'develop', 'base', 'control', 'support', 'lego', 'mindstorms', 'hardware', 'control', 'allow', 'bike', 'self', 'balance', 'exploit', 'measure', 'lean', 'angle', 'rate', 'gyro', 'sensor', 'vehicle', 'maintains', 'straight', 'trajectory', 'stop', 'give', 'elapsed', 'time', 'ultrasonic', 'sensor', 'detects', 'obstacle', 'build', 'instruction', 'include', 'bike', 'realize', 'standard', 'lego', 'mindstorms', 'education', 'kit', 'except', 'wheel', 'follow', 'lego', 'product', 'code', 'rim', 'tyre', 'youtu', 'ytppu', 'mpick', 'designhardware', 'supportlego', 'mindstorms']",5
1769,58254,tx simulink for ieee 802.15.4<p>tx simulink for ieee 802.15.4</p>simulation,10,0,1,0,9,iee iee,"['iee', 'iee']",7
1770,58257,"indranil saaki<p>A proportionalâintegralâderivative controller (PID) Load frequency controller is a generic control loop feedback mechanism (controller) widely used in industrial control systems. Frequency is a major stability criterion for large-scale stability in multi area power systems. To provide the stability, active power balance and constant frequency are required. Frequency depends on active power balance. To improve the stability of the power networks, it is necessary to design a load frequency control (LFC) systems that control the power generation and active power at tie lines.  The tie lines are utilities for contracted energy exchange between areas and provide inter-area support in abnormal conditions. Area load changes and abnormal conditions lead to mismatches in frequency and scheduled power interchanges between areas. These mismatches have to be corrected by LFC, which is defined as the regulation of the power output of generators within a prescribed area. Therefore, the LFC task is very important in interconnected power systems.For large scale power systems which normally consist of interconnected control areas, Load Frequency Control (LFC) is important to keep the system frequency and the inter area tie power as near to the scheduled values as possible. The input mechanical power to the generators is used to control the frequency of the output electrical power and to maintain the power exchange between the areas as scheduled. A well designed and operated power system should cope with changes in the load and with system disturbances, and it should provide acceptably high level of power quality while maintaining both voltage and frequency within tolerable limits.This project explains a unified PID tuning method for load frequency control (LFC) of power systems. The tuning method is based on the two-degree-of-freedom (TDF) internal model control (IMC) design method and a PID approximation procedure. The time-domain performance and robustness of the resulting PID controller is related to two tuning parameters. This project also explains the robust tuning of the two parameters. The method is applicable to power systems with non-reheated, reheated, and hydro turbines. Simulation results show that it can indeed improve the damping of the power systems. In this project it is also evident that the method can also be used in decentralized PID tuning for multi-area power systems.</p>controller design,decentralized control,imc controller,indraneel saki,indranil saaki,internal model control imc,load frequency control lfc,load frequency controller,matlab,pid controller,pid tuning,power systems,robustness,simulation,simulink,single area power systems,two area power systems",106,4,2,0,128,indranil saakia controller pid load frequency controller generic control loop feedback mechanism controller widely industrial control frequency major stability criterion large scale stability multi area power provide stability active power balance constant frequency require frequency depend active power balance improve stability power network necessary design load frequency control lfc control power generation active power tie line tie line utility contract energy exchange area provide inter area support abnormal condition area load change abnormal condition lead mismatch frequency schedule power interchange area mismatch correct lfc define regulation power output generator within prescribed area therefore lfc task important interconnected power large scale power normally consist interconnect control area load frequency control lfc important keep frequency inter area tie power near schedule value possible input mechanical power generator control frequency output electrical power maintain power exchange area schedule well design operate power cope change load disturbance provide acceptably high level power quality maintain voltage frequency within tolerable limit project explain unified pid tune method load frequency control lfc power tune method base two degree freedom tdf internal control imc design method pid approximation procedure time domain performance robustness result pid controller relate two tune parameter project also explain robust tune two parameter method applicable power non reheat reheated hydro turbine result show indeed improve damp power project also evident method also decentralize pid tune multi area power controller controlimc sakiindranil saakiinternal control imcload frequency control lfcload frequency controllerpid tuningpower area power systemstwo area power,"['indranil', 'saakia', 'controller', 'pid', 'load', 'frequency', 'controller', 'generic', 'control', 'loop', 'feedback', 'mechanism', 'controller', 'widely', 'industrial', 'control', 'frequency', 'major', 'stability', 'criterion', 'large', 'scale', 'stability', 'multi', 'area', 'power', 'provide', 'stability', 'active', 'power', 'balance', 'constant', 'frequency', 'require', 'frequency', 'depend', 'active', 'power', 'balance', 'improve', 'stability', 'power', 'network', 'necessary', 'design', 'load', 'frequency', 'control', 'lfc', 'control', 'power', 'generation', 'active', 'power', 'tie', 'line', 'tie', 'line', 'utility', 'contract', 'energy', 'exchange', 'area', 'provide', 'inter', 'area', 'support', 'abnormal', 'condition', 'area', 'load', 'change', 'abnormal', 'condition', 'lead', 'mismatch', 'frequency', 'schedule', 'power', 'interchange', 'area', 'mismatch', 'correct', 'lfc', 'define', 'regulation', 'power', 'output', 'generator', 'within', 'prescribed', 'area', 'therefore', 'lfc', 'task', 'important', 'interconnected', 'power', 'large', 'scale', 'power', 'normally', 'consist', 'interconnect', 'control', 'area', 'load', 'frequency', 'control', 'lfc', 'important', 'keep', 'frequency', 'inter', 'area', 'tie', 'power', 'near', 'schedule', 'value', 'possible', 'input', 'mechanical', 'power', 'generator', 'control', 'frequency', 'output', 'electrical', 'power', 'maintain', 'power', 'exchange', 'area', 'schedule', 'well', 'design', 'operate', 'power', 'cope', 'change', 'load', 'disturbance', 'provide', 'acceptably', 'high', 'level', 'power', 'quality', 'maintain', 'voltage', 'frequency', 'within', 'tolerable', 'limit', 'project', 'explain', 'unified', 'pid', 'tune', 'method', 'load', 'frequency', 'control', 'lfc', 'power', 'tune', 'method', 'base', 'two', 'degree', 'freedom', 'tdf', 'internal', 'control', 'imc', 'design', 'method', 'pid', 'approximation', 'procedure', 'time', 'domain', 'performance', 'robustness', 'result', 'pid', 'controller', 'relate', 'two', 'tune', 'parameter', 'project', 'also', 'explain', 'robust', 'tune', 'two', 'parameter', 'method', 'applicable', 'power', 'non', 'reheat', 'reheated', 'hydro', 'turbine', 'result', 'show', 'indeed', 'improve', 'damp', 'power', 'project', 'also', 'evident', 'method', 'also', 'decentralize', 'pid', 'tune', 'multi', 'area', 'power', 'controller', 'controlimc', 'sakiindranil', 'saakiinternal', 'control', 'imcload', 'frequency', 'control', 'lfcload', 'frequency', 'controllerpid', 'tuningpower', 'area', 'power', 'systemstwo', 'area', 'power']",4
1771,58258,"indranil saaki<p>In this project, a new three-phase high power dc/dc converter with an active clamp is proposed. The converter is capable of increased power transfer due to its three-phase power configuration, and it reduces the rms current per phase, thus reducing conduction losses. Further, interleaved operation of three-phase boost converter reduces overall ripple current, which is imposed into fuel cells and realizes smaller sized filter components, increasing effective operating frequency and leading to higher power density. Each output current of three-phase boost converter is combined by the three-phase transformer and flows in the continuous conduction mode by the proposed three-phase PWM strategy. An efficiency of above 96% is mainly achieved by reducing conduction losses and switching losses are reduced by the action of active clamp branches, as well. The proposed converter and three-phase PWM strategy are analyzed, simulated and implemented in hardware. Experimental results are obtained on a 500W prototype unit, with all of the design verified and analyzed.</p>electric_motor_control,power_conversion_control,power_electronics_control,continuous conduction mode,fuel cell,indraneel saki,indranil saaki,interleaved operation,isolated boost converter,matlab,power electronics,power systems,renewable energy resourses,simulation,simulink,threephase dcdc converter,threephase pwm strategy",474,74,4,0,450,indranil saakiin project new three phase high power converter active clamp propose converter capable increased power transfer due three phase power configuration reduces rms current per phase thus reduce conduction loss interleave operation three phase boost converter reduces overall ripple current impose fuel cell realize small sized filter component increase effective operating frequency lead high power density output current three phase boost converter combine three phase transformer flow continuous conduction mode propose three phase pwm strategy efficiency mainly achieve reduce conduction loss switch loss reduce action active clamp branch well propose converter three phase pwm strategy analyze implement hardware experimental result obtain prototype unit design verify analyzed electric motor controlpower conversion controlpower electronics conduction modefuel cellindraneel sakiindranil boost energy dcdc pwm strategy,"['indranil', 'saakiin', 'project', 'new', 'three', 'phase', 'high', 'power', 'converter', 'active', 'clamp', 'propose', 'converter', 'capable', 'increased', 'power', 'transfer', 'due', 'three', 'phase', 'power', 'configuration', 'reduces', 'rms', 'current', 'per', 'phase', 'thus', 'reduce', 'conduction', 'loss', 'interleave', 'operation', 'three', 'phase', 'boost', 'converter', 'reduces', 'overall', 'ripple', 'current', 'impose', 'fuel', 'cell', 'realize', 'small', 'sized', 'filter', 'component', 'increase', 'effective', 'operating', 'frequency', 'lead', 'high', 'power', 'density', 'output', 'current', 'three', 'phase', 'boost', 'converter', 'combine', 'three', 'phase', 'transformer', 'flow', 'continuous', 'conduction', 'mode', 'propose', 'three', 'phase', 'pwm', 'strategy', 'efficiency', 'mainly', 'achieve', 'reduce', 'conduction', 'loss', 'switch', 'loss', 'reduce', 'action', 'active', 'clamp', 'branch', 'well', 'propose', 'converter', 'three', 'phase', 'pwm', 'strategy', 'analyze', 'implement', 'hardware', 'experimental', 'result', 'obtain', 'prototype', 'unit', 'design', 'verify', 'analyzed', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'conduction', 'modefuel', 'cellindraneel', 'sakiindranil', 'boost', 'energy', 'dcdc', 'pwm', 'strategy']",3
1772,58267,"indranil Saaki<p>THE Indian power distribution systems are facing a variety of problems due to proliferation of nonlinear loads in the last decade. In addition to poor voltage profile, the power factor and harmonics of the system are the major concerns of the utility. A variety of power factor improvement &amp; harmonic minimization techniques are available ranging from various power factor-correcting devices to passive &amp; active harmonic filters.Electrical distribution system suffers from various problems like reactive power burden, unbalanced loading, voltage regulation and harmonic distortion. Though DSTATCOMS are ideal solutions for such systems, they are not popular because of the cost and complexity of control involved. Phase wise balanced reactive power compensations are required for fast changing loads needing dynamic power factor correcting devices leading to terminal voltage stabilization. Static Var Compensators (SVCs) remain ideal choice for such loads in practice due to low cost and simple control strategy. These SVCs, while correcting power factor, inject harmonics into the lines causing serious concerns about quality of the distribution line supplies at PCC. This paper proposes to minimize the harmonics injected into the distribution systems by the operation of TSC-TCR type SVC used in conjunction with fast changing loads at LV distribution level. Fuzzy logic system and ANN is used to solve this nonlinear problem, giving optimum triggering delay angles used to trigger switches in TCR. The scheme with Artificial Neural Network (ANN) is attractive and can be used at distribution level where load harmonics are within limits.</p>facts,indraneel saki,indranil saaki,lv distribution level,matlab,power control,power electronics,power systems,simulink,static var compensator,svc",1385,104,6,0,1602,indranil saakithe indian power distribution face variety problem due proliferation nonlinear load last decade addition poor voltage profile power factor harmonic major concern utility variety power factor improvement amp harmonic minimization technique available range various power factor correct device passive amp active harmonic filter electrical distribution suffers various problem like reactive power burden unbalance loading voltage regulation harmonic distortion though dstatcoms ideal solution popular cost complexity control involve phase wise balance reactive power compensation require fast change load need dynamic power factor correct device lead terminal voltage stabilization static var compensators svcs remain ideal choice load practice due low cost simple control strategy svcs correct power factor inject harmonic line cause serious concern quality distribution line supply pcc paper proposes minimize harmonic injected distribution operation tsc tcr type svc conjunction fast change load distribution level fuzzy logic ann solve nonlinear problem give optimum triggering delay angle trigger switch tcr scheme artificial neural network ann attractive distribution level load harmonic within limit factsindraneel sakiindranil saakilv distribution controlpower var compensatorsvc,"['indranil', 'saakithe', 'indian', 'power', 'distribution', 'face', 'variety', 'problem', 'due', 'proliferation', 'nonlinear', 'load', 'last', 'decade', 'addition', 'poor', 'voltage', 'profile', 'power', 'factor', 'harmonic', 'major', 'concern', 'utility', 'variety', 'power', 'factor', 'improvement', 'amp', 'harmonic', 'minimization', 'technique', 'available', 'range', 'various', 'power', 'factor', 'correct', 'device', 'passive', 'amp', 'active', 'harmonic', 'filter', 'electrical', 'distribution', 'suffers', 'various', 'problem', 'like', 'reactive', 'power', 'burden', 'unbalance', 'loading', 'voltage', 'regulation', 'harmonic', 'distortion', 'though', 'dstatcoms', 'ideal', 'solution', 'popular', 'cost', 'complexity', 'control', 'involve', 'phase', 'wise', 'balance', 'reactive', 'power', 'compensation', 'require', 'fast', 'change', 'load', 'need', 'dynamic', 'power', 'factor', 'correct', 'device', 'lead', 'terminal', 'voltage', 'stabilization', 'static', 'var', 'compensators', 'svcs', 'remain', 'ideal', 'choice', 'load', 'practice', 'due', 'low', 'cost', 'simple', 'control', 'strategy', 'svcs', 'correct', 'power', 'factor', 'inject', 'harmonic', 'line', 'cause', 'serious', 'concern', 'quality', 'distribution', 'line', 'supply', 'pcc', 'paper', 'proposes', 'minimize', 'harmonic', 'injected', 'distribution', 'operation', 'tsc', 'tcr', 'type', 'svc', 'conjunction', 'fast', 'change', 'load', 'distribution', 'level', 'fuzzy', 'logic', 'ann', 'solve', 'nonlinear', 'problem', 'give', 'optimum', 'triggering', 'delay', 'angle', 'trigger', 'switch', 'tcr', 'scheme', 'artificial', 'neural', 'network', 'ann', 'attractive', 'distribution', 'level', 'load', 'harmonic', 'within', 'limit', 'factsindraneel', 'sakiindranil', 'saakilv', 'distribution', 'controlpower', 'var', 'compensatorsvc']",4
1773,58269,"indranil saaki<p>The static synchronous compensator (STATCOM) being the state-of-the-art voltage source converter (VSC) based dynamic shunt compensator in FACTS family (Flexible Alternating Current Transmission System) is increasingly employed in transmission system for reactive power control, increase of power transfer capacity, voltage regulation etc. Utilization of such controller at the middle location of the high voltage transmission system is focused in this paper to enhance the power transmission capacity of the line. A forty-eight pulse STATCOM evolved on two level gate turn-off thyristor based voltage source converters (GTO-VSCs) topology to be operated at fundamental frequency switching modulation is employed to have higher voltage gain in the midpoint of the transmission line enabling to achieve reasonable power gain in the system. Its magnetics is evolved with single stage magnetics that require only four transformers with its cumulative rating (MVA) equal to that of the controller itself and thus, leads to considerable saving in cost. Employing this STATCOM to be operated under voltage control mode, at mid-section of an EHVAC line, power system network is simulated using MATLAB platform. The simulation results show that the STATCOM is effective to reasonably increase the 132kV line loading.</p>power_conversion_control,power_electronics_control,48gto converter,control design,facts,flexiable ac transmission system,fundamental frequency switching,gateturn off thyristor,indraneel saki,indranil saaki,magnetics,phase shifting transformer,power electronics,power system,renewable energy resourses,statcom,voltage source converter",1239,117,5,0,1401,indranil saakithe static synchronous compensator statcom state art voltage source converter vsc base dynamic shunt compensator fact family flexible alternate current transmission increasingly employ transmission reactive power control increase power transfer capacity voltage regulation etc utilization controller middle location high voltage transmission focus paper enhance power transmission capacity line forty eight pulse statcom evolve two level gate turn thyristor base voltage source converter gto vscs topology operate fundamental frequency switch modulation employ high voltage gain midpoint transmission line enable achieve reasonable power gain magnetics evolve single stage magnetics require four transformer cumulative rating mva equal controller thus lead considerable save cost employ statcom operate voltage control mode mid section ehvac line power network platform result show statcom effective reasonably increase line load power conversion controlpower electronics control gto transmission frequency sakiindranil shift systemrenewable energy source converter,"['indranil', 'saakithe', 'static', 'synchronous', 'compensator', 'statcom', 'state', 'art', 'voltage', 'source', 'converter', 'vsc', 'base', 'dynamic', 'shunt', 'compensator', 'fact', 'family', 'flexible', 'alternate', 'current', 'transmission', 'increasingly', 'employ', 'transmission', 'reactive', 'power', 'control', 'increase', 'power', 'transfer', 'capacity', 'voltage', 'regulation', 'etc', 'utilization', 'controller', 'middle', 'location', 'high', 'voltage', 'transmission', 'focus', 'paper', 'enhance', 'power', 'transmission', 'capacity', 'line', 'forty', 'eight', 'pulse', 'statcom', 'evolve', 'two', 'level', 'gate', 'turn', 'thyristor', 'base', 'voltage', 'source', 'converter', 'gto', 'vscs', 'topology', 'operate', 'fundamental', 'frequency', 'switch', 'modulation', 'employ', 'high', 'voltage', 'gain', 'midpoint', 'transmission', 'line', 'enable', 'achieve', 'reasonable', 'power', 'gain', 'magnetics', 'evolve', 'single', 'stage', 'magnetics', 'require', 'four', 'transformer', 'cumulative', 'rating', 'mva', 'equal', 'controller', 'thus', 'lead', 'considerable', 'save', 'cost', 'employ', 'statcom', 'operate', 'voltage', 'control', 'mode', 'mid', 'section', 'ehvac', 'line', 'power', 'network', 'platform', 'result', 'show', 'statcom', 'effective', 'reasonably', 'increase', 'line', 'load', 'power', 'conversion', 'controlpower', 'electronics', 'control', 'gto', 'transmission', 'frequency', 'sakiindranil', 'shift', 'systemrenewable', 'energy', 'source', 'converter']",4
1774,58272,"Compute real, reactive, apparent, power factor and phase angle of a voltage-current pair<p>Compute real, reactive, apparent, power factor and phase angle (deg) of a voltage-current pair at fundamental Frequency based on the following equations.Real Power = mean(V*I)Reactive Power = Apparent Power*sin(Phase Angle)Apparent Power = Vrms*IrmsPower Factor = Real Power/Apparent PowerPhase Angle = acos(Power Factor)For the first cycle of simulation, the outputs are held constant to the powers computed for the Voltage initial input and Current initial input parameters.</p>active power,apparent power,complex power,phase angle,power factor,reactive power,real power",22,1,2,0,27,compute real reactive apparent power factor phase angle voltage current paircompute real reactive apparent power factor phase angle deg voltage current pair fundamental frequency base follow equation real power mean reactive power apparent power sin phase angle apparent power vrms irmspower factor real power apparent powerphase angle acos power factor first cycle output hold constant power compute voltage initial input current initial input parameter active powerapparent powercomplex powerphase anglepower factorreactive powerreal power,"['compute', 'real', 'reactive', 'apparent', 'power', 'factor', 'phase', 'angle', 'voltage', 'current', 'paircompute', 'real', 'reactive', 'apparent', 'power', 'factor', 'phase', 'angle', 'deg', 'voltage', 'current', 'pair', 'fundamental', 'frequency', 'base', 'follow', 'equation', 'real', 'power', 'mean', 'reactive', 'power', 'apparent', 'power', 'sin', 'phase', 'angle', 'apparent', 'power', 'vrms', 'irmspower', 'factor', 'real', 'power', 'apparent', 'powerphase', 'angle', 'acos', 'power', 'factor', 'first', 'cycle', 'output', 'hold', 'constant', 'power', 'compute', 'voltage', 'initial', 'input', 'current', 'initial', 'input', 'parameter', 'active', 'powerapparent', 'powercomplex', 'powerphase', 'anglepower', 'factorreactive', 'powerreal', 'power']",4
1775,58282,"Hysteresis_based_sliding_mode_control_dc-dc_converter<p>Hysteresis_based_sliding_mode_control_dc-dc_converterSee Introduction in the zip file</p>power_conversion_control,power_electronics_control,power electronics",44,1,2,0,62,hysteresis base slide mode control base slide mode control convertersee introduction zip filepower conversion controlpower electronics controlpower electronics,"['hysteresis', 'base', 'slide', 'mode', 'control', 'base', 'slide', 'mode', 'control', 'convertersee', 'introduction', 'zip', 'filepower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",1
1776,58318,"This package contains files necessary to build mobile robot that can travel along road and corridors<p>We will use the Mobile Robot with the Two-Tier Control System to cover three topics:1.To program a Raspberry Pi with Simulink.2.To program Arduino Mega with Simulink.3.To make Raspberry Pi and Arduino communicate with each other.By the end of this description you will see a Mobile Robot programmed to detect and follow a linear perspective point using Simulink Support Packages for Raspberry Pi and Arduino Hardware.<a href=""https://www.youtube.com/watch?v=42we9W22iCM1"">https://www.youtube.com/watch?v=42we9W22iCM1</a>. Ðodel HighLevel_RaspberryPi simulate the vision system that allows a mobile robot to travel along straight road sections and corridors on the basis of linear perspective point detect. Camera Board or web camera must have connected to Raspberry Pi.2. Model LowLevel_Arduino simulate a simple closed-loop control algorithm which use the difference between two encoder outputs to calculate the power that should be applied to each wheel individually.3. In this project Raspberry Pi and Arduino Mega communicate with each other through the serial interface. However, despite the fact that the Raspberry Pi has the hardware parallel interface (UART), but it is not among the Simulinkâs blocks as that of Arduino. To solve this problem for Raspberry Pi was developed the block of software parallel interface.  But there is still a problem: UART port Arduino powered by 5 V, and Raspberry - from 3.3 V. For this Raspberry Rx pin was connected to the Arduino Tx pin through two resistors as shown in the pict.For camera resolution at 320x240 pixels and UART port settings at 600-2400 baud rate was obtained maximum of 4-8 frames per second.The project includes the following files:â¢HighLevel_RaspberryPi.slxâ¢LowLevel_Arduino.slx.</p>arduino,communications,computer vision,control design,hough transform,image processing,matlabhw2k16,mobile robot,raspberry,robotics,rs232,serial port,uart,raspberry pi",455,50,8,11,545,package contain file necessary build mobile robot travel along road corridorswe mobile robot two tier control cover three topic program raspberry program arduino mega make raspberry arduino communicate end description see mobile robot program detect follow linear perspective point support package raspberry arduino hardware youtube com watch icm Ð¼odel highlevel raspberrypi vision allow mobile robot travel along straight road section corridor basis linear perspective point detect camera board web camera must connect raspberry lowlevel arduino simple close loop control algorithm difference two encoder output calculate power apply wheel individually project raspberry arduino mega communicate serial interface however despite fact raspberry hardware parallel interface uart among block arduino solve problem raspberry develop block software parallel interface still problem uart port arduino power raspberry raspberry pin connect arduino pin two resistor show pict camera resolution pixel uart port setting baud rate obtain maximum frame per second project include follow file highlevel raspberrypi slxlowlevel arduino slx visioncontrol designhough transformimage mobile serial,"['package', 'contain', 'file', 'necessary', 'build', 'mobile', 'robot', 'travel', 'along', 'road', 'corridorswe', 'mobile', 'robot', 'two', 'tier', 'control', 'cover', 'three', 'topic', 'program', 'raspberry', 'program', 'arduino', 'mega', 'make', 'raspberry', 'arduino', 'communicate', 'end', 'description', 'see', 'mobile', 'robot', 'program', 'detect', 'follow', 'linear', 'perspective', 'point', 'support', 'package', 'raspberry', 'arduino', 'hardware', 'youtube', 'com', 'watch', 'icm', 'Ð¼odel', 'highlevel', 'raspberrypi', 'vision', 'allow', 'mobile', 'robot', 'travel', 'along', 'straight', 'road', 'section', 'corridor', 'basis', 'linear', 'perspective', 'point', 'detect', 'camera', 'board', 'web', 'camera', 'must', 'connect', 'raspberry', 'lowlevel', 'arduino', 'simple', 'close', 'loop', 'control', 'algorithm', 'difference', 'two', 'encoder', 'output', 'calculate', 'power', 'apply', 'wheel', 'individually', 'project', 'raspberry', 'arduino', 'mega', 'communicate', 'serial', 'interface', 'however', 'despite', 'fact', 'raspberry', 'hardware', 'parallel', 'interface', 'uart', 'among', 'block', 'arduino', 'solve', 'problem', 'raspberry', 'develop', 'block', 'software', 'parallel', 'interface', 'still', 'problem', 'uart', 'port', 'arduino', 'power', 'raspberry', 'raspberry', 'pin', 'connect', 'arduino', 'pin', 'two', 'resistor', 'show', 'pict', 'camera', 'resolution', 'pixel', 'uart', 'port', 'setting', 'baud', 'rate', 'obtain', 'maximum', 'frame', 'per', 'second', 'project', 'include', 'follow', 'file', 'highlevel', 'raspberrypi', 'slxlowlevel', 'arduino', 'slx', 'visioncontrol', 'designhough', 'transformimage', 'mobile', 'serial']",0
1777,58328,"indranil saaki<p>This project presents supercapacitors and battery association methodology for ECCE Hybrid vehicle. ECCE is an experimental Hybrid Vehicle developed at L2ES Laboratory in collaboration with the Research Center in Electrical Engineering and Electronics in Belfort (CREEBEL) and other French partners. This test bench has currently lead-acid batteries with a rated voltage of 540 V, two motors each one coupled with one alternator. The alternators are feeding a DC-bus by rectifers. The main objective of this project is to study the management of the energy provides by two supercapacitor packs. Each supercapacitors module is made of 108 cells with a maximum voltage of 270V. Thisexperimental test bench is carried out for studies and innovating tests for the Hybrid Vehicle applications. The multi boost and multi full bridge converter topologies are studied to define the best topology for the embarked power management. The authors propose a good power management strategy by using the multi boost and the multi full bridge converter topologies. The experimental and simulation results of the two converter topologies are presented.</p>battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,boost converter,full bridge converter,hybride vechile,indraneel saki,indranil saaki,power management,supercapacitors",339,37,3,0,273,indranil saakithis project present supercapacitors battery association methodology ecce hybrid vehicle ecce experimental hybrid vehicle develop laboratory collaboration research center electrical engineering electronics belfort creebel french partner test bench currently lead acid battery rat voltage two motor one couple one alternator alternator feed bus rectifers main objective project study management energy provide two supercapacitor pack supercapacitors module make cell maximum voltage test bench carry study innovate test hybrid vehicle application multi boost multi full bridge converter topology study define best topology embark power management author propose good power management strategy multi boost multi full bridge converter topology experimental result two converter topology present battery motor controlpower conversion controlpower electronics controlboost converterfull bridge sakiindranil saakipower,"['indranil', 'saakithis', 'project', 'present', 'supercapacitors', 'battery', 'association', 'methodology', 'ecce', 'hybrid', 'vehicle', 'ecce', 'experimental', 'hybrid', 'vehicle', 'develop', 'laboratory', 'collaboration', 'research', 'center', 'electrical', 'engineering', 'electronics', 'belfort', 'creebel', 'french', 'partner', 'test', 'bench', 'currently', 'lead', 'acid', 'battery', 'rat', 'voltage', 'two', 'motor', 'one', 'couple', 'one', 'alternator', 'alternator', 'feed', 'bus', 'rectifers', 'main', 'objective', 'project', 'study', 'management', 'energy', 'provide', 'two', 'supercapacitor', 'pack', 'supercapacitors', 'module', 'make', 'cell', 'maximum', 'voltage', 'test', 'bench', 'carry', 'study', 'innovate', 'test', 'hybrid', 'vehicle', 'application', 'multi', 'boost', 'multi', 'full', 'bridge', 'converter', 'topology', 'study', 'define', 'best', 'topology', 'embark', 'power', 'management', 'author', 'propose', 'good', 'power', 'management', 'strategy', 'multi', 'boost', 'multi', 'full', 'bridge', 'converter', 'topology', 'experimental', 'result', 'two', 'converter', 'topology', 'present', 'battery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterfull', 'bridge', 'sakiindranil', 'saakipower']",4
1778,58345,"indranil saaki<p>A novel bidirectional dcâdc converter is presented in this project. The circuit configuration of the proposed converter isvery simple. The proposed converter employs a coupled inductor with same winding turns in the primary and secondary sides. In step-up mode, the primary and secondary windings of the coupled inductor are operated in parallel charge and series discharge to achieve high step-up voltage gain. In step-downmode, the primary and secondary windings of the coupled inductor are operated in series charge and parallel discharge to achieve high step-down voltage gain. Thus, the proposed converter has higher step-up and step-down voltage gains than the conventional bidirectional dcâdc boost/buck converter. Under same electric specifications for the proposed converter and the conventional bidirectional boost/buck converter, the average value of the switch current in the proposedconverter is less than the conventional bidirectional boost/buck converter. The operating principle and steady-state analysis are discussed in detail. Finally, a 14/42-V prototype circuit is implemented to verify the performance for the automobile dual-battery system.</p>battery_system_management,power_conversion_control,power_electronics_control,bidirectional dcdc converter,coupled inductor,indraneel saki,indranil saaki,matlab,power electronics,simulation on bidirectional power converter",532,48,4,0,540,indranil saakia novel bidirectional dcdc converter present project circuit configuration propose converter isvery simple propose converter employ coupled inductor wind turn primary secondary side step mode primary secondary winding couple inductor operate parallel charge series discharge achieve high step voltage gain step downmode primary secondary winding couple inductor operated series charge parallel discharge achieve high step voltage gain thus propose converter high step step voltage gain conventional bidirectional dcdc boost buck converter electric specification propose converter conventional bidirectional boost buck converter average value switch current less conventional bidirectional boost buck converter operate principle steady state analysis discuss detail finally prototype circuit implement verify performance automobile dual battery battery managementpower conversion controlpower electronics dcdc sakiindranil bidirectional power converter,"['indranil', 'saakia', 'novel', 'bidirectional', 'dcdc', 'converter', 'present', 'project', 'circuit', 'configuration', 'propose', 'converter', 'isvery', 'simple', 'propose', 'converter', 'employ', 'coupled', 'inductor', 'wind', 'turn', 'primary', 'secondary', 'side', 'step', 'mode', 'primary', 'secondary', 'winding', 'couple', 'inductor', 'operate', 'parallel', 'charge', 'series', 'discharge', 'achieve', 'high', 'step', 'voltage', 'gain', 'step', 'downmode', 'primary', 'secondary', 'winding', 'couple', 'inductor', 'operated', 'series', 'charge', 'parallel', 'discharge', 'achieve', 'high', 'step', 'voltage', 'gain', 'thus', 'propose', 'converter', 'high', 'step', 'step', 'voltage', 'gain', 'conventional', 'bidirectional', 'dcdc', 'boost', 'buck', 'converter', 'electric', 'specification', 'propose', 'converter', 'conventional', 'bidirectional', 'boost', 'buck', 'converter', 'average', 'value', 'switch', 'current', 'less', 'conventional', 'bidirectional', 'boost', 'buck', 'converter', 'operate', 'principle', 'steady', 'state', 'analysis', 'discuss', 'detail', 'finally', 'prototype', 'circuit', 'implement', 'verify', 'performance', 'automobile', 'dual', 'battery', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'dcdc', 'sakiindranil', 'bidirectional', 'power', 'converter']",4
1779,58346,"indranil saaki<p>Power quality describes the quality of voltage and current a facility has, and is one of the most important considerations in industrial and commercial applications today. It is essential that processes, in particular, in industrial plants, operate uninterrupted where high productivity levels are an important factor.The Automatic Voltage Regulator (AVR) is widely used in electrical power field to obtain the stability and good regulation of the electric system. In this paper, a novel ac automatic voltage regulator (AVR) is proposed. This AVR is configured by an input inductor, an output filter, a small-capacitance dc capacitor. This power converter acts as an ac boost converter when the utility voltage is lower than the specified voltage. On the contrary, this power converter acts as an ac buck converter when the utility voltage is higher than the specified voltage. Hence, the output voltage of the AVR can be maintained at the specified voltage. The salient feature of this AVR is that the power electronic switches are switched in high frequency therefore the switching loss of this AVR can be reduced and the capacitance of the dc capacitor is very small. Hence, the size and cost can be reduced, while the reliability and power efficiency can be increased. A prototype is developed and tested to verify the performance of the proposed AVR.</p>electric_motor_control,power_conversion_control,power_electronics_control,ac boost converter,ac buck converter,automatic voltage regulator avr,indraneel saki,indranil saaki,modeling,power electonics,simulation,three arm ac voltage regulator",825,66,5,0,725,indranil saakipower quality describe quality voltage current facility one important consideration industrial commercial application today essential process particular industrial plant operate uninterrupted high productivity level important factor automatic voltage regulator avr widely electrical power field obtain stability good regulation electric paper novel automatic voltage regulator avr propose avr configure input inductor output filter small capacitance capacitor power converter act boost converter utility voltage lower specify voltage contrary power converter act buck converter utility voltage high specify voltage hence output voltage avr maintain specified voltage salient feature avr power electronic switch switch high frequency therefore switching loss avr reduce capacitance capacitor small hence size cost reduce reliability power efficiency increase prototype developed test verify performance propose avr electric motor controlpower conversion controlpower electronics controlac boost converterac buck voltage regulator avrindraneel sakiindranil arm voltage regulator,"['indranil', 'saakipower', 'quality', 'describe', 'quality', 'voltage', 'current', 'facility', 'one', 'important', 'consideration', 'industrial', 'commercial', 'application', 'today', 'essential', 'process', 'particular', 'industrial', 'plant', 'operate', 'uninterrupted', 'high', 'productivity', 'level', 'important', 'factor', 'automatic', 'voltage', 'regulator', 'avr', 'widely', 'electrical', 'power', 'field', 'obtain', 'stability', 'good', 'regulation', 'electric', 'paper', 'novel', 'automatic', 'voltage', 'regulator', 'avr', 'propose', 'avr', 'configure', 'input', 'inductor', 'output', 'filter', 'small', 'capacitance', 'capacitor', 'power', 'converter', 'act', 'boost', 'converter', 'utility', 'voltage', 'lower', 'specify', 'voltage', 'contrary', 'power', 'converter', 'act', 'buck', 'converter', 'utility', 'voltage', 'high', 'specify', 'voltage', 'hence', 'output', 'voltage', 'avr', 'maintain', 'specified', 'voltage', 'salient', 'feature', 'avr', 'power', 'electronic', 'switch', 'switch', 'high', 'frequency', 'therefore', 'switching', 'loss', 'avr', 'reduce', 'capacitance', 'capacitor', 'small', 'hence', 'size', 'cost', 'reduce', 'reliability', 'power', 'efficiency', 'increase', 'prototype', 'developed', 'test', 'verify', 'performance', 'propose', 'avr', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlac', 'boost', 'converterac', 'buck', 'voltage', 'regulator', 'avrindraneel', 'sakiindranil', 'arm', 'voltage', 'regulator']",4
1780,58347,"indranil saaki<p>A Unified Power Quality Conditioner (UPQC) is an integration of series and shunt active filters to improve powerquality in a power distribution system. Model-based control of UPQC has attracted attentions in recent years, which aims to regulate the source current and the load voltage to the desired reference signals in spite of the existence of harmonic components in the supply voltage and the load current, possible sag or swell in the supply voltage, and variations in the load current. However,most of the previous studies did not take the control saturationexplicitly into their control design. This paper investigates the performance limit of UPQC under control input constraints by means of a Model Predictive Controller (MPC). MPC is an optimal control strategy that can take into account control constraints explicitly. Simulation studies, mainly focused on the comparison of performance between the MPC and a linear Multi-Variable Regulator (MVR), are carried out on a single-phase power distribution system to help us understand the performance limit under such control saturation.</p>indraneel saki,indranil saaki,input constraints,model predictive control,mpc,power quality,simulation,unified power quality conditioner,upqc",783,55,5,0,742,indranil saakia unified power quality conditioner upqc integration series shunt active filter improve powerquality power distribution base control upqc attract attention recent year aim regulate source current load voltage desire reference signal spite existence harmonic component supply voltage load current possible sag swell supply voltage variation load current howevermost previous study take control control design paper investigate performance limit upqc control input constraint mean predictive controller mpc mpc optimal control strategy take account control constraints explicitly study mainly focus comparison performance mpc linear multi variable regulator mvr carry single phase power distribution help understand performance limit control saturation indraneel sakiindranil saakiinput predictive controlmpcpower power quality conditionerupqc,"['indranil', 'saakia', 'unified', 'power', 'quality', 'conditioner', 'upqc', 'integration', 'series', 'shunt', 'active', 'filter', 'improve', 'powerquality', 'power', 'distribution', 'base', 'control', 'upqc', 'attract', 'attention', 'recent', 'year', 'aim', 'regulate', 'source', 'current', 'load', 'voltage', 'desire', 'reference', 'signal', 'spite', 'existence', 'harmonic', 'component', 'supply', 'voltage', 'load', 'current', 'possible', 'sag', 'swell', 'supply', 'voltage', 'variation', 'load', 'current', 'howevermost', 'previous', 'study', 'take', 'control', 'control', 'design', 'paper', 'investigate', 'performance', 'limit', 'upqc', 'control', 'input', 'constraint', 'mean', 'predictive', 'controller', 'mpc', 'mpc', 'optimal', 'control', 'strategy', 'take', 'account', 'control', 'constraints', 'explicitly', 'study', 'mainly', 'focus', 'comparison', 'performance', 'mpc', 'linear', 'multi', 'variable', 'regulator', 'mvr', 'carry', 'single', 'phase', 'power', 'distribution', 'help', 'understand', 'performance', 'limit', 'control', 'saturation', 'indraneel', 'sakiindranil', 'saakiinput', 'predictive', 'controlmpcpower', 'power', 'quality', 'conditionerupqc']",4
1781,58348,"indranil saaki<p>A new space vector modulation (SVM) technique having a full and independent control of the multiple voltagespace vectors of a six-phase voltage source inverter is presented  this project, The proposed space vector approach is based on three-phase decomposition, leading to the modulation of two three-phase VSIs. The six-phase load consists in a dual three-phase induction motor, with insulated neutral points. The voltage limits are investigated and the analytical developments are proved by a complete set of simulation results.</p>svpwm,electric_motor_control,power_electronics_control,dual threephase motors,indraneel saki,indranil saaki,mathematics,multiple space vectors,simulation,space vector modulation,threephase decomposition",1382,108,8,0,1736,indranil saakia new space vector modulation svm technique full independent control multiple voltagespace vector six phase voltage source inverter present project propose space vector approach base three phase decomposition lead modulation two three phase vsis six phase load consist dual three phase induction motor insulate neutral point voltage limit investigate analytical development prove complete set result svpwmelectric motor controlpower electronics controldual threephase motorsindraneel sakiindranil space vector decomposition,"['indranil', 'saakia', 'new', 'space', 'vector', 'modulation', 'svm', 'technique', 'full', 'independent', 'control', 'multiple', 'voltagespace', 'vector', 'six', 'phase', 'voltage', 'source', 'inverter', 'present', 'project', 'propose', 'space', 'vector', 'approach', 'base', 'three', 'phase', 'decomposition', 'lead', 'modulation', 'two', 'three', 'phase', 'vsis', 'six', 'phase', 'load', 'consist', 'dual', 'three', 'phase', 'induction', 'motor', 'insulate', 'neutral', 'point', 'voltage', 'limit', 'investigate', 'analytical', 'development', 'prove', 'complete', 'set', 'result', 'svpwmelectric', 'motor', 'controlpower', 'electronics', 'controldual', 'threephase', 'motorsindraneel', 'sakiindranil', 'space', 'vector', 'decomposition']",3
1782,58355,"SimultÃ¡neous Localization and Mapping<p>This project shows the development of a robotic system that applies methodologies simultaneous localization and mapping allowing emulate the behavior of the google self-driving car.<a href=""https://youtu.be/aIzbYNCgXEM"">https://youtu.be/aIzbYNCgXEM</a></p>control design,real time,robot,slam,wifi",325,22,4,10,331,localization mappingthis project show development robotic applies methodology localization map allow emulate behavior google self drive car youtu designreal,"['localization', 'mappingthis', 'project', 'show', 'development', 'robotic', 'applies', 'methodology', 'localization', 'map', 'allow', 'emulate', 'behavior', 'google', 'self', 'drive', 'car', 'youtu', 'designreal']",5
1783,58361,"its a solar photo voltaic system connected with inverter and mppt.<p>Renewable energy sources play an important part in electric power generation; solar energy is a good choice of an electric power generation. As the solar energy is directly converted by solar photovoltaic modules. In this paper we present the output variation and check compatibility with different load conditions. R, L, C type loads are used in standalone SPV system. Every system behavior and harmonics are changed according to its designing and modeling. We have designed Simulink model of SPV system. In this model we are discussing different types of factor like temperature, seasonality, soiling, system voltage and loads. This reviews the generalized mathematical modeling and simulation of Solar Photovoltaic System. a diode equivalent circuit is employed in order to investigate load characteristics of a solar module  MPPT algorithm, Step up DC-DC converter and a Single phase grid tied inverter using MATLAB/Simulink.</p>power_conversion_control,power_electronics_control,renewable energy source",110,5,3,0,123,solar photo voltaic connect inverter mppt renewable energy source play important part electric power generation solar energy good choice electric power generation solar energy directly convert solar photovoltaic module paper present output variation check compatibility different load condition type load standalone spv every behavior harmonic change accord design modeling design spv discuss different type factor like temperature seasonality soil voltage load review generalized mathematical modeling solar photovoltaic diode equivalent circuit employ order investigate load characteristic solar module mppt algorithm step converter single phase grid tie inverter power conversion controlpower electronics energy source,"['solar', 'photo', 'voltaic', 'connect', 'inverter', 'mppt', 'renewable', 'energy', 'source', 'play', 'important', 'part', 'electric', 'power', 'generation', 'solar', 'energy', 'good', 'choice', 'electric', 'power', 'generation', 'solar', 'energy', 'directly', 'convert', 'solar', 'photovoltaic', 'module', 'paper', 'present', 'output', 'variation', 'check', 'compatibility', 'different', 'load', 'condition', 'type', 'load', 'standalone', 'spv', 'every', 'behavior', 'harmonic', 'change', 'accord', 'design', 'modeling', 'design', 'spv', 'discuss', 'different', 'type', 'factor', 'like', 'temperature', 'seasonality', 'soil', 'voltage', 'load', 'review', 'generalized', 'mathematical', 'modeling', 'solar', 'photovoltaic', 'diode', 'equivalent', 'circuit', 'employ', 'order', 'investigate', 'load', 'characteristic', 'solar', 'module', 'mppt', 'algorithm', 'step', 'converter', 'single', 'phase', 'grid', 'tie', 'inverter', 'power', 'conversion', 'controlpower', 'electronics', 'energy', 'source']",3
1784,58375,"This project was successfully executed and helped us understand concepts in control.<p>The ball and beam system constitutes a classic control system problem. In our project, we've developed two controllers to stabilize the system. The first one, a Fuzzy Logic controller has been developed with the help of Simulink and .fis file containing the details of the Fuzzy Inference System. The second controller has been designed using the Q-Learning algorithm, a concept in Reinforcement Learning. The algorithm is coded in a .m file and executed using MATLAB. The communication between the hardware and software takes place via Arduino-MATLAB and Arduino-Simulink interfacing. For more queries regarding the project, please send a mail to <a href=""mailto:nsaiharshini@yahoo.co.inThe"">nsaiharshini@yahoo.co.inThe</a> following Youtube video demonstrates the results of the project:<a href=""https://www.youtube.com/watch?v=XinzhPoA3Sk"">https://www.youtube.com/watch?v=XinzhPoA3Sk</a></p>fuzzy,arduino,ballandbeam,controlsystems,fuzzylogic,matlabhw2k16,qlearning,reinforcementlearning",13,0,1,0,12,project successfully execute help understand concept control ball beam constitute classic control problem project develop two controller stabilize first one fuzzy logic controller develop help fis file contain detail fuzzy inference second controller design learn algorithm concept reinforcement learn algorithm cod file execute communication hardware software take place via arduino arduino interfacing query regard project please send mail nsaiharshini yahoo inthe follow youtube video demonstrate result project youtube com watch xinzhpoa,"['project', 'successfully', 'execute', 'help', 'understand', 'concept', 'control', 'ball', 'beam', 'constitute', 'classic', 'control', 'problem', 'project', 'develop', 'two', 'controller', 'stabilize', 'first', 'one', 'fuzzy', 'logic', 'controller', 'develop', 'help', 'fis', 'file', 'contain', 'detail', 'fuzzy', 'inference', 'second', 'controller', 'design', 'learn', 'algorithm', 'concept', 'reinforcement', 'learn', 'algorithm', 'cod', 'file', 'execute', 'communication', 'hardware', 'software', 'take', 'place', 'via', 'arduino', 'arduino', 'interfacing', 'query', 'regard', 'project', 'please', 'send', 'mail', 'nsaiharshini', 'yahoo', 'inthe', 'follow', 'youtube', 'video', 'demonstrate', 'result', 'project', 'youtube', 'com', 'watch', 'xinzhpoa']",7
1785,58376,"HandsOn-SEA is a low cost robotic device enabling the students to interact with virtual environments<p>HandsOn-SEA is a 1-DoF admittance type device that features series elastic actuation. It uses a very a low cost force sensing unit and relies on the force feedback and the motion control of its motor to render virtual environments. HandsOn-SEA is physically compatible with and complementary to Haptic Paddle designs. This device has been used in a senior level engineering class for teaching concepts such as force control, limitations of non-collocation, series elastic actuation and haptic rendering. The device is built using rapid prototyping tecniques with off the shelf parts. Matlab Simulink environment is prefered due to its user friendly GUI and for enabling the students to focus on the system design and control aspects.<a href=""https://www.youtube.com/watch?v=Vns7Pa6YMGk&amp;feature=youtu.be"">https://www.youtube.com/watch?v=Vns7Pa6YMGk&amp;feature=youtu.be</a></p>electric_motor_control,power_electronics_control,ti f28069 launch pad,educational,force control,haptic rendering,low cost,series elastic actuation",263,21,5,0,263,handson sea low cost robotic device enable student interact virtual sea dof admittance type device feature series elastic actuation low cost force sense unit relies force feedback motion control motor render virtual environment handson sea physically compatible complementary haptic paddle design device senior level engineering class teach concept force control limitation non collocation series elastic actuation haptic rendering device build rapid prototyping tecniques shelf part environment prefer due user friendly gui enable student focus design control aspects youtube com watch vns ymgk amp feature youtu beelectric motor controlpower electronics controlti launch controlhaptic renderinglow costseries elastic actuation,"['handson', 'sea', 'low', 'cost', 'robotic', 'device', 'enable', 'student', 'interact', 'virtual', 'sea', 'dof', 'admittance', 'type', 'device', 'feature', 'series', 'elastic', 'actuation', 'low', 'cost', 'force', 'sense', 'unit', 'relies', 'force', 'feedback', 'motion', 'control', 'motor', 'render', 'virtual', 'environment', 'handson', 'sea', 'physically', 'compatible', 'complementary', 'haptic', 'paddle', 'design', 'device', 'senior', 'level', 'engineering', 'class', 'teach', 'concept', 'force', 'control', 'limitation', 'non', 'collocation', 'series', 'elastic', 'actuation', 'haptic', 'rendering', 'device', 'build', 'rapid', 'prototyping', 'tecniques', 'shelf', 'part', 'environment', 'prefer', 'due', 'user', 'friendly', 'gui', 'enable', 'student', 'focus', 'design', 'control', 'aspects', 'youtube', 'com', 'watch', 'vns', 'ymgk', 'amp', 'feature', 'youtu', 'beelectric', 'motor', 'controlpower', 'electronics', 'controlti', 'launch', 'controlhaptic', 'renderinglow', 'costseries', 'elastic', 'actuation']",5
1786,58427,"Learn how to use Simulink to make an Arduino based fan that levitates a ball at a specified height.<p>Learn how to use Simulink to make an Arduino based blower fan that levitates a ping pong ball at a specified height. An ultrasonic sensor measures the height of the ball and a PID controller adjusts the fan speed to maintain the desired height.Hardware Used:Arduino Mega7.4V Li-po BatteryIRLZ14 MOSFET1k Ohm ResistorFan BlowerUSB A to B CablePing Pong BallTube (3D Printed or Homemade)Sharp Infrared Sensor GP2Y0A21YK (will need a 3 pin JST connector)<a href=""https://www.youtube.com/watch?v=dXYT1-Ft_l4"">https://www.youtube.com/watch?v=dXYT1-Ft_l4</a></p>arduino,control systems,fan,pid,ping pong ball,simulink,battery_system_management,power_electronics_control",29,3,3,2,21,learn make arduino base fan levitate ball specified height learn make arduino base blower fan levitate ping pong ball specify height ultrasonic sensor measure height ball pid controller adjust fan speed maintain desire height hardware arduino mega batteryirlz mosfet ohm resistorfan blowerusb cableping pong balltube print homemade sharp infrared sensor need pin jst connector youtube com watch dxyt arduinocontrol pong managementpower electronics control,"['learn', 'make', 'arduino', 'base', 'fan', 'levitate', 'ball', 'specified', 'height', 'learn', 'make', 'arduino', 'base', 'blower', 'fan', 'levitate', 'ping', 'pong', 'ball', 'specify', 'height', 'ultrasonic', 'sensor', 'measure', 'height', 'ball', 'pid', 'controller', 'adjust', 'fan', 'speed', 'maintain', 'desire', 'height', 'hardware', 'arduino', 'mega', 'batteryirlz', 'mosfet', 'ohm', 'resistorfan', 'blowerusb', 'cableping', 'pong', 'balltube', 'print', 'homemade', 'sharp', 'infrared', 'sensor', 'need', 'pin', 'jst', 'connector', 'youtube', 'com', 'watch', 'dxyt', 'arduinocontrol', 'pong', 'managementpower', 'electronics', 'control']",5
1787,58428,"Learn how to use Simulink to make a Raspberry Pi based theremin controlled by a green object.<p>Learn how to use Simulink to make a Raspberry Pi based theremin that is controlled by a green object. A theremin is an electronic musical instrument that can be played without physical contact. The Raspberry Pi utilizes basic image processing algorithms to generate various tones through its onboard audio jack.Hardware Used:Raspberry Pi Raspberry Pi Camera BoardMicro USB CableEthernet Cablehttps://<a href=""http://www.youtube.com/watch?v=rW1FGzDRPtg"">www.youtube.com/watch?v=rW1FGzDRPtg</a></p>computer vision,image processing,matlab,raspberry pi,simulink,theremin",22,1,2,0,31,learn make raspberry base theremin control green object learn make raspberry base theremin control green object theremin electronic musical instrument play without physical contact raspberry utilizes basic image processing algorithms generate various tone onboard audio jack hardware raspberry raspberry camera boardmicro usb cableethernet cable youtube com watch visionimage,"['learn', 'make', 'raspberry', 'base', 'theremin', 'control', 'green', 'object', 'learn', 'make', 'raspberry', 'base', 'theremin', 'control', 'green', 'object', 'theremin', 'electronic', 'musical', 'instrument', 'play', 'without', 'physical', 'contact', 'raspberry', 'utilizes', 'basic', 'image', 'processing', 'algorithms', 'generate', 'various', 'tone', 'onboard', 'audio', 'jack', 'hardware', 'raspberry', 'raspberry', 'camera', 'boardmicro', 'usb', 'cableethernet', 'cable', 'youtube', 'com', 'watch', 'visionimage']",0
1788,58439,"Learn how to use Simulink to create a Raspberry Pi based gear defect detector<p>Learn how to use Simulink to create a Raspberry Pi based gear defect detector. By using various computer vision techniques, the Raspberry Pi is able to determine whether a gear has a broken tooth or not. If a defect is detected, it will circle it on the video display. Hardware Used:Raspberry Pi Raspberry Pi Camera BoardMicro USB CableEthernet Cablehttps://<a href=""http://www.youtube.com/watch?v=wP97xWukuKI"">www.youtube.com/watch?v=wP97xWukuKI</a></p>computer vision,defect,detector,gear,image processing,raspberry pi,simulink",55,3,2,0,64,learn create raspberry base gear defect detectorlearn create raspberry base gear defect detector various computer vision technique raspberry able determine whether gear broken tooth defect detect circle video display hardware raspberry raspberry camera boardmicro usb cableethernet cable youtube com watch xwukukicomputer,"['learn', 'create', 'raspberry', 'base', 'gear', 'defect', 'detectorlearn', 'create', 'raspberry', 'base', 'gear', 'defect', 'detector', 'various', 'computer', 'vision', 'technique', 'raspberry', 'able', 'determine', 'whether', 'gear', 'broken', 'tooth', 'defect', 'detect', 'circle', 'video', 'display', 'hardware', 'raspberry', 'raspberry', 'camera', 'boardmicro', 'usb', 'cableethernet', 'cable', 'youtube', 'com', 'watch', 'xwukukicomputer']",5
1789,58440,"Learn how to use Simulink and Stateflow to build an Arduino based oscillating fan<p>Learn how to use Simulink and Stateflow to build an Arduino based oscillating fan. The setup includes a potentiometer to control fan speed and pushbuttons to control whether the fan is stationary or in oscillation mode. The control algorithms for the fan are mainly implemented in Stateflow. Hardware Used:Arduino MegaLEDs (2) Servo MotorIRF510 MOSFETCoreless Motor10k Ohm PotentiometerPushbuttons (2) 1k Ohm Resistors (6)USB A to B cablehttps://<a href=""http://www.youtube.com/watch?v=Ho-R4CJAyi4"">www.youtube.com/watch?v=Ho-R4CJAyi4</a></p>electric_motor_control,power_electronics_control,arduino,control systems,oscillating fan,simulink,stateflow",10,4,1,7,9,learn stateflow build arduino base oscillate fanlearn stateflow build arduino base oscillate fan setup include potentiometer control fan speed pushbuttons control whether fan stationary oscillation mode control algorithms fan mainly implement stateflow hardware arduino megaleds servo motorirf mosfetcoreless motor ohm ohm resistor usb cable youtube com watch cjayi electric motor controlpower electronics,"['learn', 'stateflow', 'build', 'arduino', 'base', 'oscillate', 'fanlearn', 'stateflow', 'build', 'arduino', 'base', 'oscillate', 'fan', 'setup', 'include', 'potentiometer', 'control', 'fan', 'speed', 'pushbuttons', 'control', 'whether', 'fan', 'stationary', 'oscillation', 'mode', 'control', 'algorithms', 'fan', 'mainly', 'implement', 'stateflow', 'hardware', 'arduino', 'megaleds', 'servo', 'motorirf', 'mosfetcoreless', 'motor', 'ohm', 'ohm', 'resistor', 'usb', 'cable', 'youtube', 'com', 'watch', 'cjayi', 'electric', 'motor', 'controlpower', 'electronics']",4
1790,58462,Simulation example<p>Only simulation Neural</p>simulation,18,3,2,0,18,exampleonly,['exampleonly'],2
1791,58487,This modeling covers the modeling part of solar PV panel in SIMULINK.<p>This Model plots the PV and IV curve of PV panel.</p>simulink,172,2,2,0,153,cover part solar panel plot curve panel,"['cover', 'part', 'solar', 'panel', 'plot', 'curve', 'panel']",0
1792,58498,"A library of first and second order filters whose parameters can be tuned in real-time.<p>The transfer function of different filters has been drawn as a signal flow diagram, thereby exposing the center frequency and Q of the filter coefficients. These parameters can now be easily tuned on a real-time system, e.g. on a dSPACE platform, without having to recompile the model in order to change the filter parameters. Advantages of this filter are: - it can handle a vectorized input, i.e. muxed signals;- A reset signal can easily be added to the integrators.</p>control design,dspace,filter,signal processing",47,4,2,0,62,first second order filter whose parameter tune real time transfer function different filter draw signal flow diagram thereby expose center frequency filter coefficient parameter easily tune real time dspace platform without recompile order change filter parameter advantage filter handle vectorized input muxed signal reset signal easily add integrator control processing,"['first', 'second', 'order', 'filter', 'whose', 'parameter', 'tune', 'real', 'time', 'transfer', 'function', 'different', 'filter', 'draw', 'signal', 'flow', 'diagram', 'thereby', 'expose', 'center', 'frequency', 'filter', 'coefficient', 'parameter', 'easily', 'tune', 'real', 'time', 'dspace', 'platform', 'without', 'recompile', 'order', 'change', 'filter', 'parameter', 'advantage', 'filter', 'handle', 'vectorized', 'input', 'muxed', 'signal', 'reset', 'signal', 'easily', 'add', 'integrator', 'control', 'processing']",7
1793,58564,"Cascaded H-bridge Multilevel Inverter Three phase Simulink<p>Hi all,I get following error while executing the simulink model, Error evaluating 'InitFcn' callback of block_diagram 'CascadedHbridgeInverterThreephase'.Caused by:Undefined function or variable 'par'..I would appreciate if any one could help me to remove this error.Regards,Hafiz</p>inverter,simulation",363,18,2,0,478,cascade bridge multilevel inverter three phase alli get following error execute error evaluate initfcn callback block diagram cause undefined function variable par would appreciate one could help remove error,"['cascade', 'bridge', 'multilevel', 'inverter', 'three', 'phase', 'alli', 'get', 'following', 'error', 'execute', 'error', 'evaluate', 'initfcn', 'callback', 'block', 'diagram', 'cause', 'undefined', 'function', 'variable', 'par', 'would', 'appreciate', 'one', 'could', 'help', 'remove', 'error']",4
1794,58566,The attached file is used for Open Circuit and Short Circuit Test Transformer.<p>The attached files gives the resistive and inductive parameters of the results obtained from the Open circuit and short Circuit Test</p>open circuit and short circuit test transformer,78,1,2,0,90,attach file open circuit short circuit test transformer attach file give resistive inductive parameter result obtain open circuit short circuit testopen circuit short circuit test transformer,"['attach', 'file', 'open', 'circuit', 'short', 'circuit', 'test', 'transformer', 'attach', 'file', 'give', 'resistive', 'inductive', 'parameter', 'result', 'obtain', 'open', 'circuit', 'short', 'circuit', 'testopen', 'circuit', 'short', 'circuit', 'test', 'transformer']",7
1795,58580,"This model simulate PV system and computes the FiT and Net metering energy and cost<p>PV Feed-in-Tariff and Net Metering ModelDeveloped by Dr Rodney Tan and T.L.ChowVersion 1.01 (Dec 2016)This model simulate PV system and computes the FiT and Net metering energy and cost for a given building load profile1. Load LoadProfile.mat in workplace2. Load SolarRadiation.mat in workplace3. RUN Simulink4. Double Click the Plot Energy Block to plot the resultsReferenceRodney H.G. Tan, T.L. Chow, ""A Comparative Study of Feed in Tariff and Net Metering for UCSI University North Wing Campus with 100kW Solar Photovoltaic System"", Energy Procedia, Volume 100, Pages 86-91, Nov 2016.The full paper can be downloaded from the link belowhttp://<a href=""http://www.sciencedirect.com/science/article/pii/S1876610216310979"">www.sciencedirect.com/science/article/pii/S1876610216310979</a></p>feed in tariff,net metering,pv system",69,5,2,0,80,computes fit net meter energy costpv fee tariff net metering modeldeveloped rodney tan chowversion dec compute fit net meter energy cost give build load profile load loadprofile mat workplace load solarradiation mat workplace run double click plot energy block plot tan chow comparative study fee tariff net metering ucsi university north wing campus solar photovoltaic energy procedia volume page nov full paper download link belowhttp sciencedirect com science article pii feed tariffnet meteringpv,"['computes', 'fit', 'net', 'meter', 'energy', 'costpv', 'fee', 'tariff', 'net', 'metering', 'modeldeveloped', 'rodney', 'tan', 'chowversion', 'dec', 'compute', 'fit', 'net', 'meter', 'energy', 'cost', 'give', 'build', 'load', 'profile', 'load', 'loadprofile', 'mat', 'workplace', 'load', 'solarradiation', 'mat', 'workplace', 'run', 'double', 'click', 'plot', 'energy', 'block', 'plot', 'tan', 'chow', 'comparative', 'study', 'fee', 'tariff', 'net', 'metering', 'ucsi', 'university', 'north', 'wing', 'campus', 'solar', 'photovoltaic', 'energy', 'procedia', 'volume', 'page', 'nov', 'full', 'paper', 'download', 'link', 'belowhttp', 'sciencedirect', 'com', 'science', 'article', 'pii', 'feed', 'tariffnet', 'meteringpv']",5
1796,58581,"Transformer Tests<p>MATLAB program developed to emulate Open-Circuit and Short-Circuit tests on a transformer and estimate values required for a Transformer Equivalent Circuit</p>control design,electronics,power,power electronics",78,1,2,0,90,transformer testsmatlab program develop emulate open circuit short circuit test transformer estimate value require transformer equivalent circuitcontrol electronics,"['transformer', 'testsmatlab', 'program', 'develop', 'emulate', 'open', 'circuit', 'short', 'circuit', 'test', 'transformer', 'estimate', 'value', 'require', 'transformer', 'equivalent', 'circuitcontrol', 'electronics']",4
1797,58591,"PDA controller<p>This simulink file is about PDA controller</p>classical control,control,control design,pd controller,pda controller",31,2,2,0,32,pda controllerthis file pda designpd controllerpda controller,"['pda', 'controllerthis', 'file', 'pda', 'designpd', 'controllerpda', 'controller']",8
1798,58592,"PIDA controller<p>This simulink file is about PIDA controller</p>classical control,control,control design,pida controller",38,2,2,0,41,pida controllerthis file pida designpida controller,"['pida', 'controllerthis', 'file', 'pida', 'designpida', 'controller']",5
1799,58604,"Nonlinear transformations Gain Scheduling<p>This simulink file is used to solve Nonlinear transformations problem which presented in the adaptive control reference by Astrom using Gain Scheduling technic</p>adaptive control,control,control design,gain scheduling,gs,nonlinear transformations,nonlinear transformations gain scheduling",48,2,2,0,64,nonlinear transformation gain schedulingthis file solve nonlinear transformation problem present adaptive control reference astrom gain schedule technicadaptive designgain transformation gain schedule,"['nonlinear', 'transformation', 'gain', 'schedulingthis', 'file', 'solve', 'nonlinear', 'transformation', 'problem', 'present', 'adaptive', 'control', 'reference', 'astrom', 'gain', 'schedule', 'technicadaptive', 'designgain', 'transformation', 'gain', 'schedule']",5
1800,58723,"space-vector pulse width modulation<p>Developing SVPWM block for single-phase full-bridge inverter.</p>electric_motor_control,power_conversion_control,power_electronics_control,control",184,13,4,0,195,space vector pulse width svpwm block single phase full bridge inverter electric motor controlpower conversion controlpower electronics controlcontrol,"['space', 'vector', 'pulse', 'width', 'svpwm', 'block', 'single', 'phase', 'full', 'bridge', 'inverter', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",6
1801,58798,"PWM with variable duty cycle using sawtooth wave.<p>This model can be used to vary the duty cycle of PWM by varying a constant value. Here, duty cycle depends on a constant value which is related to the duty cycle by the given relation. If d is duty cycle and the constant value which will vary the duty cycle is a then, d=(4-a)/8. For example, if you want to create a PWM with duty cycle of 25% or d=0.25 then a will be 2. 'a' may have any value between -4 to 4 depending on the required duty cycle. As the value of a increases, value of d decreases.Phase shifting is also illustrated in the model.</p>electric_motor_control,power_conversion_control,power_electronics_control,pwm,sawtooth",21,2,2,0,18,pwm variable duty cycle sawtooth wave vary duty cycle pwm vary constant value duty cycle depend constant value relate duty cycle give relation duty cycle constant value vary duty cycle example want create pwm duty cycle may value depend require duty cycle value increase value decrease phase shift also illustrate electric motor controlpower conversion controlpower electronics,"['pwm', 'variable', 'duty', 'cycle', 'sawtooth', 'wave', 'vary', 'duty', 'cycle', 'pwm', 'vary', 'constant', 'value', 'duty', 'cycle', 'depend', 'constant', 'value', 'relate', 'duty', 'cycle', 'give', 'relation', 'duty', 'cycle', 'constant', 'value', 'vary', 'duty', 'cycle', 'example', 'want', 'create', 'pwm', 'duty', 'cycle', 'may', 'value', 'depend', 'require', 'duty', 'cycle', 'value', 'increase', 'value', 'decrease', 'phase', 'shift', 'also', 'illustrate', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
1802,58823,"Z-source converter with single phase inverter fed motor and has  voltage control using PI controller<p>In MATLAB/Simulink the Z-Source converter does the boost operation and the full bridge inverter converts into AC voltage. The voltage control have been done in closed loop control using PI controller.The snubber can also be connected across switches in future enhancement. The induction motor is connected as a load.</p>electric_motor_control,power_electronics_control,simulation",48,0,1,0,63,source converter single phase inverter feed motor voltage control controllerin source converter boost operation full bridge inverter convert voltage voltage control close loop control controller snubber also connect across switch future enhancement induction motor connect load electric motor controlpower electronics,"['source', 'converter', 'single', 'phase', 'inverter', 'feed', 'motor', 'voltage', 'control', 'controllerin', 'source', 'converter', 'boost', 'operation', 'full', 'bridge', 'inverter', 'convert', 'voltage', 'voltage', 'control', 'close', 'loop', 'control', 'controller', 'snubber', 'also', 'connect', 'across', 'switch', 'future', 'enhancement', 'induction', 'motor', 'connect', 'load', 'electric', 'motor', 'controlpower', 'electronics']",1
1803,58849,"Hybrid part-stochastic part-deterministic iterative learning control law no. 1 is demonstrated here.<p>A novel hybrid iterative learning control law is proposed here. More similar control laws on the way. Stay tuned! Let us call this one HPSPDRC-1 (hybrid part-stochastic part-deterministic iterative learning control law no. 1) for future references. See included PDFs for more details. Feel free to experiment with the idea. Please acknowledge our authorship of HPSPDRC-1 by giving the URL of this page and citing the relevant paper(s). See you at the 21st International Conference on Methods and Models in Automation and Robotics (MMAR 2016, <a href=""http://mmar.edu.pl/"">http://mmar.edu.pl/</a>)!</p>deterministic control law,dop,dynamic optimization problem,evolutionary optimization,hybrid repetitive controller,ilc,iterative learning control,particle swarm optimization,pso,rc,repetitive control,stochastic control law",40,1,2,0,47,hybrid part stochastic part deterministic iterative learn control law demonstrate novel hybrid iterative learn control law propose similar control law way stay tune let call one hpspdrc hybrid part stochastic part deterministic iterative learn control law future reference see included pdfs detail feel free experiment idea please acknowledge authorship hpspdrc give url page cite relevant paper see international conference method automation robotics mmar http mmar edu deterministic control lawdopdynamic optimization repetitive learn controlparticle swarm control law,"['hybrid', 'part', 'stochastic', 'part', 'deterministic', 'iterative', 'learn', 'control', 'law', 'demonstrate', 'novel', 'hybrid', 'iterative', 'learn', 'control', 'law', 'propose', 'similar', 'control', 'law', 'way', 'stay', 'tune', 'let', 'call', 'one', 'hpspdrc', 'hybrid', 'part', 'stochastic', 'part', 'deterministic', 'iterative', 'learn', 'control', 'law', 'future', 'reference', 'see', 'included', 'pdfs', 'detail', 'feel', 'free', 'experiment', 'idea', 'please', 'acknowledge', 'authorship', 'hpspdrc', 'give', 'url', 'page', 'cite', 'relevant', 'paper', 'see', 'international', 'conference', 'method', 'automation', 'robotics', 'mmar', 'http', 'mmar', 'edu', 'deterministic', 'control', 'lawdopdynamic', 'optimization', 'repetitive', 'learn', 'controlparticle', 'swarm', 'control', 'law']",5
1804,58878,3phase inverter<p>3phase inverter</p>simulation,23,0,1,0,33,phase inverter phase,"['phase', 'inverter', 'phase']",6
1805,58941,"Getting started guide for learning and evaluating HDL Coder<p>Guidelines for getting started in adopting HDL Coder for your design. The document outlines a recommended approach for:* The overall workflow for generating HDL starting with a MATLAB algorithm or Simulink model* How to create an HDL-ready Simulink model* How to create an HDL-ready Stateflow chart* How to adapt MATLAB code in a MATLAB function block for HDL code generation* Converting to fixed-point or utilizing native floating point* Optimizing for various goals and targets* Verifying your generated codeIt also includes examples to illustrate selected concepts. This version was developed using HDL Coder R2017b.</p>pick of the week,potw,altera,fpga,hdl,intel,soc,verilog,vhdl,xilinx,zynq",279,26,3,0,280,get start guide learn evaluate hdl coderguidelines get start adopt hdl coder design document outline recommend approach overall workflow generate hdl start algorithm create hdl ready create hdl ready stateflow chart adapt code function block hdl code generation convert fix point utilize native float point optimize various goal target verify generate codeit also include example illustrate select concept version develop hdl coder pick,"['get', 'start', 'guide', 'learn', 'evaluate', 'hdl', 'coderguidelines', 'get', 'start', 'adopt', 'hdl', 'coder', 'design', 'document', 'outline', 'recommend', 'approach', 'overall', 'workflow', 'generate', 'hdl', 'start', 'algorithm', 'create', 'hdl', 'ready', 'create', 'hdl', 'ready', 'stateflow', 'chart', 'adapt', 'code', 'function', 'block', 'hdl', 'code', 'generation', 'convert', 'fix', 'point', 'utilize', 'native', 'float', 'point', 'optimize', 'various', 'goal', 'target', 'verify', 'generate', 'codeit', 'also', 'include', 'example', 'illustrate', 'select', 'concept', 'version', 'develop', 'hdl', 'coder', 'pick']",0
1806,58947,"robust,fast and efficient method for tracking MPP<p>Fuzzy logic controller for MPPT to extract masimum power form Photovoltaic module.</p>fuzzy,power_conversion_control,power_electronics_control,algorithm,fuzzy logic,power electronics,pv,simulation",129,7,2,0,150,robustfast efficient method track mppfuzzy logic controller mppt extract masimum power form photovoltaic module fuzzypower conversion controlpower electronics logicpower,"['robustfast', 'efficient', 'method', 'track', 'mppfuzzy', 'logic', 'controller', 'mppt', 'extract', 'masimum', 'power', 'form', 'photovoltaic', 'module', 'fuzzypower', 'conversion', 'controlpower', 'electronics', 'logicpower']",4
1807,58966,Berkeley socket interface Client-Server<p>Client server modelClient requeste from server with adress 100 data 200The server sends the data to client and then disconnectsWhen client got his data it displays it</p>networks,31,4,2,0,25,berkeley socket interface client serverclient server modelclient requeste server adress data server send data client disconnectswhen client get data display itnetworks,"['berkeley', 'socket', 'interface', 'client', 'serverclient', 'server', 'modelclient', 'requeste', 'server', 'adress', 'data', 'server', 'send', 'data', 'client', 'disconnectswhen', 'client', 'get', 'data', 'display', 'itnetworks']",5
1808,59058,Just simulink program<p>This is simulink for bipolar Nrz and Rz</p>simulink,16,0,1,0,19,programthis bipolar nrz,"['programthis', 'bipolar', 'nrz']",2
1809,59095,"A set of benchmark problems to compare formal methods tools<p>These are a set of benchmark problems that can be used to check the formal method tools. In case of Simulink the Design Verifier can be used for the proof and test case generation. All the models have a test case that is equivalent to a counter example. One needs to remove the test case and put in assertions to verify using formal methods.</p>benchmark,formal methods,simulink",476,26,2,0,525,set benchmark problem compare formal method toolsthese set benchmark problem check formal method tool case design verifier proof test case generation test case equivalent counter example one need remove test case put assertion verify formal method benchmarkformal,"['set', 'benchmark', 'problem', 'compare', 'formal', 'method', 'toolsthese', 'set', 'benchmark', 'problem', 'check', 'formal', 'method', 'tool', 'case', 'design', 'verifier', 'proof', 'test', 'case', 'generation', 'test', 'case', 'equivalent', 'counter', 'example', 'one', 'need', 'remove', 'test', 'case', 'put', 'assertion', 'verify', 'formal', 'method', 'benchmarkformal']",0
1810,59099,"Fuzzy logic control based MPPT for Wind Power System<p>Fuzzy logic control based MPPT for Wind Power System</p>fuzzy,intelligent,mppt,simulation,wind,power_conversion_control,power_electronics_control",78,3,3,0,99,fuzzy logic control base mppt wind power systemfuzzy logic control base mppt wind power conversion controlpower electronics control,"['fuzzy', 'logic', 'control', 'base', 'mppt', 'wind', 'power', 'systemfuzzy', 'logic', 'control', 'base', 'mppt', 'wind', 'power', 'conversion', 'controlpower', 'electronics', 'control']",1
1811,59110,"Small model which demonstrates how to control a stepper motor with an Arduino board.<p>Small model which demonstrates how to control a stepper motor with an Arduino board. Hardware used:- Arduino Mega 2560- Step Motor 28BYJ-48- Motor Driver Board ULN2003- Potentiometer to input desired motor angle- Breadboard and wiresSee pictures inside the ZIP file for wiring setup.Pin 2 (Arduino) -&gt; Pin 4 (ULN2003)Pin 3 (Arduino) -&gt; Pin 2 (ULN2003)Pin 4 (Arduino) -&gt; Pin 3 (ULN2003)Pin 5 (Arduino) -&gt; Pin 1 (ULN2003)Potentiometer -&gt; Pin A0 (Arduino)Ground and +5V power supply for potentiometer and ULN2003.Enjoy.</p>electric_motor_control,power_electronics_control,arduino,automotive,control design,robotics,simulink",28,7,2,5,24,small demonstrates control stepper motor arduino board small demonstrate control stepper motor arduino board hardware arduino mega step motor byj motor driver board uln potentiometer input desire motor angle breadboard wiressee picture inside zip file wire setup pin arduino pin uln pin arduino pin uln pin arduino pin uln pin arduino pin uln potentiometer pin arduino ground power supply potentiometer uln enjoy electric motor controlpower electronics,"['small', 'demonstrates', 'control', 'stepper', 'motor', 'arduino', 'board', 'small', 'demonstrate', 'control', 'stepper', 'motor', 'arduino', 'board', 'hardware', 'arduino', 'mega', 'step', 'motor', 'byj', 'motor', 'driver', 'board', 'uln', 'potentiometer', 'input', 'desire', 'motor', 'angle', 'breadboard', 'wiressee', 'picture', 'inside', 'zip', 'file', 'wire', 'setup', 'pin', 'arduino', 'pin', 'uln', 'pin', 'arduino', 'pin', 'uln', 'pin', 'arduino', 'pin', 'uln', 'pin', 'arduino', 'pin', 'uln', 'potentiometer', 'pin', 'arduino', 'ground', 'power', 'supply', 'potentiometer', 'uln', 'enjoy', 'electric', 'motor', 'controlpower', 'electronics']",4
1812,59121,"exercice simple de programmation sous stateflow<p>Cet exemple illustre pour des Ã©lÃ¨ves de la classe de 1ere ou Terminale qui dÃ©couvrent la programmation graphique (stateflow) :- Le fonctionnement dâun convertisseur analogique / numÃ©rique Ã  approximations successives,- Un exemple simple de rÃ©alisation de la programmation graphique avec le logiciel stateflow, et la nÃ©cessitÃ© de crÃ©er une boucle incluant un Ã©vÃ©nement, un test et une action,- Les interfaÃ§ages avec le logiciel Simulink.</p>simulation",26,1,2,0,29,exercice simple programmation sous stateflowcet exemple illustre pour Ã©lÃ¨ves classe ere terminale qui dÃ©couvrent programmation graphique stateflow fonctionnement dun convertisseur analogique numÃ©rique approximation successives exemple simple rÃ©alisation programmation graphique avec logiciel stateflow nÃ©cessitÃ© crÃ©er une boucle incluant Ã©vÃ©nement test une action interfaÃ§ages avec logiciel,"['exercice', 'simple', 'programmation', 'sous', 'stateflowcet', 'exemple', 'illustre', 'pour', 'Ã©lÃ¨ves', 'classe', 'ere', 'terminale', 'qui', 'dÃ©couvrent', 'programmation', 'graphique', 'stateflow', 'fonctionnement', 'dun', 'convertisseur', 'analogique', 'numÃ©rique', 'approximation', 'successives', 'exemple', 'simple', 'rÃ©alisation', 'programmation', 'graphique', 'avec', 'logiciel', 'stateflow', 'nÃ©cessitÃ©', 'crÃ©er', 'une', 'boucle', 'incluant', 'Ã©vÃ©nement', 'test', 'une', 'action', 'interfaÃ§ages', 'avec', 'logiciel']",8
1813,59131,"PWM signal<p>generating sine for PWM signal</p>electric_motor_control,power_conversion_control,power_electronics_control,pwm modulation",62,3,3,0,76,pwm sine pwm signalelectric motor controlpower conversion controlpower electronics controlpwm modulation,"['pwm', 'sine', 'pwm', 'signalelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpwm', 'modulation']",6
1814,59193,Tugas SKA<p>Tugas 2 SKA</p>mathematics,4,0,1,0,4,tugas skatugas skamathematics,"['tugas', 'skatugas', 'skamathematics']",2
1815,59198,"PID CONTROL OF A DC MOTOR EXAMPLE<p>PID CONTROL OF A DC MOTOR EXAMPLE</p>simulation,simulink,electric_motor_control,power_conversion_control,power_electronics_control",190,8,2,0,201,pid control motor examplepid control motor motor controlpower conversion controlpower electronics control,"['pid', 'control', 'motor', 'examplepid', 'control', 'motor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
1816,59227,"Cascade H-bridge Inverter<p>Cascade H-bridge Inverter</p>modeling,simulation",309,6,2,0,374,cascade bridge invertercascade bridge,"['cascade', 'bridge', 'invertercascade', 'bridge']",3
1817,59228,LINE FAULT<p>LINE FAULT SIMULATION</p>gui,16,0,1,0,25,line faultline fault,"['line', 'faultline', 'fault']",5
1818,59229,"This package contains the files necessary to create your own version of the obstacle game<p>This demo utilizes an Arduino board to create an obstacle avoidance game which usesLED's, pushbuttons and a buzzer. To progress through the game, the user needs to pressthe appropriate pushbuttons whenever a random combination of LEDs illuminate.</p>arduino,maker",11,8,1,8,10,package contain file necessary create version obstacle gamethis demo utilize arduino board create obstacle avoidance game usesled pushbuttons buzzer progress game user need pressthe appropriate pushbuttons whenever random combination led illuminate arduinomaker,"['package', 'contain', 'file', 'necessary', 'create', 'version', 'obstacle', 'gamethis', 'demo', 'utilize', 'arduino', 'board', 'create', 'obstacle', 'avoidance', 'game', 'usesled', 'pushbuttons', 'buzzer', 'progress', 'game', 'user', 'need', 'pressthe', 'appropriate', 'pushbuttons', 'whenever', 'random', 'combination', 'led', 'illuminate', 'arduinomaker']",5
1819,59230,"This package contains files necessary to build your own robotic spider<p>This demo utilizes an Arduino board, 3D printed parts, eight servo motors and variousother supporting hardware components to control a robotic spider. The body of the spideris made of 3D printed parts and several pushbuttons dictate the movement of the spider.</p>electric_motor_control,power_electronics_control,control design",17,5,1,13,18,package contain file necessary build robotic spiderthis demo utilize arduino board print part eight servo motor variousother support hardware component control robotic spider body spideris make printed part several pushbuttons dictate movement spider electric motor controlpower electronics controlcontrol design,"['package', 'contain', 'file', 'necessary', 'build', 'robotic', 'spiderthis', 'demo', 'utilize', 'arduino', 'board', 'print', 'part', 'eight', 'servo', 'motor', 'variousother', 'support', 'hardware', 'component', 'control', 'robotic', 'spider', 'body', 'spideris', 'make', 'printed', 'part', 'several', 'pushbuttons', 'dictate', 'movement', 'spider', 'electric', 'motor', 'controlpower', 'electronics', 'controlcontrol', 'design']",4
1820,59248,this is an IEEE 14 bus system in simulation<p>this is an IEEE 14 bus system in simulation. you can use it in your own way</p>power,54,0,1,0,169,iee bus iee bus waypower,"['iee', 'bus', 'iee', 'bus', 'waypower']",0
1821,59392,"Learn how to program LEGOÂ® MINDSTORMSÂ® EV3 Color Sorter using Stateflow<p>This project was inspired by the LEGOÂ® MINDSTORMSÂ® Education EV3 Color Sorter presented on the LEGO Education UK Youtube chanel. Small modifications to the building instruction were made to automatically detect colored bricks in the Color Sorterâs brick container. In this project we made preliminary tests, homing and design several control strategies in Stateflow to show multiple options in Color Sorter operation.Instructions:<a href=""http://www.instructables.com/id/LEGO-MINDSTORMS-EV3-Color-Sorter-Programming-Using/https://www.youtube.com/watch?v=PjneZpIi4uA"">http://www.instructables.com/id/LEGO-MINDSTORMS-EV3-Color-Sorter-Programming-Using/https://www.youtube.com/watch?v=PjneZpIi4uA</a></p>maker,ev3,lego mindstorms,matlab,simulink,stateflow",57,0,1,0,47,learn program lego mindstorms color sorter stateflowthis project inspire lego mindstorms education color sorter present lego education youtube chanel small modification build instruction make automatically detect color brick color sorter brick container project make preliminary test home design several control strategy stateflow show multiple option color sorter operation instruction http instructables com lego mindstorms color sorter program youtube com watch pjnezpii uamakerev lego,"['learn', 'program', 'lego', 'mindstorms', 'color', 'sorter', 'stateflowthis', 'project', 'inspire', 'lego', 'mindstorms', 'education', 'color', 'sorter', 'present', 'lego', 'education', 'youtube', 'chanel', 'small', 'modification', 'build', 'instruction', 'make', 'automatically', 'detect', 'color', 'brick', 'color', 'sorter', 'brick', 'container', 'project', 'make', 'preliminary', 'test', 'home', 'design', 'several', 'control', 'strategy', 'stateflow', 'show', 'multiple', 'option', 'color', 'sorter', 'operation', 'instruction', 'http', 'instructables', 'com', 'lego', 'mindstorms', 'color', 'sorter', 'program', 'youtube', 'com', 'watch', 'pjnezpii', 'uamakerev', 'lego']",0
1822,59440,Zhang Neural Network for time-varying matrix inversion in Simulink<p>This is a simulink file of Zhang Neural Network which calculates the inverse of a time-varying matrix</p>modeling,57,3,3,0,66,zhang neural network time vary matrix inversion file zhang neural network calculates inverse time vary matrixmodeling,"['zhang', 'neural', 'network', 'time', 'vary', 'matrix', 'inversion', 'file', 'zhang', 'neural', 'network', 'calculates', 'inverse', 'time', 'vary', 'matrixmodeling']",0
1823,59441,Zhang Neural Network for Solving a constant linear system in Simulink<p>This is a simulink file of Zhang Neural Network which solves a constant linear system</p>modeling,12,0,1,0,14,zhang neural network solve constant linear file zhang neural network solves constant linear systemmodeling,"['zhang', 'neural', 'network', 'solve', 'constant', 'linear', 'file', 'zhang', 'neural', 'network', 'solves', 'constant', 'linear', 'systemmodeling']",0
1824,59443,Gradient Neural Network for constant matrix inversion in Simulink<p>Gradient Neural Network for constant matrix inversion in Simulink</p>simulink,11,0,1,0,10,gradient neural network constant matrix inversion neural network constant matrix inversion,"['gradient', 'neural', 'network', 'constant', 'matrix', 'inversion', 'neural', 'network', 'constant', 'matrix', 'inversion']",5
1825,59444,Gradient Neural Network for calculating the Drazin-Inverse of a matrix in Simulink<p>This is a simulink file of Gradient Neural Network which calculates the Drazin-Inverse of a constant matrix</p>simulink,9,0,1,0,8,gradient neural network calculate drazin inverse matrix file gradient neural network calculates drazin inverse constant,"['gradient', 'neural', 'network', 'calculate', 'drazin', 'inverse', 'matrix', 'file', 'gradient', 'neural', 'network', 'calculates', 'drazin', 'inverse', 'constant']",5
1826,59445,Gradient Neural Network for time-varying matrix inversion in Simulink<p>This is a simulink file of Gradient Neural Network which calculates the inverse of a time-varying matrix</p>simulink,13,0,1,0,13,gradient neural network time vary matrix inversion file gradient neural network calculates inverse time vary,"['gradient', 'neural', 'network', 'time', 'vary', 'matrix', 'inversion', 'file', 'gradient', 'neural', 'network', 'calculates', 'inverse', 'time', 'vary']",0
1827,59446,The Comparison of ZNN model with GNN for time-varying matrix inversion<p>In this Simulink file we compare the ZNN model with GNN model for time-varying matrix inversion</p>simulink,71,3,3,0,82,comparison znn gnn time vary matrix inversionin file compare znn gnn time vary matrix,"['comparison', 'znn', 'gnn', 'time', 'vary', 'matrix', 'inversionin', 'file', 'compare', 'znn', 'gnn', 'time', 'vary', 'matrix']",5
1828,59449,"This model incorporate the improved  V/F control method for 3 phase induction motor.<p>A modified approach involving the injection of a low frequency boost voltage was developed, which offers the opportunity to realize maximum torque from zero to rated speed.</p>electric_motor_control,power_electronics_control,simulation",76,2,2,0,85,incorporate improve control method phase induction motor modify approach involve injection low frequency boost voltage develop offer opportunity realize maximum torque zero rat speed electric motor controlpower electronics,"['incorporate', 'improve', 'control', 'method', 'phase', 'induction', 'motor', 'modify', 'approach', 'involve', 'injection', 'low', 'frequency', 'boost', 'voltage', 'develop', 'offer', 'opportunity', 'realize', 'maximum', 'torque', 'zero', 'rat', 'speed', 'electric', 'motor', 'controlpower', 'electronics']",3
1829,59454,"Constant Voltage-Frequency ratio (V/F) scalar control method using Fuzzy logic controller for IM.<p>This model presents an implementation of fuzzy logic-based controller (FLC) to improve the performance of V/F control for three-phase IMD. The Mamdani FLC is designed with the help of MATLAB/Simulink with two inputs, one output and 49 rules. The two inputs of the FLC are the error and change in error. The output is the frequency correction which is provided to a voltage source PWM inverter-fed. Each input and output function is defined by five triangular and two trapezoidal membership functions and Centroid defuzzification method is applied.</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",80,5,2,0,82,constant voltage frequency ratio scalar control method fuzzy logic controller present implementation fuzzy logic base controller flc improve performance control three phase imd mamdani flc design help two input one output rule two input flc error change error output frequency correction provide voltage source pwm inverter feed input output function define five triangular two trapezoidal membership function centroid defuzzification method apply electric motor controlpower conversion controlpower electronics,"['constant', 'voltage', 'frequency', 'ratio', 'scalar', 'control', 'method', 'fuzzy', 'logic', 'controller', 'present', 'implementation', 'fuzzy', 'logic', 'base', 'controller', 'flc', 'improve', 'performance', 'control', 'three', 'phase', 'imd', 'mamdani', 'flc', 'design', 'help', 'two', 'input', 'one', 'output', 'rule', 'two', 'input', 'flc', 'error', 'change', 'error', 'output', 'frequency', 'correction', 'provide', 'voltage', 'source', 'pwm', 'inverter', 'feed', 'input', 'output', 'function', 'define', 'five', 'triangular', 'two', 'trapezoidal', 'membership', 'function', 'centroid', 'defuzzification', 'method', 'apply', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
1830,59461,"The Embedded function will decide the ON/OFF control based on the variation in the input.<p>Based on the input variations, the switch will be turned ON/OFF based on the program embedded. This can also be extended for two or more inputs which finds application in various power electronics circuits.</p>power_conversion_control,power_electronics_control,function,simulation,simulink",9,0,1,0,9,embed function decide control base variation input base input variation switch turn base program embed also extend two input find application various power electronics circuit power conversion controlpower electronics,"['embed', 'function', 'decide', 'control', 'base', 'variation', 'input', 'base', 'input', 'variation', 'switch', 'turn', 'base', 'program', 'embed', 'also', 'extend', 'two', 'input', 'find', 'application', 'various', 'power', 'electronics', 'circuit', 'power', 'conversion', 'controlpower', 'electronics']",3
1831,59511,"ANFIS MPPT controller for Wind Energy system<p>This simulation model objective is developed wind energy conversion system in Matlab environment and analyse the system performance under various weather conditions. Based on WES performance we have been designed and compare different types of maximum power point tracking controller in Matlab environment.</p>anfis,intelligent,mppt,wind,power_conversion_control,power_electronics_control",69,3,3,0,87,anfis mppt controller wind energy systemthis objective develop wind energy conversion environment analyse performance various weather condition base wes performance design compare different type maximum power point track controller environment conversion controlpower electronics control,"['anfis', 'mppt', 'controller', 'wind', 'energy', 'systemthis', 'objective', 'develop', 'wind', 'energy', 'conversion', 'environment', 'analyse', 'performance', 'various', 'weather', 'condition', 'base', 'wes', 'performance', 'design', 'compare', 'different', 'type', 'maximum', 'power', 'point', 'track', 'controller', 'environment', 'conversion', 'controlpower', 'electronics', 'control']",3
1832,59512,"Fuzzy Logic Control Based PMS for Grid integration of 10 KW Hybrid PV/FC Power System<p>Fuzzy Logic Control Based Power Management System for Grid integration of 10 KW Hybrid PV/FC Power System</p>fuzzy,grid,hybrid pvfc,power management system",286,20,3,0,350,fuzzy logic control base pms grid integration hybrid power systemfuzzy logic control base power management grid integration hybrid power pvfcpower management,"['fuzzy', 'logic', 'control', 'base', 'pms', 'grid', 'integration', 'hybrid', 'power', 'systemfuzzy', 'logic', 'control', 'base', 'power', 'management', 'grid', 'integration', 'hybrid', 'power', 'pvfcpower', 'management']",3
1833,59534,"MPPT for solar PV inverters<p>The solar PV is connected to the boost converter whose duty cycle can be obtained by the MPPT</p>power_conversion_control,power_electronics_control,power electronics",23,1,2,0,27,mppt solar invertersthe solar connect boost converter whose duty cycle obtain mpptpower conversion controlpower electronics controlpower electronics,"['mppt', 'solar', 'invertersthe', 'solar', 'connect', 'boost', 'converter', 'whose', 'duty', 'cycle', 'obtain', 'mpptpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",1
1834,59564,"DIFFRENT TYPES MMC MODULATIONS<p>DIFFRENT TYPES MMC MODULATIONSCPS,CPD WITH N+1&amp;2N+1 LEVELS</p>mmc,modulation,pwm",350,4,2,0,361,diffrent type mmc type mmc amp,"['diffrent', 'type', 'mmc', 'type', 'mmc', 'amp']",5
1835,59608,"This  model represents the improved V/F control method using adaptive fuzzy PI controller.<p>An adaptive fuzzy PI controller (AFPIC) with V/F control method of 3 phase induction motor is presented, where the PI parameters are adjusted by fuzzy due to  changing the operating conditions.</p>electric_motor_control,power_electronics_control,simulink",61,4,2,0,66,represent improve control method adaptive fuzzy controller adaptive fuzzy controller afpic control method phase induction motor present parameter adjust fuzzy due change operating condition electric motor controlpower electronics,"['represent', 'improve', 'control', 'method', 'adaptive', 'fuzzy', 'controller', 'adaptive', 'fuzzy', 'controller', 'afpic', 'control', 'method', 'phase', 'induction', 'motor', 'present', 'parameter', 'adjust', 'fuzzy', 'due', 'change', 'operating', 'condition', 'electric', 'motor', 'controlpower', 'electronics']",3
1836,59617,"A comprehensive set of PV module models<p>A comprehensive set of PV module modeled using MATLAB script, Simulink, Simscape Electronics and Simscape Power Systems.Reference Rodney H.G. Tan, Matthew Y.W. Teow, âA Comprehensive Modelling of Photovoltaic Module Characteristic Curve in MATLAB/Simulinkâ, 4th IET International Conference on Clean Energy and Technology, 14-15 October, 2016, MalaysiaThe full paper can be found from the link belowhttp://digital-library.theiet.org/content/conferences/10.1049/cp.2016.1301</p>power_conversion_control,power_electronics_control,iv curve,pv characteristic curve,pv curve,pv module",74,0,1,0,99,comprehensive set module modelsa comprehensive set module script simscape electronics simscape power reference rodney tan matthew teow comprehensive modelling photovoltaic module characteristic curve iet international conference clean energy technology october malaysiathe full paper find link belowhttp digital theiet org content conference power conversion controlpower electronics controliv curvepv characteristic curvepv curvepv module,"['comprehensive', 'set', 'module', 'modelsa', 'comprehensive', 'set', 'module', 'script', 'simscape', 'electronics', 'simscape', 'power', 'reference', 'rodney', 'tan', 'matthew', 'teow', 'comprehensive', 'modelling', 'photovoltaic', 'module', 'characteristic', 'curve', 'iet', 'international', 'conference', 'clean', 'energy', 'technology', 'october', 'malaysiathe', 'full', 'paper', 'find', 'link', 'belowhttp', 'digital', 'theiet', 'org', 'content', 'conference', 'power', 'conversion', 'controlpower', 'electronics', 'controliv', 'curvepv', 'characteristic', 'curvepv', 'curvepv', 'module']",4
1837,59733,"using the difference in temperature (candle and the room temperature) the voltage is produced.<p>Thermoelectric TEC12706 commonly used as a cooling device change the electric input into temperature difference at each side. However, TEC12706 can still generate electricity in variable temperature. The device will generate an electricity if there have temperature difference in different side of the module, the output of electricity occurs due to the transfer of energy from the semiconductor N type to P-type with smaller energy, the experiment was conducted to find out the potential can generated utilize a heat of burning tea light candle into electrical energy using 4 thermoelectric module. The type of heat sink and coefficient of natural convection affect the temperature difference during the experiment. The output from the TEC 12706 is given to the Dc to Dc booster which boost the output from the element and it is used to give input to the inverter. With this setup we might be produce 20Watt of power for day-to-day use.</p>power_conversion_control,power_electronics_control,simulation",83,9,3,0,82,difference temperature candle room temperature voltage produce thermoelectric tec commonly cooling device change electric input temperature difference side however tec still generate electricity variable temperature device generate electricity temperature difference different side module output electricity occur due transfer energy semiconductor type type small energy experiment conduct find potential generate utilize heat burn tea light candle electrical energy thermoelectric module type heat sink coefficient natural convection affect temperature difference experiment output tec give booster boost output element give input inverter setup might produce watt power day day power conversion controlpower electronics,"['difference', 'temperature', 'candle', 'room', 'temperature', 'voltage', 'produce', 'thermoelectric', 'tec', 'commonly', 'cooling', 'device', 'change', 'electric', 'input', 'temperature', 'difference', 'side', 'however', 'tec', 'still', 'generate', 'electricity', 'variable', 'temperature', 'device', 'generate', 'electricity', 'temperature', 'difference', 'different', 'side', 'module', 'output', 'electricity', 'occur', 'due', 'transfer', 'energy', 'semiconductor', 'type', 'type', 'small', 'energy', 'experiment', 'conduct', 'find', 'potential', 'generate', 'utilize', 'heat', 'burn', 'tea', 'light', 'candle', 'electrical', 'energy', 'thermoelectric', 'module', 'type', 'heat', 'sink', 'coefficient', 'natural', 'convection', 'affect', 'temperature', 'difference', 'experiment', 'output', 'tec', 'give', 'booster', 'boost', 'output', 'element', 'give', 'input', 'inverter', 'setup', 'might', 'produce', 'watt', 'power', 'day', 'day', 'power', 'conversion', 'controlpower', 'electronics']",4
1838,59742,"The Line to Goto/From tool converts signal lines to Goto/From connections, and vice versa.<p>The use of Goto/From blocks or signal lines helps to increase Simulink model readability where appropriate. In models with many signal line crossings, converting some signal lines to Goto/From blocks helps in decluttering the model. Conversely, using signal lines for straightforward connections, instead of Goto/From blocks, allows developers to more easily follow the visual data flow. The Line-Goto/From tool quickly converts signal lines to Goto/From blocks, as well as Goto/From blocks to signal lines.</p>pick of the week,potw,goto,line,signal,simulink,transformation",14,1,2,0,11,line goto tool convert signal line goto connection vice versa goto block signal line help increase readability appropriate many signal line crossing convert signal line goto block help decluttering conversely signal line straightforward connection instead goto block allow developer easily follow visual data flow line goto tool quickly convert signal line goto block well goto block signal line pick,"['line', 'goto', 'tool', 'convert', 'signal', 'line', 'goto', 'connection', 'vice', 'versa', 'goto', 'block', 'signal', 'line', 'help', 'increase', 'readability', 'appropriate', 'many', 'signal', 'line', 'crossing', 'convert', 'signal', 'line', 'goto', 'block', 'help', 'decluttering', 'conversely', 'signal', 'line', 'straightforward', 'connection', 'instead', 'goto', 'block', 'allow', 'developer', 'easily', 'follow', 'visual', 'data', 'flow', 'line', 'goto', 'tool', 'quickly', 'convert', 'signal', 'line', 'goto', 'block', 'well', 'goto', 'block', 'signal', 'line', 'pick']",0
1839,59811,"Files that were used in the webinar 'Raspberry Pi based security system using MATLAB and Simulink'<p>These files along with this webinar will show how to take advantage of the built-in Wi-Fi capabilities of Raspberry Pi 3 to build a security system using MATLAB and Simulink. The security system will acquire surveillance data from a Raspberry Pi camera board and identify intruders using an image processing routine developed in MATLAB. It will send live tweets to notify you whenever an intruder is detected.  The webinar will highlight how to:Communicate with your Raspberry Pi from MATLAB and SimulinkQuickly prototype and refine algorithms for your Raspberry Pi projectsDeploy algorithms for standalone execution on the Raspberry PiUse the ThingSpeak IoT data aggregation service to send / retrieve data from the cloud and send live tweetshttps://<a href=""http://www.youtube.com/watch?v=gsMYbSgXK6g"">www.youtube.com/watch?v=gsMYbSgXK6g</a></p>live script,image processing,raspberry pi,maker",14,1,2,0,13,file webinar raspberry base security file along webinar show take advantage build capability raspberry build security security acquire surveillance data raspberry camera board identify intruder image processing routine develop send live tweet notify whenever intruder detect webinar highlight communicate raspberry prototype refine algorithm raspberry projectsdeploy algorithm standalone execution raspberry piuse thingspeak iot data aggregation service send retrieve data cloud send live tweet youtube com watch gsmybsgxk glive scriptimage pimaker,"['file', 'webinar', 'raspberry', 'base', 'security', 'file', 'along', 'webinar', 'show', 'take', 'advantage', 'build', 'capability', 'raspberry', 'build', 'security', 'security', 'acquire', 'surveillance', 'data', 'raspberry', 'camera', 'board', 'identify', 'intruder', 'image', 'processing', 'routine', 'develop', 'send', 'live', 'tweet', 'notify', 'whenever', 'intruder', 'detect', 'webinar', 'highlight', 'communicate', 'raspberry', 'prototype', 'refine', 'algorithm', 'raspberry', 'projectsdeploy', 'algorithm', 'standalone', 'execution', 'raspberry', 'piuse', 'thingspeak', 'iot', 'data', 'aggregation', 'service', 'send', 'retrieve', 'data', 'cloud', 'send', 'live', 'tweet', 'youtube', 'com', 'watch', 'gsmybsgxk', 'glive', 'scriptimage', 'pimaker']",5
1840,59824,"P&O<p>P&amp;O method mppt for grid connected pv array</p>power_conversion_control,power_electronics_control,mppt,po",329,22,3,0,340,amp method mppt grid connect arraypower conversion controlpower electronics controlmpptpo,"['amp', 'method', 'mppt', 'grid', 'connect', 'arraypower', 'conversion', 'controlpower', 'electronics', 'controlmpptpo']",1
1841,59825,"MATLAB and Simulink examples to prototype beat tracking algorithms in real-time for SP Cup 2017<p>This collection of examples is intended to help IEEE SP Cup 2017 participants prototype their beat-tracking algorithms in real-time using MATLAB. The three approaches proposed include real-time streaming directly in MATLAB, generating a VST plugin from MATLAB code, and running on a Raspberry Pi board by using MATLAB code within a Simulink model. An example is included for each of the three workflows.All examples provided can be used as templates to quickly prototype new beat-tracking ideas. In their present form, all files use a trivial high-latency beat detection algorithm based on finding the peaks of an all-positive version of the input signal. Depending on the particular example, the detected beats are returned as either MATLAB arrays (format required by the competition), numeric .txt files, or click sounds mixed onto the original signal.To use this material please refer to the ReadMe.txt file included in the archive.ï¿½For more resources on using MATLAB and Simulink for SP Cup 2017, visit <a href=""https://www.mathworks.com/academia/student-competitions/sp-cup/For"">https://www.mathworks.com/academia/student-competitions/sp-cup/For</a> all the details on the SP Cup 2017, visit <a href=""http://signalprocessingsociety.org/sites/default/files/uploads/publications_resources/news/ICASSP_2017_SPCup.pdf"">http://signalprocessingsociety.org/sites/default/files/uploads/publications_resources/news/ICASSP_2017_SPCup.pdf</a></p>audio,audio processing,beat,realtime,signal processing",13,0,1,0,9,example prototype beat track algorithms real time cup collection example intend help iee cup participant prototype beat track algorithms real time three approach propose include real time stream directly generate vst plugin code run raspberry board code within example include three workflow examples provide used template quickly prototype new beat track idea present form file trivial high latency beat detection algorithm base find peak positive version input signal depend particular example detect beat return either arrays format require competition numeric txt file click sound mixed onto original signal material please refer readme txt file include archive resource cup visit mathworks com academia student competition cup detail cup visit http org sit default file upload publication resource news icassp spcup pdfaudioaudio processing,"['example', 'prototype', 'beat', 'track', 'algorithms', 'real', 'time', 'cup', 'collection', 'example', 'intend', 'help', 'iee', 'cup', 'participant', 'prototype', 'beat', 'track', 'algorithms', 'real', 'time', 'three', 'approach', 'propose', 'include', 'real', 'time', 'stream', 'directly', 'generate', 'vst', 'plugin', 'code', 'run', 'raspberry', 'board', 'code', 'within', 'example', 'include', 'three', 'workflow', 'examples', 'provide', 'used', 'template', 'quickly', 'prototype', 'new', 'beat', 'track', 'idea', 'present', 'form', 'file', 'trivial', 'high', 'latency', 'beat', 'detection', 'algorithm', 'base', 'find', 'peak', 'positive', 'version', 'input', 'signal', 'depend', 'particular', 'example', 'detect', 'beat', 'return', 'either', 'arrays', 'format', 'require', 'competition', 'numeric', 'txt', 'file', 'click', 'sound', 'mixed', 'onto', 'original', 'signal', 'material', 'please', 'refer', 'readme', 'txt', 'file', 'include', 'archive', 'resource', 'cup', 'visit', 'mathworks', 'com', 'academia', 'student', 'competition', 'cup', 'detail', 'cup', 'visit', 'http', 'org', 'sit', 'default', 'file', 'upload', 'publication', 'resource', 'news', 'icassp', 'spcup', 'pdfaudioaudio', 'processing']",0
1842,59834,"maximum power tracking of PV system using perturb and observe method.<p>this model contains photovoltic module, boost converter and resistive load.</p>power_conversion_control,power_electronics_control,simulation",119,2,2,0,111,maximum power track perturb observe method contain photovoltic module boost converter resistive load power conversion controlpower electronics,"['maximum', 'power', 'track', 'perturb', 'observe', 'method', 'contain', 'photovoltic', 'module', 'boost', 'converter', 'resistive', 'load', 'power', 'conversion', 'controlpower', 'electronics']",1
1843,59871,"NTC Type<p>Negative Temperature Coeffficient Type</p>electrical,thermistor",13,0,1,0,13,ntc typenegative temperature coefficient,"['ntc', 'typenegative', 'temperature', 'coefficient']",8
1844,59893,"ANFIS Based MPPT controller for 100 W PV system<p>ANFIS Based MPPT controller for 100 W PV system</p>anfis,mppt,power electronics,pv,power_conversion_control,power_electronics_control",33,0,1,0,39,anfis base mppt controller systemanfis base mppt controller conversion controlpower electronics control,"['anfis', 'base', 'mppt', 'controller', 'systemanfis', 'base', 'mppt', 'controller', 'conversion', 'controlpower', 'electronics', 'control']",1
1845,59899,power<p>power_PVarray_grid</p>simulink,31,0,1,0,44,powerpower pvarray,"['powerpower', 'pvarray']",2
1846,59950,"Battery Pack models for simulation<p>The models will simulate the Battery volage,current,Power &amp; SoC characteristcs. The submission contains models for 6V,12V, 24V &amp; 48 V. The model is developed by considering various voltage drops observed in a battery</p>battery_system_management,power_electronics_control,battery,simulation",105,8,3,0,130,battery pack battery amp soc characteristcs submission contain amp develop consider various voltage drop observe batterybattery managementpower electronics,"['battery', 'pack', 'battery', 'amp', 'soc', 'characteristcs', 'submission', 'contain', 'amp', 'develop', 'consider', 'various', 'voltage', 'drop', 'observe', 'batterybattery', 'managementpower', 'electronics']",4
1847,59985,"model of three phase induction motor<p>this file contains the  model of  three phase induction motor in d-q reference  using Matlab R2009a.</p>electric_motor_control,power_electronics_control,simulation",355,21,3,0,405,three phase induction motorthis file contains three phase induction motor reference electric motor controlpower electronics,"['three', 'phase', 'induction', 'motorthis', 'file', 'contains', 'three', 'phase', 'induction', 'motor', 'reference', 'electric', 'motor', 'controlpower', 'electronics']",6
1848,59992,"Close loop speed control of BLDC motor in FAN-load application<p>Mathematical Modeling of Brushless DC Motor Drives and its Speed control Technique</p>ac motors,bldc motor,brushless dc motor,close loop control,dynamics of electric drive,electric drives,fan motors,hall sensor,inverter control,machines,motor control,motordrives control,speed control,speed control techniques for bldc drives,electric_motor_control,power_conversion_control,power_electronics_control",146,9,4,0,193,close loop speed control bldc motor fan load brushless motor drive speed control techniqueac motorsbldc motorbrushless motorclose loop controldynamics electric driveelectric drivesfan motorshall sensorinverter controlspeed controlspeed control technique bldc driveselectric motor controlpower conversion controlpower electronics control,"['close', 'loop', 'speed', 'control', 'bldc', 'motor', 'fan', 'load', 'brushless', 'motor', 'drive', 'speed', 'control', 'techniqueac', 'motorsbldc', 'motorbrushless', 'motorclose', 'loop', 'controldynamics', 'electric', 'driveelectric', 'drivesfan', 'motorshall', 'sensorinverter', 'controlspeed', 'controlspeed', 'control', 'technique', 'bldc', 'driveselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1849,59997,"Full Wave Full Controlled Converter<p>This is a controlled converter. The firing angle ( phase delay) is specified.</p>converter,power electronics,thyristor",23,0,1,0,19,full wave full control converterthis control converter fire angle phase delay specify converterpower,"['full', 'wave', 'full', 'control', 'converterthis', 'control', 'converter', 'fire', 'angle', 'phase', 'delay', 'specify', 'converterpower']",3
1850,59998,"Moving Average Prediction (Forecasting) Algorithm<p>This subsystem block predicts 4 Future Outputs on the basis of 5 Past Inputs using Moving Average Algorithm.</p>forecasting,moving average algorithm,prediction",31,1,2,0,41,move average prediction forecast algorithmthis subsystem block predict future outputs basis past input move average algorithm average,"['move', 'average', 'prediction', 'forecast', 'algorithmthis', 'subsystem', 'block', 'predict', 'future', 'outputs', 'basis', 'past', 'input', 'move', 'average', 'algorithm', 'average']",5
1851,60008,"speed control<p>it explains how speed control is done in dc motor.</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",12,0,1,0,13,speed controlit explain speed control motor electric motor controlpower conversion controlpower electronics,"['speed', 'controlit', 'explain', 'speed', 'control', 'motor', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1852,60009,"Single phase phase-locked-loop (PLL) with basic standard structure<p>This is a very basic structure of single phase PLL . The PLL block takes a sinusoidal signal as input; frequency and phase angle are calculated at the outputs of the block. The amplitude of the input sinusoidal signal must be 1. The detected frequency contains high frequency ripples. It was developed following chapter 1, Enhanced Phase-Locked Loop Structures for Power and Energy Applications By Masoud Karimi-Ghartema.</p>phase locked loop,pll,simulink",19,1,2,0,20,single phase phase lock loop pll basic standard structurethis basic structure single phase pll pll block take sinusoidal signal input frequency phase angle calculate outputs block amplitude input sinusoidal signal must detect frequency contains high frequency ripple develop follow chapter enhance phase lock loop structure power energy application masoud karimi ghartema phase lock,"['single', 'phase', 'phase', 'lock', 'loop', 'pll', 'basic', 'standard', 'structurethis', 'basic', 'structure', 'single', 'phase', 'pll', 'pll', 'block', 'take', 'sinusoidal', 'signal', 'input', 'frequency', 'phase', 'angle', 'calculate', 'outputs', 'block', 'amplitude', 'input', 'sinusoidal', 'signal', 'must', 'detect', 'frequency', 'contains', 'high', 'frequency', 'ripple', 'develop', 'follow', 'chapter', 'enhance', 'phase', 'lock', 'loop', 'structure', 'power', 'energy', 'application', 'masoud', 'karimi', 'ghartema', 'phase', 'lock']",4
1853,60010,"Enhanced PLL to eliminate double frequency ripple<p>This is an enhanced single phase PLL . The PLL block takes a sinusoidal signal as input; frequency, phase angle and amplitude of the input signal are calculated at the outputs of the block. The E-PLL is an improvement over the basic PLL by elimination of the double frequency ripple.It was developed following chapter 2, Enhanced Phase-Locked Loop Structures for Power and Energy Applications By Masoud Karimi-Ghartema.</p>phase locked loop,pll,simulink",26,1,2,0,31,enhance pll eliminate double frequency ripplethis enhance single phase pll pll block take sinusoidal signal input frequency phase angle amplitude input signal calculate outputs block pll improvement basic pll elimination double frequency ripple develop follow chapter enhance phase lock loop structure power energy application masoud karimi ghartema phase lock,"['enhance', 'pll', 'eliminate', 'double', 'frequency', 'ripplethis', 'enhance', 'single', 'phase', 'pll', 'pll', 'block', 'take', 'sinusoidal', 'signal', 'input', 'frequency', 'phase', 'angle', 'amplitude', 'input', 'signal', 'calculate', 'outputs', 'block', 'pll', 'improvement', 'basic', 'pll', 'elimination', 'double', 'frequency', 'ripple', 'develop', 'follow', 'chapter', 'enhance', 'phase', 'lock', 'loop', 'structure', 'power', 'energy', 'application', 'masoud', 'karimi', 'ghartema', 'phase', 'lock']",4
1854,60021,"Modified Enhanced PLL to detect frequency independent of the input signal magnitude<p>Reference:Enhanced Phase-Locked Loop Structures for Power and Energy Applications By Masoud Karimi-Ghartema</p>phase locked loop,pll,simulink",37,1,2,0,44,modify enhanced pll detect frequency independent input signal enhance phase lock loop structure power energy application masoud karimi ghartemaphase lock,"['modify', 'enhanced', 'pll', 'detect', 'frequency', 'independent', 'input', 'signal', 'enhance', 'phase', 'lock', 'loop', 'structure', 'power', 'energy', 'application', 'masoud', 'karimi', 'ghartemaphase', 'lock']",4
1855,60046,Modeling of lorry wtih specially equipped for towing away cars.<p>Presented system of differential equations for modeling of lorry wtih specially equipped for towing away cars and considered way to implement it using software Matlab Simulink. Displaying methodology and way to implement this model with complicated software to solve actual problems of dynamics.</p>simulation,435,26,3,0,409,lorry wtih specially equip tow away car present differential equation lorry wtih specially equip tow away car consider way implement software display methodology way implement complicate software solve actual problem dynamic,"['lorry', 'wtih', 'specially', 'equip', 'tow', 'away', 'car', 'present', 'differential', 'equation', 'lorry', 'wtih', 'specially', 'equip', 'tow', 'away', 'car', 'consider', 'way', 'implement', 'software', 'display', 'methodology', 'way', 'implement', 'complicate', 'software', 'solve', 'actual', 'problem', 'dynamic']",5
1856,60097,"Brain Emotional Learning Toolbox<p>The brain emotional learning control paradigm has been gathering increased interest by the control systems design community. Hence, this toolbox can be used by the researcher to reduce the development time of BELBIC based controllers. Comments and suggestions can be sent to <a href=""mailto:jpcoelho@ipb.pt"">jpcoelho@ipb.pt</a></p>control design,machine learning,simulink",232,19,2,7,259,brain emotional learning toolboxthe brain emotional learning control paradigm gathering increased interest control design community hence toolbox researcher reduce development time belbic base controller comment suggestion send jpcoelho ipb ptcontrol designmachine,"['brain', 'emotional', 'learning', 'toolboxthe', 'brain', 'emotional', 'learning', 'control', 'paradigm', 'gathering', 'increased', 'interest', 'control', 'design', 'community', 'hence', 'toolbox', 'researcher', 'reduce', 'development', 'time', 'belbic', 'base', 'controller', 'comment', 'suggestion', 'send', 'jpcoelho', 'ipb', 'ptcontrol', 'designmachine']",8
1857,60101,"This simple model consists of boost converter with PID controller for voltage regulation<p>Controller works for PV model</p>power_conversion_control,power_electronics_control,conversion",20,0,1,0,29,simple consist boost converter pid controller voltage work modelpower conversion controlpower electronics,"['simple', 'consist', 'boost', 'converter', 'pid', 'controller', 'voltage', 'work', 'modelpower', 'conversion', 'controlpower', 'electronics']",1
1858,60167,"All dc-dc converters<p>Just run and check the outputs in scope</p>power_conversion_control,power_electronics_control,boost converter,buck boost converter,buck converter,cuk converter,sepic converter,simulation",46,0,1,0,47,convertersjust run check output scopepower conversion controlpower electronics controlboost converterbuck boost converterbuck convertercuk convertersepic,"['convertersjust', 'run', 'check', 'output', 'scopepower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterbuck', 'boost', 'converterbuck', 'convertercuk', 'convertersepic']",3
1859,60169,"Closed loop control (PI) of continuous crystallizer<p>The submission contains a Simulink model of closed loop control system for continuous crystallizer. The continuous crystallizer equipped with fines dissolver is used for crystallization of potassium chloride from water.The reader is referred to the following paper for complete details of numerical method used to solve the mathematical model of continuous crystallizer and for tuning of PI controller.Jeffrey D. Ward,  Cheng-Ching Yu, Population balance modeling in Simulink: PCSS, Computers and Chemical Engineering 32 (2008) 2233â2242.The model is useful for testing new controller design methods as well as for evaluating new partial differential equations solvers. I am grateful to the authors of the above mentioned paper for making their work publicly available.</p>crystallization,process control",44,3,2,0,42,closed loop control continuous crystallizerthe submission contains close loop control continuous crystallizer continuous crystallizer equip fine dissolver crystallization potassium chloride water reader refer follow paper complete detail numerical method solve mathematical continuous crystallizer tune controller jeffrey ward cheng ching population balance pcss computer chemical engineering useful test new controller design method well evaluate new partial differential equation solver grateful author mention paper making work publicly available control,"['closed', 'loop', 'control', 'continuous', 'crystallizerthe', 'submission', 'contains', 'close', 'loop', 'control', 'continuous', 'crystallizer', 'continuous', 'crystallizer', 'equip', 'fine', 'dissolver', 'crystallization', 'potassium', 'chloride', 'water', 'reader', 'refer', 'follow', 'paper', 'complete', 'detail', 'numerical', 'method', 'solve', 'mathematical', 'continuous', 'crystallizer', 'tune', 'controller', 'jeffrey', 'ward', 'cheng', 'ching', 'population', 'balance', 'pcss', 'computer', 'chemical', 'engineering', 'useful', 'test', 'new', 'controller', 'design', 'method', 'well', 'evaluate', 'new', 'partial', 'differential', 'equation', 'solver', 'grateful', 'author', 'mention', 'paper', 'making', 'work', 'publicly', 'available', 'control']",5
1860,60170,"Characteristics for charging and discharging of battery<p>SOC characterstics   shows    the   charging and discharging (i.e) It increasing means Charging and it decreasing means  DischargingAlso this will occured on Terminal voltage is lower than the battery voltage means,  battery get DischargeTerminal voltage is greater than the battery voltage means,  battery will get charge</p>battery_system_management,power_electronics_control,battery,battery characterstics,charging,discharging,simulation",11,2,2,0,11,characteristic charge discharge batterysoc characterstics show charge discharge increase mean charge decrease mean dischargingalso occur terminal voltage lower battery voltage mean battery get voltage great battery voltage mean battery get chargebattery managementpower electronics,"['characteristic', 'charge', 'discharge', 'batterysoc', 'characterstics', 'show', 'charge', 'discharge', 'increase', 'mean', 'charge', 'decrease', 'mean', 'dischargingalso', 'occur', 'terminal', 'voltage', 'lower', 'battery', 'voltage', 'mean', 'battery', 'get', 'voltage', 'great', 'battery', 'voltage', 'mean', 'battery', 'get', 'chargebattery', 'managementpower', 'electronics']",4
1861,60190,"Two different functions are being used as feed forward for comparing the performance.<p>Consult the following book for details on Example 3.5 and Example 3.6;Yazdani, A., &amp; Iravani, R. (2010). Voltage-sourced converters in power systems: Modeling,control, and applications. Hoboken, N.J: IEEE Press/John Wiley</p>electric_motor_control,power_conversion_control,power_electronics_control,full brigde,hbrigde,power electronics,pwm",70,0,1,0,86,two different function feed forward compare performance consult follow book detail example example yazdani amp iravani voltage source converter power modelingcontrol application hoboken iee press john wileyelectric motor controlpower conversion controlpower electronics controlfull electronicspwm,"['two', 'different', 'function', 'feed', 'forward', 'compare', 'performance', 'consult', 'follow', 'book', 'detail', 'example', 'example', 'yazdani', 'amp', 'iravani', 'voltage', 'source', 'converter', 'power', 'modelingcontrol', 'application', 'hoboken', 'iee', 'press', 'john', 'wileyelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlfull', 'electronicspwm']",3
1862,60192,"Two Level Voltage Source Converter (VSC) with Current-Controlled Real-/Reactive Power Controller<p>Two Level Voltage Source Converter (VSC) with current-controlled real-/reactive power controller employing alpha-beta conversion for feedback of the current and voltage.Consult the following book for details of Example 7.1;Yazdani, A., &amp; Iravani, R. (2010). Voltage-sourced converters in power systems: Modeling, control,and applications. Hoboken, N.J: IEEE Press/John Wiley.</p>power_conversion_control,power_electronics_control,alphabeta frame,current controlled converter,hbridge,power electronics,realreactive power controller,unipolar pwm,voltage source converter,vsc",112,3,2,0,154,two level voltage source converter vsc current control real reactive power controllertwo level voltage source converter vsc current control real reactive power controller employ alpha beta conversion feedback current voltage consult follow book detail example yazdani amp iravani voltage source converter power controland application hoboken iee press john wiley power conversion controlpower electronics framecurrent control power pwmvoltage source convertervsc,"['two', 'level', 'voltage', 'source', 'converter', 'vsc', 'current', 'control', 'real', 'reactive', 'power', 'controllertwo', 'level', 'voltage', 'source', 'converter', 'vsc', 'current', 'control', 'real', 'reactive', 'power', 'controller', 'employ', 'alpha', 'beta', 'conversion', 'feedback', 'current', 'voltage', 'consult', 'follow', 'book', 'detail', 'example', 'yazdani', 'amp', 'iravani', 'voltage', 'source', 'converter', 'power', 'controland', 'application', 'hoboken', 'iee', 'press', 'john', 'wiley', 'power', 'conversion', 'controlpower', 'electronics', 'framecurrent', 'control', 'power', 'pwmvoltage', 'source', 'convertervsc']",3
1863,60193,"Simulation of the PLL (Phase-Locked Loop) with feed-forward compensation for the output of the PLL.<p>Consult the following book for details of Example 8.1;Yazdani, A., &amp; Iravani, R. (2010). Voltage-sourced converters in power systems: Modeling, control,and applications. Hoboken, N.J: IEEE Press/John Wiley.</p>power_conversion_control,power_electronics_control,compensator for pll,phase locked loop,pll",28,1,2,0,31,pll phase lock loop feed forward compensation output pll consult follow book detail example yazdani amp iravani voltage source converter power controland application hoboken iee press john wiley power conversion controlpower electronics pllphase lock looppll,"['pll', 'phase', 'lock', 'loop', 'feed', 'forward', 'compensation', 'output', 'pll', 'consult', 'follow', 'book', 'detail', 'example', 'yazdani', 'amp', 'iravani', 'voltage', 'source', 'converter', 'power', 'controland', 'application', 'hoboken', 'iee', 'press', 'john', 'wiley', 'power', 'conversion', 'controlpower', 'electronics', 'pllphase', 'lock', 'looppll']",4
1864,60195,"Three-Phase H-Bridge Converter<p>Three-Phase H-Bridge Converter with Unipolar PWM.</p>electric_motor_control,power_conversion_control,power_electronics_control,pwm,simulink,threephase,unipolar",61,0,1,0,75,three phase bridge converterthree phase bridge converter unipolar pwm electric motor controlpower conversion controlpower electronics,"['three', 'phase', 'bridge', 'converterthree', 'phase', 'bridge', 'converter', 'unipolar', 'pwm', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1865,60196,"Generate optimized code for XMC Microcontrollers<p>Embedded CoderÂ® Support Package for Infineon XMC Microcontrollers, enables an optimized and seamless code generation for the XMC ARMÂ® CortexÂ®-M microcontroller families.The support package is comprised also of a complete set of Simulink Library blocks, for XMC Peripheral configuration and code generation (such as Timers, ADCs, Interrupts, Comparators, etc). A comprehensive example suite, will enable also a smooth know-how ramp up, for applications such as Motor Control or Digital Power Conversion.It is also possible to download the code directly to an Infineon XMC development kit â test your model without leaving the Simulink environment (with J-Link Ozone debugger) â or simply import the code into Infineon software development tool DAVE. The support package is compatible with MATLABÂ® versions 2015a, 2016a and 2016b** In version 2016b code compilation directly from Simulink is not possible To use the XMC package, please go to Help -&gt; XMC Library for Embedded Coder Toolbox  Note: A legacy version can also be downloaded from Infineon webpage <a href=""http://www.infineon.com/matlab"">www.infineon.com/matlab</a>          This version is compatible with MATLABÂ® versions 2013b to 2015a.</p>electric_motor_control,power_electronics_control,coding,control,simulink",3489,452,7,269,3093,generate optimize code xmc coder support package infineon xmc enable optimize seamless code generation xmc arm cortex microcontroller family support package comprise also complete set block xmc peripheral configuration code generation timer adcs interrupts comparators etc comprehensive example suite enable also smooth know ramp application motor control digital power conversion also possible download code directly infineon xmc development kit test without leave environment link ozone debugger simply import code infineon software development tool dave support package compatible version version code compilation directly possible xmc package please help xmc embed coder toolbox note legacy version also download infineon webpage infineon com version compatible version electric motor controlpower electronics,"['generate', 'optimize', 'code', 'xmc', 'coder', 'support', 'package', 'infineon', 'xmc', 'enable', 'optimize', 'seamless', 'code', 'generation', 'xmc', 'arm', 'cortex', 'microcontroller', 'family', 'support', 'package', 'comprise', 'also', 'complete', 'set', 'block', 'xmc', 'peripheral', 'configuration', 'code', 'generation', 'timer', 'adcs', 'interrupts', 'comparators', 'etc', 'comprehensive', 'example', 'suite', 'enable', 'also', 'smooth', 'know', 'ramp', 'application', 'motor', 'control', 'digital', 'power', 'conversion', 'also', 'possible', 'download', 'code', 'directly', 'infineon', 'xmc', 'development', 'kit', 'test', 'without', 'leave', 'environment', 'link', 'ozone', 'debugger', 'simply', 'import', 'code', 'infineon', 'software', 'development', 'tool', 'dave', 'support', 'package', 'compatible', 'version', 'version', 'code', 'compilation', 'directly', 'possible', 'xmc', 'package', 'please', 'help', 'xmc', 'embed', 'coder', 'toolbox', 'note', 'legacy', 'version', 'also', 'download', 'infineon', 'webpage', 'infineon', 'com', 'version', 'compatible', 'version', 'electric', 'motor', 'controlpower', 'electronics']",0
1866,60218,"This files enable the use of EPOS2 maxon motor position controller connected to a Linux Machine<p>Unfortunately Windows OS is not good enough for real-time operation, so Simulink provides a way to improve this using Simulink Coder (formerly know as Real Time Workshop). This files enable the use of a EPOS2 motor controller connected to a Linux machine, such as a Raspberry PI, for obtaining a better performance in simulation when compared with Windows OS.Example of how to use this files1. Download and install EPOS2 libraries in Raspberry PI. Copy *.so in /usr/lib, and replace *.h in /usr/include. Replace the original ""Definitions.h"" file with the one included in the zip.   Example of this step in linux:   cd ./EPOS_Linux_Library_Files/lib/arm/rpi   sudo mv libEposCmd.so.5.0.1.0 /usr/lib/libEposCmd.so   sudo mv libftd2xx.so.1.2.8 /usr/lib/libftd2xx.so  Copy the file ""Definitions.h"" to your SSD in Raspberry PI and use the following command   sudo mv ./Definitions.h /usr/include2. Extract the files in an empty directory in a windows computer.3. Open the example model ""test_MAXON_linux.slx"" and modify it according to your node ID and required EPOS2 mode. There are only three supported modes: position, velocity and current.4. Go to model options and change the values in pane ""Run On Target Hardware"", use your IP, user and password.5. Compile model in external mode and check for output.</p>epos2 in simulink,electric_motor_control,power_electronics_control",3,0,1,0,2,file enable epos maxon motor position controller connect linux window good enough real time operation provide way improve coder formerly know real time workshop file enable epos motor controller connect linux machine raspberry obtain good performance compare windows example file download install epos raspberry copy usr lib replace usr include replace original definition file one include zip example step linux epos linux file lib arm rpi sudo libeposcmd usr lib libeposcmd sudo libftd usr lib libftd copy file definition ssd raspberry follow command sudo definition usr include extract file empty directory window computer open example test maxon linux slx modify accord node require epos mode three support mode position velocity current option change value pane run target hardware user password compile external mode check output epos motor controlpower electronics control,"['file', 'enable', 'epos', 'maxon', 'motor', 'position', 'controller', 'connect', 'linux', 'window', 'good', 'enough', 'real', 'time', 'operation', 'provide', 'way', 'improve', 'coder', 'formerly', 'know', 'real', 'time', 'workshop', 'file', 'enable', 'epos', 'motor', 'controller', 'connect', 'linux', 'machine', 'raspberry', 'obtain', 'good', 'performance', 'compare', 'windows', 'example', 'file', 'download', 'install', 'epos', 'raspberry', 'copy', 'usr', 'lib', 'replace', 'usr', 'include', 'replace', 'original', 'definition', 'file', 'one', 'include', 'zip', 'example', 'step', 'linux', 'epos', 'linux', 'file', 'lib', 'arm', 'rpi', 'sudo', 'libeposcmd', 'usr', 'lib', 'libeposcmd', 'sudo', 'libftd', 'usr', 'lib', 'libftd', 'copy', 'file', 'definition', 'ssd', 'raspberry', 'follow', 'command', 'sudo', 'definition', 'usr', 'include', 'extract', 'file', 'empty', 'directory', 'window', 'computer', 'open', 'example', 'test', 'maxon', 'linux', 'slx', 'modify', 'accord', 'node', 'require', 'epos', 'mode', 'three', 'support', 'mode', 'position', 'velocity', 'current', 'option', 'change', 'value', 'pane', 'run', 'target', 'hardware', 'user', 'password', 'compile', 'external', 'mode', 'check', 'output', 'epos', 'motor', 'controlpower', 'electronics', 'control']",0
1867,60249,Multilevel Inverter<p>Simulation of a new Multilevel Inverter topology Proposed in IEEE.</p>simulation,38,0,1,0,54,multilevel new multilevel inverter topology propose iee,"['multilevel', 'new', 'multilevel', 'inverter', 'topology', 'propose', 'iee']",3
1868,60250,Fifteen Level Inverter<p>Simulation of a 15 level inverter</p>simulation,36,0,1,0,50,fifteen level level,"['fifteen', 'level', 'level']",3
1869,60251,Simulation of Eleven level Inverter<p>Simulation of Eleven level inverter.</p>simulation,28,0,1,0,38,eleven level eleven level inverter,"['eleven', 'level', 'eleven', 'level', 'inverter']",3
1870,60252,"Simulation of Fifteen Level Inverter with PWM control<p>Simulation of new Fifteen Level Inverter with PWM control published in elsevier</p>simulation,electric_motor_control,power_conversion_control,power_electronics_control",250,17,3,0,343,fifteen level inverter pwm new fifteen level inverter pwm control publish motor controlpower conversion controlpower electronics control,"['fifteen', 'level', 'inverter', 'pwm', 'new', 'fifteen', 'level', 'inverter', 'pwm', 'control', 'publish', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
1871,60253,"Phase angle control of ac voltage controller<p>Phase angle control scheme is presented with single phase ac voltage controller. It can be used in single phase AC-DC and AC-AC conversion.</p>simulation,power_conversion_control,power_electronics_control",22,1,2,0,27,phase angle control voltage controllerphase angle control scheme present single phase voltage controller single phase conversion conversion controlpower electronics control,"['phase', 'angle', 'control', 'voltage', 'controllerphase', 'angle', 'control', 'scheme', 'present', 'single', 'phase', 'voltage', 'controller', 'single', 'phase', 'conversion', 'conversion', 'controlpower', 'electronics', 'control']",6
1872,60254,"Single phase inverter with SPWM control<p>Simulation of single phase DC-AC converter with sinusoidal PWM control.</p>simulation,electric_motor_control,power_conversion_control,power_electronics_control",23,1,2,0,28,single phase inverter spwm single phase converter sinusoidal pwm control motor controlpower conversion controlpower electronics control,"['single', 'phase', 'inverter', 'spwm', 'single', 'phase', 'converter', 'sinusoidal', 'pwm', 'control', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
1873,60277,"OPamp has been built for SIMPOWER SYSTEM<p>OPamp has been built for SIMPOWER SYSTEM, R2&gt;&gt;R1,Vin ~V1, gain~10^6</p>control,matlab,simulink",13,0,1,0,14,opamp build simpower systemopamp build simpower vin gain,"['opamp', 'build', 'simpower', 'systemopamp', 'build', 'simpower', 'vin', 'gain']",5
1874,60291,"Programming essentials, GUI development, Simulink modeling, MEX file generation, etc<p>These scripts and models highlight programming essentials of MATLAB, GUI model development, Simulink modeling, MEX file generation and other essential tools and functionalities of MATLAB/Simulink via examples given in the Book - ""MATLAB/Simulink Essentials"" by Sulaymon Eshkabilov.</p>coding,example,gui,mathematics,matlab,mex,modeling,optimization,simulation,simulink",90,2,2,0,94,program essential gui development mex file generation etcthese script highlight program essential gui development mex file generation essential tools functionality via example give book essential sulaymon eshkabilov,"['program', 'essential', 'gui', 'development', 'mex', 'file', 'generation', 'etcthese', 'script', 'highlight', 'program', 'essential', 'gui', 'development', 'mex', 'file', 'generation', 'essential', 'tools', 'functionality', 'via', 'example', 'give', 'book', 'essential', 'sulaymon', 'eshkabilov']",0
1875,60294,"Models and scripts - solutions of various types ODEs of 1, 2, 3 and n-th order<p>The models and scripts given in this folder are solutions of ODEs of 1, 2, 3 and n-th order IVPs which highlight numerical solution search methods of ODEs via Euler, Adams, Adams-Moulton, Runge-Kutta, Milne and other methods via specific examples.</p>data export,demo,differential equations,example,linear,mathematics,matlab,model,modeling,nonlinear,simulation,simulink,tutorial",295,0,1,0,381,script solution various type ode orderthe script give folder solution ode order ivp highlight numerical solution search method odes via euler adam adams moulton runge kutta milne method via specific example data,"['script', 'solution', 'various', 'type', 'ode', 'orderthe', 'script', 'give', 'folder', 'solution', 'ode', 'order', 'ivp', 'highlight', 'numerical', 'solution', 'search', 'method', 'odes', 'via', 'euler', 'adam', 'adams', 'moulton', 'runge', 'kutta', 'milne', 'method', 'via', 'specific', 'example', 'data']",5
1876,60296,"Models and Scripts for examples given in Chapter 7 - control applications and controller design.<p>Models and Scripts are solutions of the examples in system control analyses, control applications and controller design issues.</p>control,control design,signal processing,simulation",42,0,1,0,45,script example give chapter control application controller design script solution example control analyse control application controller design issue controlcontrol designsignal,"['script', 'example', 'give', 'chapter', 'control', 'application', 'controller', 'design', 'script', 'solution', 'example', 'control', 'analyse', 'control', 'application', 'controller', 'design', 'issue', 'controlcontrol', 'designsignal']",7
1877,60297,"Scripts and models for integration and numerical solution of non-linear equations<p>Scripts and models for numerical integration and numerical solution of non-linear equations</p>example,integration,linear,mathematics,nonlinear,polynomial,simulation,simulink",26,0,1,0,28,script integration numerical solution non linear numerical integration numerical solution non linear,"['script', 'integration', 'numerical', 'solution', 'non', 'linear', 'numerical', 'integration', 'numerical', 'solution', 'non', 'linear']",0
1878,60310,"This model demonstrate pyranometer analog to digital interfacing<p>This model demonstrate pyranometer analog to digital interfacing with Pyranometer Block and Single Ended ADC Block.The Pyranometer block compute solar radiation output in V/W/m^2 based on the solar radiation input (W/m^2) and pyranometer sensitivity (W/V/m^2).The Single Ended ADC block converts analog signal (V) to its digital representation in decimal value.</p>adc,analog to digital converter,pyranometer,single ended adc",28,2,2,0,32,demonstrate pyranometer analog digital interfacingthis demonstrate pyranometer analog digital interfacing pyranometer block single end adc block pyranometer block compute solar radiation output base solar radiation input pyranometer sensitivity single end adc block convert analog signal digital representation decimal value adcanalog digital end adc,"['demonstrate', 'pyranometer', 'analog', 'digital', 'interfacingthis', 'demonstrate', 'pyranometer', 'analog', 'digital', 'interfacing', 'pyranometer', 'block', 'single', 'end', 'adc', 'block', 'pyranometer', 'block', 'compute', 'solar', 'radiation', 'output', 'base', 'solar', 'radiation', 'input', 'pyranometer', 'sensitivity', 'single', 'end', 'adc', 'block', 'convert', 'analog', 'signal', 'digital', 'representation', 'decimal', 'value', 'adcanalog', 'digital', 'end', 'adc']",0
1879,60311,"Models and scripts simulating different mechanical and electro-mechanical systems<p>Models and scripts developed in MATLAB/Simulink to simulate mechanical and electro-mechanical systems, and various simulation examples, e.g. spring-mass-damper systems, thrown objects,  beams, etc.</p>analysis,application,automotive,differential equations,example,mathematics,matlab,matrix,model,modeling,nonlinear,simulation,simulink",428,5,2,0,538,script different mechanical electro mechanical systemsmodels script develop mechanical electro mechanical various example spring mass damper thrown object beam etc,"['script', 'different', 'mechanical', 'electro', 'mechanical', 'systemsmodels', 'script', 'develop', 'mechanical', 'electro', 'mechanical', 'various', 'example', 'spring', 'mass', 'damper', 'thrown', 'object', 'beam', 'etc']",5
1880,60384,"Meter to Measure the Ripple Factor of A Signal<p>In power electronic research, ripple factor is one of the quality aspect is taken into consideration. The output voltage of the switched-mode power supply (SMPS) such as buck converter, boost converter, SEPIC converter, flyback converter, forward converter, push-pull converter, etc contain ripple. A good SMPS has low ripple factor (1% is recommended). However, MATLAB/Simulink library does not include the meter to measure the ripple factor. Therefore, the meter attached here can measure the ripple factor easier compared to directly calculate from the signal waveform.Bug: The value is accurate during simulation only. However, after the simulation is complete, the value becomes error.</p>power_conversion_control,power_electronics_control,electrical,engineering,measurement,power electronics",12,1,2,0,13,meter measure ripple factor signalin power electronic research ripple factor one quality aspect take consideration output voltage switch mode power supply smps buck converter boost converter sepic converter flyback converter forward converter push pull converter etc contain ripple good smps low ripple factor recommend however include meter measure ripple factor therefore meter attach measure ripple factor easy compare directly calculate signal waveform bug value accurate however complete value become error power conversion controlpower electronics electronics,"['meter', 'measure', 'ripple', 'factor', 'signalin', 'power', 'electronic', 'research', 'ripple', 'factor', 'one', 'quality', 'aspect', 'take', 'consideration', 'output', 'voltage', 'switch', 'mode', 'power', 'supply', 'smps', 'buck', 'converter', 'boost', 'converter', 'sepic', 'converter', 'flyback', 'converter', 'forward', 'converter', 'push', 'pull', 'converter', 'etc', 'contain', 'ripple', 'good', 'smps', 'low', 'ripple', 'factor', 'recommend', 'however', 'include', 'meter', 'measure', 'ripple', 'factor', 'therefore', 'meter', 'attach', 'measure', 'ripple', 'factor', 'easy', 'compare', 'directly', 'calculate', 'signal', 'waveform', 'bug', 'value', 'accurate', 'however', 'complete', 'value', 'become', 'error', 'power', 'conversion', 'controlpower', 'electronics', 'electronics']",4
1881,60385,"battery<p>battery</p>battery_system_management,power_electronics_control,battery",48,0,1,0,60,managementpower electronics controlbattery,"['managementpower', 'electronics', 'controlbattery']",1
1882,60412,"Fixed Capacitor Thyristor controlled reactor simulation<p>Hi this simulation file is for one of the type of  static var compensator(SVC) which is Fixed Capacitor Thyristor Controlled reactor.Here simple firing technique &amp; subsystem regarding FCTCR is done.for any query plz contact me</p>anish salvi,fctcr matlab simulation",79,2,2,0,78,fix capacitor thyristor control reactor file one type static var compensator svc fixed capacitor thyristor control reactor simple fire technique amp subsystem regard fctcr query plz contact meanish salvifctcr,"['fix', 'capacitor', 'thyristor', 'control', 'reactor', 'file', 'one', 'type', 'static', 'var', 'compensator', 'svc', 'fixed', 'capacitor', 'thyristor', 'control', 'reactor', 'simple', 'fire', 'technique', 'amp', 'subsystem', 'regard', 'fctcr', 'query', 'plz', 'contact', 'meanish', 'salvifctcr']",5
1883,60425,no<p>about single phase inverter and its control strategy</p>power electronics,80,1,2,0,84,noabout single phase inverter control strategypower electronics,"['noabout', 'single', 'phase', 'inverter', 'control', 'strategypower', 'electronics']",1
1884,60437,"Third Harmonic Injection PWM<p>This Simulink Model simulates the Sinusoidal Pulse width modulation with third harmonic injection for a two-level three-phase inverter.  A dynamic graph is used to show  the space sector  as well as SVPWM. This model is easy to use and basically used to demonstare the basics and concept of Sinusoidal Pulse Width Modulation technique.</p>electric_motor_control,power_conversion_control,power_electronics_control,plot,power electronics,pwm,simulation",97,3,3,0,116,third harmonic injection pwmthis sinusoidal pulse width modulation third harmonic injection two level three phase inverter dynamic graph show space sector well svpwm easy basically demonstare basic concept sinusoidal pulse width modulation technique electric motor controlpower conversion controlpower electronics,"['third', 'harmonic', 'injection', 'pwmthis', 'sinusoidal', 'pulse', 'width', 'modulation', 'third', 'harmonic', 'injection', 'two', 'level', 'three', 'phase', 'inverter', 'dynamic', 'graph', 'show', 'space', 'sector', 'well', 'svpwm', 'easy', 'basically', 'demonstare', 'basic', 'concept', 'sinusoidal', 'pulse', 'width', 'modulation', 'technique', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
1885,60438,"Selective Harmonic Elimination<p>This Simulink Model simulates  a Selective harmonic elimination. Four dominant harmonics are removed in this simulink model which are present in single-phase PWM inverter. See the FFT for the output voltage waveform and current waveforms. Interestingly you can see that 3th, 5th, 7th, and 9th harmonic content is zero.The angles are computed using the Newton Raphson Method (see File--&gt;Model Properties --&gt;Model Properties --&gt;CallBacks--&gt;InitFcn).  To choose  the modulation Index (Go File--&gt;Model Properties --&gt;Model Properties --&gt;CallBacks--&gt;InitFcn)  and choose ii = (m)*10 - 1.    ii = 91, it means  m = 0.9;</p>electric_motor_control,power_conversion_control,power_electronics_control,power electronics,pwm,she",97,3,3,0,116,selective harmonic eliminationthis selective harmonic elimination four dominant harmonic remove present single phase pwm inverter see fft output voltage waveform current waveform interestingly see harmonic content zero angle compute newton raphson method see file property property callback initfcn choose modulation index file property property callback initfcn choose mean electric motor controlpower conversion controlpower electronics controlpower,"['selective', 'harmonic', 'eliminationthis', 'selective', 'harmonic', 'elimination', 'four', 'dominant', 'harmonic', 'remove', 'present', 'single', 'phase', 'pwm', 'inverter', 'see', 'fft', 'output', 'voltage', 'waveform', 'current', 'waveform', 'interestingly', 'see', 'harmonic', 'content', 'zero', 'angle', 'compute', 'newton', 'raphson', 'method', 'see', 'file', 'property', 'property', 'callback', 'initfcn', 'choose', 'modulation', 'index', 'file', 'property', 'property', 'callback', 'initfcn', 'choose', 'mean', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower']",4
1886,60454,"pv cell modelling<p>pv cell modelling</p>signal processing,simulink",53,3,3,0,55,cell modellingpv cell modellingsignal,"['cell', 'modellingpv', 'cell', 'modellingsignal']",8
1887,60461,"SVPWM<p>This model simulates the space vector modulated PWM to generate the output voltage. Reference voltage vector converted in to dq rotating phase. A matlab function is employed to determine the segment number and related ON-times(ti,t2,t0/2). A dynamic graph is used to show the SVM trajectory. This model is easy to use and basically used to demonstare the basics and concept of SVPWM technique.</p>electric_motor_control,power_conversion_control,power_electronics_control,3phase,inverter,pwm,svpwm",120,4,3,0,149,svpwmthis space vector modulate pwm generate output voltage reference voltage vector convert rotate phase function employ determine segment number relate time tit dynamic graph show svm trajectory easy basically demonstare basic concept svpwm technique electric motor controlpower conversion controlpower electronics control,"['svpwmthis', 'space', 'vector', 'modulate', 'pwm', 'generate', 'output', 'voltage', 'reference', 'voltage', 'vector', 'convert', 'rotate', 'phase', 'function', 'employ', 'determine', 'segment', 'number', 'relate', 'time', 'tit', 'dynamic', 'graph', 'show', 'svm', 'trajectory', 'easy', 'basically', 'demonstare', 'basic', 'concept', 'svpwm', 'technique', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1888,60464,"Intelligent Controller Based selection of Optimal Size of Renewble Energy Sources<p>Intelligent Controller Based selection of Optimal Size of Renewble Energy Sources</p>ann,intelligent controller based selection of optimal size of renewb",296,42,4,0,260,intelligent controller base selection optimal size renewble energy controller base selection optimal size renewble energy controller base selection optimal size renewb,"['intelligent', 'controller', 'base', 'selection', 'optimal', 'size', 'renewble', 'energy', 'controller', 'base', 'selection', 'optimal', 'size', 'renewble', 'energy', 'controller', 'base', 'selection', 'optimal', 'size', 'renewb']",4
1889,60477,"Study of THD(%) Spectrum of a 12-Pulse Series Type Diode Rectifier.<p>The 12-pulse rectifier is composed of a phase-shifting transformer with 2 secondary windings feedinga set of identical six-pulse rectifiers.The transformer primary winding is Y-connected and secondary windings are Y and delta connected. Due to delta windings at secondary side, we get a phase shift of 30 degrees. As a result, harmonics of the input line currents are greatly reduced and THD is greatly reduced as compared to the conventional 6-pulse rectifier.</p>12pulse,converters,phaseshifting transformer,power electronics,rectifier,simulink",27,0,1,0,34,study thd spectrum pulse series type diode rectifier pulse rectifier composed phase shift transformer secondary winding feedinga set identical six pulse rectifier transformer primary winding connect secondary winding delta connect due delta winding secondary side get phase shift degree result harmonic input line current greatly reduce thd greatly reduce compare conventional pulse rectifier,"['study', 'thd', 'spectrum', 'pulse', 'series', 'type', 'diode', 'rectifier', 'pulse', 'rectifier', 'composed', 'phase', 'shift', 'transformer', 'secondary', 'winding', 'feedinga', 'set', 'identical', 'six', 'pulse', 'rectifier', 'transformer', 'primary', 'winding', 'connect', 'secondary', 'winding', 'delta', 'connect', 'due', 'delta', 'winding', 'secondary', 'side', 'get', 'phase', 'shift', 'degree', 'result', 'harmonic', 'input', 'line', 'current', 'greatly', 'reduce', 'thd', 'greatly', 'reduce', 'compare', 'conventional', 'pulse', 'rectifier']",4
1890,60478,"2-level Voltage Source Inverter with Space Vector Modulation and Even-Order Harmonics Elimination.<p>Space Vector Pulse Width Modulation (SVPWM) is basically a modulation technique based on modulation of input dc signal (constant value) into output pulses of different width and different, usually 5 or 7, amplitude levels thus generating an AC signal which could be smooth out by proper filtering or selecting a proper inductive load. Space vector modulation scheme is superior to Pulse Width Modulation (PWM) scheme because there are two main problems in PWM, harmonic distortion and switching speed, and both of these problems are overcome by implementation of the SpaceVector PWM (SVPWM) technique.One improved version of space vector modulation by using a modified two-level voltage source inverter for eliminating the even-order harmonics is also used.</p>electric_motor_control,power_conversion_control,power_electronics_control,evenorder harmonics elimination,power electronics,simulink,space vector modulation,svm,thd,twolevel voltagesource inverter",208,14,2,0,257,level voltage source inverter space vector modulation even order harmonic elimination space vector pulse width modulation svpwm basically modulation technique base modulation input signal constant value output pulse different width different usually amplitude level thus generate signal could smooth proper filter select proper inductive load space vector modulation scheme superior pulse width modulation pwm scheme two main problem pwm harmonic distortion switch speed problem overcome implementation spacevector pwm svpwm technique one improve version space vector modulation modify two level voltage source inverter eliminate even order harmonic also electric motor controlpower conversion controlpower electronics harmonic vector voltagesource inverter,"['level', 'voltage', 'source', 'inverter', 'space', 'vector', 'modulation', 'even', 'order', 'harmonic', 'elimination', 'space', 'vector', 'pulse', 'width', 'modulation', 'svpwm', 'basically', 'modulation', 'technique', 'base', 'modulation', 'input', 'signal', 'constant', 'value', 'output', 'pulse', 'different', 'width', 'different', 'usually', 'amplitude', 'level', 'thus', 'generate', 'signal', 'could', 'smooth', 'proper', 'filter', 'select', 'proper', 'inductive', 'load', 'space', 'vector', 'modulation', 'scheme', 'superior', 'pulse', 'width', 'modulation', 'pwm', 'scheme', 'two', 'main', 'problem', 'pwm', 'harmonic', 'distortion', 'switch', 'speed', 'problem', 'overcome', 'implementation', 'spacevector', 'pwm', 'svpwm', 'technique', 'one', 'improve', 'version', 'space', 'vector', 'modulation', 'modify', 'two', 'level', 'voltage', 'source', 'inverter', 'eliminate', 'even', 'order', 'harmonic', 'also', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'harmonic', 'vector', 'voltagesource', 'inverter']",3
1891,60479,"THD Study of Seven-level CHB Inverter using Phased-Shifted and Level-Shifted PWM<p>In phased-shifted modulation, a multilevel inverter with m voltage levels requires (m â 1) triangular carriers. In the phase-shifted multicarrier modulation, all the triangular carriers have the same frequency and the same peak-to-peak amplitude, but there is a phase shift between any two adjacent carrier waves, given by Æcr = 360Â°/(m â 1). In the case of a 7-level CHB (m = 7), as we used in our project, all carrier waves (7-1 = 6) are 60o apart from the neighboring carrier waves. Similar to the phase-shifted modulation, an m-level CHB inverter using level shifted multicarrier modulation scheme requires (m â 1) triangular carriers, all having the same frequency and amplitude. The (m â 1) triangular carriers are vertically displaced such that the bands they occupy are contiguous. The frequency modulation index is given by mf = fcr/fm. In the case of a 7-level CHB (m = 7), as we used in our project, all carrier waves (7-1 = 6) are displaced from the neighbouring carrier waves.</p>electric_motor_control,power_conversion_control,power_electronics_control,cascaded h_bridge inverter,chb converter,levelshifted carrierbased modulation,phaseshifted carrierbased modulation,power electronics,sevenlevel converter,simulink",447,32,2,0,556,thd study seven level chb inverter phase shift level shift pwmin phase shifted modulation multilevel inverter voltage level require triangular carrier phase shift multicarrier modulation triangular carrier frequency peak peak amplitude phase shift two adjacent carrier wave give Éµcr case level chb project carrier wave apart neighbor carrier wave similar phase shift modulation level chb inverter level shift multicarrier modulation scheme require triangular carrier frequency amplitude triangular carrier vertically displace band occupy contiguous frequency modulation index give fcr case level chb project carrier wave displace neighbour carrier wave electric motor controlpower conversion controlpower electronics controlcascaded bridge inverterchb carrierbased carrierbased modulationpower,"['thd', 'study', 'seven', 'level', 'chb', 'inverter', 'phase', 'shift', 'level', 'shift', 'pwmin', 'phase', 'shifted', 'modulation', 'multilevel', 'inverter', 'voltage', 'level', 'require', 'triangular', 'carrier', 'phase', 'shift', 'multicarrier', 'modulation', 'triangular', 'carrier', 'frequency', 'peak', 'peak', 'amplitude', 'phase', 'shift', 'two', 'adjacent', 'carrier', 'wave', 'give', 'Éµcr', 'case', 'level', 'chb', 'project', 'carrier', 'wave', 'apart', 'neighbor', 'carrier', 'wave', 'similar', 'phase', 'shift', 'modulation', 'level', 'chb', 'inverter', 'level', 'shift', 'multicarrier', 'modulation', 'scheme', 'require', 'triangular', 'carrier', 'frequency', 'amplitude', 'triangular', 'carrier', 'vertically', 'displace', 'band', 'occupy', 'contiguous', 'frequency', 'modulation', 'index', 'give', 'fcr', 'case', 'level', 'chb', 'project', 'carrier', 'wave', 'displace', 'neighbour', 'carrier', 'wave', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcascaded', 'bridge', 'inverterchb', 'carrierbased', 'carrierbased', 'modulationpower']",4
1892,60482,"3 level NPC using Phase Disposition PWM (PDPWM)<p>This model simulates a Three-level Neutral Point Clamped (NPC)  using Phase Disposition PWM (PDPWM) technique. In addition, several parameters (THD, WTHD, fundamental voltage etc) are calculated after the simulation.</p>electric_motor_control,power_conversion_control,power_electronics_control,npc,pdpwm,power electronics,pwm",130,10,3,0,154,level npc phase disposition pwm pdpwm three level neutral point clamp npc phase disposition pwm pdpwm technique addition several parameter thd wthd fundamental voltage etc calculate electric motor controlpower conversion controlpower electronics electronicspwm,"['level', 'npc', 'phase', 'disposition', 'pwm', 'pdpwm', 'three', 'level', 'neutral', 'point', 'clamp', 'npc', 'phase', 'disposition', 'pwm', 'pdpwm', 'technique', 'addition', 'several', 'parameter', 'thd', 'wthd', 'fundamental', 'voltage', 'etc', 'calculate', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'electronicspwm']",3
1893,60483,"Three-level  NPC using Phase Opposition Disposition PWM technique<p>This model simulates a Three-level Neutral Point Clamped (NPC) using Phase Opposition Disposition PWM (PODPWM) technique. In addition, several parameters (THD, WTHD, fundamental voltage etc) are calculated after the simulation.</p>electric_motor_control,power_conversion_control,power_electronics_control,npc,pod,power electronics,pwm",130,10,3,0,154,three level npc phase opposition disposition pwm techniquethis three level neutral point clamp npc phase opposition disposition pwm podpwm technique addition several parameter thd wthd fundamental voltage etc calculate electric motor controlpower conversion controlpower electronics electronicspwm,"['three', 'level', 'npc', 'phase', 'opposition', 'disposition', 'pwm', 'techniquethis', 'three', 'level', 'neutral', 'point', 'clamp', 'npc', 'phase', 'opposition', 'disposition', 'pwm', 'podpwm', 'technique', 'addition', 'several', 'parameter', 'thd', 'wthd', 'fundamental', 'voltage', 'etc', 'calculate', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'electronicspwm']",3
1894,60484,"Three-level NPC using Phase Shifted PWM  (PSPWM)<p>This model simulates a Three-level Neutral Point Clamped (NPC) using Phase Shifted PWM  (PSPWM) technique. In addition, several parameters (THD, WTHD, fundamental voltage etc) are calculated after the simulation.</p>electric_motor_control,power_conversion_control,power_electronics_control,npc,power electronics,pspwm,pwm",128,10,3,0,152,three level npc phase shift pwm pspwm three level neutral point clamp npc phase shift pwm pspwm technique addition several parameter thd wthd fundamental voltage etc calculate electric motor controlpower conversion controlpower electronics controlnpcpower,"['three', 'level', 'npc', 'phase', 'shift', 'pwm', 'pspwm', 'three', 'level', 'neutral', 'point', 'clamp', 'npc', 'phase', 'shift', 'pwm', 'pspwm', 'technique', 'addition', 'several', 'parameter', 'thd', 'wthd', 'fundamental', 'voltage', 'etc', 'calculate', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlnpcpower']",3
1895,60485,"Polar diagram for unbalance 3 phase system<p>This model simulates an unbalance 3 phase system. in addition, a dynamic polar diagram is shown to check the voltage phasors.</p>3 phase,phasor,polar diagram",98,2,3,0,94,polar diagram unbalance phase systemthis unbalance phase addition dynamic polar diagram show check voltage phasors diagram,"['polar', 'diagram', 'unbalance', 'phase', 'systemthis', 'unbalance', 'phase', 'addition', 'dynamic', 'polar', 'diagram', 'show', 'check', 'voltage', 'phasors', 'diagram']",4
1896,60503,"Four-level NPC using Phase Disposition PWM<p>This model simulates a Four-level Neutral Point Clamped (NPC) using Phase Disposition PWM (PDPWM) technique.</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,npc,pdpwm,pwm",166,10,3,0,205,four level npc phase disposition pwmthis four level neutral point clamp npc phase disposition pwm pdpwm technique electric motor controlpower conversion controlpower electronics,"['four', 'level', 'npc', 'phase', 'disposition', 'pwmthis', 'four', 'level', 'neutral', 'point', 'clamp', 'npc', 'phase', 'disposition', 'pwm', 'pdpwm', 'technique', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1897,60505,"Five-level NPC - Phase Disposition PWM<p>This model simulates a five-level Neutral Point Clamped (NPC) using Phase Disposition PWM (PDPWM) technique.</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,npc,pdpwm,pwm",319,34,4,0,332,five level npc phase disposition pwmthis five level neutral point clamp npc phase disposition pwm pdpwm technique electric motor controlpower conversion controlpower electronics,"['five', 'level', 'npc', 'phase', 'disposition', 'pwmthis', 'five', 'level', 'neutral', 'point', 'clamp', 'npc', 'phase', 'disposition', 'pwm', 'pdpwm', 'technique', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
1898,60543,"A reduced switch count 5-level boost PFC rectifier has been presented.<p>A reduced switch count 5-level boost PFC rectifier has been presented. A simple controller has been implemented on the proposed converter to generate a constant voltage at the output while generating a five-level voltage waveform at the input without connecting the load to the neutral point of the DC bus capacitors.Multicarrier PWM technique has been used to produce switching pulses from control signal.</p>boost converter,pfc rectifier,electric_motor_control,power_conversion_control,power_electronics_control",112,8,4,0,131,reduce switch count level boost pfc rectifier present reduced switch count level boost pfc rectifier present simple controller implement propose converter generate constant voltage output generate five level voltage waveform input without connect load neutral point bus capacitor multicarrier pwm technique produce switch pulse control signal boost converterpfc motor controlpower conversion controlpower electronics control,"['reduce', 'switch', 'count', 'level', 'boost', 'pfc', 'rectifier', 'present', 'reduced', 'switch', 'count', 'level', 'boost', 'pfc', 'rectifier', 'present', 'simple', 'controller', 'implement', 'propose', 'converter', 'generate', 'constant', 'voltage', 'output', 'generate', 'five', 'level', 'voltage', 'waveform', 'input', 'without', 'connect', 'load', 'neutral', 'point', 'bus', 'capacitor', 'multicarrier', 'pwm', 'technique', 'produce', 'switch', 'pulse', 'control', 'signal', 'boost', 'converterpfc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1899,60550,"Smart Microgrid<p>In this research work mainly concentrate to develop intelligent control based grid integration of hybrid PV-Wind power system along with battery storage system. The grid integration hybrid PV â Wind along with intelligent controller based battery management system [BMS] has been developed a simulation model in Matlab and analysis the system performance under normal condition.  The same system has been simulated with UPFC and analysed the system performance under different fault condition.</p>battery management system,fuzzy logic,hybrid pvwind,microgrid,pvwindbattery,battery_system_management,power_electronics_control,nyc",1085,63,6,0,1308,smart microgridin research work mainly concentrate develop intelligent control base grid integration hybrid wind power along battery storage grid integration hybrid wind along intelligent controller base battery management develop analysis performance normal condition upfc analyse performance different fault condition battery management systemfuzzy logichybrid managementpower electronics controlnyc,"['smart', 'microgridin', 'research', 'work', 'mainly', 'concentrate', 'develop', 'intelligent', 'control', 'base', 'grid', 'integration', 'hybrid', 'wind', 'power', 'along', 'battery', 'storage', 'grid', 'integration', 'hybrid', 'wind', 'along', 'intelligent', 'controller', 'base', 'battery', 'management', 'develop', 'analysis', 'performance', 'normal', 'condition', 'upfc', 'analyse', 'performance', 'different', 'fault', 'condition', 'battery', 'management', 'systemfuzzy', 'logichybrid', 'managementpower', 'electronics', 'controlnyc']",4
1900,60564,trial<p>hello im just new in learning how to share my project but no worries a my next project is about to done and i will share a real circuit after this &gt;peace no war</p>simulation,6,0,1,0,3,trialhello new learn share project worry next project share real circuit peace,"['trialhello', 'new', 'learn', 'share', 'project', 'worry', 'next', 'project', 'share', 'real', 'circuit', 'peace']",0
1901,60569,"Trial wind turbine model with PMSG<p>This is my thesis project , Wind Turbine Modelling with PMSG</p>simulation",112,6,3,0,117,trial wind turbine pmsgthis thesis project wind turbine modelling,"['trial', 'wind', 'turbine', 'pmsgthis', 'thesis', 'project', 'wind', 'turbine', 'modelling']",4
1902,60620,"Passive Harmonic Filters are generally used in Power System for Harmonic mitigation.<p>Due to Power Electronic Devices used in Power Conditioning, the quality of Power system is degrading day by day.And hence Passive Shunt filters are designed  &amp; implemented through this Simulink model</p>anish salvi,harmonic filter in power system,passive harmonic filters,power quality",43,2,2,0,35,passive harmonic filter generally power harmonic mitigation due power electronic device power conditioning quality power degrade day day hence passive shunt filter design amp implement modelanish salviharmonic filter power systempassive harmonic filterspower quality,"['passive', 'harmonic', 'filter', 'generally', 'power', 'harmonic', 'mitigation', 'due', 'power', 'electronic', 'device', 'power', 'conditioning', 'quality', 'power', 'degrade', 'day', 'day', 'hence', 'passive', 'shunt', 'filter', 'design', 'amp', 'implement', 'modelanish', 'salviharmonic', 'filter', 'power', 'systempassive', 'harmonic', 'filterspower', 'quality']",4
1903,60667,"DC Motor SImulink<p>DC Motor SImulink , from mathworks tutorial online</p>electric_motor_control,power_conversion_control,power_electronics_control,automotive,dc,motor",3,0,1,0,2,motor motor mathworks tutorial onlineelectric motor controlpower conversion controlpower electronics,"['motor', 'motor', 'mathworks', 'tutorial', 'onlineelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1904,60695,"In-Phase Disposition and Alternative-Phase Opposition Disposition for Diode Clamped Inverters<p>Investigation of multilevel (three-level and four-level) diode clamped inverters with carrier based modulation schemes, IPD and APOD.</p>alternativephase opposition disposition,apod,carrierbased modulation,diodeclamped,fourlevel,inphase disposition,inverters,ipd,levelshifted modulation,power electronics,pwm,simulink,thd,threelevel",397,12,2,0,435,phase disposition alternative phase opposition disposition diode clamp multilevel three level four level diode clamp inverter carrier base modulation scheme ipd apod opposition modulationpower,"['phase', 'disposition', 'alternative', 'phase', 'opposition', 'disposition', 'diode', 'clamp', 'multilevel', 'three', 'level', 'four', 'level', 'diode', 'clamp', 'inverter', 'carrier', 'base', 'modulation', 'scheme', 'ipd', 'apod', 'opposition', 'modulationpower']",4
1905,60732,"Programming Digital Output using Simulink<p>It generates a train of pulse at Arduino Nano V3.0 Pins of desired duty cycle, frequency, phase difference.</p>arduino,arduino nano,digital output,simulink",10,4,2,3,6,program digital output generates train pulse arduino nano pin desire duty cycle frequency phase difference arduinoarduino nanodigital,"['program', 'digital', 'output', 'generates', 'train', 'pulse', 'arduino', 'nano', 'pin', 'desire', 'duty', 'cycle', 'frequency', 'phase', 'difference', 'arduinoarduino', 'nanodigital']",4
1906,60790,"A Boost Converter<p>A boost converter (step-up converter) is a DC-to-DC power converter that steps up voltage (while stepping down current) from its input (supply) to its output (load). It is a class of switched-mode power supply (SMPS) containing at least two semiconductors (a diode and a transistor) and at least one energy storage element: a capacitor, inductor, or the two in combination. To reduce voltage ripple, filters made of capacitors (sometimes in combination with inductors) are normally added to such a converter's output (load-side filter) and input (supply-side filter).here you can modify the inputs and duty ratio for your needs</p>power_conversion_control,power_electronics_control,power electronics",14,0,1,0,22,boost convertera boost converter step converter power converter step voltage step current input supply output load class switch mode power supply smps contain least two semiconductor diode transistor least one energy storage element capacitor inductor two combination reduce voltage ripple filter make capacitor sometimes combination inductor normally add converter output load side filter input supply side filter modify input duty ratio needspower conversion controlpower electronics controlpower electronics,"['boost', 'convertera', 'boost', 'converter', 'step', 'converter', 'power', 'converter', 'step', 'voltage', 'step', 'current', 'input', 'supply', 'output', 'load', 'class', 'switch', 'mode', 'power', 'supply', 'smps', 'contain', 'least', 'two', 'semiconductor', 'diode', 'transistor', 'least', 'one', 'energy', 'storage', 'element', 'capacitor', 'inductor', 'two', 'combination', 'reduce', 'voltage', 'ripple', 'filter', 'make', 'capacitor', 'sometimes', 'combination', 'inductor', 'normally', 'add', 'converter', 'output', 'load', 'side', 'filter', 'input', 'supply', 'side', 'filter', 'modify', 'input', 'duty', 'ratio', 'needspower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",3
1907,60791,"Buck converter<p>A buck converter (step-down converter) is a DC-to-DC power converter which steps down voltage (while stepping up current) from its input (supply) to its output (load).here you can modify input and duty ratio as your needs</p>power_conversion_control,power_electronics_control,electronics,power electronics",14,0,1,0,23,buck convertera buck converter step converter power converter step voltage step current input supply output load modify input duty ratio needspower conversion controlpower electronics electronics,"['buck', 'convertera', 'buck', 'converter', 'step', 'converter', 'power', 'converter', 'step', 'voltage', 'step', 'current', 'input', 'supply', 'output', 'load', 'modify', 'input', 'duty', 'ratio', 'needspower', 'conversion', 'controlpower', 'electronics', 'electronics']",1
1908,60792,"Single phase full controlled converter<p>The single phase fully controlled rectifier allows conversion of single phase AC into DC. Normally this is used in various applications such as battery charging</p>battery_system_management,power_conversion_control,power_electronics_control,power electronics",11,0,1,0,17,single phase full control converterthe single phase fully control rectifier allow conversion single phase normally various application battery chargingbattery managementpower conversion controlpower electronics controlpower electronics,"['single', 'phase', 'full', 'control', 'converterthe', 'single', 'phase', 'fully', 'control', 'rectifier', 'allow', 'conversion', 'single', 'phase', 'normally', 'various', 'application', 'battery', 'chargingbattery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",1
1909,60793,audio recording<p>audio recording in simulink and with ADC and DAC</p>audio processing,6,0,1,0,5,audio recordingaudio record adc dacaudio processing,"['audio', 'recordingaudio', 'record', 'adc', 'dacaudio', 'processing']",8
1910,60794,"single phase half controlled rectifier<p>The single phase fully controlled rectifier allows conversion of single phase AC into DC. Normally this is used in various applications such as battery charging</p>battery_system_management,power_conversion_control,power_electronics_control,power,power electronics",8,0,1,0,11,single phase half control rectifierthe single phase fully control rectifier allow conversion single phase normally various application battery chargingbattery managementpower conversion controlpower electronics electronics,"['single', 'phase', 'half', 'control', 'rectifierthe', 'single', 'phase', 'fully', 'control', 'rectifier', 'allow', 'conversion', 'single', 'phase', 'normally', 'various', 'application', 'battery', 'chargingbattery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'electronics']",1
1911,60816,"motor,åè½¬<p>Asynchronous motor reverse</p>electric_motor_control,power_electronics_control,mathematics",13,0,1,0,18,motor reverseelectric motor controlpower electronics,"['motor', 'reverseelectric', 'motor', 'controlpower', 'electronics']",6
1912,60824,"The operation and performance of current source inverters and rectifier modulated by SHE.<p>When input current from DC power supply or DC capacitor is maintained constant regardless of the voltage and current requirements at the load, the converter is called Current Source Inverter (CSI). When input current from AC power source is kept constant regardless of the changes in the out load, the converter is called Current Source Rectifier (CSR).We are investigating the operation and performance of current source inverters and current source rectifier, both modulated by selective harmonic elimination (SHE) schemes.Inverter with Selective Harmonics Elimination (SHE) modulating scheme is used. SHE pattern to selectively eliminate 5th, 7th and 11th harmonics with no bypass pulses.Rectifier with SHE modulating scheme using the given angle values from the table in the textbook is used for eliminating 11th and 13th harmonics.</p>electric_motor_control,power_conversion_control,power_electronics_control,converter,current_source,inverter,modulation,power_electronics,pwm,rectifier,selective _harmonic _elimination,she,simulink",174,4,2,0,199,operation performance current source inverter rectifier modulate input current power supply capacitor maintain constant regardless voltage current requirement load converter call current source inverter csi input current power source keep constant regardless change load converter call current source rectifier csr investigate operation performance current source inverter current source rectifier modulate selective harmonic elimination scheme inverter selective harmonic elimination modulate scheme pattern selectively eliminate harmonic bypass pulse rectifier modulate scheme give angle value table textbook eliminate harmonic electric motor controlpower conversion controlpower electronics harmonic,"['operation', 'performance', 'current', 'source', 'inverter', 'rectifier', 'modulate', 'input', 'current', 'power', 'supply', 'capacitor', 'maintain', 'constant', 'regardless', 'voltage', 'current', 'requirement', 'load', 'converter', 'call', 'current', 'source', 'inverter', 'csi', 'input', 'current', 'power', 'source', 'keep', 'constant', 'regardless', 'change', 'load', 'converter', 'call', 'current', 'source', 'rectifier', 'csr', 'investigate', 'operation', 'performance', 'current', 'source', 'inverter', 'current', 'source', 'rectifier', 'modulate', 'selective', 'harmonic', 'elimination', 'scheme', 'inverter', 'selective', 'harmonic', 'elimination', 'modulate', 'scheme', 'pattern', 'selectively', 'eliminate', 'harmonic', 'bypass', 'pulse', 'rectifier', 'modulate', 'scheme', 'give', 'angle', 'value', 'table', 'textbook', 'eliminate', 'harmonic', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'harmonic']",3
1913,60848,"This is a set of function and Simulink library for simulating a hydronic network.<p>This is a set of Matlab function and a Simulink library which can be used for simulation of the hydronic (fluid used for heat delivery) networks, where the heat exchangers are used for heating of the zone (a room). It supposes that the connection of individual branches in zones is parallel. Each zone has its own independent controller, responsible for keeping the given temperature in the zone. But all zones have a common pressure source, hence they affect each other through the hydraulic interactions. This set of files is a supplementary material of the paper: I. Herman, Å . Knotek, J. DostÃ¡l, V. Prajzner: Stability of hydronic networks with independent zone controllers, submittedAnyone interested in the paper can download these files and test validity of the results presented in the paper.</p>article,control design,differential equations,example,simulation",354,48,2,48,426,set function hydronic network set function hydronic fluid heat delivery networks heat exchanger heat zone room suppose connection individual branch zone parallel zone independent controller responsible keep give temperature zone zone common pressure source hence affect hydraulic interaction set file supplementary material paper herman knotek dostÃ¡l prajzner stability hydronic network independent zone controller submittedanyone interested paper download file test validity result present paper articlecontrol,"['set', 'function', 'hydronic', 'network', 'set', 'function', 'hydronic', 'fluid', 'heat', 'delivery', 'networks', 'heat', 'exchanger', 'heat', 'zone', 'room', 'suppose', 'connection', 'individual', 'branch', 'zone', 'parallel', 'zone', 'independent', 'controller', 'responsible', 'keep', 'give', 'temperature', 'zone', 'zone', 'common', 'pressure', 'source', 'hence', 'affect', 'hydraulic', 'interaction', 'set', 'file', 'supplementary', 'material', 'paper', 'herman', 'knotek', 'dostÃ¡l', 'prajzner', 'stability', 'hydronic', 'network', 'independent', 'zone', 'controller', 'submittedanyone', 'interested', 'paper', 'download', 'file', 'test', 'validity', 'result', 'present', 'paper', 'articlecontrol']",5
1914,60850,"full wave rectifier<p>It is most frequently-used circuit for electronic dc power supplies.</p>power_conversion_control,power_electronics_control,power electronics",14,0,1,0,12,full wave rectifierit frequently circuit electronic power supply power conversion controlpower electronics controlpower electronics,"['full', 'wave', 'rectifierit', 'frequently', 'circuit', 'electronic', 'power', 'supply', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",6
1915,60859,"Induction Machine - Steady State Equivalent Circuit<p>This model simulates  the equivalent circuit model for Induction Machines in the steady state using the Phasor Simulation Method . Airgap power, Mechanical power, Electrical power, Rotor copper losses  ...etc are calculated during the simulation.</p>induction machine,phasor",52,2,2,0,50,induction machine steady state equivalent circuitthis equivalent circuit induction machine steady state phasor method airgap power mechanical power electrical power rotor copper loss etc calculate induction machinephasor,"['induction', 'machine', 'steady', 'state', 'equivalent', 'circuitthis', 'equivalent', 'circuit', 'induction', 'machine', 'steady', 'state', 'phasor', 'method', 'airgap', 'power', 'mechanical', 'power', 'electrical', 'power', 'rotor', 'copper', 'loss', 'etc', 'calculate', 'induction', 'machinephasor']",4
1916,60874,"A collection of MATLAB files for fractional calculus and fractional-order control<p>A companion with the book. Dingyu Xue. Fractional-order Control Systems - Fundamentals and Numerical Implementations. Berlin: de Gruyter,  2017. Also a standard toolbox for fractional calculus and fractional-order control. (1) High precision algorithms are provided for fractional derivatives and fractional differential equations; (2) Two classes, FOTF and FOSS, are provided to fully support the modelling, analysis and design of multivariable fractional-order systems;(3) A Simulink blockset, fotflib, is provided. Together with the modelling schemes proposed, fractional-order systems of any complexity can be modeled and simulated.</p>fractional calculus,fractional derivatives,fractionalorder control,multivariable systems,optimal control",1566,200,4,0,1512,collection file fractional calculus fractional order controla companion book dingyu xue fractional order control fundamental numerical implementation berlin gruyter also standard toolbox fractional calculus fractional order control high precision algorithm provide fractional derivative fractional differential equation two class fotf provide fully support analysis design multivariable fractional order blockset fotflib provide together scheme propose fractional order complexity fractional systemsoptimal control,"['collection', 'file', 'fractional', 'calculus', 'fractional', 'order', 'controla', 'companion', 'book', 'dingyu', 'xue', 'fractional', 'order', 'control', 'fundamental', 'numerical', 'implementation', 'berlin', 'gruyter', 'also', 'standard', 'toolbox', 'fractional', 'calculus', 'fractional', 'order', 'control', 'high', 'precision', 'algorithm', 'provide', 'fractional', 'derivative', 'fractional', 'differential', 'equation', 'two', 'class', 'fotf', 'provide', 'fully', 'support', 'analysis', 'design', 'multivariable', 'fractional', 'order', 'blockset', 'fotflib', 'provide', 'together', 'scheme', 'propose', 'fractional', 'order', 'complexity', 'fractional', 'systemsoptimal', 'control']",5
1917,60889,"torque speed graph<p>characteristic of machine are visualize in project</p>electric_motor_control,power_electronics_control,simulation",22,0,1,0,21,torque speed machine visualize projectelectric motor controlpower electronics,"['torque', 'speed', 'machine', 'visualize', 'projectelectric', 'motor', 'controlpower', 'electronics']",1
1918,60895,"model file of fullwave rectifier.<p>this is the simulation of full wave rectifier using diode i.e. the simulation model of full uncontrolled rectifier.</p>rectifier,rl load on rectifier,uncontrolled rectifier",11,0,1,0,11,file fullwave rectifier full wave rectifier diode full uncontrolled rectifier rectifierrl load rectifier,"['file', 'fullwave', 'rectifier', 'full', 'wave', 'rectifier', 'diode', 'full', 'uncontrolled', 'rectifier', 'rectifierrl', 'load', 'rectifier']",4
1919,60907,"A simple single phase step down cycloconverter with reduce numbers of Thyristors<p>A simple single phase step down cycloconverter with reduce numbers of Thyristors in P and N converter is described. A shunt capacitor connected with load is used to convert sinusoidal input at one frequency to non-sinusoidal output at another frequency. A detail description is given in link here: <a href=""https://www.academia.edu/30466108/Single_phase_sinusoidal_input_to_non-sinusoidal_output_Cycloconverter_with_output_frequency_fo_fin_n_n_2_4_6_......_using_reduced_number_of_Thyristor_in_P_and_N_Converters"">https://www.academia.edu/30466108/Single_phase_sinusoidal_input_to_non-sinusoidal_output_Cycloconverter_with_output_frequency_fo_fin_n_n_2_4_6_......_using_reduced_number_of_Thyristor_in_P_and_N_Converters</a></p>cycloconverter,power electronics,simulation,simulink",26,2,3,0,30,simple single phase step cycloconverter reduce number thyristorsa simple single phase step cycloconverter reduce number thyristors converter describe shunt capacitor connect load convert sinusoidal input one frequency non sinusoidal output another frequency detail description give link academia edu single phase sinusoidal input non sinusoidal output cycloconverter output frequency fin reduced number thyristor,"['simple', 'single', 'phase', 'step', 'cycloconverter', 'reduce', 'number', 'thyristorsa', 'simple', 'single', 'phase', 'step', 'cycloconverter', 'reduce', 'number', 'thyristors', 'converter', 'describe', 'shunt', 'capacitor', 'connect', 'load', 'convert', 'sinusoidal', 'input', 'one', 'frequency', 'non', 'sinusoidal', 'output', 'another', 'frequency', 'detail', 'description', 'give', 'link', 'academia', 'edu', 'single', 'phase', 'sinusoidal', 'input', 'non', 'sinusoidal', 'output', 'cycloconverter', 'output', 'frequency', 'fin', 'reduced', 'number', 'thyristor']",3
1920,60910,How to put and what will be gain value for this<p>This tells how to verify linear and nonlinear model of distillation</p>simulink,17,2,2,0,23,put gain value thisthis tell verify linear nonlinear,"['put', 'gain', 'value', 'thisthis', 'tell', 'verify', 'linear', 'nonlinear']",5
1921,60919,"Model simulink continu to discret RL charge<p>Model simulink continu to discret RL charge</p>c2d,charge rl,continu,continue to discret,discret,tustin",16,0,1,0,17,continu discret chargemodel continu discret chargec dcharge,"['continu', 'discret', 'chargemodel', 'continu', 'discret', 'chargec', 'dcharge']",2
1922,60927,"Modele de base sous simulink - simscape<p>Modele de base sous simulink - simscape utile pour le STI2D et en SSI.</p>electrique,electro_mecanique,hacheur,modlisation,sciences de lingnieur,ssi,sti2d,thermique",204,14,2,0,206,modele base sous simscapemodele base sous simscape utile pour sti ssi lingnieurssisti dthermique,"['modele', 'base', 'sous', 'simscapemodele', 'base', 'sous', 'simscape', 'utile', 'pour', 'sti', 'ssi', 'lingnieurssisti', 'dthermique']",8
1923,60955,"Steps down the Input DC Voltage<p>Steps down the Input DC Voltage</p>power_conversion_control,power_electronics_control,buck chopper,buck converter,chopper,power electronics",10,0,1,0,16,step input voltagesteps input voltagepower conversion controlpower electronics controlbuck chopperbuck electronics,"['step', 'input', 'voltagesteps', 'input', 'voltagepower', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'chopperbuck', 'electronics']",1
1924,60956,"Steps Up the Input DC Voltage<p>Steps Up the Input DC Voltage</p>power_conversion_control,power_electronics_control,boost chopper,boost converter,chopper,power electronics",11,0,1,0,17,step input voltagesteps input voltagepower conversion controlpower electronics controlboost chopperboost electronics,"['step', 'input', 'voltagesteps', 'input', 'voltagepower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'chopperboost', 'electronics']",1
1925,60957,"Generated alternating square from Input DC Voltage<p>Generated alternating square from Input DC Voltage</p>power_conversion_control,power_electronics_control,bridge inverter,full bridge inverter,inverter,power electronics",31,0,1,0,39,generate alternate square input alternate square input voltagepower conversion controlpower electronics controlbridge inverterfull bridge electronics,"['generate', 'alternate', 'square', 'input', 'alternate', 'square', 'input', 'voltagepower', 'conversion', 'controlpower', 'electronics', 'controlbridge', 'inverterfull', 'bridge', 'electronics']",1
1926,60970,"dq0 to abc<p>measure dq0 to abc transmission amp</p>measurement,power electronics",22,0,1,0,22,abcmeasure abc transmission electronics,"['abcmeasure', 'abc', 'transmission', 'electronics']",3
1927,61022,"Its a variable resistor used in DC supply. Its a modification of variable inductance by matlab<p>Its a variable resistor used in DC supply. Its just a modification of variable inductance provided by Matlab. You can also give step change or constant value as input to resistance. If you use the same ramp input, give some initial value other than zero and modify the slope until you get required range of resistance value.</p>power,power electronics,simulink,power_conversion_control,power_electronics_control",13,1,2,0,14,variable resistor supply modification variable inductance matlabits variable resistor supply modification variable inductance provide also give step change constant value input resistance ramp input give initial value zero modify slope get require range resistance value powerpower conversion controlpower electronics control,"['variable', 'resistor', 'supply', 'modification', 'variable', 'inductance', 'matlabits', 'variable', 'resistor', 'supply', 'modification', 'variable', 'inductance', 'provide', 'also', 'give', 'step', 'change', 'constant', 'value', 'input', 'resistance', 'ramp', 'input', 'give', 'initial', 'value', 'zero', 'modify', 'slope', 'get', 'require', 'range', 'resistance', 'value', 'powerpower', 'conversion', 'controlpower', 'electronics', 'control']",4
1928,61029,This is a boost converter using supercap<p>boost converter using supercap and PI controller</p>simulation,33,1,2,0,40,boost converter supercapboost converter supercap,"['boost', 'converter', 'supercapboost', 'converter', 'supercap']",1
1929,61034,"Explanation of BLDC<p>Used to BLDC simulations</p>electric_motor_control,power_conversion_control,power_electronics_control,signal processing",104,8,3,0,100,explanation bldcused bldc motor controlpower conversion controlpower electronics controlsignal processing,"['explanation', 'bldcused', 'bldc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlsignal', 'processing']",1
1930,61044,"Circuitos de disparo para SCR y Triac por alimentacion<p>Circuito basico de disparo para Scr y Triac usando libreria simscape muestra el voltaje de entrada en la fuente, voltaje entre Anodo y Catodo y el Voltaje de salida he colocado los valores de resistencia y condensadores para mostrar la grafica lo mejor posible.</p>circuitos de disparo,electronica de potencia,gate triggering,scr,tiggering circuits,triac",62,6,2,0,71,circuitos disparo para scr triac por basico disparo para scr triac usando libreria simscape muestra voltaje entrada fuente voltaje entre anodo catodo voltaje salida colocado los valores resistencia condensadores para mostrar grafica mejor posible circuitos potenciagate circuitstriac,"['circuitos', 'disparo', 'para', 'scr', 'triac', 'por', 'basico', 'disparo', 'para', 'scr', 'triac', 'usando', 'libreria', 'simscape', 'muestra', 'voltaje', 'entrada', 'fuente', 'voltaje', 'entre', 'anodo', 'catodo', 'voltaje', 'salida', 'colocado', 'los', 'valores', 'resistencia', 'condensadores', 'para', 'mostrar', 'grafica', 'mejor', 'posible', 'circuitos', 'potenciagate', 'circuitstriac']",2
1931,61070,"This model demonstrate AC waveform acquisition with single ended analog to digital interface<p>The model consists of a DC Bias Circuit and a Single Ended ADC blockThe DC Bias Circuit offset the entire AC waveform above zero and the Single Ended ADC block converts its analog value (V) to its digital representation in decimal value.</p>electric_motor_control,power_conversion_control,power_electronics_control,analog to digital converter,dc bias circuit,dc offset circuit,single ended input",21,1,2,0,27,demonstrate waveform acquisition single end analog digital interfacethe consist bias circuit single end adc blockthe bias circuit offset entire waveform zero single end adc block convert analog value digital representation decimal value electric motor controlpower conversion controlpower electronics controlanalog digital converterdc bias circuitdc offset circuitsingle end input,"['demonstrate', 'waveform', 'acquisition', 'single', 'end', 'analog', 'digital', 'interfacethe', 'consist', 'bias', 'circuit', 'single', 'end', 'adc', 'blockthe', 'bias', 'circuit', 'offset', 'entire', 'waveform', 'zero', 'single', 'end', 'adc', 'block', 'convert', 'analog', 'value', 'digital', 'representation', 'decimal', 'value', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlanalog', 'digital', 'converterdc', 'bias', 'circuitdc', 'offset', 'circuitsingle', 'end', 'input']",4
1932,61126,"The voltage output from the Solar panel is boosted to 5V for low power application.<p>The solar panel is modeled using the basic equations of solar output current, voltage and power. The voltage and power rating is kept to 5 to 6 V. The output of the solar cell depends on the irradiance and temperature and hence we cannot expect contionuous flow of energy from the source. To compensate this problem the boost converter with PWM control is used to boost the voltage to 5 V.  This model is inteneded for low power applications of about 5W.</p>electric_motor_control,power_conversion_control,power_electronics_control,power electronics,simulation,simulink",63,2,3,0,71,voltage output solar panel boost low power application solar panel basic equation solar output current voltage power voltage power rating keep output solar cell depend irradiance temperature hence expect contionuous flow energy source compensate problem boost converter pwm control boost voltage inteneded low power application electric motor controlpower conversion controlpower electronics controlpower,"['voltage', 'output', 'solar', 'panel', 'boost', 'low', 'power', 'application', 'solar', 'panel', 'basic', 'equation', 'solar', 'output', 'current', 'voltage', 'power', 'voltage', 'power', 'rating', 'keep', 'output', 'solar', 'cell', 'depend', 'irradiance', 'temperature', 'hence', 'expect', 'contionuous', 'flow', 'energy', 'source', 'compensate', 'problem', 'boost', 'converter', 'pwm', 'control', 'boost', 'voltage', 'inteneded', 'low', 'power', 'application', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower']",1
1933,61131,"Feedback PID control with Simulink on Arduino Due hardware.<p>A constant loop time is essential for digital feedback control. Normally a micro-controller is programmed using interrupt routines. We applied the Simulink Support Package for Arduino Hardware and achieved a feedback control system with constant control loop frequency up to 1 kHz. We could implement and test different control algorithm on real Maglev systems without writing any C-code.The sample time of the loop is given from both sources: the Step Function Block and the Analog Input Block, you must choose for both blocks the same sample time. By using Arduino Due hardware the least sample time was 0.001 seconds to achieve stable control loops without failure.Watch a video with the working conrol loop on <a href=""http://www.leviball.com"">www.leviball.com</a> .Watch also our Maker-project:<a href=""https://www.hackster.io/matlab-makers/magnetically-levitated-ball-with-matlab-and-arduino-e3a2e1"">https://www.hackster.io/matlab-makers/magnetically-levitated-ball-with-matlab-and-arduino-e3a2e1</a> </p>arduino,arduino due,feedback control,hardware,pid control,realtime,simulink",18,1,1,2,21,feedback pid control arduino due hardware constant loop time essential digital feedback control normally micro controller program interrupt routine apply support package arduino hardware achieve feedback control constant control loop frequency khz could implement test different control algorithm real maglev without write code sample time loop give source step function block analog input block must choose block sample time arduino due hardware least sample time second achieve stable control loop without failure watch video work conrol loop leviball com watch also maker project hackster maker magnetically levitate ball arduino arduinoarduino duefeedback,"['feedback', 'pid', 'control', 'arduino', 'due', 'hardware', 'constant', 'loop', 'time', 'essential', 'digital', 'feedback', 'control', 'normally', 'micro', 'controller', 'program', 'interrupt', 'routine', 'apply', 'support', 'package', 'arduino', 'hardware', 'achieve', 'feedback', 'control', 'constant', 'control', 'loop', 'frequency', 'khz', 'could', 'implement', 'test', 'different', 'control', 'algorithm', 'real', 'maglev', 'without', 'write', 'code', 'sample', 'time', 'loop', 'give', 'source', 'step', 'function', 'block', 'analog', 'input', 'block', 'must', 'choose', 'block', 'sample', 'time', 'arduino', 'due', 'hardware', 'least', 'sample', 'time', 'second', 'achieve', 'stable', 'control', 'loop', 'without', 'failure', 'watch', 'video', 'work', 'conrol', 'loop', 'leviball', 'com', 'watch', 'also', 'maker', 'project', 'hackster', 'maker', 'magnetically', 'levitate', 'ball', 'arduino', 'arduinoarduino', 'duefeedback']",7
1934,61148,buck-boost convertor<p>simulink model of the buck-boost convertor</p>simulink,15,0,1,0,23,buck boost buck boost,"['buck', 'boost', 'buck', 'boost']",6
1935,61210,"simulink models along with discription<p>Simulated models of ""Power Elecronic simulation labouratory"" as per norms of RTU,kota (Raj.) syllabus for masters in POWER ELECTRONICS AND ELECRICAL DRIVES</p>power_conversion_control,power_electronics_control,model,simulation",332,0,1,0,501,along power elecronic labouratory per norm rtukota raj syllabus master power electronics elecrical drivespower conversion controlpower electronics,"['along', 'power', 'elecronic', 'labouratory', 'per', 'norm', 'rtukota', 'raj', 'syllabus', 'master', 'power', 'electronics', 'elecrical', 'drivespower', 'conversion', 'controlpower', 'electronics']",3
1936,61215,"This simulation contains MATLAB modelling of three phase shunt active power filter using pq theory<p>It solves the problem of harmonic current in power system. It also compensate reactive power and balances load on three phase(if load is unbalanced). It uses Clarke transformation to calculate value of p0,p and q, filters out constant part of p and thus finding the compensating part of p0,p and q. Then, it calculates compensating current by inverse-Clarke transformation. The compensating current is injected to the network via three phase inverter using hysteresis band current control(HBCC) method. In this way, harmonic and reactive compnent of load is supplied by this shunt active power filter.Also, compensating p0 means balancing load on three phase.</p>control,filter,harmonics filter,inverter,power,power electronics,power filter,pq theory,shunt active power filter,three phase shunt active power filter",60,1,2,0,112,contains three phase shunt active power filter theoryit solves problem harmonic current power also compensate reactive power balance load three phase load unbalanced clarke transformation calculate value filter constant part thus find compensate part calculate compensate current inverse clarke transformation compensate current injected network via three phase inverter hysteresis band current control hbcc method way harmonic reactive compnent load supply shunt active power filter also compensate mean balance load three phase filterpq theoryshunt active power filterthree phase shunt active power filter,"['contains', 'three', 'phase', 'shunt', 'active', 'power', 'filter', 'theoryit', 'solves', 'problem', 'harmonic', 'current', 'power', 'also', 'compensate', 'reactive', 'power', 'balance', 'load', 'three', 'phase', 'load', 'unbalanced', 'clarke', 'transformation', 'calculate', 'value', 'filter', 'constant', 'part', 'thus', 'find', 'compensate', 'part', 'calculate', 'compensate', 'current', 'inverse', 'clarke', 'transformation', 'compensate', 'current', 'injected', 'network', 'via', 'three', 'phase', 'inverter', 'hysteresis', 'band', 'current', 'control', 'hbcc', 'method', 'way', 'harmonic', 'reactive', 'compnent', 'load', 'supply', 'shunt', 'active', 'power', 'filter', 'also', 'compensate', 'mean', 'balance', 'load', 'three', 'phase', 'filterpq', 'theoryshunt', 'active', 'power', 'filterthree', 'phase', 'shunt', 'active', 'power', 'filter']",3
1937,61267,"This file demonstrates working of Hysteresis Band Current controller.<p>By this method, desired current can be injected. Waveform of desired current is given as input as voltage waveform(In this case, sine wave is used). Current band can be changed by double clicking on relay and setting switch on and off point. Difference of desired current(input) and actual current(output) is calculated and IGBT is turned on or off according to value of difference. If difference is greater than 0.1, IGBT1 is turned on(IGBT2 is off). If difference is less than -0.1, IGBT2 is turned on (IGBT1 is off). If difference is between -0.1 and 0.1, then state of IGBT is unchanged i.e it remains in the same state as before (like hold state of flip-flop).     It has application in different current compensating devices such as shunt active power filter, STATCOM etc where desired waveform of current is to be injected.</p>current source,hysteresis band,inverter,power electronics",13,0,1,0,17,file demonstrate work hysteresis band current controller method desire current injected waveform desire current give input voltage waveform case sine wave current band change double clicking relay set switch point difference desire current input actual current output calculate igbt turn accord value difference difference great igbt turn igbt difference less igbt turn igbt difference state igbt unchanged remain state like hold state flip flop application different current compensating device shunt active power filter statcom etc desire waveform current inject current electronics,"['file', 'demonstrate', 'work', 'hysteresis', 'band', 'current', 'controller', 'method', 'desire', 'current', 'injected', 'waveform', 'desire', 'current', 'give', 'input', 'voltage', 'waveform', 'case', 'sine', 'wave', 'current', 'band', 'change', 'double', 'clicking', 'relay', 'set', 'switch', 'point', 'difference', 'desire', 'current', 'input', 'actual', 'current', 'output', 'calculate', 'igbt', 'turn', 'accord', 'value', 'difference', 'difference', 'great', 'igbt', 'turn', 'igbt', 'difference', 'less', 'igbt', 'turn', 'igbt', 'difference', 'state', 'igbt', 'unchanged', 'remain', 'state', 'like', 'hold', 'state', 'flip', 'flop', 'application', 'different', 'current', 'compensating', 'device', 'shunt', 'active', 'power', 'filter', 'statcom', 'etc', 'desire', 'waveform', 'current', 'inject', 'current', 'electronics']",4
1938,61309,variable resistor in power sim<p>variable resistor in power sim</p>simulink,22,2,2,0,21,variable resistor power simvariable resistor power,"['variable', 'resistor', 'power', 'simvariable', 'resistor', 'power']",3
1939,61335,"Multitrack 3D Simulink Stem<p>This block is a simulink adaptation of STEM3 plot function. The standard STEM3 function allows to plot in Matlab environment. This block allows to plot the motion of SEVERAL vehicles in the XYZ space. Of course setting the camera viewing angle can be altered from parameter [45 45] to any [degrees_of_elevation height] number. Color and marker of each line are also changeable. This block is very useful when you have to compare the motion of a point versus a reference trajectory.Use inputs that have the format of x, y and z with the same size. The file is saved for R2011a. Moyo</p>3d,path,simulink,stem3",7,0,1,0,6,multitrack stemthis block adaptation stem plot function standard stem function allow plot environment block allow plot motion several vehicle xyz space course set camera view angle alter parameter degree elevation height number color marker line also changeable block useful compare motion point versus reference trajectory input format size file save moyo,"['multitrack', 'stemthis', 'block', 'adaptation', 'stem', 'plot', 'function', 'standard', 'stem', 'function', 'allow', 'plot', 'environment', 'block', 'allow', 'plot', 'motion', 'several', 'vehicle', 'xyz', 'space', 'course', 'set', 'camera', 'view', 'angle', 'alter', 'parameter', 'degree', 'elevation', 'height', 'number', 'color', 'marker', 'line', 'also', 'changeable', 'block', 'useful', 'compare', 'motion', 'point', 'versus', 'reference', 'trajectory', 'input', 'format', 'size', 'file', 'save', 'moyo']",0
1940,61354,Handoff System on Simulink<p>Simulation about Handoff System</p>handoff,20,3,3,0,17,handoff handoff systemhandoff,"['handoff', 'handoff', 'systemhandoff']",2
1941,61361,"A seven level inverter using LSPWM powered by solar panels<p>includes two solar panels of output 7v and 14v.Seven level Inverter controlled by LSPWM is implemented.</p>inverter,lspwm,seven level,simulink",241,14,3,0,282,seven level inverter lspwm power solar panelsincludes two solar panel output seven level inverter control lspwm implement,"['seven', 'level', 'inverter', 'lspwm', 'power', 'solar', 'panelsincludes', 'two', 'solar', 'panel', 'output', 'seven', 'level', 'inverter', 'control', 'lspwm', 'implement']",3
1942,61370,"Robot arm transfers parts between two conveyor belts<p>Models a robot arm with 5 degrees of freedom and a gripper, along with two conveyor belts. The robot transfers parts from one conveyor belt to the other. One conveyor belt brings the parts to the robot arm, and the other belt transports the parts away from the robot arm. The model includes electrical actuation, supervisory logic, and optimization of end effector trajectory.  Please read the README.txt file to get started. The robot arm model was created in Onshape and imported into Simscape Multibody. Visit this File Exchange entry to learn more about Onshape <a href=""https://www.mathworks.com/products/simmechanics/onshape.html"">https://www.mathworks.com/products/simmechanics/onshape.html</a> The robot arm is based on the youBot.  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a> </p>conveyor,kinematics,kuka,onshape,physical modeling,pickandplace,robot,robotics,simmechanics,simmechanics2g,virtual commissioning,youbot",3816,451,8,43,2662,robot arm transfer part two conveyor beltsmodels robot arm degree freedom gripper along two conveyor belt robot transfer part one conveyor belt one conveyor belt brings part robot arm belt transport part away robot arm include electrical actuation supervisory logic optimization end effector trajectory please read readme txt file get start robot arm create onshape import simscape multibody visit file exchange entry learn onshape mathworks com product simmechanics onshape html robot arm base youbot find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling gvirtual,"['robot', 'arm', 'transfer', 'part', 'two', 'conveyor', 'beltsmodels', 'robot', 'arm', 'degree', 'freedom', 'gripper', 'along', 'two', 'conveyor', 'belt', 'robot', 'transfer', 'part', 'one', 'conveyor', 'belt', 'one', 'conveyor', 'belt', 'brings', 'part', 'robot', 'arm', 'belt', 'transport', 'part', 'away', 'robot', 'arm', 'include', 'electrical', 'actuation', 'supervisory', 'logic', 'optimization', 'end', 'effector', 'trajectory', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'robot', 'arm', 'create', 'onshape', 'import', 'simscape', 'multibody', 'visit', 'file', 'exchange', 'entry', 'learn', 'onshape', 'mathworks', 'com', 'product', 'simmechanics', 'onshape', 'html', 'robot', 'arm', 'base', 'youbot', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'gvirtual']",7
1943,61381,"Simulink Modelling of Self Excited Induction Generator<p>This Simulink models a Self Excited Induction Generator.</p>dq axis,induction generator,rotor,seig,self excited induction generator,simulink modeling,stator,wind turbine",302,14,5,0,303,self excited induction generatorthis self excited induction generator axisinduction excite induction turbine,"['self', 'excited', 'induction', 'generatorthis', 'self', 'excited', 'induction', 'generator', 'axisinduction', 'excite', 'induction', 'turbine']",8
1944,61389,"Mathematical modeling of Buck converter, Boost converter, Close loop control of Buck converter<p>Mathematical modeling of Buck converter, Boost converter. Close loop Voltage control of Buck converter</p>boost converter,buck converter,close loop control,close loop control of buck converter,dc dc converter,mathematical modeling,simulink,voltage control,power_conversion_control,power_electronics_control",111,7,2,0,123,mathematical buck converter boost converter close loop control buck buck converter boost converter close loop voltage control buck converterboost converterbuck converterclose loop controlclose loop control buck converterdc controlpower conversion controlpower electronics control,"['mathematical', 'buck', 'converter', 'boost', 'converter', 'close', 'loop', 'control', 'buck', 'buck', 'converter', 'boost', 'converter', 'close', 'loop', 'voltage', 'control', 'buck', 'converterboost', 'converterbuck', 'converterclose', 'loop', 'controlclose', 'loop', 'control', 'buck', 'converterdc', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
1945,61429,"DTC Induction Motor Drive<p>Implement direct torque and flux control (DTC) induction motor drive model</p>electric_motor_control,power_electronics_control,control,power electronics,simulink",198,13,3,0,257,dtc induction motor driveimplement direct torque flux control dtc induction motor drive modelelectric motor controlpower electronics,"['dtc', 'induction', 'motor', 'driveimplement', 'direct', 'torque', 'flux', 'control', 'dtc', 'induction', 'motor', 'drive', 'modelelectric', 'motor', 'controlpower', 'electronics']",1
1946,61459,"This ADC block converts analog signal to its digital representation in decimal value.<p>This Analog to Digital Converter (ADC) block converts single-ended analog signal (V) to its digital representation in decimal value.User can configure the bit-length and reference voltage of the ADC.Some example applications of ADC Block developed by the AuthorAC Waveform Analog to Digital Interface Modelhttps://<a href=""http://www.mathworks.com/matlabcentral/fileexchange/61070-ac-waveform-analog-to-digital-interface-modelPyranometer"">www.mathworks.com/matlabcentral/fileexchange/61070-ac-waveform-analog-to-digital-interface-modelPyranometer</a> Analog to Digital Interface Modelhttps://<a href=""http://www.mathworks.com/matlabcentral/fileexchange/60310-pyranometer-analog-to-digital-interface-model"">www.mathworks.com/matlabcentral/fileexchange/60310-pyranometer-analog-to-digital-interface-model</a></p>adc,analog to digital converter",12,1,2,0,13,adc block convert analog signal digital representation decimal value analog digital converter adc block convert single end analog signal digital representation decimal value user configure bit length reference voltage adc example application adc block develop authorac waveform analog digital interface mathworks com matlabcentral fileexchange waveform analog digital interface analog digital interface mathworks com matlabcentral fileexchange pyranometer analog digital interface modeladcanalog digital converter,"['adc', 'block', 'convert', 'analog', 'signal', 'digital', 'representation', 'decimal', 'value', 'analog', 'digital', 'converter', 'adc', 'block', 'convert', 'single', 'end', 'analog', 'signal', 'digital', 'representation', 'decimal', 'value', 'user', 'configure', 'bit', 'length', 'reference', 'voltage', 'adc', 'example', 'application', 'adc', 'block', 'develop', 'authorac', 'waveform', 'analog', 'digital', 'interface', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'waveform', 'analog', 'digital', 'interface', 'analog', 'digital', 'interface', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'pyranometer', 'analog', 'digital', 'interface', 'modeladcanalog', 'digital', 'converter']",7
1947,61492,"The mathematical model trailer for solving urgent problems of dynamics.<p>Showing technique and method of implementation of the mathematical model train using modern software for solving urgent problems of dynamics.</p>control design,simulation,simulink",535,1,1,0,523,mathematical trailer solve urgent problem dynamic show technique method implementation mathematical train modern software solve urgent problem dynamic control,"['mathematical', 'trailer', 'solve', 'urgent', 'problem', 'dynamic', 'show', 'technique', 'method', 'implementation', 'mathematical', 'train', 'modern', 'software', 'solve', 'urgent', 'problem', 'dynamic', 'control']",0
1948,61552,"Least Mean Square (LMS) Simulink Model for Plant Identification problem.<p>In this simulation, I presented a simulink-based implementation of Least Mean Square (LMS) algorithm for system identification problem.  The LMS algorithm is implemented using basic blocks.</p>least mean square lms,signal processing,simulink,system identification",20,0,1,0,30,least mean square plant identification problem present base implementation least mean square algorithm identification problem algorithm implement basic block least mean square lmssignal identification,"['least', 'mean', 'square', 'plant', 'identification', 'problem', 'present', 'base', 'implementation', 'least', 'mean', 'square', 'algorithm', 'identification', 'problem', 'algorithm', 'implement', 'basic', 'block', 'least', 'mean', 'square', 'lmssignal', 'identification']",0
1949,61574,dfig wind turbine model<p>adhha</p>simulation,806,29,8,0,870,dfig wind turbine,"['dfig', 'wind', 'turbine']",4
1950,61601,"Time Domain Model for Electrical parameters in Compact Flourecent Lamp<p>The SMPS Time Domain Model (TDM) is presented in Paper: ""Time-to-Frequency Domain SMPS Model for Harmonic Estimation: Methodology"", and it is defined by: a rectifier bridge, an input resistance R, an input filter inductance L, a dc link capacitance Cdc, and an equivalent resistance Req. This model is proposed in the paper: ""A comparison between Circuit-Based and Harmonic-Current-Source models for compact fluorescent lamps""Also this model is used in the chapter of book Advances in Renewable Energies and Power Quality: ""A Frequency Domain Model SMPS for Harmonic Estimation""</p>power_conversion_control,power_electronics_control,admittance matrix,frequency domain models,harmonic attenuationdiversity,smps,time domain models",155,19,4,0,161,time domain electrical parameter compact flourecent lampthe smps time domain tdm present paper time frequency domain smps harmonic estimation methodology define rectifier bridge input resistance input filter inductance link capacitance cdc equivalent resistance req propose paper comparison circuit base harmonic current source compact fluorescent lamp also chapter book advance renewable energy power quality frequency domain smps harmonic estimation power conversion controlpower electronics matrixfrequency domain modelsharmonic domain,"['time', 'domain', 'electrical', 'parameter', 'compact', 'flourecent', 'lampthe', 'smps', 'time', 'domain', 'tdm', 'present', 'paper', 'time', 'frequency', 'domain', 'smps', 'harmonic', 'estimation', 'methodology', 'define', 'rectifier', 'bridge', 'input', 'resistance', 'input', 'filter', 'inductance', 'link', 'capacitance', 'cdc', 'equivalent', 'resistance', 'req', 'propose', 'paper', 'comparison', 'circuit', 'base', 'harmonic', 'current', 'source', 'compact', 'fluorescent', 'lamp', 'also', 'chapter', 'book', 'advance', 'renewable', 'energy', 'power', 'quality', 'frequency', 'domain', 'smps', 'harmonic', 'estimation', 'power', 'conversion', 'controlpower', 'electronics', 'matrixfrequency', 'domain', 'modelsharmonic', 'domain']",4
1951,61633,"Using fsolve in both MATLAB and Simulink<p>This is a code and a model for using fsolve function with MATLAB and Simulink. The both method are equivalent and give the same results. There are three types:1- Basic : fsolve example (MATLAB &amp; Simulink).2- fsolve example (MATLAB &amp; Simulink)- Inherent variables.3- fsolve example (MATLAB &amp; Simulink)- Inherent variables - Vector Input.Note: run the main.m file for the first time to enable using the Simulink model.</p>fsolve,interpreted_matlab_function,matlab,simulink",23,0,1,0,19,fsolve code fsolve function method equivalent give result three type basic fsolve example amp fsolve example amp inherent variable fsolve example amp inherent variable vector input note run main file first time enable,"['fsolve', 'code', 'fsolve', 'function', 'method', 'equivalent', 'give', 'result', 'three', 'type', 'basic', 'fsolve', 'example', 'amp', 'fsolve', 'example', 'amp', 'inherent', 'variable', 'fsolve', 'example', 'amp', 'inherent', 'variable', 'vector', 'input', 'note', 'run', 'main', 'file', 'first', 'time', 'enable']",7
1952,61725,"Multi-Target App Developed with Model Based Design Techniques<p>This model is an example for the EasyGUISim package developed by MBD Apps. It showcases the power of combining the user-friendly Qt/QML framework for developing static Graphical User Interfaces (GUIs) with the simplicity of Simulink/Stateflow to develop execution logic. The application itself is a simple counting sequence that provides feedback for correct and incorrect answers.This example can be deployed to various target operating systems (currently Windows and Android with plans for all major operating systems) targets when combined with the Embedded coder and the appropriate EasyGUISim target modules developed by MBD Apps.EasyGUISim Installation Instructions: 1- Go to <a href=""https://www.mbdapps.com/product/easyguisim-blockset2-"">https://www.mbdapps.com/product/easyguisim-blockset2-</a> Add free product to cart3- Checkout (no purchase or card necessary for free product)4- Register or login5- Go to the provided e-mail and click on download link6- Open downloaded installer and follow instructions (pay attention to your installation directory for the next step)</p>application,audio,gui,gui tools,model,simulation,simulink,specialized",134,11,4,0,110,multi target app develop base design techniquesthis example easyguisim package develop mbd apps showcase power combine user friendly qml framework develop static graphical user interface guis simplicity stateflow develop execution logic application simple count sequence provide feedback correct incorrect answer example deploy various target operate currently windows android plan major operate target combine embedded coder appropriate easyguisim target module develop mbd apps easyguisim installation instruction mbdapps com product easyguisim blockset add free product cart checkout purchase card necessary free product register login provide mail click download link open download installer follow instruction pay attention installation directory next step,"['multi', 'target', 'app', 'develop', 'base', 'design', 'techniquesthis', 'example', 'easyguisim', 'package', 'develop', 'mbd', 'apps', 'showcase', 'power', 'combine', 'user', 'friendly', 'qml', 'framework', 'develop', 'static', 'graphical', 'user', 'interface', 'guis', 'simplicity', 'stateflow', 'develop', 'execution', 'logic', 'application', 'simple', 'count', 'sequence', 'provide', 'feedback', 'correct', 'incorrect', 'answer', 'example', 'deploy', 'various', 'target', 'operate', 'currently', 'windows', 'android', 'plan', 'major', 'operate', 'target', 'combine', 'embedded', 'coder', 'appropriate', 'easyguisim', 'target', 'module', 'develop', 'mbd', 'apps', 'easyguisim', 'installation', 'instruction', 'mbdapps', 'com', 'product', 'easyguisim', 'blockset', 'add', 'free', 'product', 'cart', 'checkout', 'purchase', 'card', 'necessary', 'free', 'product', 'register', 'login', 'provide', 'mail', 'click', 'download', 'link', 'open', 'download', 'installer', 'follow', 'instruction', 'pay', 'attention', 'installation', 'directory', 'next', 'step']",5
1953,61726,"Multi-Target App Developed with Model Based Design Techniques<p>his model is an example for the EasyGUISim package developed by MBD Apps. It showcases the power of combining the user-friendly Qt/QML framework for developing static Graphical User Interfaces (GUIs) with the simplicity of Simulink/Stateflow to develop execution logic. The application itself is a dashboard GUI for the famous sldemo_autotrans Simulink example. When deployed, it uses the target's inclination sensors (if available) as inputs for acceleration, breaking and turn signals. Great for an Android Target.This example can be deployed to various target operating systems (currently Windows and Android with plans for all major operating systems) targets when combined with the Embedded coder and the appropriate EasyGUISim target modules developed by MBD Apps. EasyGUISim Installation Instructions: 1- Go to <a href=""https://www.mbdapps.com/product/easyguisim-blockset2-"">https://www.mbdapps.com/product/easyguisim-blockset2-</a> Add free product to cart3- Checkout (no purchase or card necessary for free product)4- Register or login5- Go to the provided e-mail and click on download link6- Open downloaded installer and follow instructions (pay attention to your installation directory for the next step)</p>application,automotive,gui,gui tools,matlab,mechanical modeling,model,modeling,simulation,simulink,specialized",104,9,4,0,111,multi target app develop base design techniqueshis example easyguisim package develop mbd apps showcase power combine user friendly qml framework develop static graphical user interface guis simplicity stateflow develop execution logic application dashboard gui famous sldemo autotrans example deploy target inclination sensor available input acceleration break turn signal great android target example deploy various target operate currently windows android plan major operate target combine embedded coder appropriate easyguisim target module develop mbd apps easyguisim installation instruction mbdapps com product easyguisim blockset add free product cart checkout purchase card necessary free product register login provide mail click download link open download installer follow instruction pay attention installation directory next step,"['multi', 'target', 'app', 'develop', 'base', 'design', 'techniqueshis', 'example', 'easyguisim', 'package', 'develop', 'mbd', 'apps', 'showcase', 'power', 'combine', 'user', 'friendly', 'qml', 'framework', 'develop', 'static', 'graphical', 'user', 'interface', 'guis', 'simplicity', 'stateflow', 'develop', 'execution', 'logic', 'application', 'dashboard', 'gui', 'famous', 'sldemo', 'autotrans', 'example', 'deploy', 'target', 'inclination', 'sensor', 'available', 'input', 'acceleration', 'break', 'turn', 'signal', 'great', 'android', 'target', 'example', 'deploy', 'various', 'target', 'operate', 'currently', 'windows', 'android', 'plan', 'major', 'operate', 'target', 'combine', 'embedded', 'coder', 'appropriate', 'easyguisim', 'target', 'module', 'develop', 'mbd', 'apps', 'easyguisim', 'installation', 'instruction', 'mbdapps', 'com', 'product', 'easyguisim', 'blockset', 'add', 'free', 'product', 'cart', 'checkout', 'purchase', 'card', 'necessary', 'free', 'product', 'register', 'login', 'provide', 'mail', 'click', 'download', 'link', 'open', 'download', 'installer', 'follow', 'instruction', 'pay', 'attention', 'installation', 'directory', 'next', 'step']",5
1954,61738,"Teaching materials and examples for the Micro:bit<p>These are the teaching materials and 9 examples developed in the ""Building Systems with Simulink &amp; Micro:bit"": ""The Micro::bit Elements"", co-authored by Dr. Venus Bailey and Clifford French.In these lessons of the Simulink and MATLAB journey, we will learn the basic elements in a system viapractical exercises. We will start with some very simple models, slowly progressing tobuilding more complicated systems as we incorporate different logics, system concepts andcontrols in our models. We will gradually include more elements in our models. The visualnature of Simulink and the simple micro:bit API means that we can progress to buildcomplicated applications quickly and focus on learning and developing more complicatedconcepts.</p>example,simulink",2516,230,5,0,2270,teach material example micro bitthese teaching material example develop build amp micro bit micro bit element author venus bailey clifford french lesson journey learn basic element viapractical exercise start simple slowly progress tobuilding complicate incorporate different logic concept andcontrols gradually include element visualnature simple micro bit api mean progress application quickly focus learn develop,"['teach', 'material', 'example', 'micro', 'bitthese', 'teaching', 'material', 'example', 'develop', 'build', 'amp', 'micro', 'bit', 'micro', 'bit', 'element', 'author', 'venus', 'bailey', 'clifford', 'french', 'lesson', 'journey', 'learn', 'basic', 'element', 'viapractical', 'exercise', 'start', 'simple', 'slowly', 'progress', 'tobuilding', 'complicate', 'incorporate', 'different', 'logic', 'concept', 'andcontrols', 'gradually', 'include', 'element', 'visualnature', 'simple', 'micro', 'bit', 'api', 'mean', 'progress', 'application', 'quickly', 'focus', 'learn', 'develop']",5
1955,61739,"Simulink toolbox for testing control algorithms for quadrotors using a virtual reality simulator<p>This is the 2.0 version of a Simulink toolbox that allows to compare and contrast the peromance of any two control architecture for quadrotors, such as the proportional-integral-derivative (PID) and rhe model reference adaptive controls (MRAC). A unique feature of this simulator is that the quadrotor's dynamics is not captured by a set of differential equations, but a CAD model generated in Solidworks and then imported in Simulink using the Simscape Multibody Blockset.</p>adaptive control,cad,control,control design,derivative,integral,mrac,pid,proportional,quadrotor,uas",1406,225,7,0,1006,toolbox test control algorithms quadrotors virtual reality version toolbox allow compare contrast peromance two control architecture quadrotors proportional integral derivative pid rhe reference adaptive control mrac unique feature quadrotor dynamic capture set differential equation cad generate solidworks import simscape multibody blockset adaptive,"['toolbox', 'test', 'control', 'algorithms', 'quadrotors', 'virtual', 'reality', 'version', 'toolbox', 'allow', 'compare', 'contrast', 'peromance', 'two', 'control', 'architecture', 'quadrotors', 'proportional', 'integral', 'derivative', 'pid', 'rhe', 'reference', 'adaptive', 'control', 'mrac', 'unique', 'feature', 'quadrotor', 'dynamic', 'capture', 'set', 'differential', 'equation', 'cad', 'generate', 'solidworks', 'import', 'simscape', 'multibody', 'blockset', 'adaptive']",0
1956,61781,"multilevel inverter using pspwm<p>battery</p>battery_system_management,power_electronics_control,multilevel inverter",136,10,2,0,140,multilevel inverter managementpower electronics inverter,"['multilevel', 'inverter', 'managementpower', 'electronics', 'inverter']",6
1957,61782,"Compensates reactive power in single phase system as well as mitigates harmonics.<p>It first calculates instantaneous values load current and voltage and take product of them to calculate instantaneous power. Its average value is calculated  which is active power . ploss  is considered because inverter has certain loss and that power should be drawn to maintain constant capacitor voltage. Then, active component of current is calculated which is subtracted from instantaneous current to obtain reactive as well as harmonics component of current. It is fed to hysteresis band current controller which generates gate signal for inverter. Inverter injects compensating current. In this way, reactive power and harmonics is compensated.</p>hysteresis band current controller,inverter,shunt active power filter,singe phase",73,6,2,0,85,compensates reactive power single phase well mitigate harmonic first calculate instantaneous value load current voltage take product calculate instantaneous power average value calculate active power plo consider inverter certain loss power drawn maintain constant capacitor voltage active component current calculate subtract instantaneous current obtain reactive well harmonic component current feed hysteresis band current controller generates gate signal inverter inverter injects compensate current way reactive power harmonic compensate hysteresis band current active power filtersinge phase,"['compensates', 'reactive', 'power', 'single', 'phase', 'well', 'mitigate', 'harmonic', 'first', 'calculate', 'instantaneous', 'value', 'load', 'current', 'voltage', 'take', 'product', 'calculate', 'instantaneous', 'power', 'average', 'value', 'calculate', 'active', 'power', 'plo', 'consider', 'inverter', 'certain', 'loss', 'power', 'drawn', 'maintain', 'constant', 'capacitor', 'voltage', 'active', 'component', 'current', 'calculate', 'subtract', 'instantaneous', 'current', 'obtain', 'reactive', 'well', 'harmonic', 'component', 'current', 'feed', 'hysteresis', 'band', 'current', 'controller', 'generates', 'gate', 'signal', 'inverter', 'inverter', 'injects', 'compensate', 'current', 'way', 'reactive', 'power', 'harmonic', 'compensate', 'hysteresis', 'band', 'current', 'active', 'power', 'filtersinge', 'phase']",3
1958,61801,speed control for alstom gas turbine<p>speed control for alstom gas turbine for ABB control system procontrol P</p>simulink,31,1,1,0,31,speed control alstom gas turbinespeed control alstom gas turbine abb control procontrol,"['speed', 'control', 'alstom', 'gas', 'turbinespeed', 'control', 'alstom', 'gas', 'turbine', 'abb', 'control', 'procontrol']",4
1959,61821,"Yet another demo for my students.<p>System and measurement noise in Simulink using Band-Limited White Noise and Random Number blocks.</p>confidence,confidence interval,confidence level,erfinv,gaussian noise,inverse error function,measurement noise,noise,system noise,variance,white noise",76,0,1,0,77,yet another demo student measurement noise band limit white noise random number block noiseinverse error noise,"['yet', 'another', 'demo', 'student', 'measurement', 'noise', 'band', 'limit', 'white', 'noise', 'random', 'number', 'block', 'noiseinverse', 'error', 'noise']",0
1960,61899,"power system Stabilizer 2A,2B PSS E.saleh saied bohliga<p>power system Stabilizer 2A,2B PSS E.saleh saied bohligazwuitina power <a href=""mailto:plantzwuitina@yahoo.com"">plantzwuitina@yahoo.com</a></p>simulink",76,5,3,0,84,power stabilizer saleh saied bohligapower stabilizer saleh saied bohligazwuitina power plantzwuitina yahoo,"['power', 'stabilizer', 'saleh', 'saied', 'bohligapower', 'stabilizer', 'saleh', 'saied', 'bohligazwuitina', 'power', 'plantzwuitina', 'yahoo']",8
1961,61914,"SINGLE PHASE SEVEN LEVEL CASCADED H- BRIDGE MULTI LEVEL INVERTER<p>The model demonstrates a seven level H-bridge inverter with phase shifted sinusoidal carrier based PWM switching scheme.</p>electric_motor_control,power_conversion_control,power_electronics_control,multi level inverter",71,2,2,0,76,single phase seven level cascade bridge multi level inverterthe demonstrate seven level bridge inverter phase shift sinusoidal carrier base pwm switch scheme electric motor controlpower conversion controlpower electronics controlmulti level inverter,"['single', 'phase', 'seven', 'level', 'cascade', 'bridge', 'multi', 'level', 'inverterthe', 'demonstrate', 'seven', 'level', 'bridge', 'inverter', 'phase', 'shift', 'sinusoidal', 'carrier', 'base', 'pwm', 'switch', 'scheme', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlmulti', 'level', 'inverter']",1
1962,61937,"It regulates speed of the generator, compensates reactive power and mitigates harmonics in current.<p>In microhydro plant, speed governer is not used because of its high cost. ELC is preferred. This ELC regulates speed, compensates reactive power and mitigates current harmonics.      It senses deviation in speed, then calculates power to be dumped(Pdump). Then, it senses load current and voltage from which p and q is calculated(pq theory). Then oscillating part of p (say p1) is found using digital filter. To compensates reactive power and mitigate current harmonics, p1 and q should be injected. To regulate speed, Pdump should be drawn. So, net power p1-Pdump is to be injected along with q. With this value, current to be injected is calculated. This reference current is fed to hysteresis band current controller which generates gate signal for inverter. Inverter injects the current.               Pdump drawn charges the capacitor C1 and C2. So, voltage across them increases. When sum of their voltage exceeds certain value (1025 V in this case), MOSFET switch S is turned on. So, capacitor is discharged to resistor. In this way, power is dumped in resistor.</p>power_conversion_control,power_electronics_control,elc,electronic load controller,inverter,pq theory",280,15,3,0,317,regulates speed generator compensates reactive power mitigates harmonic current microhydro plant speed governer high cost elc prefer elc regulates speed compensates reactive power mitigates current harmonic sense deviation speed calculate power dump pdump sens load current voltage calculate theory oscillate part say find digital filter compensates reactive power mitigate current harmonic injected regulate speed pdump draw net power pdump inject along value current inject calculated reference current feed hysteresis band current controller generates gate signal inverter inverter injects current pdump drawn charge capacitor voltage across increase sum voltage exceed certain value case mosfet switch turn capacitor discharge resistor way power dump resistor power conversion controlpower electronics load theory,"['regulates', 'speed', 'generator', 'compensates', 'reactive', 'power', 'mitigates', 'harmonic', 'current', 'microhydro', 'plant', 'speed', 'governer', 'high', 'cost', 'elc', 'prefer', 'elc', 'regulates', 'speed', 'compensates', 'reactive', 'power', 'mitigates', 'current', 'harmonic', 'sense', 'deviation', 'speed', 'calculate', 'power', 'dump', 'pdump', 'sens', 'load', 'current', 'voltage', 'calculate', 'theory', 'oscillate', 'part', 'say', 'find', 'digital', 'filter', 'compensates', 'reactive', 'power', 'mitigate', 'current', 'harmonic', 'injected', 'regulate', 'speed', 'pdump', 'draw', 'net', 'power', 'pdump', 'inject', 'along', 'value', 'current', 'inject', 'calculated', 'reference', 'current', 'feed', 'hysteresis', 'band', 'current', 'controller', 'generates', 'gate', 'signal', 'inverter', 'inverter', 'injects', 'current', 'pdump', 'drawn', 'charge', 'capacitor', 'voltage', 'across', 'increase', 'sum', 'voltage', 'exceed', 'certain', 'value', 'case', 'mosfet', 'switch', 'turn', 'capacitor', 'discharge', 'resistor', 'way', 'power', 'dump', 'resistor', 'power', 'conversion', 'controlpower', 'electronics', 'load', 'theory']",4
1963,61965,"rowen_model_control_Gas_turbine<p>rowen_model_control_Gas_turbine</p>simulation,simulink",121,11,3,0,146,rowen control gas turbinerowen control gas,"['rowen', 'control', 'gas', 'turbinerowen', 'control', 'gas']",4
1964,61966,voltage doubler is used to boost up the voltage twice from its original value.<p>voltage doubler is used to boost up the voltage twice from its original value</p>simulation,22,2,2,0,17,voltage doubler boost voltage twice original value voltage doubler boost voltage twice original,"['voltage', 'doubler', 'boost', 'voltage', 'twice', 'original', 'value', 'voltage', 'doubler', 'boost', 'voltage', 'twice', 'original']",3
1965,62006,"Simulink model of dq0 transformation based three phase shunt active power filter<p>It solves the problem of harmonic current in power system. It also compensate reactive power and balances load on three phase(if load is unbalanced).It measures load current and then transforms to dq0 coordinate system. Initial position of d axis is chosen in such a way that active part of current is given by d axis. Oscillating part of both d and q axes component of load current should be injected to remove harmonics. Non-oscillating part of q axis component should be injected to compensate reactive power. Zero sequence component should be injected to balance the loads. In this way, current that should be injected is calculated in dq0 coordinate system. It is transformed to abc coordinate system. This current is reference compensating current . The compensating current is injected to the network via three phase inverter using hysteresis band current control(HBCC) method. In this way, harmonic and reactive component of load is supplied by this shunt active power filter.</p>control,dq0 transformation,filter,inverter,power electronics",133,8,2,0,164,transformation base three phase shunt active power filterit solve problem harmonic current power also compensate reactive power balance load three phase load unbalanced measure load current transforms coordinate initial position axis chosen way active part current give axis oscillate part component load current inject remove harmonic non oscillate part axis component inject compensate reactive power zero sequence component inject balance load way current inject calculated coordinate transform abc coordinate current reference compensate current compensate current injected network via three phase inverter hysteresis band current control hbcc method way harmonic reactive component load supply shunt active power filter controldq electronics,"['transformation', 'base', 'three', 'phase', 'shunt', 'active', 'power', 'filterit', 'solve', 'problem', 'harmonic', 'current', 'power', 'also', 'compensate', 'reactive', 'power', 'balance', 'load', 'three', 'phase', 'load', 'unbalanced', 'measure', 'load', 'current', 'transforms', 'coordinate', 'initial', 'position', 'axis', 'chosen', 'way', 'active', 'part', 'current', 'give', 'axis', 'oscillate', 'part', 'component', 'load', 'current', 'inject', 'remove', 'harmonic', 'non', 'oscillate', 'part', 'axis', 'component', 'inject', 'compensate', 'reactive', 'power', 'zero', 'sequence', 'component', 'inject', 'balance', 'load', 'way', 'current', 'inject', 'calculated', 'coordinate', 'transform', 'abc', 'coordinate', 'current', 'reference', 'compensate', 'current', 'compensate', 'current', 'injected', 'network', 'via', 'three', 'phase', 'inverter', 'hysteresis', 'band', 'current', 'control', 'hbcc', 'method', 'way', 'harmonic', 'reactive', 'component', 'load', 'supply', 'shunt', 'active', 'power', 'filter', 'controldq', 'electronics']",4
1966,62045,Diode<p>Three phase full bridge rectifier using diodes</p>simulink,18,0,1,0,28,diodethree phase full bridge rectifier,"['diodethree', 'phase', 'full', 'bridge', 'rectifier']",1
1967,62046,"This is one of the first approachs to a LTE MIMO Spatial Multiplexing Simulink model.<p>This is one of the first approachs to a LTE MIMO Spatial Multiplexing Simulink model. It is based on  Turbo Coding, 16-QAM, OFDM and pilots. You can select the parameters of the Rayleigh Channel and the noise in the AWGN channel, then you can observe the changes in the signal's spectrum and in the constellation. In addition, the BER is obtained.I have developped some additional SISO modules based on QPSK and 16QAM: check  <a href=""http://behindthesciences.com/useful-links/ltesimulinkmodelAs"">http://behindthesciences.com/useful-links/ltesimulinkmodelAs</a> I mentioned at first, this is one approach, I would like to develop the model as it is specified in the standard.  There are some global parameters configured for the Turbo code. If you would like me to send you aconfiguration file to load them automatically, please contact me: <a href=""mailto:natalia.mmingo@gmail.comThank"">natalia.mmingo@gmail.comThank</a> you!Natalia (behindthesciences.com)</p>16qam,communications,lte,mimo,modulation,multipath,rayleigh,turbo coding",267,36,3,0,253,one first approach lte mimo spatial multiplexing one first approach lte mimo spatial multiplexing base turbo cod qam ofdm pilot select parameter rayleigh channel noise awgn channel observe change signal spectrum constellation addition ber obtain developped additional siso module base qpsk qam check http com useful link mention first one approach would like develop specified standard global parameter configure turbo code would like send aconfiguration file load automatically please contact natalia mmingo gmail comthank natalia com cod,"['one', 'first', 'approach', 'lte', 'mimo', 'spatial', 'multiplexing', 'one', 'first', 'approach', 'lte', 'mimo', 'spatial', 'multiplexing', 'base', 'turbo', 'cod', 'qam', 'ofdm', 'pilot', 'select', 'parameter', 'rayleigh', 'channel', 'noise', 'awgn', 'channel', 'observe', 'change', 'signal', 'spectrum', 'constellation', 'addition', 'ber', 'obtain', 'developped', 'additional', 'siso', 'module', 'base', 'qpsk', 'qam', 'check', 'http', 'com', 'useful', 'link', 'mention', 'first', 'one', 'approach', 'would', 'like', 'develop', 'specified', 'standard', 'global', 'parameter', 'configure', 'turbo', 'code', 'would', 'like', 'send', 'aconfiguration', 'file', 'load', 'automatically', 'please', 'contact', 'natalia', 'mmingo', 'gmail', 'comthank', 'natalia', 'com', 'cod']",0
1968,62121,"It reduces harmonics of current in AC side when rectifier is used to convert AC to DC.<p>When AC is converted to DC using rectifier and boost converter or capacitor filter is used, current drawn at AC sides contains harmonics (is non-sinusoidal). This simulation model modifies the boost converter so that boost converter along with load works as pure resistor so that there is no harmonics in current in AC side.          It first measures output voltage and subtracts with reference voltage. Their difference is passed to PI controller which calculates power to be drawn. Voltage at the output of rectifier is measured. Then current proportional to the voltage is calculated where constant of proportionality determined by the power to be drawn. In this way, reference current is calculated. This reference current is compared with actual current. Then gate signal is generated by hysteresis band controller which is fed to switching MOSFET S. Since the voltage and current are proportional, it behaves as pure resistor. When pure resistor is used as load in rectifier, current at ac side is also sinusoidal. So, in this case too, current at AC side will be sinusoidal.</p>power_conversion_control,power_electronics_control,boost converter,harmonics,power filter,rectifier",49,3,2,0,53,reduces harmonic current side rectifier convert convert rectifier boost converter capacitor filter current drawn side contain harmonic non sinusoidal modifies boost converter boost converter along load work pure resistor harmonic current side first measure output voltage subtract reference voltage difference pass controller calculates power draw voltage output rectifier measure current proportional voltage calculate constant proportionality determine power drawn way reference current calculate reference current compare actual current gate signal generate hysteresis band controller feed switch mosfet since voltage current proportional behaves pure resistor pure resistor load rectifier current side also sinusoidal case current side sinusoidal power conversion controlpower electronics controlboost filterrectifier,"['reduces', 'harmonic', 'current', 'side', 'rectifier', 'convert', 'convert', 'rectifier', 'boost', 'converter', 'capacitor', 'filter', 'current', 'drawn', 'side', 'contain', 'harmonic', 'non', 'sinusoidal', 'modifies', 'boost', 'converter', 'boost', 'converter', 'along', 'load', 'work', 'pure', 'resistor', 'harmonic', 'current', 'side', 'first', 'measure', 'output', 'voltage', 'subtract', 'reference', 'voltage', 'difference', 'pass', 'controller', 'calculates', 'power', 'draw', 'voltage', 'output', 'rectifier', 'measure', 'current', 'proportional', 'voltage', 'calculate', 'constant', 'proportionality', 'determine', 'power', 'drawn', 'way', 'reference', 'current', 'calculate', 'reference', 'current', 'compare', 'actual', 'current', 'gate', 'signal', 'generate', 'hysteresis', 'band', 'controller', 'feed', 'switch', 'mosfet', 'since', 'voltage', 'current', 'proportional', 'behaves', 'pure', 'resistor', 'pure', 'resistor', 'load', 'rectifier', 'current', 'side', 'also', 'sinusoidal', 'case', 'current', 'side', 'sinusoidal', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'filterrectifier']",3
1969,62129,"FUZZY CONTROL BASED MULTI PORT CONVERTER FOR PV AND BATTERY MANAGEMENT SYSTEM<p>The mathematical model of photovoltaic system has been developed than simulated in Matlab environment. The maximum power point tracking has been implemented for operating the PV System at optimal power generation using an intelligent controller and analysis the system performance of at various weather conditions. In this paper we have been proposed multi-port converter design and simulated in Matlab environmental. The proposed converter has been operated and controlled by using fuzzy logic controller for effective utilization of PV power generation and battery management system. The proposed fuzzy logic controller has been designed for PV and Battery power flow management at various load demand and different weather conditions. The proposed system performance has been analysed at various weather and load demand.  Finally Simulation results are evaluated for to prove the effectiveness of the proposed system.</p>battery management system,fuzzy,multiport converter,pv system,battery_system_management,power_conversion_control,power_electronics_control,good",57,0,1,0,82,fuzzy control base multi port converter battery management systemthe mathematical photovoltaic develop environment maximum power point track implement operate optimal power generation intelligent controller analysis performance various weather condition paper propose multi port converter design environmental propose converter operate controlled fuzzy logic controller effective utilization power generation battery management propose fuzzy logic controller design battery power flow management various load demand different weather condition propose performance analyse various weather load demand finally result evaluate prove effectiveness propose battery management converterpv systembattery managementpower conversion controlpower electronics controlgood,"['fuzzy', 'control', 'base', 'multi', 'port', 'converter', 'battery', 'management', 'systemthe', 'mathematical', 'photovoltaic', 'develop', 'environment', 'maximum', 'power', 'point', 'track', 'implement', 'operate', 'optimal', 'power', 'generation', 'intelligent', 'controller', 'analysis', 'performance', 'various', 'weather', 'condition', 'paper', 'propose', 'multi', 'port', 'converter', 'design', 'environmental', 'propose', 'converter', 'operate', 'controlled', 'fuzzy', 'logic', 'controller', 'effective', 'utilization', 'power', 'generation', 'battery', 'management', 'propose', 'fuzzy', 'logic', 'controller', 'design', 'battery', 'power', 'flow', 'management', 'various', 'load', 'demand', 'different', 'weather', 'condition', 'propose', 'performance', 'analyse', 'various', 'weather', 'load', 'demand', 'finally', 'result', 'evaluate', 'prove', 'effectiveness', 'propose', 'battery', 'management', 'converterpv', 'systembattery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controlgood']",4
1970,62132,"It steps up the dc voltage.<p>It steps up 20V dc to 70V dc.It measures the output voltage and subtracts with reference voltage. Their difference is passed to PI controller which calculates the dc current to be drawn from input side. This reference current is compared to actual input current and their difference is passed to hysteresis band current controller which generates gate signal for switch S. By switching the MOSFET S, voltage is boosted up and output voltage is maintained constant at 70 V.</p>power_conversion_control,power_electronics_control,boost converter,dc to dc converter,stepup chopper,switching regulator",28,1,2,0,29,step voltage step measure output voltage subtract reference voltage difference pass controller calculates current drawn input side reference current compare actual input current difference pass hysteresis band current controller generates gate signal switch switch mosfet voltage boost output voltage maintain constant power conversion controlpower electronics controlboost converterdc converterstepup regulator,"['step', 'voltage', 'step', 'measure', 'output', 'voltage', 'subtract', 'reference', 'voltage', 'difference', 'pass', 'controller', 'calculates', 'current', 'drawn', 'input', 'side', 'reference', 'current', 'compare', 'actual', 'input', 'current', 'difference', 'pass', 'hysteresis', 'band', 'current', 'controller', 'generates', 'gate', 'signal', 'switch', 'switch', 'mosfet', 'voltage', 'boost', 'output', 'voltage', 'maintain', 'constant', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterdc', 'converterstepup', 'regulator']",3
1971,62137,"It steps down DC voltage.<p>It steps down DC voltage from 70 V to 20 V. It measures the output voltage and compares with reference voltage. Their difference is passed to PI controller which gives current to be drawn to maintain output voltage to reference value. This calculated reference current is compared with actual inductor current. If actual inductor current is less than calculated reference current, then switchin mosfet S is turned on so that inductor current increases.  If actual inductor current is greater than calculated reference current, then switchin mosfet S is turned off so that inductor current decreases. In this way, output voltage is regulated.</p>power_conversion_control,power_electronics_control,buck converter,dc to dc converter,switching regulator",32,1,2,0,31,step voltage step voltage measure output voltage compare reference voltage difference pass controller give current drawn maintain output voltage reference value calculate reference current compare actual inductor current actual inductor current calculate reference current switchin mosfet turn inductor current increase actual inductor current great calculate reference current switchin mosfet turn inductor current decrease way output voltage regulate power conversion controlpower electronics controlbuck converterdc regulator,"['step', 'voltage', 'step', 'voltage', 'measure', 'output', 'voltage', 'compare', 'reference', 'voltage', 'difference', 'pass', 'controller', 'give', 'current', 'drawn', 'maintain', 'output', 'voltage', 'reference', 'value', 'calculate', 'reference', 'current', 'compare', 'actual', 'inductor', 'current', 'actual', 'inductor', 'current', 'calculate', 'reference', 'current', 'switchin', 'mosfet', 'turn', 'inductor', 'current', 'increase', 'actual', 'inductor', 'current', 'great', 'calculate', 'reference', 'current', 'switchin', 'mosfet', 'turn', 'inductor', 'current', 'decrease', 'way', 'output', 'voltage', 'regulate', 'power', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converterdc', 'regulator']",3
1972,62147,"Active power filter using power balance theory with DSPACE<p>Shunt active power filter model using Power Balance Theory with DSPACE</p>application,demo,matlab,power,simulink",102,5,3,0,147,active power filter power balance theory dspaceshunt active power filter power balance theory,"['active', 'power', 'filter', 'power', 'balance', 'theory', 'dspaceshunt', 'active', 'power', 'filter', 'power', 'balance', 'theory']",3
1973,62154,Manchester coding<p>This Simulink example codify via Manchester code  as per 802.3  the binary number10100111001The model also shows the clock and the the fact that the clock samples data in the middle of data bit when clock goes high to lowThe Manchester code transition is in the middle of data bit or at the beginning(when it doesnt mean anything)</p>ethernet,25,2,3,0,22,manchester codingthis example codify via manchester code per binary number also show clock fact clock sample data middle data bit clock high lowthe manchester code transition middle data bit begin doesnt mean anything ethernet,"['manchester', 'codingthis', 'example', 'codify', 'via', 'manchester', 'code', 'per', 'binary', 'number', 'also', 'show', 'clock', 'fact', 'clock', 'sample', 'data', 'middle', 'data', 'bit', 'clock', 'high', 'lowthe', 'manchester', 'code', 'transition', 'middle', 'data', 'bit', 'begin', 'doesnt', 'mean', 'anything', 'ethernet']",0
1974,62165,"DC motor<p>DC motor</p>electric_motor_control,power_conversion_control,power_electronics_control,dc,simulation",22,0,1,0,24,motordc motorelectric motor controlpower conversion controlpower electronics,"['motordc', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
1975,62168,"SAFP using Power Balance Theory with hysteresis current controller<p>Calculation of fundamental current using power balance theory. Force source current to follow fundamental current using hysteresis current controller.</p>control design,filter design,power,simulink",103,5,3,0,160,safp power balance theory hysteresis current fundamental current power balance theory force source current follow fundamental current hysteresis current controller control designfilter,"['safp', 'power', 'balance', 'theory', 'hysteresis', 'current', 'fundamental', 'current', 'power', 'balance', 'theory', 'force', 'source', 'current', 'follow', 'fundamental', 'current', 'hysteresis', 'current', 'controller', 'control', 'designfilter']",3
1976,62221,"Physical model of two D.O.F manipulator (RR Manipulator)<p>Just applying a physical model of two D.O.F manipulator (RR Manipulator) using Matlab Simulink- Simmechanics. Applied Forward kinematics for this Manipulator. Compare the readings from Solving FK equations and Position sensor.</p>matlab,robotics,simmechanics,simulation,simulink",49,1,2,0,56,physical two manipulator manipulator apply physical two manipulator manipulator simmechanics apply forward kinematics manipulator compare reading solve equation position sensor,"['physical', 'two', 'manipulator', 'manipulator', 'apply', 'physical', 'two', 'manipulator', 'manipulator', 'simmechanics', 'apply', 'forward', 'kinematics', 'manipulator', 'compare', 'reading', 'solve', 'equation', 'position', 'sensor']",0
1977,62222,"Physical model of two D.O.F manipulator (RR Manipulator)<p>Applying a physical model of two D.O.F manipulator (RR Manipulator) using Matlab Simulink- SimMechanics. Applied Inverse kinematics for this Manipulator. You can compare the reading of position sensor and inverse kinematics equations. It's supposed to be the same.</p>matlab,robotics,simmechanics,simulation,simulink",66,2,2,0,81,physical two manipulator manipulator apply physical two manipulator manipulator simmechanics applied inverse kinematics manipulator compare read position sensor inverse kinematics equation suppose,"['physical', 'two', 'manipulator', 'manipulator', 'apply', 'physical', 'two', 'manipulator', 'manipulator', 'simmechanics', 'applied', 'inverse', 'kinematics', 'manipulator', 'compare', 'read', 'position', 'sensor', 'inverse', 'kinematics', 'equation', 'suppose']",0
1978,62223,Example DO-254 project<p>This example provides a workflow for DO-254 project using Model-Based Design with MathWorks tools.  The example is an implementation of a hydraulic actuator loop implemented on an FPGA.</p>aerospace,188,3,2,-1,155,example projectthis example provide workflow project base design mathworks tool example implementation hydraulic actuator loop implement fpga aerospace,"['example', 'projectthis', 'example', 'provide', 'workflow', 'project', 'base', 'design', 'mathworks', 'tool', 'example', 'implementation', 'hydraulic', 'actuator', 'loop', 'implement', 'fpga', 'aerospace']",7
1979,62255,"Binary Counter<p>It is a Binary counter using T Flip Flop. Mask is added to make the circuit clear. T Flip Flop is made using an Xor and a D Flip Flop as T flip flop is not available readymade in Simulink.</p>binary counter,t flip flop",38,4,2,0,49,binary counterit binary counter flip flop mask add make circuit clear flip flop make xor flip flop flip flop available readymade binary countert flip flop,"['binary', 'counterit', 'binary', 'counter', 'flip', 'flop', 'mask', 'add', 'make', 'circuit', 'clear', 'flip', 'flop', 'make', 'xor', 'flip', 'flop', 'flip', 'flop', 'available', 'readymade', 'binary', 'countert', 'flip', 'flop']",8
1980,62257,"using repeating sequence<p>simplified 31 level multi level inverter circuit</p>power electronics,simulation,simulink",55,1,2,0,53,repeat level multi level inverter circuitpower,"['repeat', 'level', 'multi', 'level', 'inverter', 'circuitpower']",3
1981,62258,"solar panel characterstics<p>solar panel charcterstics and mppt tracking and booster circuit</p>power_conversion_control,power_electronics_control,booster,mppt,simulation,simulink,solar panel characterstics,solarpanel",172,15,3,0,180,solar panel panel charcterstics mppt track booster circuitpower conversion controlpower electronics panel,"['solar', 'panel', 'panel', 'charcterstics', 'mppt', 'track', 'booster', 'circuitpower', 'conversion', 'controlpower', 'electronics', 'panel']",3
1982,62259,"solar powered multi level inverter<p>it is a simplified multi level inverter with less THD and uses spwm technique.battery backup provided to conserve maximum power from supply proposing a grid integration phenomenon</p>battery_system_management,power_electronics_control,power electronics,project,simulation,simulink",73,1,2,0,88,solar power multi level inverterit simplify multi level inverter thd spwm technique battery backup provide conserve maximum power supply propose grid integration managementpower electronics controlpower,"['solar', 'power', 'multi', 'level', 'inverterit', 'simplify', 'multi', 'level', 'inverter', 'thd', 'spwm', 'technique', 'battery', 'backup', 'provide', 'conserve', 'maximum', 'power', 'supply', 'propose', 'grid', 'integration', 'managementpower', 'electronics', 'controlpower']",3
1983,62260,"fifteen level inverter<p>fifteen level multi level iinverter</p>power electronics,simulation,simulink",53,1,2,0,72,fifteen level inverterfifteen level multi level iinverterpower,"['fifteen', 'level', 'inverterfifteen', 'level', 'multi', 'level', 'iinverterpower']",4
1984,62271,"It can both step up or down dc voltage.<p>It measures capacitor voltage and compare with reference dc voltage. Their difference is passed to PI controller which calculates the power to be drawn and hence current to be drawn from input. This reference input current is compared with actual input current by hysteresis band controller. If actual current is less than reference one, switch is turned on and current start to increase. If actual current is greater than reference one, switch is turned off. In this way, output votage is maintained.                 To work as buck converter, To work as buck converter, put Vref less than Vin.To work as boost converetr, put Vref greater than Vin.</p>power_conversion_control,power_electronics_control,boost,buck,converter,dcdc converter,inverting converter",33,1,2,0,32,step voltage measure capacitor voltage compare reference voltage difference pass controller calculates power draw hence current drawn input reference input current compare actual input current hysteresis band controller actual current less reference one switch turn current start increase actual current great reference one switch turn way output votage maintain work buck converter work buck converter put vref less vin work boost converetr put vref great vin power conversion controlpower electronics converter,"['step', 'voltage', 'measure', 'capacitor', 'voltage', 'compare', 'reference', 'voltage', 'difference', 'pass', 'controller', 'calculates', 'power', 'draw', 'hence', 'current', 'drawn', 'input', 'reference', 'input', 'current', 'compare', 'actual', 'input', 'current', 'hysteresis', 'band', 'controller', 'actual', 'current', 'less', 'reference', 'one', 'switch', 'turn', 'current', 'start', 'increase', 'actual', 'current', 'great', 'reference', 'one', 'switch', 'turn', 'way', 'output', 'votage', 'maintain', 'work', 'buck', 'converter', 'work', 'buck', 'converter', 'put', 'vref', 'less', 'vin', 'work', 'boost', 'converetr', 'put', 'vref', 'great', 'vin', 'power', 'conversion', 'controlpower', 'electronics', 'converter']",3
1985,62272,"seven level inverter<p>seven level inverter with seven switches</p>multi level inverters,power electronics,simulation,simulink",51,1,2,0,52,seven level inverterseven level inverter seven switchesmulti level inverterspower,"['seven', 'level', 'inverterseven', 'level', 'inverter', 'seven', 'switchesmulti', 'level', 'inverterspower']",4
1986,62273,"seven level inverter<p>seven level inverter with sx switches</p>multi level inverter,simulation,simulink",38,1,2,0,45,seven level inverterseven level inverter switchesmulti level,"['seven', 'level', 'inverterseven', 'level', 'inverter', 'switchesmulti', 'level']",3
1987,62275,"Instantaneous<p>This is an example of instantaneous sag.</p>instantaneous,matlab,sag,simulink",9,0,1,0,8,example instantaneous sag,"['example', 'instantaneous', 'sag']",0
1988,62282,"Instantaneous Overcurrent Relay Block that operates when the current exceeds a predetermined value.<p>Instantaneous Overcurrent Relay (ANSI/IEEE C37.2 device number 50) that operates when the current exceeds a predetermined value.This relay operates with Low-set I&gt; and High-set I&gt;&gt; setting.</p>ansi device number 50,digital protection relay,ieee std c372,instantaneous overcurrent relay,numerical protection relay,overcurrent protection relay,protection relay,transmission line fault",18,1,2,0,32,instantaneous overcurrent relay block operate current exceeds predetermine value instantaneous overcurrent relay ansi iee device number operate current exceeds predetermine value relay operate low set high set set ansi device number digital protection relayiee std instantaneous overcurrent relaynumerical protection protection relayprotection line fault,"['instantaneous', 'overcurrent', 'relay', 'block', 'operate', 'current', 'exceeds', 'predetermine', 'value', 'instantaneous', 'overcurrent', 'relay', 'ansi', 'iee', 'device', 'number', 'operate', 'current', 'exceeds', 'predetermine', 'value', 'relay', 'operate', 'low', 'set', 'high', 'set', 'set', 'ansi', 'device', 'number', 'digital', 'protection', 'relayiee', 'std', 'instantaneous', 'overcurrent', 'relaynumerical', 'protection', 'protection', 'relayprotection', 'line', 'fault']",0
1989,62284,speed control<p>it is working ok</p>3d,17,0,1,0,19,speed controlit work,"['speed', 'controlit', 'work']",4
1990,62288,"Modelo de motor<p>Un modelo simple que permite obtener la posiciÃ³n del aspa de un motor en grados.</p>electric_motor_control,power_electronics_control,simulation,simulink",9,0,1,0,10,modelo motorun modelo simple que permite obtener posiciÃ³n del aspa motor grados electric motor controlpower electronics,"['modelo', 'motorun', 'modelo', 'simple', 'que', 'permite', 'obtener', 'posiciÃ³n', 'del', 'aspa', 'motor', 'grados', 'electric', 'motor', 'controlpower', 'electronics']",3
1991,62297,"Yet another DC drive model for my students.<p>This model includes several uncertainties such as parameter identification errors (regarding motor parameters and measurement interface parameters), as well as process and measurement noise. A proportional-resonant (PR) position controller is included.</p>control,controller tuning,dc drive,identification error,identification errors,kessler,measurement noise,naslin,noise,offset,offsets,parameter identification,pr controller,preshaper,process noise,reference,reference model,resonant controller,spline,sramp,uncertainties,uncertainty,electric_motor_control,power_conversion_control,power_electronics_control",49,0,1,0,55,yet another drive student include several uncertainty parameter identification error regard motor parameter measurement interface parameter well process measurement noise proportional resonant position controller include tuningdc modelresonant motor controlpower conversion controlpower electronics control,"['yet', 'another', 'drive', 'student', 'include', 'several', 'uncertainty', 'parameter', 'identification', 'error', 'regard', 'motor', 'parameter', 'measurement', 'interface', 'parameter', 'well', 'process', 'measurement', 'noise', 'proportional', 'resonant', 'position', 'controller', 'include', 'tuningdc', 'modelresonant', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",3
1992,62334,"This model is created for three phase SPWM boost rectifier with abc-dq based closed loop control.<p>This model is created for three phase SPWM AC-DC boost converter. A abc-dq control loop is implemented for unity power factor. The proposed model provide regulated output DC voltage with unity power factor and superior input power quality. The input voltage is three phase 230 V rms, 50 Hz. The output voltage is 800 V DC.</p>acdc,boost rectifier,power converter,power electronics,power factor control,pwm,rectifier,spwm,three phase,unity power factor,power_conversion_control,power_electronics_control",121,3,2,0,131,create three phase spwm boost rectifier abc base closed loop control create three phase spwm boost converter abc control loop implement unity power factor propose provide regulate output voltage unity power factor superior input power quality input voltage three phase rms output voltage acdcboost rectifierpower converterpower factor phaseunity power factorpower conversion controlpower electronics control,"['create', 'three', 'phase', 'spwm', 'boost', 'rectifier', 'abc', 'base', 'closed', 'loop', 'control', 'create', 'three', 'phase', 'spwm', 'boost', 'converter', 'abc', 'control', 'loop', 'implement', 'unity', 'power', 'factor', 'propose', 'provide', 'regulate', 'output', 'voltage', 'unity', 'power', 'factor', 'superior', 'input', 'power', 'quality', 'input', 'voltage', 'three', 'phase', 'rms', 'output', 'voltage', 'acdcboost', 'rectifierpower', 'converterpower', 'factor', 'phaseunity', 'power', 'factorpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1993,62371,"Four-bar linkage lengths are optimized using MATLAB to follow a desired trajectory.<p>This example shows a four-bar linkage modeled in Simscape Multibody that is optimized using MATLAB so that the tip of the linkage follows a desired trajectory. Mechanical designers often wish to design mechanisms that will enable an end effector to follow a certain path. The lengths of the links and the position of the end effector influence the trajectory of the end effector in a complex kinematic relationship. Optimization algorithms can be used to tune those lengths to achieve the desired motion.  The process is similar to what is described in the video âComputational Design of Mechanical Charactersâ <a href=""https://www.youtube.com/watch?v=DfznnKUwywQ"">https://www.youtube.com/watch?v=DfznnKUwywQ</a> In this example, a parameter sweep is performed to see which trajectories are possible when varying a subset of the lengths. Then those lengths are tuned using MATLAB optimization algorithms until the resulting trajectory is within tolerances of the desired trajectory.Please read the README.txt file to get started.See how to use Simscape Multibody to model a cam-follower mechanism: <a href=""https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html"">https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html</a>  Learn more about multibody simulation with Simscape Multibody by watching this webinar <a href=""https://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">https://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a>  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>  Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>kinematic,kinematic synthesis,kinematics,mechanism,multibody,physical modeling",295,45,3,0,260,four bar linkage length optimize follow desire trajectory example show four bar linkage simscape multibody optimize tip linkage follow desire trajectory mechanical designer often wish design mechanisms enable end effector follow certain path length link position end effector influence trajectory end effector complex kinematic relationship optimization algorithm tune length achieve desire motion process similar describe video computational design mechanical character youtube com watch dfznnkuwywq example parameter sweep perform see trajectory possible vary subset length length tune optimization algorithm result trajectory within tolerance desire trajectory please read readme txt file get start see simscape multibody cam follower mechanism mathworks com videos modeling contact force cam follower html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling modeling,"['four', 'bar', 'linkage', 'length', 'optimize', 'follow', 'desire', 'trajectory', 'example', 'show', 'four', 'bar', 'linkage', 'simscape', 'multibody', 'optimize', 'tip', 'linkage', 'follow', 'desire', 'trajectory', 'mechanical', 'designer', 'often', 'wish', 'design', 'mechanisms', 'enable', 'end', 'effector', 'follow', 'certain', 'path', 'length', 'link', 'position', 'end', 'effector', 'influence', 'trajectory', 'end', 'effector', 'complex', 'kinematic', 'relationship', 'optimization', 'algorithm', 'tune', 'length', 'achieve', 'desire', 'motion', 'process', 'similar', 'describe', 'video', 'computational', 'design', 'mechanical', 'character', 'youtube', 'com', 'watch', 'dfznnkuwywq', 'example', 'parameter', 'sweep', 'perform', 'see', 'trajectory', 'possible', 'vary', 'subset', 'length', 'length', 'tune', 'optimization', 'algorithm', 'result', 'trajectory', 'within', 'tolerance', 'desire', 'trajectory', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'simscape', 'multibody', 'cam', 'follower', 'mechanism', 'mathworks', 'com', 'videos', 'modeling', 'contact', 'force', 'cam', 'follower', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'modeling']",7
1994,62372,"This model is created for simulating three phase  AC-DC buck rectifier with Sinusoidal PWM method.<p>Three phase buck rectifier are popular AC-DC converter for the applications where low output DC voltage is required. With lower sensing and control complexity as well as higher power density, they are very suitable for applications including More Electric Aircraft.</p>acdc,buck,more electric aircraft,power converter,power electronics,rectifier,three phase,electric_motor_control,power_conversion_control,power_electronics_control",92,2,2,0,108,create three phase buck rectifier sinusoidal pwm method three phase buck rectifier popular converter application low output voltage require low sense control complexity well high power density suitable application include electric aircraft acdcbuckmore electric aircraftpower converterpower phaseelectric motor controlpower conversion controlpower electronics control,"['create', 'three', 'phase', 'buck', 'rectifier', 'sinusoidal', 'pwm', 'method', 'three', 'phase', 'buck', 'rectifier', 'popular', 'converter', 'application', 'low', 'output', 'voltage', 'require', 'low', 'sense', 'control', 'complexity', 'well', 'high', 'power', 'density', 'suitable', 'application', 'include', 'electric', 'aircraft', 'acdcbuckmore', 'electric', 'aircraftpower', 'converterpower', 'phaseelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
1995,62374,"Water wheel connected to electric generator modeled in Simscape<p>This example shows a water wheel modeled using Simscape Multibody.    This example models the transfer of power from hydraulic flow to an electrical system. Water flowing from a spout fills buckets on a water wheel. A hole in the bottom of each bucket allows the water to drain. The wheel is asymmetrically loaded (full buckets on one side, empty buckets on the other) which causes the wheel to turn. The wheel is connected through a gear to a generator which produces 12 volts across a resistive load. This example uses the General Variable Mass block from Simscape Multibody to model the varying mass, inertia, and center of gravity location in each bucket. This is coupled with a hydraulic model for the flow of water and an electrical network, all modeled in Simscape. Please read the README.txt file to get started. See how to use Simscape Multibody to model a cam-follower mechanism: <a href=""https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html"">https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html</a>  Learn more about multibody simulation with Simscape Multibody by watching this webinar <a href=""https://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">https://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a>  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>   Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>generator,hydroelectric,micro hydro generator,physical modeling,variable mass",315,65,2,40,315,water wheel connect electric generator simscapethis example show water wheel simscape multibody example transfer power hydraulic flow electrical water flow spout fill bucket water wheel hole bottom bucket allow water drain wheel asymmetrically load full bucket one side empty bucket cause wheel turn wheel connect gear generator produce volt across resistive load example general variable mass block simscape multibody vary mass inertia center gravity location bucket couple hydraulic flow water electrical network simscape please read readme txt file get start see simscape multibody cam follower mechanism mathworks com videos modeling contact force cam follower html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling hydro mass,"['water', 'wheel', 'connect', 'electric', 'generator', 'simscapethis', 'example', 'show', 'water', 'wheel', 'simscape', 'multibody', 'example', 'transfer', 'power', 'hydraulic', 'flow', 'electrical', 'water', 'flow', 'spout', 'fill', 'bucket', 'water', 'wheel', 'hole', 'bottom', 'bucket', 'allow', 'water', 'drain', 'wheel', 'asymmetrically', 'load', 'full', 'bucket', 'one', 'side', 'empty', 'bucket', 'cause', 'wheel', 'turn', 'wheel', 'connect', 'gear', 'generator', 'produce', 'volt', 'across', 'resistive', 'load', 'example', 'general', 'variable', 'mass', 'block', 'simscape', 'multibody', 'vary', 'mass', 'inertia', 'center', 'gravity', 'location', 'bucket', 'couple', 'hydraulic', 'flow', 'water', 'electrical', 'network', 'simscape', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'simscape', 'multibody', 'cam', 'follower', 'mechanism', 'mathworks', 'com', 'videos', 'modeling', 'contact', 'force', 'cam', 'follower', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'hydro', 'mass']",7
1996,62421,Two area lfc<p>For two area load frequency control just simulate it</p>simulink,33,0,1,0,41,two area lfcfor two area load frequency control,"['two', 'area', 'lfcfor', 'two', 'area', 'load', 'frequency', 'control']",3
1997,62422,Frequency control using pid<p>Just simulate it in 2009b version</p>simulink,32,0,1,0,40,frequency control pidjust,"['frequency', 'control', 'pidjust']",3
1998,62438,"PV balancer it is a new architecture for solar PV system<p>Due to this architecture, the power rating of converter will reduce. In this file the duty ratio is not maintaining between 0 to 1. it crossing above one can any one help me for correction of this file. plzz....................</p>power_conversion_control,power_electronics_control,dcdc converter,mppt,pv,sepic,simulation,simulink,solar,system",203,12,4,0,230,balancer new architecture solar systemdue architecture power rating converter reduce file duty ratio maintain cross one one help correction file plzz power conversion controlpower electronics controldcdc,"['balancer', 'new', 'architecture', 'solar', 'systemdue', 'architecture', 'power', 'rating', 'converter', 'reduce', 'file', 'duty', 'ratio', 'maintain', 'cross', 'one', 'one', 'help', 'correction', 'file', 'plzz', 'power', 'conversion', 'controlpower', 'electronics', 'controldcdc']",4
1999,62444,"Flyback converter simulink model<p>This is simulation model developed for flyback converter. The coupled inductor of the flyback converter is modeled using a linear transformer. The switching frequency of the converter is 20 kHz. The model demonstrates the converter characteristics both in continuous and discontinuous mode.  The PWM duty cycle is controlled by changing the Vref. At lower duty and lower power, the converter goes into discontinuous mode of operation.</p>dc,dcdc,flyback,isolated,matlab,power,power electronics,power supply,simulation,simulink,switching power supplies,electric_motor_control,power_conversion_control,power_electronics_control",32,1,2,0,35,flyback converter modelthis develop flyback converter couple inductor flyback converter linear transformer switch frequency converter khz demonstrate converter characteristic continuous discontinuous mode pwm duty cycle control change vref lower duty low power converter discontinuous mode operation power motor controlpower conversion controlpower electronics control,"['flyback', 'converter', 'modelthis', 'develop', 'flyback', 'converter', 'couple', 'inductor', 'flyback', 'converter', 'linear', 'transformer', 'switch', 'frequency', 'converter', 'khz', 'demonstrate', 'converter', 'characteristic', 'continuous', 'discontinuous', 'mode', 'pwm', 'duty', 'cycle', 'control', 'change', 'vref', 'lower', 'duty', 'low', 'power', 'converter', 'discontinuous', 'mode', 'operation', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2000,62450,"A sliding mode control for 2-DOF planar robot manipulator.<p>A sliding mode control for 2-DOF planar robot manipulator.A presentation file on the topic is also provided.</p>control design,manipulator,sliding mode control",43,0,1,0,60,slide mode control dof planar robot manipulator slide mode control dof planar robot manipulator presentation file topic also provide control mode control,"['slide', 'mode', 'control', 'dof', 'planar', 'robot', 'manipulator', 'slide', 'mode', 'control', 'dof', 'planar', 'robot', 'manipulator', 'presentation', 'file', 'topic', 'also', 'provide', 'control', 'mode', 'control']",4
2001,62463,"SVPWM algorithm for 3-level NPC converter with DC voltage balancing<p>This model is based on a study of the thesis (or book, Unfortunately the document I have do not have a title) authored by Josep Pou from the Technical University of Catalonia. No novelty is claimed here. The algorithm is based  on dq-gh transformation and sextant symmetry in the SV diagram, hence simplifying sector, region and duty cycle calculations. Neutral dc voltage balancing is achieved, by implementing the NTV sequencing method with logic operations on the state feedback of the current imbalance on the DC bus due to neutral current. Note that the algorithm is performed in per unit, however if you wish to use this model for control purposes, then simply divide your dq reference values by a half of the maximum synthesis voltage (based on your DC voltage). This model is made with consideration in implementing it in labview FPGA, hence various sections of the code are optimized for digital implementation with mostly add, subtract, invert, logic and signal routing functions. If you really wish to understand this model, I strongly suggest you find the above referenced paper and study it thoroughly. Any questions will be answered when I visit the site. This is my first time uploading, any criticism are very much welcome :)</p>power_conversion_control,power_electronics_control,power electronics,svm,svpwm,threelevel converter",343,10,4,0,573,svpwm algorithm level npc converter voltage balancingthis base study thesis book unfortunately document title author josep pou technical university catalonia novelty claim algorithm base transformation sextant symmetry diagram hence simplify sector region duty cycle calculation neutral voltage balance achieve implement ntv sequence method logic operation state feedback current imbalance bus due neutral current note algorithm perform per unit however wish control purpose simply divide reference value half maximum synthesis voltage base voltage make consideration implement labview fpga hence various section code optimized digital implementation mostly add subtract invert logic signal rout function really wish understand strongly suggest find referenced paper study thoroughly question answer visit site first time upload criticism much welcome power conversion controlpower electronics controlpower converter,"['svpwm', 'algorithm', 'level', 'npc', 'converter', 'voltage', 'balancingthis', 'base', 'study', 'thesis', 'book', 'unfortunately', 'document', 'title', 'author', 'josep', 'pou', 'technical', 'university', 'catalonia', 'novelty', 'claim', 'algorithm', 'base', 'transformation', 'sextant', 'symmetry', 'diagram', 'hence', 'simplify', 'sector', 'region', 'duty', 'cycle', 'calculation', 'neutral', 'voltage', 'balance', 'achieve', 'implement', 'ntv', 'sequence', 'method', 'logic', 'operation', 'state', 'feedback', 'current', 'imbalance', 'bus', 'due', 'neutral', 'current', 'note', 'algorithm', 'perform', 'per', 'unit', 'however', 'wish', 'control', 'purpose', 'simply', 'divide', 'reference', 'value', 'half', 'maximum', 'synthesis', 'voltage', 'base', 'voltage', 'make', 'consideration', 'implement', 'labview', 'fpga', 'hence', 'various', 'section', 'code', 'optimized', 'digital', 'implementation', 'mostly', 'add', 'subtract', 'invert', 'logic', 'signal', 'rout', 'function', 'really', 'wish', 'understand', 'strongly', 'suggest', 'find', 'referenced', 'paper', 'study', 'thoroughly', 'question', 'answer', 'visit', 'site', 'first', 'time', 'upload', 'criticism', 'much', 'welcome', 'power', 'conversion', 'controlpower', 'electronics', 'controlpower', 'converter']",4
2002,62472,"Hi,this Vigneshwar Pesaru.I am submitting this Simulink model for Quarter car suspension system.<p>Hi,this Vigneshwar Pesaru.I am submitting this Simulink model for Quarter car suspension system.By default,the input function is Step function.One can give any function,such as Sin,cos,or unit ramp functions.Based on this the output screen give you a out put response as the Displacement Vs Time.One,can clear know how the basic parameters such as Spring Constant(K),Damping Co-efficient(Cs) and Mass(M) would effect the displacement with time.</p>matlab,simulation,simulink",15,0,1,0,17,hithis vigneshwar pesaru submit quarter car suspension hithis vigneshwar pesaru submit quarter car suspension defaultthe input function step function one give functionsuch sincosor unit ramp function base output screen give put response displacement time onecan clear know basic parameter spring constant damp efficient mass would effect displacement time,"['hithis', 'vigneshwar', 'pesaru', 'submit', 'quarter', 'car', 'suspension', 'hithis', 'vigneshwar', 'pesaru', 'submit', 'quarter', 'car', 'suspension', 'defaultthe', 'input', 'function', 'step', 'function', 'one', 'give', 'functionsuch', 'sincosor', 'unit', 'ramp', 'function', 'base', 'output', 'screen', 'give', 'put', 'response', 'displacement', 'time', 'onecan', 'clear', 'know', 'basic', 'parameter', 'spring', 'constant', 'damp', 'efficient', 'mass', 'would', 'effect', 'displacement', 'time']",5
2003,62474,"Yet another illustration of ILC for my students.<p>To my wife Kasia (Katie) and my daughter Julia without whom MATLAB Central would have become my home.</p>2axis machine,2d system,cnc,cutting machine,heart,ilc,iterative learning control,position control,reference tracking,repetitive control,tracking,twoaxis machine",119,4,3,0,138,yet another illustration ilc student wife kasia katie daughter julia without central would become home axis machine learn controlposition machine,"['yet', 'another', 'illustration', 'ilc', 'student', 'wife', 'kasia', 'katie', 'daughter', 'julia', 'without', 'central', 'would', 'become', 'home', 'axis', 'machine', 'learn', 'controlposition', 'machine']",8
2004,62477,"It mitigates harmonics on AC side of full wave rectifier.<p>When full wave rectifier with filter is used, current on ac sides contains spikes. THD for this current is very high. This harmonics needs to be eliminated. This can be done using full bridge. Current on ac side of full bridge can be controlled easily.                        Here, voltage of output capacitor is measured and subtracted with reference voltage. This difference is passed to PI controller which gives the value of power to be drawn from AC side to maintain the capacitor voltage. In steady state, this value is equal to power drawn by DC load. From the value of power, reference current in phase with input AC voltage is calcuated whose magnitude determined by the value of power to be drawn. In this way, reference current is calculated. This current is drawn from AC side where current being controlled by hysteresis band current controller. In this way, harmonics of current in AC side  can be mitigated.</p>power_conversion_control,power_electronics_control,harmonics,power filter,rectifier",50,3,2,0,56,mitigates harmonic side full wave rectifier full wave rectifier filter current side contains spike thd current high harmonic need eliminate full bridge current side full bridge control easily voltage output capacitor measure subtracted reference voltage difference pass controller give value power draw side maintain capacitor voltage steady state value equal power drawn load value power reference current phase input voltage calcuated whose magnitude determine value power drawn way reference current calculate current drawn side current control hysteresis band current controller way harmonic current side mitigate power conversion controlpower electronics filterrectifier,"['mitigates', 'harmonic', 'side', 'full', 'wave', 'rectifier', 'full', 'wave', 'rectifier', 'filter', 'current', 'side', 'contains', 'spike', 'thd', 'current', 'high', 'harmonic', 'need', 'eliminate', 'full', 'bridge', 'current', 'side', 'full', 'bridge', 'control', 'easily', 'voltage', 'output', 'capacitor', 'measure', 'subtracted', 'reference', 'voltage', 'difference', 'pass', 'controller', 'give', 'value', 'power', 'draw', 'side', 'maintain', 'capacitor', 'voltage', 'steady', 'state', 'value', 'equal', 'power', 'drawn', 'load', 'value', 'power', 'reference', 'current', 'phase', 'input', 'voltage', 'calcuated', 'whose', 'magnitude', 'determine', 'value', 'power', 'drawn', 'way', 'reference', 'current', 'calculate', 'current', 'drawn', 'side', 'current', 'control', 'hysteresis', 'band', 'current', 'controller', 'way', 'harmonic', 'current', 'side', 'mitigate', 'power', 'conversion', 'controlpower', 'electronics', 'filterrectifier']",3
2005,62484,"Kinematic analysis of spherical wrist mechanism.<p>This is a MATLAB tool for the kinematic analysis of a spherical wrist mechanism. Two GUI programs are included: Forward Kinematics (fk.m) and Inverse Kinematics (ik.m). YouTube video: <a href=""https://www.youtube.com/watch?v=O7YBvMSepTg&amp;t=21s"">https://www.youtube.com/watch?v=O7YBvMSepTg&amp;t=21s</a></p>gripper,kinematics,robot,robotics,spherical wrist",81,10,2,0,68,kinematic analysis spherical wrist mechanism tool kinematic analysis spherical wrist mechanism two gui program include forward kinematics inverse kinematics youtube video youtube com watch ybvmseptg amp wrist,"['kinematic', 'analysis', 'spherical', 'wrist', 'mechanism', 'tool', 'kinematic', 'analysis', 'spherical', 'wrist', 'mechanism', 'two', 'gui', 'program', 'include', 'forward', 'kinematics', 'inverse', 'kinematics', 'youtube', 'video', 'youtube', 'com', 'watch', 'ybvmseptg', 'amp', 'wrist']",0
2006,62500,Code<p>Generated Code Sample</p>code,1,0,1,0,0,codegenerated code samplecode,"['codegenerated', 'code', 'samplecode']",5
2007,62532,"9 levels  obtained at output.<p>4 single phase H bridge are cascaded in such a way that, we get 9 level at output side.</p>cascaded,h bridge,inverter,nine,phase,single,spwm",82,0,1,0,100,level obtain output single phase bridge cascade way get level output side cascadedh,"['level', 'obtain', 'output', 'single', 'phase', 'bridge', 'cascade', 'way', 'get', 'level', 'output', 'side', 'cascadedh']",3
2008,62550,"This model is created for understanding three phase diode rectifier.<p>This model is created for understanding three phase diode rectifier. The input voltage is 230 V rms, 60 Hz.</p>acdc,aerospace,diode,diode rectifier,power electronics,power supply,rectifier,simulation,simulink,three phase",17,0,1,0,22,create understanding three phase diode rectifier create understanding three phase diode rectifier input voltage rms rectifierpower phase,"['create', 'understanding', 'three', 'phase', 'diode', 'rectifier', 'create', 'understanding', 'three', 'phase', 'diode', 'rectifier', 'input', 'voltage', 'rms', 'rectifierpower', 'phase']",3
2009,62602,"inverter<p>three-phase four-leg inverter based on pwm</p>electric_motor_control,power_conversion_control,power_electronics_control,pwm,simulation",84,2,2,0,117,inverterthree phase four leg inverter base pwmelectric motor controlpower conversion controlpower electronics,"['inverterthree', 'phase', 'four', 'leg', 'inverter', 'base', 'pwmelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
2010,62627,"It is the simulation file of single phase sine wave inverter.<p>It compares the actual output voltage with reference sine wave and generates switching signal accordingly. As the MOSFET works as switch, output will never be sinusoidal. So, inductor and capacitor are placed to filter out switching noise. So, the output will be nearly sinusoidal.</p>inverter,lc filter,sine wave,single phase",17,0,1,0,20,file single phase sine wave inverter compare actual output voltage reference sine wave generates switch signal accordingly mosfet work switch output never sinusoidal inductor capacitor place filter switch noise output nearly sinusoidal inverterlc filtersine wavesingle phase,"['file', 'single', 'phase', 'sine', 'wave', 'inverter', 'compare', 'actual', 'output', 'voltage', 'reference', 'sine', 'wave', 'generates', 'switch', 'signal', 'accordingly', 'mosfet', 'work', 'switch', 'output', 'never', 'sinusoidal', 'inductor', 'capacitor', 'place', 'filter', 'switch', 'noise', 'output', 'nearly', 'sinusoidal', 'inverterlc', 'filtersine', 'wavesingle', 'phase']",3
2011,62639,"LSM303DLHC and arduino<p>Interface arduino with a high performance e-compass 3D accelerometer and 3D magnetometer module by i2c bus</p>accelerometer,arduino,i2c",68,12,2,17,43,lsm dlhc arduino high performance compass accelerometer magnetometer module,"['lsm', 'dlhc', 'arduino', 'high', 'performance', 'compass', 'accelerometer', 'magnetometer', 'module']",5
2012,62645,"Yet another demo for my students.<p>A similar story to <a href=""http://www.mathworks.com/matlabcentral/fileexchange/62474-2-axis-cnc-ilc-cutting-machine"">http://www.mathworks.com/matlabcentral/fileexchange/62474-2-axis-cnc-ilc-cutting-machine</a>, but this time using multiresonant / multioscillatory (MOSC) controllers.</p>cnc,ilc,multioscillatory controller,multiresonant controller,oscillatory controller,position control,rc,repetitve control,resonant controller,servo drive,servodrive",133,6,4,0,152,yet another demo student similar story http mathworks com matlabcentral fileexchange axis cnc ilc cut machine time multiresonant mosc controller controlresonant controllerservo driveservodrive,"['yet', 'another', 'demo', 'student', 'similar', 'story', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'axis', 'cnc', 'ilc', 'cut', 'machine', 'time', 'multiresonant', 'mosc', 'controller', 'controlresonant', 'controllerservo', 'driveservodrive']",0
2013,62668,"FTNCS-MAS - Fault Tolerant Networked Control Systems based on Multi-Agent Systems<p>FTNCS-MAS stands for Fault Tolerant Networked Control Systems based on Multi-Agent Systems. This is a toolbox designed specifically for this type of systems. It helps you with the design of several FTNCS-MAS architectures, using this platform, with little effort, giving you more time to spend on the micro-level architecture development of the agents and facilitators. You design the whole platform and architecture in SimulinkÂ®, under MATLABÂ®, and when you compile your project, the deployable architecture is created automatically and will be ready to be used in your test environment. User Manual inside.</p>ftncsmas,toolbox",6467,994,4,0,5573,ftncs fault tolerant network control base multi agent systemsftncs stand fault tolerant network control base multi agent toolbox design specifically type help design several ftncs architectures platform little effort give time spend micro level architecture development agent facilitator design whole platform architecture compile project deployable architecture create automatically ready test environment user manual inside ftncsmastoolbox,"['ftncs', 'fault', 'tolerant', 'network', 'control', 'base', 'multi', 'agent', 'systemsftncs', 'stand', 'fault', 'tolerant', 'network', 'control', 'base', 'multi', 'agent', 'toolbox', 'design', 'specifically', 'type', 'help', 'design', 'several', 'ftncs', 'architectures', 'platform', 'little', 'effort', 'give', 'time', 'spend', 'micro', 'level', 'architecture', 'development', 'agent', 'facilitator', 'design', 'whole', 'platform', 'architecture', 'compile', 'project', 'deployable', 'architecture', 'create', 'automatically', 'ready', 'test', 'environment', 'user', 'manual', 'inside', 'ftncsmastoolbox']",5
2014,62672,Islanding Detection In distributed Generations<p>Islanding Detection</p>simulink,57,0,1,0,95,islanding detection distribute,"['islanding', 'detection', 'distribute']",8
2015,62688,"Different Multilevel Converter Topologies for Battery Energy Storage Application<p>Five multilevel converter topologies of NPC, Z-source, QuasiZ-source, Cascaded, and Capacitor clamped have been investigated and compared in terms of their THD, efficiency, number of required semiconductors and other important characteristics in order to find the most suitable topology, which is appropriate to use in Battery Energy Storage Systems (BESS) applications. The results prove that cascaded topology has better performance in comparison with other types. This topology was chosen for three reasons. First, the efficiency and reliability studies were conducted, and the CMLI was found to be the most efficient and reliable topology with minimum amount of power loss compared to other topologies. Second, it subdivides the battery string and increases the high voltage functionality. Finally, capacitor volume, cost and THD studies were again confirmed the effectiveness of this topology in battery energy storage systems.If you are using this package in your research or teaching, please include explicit mention of the reference paper:------Reference:A. Delavari, I. Kamwa, A. Zabihinejad, ""Different Multilevel Converter Topologies for Battery Energy Storage Application,"" THE 30TH ANNUAL IEEE CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING (CCECE 2017).<a href=""http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7946773"">http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=7946773</a></p>battery_system_management,power_conversion_control,power_electronics_control,paper,simulation",1200,43,3,0,1354,different multilevel converter topology battery energy storage applicationfive multilevel converter topology npc source quasiz source cascade capacitor clamp investigate compare term thd efficiency number require semiconductor important characteristic order find suitable topology appropriate battery energy storage bess application result prove cascaded topology well performance comparison type topology choose three reason first efficiency reliability study conduct cmli find efficient reliable topology minimum amount power loss compare topology second subdivides battery string increase high voltage functionality finally capacitor volume cost thd study confirm effectiveness topology battery energy storage package research teach please include explicit mention reference paper reference delavari kamwa zabihinejad different multilevel converter topology battery energy storage application annual iee canadian conference electrical computer engineering ccece http ieexplore iee org stamp stamp jsp arnumber battery managementpower conversion controlpower electronics,"['different', 'multilevel', 'converter', 'topology', 'battery', 'energy', 'storage', 'applicationfive', 'multilevel', 'converter', 'topology', 'npc', 'source', 'quasiz', 'source', 'cascade', 'capacitor', 'clamp', 'investigate', 'compare', 'term', 'thd', 'efficiency', 'number', 'require', 'semiconductor', 'important', 'characteristic', 'order', 'find', 'suitable', 'topology', 'appropriate', 'battery', 'energy', 'storage', 'bess', 'application', 'result', 'prove', 'cascaded', 'topology', 'well', 'performance', 'comparison', 'type', 'topology', 'choose', 'three', 'reason', 'first', 'efficiency', 'reliability', 'study', 'conduct', 'cmli', 'find', 'efficient', 'reliable', 'topology', 'minimum', 'amount', 'power', 'loss', 'compare', 'topology', 'second', 'subdivides', 'battery', 'string', 'increase', 'high', 'voltage', 'functionality', 'finally', 'capacitor', 'volume', 'cost', 'thd', 'study', 'confirm', 'effectiveness', 'topology', 'battery', 'energy', 'storage', 'package', 'research', 'teach', 'please', 'include', 'explicit', 'mention', 'reference', 'paper', 'reference', 'delavari', 'kamwa', 'zabihinejad', 'different', 'multilevel', 'converter', 'topology', 'battery', 'energy', 'storage', 'application', 'annual', 'iee', 'canadian', 'conference', 'electrical', 'computer', 'engineering', 'ccece', 'http', 'ieexplore', 'iee', 'org', 'stamp', 'stamp', 'jsp', 'arnumber', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics']",4
2016,62716,"Iterative learning control (ILC) using a programmable logic controller (PLC).<p>Yet another demonstration for my students: ILC on PLC. An exemplary CoDeSys project included. It's a hardware-in-the-loop (HIL) simulation. The target is EATON EC4P-200 easy Control PLC. It is also possible to run the program in a simulation mode provided in XSOFT-CODESYS. Please visit <a href=""http://www.eaton.eu/Europe/Electrical/ProductsServices/AutomationControl/AutomationControlVisualization/AutomationSoftware/CODESYS/"">http://www.eaton.eu/Europe/Electrical/ProductsServices/AutomationControl/AutomationControlVisualization/AutomationSoftware/CODESYS/</a> to get it for free (the demo version). An equivalent Simulink model as well as a pure m-code model are also included. More examples at <a href=""http://ufnalski.edu.pl/zne/codesys_examples/"">http://ufnalski.edu.pl/zne/codesys_examples/</a> .</p>codesys,hardware in the loop,hardwareintheloop simulation,hil,ilc,iterative learning control,plc,programmable logic controller,repetitive control",26,1,2,0,27,iterative learn control ilc programmable logic controller plc yet another demonstration student ilc plc exemplary codesys project include hardware loop hil target eaton easy control plc also possible run program mode provide xsoft codesys please visit http eaton europe electrical codesys get free demo version equivalent well pure code also include example http ufnalski edu zne codesys example codesyshardware learn logic control,"['iterative', 'learn', 'control', 'ilc', 'programmable', 'logic', 'controller', 'plc', 'yet', 'another', 'demonstration', 'student', 'ilc', 'plc', 'exemplary', 'codesys', 'project', 'include', 'hardware', 'loop', 'hil', 'target', 'eaton', 'easy', 'control', 'plc', 'also', 'possible', 'run', 'program', 'mode', 'provide', 'xsoft', 'codesys', 'please', 'visit', 'http', 'eaton', 'europe', 'electrical', 'codesys', 'get', 'free', 'demo', 'version', 'equivalent', 'well', 'pure', 'code', 'also', 'include', 'example', 'http', 'ufnalski', 'edu', 'zne', 'codesys', 'example', 'codesyshardware', 'learn', 'logic', 'control']",0
2017,62740,"Simulation of dynamic behaviours of the legendary Lorenz's chaotic system.<p>Dynamic systems are  physical system that the evolution is time depending. Chaotic systems are the category of these  systems, which are characterized by the high sensitivity to initial conditions. There are have several technological applications of such systems. The most famous chaotic system of all time is certainly the Lorenz system.  Here we present the dynamics of the Lorenz system and demonstrate its sensitivity to the initial conditions.</p>chaos,dynamic system,lorenz",21,1,2,0,31,dynamic behaviour legendary lorenz chaotic dynamic physical evolution time depend chaotic category characterize high sensitivity initial condition several technological application famous chaotic time certainly lorenz present dynamic lorenz demonstrate sensitivity initial condition chaosdynamic systemlorenz,"['dynamic', 'behaviour', 'legendary', 'lorenz', 'chaotic', 'dynamic', 'physical', 'evolution', 'time', 'depend', 'chaotic', 'category', 'characterize', 'high', 'sensitivity', 'initial', 'condition', 'several', 'technological', 'application', 'famous', 'chaotic', 'time', 'certainly', 'lorenz', 'present', 'dynamic', 'lorenz', 'demonstrate', 'sensitivity', 'initial', 'condition', 'chaosdynamic', 'systemlorenz']",5
2018,62742,"Generates 220V, 50Hz from 13 batteries having 24V each<p>This is a 27 level inverter that uses 13 switched battery cells.</p>battery_system_management,power_electronics_control,dcac converter,inverter,multi level,power electronics,pure sine wave,simpower systems,simpowersystems,simulink,switched battery cell",325,28,2,0,390,generates battery eachthis level inverter switched battery cell battery managementpower electronics controldcac levelpower electronicspure sine wavesimpower battery cell,"['generates', 'battery', 'eachthis', 'level', 'inverter', 'switched', 'battery', 'cell', 'battery', 'managementpower', 'electronics', 'controldcac', 'levelpower', 'electronicspure', 'sine', 'wavesimpower', 'battery', 'cell']",4
2019,62743,"This model simulate PV string partial shading and plot its I-V and P-V curve<p>This model simulate PV string partial shading and plot its I-V and P-V curve1. Select your PV Module2. Set your partial shading profile in the Solar Radiation Block3. Set the Total PV String Voltage in Ramp Block4. RUN Simulink5. Double Click the Plot PV Curve block to plot I-V and P-V curve overlay</p>iv curve,partial shading,pv curve,pv module,pv string,pv string partial shading,pv system partial shading",24,1,2,0,39,string partial shading plot curvethis string partial shading plot curve select module set partial shade profile solar radiation block set total string voltage ramp block run double click plot curve block plot curve overlayiv curvepartial shadingpv curvepv modulepv stringpv string partial shadingpv partial shading,"['string', 'partial', 'shading', 'plot', 'curvethis', 'string', 'partial', 'shading', 'plot', 'curve', 'select', 'module', 'set', 'partial', 'shade', 'profile', 'solar', 'radiation', 'block', 'set', 'total', 'string', 'voltage', 'ramp', 'block', 'run', 'double', 'click', 'plot', 'curve', 'block', 'plot', 'curve', 'overlayiv', 'curvepartial', 'shadingpv', 'curvepv', 'modulepv', 'stringpv', 'string', 'partial', 'shadingpv', 'partial', 'shading']",5
2020,62747,"SAPF for single phase using power balance theory.<p>This shunt active power filter is based on power balance theory for single phase. THD of line current is 2-3 % only.</p>filter design,histerisis control,hysteresis control,simulation,vsi",80,3,2,0,85,sapf single phase power balance theory shunt active power filter base power balance theory single phase thd line current filter,"['sapf', 'single', 'phase', 'power', 'balance', 'theory', 'shunt', 'active', 'power', 'filter', 'base', 'power', 'balance', 'theory', 'single', 'phase', 'thd', 'line', 'current', 'filter']",3
2021,62749,"Simulation of the dynamical behaviour of the famous Rossler chaotic system<p>Chaotic systems are characterized by high sensitivity to initial conditions have several technological applications. One of the most used is the system of RÃ²ssler. Here we present the dynamics of the RÃ²ssler system and demonstrate its sensitivity to initial conditions.</p>chaos,dynamic system,rossler",21,1,2,0,30,dynamical behaviour famous rossler chaotic systemchaotic characterize high sensitivity initial condition several technological application one rÃ²ssler present dynamic rÃ²ssler demonstrate sensitivity initial condition chaosdynamic systemrossler,"['dynamical', 'behaviour', 'famous', 'rossler', 'chaotic', 'systemchaotic', 'characterize', 'high', 'sensitivity', 'initial', 'condition', 'several', 'technological', 'application', 'one', 'rÃ²ssler', 'present', 'dynamic', 'rÃ²ssler', 'demonstrate', 'sensitivity', 'initial', 'condition', 'chaosdynamic', 'systemrossler']",5
2022,62763,"Tool to help you build Simscape Multibody Second Generation models based on First Generation models<p>These tools help you build a Simscape Multibody Second Generation (2G) model that provides the same behavior as your Simscape Multibody First Generation (1G) model.  MATLAB code scans your 1G model, automatically converts as many of the 1G blocks as it can, and provides diagnostics indicating which 1G conventions need to be modified in order for the model to be compatible with 2G modeling conventions.  You can then assemble the automatically created 2G blocks into a model that behaves as the original 1G model.  Please read the README.txt file and the PDF file to get started. The PDF file explains the conversion process enabled by this tool, the diagnostics messages, and guides you through a tutorial exercise to help you get started converting your model.  This tool works for MATLAB releases R2013a and higher.  See how to use Simscape Multibody to model a cam-follower mechanism: <a href=""https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html"">https://www.mathworks.com/videos/modeling-contact-forces-in-a-cam-follower-94291.html</a> Learn more about multibody simulation with Simscape Multibody by watching this webinar <a href=""https://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html"">https://www.mathworks.com/videos/multibody-simulation-with-simmechanics-81877.html</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>first generation,physical modeling,simmechanics,simmechanics2g",14928,2270,5,30,12565,tool help build simscape multibody second generation base first generation modelsthese tool help build simscape multibody second generation provide behavior simscape multibody first generation code scan automatically convert many block provide diagnostics indicate convention need modify order compatible modeling convention assemble automatically create block behave original please read readme txt file pdf file get start pdf file explain conversion process enable tool diagnostics message guide tutorial exercise help get start convert tool work release high see simscape multibody cam follower mechanism mathworks com videos modeling contact force cam follower html learn multibody simscape multibody watch webinar mathworks com video multibody simmechanics html find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling first,"['tool', 'help', 'build', 'simscape', 'multibody', 'second', 'generation', 'base', 'first', 'generation', 'modelsthese', 'tool', 'help', 'build', 'simscape', 'multibody', 'second', 'generation', 'provide', 'behavior', 'simscape', 'multibody', 'first', 'generation', 'code', 'scan', 'automatically', 'convert', 'many', 'block', 'provide', 'diagnostics', 'indicate', 'convention', 'need', 'modify', 'order', 'compatible', 'modeling', 'convention', 'assemble', 'automatically', 'create', 'block', 'behave', 'original', 'please', 'read', 'readme', 'txt', 'file', 'pdf', 'file', 'get', 'start', 'pdf', 'file', 'explain', 'conversion', 'process', 'enable', 'tool', 'diagnostics', 'message', 'guide', 'tutorial', 'exercise', 'help', 'get', 'start', 'convert', 'tool', 'work', 'release', 'high', 'see', 'simscape', 'multibody', 'cam', 'follower', 'mechanism', 'mathworks', 'com', 'videos', 'modeling', 'contact', 'force', 'cam', 'follower', 'html', 'learn', 'multibody', 'simscape', 'multibody', 'watch', 'webinar', 'mathworks', 'com', 'video', 'multibody', 'simmechanics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'first']",7
2023,62791,"Standalone Arduino Weather Station that's uploading data directly to ThingSpeak<p>Submission includes:- Weather Station Simulink models for Arduino (ThingSpeak Edition for deploy and Serial Edition for testing)- Serial Monitor model (requires Instrument Control Toolbox)- Live Script with simple analysis of data stored in ThingSpeak!!! IMPORTANT !!!To run models you need Arduino Additional Sensors Library (DHT, LPS331) toolbox:<a href=""https://www.mathworks.com/matlabcentral/fileexchange/62878-arduino-additional-sensors-library--dht--lps331-If"">https://www.mathworks.com/matlabcentral/fileexchange/62878-arduino-additional-sensors-library--dht--lps331-If</a> you're working with Arduino Ethernet Shield 2 (w5500) please install appropriate support package:<a href=""https://github.com/roslovets/Arduino_w5500_Sumulink_Library*"">https://github.com/roslovets/Arduino_w5500_Sumulink_Library*</a> Please note, that this submission will not work on low-perfomance boards like Arduino Uno. But it works great on Arduino Mega 2560 *HARDWARE that I use:- Arduino Mega 2560- Amperka Ethernet Shield (w5500)- Amperka Troyka Slot Shield- TMP36 Analog Thermometer (Amperka Troyka-module)- LPS331 I2C Barometer (Amperka Troyka-module)- GL5528 Light Sensor (Amperka Troyka-module)- Analog Sound Sensor (Amperka Troyka-module)- DHT11 Temperarute-Humidity Sensor (Amperka Troyka-module)</p>live script,maker,arduino,iot,thingspeak,weather,weather station",55,2,2,8,69,standalone arduino weather station upload data directly include weather station arduino thingspeak edition deploy serial edition test serial monitor require instrument control toolbox live script simple analysis data store thingspeak important run need arduino additional sensor dht lps toolbox mathworks com matlabcentral fileexchange arduino additional sensor dht lps work arduino ethernet shield please install appropriate support package github com roslovets arduino sumulink please note submission work low perfomance board like arduino uno work great arduino mega hardware arduino mega amperka ethernet shield amperka troyka slot shield tmp analog thermometer amperka troyka module lps barometer amperka troyka module light sensor amperka troyka module analog sound sensor amperka troyka module dht temperarute humidity sensor amperka troyka module live station,"['standalone', 'arduino', 'weather', 'station', 'upload', 'data', 'directly', 'include', 'weather', 'station', 'arduino', 'thingspeak', 'edition', 'deploy', 'serial', 'edition', 'test', 'serial', 'monitor', 'require', 'instrument', 'control', 'toolbox', 'live', 'script', 'simple', 'analysis', 'data', 'store', 'thingspeak', 'important', 'run', 'need', 'arduino', 'additional', 'sensor', 'dht', 'lps', 'toolbox', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'additional', 'sensor', 'dht', 'lps', 'work', 'arduino', 'ethernet', 'shield', 'please', 'install', 'appropriate', 'support', 'package', 'github', 'com', 'roslovets', 'arduino', 'sumulink', 'please', 'note', 'submission', 'work', 'low', 'perfomance', 'board', 'like', 'arduino', 'uno', 'work', 'great', 'arduino', 'mega', 'hardware', 'arduino', 'mega', 'amperka', 'ethernet', 'shield', 'amperka', 'troyka', 'slot', 'shield', 'tmp', 'analog', 'thermometer', 'amperka', 'troyka', 'module', 'lps', 'barometer', 'amperka', 'troyka', 'module', 'light', 'sensor', 'amperka', 'troyka', 'module', 'analog', 'sound', 'sensor', 'amperka', 'troyka', 'module', 'dht', 'temperarute', 'humidity', 'sensor', 'amperka', 'troyka', 'module', 'live', 'station']",0
2024,62821,ME<p>To show that the power factor of full wave rectifier is 0.9cos(alpha).</p>measurement,30,0,1,0,41,meto show power factor full wave rectifier alpha measurement,"['meto', 'show', 'power', 'factor', 'full', 'wave', 'rectifier', 'alpha', 'measurement']",4
2025,62850,"C value can be changed with time or etc.<p>In this file, two circuits are compared. The results are the same.</p>simulink",17,1,2,0,17,value change time etc file two circuit compare result,"['value', 'change', 'time', 'etc', 'file', 'two', 'circuit', 'compare', 'result']",7
2026,62852,"variable R, C and L for using simulink<p>We need sometimes variable R, C and L for using simulink</p>simulation",40,6,2,0,33,variable need sometimes variable,"['variable', 'need', 'sometimes', 'variable']",7
2027,62859,"Model reference adaptive system for speed estimation in direct rotor FOC asynchronous motor drive.<p>Warning! This is not a fully working model. Students are supposed to tune it and add relevant filtering in order to make the algorithm practical, i.e. the rotor flux should be assumed inaccessible. Nevertheless, a basic structure of the control system, including MRAS, is there to provide a convenient starting point. Good luck!</p>asynchronous motor drive,drfoc,field oriented control,flux calculator,flux estimator,foc,induction motor drive,model reference adaptive system,mras,rfoc,sensorless drive,speed estimation,speed estimator,electric_motor_control,power_electronics_control",231,11,3,0,291,reference adaptive speed estimation direct rotor foc asynchronous motor drive warn fully work student suppose tune add relevant filter order make algorithm practical rotor flux assume inaccessible nevertheless basic structure control include mras provide convenient start point good luck asynchronous motor drivedrfocfield orient controlflux calculatorflux motor drivemodel reference adaptive drivespeed estimationspeed motor controlpower electronics control,"['reference', 'adaptive', 'speed', 'estimation', 'direct', 'rotor', 'foc', 'asynchronous', 'motor', 'drive', 'warn', 'fully', 'work', 'student', 'suppose', 'tune', 'add', 'relevant', 'filter', 'order', 'make', 'algorithm', 'practical', 'rotor', 'flux', 'assume', 'inaccessible', 'nevertheless', 'basic', 'structure', 'control', 'include', 'mras', 'provide', 'convenient', 'start', 'point', 'good', 'luck', 'asynchronous', 'motor', 'drivedrfocfield', 'orient', 'controlflux', 'calculatorflux', 'motor', 'drivemodel', 'reference', 'adaptive', 'drivespeed', 'estimationspeed', 'motor', 'controlpower', 'electronics', 'control']",4
2028,62945,"DFIG<p>only finished the grid control,achived the balance of DC BUS Voltage</p>power_conversion_control,power_electronics_control,simulink",231,14,5,0,303,dfigonly finish grid controlachived balance bus voltagepower conversion controlpower electronics,"['dfigonly', 'finish', 'grid', 'controlachived', 'balance', 'bus', 'voltagepower', 'conversion', 'controlpower', 'electronics']",1
2029,62994,"Quadruple Interleaved Converter<p>A DC-DC converter that uses 4 parallel paths.</p>power_conversion_control,power_electronics_control,buck converter,dcdc converter,interleaved converter,power electronics",69,5,2,0,49,quadruple interleaved convertera converter parallel path power conversion controlpower electronics controlbuck converterdcdc converterpower electronics,"['quadruple', 'interleaved', 'convertera', 'converter', 'parallel', 'path', 'power', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converterdcdc', 'converterpower', 'electronics']",1
2030,62999,"Examples showing floating point to efficient fixed point implementation.<p>Examples covering the theory of fixed point mathematics and how to implement it in MATLAB or Simulink depending on the FPGA hardware considerations. This will help you to take Signal Processing and Communications designs from floating point to efficient fixed point implementation on FPGAs.</p>communications,signal processing",52,3,2,0,53,example show float point efficient fix point implementation examples cover theory fix point mathematics implement depend fpga hardware consideration help take signal processing communication design float point efficient fix point implementation fpgas processing,"['example', 'show', 'float', 'point', 'efficient', 'fix', 'point', 'implementation', 'examples', 'cover', 'theory', 'fix', 'point', 'mathematics', 'implement', 'depend', 'fpga', 'hardware', 'consideration', 'help', 'take', 'signal', 'processing', 'communication', 'design', 'float', 'point', 'efficient', 'fix', 'point', 'implementation', 'fpgas', 'processing']",0
2031,63003,multilevel<p>symetrical reduced switches mli inverter</p>simulink,197,4,2,0,210,reduce switch mli,"['reduce', 'switch', 'mli']",4
2032,63068,"Generates a pulse width modulated signal<p>If you need any help, feel free to contact me at abdullahbaig1618 at gmail dot com.This model generates a square wave with a constant amplitude and preset frequency, with the duty cycle controlled by an input signal. The frequency can be set to any value, while the duty cycle is continuously controller by an input signal.The input signal can be a constant, a sine wave or any other signal.</p>electric_motor_control,power_conversion_control,power_electronics_control,dc dc converter,duty cycle,pulse width modulation,pwm",7,1,2,0,5,generates pulse width modulate signalif need help feel free contact abdullahbaig gmail dot com generates square wave constant amplitude preset frequency duty cycle control input signal frequency set value duty cycle continuously controller input signal input signal constant sine wave signal electric motor controlpower conversion controlpower electronics controldc converterduty cyclepulse width modulationpwm,"['generates', 'pulse', 'width', 'modulate', 'signalif', 'need', 'help', 'feel', 'free', 'contact', 'abdullahbaig', 'gmail', 'dot', 'com', 'generates', 'square', 'wave', 'constant', 'amplitude', 'preset', 'frequency', 'duty', 'cycle', 'control', 'input', 'signal', 'frequency', 'set', 'value', 'duty', 'cycle', 'continuously', 'controller', 'input', 'signal', 'input', 'signal', 'constant', 'sine', 'wave', 'signal', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'converterduty', 'cyclepulse', 'width', 'modulationpwm']",3
2033,63087,"Sine wave inverter<p>This converts a DC voltage into AC using pulse width modulation. The PWM signal follows a sine wave, so the output of the Inverter is a very close approximation of a sine wave.</p>electric_motor_control,power_conversion_control,power_electronics_control,dc ac converter,igbt inverter,inverter,pwm,sine pwm,sine wave inverter",33,2,2,0,29,sine wave inverterthis convert voltage pulse width modulation pwm signal follow sine wave output inverter close approximation sine wave electric motor controlpower conversion controlpower electronics controldc converterigbt pwmsine wave inverter,"['sine', 'wave', 'inverterthis', 'convert', 'voltage', 'pulse', 'width', 'modulation', 'pwm', 'signal', 'follow', 'sine', 'wave', 'output', 'inverter', 'close', 'approximation', 'sine', 'wave', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'converterigbt', 'pwmsine', 'wave', 'inverter']",1
2034,63094,"Cycloconverter Fed Induction Motor<p>Speed control of Induction motor by cycloconverter (step-up / step-down)</p>electric_motor_control,power_electronics_control,cycloconverter,induction motot,single phase,speed control",31,0,1,0,31,cycloconverter feed induction motorspeed control induction motor cycloconverter step step electric motor controlpower electronics mototsingle phasespeed control,"['cycloconverter', 'feed', 'induction', 'motorspeed', 'control', 'induction', 'motor', 'cycloconverter', 'step', 'step', 'electric', 'motor', 'controlpower', 'electronics', 'mototsingle', 'phasespeed', 'control']",1
2035,63101,"Boost converter is like a step up transformer for DC voltage.<p>A boost converter is simulated using the components from SimPowerSystem. The control is open loop. An arbitrary waveform is provided at the input to test the converter's output.</p>power_conversion_control,power_electronics_control,boost converter,dc dc converter,power electronics,step up",39,3,2,0,32,boost converter like step transformer voltage boost converter component simpowersystem control open loop arbitrary waveform provide input test converter output power conversion controlpower electronics controlboost converterdc converterpower electronicsstep,"['boost', 'converter', 'like', 'step', 'transformer', 'voltage', 'boost', 'converter', 'component', 'simpowersystem', 'control', 'open', 'loop', 'arbitrary', 'waveform', 'provide', 'input', 'test', 'converter', 'output', 'power', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterdc', 'converterpower', 'electronicsstep']",1
2036,63105,"Speed control of cycloconverter (step-up / step-down) fed Induction motor<p>Speed control of cycloconverter (step-up / step-down) fed Induction motor.It works fine for all range of frequencies</p>electric_motor_control,power_electronics_control,asynchronous motor,cycloconverter,induction motor,single phase,stepdown,stepup",33,0,1,0,37,speed control cycloconverter step step feed induction motorspeed control cycloconverter step step feed induction motor work fine range motor controlpower electronics motorsingle,"['speed', 'control', 'cycloconverter', 'step', 'step', 'feed', 'induction', 'motorspeed', 'control', 'cycloconverter', 'step', 'step', 'feed', 'induction', 'motor', 'work', 'fine', 'range', 'motor', 'controlpower', 'electronics', 'motorsingle']",1
2037,63119,"Single Phase SPWM Inverter (R Load)<p>Single Phase SPWM Inverter (R Load)Uncontrolled Rectifier - DC link - IGBT Inverter triggered by SPWM circuit - R Load</p>power_conversion_control,power_electronics_control,inverter,rload,single phase,spwm",23,1,2,0,24,single phase spwm inverter load single phase spwm inverter load uncontrolled rectifier link igbt inverter trigger spwm circuit loadpower conversion controlpower electronics phasespwm,"['single', 'phase', 'spwm', 'inverter', 'load', 'single', 'phase', 'spwm', 'inverter', 'load', 'uncontrolled', 'rectifier', 'link', 'igbt', 'inverter', 'trigger', 'spwm', 'circuit', 'loadpower', 'conversion', 'controlpower', 'electronics', 'phasespwm']",1
2038,63120,"Seven Level Inverter using 5 switches<p>Seven Level Inverter using 5 switches</p>5 switches,inverter,minimum switches,multilevel,seven level",59,1,2,0,67,seven level inverter switchesseven level inverter switch level,"['seven', 'level', 'inverter', 'switchesseven', 'level', 'inverter', 'switch', 'level']",1
2039,63125,"Seven Level SPWM Inverter - POD (Phase Opposition Disposition) - R Load<p>Seven Level SPWM Inverter - POD (Phase Opposition Disposition) - R Load</p>inverter,multi level,pod,rload,seven level,spwm",60,1,2,0,67,seven level spwm inverter pod phase opposition disposition loadseven level spwm inverter pod phase opposition disposition levelspwm,"['seven', 'level', 'spwm', 'inverter', 'pod', 'phase', 'opposition', 'disposition', 'loadseven', 'level', 'spwm', 'inverter', 'pod', 'phase', 'opposition', 'disposition', 'levelspwm']",4
2040,63142,"SINGLE PHASE 2-LEVEL SPWM INVERTER WITH VARIABLE VOLTAGE AND FREQUENCY<p>A single phase two level inverter in H-bridge topology with sinusoidal pulse width modulation technique to generate variable voltage and variable frequency at the output. A L-C filter is used to filtered out the high frequency switching components, so we get an sinusoidal output voltage. The FFT of the output voltage and current waveform are also analysed.</p>electric_motor_control,power_conversion_control,power_electronics_control,gui,power electronics,simulation,simulink,spwm,vsi",77,1,2,0,92,single phase level spwm inverter variable voltage frequencya single phase two level inverter bridge topology sinusoidal pulse width modulation technique generate variable voltage variable frequency output filter filter high frequency switch component get sinusoidal output voltage fft output voltage current waveform also analyse electric motor controlpower conversion controlpower electronics controlguipower,"['single', 'phase', 'level', 'spwm', 'inverter', 'variable', 'voltage', 'frequencya', 'single', 'phase', 'two', 'level', 'inverter', 'bridge', 'topology', 'sinusoidal', 'pulse', 'width', 'modulation', 'technique', 'generate', 'variable', 'voltage', 'variable', 'frequency', 'output', 'filter', 'filter', 'high', 'frequency', 'switch', 'component', 'get', 'sinusoidal', 'output', 'voltage', 'fft', 'output', 'voltage', 'current', 'waveform', 'also', 'analyse', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlguipower']",1
2041,63157,"Distribution side Static Compensator (STATCOM) for VAR and Harmonic Compensation<p>A VSI based D-STATCOM is used to supply both reactive VAR and Harmonic current to the load, so the source current is sinusoidal and have Unity power factor(UPF).A vector control method &amp; SPWM scheme is used for closed loop operation and pulse generation, which have 2 controllers. 1.Voltage controller- used to maintain constant DC link voltage.2.current controller-      d-axis controller : supplies the harmonic current &amp; draws little active current to meet the switching losses.      q-axis controller : supplies both harmonic &amp; reactive current.For any queries regarding parameter design (L,C, Kp, Ki etc.), and for lower version of simulink modelcontact me @:   <a href=""mailto:skd.2053@gmail.com"">skd.2053@gmail.com</a></p>power_conversion_control,power_electronics_control,control design,gui,harmonic,power electronics,reactive,simulation,spwm,statcom,vsi",275,12,3,0,318,distribution side static compensator statcom var harmonic compensationa vsi base statcom supply reactive var harmonic current load source current sinusoidal unity power factor upf vector control method amp spwm scheme close loop operation pulse generation controller voltage controller maintain constant link voltage current controller axis controller supply harmonic current amp draw little active current meet switching loss axis controller supply harmonic amp reactive current query regard parameter design etc low version modelcontact skd gmail compower conversion controlpower electronics controlcontrol,"['distribution', 'side', 'static', 'compensator', 'statcom', 'var', 'harmonic', 'compensationa', 'vsi', 'base', 'statcom', 'supply', 'reactive', 'var', 'harmonic', 'current', 'load', 'source', 'current', 'sinusoidal', 'unity', 'power', 'factor', 'upf', 'vector', 'control', 'method', 'amp', 'spwm', 'scheme', 'close', 'loop', 'operation', 'pulse', 'generation', 'controller', 'voltage', 'controller', 'maintain', 'constant', 'link', 'voltage', 'current', 'controller', 'axis', 'controller', 'supply', 'harmonic', 'current', 'amp', 'draw', 'little', 'active', 'current', 'meet', 'switching', 'loss', 'axis', 'controller', 'supply', 'harmonic', 'amp', 'reactive', 'current', 'query', 'regard', 'parameter', 'design', 'etc', 'low', 'version', 'modelcontact', 'skd', 'gmail', 'compower', 'conversion', 'controlpower', 'electronics', 'controlcontrol']",3
2042,63160,"Single phase RCCB that operates when the residual current exceeds a predetermined value.<p>Single Phase Residual Current Circuit Breaker that operates when the residual current exceeds a predetermined value. Selectable residual currents are 6mA, 10mA, 30mA, 100mA, 300mA, 500mA and 1000mA. Single Phase Load with Leakage Current allows user to simulate leakage by setting the leakage time and leakage resistance or leakage current.</p>earth leakage protection,leakage current,power system protection,rccb,rcd,residual current circuit breaker,residual current device",32,2,2,0,34,single phase rccb operate residual current exceeds predetermine value single phase residual current circuit breaker operate residual current exceeds predetermine value selectable residual current single phase load leakage current allow user leakage set leakage time leakage resistance leakage current earth leakage currentpower current circuit breakerresidual current device,"['single', 'phase', 'rccb', 'operate', 'residual', 'current', 'exceeds', 'predetermine', 'value', 'single', 'phase', 'residual', 'current', 'circuit', 'breaker', 'operate', 'residual', 'current', 'exceeds', 'predetermine', 'value', 'selectable', 'residual', 'current', 'single', 'phase', 'load', 'leakage', 'current', 'allow', 'user', 'leakage', 'set', 'leakage', 'time', 'leakage', 'resistance', 'leakage', 'current', 'earth', 'leakage', 'currentpower', 'current', 'circuit', 'breakerresidual', 'current', 'device']",4
2043,63185,"I tried to control my turbine to get a preset electric performance for my load.<p>Here i have a wind turbine with a dc generator. I want to control my turbine with pitch angles to get a preset electric performance for my load. My load is on the dc gen armature circuit. When i try to measure my electric performance i get a big peak on it. I don't know why.</p>power_conversion_control,power_electronics_control,dc generator,pi control,pitch angle,wind turbine",54,3,3,0,68,try control turbine get preset electric performance load wind turbine generator want control turbine pitch angle get preset electric performance load load gen armature circuit try measure electric performance get big peak know power conversion controlpower electronics controldc generatorpi controlpitch anglewind turbine,"['try', 'control', 'turbine', 'get', 'preset', 'electric', 'performance', 'load', 'wind', 'turbine', 'generator', 'want', 'control', 'turbine', 'pitch', 'angle', 'get', 'preset', 'electric', 'performance', 'load', 'load', 'gen', 'armature', 'circuit', 'try', 'measure', 'electric', 'performance', 'get', 'big', 'peak', 'know', 'power', 'conversion', 'controlpower', 'electronics', 'controldc', 'generatorpi', 'controlpitch', 'anglewind', 'turbine']",3
2044,63191,"Power electronic Transformer<p>Power electronic Transformer for step up ac voltage</p>power_conversion_control,power_electronics_control,power electronics",15,0,1,0,20,power electronic electronic transformer step voltagepower conversion controlpower electronics controlpower electronics,"['power', 'electronic', 'electronic', 'transformer', 'step', 'voltagepower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",6
2045,63195,"Fuzzy Logic controller Based MPPT of Hybrid PV and WIND Microgrid system with BMS<p>Fuzzy Logic controller Based MPPT of Hybrid PV and WIND Microgrid system with Battery Management System</p>battery management system,fuzzy logic,hybrid,microgrid,mppt,pv,wnd,battery_system_management,power_conversion_control,power_electronics_control",177,4,3,0,224,fuzzy logic controller base mppt hybrid wind microgrid bmsfuzzy logic controller base mppt hybrid wind microgrid battery management systembattery management systemfuzzy managementpower conversion controlpower electronics control,"['fuzzy', 'logic', 'controller', 'base', 'mppt', 'hybrid', 'wind', 'microgrid', 'bmsfuzzy', 'logic', 'controller', 'base', 'mppt', 'hybrid', 'wind', 'microgrid', 'battery', 'management', 'systembattery', 'management', 'systemfuzzy', 'managementpower', 'conversion', 'controlpower', 'electronics', 'control']",3
2046,63223,"Fiber Optics communications blocksets<p>Optical systems based on SONET/SDH hierarchy from PDH(DS1) to SDH(STM-16 &amp; 48) keeping up transmission rate. You can test models. There is a complete module of examples that you have support to how builds your own model.It works in Matlab 2017aGood Luck!!! Enjoy!</p>communications,example,fiber,frame,gui,modeling,optics,path,pdh,sdh,simulation,simulink,sonet,toolbox",2280,1271,4,1260,2317,fiber optic communication base sonet sdh hierarchy pdh sdh stm amp keep transmission rate test complete module example support build work agood luck enjoy,"['fiber', 'optic', 'communication', 'base', 'sonet', 'sdh', 'hierarchy', 'pdh', 'sdh', 'stm', 'amp', 'keep', 'transmission', 'rate', 'test', 'complete', 'module', 'example', 'support', 'build', 'work', 'agood', 'luck', 'enjoy']",0
2047,63227,"Cascade 5 level Inverter with minimum number of power electronics Switches<p>Cascade 5 level Inverter with minimum number of power electronics Switches</p>multilevel inverter,power_conversion_control,power_electronics_control",32,0,1,0,38,cascade level inverter minimum number power electronics switchescascade level inverter minimum number power electronics inverterpower conversion controlpower electronics control,"['cascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'switchescascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'inverterpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2048,63228,"Cascade 7 level Inverter with minimum number of Power Electronics Switches<p>Cascade 7 level Inverter with minimum number of Power Electronics Switches</p>multilevel inverter,power_conversion_control,power_electronics_control",29,0,1,0,30,cascade level inverter minimum number power electronics switchescascade level inverter minimum number power electronics inverterpower conversion controlpower electronics control,"['cascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'switchescascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'inverterpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2049,63229,"Cascade 9 level Inverter with minimum number of Power Electronics Switches<p>Cascade 9 level Inverter with minimum number of Power Electronics Switches</p>multilevel inverter,power_conversion_control,power_electronics_control",33,0,1,0,36,cascade level inverter minimum number power electronics switchescascade level inverter minimum number power electronics inverterpower conversion controlpower electronics control,"['cascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'switchescascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'inverterpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2050,63231,"Cascade 9 level Inverter with minimum number of Power Electronics Switches<p>Cascade 9 level Inverter with minimum number of Power Electronics Switches</p>multilevel inverter,power_conversion_control,power_electronics_control",37,0,1,0,39,cascade level inverter minimum number power electronics switchescascade level inverter minimum number power electronics inverterpower conversion controlpower electronics control,"['cascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'switchescascade', 'level', 'inverter', 'minimum', 'number', 'power', 'electronics', 'inverterpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2051,63235,"Intelligent Microgrid<p>The main objective of this simulation model is to be develop mathematical model of PV system then simulated with Matlab using MPPT controller for achieve maximum power generation.  The PV MPPT technique is designed with intelligent controller such fuzzy logic controller then simulated analysis in Matlab environment under different weather condition. This paper also focused bi-directional power flow from PV to battery and Battery to load with respected power demand. Therefore the fuzzy logic control based bi-direction converter has been developed in Matlab Simulink. Finally the proposed system PV output power is connected to DC-AC inverter and provides power supply to nearby loads.</p>fuzzy,hybrid,microgrid,mppt,pv,wind,battery_system_management,power_conversion_control,power_electronics_control",221,9,3,0,287,intelligent microgridthe main objective develop mathematical mppt controller achieve maximum power generation mppt technique design intelligent controller fuzzy logic controller analysis environment different weather condition paper also focus directional power flow battery battery load respect power demand therefore fuzzy logic control base direction converter develop finally propose output power connect inverter provide power supply nearby load managementpower conversion controlpower electronics control,"['intelligent', 'microgridthe', 'main', 'objective', 'develop', 'mathematical', 'mppt', 'controller', 'achieve', 'maximum', 'power', 'generation', 'mppt', 'technique', 'design', 'intelligent', 'controller', 'fuzzy', 'logic', 'controller', 'analysis', 'environment', 'different', 'weather', 'condition', 'paper', 'also', 'focus', 'directional', 'power', 'flow', 'battery', 'battery', 'load', 'respect', 'power', 'demand', 'therefore', 'fuzzy', 'logic', 'control', 'base', 'direction', 'converter', 'develop', 'finally', 'propose', 'output', 'power', 'connect', 'inverter', 'provide', 'power', 'supply', 'nearby', 'load', 'managementpower', 'conversion', 'controlpower', 'electronics', 'control']",3
2052,63242,"Fuzzy logic based unified power flow controller for improvement of power system stability<p>. The objective of this paper to improve the power system stability and reliability using an intelligent controller based UPFC device. The UPFC devices to be controlled by a fuzzy logic controller under various fault conditions. The fuzzy logic controller compares the power system parameters such as voltage and phase angle with the reference value and   it will generate the triggering pulses for a voltage source converter of UPFC system. The proposed model will be simulated in Matlab environment. The simulation results are evaluated with IEEE standards and compare to existing models for strong impact of the proposed model.</p>fuzzy,microgrid,upfc,power_conversion_control,power_electronics_control",125,6,3,0,248,fuzzy logic base unified power flow controller improvement power stability objective paper improve power stability reliability intelligent controller base upfc device upfc device control fuzzy logic controller various fault condition fuzzy logic controller compare power parameter voltage phase angle reference value generate trigger pulse voltage source converter upfc propose environment result evaluate iee standard compare exist strong impact propose conversion controlpower electronics control,"['fuzzy', 'logic', 'base', 'unified', 'power', 'flow', 'controller', 'improvement', 'power', 'stability', 'objective', 'paper', 'improve', 'power', 'stability', 'reliability', 'intelligent', 'controller', 'base', 'upfc', 'device', 'upfc', 'device', 'control', 'fuzzy', 'logic', 'controller', 'various', 'fault', 'condition', 'fuzzy', 'logic', 'controller', 'compare', 'power', 'parameter', 'voltage', 'phase', 'angle', 'reference', 'value', 'generate', 'trigger', 'pulse', 'voltage', 'source', 'converter', 'upfc', 'propose', 'environment', 'result', 'evaluate', 'iee', 'standard', 'compare', 'exist', 'strong', 'impact', 'propose', 'conversion', 'controlpower', 'electronics', 'control']",3
2053,63252,"The Simulink Design Documenter generates Software Design Descriptions of Simulink models.<p>The Simulink Design Documenter provides tool support for semi-automated generation of Software Design Description documents for embedded systems developed using model-based design with Simulink. The Software Design Description is a document that describes the design of a Simulink system. Although appropriate software documentation has been viewed by many as an important factor in effective development of large industrial systems, in industrial practice software documentation has been typically neglected due to cost/time pressures. The purpose of the Simulink Design Documenter is to highly automate the production of useful Software Design Description documents for Simulink models, therefore significantly reducing the documentation effort.For instructions on installation and how to use the tool, see doc/SimulinkDesignDocumenter_UserGuide.pdf. An in-depth guide is provided as doc/SimulinkDesignDocumenter_FullGuide.pdf. A short demo of the tool can be found at <a href=""https://youtu.be/WBmHbhPmgRs"">https://youtu.be/WBmHbhPmgRs</a>.</p>document,documentation,report generator,simulink,software design description",42,4,2,0,34,design documenter generates software design description design documenter provide tool support semi automate generation software design description document embed develop base design software design description document describe design although appropriate software documentation view many important factor effective development large industrial industrial practice software documentation typically neglect due cost time pressure purpose design documenter highly automate production useful software design description document therefore significantly reduce documentation effort instruction installation tool see doc userguide pdf depth guide provide doc fullguide pdf short demo tool find youtu wbmhbhpmgrs design description,"['design', 'documenter', 'generates', 'software', 'design', 'description', 'design', 'documenter', 'provide', 'tool', 'support', 'semi', 'automate', 'generation', 'software', 'design', 'description', 'document', 'embed', 'develop', 'base', 'design', 'software', 'design', 'description', 'document', 'describe', 'design', 'although', 'appropriate', 'software', 'documentation', 'view', 'many', 'important', 'factor', 'effective', 'development', 'large', 'industrial', 'industrial', 'practice', 'software', 'documentation', 'typically', 'neglect', 'due', 'cost', 'time', 'pressure', 'purpose', 'design', 'documenter', 'highly', 'automate', 'production', 'useful', 'software', 'design', 'description', 'document', 'therefore', 'significantly', 'reduce', 'documentation', 'effort', 'instruction', 'installation', 'tool', 'see', 'doc', 'userguide', 'pdf', 'depth', 'guide', 'provide', 'doc', 'fullguide', 'pdf', 'short', 'demo', 'tool', 'find', 'youtu', 'wbmhbhpmgrs', 'design', 'description']",0
2054,63255,"Matlab simulink of solar module with PSC<p>The parameters for the solar module are:1. Pmax = 42 W2. Vmpp = 16.7 V</p>partial shading condition,solar cell,solar module",100,9,4,0,141,solar module pscthe parameter solar module pmax vmpp vpartial shade conditionsolar cellsolar module,"['solar', 'module', 'pscthe', 'parameter', 'solar', 'module', 'pmax', 'vmpp', 'vpartial', 'shade', 'conditionsolar', 'cellsolar', 'module']",5
2055,63265,"This is a simulation file of bipolar dickson dc-dc converter.<p>for more detail, see the following paper:A. Alzahrani, P. Shamsi, and M. Ferdowsi, ""Analysis and design of bipolar Dickson DC-DC converter,"" 2017 IEEE Power and Energy Conference at Illinois (PECI), Champaign, IL, USA, 2017, pp. 1-6. doi: 10.1109/PECI.2017.7935733</p>power_conversion_control,power_electronics_control,electronics,power electronics",45,1,2,0,57,file bipolar dickson converter detail see follow paper alzahrani shamsi ferdowsi analysis design bipolar dickson converter iee power energy conference illinois peci champaign usa doi peci power conversion controlpower electronics electronics,"['file', 'bipolar', 'dickson', 'converter', 'detail', 'see', 'follow', 'paper', 'alzahrani', 'shamsi', 'ferdowsi', 'analysis', 'design', 'bipolar', 'dickson', 'converter', 'iee', 'power', 'energy', 'conference', 'illinois', 'peci', 'champaign', 'usa', 'doi', 'peci', 'power', 'conversion', 'controlpower', 'electronics', 'electronics']",4
2056,63266,"PV solar array model with characteristic curves<p>Plotting of characteristics curves of PV array</p>pv array,solar",111,6,3,0,95,solar array characteristic curvesplotting characteristic curve arraypv arraysolar,"['solar', 'array', 'characteristic', 'curvesplotting', 'characteristic', 'curve', 'arraypv', 'arraysolar']",8
2057,63321,"#MATLAB4MOBILE Competition<p>We are students of Far Eastern Federal University, Russia, Vladivostok. We would like to present you our project, designed in Matlab/Simulink, allowing to connect several mobile devices simultaneously to control game process.Installation guide:Deploy video_test and video_test_slefi into your mobile device.First one is responsible for transmitting color, second - for user photo.Deploy SimRace_phone1 into your mobile device.This is responsible for car acceleration and turning headlights on/off.To use all the features you need to set up environments from Environments.zip, launch TCP_Receive.py, launch test Jango server from the project.But current game configuration is simplified for easier launch, so such features as sending user photo and setting car color are commented out.To run the model, open VR Sink in SimRace.slxIf you have any questions, feel free to contact us: <a href=""mailto:shkurin.ev@dvfu.ruhttps"">shkurin.ev@dvfu.ruhttps</a>://youtu.be/Ckx5_NMwo-s</p>3d,audio processing,mobile,simulink",1786,29,4,0,2454,mobile competitionwe student far eastern federal university russia vladivostok would like present project design allow connect several mobile device control game process installation guide deploy video test video test slefi mobile device first one responsible transmit color second user photo deploy simrace phone mobile device responsible car acceleration turn headlight feature need set environment environment zip launch tcp receive launch test jango server project current game configuration simplify easy launch feature send user photo set car color comment run open sink simrace slxif question feel free contact shkurin dvfu youtu ckx nmwo daudio,"['mobile', 'competitionwe', 'student', 'far', 'eastern', 'federal', 'university', 'russia', 'vladivostok', 'would', 'like', 'present', 'project', 'design', 'allow', 'connect', 'several', 'mobile', 'device', 'control', 'game', 'process', 'installation', 'guide', 'deploy', 'video', 'test', 'video', 'test', 'slefi', 'mobile', 'device', 'first', 'one', 'responsible', 'transmit', 'color', 'second', 'user', 'photo', 'deploy', 'simrace', 'phone', 'mobile', 'device', 'responsible', 'car', 'acceleration', 'turn', 'headlight', 'feature', 'need', 'set', 'environment', 'environment', 'zip', 'launch', 'tcp', 'receive', 'launch', 'test', 'jango', 'server', 'project', 'current', 'game', 'configuration', 'simplify', 'easy', 'launch', 'feature', 'send', 'user', 'photo', 'set', 'car', 'color', 'comment', 'run', 'open', 'sink', 'simrace', 'slxif', 'question', 'feel', 'free', 'contact', 'shkurin', 'dvfu', 'youtu', 'ckx', 'nmwo', 'daudio']",5
2058,63327,"Control Methodologies for a simple Quadrotor<p>This is a very basic simulation to test Proportional Derivative, Sliding Mode Control and Back Stepping Control methodologies for controlling a quadrotor. The users can develop their own controllers and test it. This upload is a basic tool to get one's feet wet in the ocean of Aerial Robotics :p .</p>control,control design,quadrotor,robotics",239,18,2,0,355,control methodologies simple quadrotorthis basic test proportional derivative slide mode control back step control methodology control quadrotor user develop controller test upload basic tool get one foot wet ocean aerial robotics controlcontrol,"['control', 'methodologies', 'simple', 'quadrotorthis', 'basic', 'test', 'proportional', 'derivative', 'slide', 'mode', 'control', 'back', 'step', 'control', 'methodology', 'control', 'quadrotor', 'user', 'develop', 'controller', 'test', 'upload', 'basic', 'tool', 'get', 'one', 'foot', 'wet', 'ocean', 'aerial', 'robotics', 'controlcontrol']",4
2059,63330,"Current Controller DC/DC Bidirectional Converter Model with a detailed description<p>Current Control DC/DC Bidirectional Converter Simulink 2016b, 06/15/2017 Mahmoud SalehIf you need lower version of the model like Simulink 2015 or lower let me know in the commentsThe description of each element is on top of it and how it was calculated. The model is flexible to work within wide range of values. If you have questions please email me at my main email: <a href=""mailto:mahmoudsah@hotmail.com"">mahmoudsah@hotmail.com</a>, student email: <a href=""mailto:msaleh000@citymail.cuny"">msaleh000@citymail.cuny</a>,edu, gmail: <a href=""mailto:mahmoudsalahem@gmail.comIn"">mahmoudsalahem@gmail.comIn</a> the subject of your email write: Bidirectional Mathwork question so that I would be able to track the emails even if they went to junk mail.-------------------------------------------I am an expert in modeling in Simulink, especially microgrids, I have encountered many problems and I was able to fix it. I used to work with dSpace and I build with my colleagues microgrid testbed at City College of New York. We modeled according to the hardware components avialable in our lab, then we build it and test it. I will try to help in case you have a question.---------------------------------------This work was used in the following publications, please kindly reference them in case you will use this model:More description about the model and it is testing results in hardware is provided here:<a href=""http://ieeexplore.ieee.org/document/7454295/OR"">http://ieeexplore.ieee.org/document/7454295/OR</a>: <a href=""https://drive.google.com/open?id=0B7mblFaJhY4VcmZ5OF9ueGxPM1UFor"">https://drive.google.com/open?id=0B7mblFaJhY4VcmZ5OF9ueGxPM1UFor</a> Citation use :- M. Saleh, Y. Esa, Y. Mhandi, W. Brandauer and A. Mohamed, ""Design and implementation of CCNY DC microgrid testbed,"" 2016 IEEE Industry Applications Society Annual Meeting, Portland, OR, 2016. Also This Model was used in the paper:<a href=""http://ieeexplore.ieee.org/abstract/document/7731870/OR"">http://ieeexplore.ieee.org/abstract/document/7731870/OR</a>: <a href=""https://drive.google.com/open?id=0B7mblFaJhY4VY0dXdWdqTWNmUDgFor"">https://drive.google.com/open?id=0B7mblFaJhY4VY0dXdWdqTWNmUDgFor</a> Citation use :-M. Saleh, A. Althaibani, Y. Esa, Y. Mhandi and A. Mohamed, ""Impact of clustering microgrids on their stability and resilience during blackouts,"" 2015 International Conference on Smart Grid and Clean Energy Technologies (ICSGCE), Offenburg, 2015, pp. 195-200.</p>power_conversion_control,power_electronics_control,bidirectional converter,bidirectional converter matlab simulink,bidirectional converter simulink,bidirectional file exchange,bidirectional matlab,bidirectional simulink,buck boost converter,control of bidirectional,current control,current control bidirectional,current control bidirectional model,current control bidirectional simulink model,current control converter,current control dc dc bidirectional converter,current control dc dc converter,current controlled bidirectional,current controlled converter,current controlled dc dc bidirectional converter,dc dc bidirectional converter,dcdc converter,how to model bidirectional converter,how to model dc dc bidirectional converter,how to model dc dc converter,microgrid,microgrid converter,simulation,simulink",80,2,2,0,92,current controller bidirectional converter detail control bidirectional converter mahmoud salehif need low version like low let know commentsthe description element top calculate flexible work within wide range value question please email main email mahmoudsah hotmail com student email msaleh citymail cunyedu gmail mahmoudsalahem gmail comin subject email write bidirectional mathwork question would able track email even junk mail expert especially microgrids encounter many problem able fix work dspace build colleague microgrid testbed city college new york accord hardware component avialable lab build test try help case question work follow publication please kindly reference case description test result hardware provide http ieexplore iee org document drive google com open mblfajhy vcmz uegxpm ufor citation saleh esa mhandi brandauer mohamed design implementation ccny microgrid testbed iee industry application society annual meeting portland also paper http ieexplore iee org abstract document drive google com open mblfajhy citation saleh althaibani esa mhandi mohamed impact cluster microgrids stability resilience blackouts international conference smart grid clean energy technology icsgce offenburg power conversion controlpower electronics converter converter file boost controlcurrent control control bidirectional modelcurrent control bidirectional modelcurrent control control bidirectional control control control control bidirectional converterdc bidirectional converterdcdc converterhow bidirectional converterhow bidirectional converterhow,"['current', 'controller', 'bidirectional', 'converter', 'detail', 'control', 'bidirectional', 'converter', 'mahmoud', 'salehif', 'need', 'low', 'version', 'like', 'low', 'let', 'know', 'commentsthe', 'description', 'element', 'top', 'calculate', 'flexible', 'work', 'within', 'wide', 'range', 'value', 'question', 'please', 'email', 'main', 'email', 'mahmoudsah', 'hotmail', 'com', 'student', 'email', 'msaleh', 'citymail', 'cunyedu', 'gmail', 'mahmoudsalahem', 'gmail', 'comin', 'subject', 'email', 'write', 'bidirectional', 'mathwork', 'question', 'would', 'able', 'track', 'email', 'even', 'junk', 'mail', 'expert', 'especially', 'microgrids', 'encounter', 'many', 'problem', 'able', 'fix', 'work', 'dspace', 'build', 'colleague', 'microgrid', 'testbed', 'city', 'college', 'new', 'york', 'accord', 'hardware', 'component', 'avialable', 'lab', 'build', 'test', 'try', 'help', 'case', 'question', 'work', 'follow', 'publication', 'please', 'kindly', 'reference', 'case', 'description', 'test', 'result', 'hardware', 'provide', 'http', 'ieexplore', 'iee', 'org', 'document', 'drive', 'google', 'com', 'open', 'mblfajhy', 'vcmz', 'uegxpm', 'ufor', 'citation', 'saleh', 'esa', 'mhandi', 'brandauer', 'mohamed', 'design', 'implementation', 'ccny', 'microgrid', 'testbed', 'iee', 'industry', 'application', 'society', 'annual', 'meeting', 'portland', 'also', 'paper', 'http', 'ieexplore', 'iee', 'org', 'abstract', 'document', 'drive', 'google', 'com', 'open', 'mblfajhy', 'citation', 'saleh', 'althaibani', 'esa', 'mhandi', 'mohamed', 'impact', 'cluster', 'microgrids', 'stability', 'resilience', 'blackouts', 'international', 'conference', 'smart', 'grid', 'clean', 'energy', 'technology', 'icsgce', 'offenburg', 'power', 'conversion', 'controlpower', 'electronics', 'converter', 'converter', 'file', 'boost', 'controlcurrent', 'control', 'control', 'bidirectional', 'modelcurrent', 'control', 'bidirectional', 'modelcurrent', 'control', 'control', 'bidirectional', 'control', 'control', 'control', 'control', 'bidirectional', 'converterdc', 'bidirectional', 'converterdcdc', 'converterhow', 'bidirectional', 'converterhow', 'bidirectional', 'converterhow']",5
2060,63339,"Undervoltage Protection Relay that operates when the voltage is less than the predetermined value.<p>Undervoltage Relay (ANSI/IEEE C37.2 device number 27) that operates when the voltage is less than the predetermined value.Undervoltage Setting  (U &lt;&lt;)Specify undervoltage setting ranging from 1% to 25%.Undervoltage Time Delay Setting (t &lt;&lt;)Specify undervoltage time delay ranging from 0.1s to 30s for under voltage ride through.Nominal Phase-to-Ground Voltage (Vrms)Specify the relay nominal phase-to-ground RMS voltage measurement.Fundamental Frequency (Hz)Specify the RMS current measurement fundamental frequency, in hertz, of the input signal.</p>ansi device number 27,digital protection relay,ieee c372 device number 27,numerical protection relay,protection relay,undervoltage relay",16,1,2,0,27,undervoltage protection relay operate voltage less predetermined value undervoltage relay ansi iee device number operate voltage less predetermined value undervoltage set specify undervoltage set range undervoltage time delay set specify undervoltage time delay range voltage ride nominal phase ground voltage vrms specify relay nominal phase ground rms voltage measurement fundamental frequency specify rms current measurement fundamental frequency hertz input signal ansi device number digital protection relayiee device number numerical protection relayprotection relay,"['undervoltage', 'protection', 'relay', 'operate', 'voltage', 'less', 'predetermined', 'value', 'undervoltage', 'relay', 'ansi', 'iee', 'device', 'number', 'operate', 'voltage', 'less', 'predetermined', 'value', 'undervoltage', 'set', 'specify', 'undervoltage', 'set', 'range', 'undervoltage', 'time', 'delay', 'set', 'specify', 'undervoltage', 'time', 'delay', 'range', 'voltage', 'ride', 'nominal', 'phase', 'ground', 'voltage', 'vrms', 'specify', 'relay', 'nominal', 'phase', 'ground', 'rms', 'voltage', 'measurement', 'fundamental', 'frequency', 'specify', 'rms', 'current', 'measurement', 'fundamental', 'frequency', 'hertz', 'input', 'signal', 'ansi', 'device', 'number', 'digital', 'protection', 'relayiee', 'device', 'number', 'numerical', 'protection', 'relayprotection', 'relay']",4
2061,63357,"Simulation of an Active front end rectifier<p>Simulation of an Active front end rectifier. This is a AC-DC converter with a very low THD input current and capable handle bidireccional power. The power factor can be adjust from 0 to 1. The simulation contemplates online increase/decrease of load and switch from generating to regenerating mode.</p>power_conversion_control,power_electronics_control,active front end,afe,rectifier,simulink",119,3,2,0,124,active front end active front end rectifier converter low thd input current capable handle bidireccional power power factor adjust contemplates online increase decrease load switch generate regenerate mode power conversion controlpower electronics controlactive front,"['active', 'front', 'end', 'active', 'front', 'end', 'rectifier', 'converter', 'low', 'thd', 'input', 'current', 'capable', 'handle', 'bidireccional', 'power', 'power', 'factor', 'adjust', 'contemplates', 'online', 'increase', 'decrease', 'load', 'switch', 'generate', 'regenerate', 'mode', 'power', 'conversion', 'controlpower', 'electronics', 'controlactive', 'front']",3
2062,63385,"PV generator and MPPT model on simulink<p>Single diode photovoltaic generator with parameters and array configuration.MPPT Boost converter with 4 algorithms.</p>power_conversion_control,power_electronics_control,mppt,photovoltaic,pv,simulink",321,13,3,0,360,generator mppt diode photovoltaic generator parameter array configuration mppt boost converter algorithms power conversion controlpower electronics,"['generator', 'mppt', 'diode', 'photovoltaic', 'generator', 'parameter', 'array', 'configuration', 'mppt', 'boost', 'converter', 'algorithms', 'power', 'conversion', 'controlpower', 'electronics']",1
2063,63397,"Demo files from the Arduino and Beyond Webinar<p>In this session, we will show how MATLAB and Simulink can be used to quickly develop and iterate on algorithms in areas such as signal processing, controls, and image processing, and run them standalone on these hardware boards. We will use a motor control example to highlight how you can:1) Run your MATLAB and Simulink algorithms standalone on your Arduino with the click of a button2) Refine and enhance your algorithms to take advantage of additional capabilities of production hardware3) Automatically generate targeted C code for a variety of hardware</p>electric_motor_control,power_electronics_control,arduino,stm",221,34,4,3,171,demo file arduino beyond webinarin session show quickly develop iterate algorithm area signal processing control image processing run standalone hardware board motor control example highlight run algorithms standalone arduino click button refine enhance algorithm take advantage additional capability production hardware automatically generate targeted code variety motor controlpower electronics,"['demo', 'file', 'arduino', 'beyond', 'webinarin', 'session', 'show', 'quickly', 'develop', 'iterate', 'algorithm', 'area', 'signal', 'processing', 'control', 'image', 'processing', 'run', 'standalone', 'hardware', 'board', 'motor', 'control', 'example', 'highlight', 'run', 'algorithms', 'standalone', 'arduino', 'click', 'button', 'refine', 'enhance', 'algorithm', 'take', 'advantage', 'additional', 'capability', 'production', 'hardware', 'automatically', 'generate', 'targeted', 'code', 'variety', 'motor', 'controlpower', 'electronics']",0
2064,63406,"A simpler form of MPPT algorithm tester<p>Prediction of voltage which can deliver maximum power out of PV panel is crucial. The characteristics of PV are non-linear. Usually MPPT simulations include the non-linear dynamics of DC/DC converters too and most of the times dynamic performance of MPPT algorithms are not demostrated independelty. With this tester you can observe/study how do P&amp;O based MPPT algorithms work.We implemented fixed-step size, variable-step and auto-scaling techniques in our simulation.</p>mppt,po,power_conversion_control,power_electronics_control",95,2,2,0,90,simpler form mppt algorithm voltage deliver maximum power panel crucial characteristic non linear usually mppt include non linear dynamic converter time dynamic performance mppt algorithm demostrated independelty tester observe study amp base mppt algorithms work implement fixed step size variable step auto scale technique mpptpopower conversion controlpower electronics control,"['simpler', 'form', 'mppt', 'algorithm', 'voltage', 'deliver', 'maximum', 'power', 'panel', 'crucial', 'characteristic', 'non', 'linear', 'usually', 'mppt', 'include', 'non', 'linear', 'dynamic', 'converter', 'time', 'dynamic', 'performance', 'mppt', 'algorithm', 'demostrated', 'independelty', 'tester', 'observe', 'study', 'amp', 'base', 'mppt', 'algorithms', 'work', 'implement', 'fixed', 'step', 'size', 'variable', 'step', 'auto', 'scale', 'technique', 'mpptpopower', 'conversion', 'controlpower', 'electronics', 'control']",4
2065,63423,"3DOF gyro psysical model of fidger spinner<p>There are three models in this submission1. Simple psysical model of fidger spinner - easy start with Simscape MultibodyYou can spin it! Just for fun :)Descriptive video (on Russian)<a href=""https://youtu.be/li0xjOlNbNY2"">https://youtu.be/li0xjOlNbNY2</a>. Spinner Model with Friction - explore how viscous friction in bearing affects spinner rotation3. 3DOF gyro model - spinner in 3DYou can make interactive expirements with the gyro and learn precession and infuence of the gravity on spinner.Descriptive video (on Russian)<a href=""https://youtu.be/rCq89iEGJRc"">https://youtu.be/rCq89iEGJRc</a></p>pick of the week,potw,3dof,fidget spinner,gyro,gyroscope,simscape,simscape multibody,spinner",11,0,1,0,8,dof gyro psysical fidger spinnerthere three submission simple psysical fidger spinner easy start simscape multibodyyou spin fun descriptive video russian youtu xjolnbny spinner friction explore viscous friction bearing affect spinner rotation dof gyro spinner dyou make interactive expirements gyro learn precession infuence gravity spinner descriptive video russian youtu rcq iegjrcpick weekpotw doffidget,"['dof', 'gyro', 'psysical', 'fidger', 'spinnerthere', 'three', 'submission', 'simple', 'psysical', 'fidger', 'spinner', 'easy', 'start', 'simscape', 'multibodyyou', 'spin', 'fun', 'descriptive', 'video', 'russian', 'youtu', 'xjolnbny', 'spinner', 'friction', 'explore', 'viscous', 'friction', 'bearing', 'affect', 'spinner', 'rotation', 'dof', 'gyro', 'spinner', 'dyou', 'make', 'interactive', 'expirements', 'gyro', 'learn', 'precession', 'infuence', 'gravity', 'spinner', 'descriptive', 'video', 'russian', 'youtu', 'rcq', 'iegjrcpick', 'weekpotw', 'doffidget']",8
2066,63442,"PV generator, MPPT and Inverter model on simulink<p>Single diode PV generator with parameters and array configuration.MPPT Boost converter with 4 algorithms.H bridge 3 level Cascaded Inverter.</p>power_conversion_control,power_electronics_control,inverter,mppt,photovoltaic,power electronics,pv,simulink",491,18,3,0,544,generator mppt inverter diode generator parameter array configuration mppt boost converter algorithms bridge level cascade inverter power conversion controlpower electronics,"['generator', 'mppt', 'inverter', 'diode', 'generator', 'parameter', 'array', 'configuration', 'mppt', 'boost', 'converter', 'algorithms', 'bridge', 'level', 'cascade', 'inverter', 'power', 'conversion', 'controlpower', 'electronics']",1
2067,63554,"Diode clamped multilevel inverter (5 lvl) with SPWM control<p>Three phase 5 level inverter with clamped diodes.Sinusoidal PWM control comparing 3 carrier sinus signals with 4 modulating triangular signals.Reaching a THD of 27% (phase to ground) with no filtering.But there is a problem with the charge/discharge of the capacitors, that involves an increasing of the THD.I will accept suggestions for that part.</p>electric_motor_control,power_conversion_control,power_electronics_control,diode,inverter,multilevel,simulink,spwm",175,1,2,0,201,diode clamp multilevel inverter lvl spwm controlthree phase level inverter clamp diode sinusoidal pwm control compare carrier sinus signal modulate triangular signal reach thd phase ground filter problem charge discharge capacitor involve increase thd accept suggestion part electric motor controlpower conversion controlpower electronics,"['diode', 'clamp', 'multilevel', 'inverter', 'lvl', 'spwm', 'controlthree', 'phase', 'level', 'inverter', 'clamp', 'diode', 'sinusoidal', 'pwm', 'control', 'compare', 'carrier', 'sinus', 'signal', 'modulate', 'triangular', 'signal', 'reach', 'thd', 'phase', 'ground', 'filter', 'problem', 'charge', 'discharge', 'capacitor', 'involve', 'increase', 'thd', 'accept', 'suggestion', 'part', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
2068,63580,"This model is taken from the webinar entitled ""Quadcopter Simulation and Control Made Easy""<p>This model is taken from the webinar entitled ""Quadcopter Simulation and Control Made Easy"", which you can find here:  <a href=""https://www.mathworks.com/videos/quadcopter-simulation-and-control-made-easy-93365.htmlThe"">https://www.mathworks.com/videos/quadcopter-simulation-and-control-made-easy-93365.htmlThe</a> model is used to show how to design a controller in Simulink for a quadcopter that was originally created in a 3D CAD program.</p>quadcopter",977,132,5,16,843,take webinar entitle quadcopter control make easy take webinar entitle quadcopter control make easy find mathworks com videos quadcopter control make easy htmlthe show design controller quadcopter originally create cad program quadcopter,"['take', 'webinar', 'entitle', 'quadcopter', 'control', 'make', 'easy', 'take', 'webinar', 'entitle', 'quadcopter', 'control', 'make', 'easy', 'find', 'mathworks', 'com', 'videos', 'quadcopter', 'control', 'make', 'easy', 'htmlthe', 'show', 'design', 'controller', 'quadcopter', 'originally', 'create', 'cad', 'program', 'quadcopter']",0
2069,63593,"PLL for Grid Synchronisations<p>PLLs or Unit Vector Generators are used to find out grid voltage and angle accurately so that grid synchronisation can be done easily. they are also used in Park's transformations for controller implementations. PLL gives accurate result  with varying voltage and frequency conditions also.</p>clarke,controller,dq,grid,park,phase locked loop,pi,pll,syncronisation",276,18,3,0,305,pll grid unit vector generator find grid voltage angle accurately grid synchronisation easily also park transformation controller implementation pll give accurate result vary voltage frequency condition also lock,"['pll', 'grid', 'unit', 'vector', 'generator', 'find', 'grid', 'voltage', 'angle', 'accurately', 'grid', 'synchronisation', 'easily', 'also', 'park', 'transformation', 'controller', 'implementation', 'pll', 'give', 'accurate', 'result', 'vary', 'voltage', 'frequency', 'condition', 'also', 'lock']",4
2070,63611,"error while loading the data file in PSAT<p>I have constructed 33 bus radial distribution system. But while loading the data file in PSAT , It is showing Error: Line block  has a wrong number of data.for all the lines. Ihave tried so many times but i am not finding any solution in this regard. Please help in this regard</p>simulation",104,0,1,0,109,error load data file psati construct bus radial distribution load data file psat show error line block wrong number data line ihave try many time find solution regard please help,"['error', 'load', 'data', 'file', 'psati', 'construct', 'bus', 'radial', 'distribution', 'load', 'data', 'file', 'psat', 'show', 'error', 'line', 'block', 'wrong', 'number', 'data', 'line', 'ihave', 'try', 'many', 'time', 'find', 'solution', 'regard', 'please', 'help']",7
2071,63618,"Contains the necessary functions to evaluate Magic Formula 6.1 and 6.2 models from TIR files<p>MFeval (Magic Formula evaluation) has been created to provide a robust way to evaluate Magic Formula 6.1 and 6.2 tyre models.The toolbox contains the function with the same name (mfeval.m) used to evaluate tyre property files with the Magic Formula 6.1 and 6.2 equations. A tyre property file (.tir) contains the magic formula parameters that define the tyre's force and moment characteristics. MFeval is developed and maintained by the Tyre CAE Team within Chassis Engineering (Jaguar Land Rover).</p>formula,magic formula,mf-tyre,mf61,mf62,pac2002,pac2006,pacejka,simulation,solver,tir,tire,tyre,tyres,vehicle",34,2,1,2,43,contains necessary function evaluate magic formula tir filesmfeval magic formula evaluation create provide robust way evaluate magic formula tyre toolbox contain function name mfeval evaluate tyre property file magic formula equation tyre property file tir contain magic formula parameter define tyre force moment characteristic mfeval develop maintain tyre cae team within chassis engineering jaguar land rover formulamagic formulamf tyremf pac pac,"['contains', 'necessary', 'function', 'evaluate', 'magic', 'formula', 'tir', 'filesmfeval', 'magic', 'formula', 'evaluation', 'create', 'provide', 'robust', 'way', 'evaluate', 'magic', 'formula', 'tyre', 'toolbox', 'contain', 'function', 'name', 'mfeval', 'evaluate', 'tyre', 'property', 'file', 'magic', 'formula', 'equation', 'tyre', 'property', 'file', 'tir', 'contain', 'magic', 'formula', 'parameter', 'define', 'tyre', 'force', 'moment', 'characteristic', 'mfeval', 'develop', 'maintain', 'tyre', 'cae', 'team', 'within', 'chassis', 'engineering', 'jaguar', 'land', 'rover', 'formulamagic', 'formulamf', 'tyremf', 'pac', 'pac']",5
2072,63636,"Orthogonal signal generation block that creates alpha/beta signals for single phase systems<p>This block generates an orthogonal signal  using a structure based on second order integrator. It has the advantages of simple implementation, signal filtering without delay due to the resonance at the fundamental frequency. The block is experimentally tested for code generation on DSP c2000 28335 and works perfectly.Please rate the model if you like it</p>28335,alpha beta transformation,code generation,dsp,filter without delay,orthogonal signal generation,single phase alpha beta",32,3,3,0,37,orthogonal signal generation block create alpha beta signal single phase systemsthis block generate orthogonal signal structure base second order integrator advantage simple implementation signal filtering without delay due resonance fundamental frequency block experimentally test code generation dsp work perfectly please rate like alpha beta without delayorthogonal signal phase alpha beta,"['orthogonal', 'signal', 'generation', 'block', 'create', 'alpha', 'beta', 'signal', 'single', 'phase', 'systemsthis', 'block', 'generate', 'orthogonal', 'signal', 'structure', 'base', 'second', 'order', 'integrator', 'advantage', 'simple', 'implementation', 'signal', 'filtering', 'without', 'delay', 'due', 'resonance', 'fundamental', 'frequency', 'block', 'experimentally', 'test', 'code', 'generation', 'dsp', 'work', 'perfectly', 'please', 'rate', 'like', 'alpha', 'beta', 'without', 'delayorthogonal', 'signal', 'phase', 'alpha', 'beta']",0
2073,63675,final version of color detector for mobile  devices<p>Color detector for mobile devices</p>application,55,4,3,0,61,final version color detector mobile devicescolor detector mobile,"['final', 'version', 'color', 'detector', 'mobile', 'devicescolor', 'detector', 'mobile']",5
2074,63697,"Demo files to build your own Automatic guitar tuner<p>This demo shows how to build an Arduino-based automatic guitar tuner. The circuits necessary to build the tuner are provided in this file.<a href=""https://www.youtube.com/watch?v=EJltXLUTFHk"">https://www.youtube.com/watch?v=EJltXLUTFHk</a></p>arduino,simulink,maker",22,13,2,11,17,demo file build automatic guitar tunerthis demo show build arduino base automatic guitar tuner circuit necessary build tuner provide file youtube com watch,"['demo', 'file', 'build', 'automatic', 'guitar', 'tunerthis', 'demo', 'show', 'build', 'arduino', 'base', 'automatic', 'guitar', 'tuner', 'circuit', 'necessary', 'build', 'tuner', 'provide', 'file', 'youtube', 'com', 'watch']",7
2075,63704,"Mathematical modelling of I.M in stationary reference frame.<p>The mathematical model of an electric machine represents all the equations that describe the relationships between electromagnetic torque and the main electrical and mechanical quantities. The mathematical models with concentrated parameters are the most popular and consequently employed both in scientific literature and practice. The equations stand on resistances and inductances, which can be used further for defining magnetic fluxes,electromagnetic torque.% Parameters of a typical induction machine.Rs=0.435;   %Stator resistanceRr=0.816;   %Rotor resistanceLls=0.002;  %Stator inductanceLlr=0.002;  %Rotor inductanceLm=0.0693;M=Lm;       % Mutual inductanceP=4;    %Number of PolesJ=0.089;    %InertiaB=0.01;     %friction coefficientTl=0.5;     %Load torqueWe=2*pi*50;Lss=0.0713;  %Lss = Lls + LmLrr=0.0713;  %Lrr = Llr + LmReferences:<a href=""http://shodhganga.inflibnet.ac.in/bitstream/10603/8434/11/11_chapter%203.pdf"">http://shodhganga.inflibnet.ac.in/bitstream/10603/8434/11/11_chapter%203.pdf</a></p>electric_motor_control,power_electronics_control,asynchronous motor,dynamic model,induction motor,modeling,power electronics,simulation,simulink",128,6,3,0,132,mathematical stationary reference frame mathematical electric machine represent equation describe relationship electromagnetic torque main electrical mechanical quantity mathematical concentrate parameter popular consequently employ scientific literature practice equation stand resistance inductance define magnetic torque parameter typical induction machine stator resistancerr rotor resistancells stator inductancellr rotor inductancelm mutual inductancep number polesj inertiab friction coefficienttl load torquewe lls lmlrr lrr llr lmreferences http shodhganga inflibnet bitstream chapter pdfelectric motor controlpower electronics motordynamic modelinduction,"['mathematical', 'stationary', 'reference', 'frame', 'mathematical', 'electric', 'machine', 'represent', 'equation', 'describe', 'relationship', 'electromagnetic', 'torque', 'main', 'electrical', 'mechanical', 'quantity', 'mathematical', 'concentrate', 'parameter', 'popular', 'consequently', 'employ', 'scientific', 'literature', 'practice', 'equation', 'stand', 'resistance', 'inductance', 'define', 'magnetic', 'torque', 'parameter', 'typical', 'induction', 'machine', 'stator', 'resistancerr', 'rotor', 'resistancells', 'stator', 'inductancellr', 'rotor', 'inductancelm', 'mutual', 'inductancep', 'number', 'polesj', 'inertiab', 'friction', 'coefficienttl', 'load', 'torquewe', 'lls', 'lmlrr', 'lrr', 'llr', 'lmreferences', 'http', 'shodhganga', 'inflibnet', 'bitstream', 'chapter', 'pdfelectric', 'motor', 'controlpower', 'electronics', 'motordynamic', 'modelinduction']",8
2076,63759,"Induction motor modelling using synchronously rotating reference frame.<p>The mathematical model of Induction motor in synchronously rotating reference frame. Reference frame speed is equal to synchronous speed(Ï= Ïe). Synchronously rotating reference frame is suitable when analog computer is employed because both stator and rotor d-q quantities becomes steady DC quantities. It is also best suited for studying multi-machine system.% SAGAR KUMAR DASH %clc;clear all;% Parameters of a typical induction machine.Rs=0.435;   %Stator resistanceRr=0.816;   %Rotor resistanceLls=0.002;  %Stator inductanceLlr=0.002;  %Rotor inductanceLm=0.0693;M=Lm;       % Mutual inductanceP=4;    %Number of PolesJ=0.089;    %InertiaB=0.01;     %friction coefficientTl=0.5;     %Load torqueWe=2*pi*50;Lss=0.0713;  %Lss = Lls + LmLrr=0.0713;  %Lrr = Llr + Lm</p>electric_motor_control,power_conversion_control,power_electronics_control,dynamic model,induction motor,modelling,rotating frame,synchronous frame",302,16,4,0,295,induction motor synchronously rotate reference frame mathematical induction motor synchronously rotate reference frame reference frame speed equal synchronous speed synchronously rotate reference frame suitable analog computer employ stator rotor quantity become steady quantity also best suit study multi machine sagar kumar dash clc clear parameter typical induction machine stator resistancerr rotor resistancells stator inductancellr rotor inductancelm mutual inductancep number polesj inertiab friction coefficienttl load torquewe lls lmlrr lrr llr lmelectric motor controlpower conversion controlpower electronics controldynamic modelinduction frame,"['induction', 'motor', 'synchronously', 'rotate', 'reference', 'frame', 'mathematical', 'induction', 'motor', 'synchronously', 'rotate', 'reference', 'frame', 'reference', 'frame', 'speed', 'equal', 'synchronous', 'speed', 'synchronously', 'rotate', 'reference', 'frame', 'suitable', 'analog', 'computer', 'employ', 'stator', 'rotor', 'quantity', 'become', 'steady', 'quantity', 'also', 'best', 'suit', 'study', 'multi', 'machine', 'sagar', 'kumar', 'dash', 'clc', 'clear', 'parameter', 'typical', 'induction', 'machine', 'stator', 'resistancerr', 'rotor', 'resistancells', 'stator', 'inductancellr', 'rotor', 'inductancelm', 'mutual', 'inductancep', 'number', 'polesj', 'inertiab', 'friction', 'coefficienttl', 'load', 'torquewe', 'lls', 'lmlrr', 'lrr', 'llr', 'lmelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldynamic', 'modelinduction', 'frame']",4
2077,63765,"A simpler form of MPPT algorithm tester<p>Prediction of voltage which can deliver maximum power out of PV panel is crucial. The characteristics of PV are non-linear. Usually MPPT simulations include the non-linear dynamics of DC/DC converters too and most of the times dynamic performance of MPPT algorithms are not demonstrated independently. With this tester you can observe/study how do P&amp;O based MPPT algorithms work. We implemented fixed-step size, variable-step and auto-scaling techniques in our simulation.Authors: Iqbal Azeem, Muhammad Ali Baig, Hammad Uddin.</p>power_conversion_control,power_electronics_control,mppt,solar,tester",93,2,2,0,88,simpler form mppt algorithm voltage deliver maximum power panel crucial characteristic non linear usually mppt include non linear dynamic converter time dynamic performance mppt algorithm demonstrate independently tester observe study amp base mppt algorithms work implement fixed step size variable step auto scale technique author iqbal azeem muhammad ali baig hammad uddin power conversion controlpower electronics,"['simpler', 'form', 'mppt', 'algorithm', 'voltage', 'deliver', 'maximum', 'power', 'panel', 'crucial', 'characteristic', 'non', 'linear', 'usually', 'mppt', 'include', 'non', 'linear', 'dynamic', 'converter', 'time', 'dynamic', 'performance', 'mppt', 'algorithm', 'demonstrate', 'independently', 'tester', 'observe', 'study', 'amp', 'base', 'mppt', 'algorithms', 'work', 'implement', 'fixed', 'step', 'size', 'variable', 'step', 'auto', 'scale', 'technique', 'author', 'iqbal', 'azeem', 'muhammad', 'ali', 'baig', 'hammad', 'uddin', 'power', 'conversion', 'controlpower', 'electronics']",4
2078,63776,"The SMC controller for boost DC/DC converter is simulated<p>Robust Sliding Mode Control (SMC) of Boost DC/DC Converter.Switching frequency = 15 kHzLoad resistance = 240 OhmsInput voltage = 24 VDesired output voltage(Vod) = 48 VReference voltage (Vref) = 8 VNote: Beta is the ratio of Vref to Vod, i.e. Beta = Vref/Vod; Thus, one obtains:Beta = 8/48 = 1/6.The reference to this simulation, with slight modification, is the work by Siew et. al. in:A Unified Approach to the Design of PWM-based Sliding Mode Voltage Controllersfor Basic DC-DC Converters in Continuous Conduction Mode, IEEE Trans. on Circuits and Systems, 2006.</p>electric_motor_control,power_conversion_control,power_electronics_control,control,control design,power electronics,power system,sliding mode control",55,2,2,0,52,smc controller boost converter slide mode control smc boost converter switch frequency khzload resistance ohmsinput voltage vdesired output voltage vod vreference voltage vref vnote beta ratio vref vod beta vref vod thus one obtain beta reference slight modification work siew unify approach design pwm base slide mode voltage controllersfor basic converter continuous conduction mode iee trans circuit electric motor controlpower conversion controlpower electronics designpower systemsliding mode control,"['smc', 'controller', 'boost', 'converter', 'slide', 'mode', 'control', 'smc', 'boost', 'converter', 'switch', 'frequency', 'khzload', 'resistance', 'ohmsinput', 'voltage', 'vdesired', 'output', 'voltage', 'vod', 'vreference', 'voltage', 'vref', 'vnote', 'beta', 'ratio', 'vref', 'vod', 'beta', 'vref', 'vod', 'thus', 'one', 'obtain', 'beta', 'reference', 'slight', 'modification', 'work', 'siew', 'unify', 'approach', 'design', 'pwm', 'base', 'slide', 'mode', 'voltage', 'controllersfor', 'basic', 'converter', 'continuous', 'conduction', 'mode', 'iee', 'trans', 'circuit', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'designpower', 'systemsliding', 'mode', 'control']",3
2079,63791,"Voltage Controlled DC/DC Bidirectional Converter, multiple Simulink version is uploaded<p>Matlab versions from 2017a to 2014a were uploaded. the file has DC/DC Bidirectional Converter that maintain the DC bus voltage to the desired value regardless of the amount of the current coming from the MG.Please reference the mentioned papers inside the Simulink file if you will use the model. Thank you.</p>power_conversion_control,power_electronics_control,bidirectional,bidirectional fix the dc bus voltage,buck boost converter,dc dc bidirectional converter,dc dc bidirectional converter matlab,dc dc converter,how to model voltage control bidirectional converter,how to model voltage control bidirectional converter in matlab,how to model voltage control bidirectional converter in simulink,matlab bidirectional,microgrid bidirectional converter,simulink bidirectional,simulink converter,voltage control dc dc bidirectional converter,voltage control dc dc converter,voltage controlled converter,votlage control dc dc bidirectional converter",406,7,2,0,448,voltage control bidirectional converter multiple version uploadedmatlab version upload file bidirectional converter maintain bus voltage desire value regardless amount current come please reference mention paper inside file thank power conversion controlpower electronics fix bus voltagebuck boost converterdc bidirectional converterdc bidirectional converter matlabdc converterhow voltage control bidirectional converterhow voltage control bidirectional converter matlabhow voltage control bidirectional converter bidirectional control bidirectional control control control bidirectional converter,"['voltage', 'control', 'bidirectional', 'converter', 'multiple', 'version', 'uploadedmatlab', 'version', 'upload', 'file', 'bidirectional', 'converter', 'maintain', 'bus', 'voltage', 'desire', 'value', 'regardless', 'amount', 'current', 'come', 'please', 'reference', 'mention', 'paper', 'inside', 'file', 'thank', 'power', 'conversion', 'controlpower', 'electronics', 'fix', 'bus', 'voltagebuck', 'boost', 'converterdc', 'bidirectional', 'converterdc', 'bidirectional', 'converter', 'matlabdc', 'converterhow', 'voltage', 'control', 'bidirectional', 'converterhow', 'voltage', 'control', 'bidirectional', 'converter', 'matlabhow', 'voltage', 'control', 'bidirectional', 'converter', 'bidirectional', 'control', 'bidirectional', 'control', 'control', 'control', 'bidirectional', 'converter']",3
2080,63815,"Exploring Stateflow Mutation and Simulink Design Verifier<p>In this submission an autopilot Stateflow model is mutated using a Matlab script. Mutation of a Stateflow model means injecting a deliberate error into a state transition. Each mutant file has only one error. Simulink Design Verifier is then used to find the mutants. If an assertion fails it means that the mutant is killed. The script is able to generate mutants for this particular Stateflow model. With minor changes it should be able to mutate any Stateflow. Another batch script runs all the mutants in a loop and reports the results in a log file. The PDF file has a brief explanation of the work done. The intent of this exercise is to ascertain the SLDV performance on a complex aerospace problem. Earlier submission had a Simulink model and a M file function model for the same autopilot mode transition. The M File is modified here to write a sldv command for every requirement. This is then used to generate requirement based tests for the Stateflow model by falsifying the assertion.</p>aircraft,autopilot,formal methods,modes,stateflow",513,14,3,0,642,explore stateflow mutation design verifierin submission autopilot stateflow mutate script mutation stateflow mean inject deliberate error state transition mutant file one error design verifier find mutant assertion fails mean mutant kill script able generate mutant particular stateflow minor change able mutate stateflow another batch script run mutant loop report result log file pdf file brief explanation work intent exercise ascertain sldv performance complex aerospace problem earlier submission file function autopilot mode transition file modify write sldv command every requirement generate requirement base test stateflow falsify assertion,"['explore', 'stateflow', 'mutation', 'design', 'verifierin', 'submission', 'autopilot', 'stateflow', 'mutate', 'script', 'mutation', 'stateflow', 'mean', 'inject', 'deliberate', 'error', 'state', 'transition', 'mutant', 'file', 'one', 'error', 'design', 'verifier', 'find', 'mutant', 'assertion', 'fails', 'mean', 'mutant', 'kill', 'script', 'able', 'generate', 'mutant', 'particular', 'stateflow', 'minor', 'change', 'able', 'mutate', 'stateflow', 'another', 'batch', 'script', 'run', 'mutant', 'loop', 'report', 'result', 'log', 'file', 'pdf', 'file', 'brief', 'explanation', 'work', 'intent', 'exercise', 'ascertain', 'sldv', 'performance', 'complex', 'aerospace', 'problem', 'earlier', 'submission', 'file', 'function', 'autopilot', 'mode', 'transition', 'file', 'modify', 'write', 'sldv', 'command', 'every', 'requirement', 'generate', 'requirement', 'base', 'test', 'stateflow', 'falsify', 'assertion']",0
2081,63823,"Simulink and Powertrain Blockset models for the Vehicle Modeling series<p>This entry contains files accompanying the MATLAB and Simulink Racing Lounge video ""Vehicle Modeling, Part 1: Simulink"" [Video link: <a href=""https://www.mathworks.com/videos/matlab-and-simulink-racing-lounge-vehicle-modeling-part-1-simulink-1502466996305.html"">https://www.mathworks.com/videos/matlab-and-simulink-racing-lounge-vehicle-modeling-part-1-simulink-1502466996305.html</a>] The entry also contains the models accompanying the MATLAB and Simulink Racing Lounge video ""Vehicle Modeling, Part 2: Powertrain Blockset""[Video Link: <a href=""https://www.mathworks.com/videos/matlab-and-simulink-racing-lounge-vehicle-modeling-part-2-powertrain-blockset-1502821383453.html]The"">https://www.mathworks.com/videos/matlab-and-simulink-racing-lounge-vehicle-modeling-part-2-powertrain-blockset-1502821383453.html]The</a> Simulink models show how to represent vehicle dynamics and specific components using a power loss approach.* A glider model shows how to model vehicle dynamics to obtain high level information about tractive force requirements for a given weight and drive cycle. * A battery electric vehicle (BEV) model shows how to use a power loss approach to represent individual components, such as the electric motor. * A combustion engine vehicle model is also included for additional reference.The Powertrain Blockset models show how single blocks can represent component operation, e.g: battery, motor, engine, transmission, differential, etc. These models include a glider, a BEV, and a combustion engine vehicle.</p>battery_system_management,electric_motor_control,power_electronics_control,example,modeling,simulink,vehicle modeling",314,25,5,5,343,powertrain blockset vehicle seriesthis entry contain file accompany race lounge video vehicle part video link mathworks com videos race lounge vehicle part html entry also contain accompany race lounge video vehicle part powertrain blockset video link mathworks com videos race lounge vehicle part powertrain blockset html show represent vehicle dynamic specific component power loss approach glider show vehicle dynamic obtain high level information tractive force requirement give weight drive cycle battery electric vehicle bev show power loss approach represent individual component electric motor combustion engine vehicle also include additional reference powertrain blockset show single block represent component operation battery motor engine transmission differential etc include glider bev combustion engine vehicle battery motor controlpower electronics,"['powertrain', 'blockset', 'vehicle', 'seriesthis', 'entry', 'contain', 'file', 'accompany', 'race', 'lounge', 'video', 'vehicle', 'part', 'video', 'link', 'mathworks', 'com', 'videos', 'race', 'lounge', 'vehicle', 'part', 'html', 'entry', 'also', 'contain', 'accompany', 'race', 'lounge', 'video', 'vehicle', 'part', 'powertrain', 'blockset', 'video', 'link', 'mathworks', 'com', 'videos', 'race', 'lounge', 'vehicle', 'part', 'powertrain', 'blockset', 'html', 'show', 'represent', 'vehicle', 'dynamic', 'specific', 'component', 'power', 'loss', 'approach', 'glider', 'show', 'vehicle', 'dynamic', 'obtain', 'high', 'level', 'information', 'tractive', 'force', 'requirement', 'give', 'weight', 'drive', 'cycle', 'battery', 'electric', 'vehicle', 'bev', 'show', 'power', 'loss', 'approach', 'represent', 'individual', 'component', 'electric', 'motor', 'combustion', 'engine', 'vehicle', 'also', 'include', 'additional', 'reference', 'powertrain', 'blockset', 'show', 'single', 'block', 'represent', 'component', 'operation', 'battery', 'motor', 'engine', 'transmission', 'differential', 'etc', 'include', 'glider', 'bev', 'combustion', 'engine', 'vehicle', 'battery', 'motor', 'controlpower', 'electronics']",0
2082,63837,"This file simulates the SVPWM control of a typical PMSM drive using PI controllers.<p>This file simulates the SVPWM control of a typical PMSM drive using PI controllers.</p>electric_motor_control,power_electronics_control,electrical motor,motor drive,pi control,pmsm,simulink",145,8,4,0,157,file svpwm control typical pmsm drive controller file svpwm control typical pmsm drive controller electric motor controlpower electronics motormotor drivepi,"['file', 'svpwm', 'control', 'typical', 'pmsm', 'drive', 'controller', 'file', 'svpwm', 'control', 'typical', 'pmsm', 'drive', 'controller', 'electric', 'motor', 'controlpower', 'electronics', 'motormotor', 'drivepi']",3
2083,63852,"shows the Z-source inverter connection<p>it will showâ how the Z-source inverter is connected to the grid and how the power management is going to take place in the grid.</p>inverter,matlab,power electronics,simulation,simulink",268,16,3,0,285,show source inverter connectionit show source inverter connect grid power management take place grid,"['show', 'source', 'inverter', 'connectionit', 'show', 'source', 'inverter', 'connect', 'grid', 'power', 'management', 'take', 'place', 'grid']",3
2084,63853,"discribes about what is the condition of grid at different loads<p>Management of power in AC/DC Hybrid microgrids and its harmonic analysisâ done by using D-STATCOM  with different loads</p>electric_motor_control,power_conversion_control,power_electronics_control,application,inverter,matlab,modeling,power electronics,simulink",486,35,6,0,510,discribes condition grid different loadsmanagement power hybrid microgrids harmonic analysis statcom different loadselectric motor controlpower conversion controlpower electronics,"['discribes', 'condition', 'grid', 'different', 'loadsmanagement', 'power', 'hybrid', 'microgrids', 'harmonic', 'analysis', 'statcom', 'different', 'loadselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
2085,63854,"power management without D-STATCOM<p>Management of power in AC/DC Hybrid microgrids and its harmonic analysisâ done without D-STATCOM  with different loads</p>electric_motor_control,power_conversion_control,power_electronics_control,matlab,power electronics,simulink",288,19,3,0,312,power management without power hybrid microgrids harmonic analysis without statcom different loadselectric motor controlpower conversion controlpower electronics,"['power', 'management', 'without', 'power', 'hybrid', 'microgrids', 'harmonic', 'analysis', 'without', 'statcom', 'different', 'loadselectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
2086,63857,"Remote control racecar programmed using Simulink, integrating vehicle dynamics controllers and CAN<p>This submission contains SimulinkÂ® models developed for a Texas Instruments C2000 based remote control racecar platform that provides a great introduction to Simulink hardware programming. The models demonstrate the usage of closed-loop traction control and open-loop torque vectoring algorithms to control the vehicleâs dynamics as well as CAN communication to transmit sensor data and receive commands and controller parameters. The demonstration also features a Simulink host application that uses Vehicle Network Toolboxâ¢ hardware support to interact with the vehicle in real-time through the CAN network. Additional details on how the hardware was integrated for this demonstration can be found in the submissions pdf file.</p>c2000,can,control design,demo,ecu,kvaser,racecar,rc,texas instruments,torque vectoring,traction control",237,26,4,0,196,remote control racecar program integrate vehicle dynamic controller canthis submission contains develop texas instrument base remote control racecar platform provide great introduction hardware program demonstrate usage close loop traction control open loop torque vectoring algorithm control vehicle dynamic well communication transmit sensor data receive command controller parameter demonstration also feature host application vehicle network toolbox hardware support interact vehicle real time network additional detail hardware integrate demonstration find submission pdf file cancontrol control,"['remote', 'control', 'racecar', 'program', 'integrate', 'vehicle', 'dynamic', 'controller', 'canthis', 'submission', 'contains', 'develop', 'texas', 'instrument', 'base', 'remote', 'control', 'racecar', 'platform', 'provide', 'great', 'introduction', 'hardware', 'program', 'demonstrate', 'usage', 'close', 'loop', 'traction', 'control', 'open', 'loop', 'torque', 'vectoring', 'algorithm', 'control', 'vehicle', 'dynamic', 'well', 'communication', 'transmit', 'sensor', 'data', 'receive', 'command', 'controller', 'parameter', 'demonstration', 'also', 'feature', 'host', 'application', 'vehicle', 'network', 'toolbox', 'hardware', 'support', 'interact', 'vehicle', 'real', 'time', 'network', 'additional', 'detail', 'hardware', 'integrate', 'demonstration', 'find', 'submission', 'pdf', 'file', 'cancontrol', 'control']",0
2087,63859,"A simulation of Air-Conditioner Vane and Louver using SimScape Multibody.<p>The angle of the vane and louver is transmitted using UDP from another model running on a Raspberry Pi.</p>multibody,innovate msia competition",21,0,1,0,20,air conditioner vane louver simscape multibody angle vane louver transmit udp another running raspberry msia competition,"['air', 'conditioner', 'vane', 'louver', 'simscape', 'multibody', 'angle', 'vane', 'louver', 'transmit', 'udp', 'another', 'running', 'raspberry', 'msia', 'competition']",8
2088,63860,"Control a stepper and servo motor using a Raspberry Pi 3 via Simulink<p>A stepper motor and a servo motor is used to control the movement of an air-conditioner vane and louver. This model obtains the location of a desired target, convert the location into motor angle and then controls the motor. Simulink does not provide a built-in stepper motor control block, thus the control has to be built. The model then sends the angle to another SimScape Multibody simulation to update the simulated models.</p>electric_motor_control,power_electronics_control,raspberry pi,servo,stepper motor,innovate msia competition",66,7,2,0,62,control stepper servo motor raspberry via stepper motor servo motor control movement air conditioner vane louver obtain location desire target convert location motor angle control motor provide build stepper motor control block thus control built sends angle another simscape multibody update electric motor controlpower electronics piservostepper motorinnovate msia competition,"['control', 'stepper', 'servo', 'motor', 'raspberry', 'via', 'stepper', 'motor', 'servo', 'motor', 'control', 'movement', 'air', 'conditioner', 'vane', 'louver', 'obtain', 'location', 'desire', 'target', 'convert', 'location', 'motor', 'angle', 'control', 'motor', 'provide', 'build', 'stepper', 'motor', 'control', 'block', 'thus', 'control', 'built', 'sends', 'angle', 'another', 'simscape', 'multibody', 'update', 'electric', 'motor', 'controlpower', 'electronics', 'piservostepper', 'motorinnovate', 'msia', 'competition']",3
2089,63873,"LPF<p>Digital Low Pass Filter in MATLAB SimulinkBoth files should be in the MATLAB directory. First you should determine your Cutoff frequency. After obtaining two parameters a &amp; b, you should double click on ""D_LPF"" and put your numbers of 'a' and 'b' there.You can use block ""D_LPF"" in any other Simulink model and also use it to program Raspberry pi.</p>digital filter,digital low pass filter,low pass filter,lpf",13,1,2,0,12,lpfdigital low pas filter file directory first determine cutoff frequency obtain two parameter amp double click lpf put number block lpf also program raspberry digital filterdigital low pas filterlow pas filterlpf,"['lpfdigital', 'low', 'pas', 'filter', 'file', 'directory', 'first', 'determine', 'cutoff', 'frequency', 'obtain', 'two', 'parameter', 'amp', 'double', 'click', 'lpf', 'put', 'number', 'block', 'lpf', 'also', 'program', 'raspberry', 'digital', 'filterdigital', 'low', 'pas', 'filterlow', 'pas', 'filterlpf']",0
2090,63877,"Kinematic equations of Delta Robot<p>Here you can find Forward kinematic and Inverse kinematic of robot type Delta. Please pay attention to how to find parameters 'f' and 'e' in pictures that are attached.</p>delta robot,forward kinematic,inverse kinematic,kinematic of delta robot",10,0,1,0,13,kinematic equation delta robothere find forward kinematic inverse kinematic robot type delta please pay attention find parameter picture attach delta robotforward delta robot,"['kinematic', 'equation', 'delta', 'robothere', 'find', 'forward', 'kinematic', 'inverse', 'kinematic', 'robot', 'type', 'delta', 'please', 'pay', 'attention', 'find', 'parameter', 'picture', 'attach', 'delta', 'robotforward', 'delta', 'robot']",0
2091,63889,"A DC traction system, 2 substations, with a train moving between 3 passenger stations were modeled<p>A DC traction system, powered by two substations, with a train moving between three passenger stations has been modeled. The topology of the substations is based on standard systems prevalent in several places, such as, New York City Transit. MATLAB versions from 2014 to 2017 were uploaded.</p>power_conversion_control,power_electronics_control,dc traction systems,electric train,electrical rail system,electrical train,electrical train model,electrical train simulink model,energy in electric rail traction systems,rail electric system,rail transit system,regenerative energy,regenrative,traction systems,train,train model,train simulink model,vehicle dynamics,vehicle dynamics model,wayside energy storage",2527,154,7,0,2562,traction substation train move passenger station modeleda traction power two substation train move three passenger station topology substation base standard prevalent several place new york city transit version uploaded power conversion controlpower electronics controldc traction systemselectric trainelectrical rail trainelectrical train modelelectrical train modelenergy electric rail traction systemsrail electric systemrail transit modeltrain modelvehicle dynamicsvehicle dynamic modelwayside energy storage,"['traction', 'substation', 'train', 'move', 'passenger', 'station', 'modeleda', 'traction', 'power', 'two', 'substation', 'train', 'move', 'three', 'passenger', 'station', 'topology', 'substation', 'base', 'standard', 'prevalent', 'several', 'place', 'new', 'york', 'city', 'transit', 'version', 'uploaded', 'power', 'conversion', 'controlpower', 'electronics', 'controldc', 'traction', 'systemselectric', 'trainelectrical', 'rail', 'trainelectrical', 'train', 'modelelectrical', 'train', 'modelenergy', 'electric', 'rail', 'traction', 'systemsrail', 'electric', 'systemrail', 'transit', 'modeltrain', 'modelvehicle', 'dynamicsvehicle', 'dynamic', 'modelwayside', 'energy', 'storage']",8
2092,63893,Single phase H bridge control<p>It shows a basic insight of hysteresis band control</p>inverter control,36,1,2,0,38,single phase bridge controlit show basic insight hysteresis band controlinverter control,"['single', 'phase', 'bridge', 'controlit', 'show', 'basic', 'insight', 'hysteresis', 'band', 'controlinverter', 'control']",3
2093,63949,"DC/DC Boost Converter can be used to maintain the DC bus voltage<p>DC/DC Boost Converter can be used to maintain the DC bus voltage, please read the description inside.</p>power_conversion_control,power_electronics_control,boost,boost converter,converter,dc dc boost converter,dcdc boost converter,dcdc converter,microgrid,microgrid converter,voltage control boost converter,voltage control converter,voltage control dcdc boost converter",602,0,1,0,812,boost converter maintain bus voltagedc boost converter maintain bus voltage please read description inside power conversion controlpower electronics boost converterdcdc boost converterdcdc control boost control control dcdc boost converter,"['boost', 'converter', 'maintain', 'bus', 'voltagedc', 'boost', 'converter', 'maintain', 'bus', 'voltage', 'please', 'read', 'description', 'inside', 'power', 'conversion', 'controlpower', 'electronics', 'boost', 'converterdcdc', 'boost', 'converterdcdc', 'control', 'boost', 'control', 'control', 'dcdc', 'boost', 'converter']",1
2094,63989,"Measure spinner speed with LEGO EV3 and Stateflow<p>Unleash power of Stateflow - use its main features to measure speed of fidget spinner.You only need:- LEGO EV3 Brick- Color Sensor- Fidget Spinner- White paperDescriptive video (on Russian)<a href=""https://www.youtube.com/watch?v=yWj0ZoPTYCU"">https://www.youtube.com/watch?v=yWj0ZoPTYCU</a></p>maker,ev3,lego,speedometer,spinner,stateflow",26,0,3,0,29,measure spinner speed lego power stateflow main feature measure speed fidget spinner need lego brick color sensor fidget spinner white video russian youtube com watch ywj zoptycumakerev,"['measure', 'spinner', 'speed', 'lego', 'power', 'stateflow', 'main', 'feature', 'measure', 'speed', 'fidget', 'spinner', 'need', 'lego', 'brick', 'color', 'sensor', 'fidget', 'spinner', 'white', 'video', 'russian', 'youtube', 'com', 'watch', 'ywj', 'zoptycumakerev']",5
2095,64036,"Iterative learning controller (ILC) versus multioscillatory controller (MOSC) battle.<p>A bunch of scripts and models to help you experiment with ILC and MOSC in the context of a grid-tie converter. Includes solution described in <a href=""https://doi.org/10.1016/j.conengprac.2017.03.013"">https://doi.org/10.1016/j.conengprac.2017.03.013</a> (R. Nazir). The authors' copy of my complete 9 page long paper (in English) is included. The research was partially supported by the National Centre for Research and Development (Narodowe Centrum Badan i Rozwoju) within the project No. PBS3/A4/13/2015 entitled ""Superconducting magnetic energy storage with a power electronic interface for the electric power systems"" (original title: ""NadprzewodzÄcy magazyn energii z interfejsem energoelektronicznym do zastosowaÅ w sieciach dystrybucyjnych""), 01.07.2015--30.06.2018. The acronym for the project is NpME.</p>active rectifier,fd,fd filter,fractional delay,fractional delay filter,fractional delay ilc,grid converter,ilc,iterative learning control,mosc,multioscillatory controller,rc,repetitive control,resonant controller,variable frequency,power_conversion_control,power_electronics_control",847,79,3,0,917,iterative learn controller ilc versus controller mosc battle bunch script help experiment ilc mosc context grid tie converter include solution describe doi org conengprac nazir author copy complete page long paper english include research partially support national centre research development narodowe centrum badan rozwoju within project entitle superconducting magnetic energy storage power electronic interface electric power original title nadprzewodzÄcy magazyn energii interfejsem zastosowaÅ sieciach dystrybucyjnych acronym project npme active rectifierfdfd delayfractional delay delay ilcgrid learn controlresonant frequencypower conversion controlpower electronics control,"['iterative', 'learn', 'controller', 'ilc', 'versus', 'controller', 'mosc', 'battle', 'bunch', 'script', 'help', 'experiment', 'ilc', 'mosc', 'context', 'grid', 'tie', 'converter', 'include', 'solution', 'describe', 'doi', 'org', 'conengprac', 'nazir', 'author', 'copy', 'complete', 'page', 'long', 'paper', 'english', 'include', 'research', 'partially', 'support', 'national', 'centre', 'research', 'development', 'narodowe', 'centrum', 'badan', 'rozwoju', 'within', 'project', 'entitle', 'superconducting', 'magnetic', 'energy', 'storage', 'power', 'electronic', 'interface', 'electric', 'power', 'original', 'title', 'nadprzewodzÄcy', 'magazyn', 'energii', 'interfejsem', 'zastosowaÅ', 'sieciach', 'dystrybucyjnych', 'acronym', 'project', 'npme', 'active', 'rectifierfdfd', 'delayfractional', 'delay', 'delay', 'ilcgrid', 'learn', 'controlresonant', 'frequencypower', 'conversion', 'controlpower', 'electronics', 'control']",5
2096,64050,"PWM with the switching frequency & the duty cycle as the input<p>The pulse width modulation (PWM) for the DC-DC power converter. This PWM consist of two input, the duty cycle,D, and the switching freqency, f. It is suitable for power converter that used frequency control for output modulation. One of the example is the quasi resonant converter.The quasi resonant converter's output voltage is controlled using the switching frequency. Matlab Library only provide the PWM with duty cycle, D, as the input. This PWM have two input, switching frequency and duty cycle.</p>electric_motor_control,power_conversion_control,power_electronics_control,converter,frequency controlled,pulse width modulation,pwm,quasi,resonant",13,1,2,0,12,pwm switch frequency duty cycle inputthe pulse width modulation pwm power converter pwm consist two input duty cycle switch freqency suitable power converter frequency control output modulation one example quasi resonant converter quasi resonant converter output voltage control switch frequency provide pwm duty cycle input pwm two input switch frequency duty cycle electric motor controlpower conversion controlpower electronics controlledpulse width,"['pwm', 'switch', 'frequency', 'duty', 'cycle', 'inputthe', 'pulse', 'width', 'modulation', 'pwm', 'power', 'converter', 'pwm', 'consist', 'two', 'input', 'duty', 'cycle', 'switch', 'freqency', 'suitable', 'power', 'converter', 'frequency', 'control', 'output', 'modulation', 'one', 'example', 'quasi', 'resonant', 'converter', 'quasi', 'resonant', 'converter', 'output', 'voltage', 'control', 'switch', 'frequency', 'provide', 'pwm', 'duty', 'cycle', 'input', 'pwm', 'two', 'input', 'switch', 'frequency', 'duty', 'cycle', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlledpulse', 'width']",1
2097,64054,"It compensates reactive power by changing effective reactance by varying firing angle of thyristor.<p>It first measures system voltage and current supplied by source. Then, ir calculates reactive power supplied by source. It compares this reactive power with zero and error is passed to PI controller which calculates firing angle. Firing signal of calculated firing angle is calculated and thyristor is fired at required angle. FCTCR generates(or consumes) required amount of reactive power.</p>power_conversion_control,power_electronics_control,compensation,facts device,fctcr,reactive power",156,7,3,0,184,compensates reactive power change effective reactance vary fire angle thyristor first measure voltage current supply source calculates reactive power supply source compare reactive power zero error pass controller calculates fire angle fire signal calculate fire angle calculate thyristor fire require angle fctcr generates consumes required amount reactive power power conversion controlpower electronics power,"['compensates', 'reactive', 'power', 'change', 'effective', 'reactance', 'vary', 'fire', 'angle', 'thyristor', 'first', 'measure', 'voltage', 'current', 'supply', 'source', 'calculates', 'reactive', 'power', 'supply', 'source', 'compare', 'reactive', 'power', 'zero', 'error', 'pass', 'controller', 'calculates', 'fire', 'angle', 'fire', 'signal', 'calculate', 'fire', 'angle', 'calculate', 'thyristor', 'fire', 'require', 'angle', 'fctcr', 'generates', 'consumes', 'required', 'amount', 'reactive', 'power', 'power', 'conversion', 'controlpower', 'electronics', 'power']",3
2098,64056,"Inner workings of a swarm-based repetitive controller with adaptive forgetting are demonstrated.<p>The research was partially supported by the National Centre for Research and Development (Narodowe Centrum Badan i Rozwoju) within the project No. PBS3/A4/13/2015 entitled ""Superconducting magnetic energy storage with a power electronic interface for the electric power systems"" (original title: ""Nadprzewodzacy magazyn energii z interfejsem energoelektronicznym do zastosowan w sieciach dystrybucyjnych""), 01.07.2015--30.06.2018. The acronym for the project is NpME. The relevant paper is going to be presented at <a href=""http://www.epe2017.com/"">http://www.epe2017.com/</a> . Its authors' copy is included.</p>active recifier,control,dynamic optimization problem,energy quality,energy storage,grid interface,gridtie converter,ilc,iterative learning control,optimal control,particle swarm optimization,power electronic converter,power electronics,pso,renewable energy storage,renewables,repetitive control,res,smart grid,power_conversion_control,power_electronics_control",111,9,3,0,120,inner working swarm base repetitive controller adaptive forgetting demonstrate research partially support national centre research development narodowe centrum badan rozwoju within project entitle superconducting magnetic energy storage power electronic interface electric power original title nadprzewodzacy magazyn energii interfejsem zastosowan sieciach dystrybucyjnych acronym project npme relevant paper present http epe com author copy include active optimization problemenergy qualityenergy storagegrid learn controloptimal controlparticle swarm electronic converterpower energy controlressmart gridpower conversion controlpower electronics control,"['inner', 'working', 'swarm', 'base', 'repetitive', 'controller', 'adaptive', 'forgetting', 'demonstrate', 'research', 'partially', 'support', 'national', 'centre', 'research', 'development', 'narodowe', 'centrum', 'badan', 'rozwoju', 'within', 'project', 'entitle', 'superconducting', 'magnetic', 'energy', 'storage', 'power', 'electronic', 'interface', 'electric', 'power', 'original', 'title', 'nadprzewodzacy', 'magazyn', 'energii', 'interfejsem', 'zastosowan', 'sieciach', 'dystrybucyjnych', 'acronym', 'project', 'npme', 'relevant', 'paper', 'present', 'http', 'epe', 'com', 'author', 'copy', 'include', 'active', 'optimization', 'problemenergy', 'qualityenergy', 'storagegrid', 'learn', 'controloptimal', 'controlparticle', 'swarm', 'electronic', 'converterpower', 'energy', 'controlressmart', 'gridpower', 'conversion', 'controlpower', 'electronics', 'control']",5
2099,64063,"this model of series active filter for line compensation<p>this model of series active filter for line compensation</p>filter,series",79,2,2,0,115,series active filter line series active filter line,"['series', 'active', 'filter', 'line', 'series', 'active', 'filter', 'line']",7
2100,64064,"Simulation Model of STATCOM<p>Simulation Model of STATCOM</p>optimization,simulink",28,0,1,0,31,,[],2
2101,64065,"Simulation Model of Full Wave Inverter Circuit<p>Simulation Model of Full Wave Inverter Circuit</p>inverter,simulation",11,0,1,0,19,full wave inverter full wave inverter,"['full', 'wave', 'inverter', 'full', 'wave', 'inverter']",1
2102,64075,"Controller jumps between fast unstable trajectories. It has very fast response, short settling time<p>Description: This software was prepared by dr Zbigniew Mrozek(Cracow University of Technology, Poland) in cooperation with Prof. StanisÅaw Tarasiewicz (Laval University, Canada). The purpose of this software is demonstration of non-linear sliding mode controller designed to control movement of platform mobile carrying robot with welding equipment. The main feature of  sliding mode controller is fast response and short settling time. The controller do not use the stable feedback but looks for fast unstable trajectories yielding near target point and switches between them as better one trajectory is found.  The methodology is described in a book: Sliding Modes in Control and Optimization by Prof. Vadim I. Utkin, Springer Verlag 1992, ISBN: 978-3-642-84381-5 (Print) 978-3-642-84379-2 (Online), published in Communications and Control Engineering Series, 1992,This example is described in book ""MATLAB i Simulink. Poradnik uÅ¼ytkownika. Wydanie IV, Helion 2017, Poland ISBN 978-83-246-5621-9, 9788324656219,  <a href=""https://helion.pl/ksiazki/matsi4"">https://helion.pl/ksiazki/matsi4</a> or in English  <a href=""https://uk.mathworks.com/academia/books/matlab-i-simulink-mrozek.html?s_tid=srchtitlesee"">https://uk.mathworks.com/academia/books/matlab-i-simulink-mrozek.html?s_tid=srchtitlesee</a> new version: ""Stateflow sliding mode controller (Advanced)""</p>control,controller,demo,fast,image processing,model,nonlinear,robot,robust,simulation,sliding mode,stable solution,swithing unstable trajectories,pick of the week,potw",36,2,2,0,39,controller jump fast unstable trajectory fast response short settle timedescription software prepare zbigniew mrozek cracow university technology poland cooperation prof stanisÅaw tarasiewicz laval university canada purpose software demonstration non linear slide mode controller design control movement platform mobile carry robot weld equipment main feature slide mode controller fast response short settling time controller stable feedback look fast unstable trajectory yield near target point switch well one trajectory find methodology describe book slide mode control optimization prof vadim utkin springer verlag isbn print online publish communication control engineering series example describe book poradnik uÅ¼ytkownika wydanie helion poland isbn helion ksiazki matsi english mathworks com academia book mrozek html tid srchtitlesee new version stateflow slide mode controller advance modestable unstable weekpotw,"['controller', 'jump', 'fast', 'unstable', 'trajectory', 'fast', 'response', 'short', 'settle', 'timedescription', 'software', 'prepare', 'zbigniew', 'mrozek', 'cracow', 'university', 'technology', 'poland', 'cooperation', 'prof', 'stanisÅaw', 'tarasiewicz', 'laval', 'university', 'canada', 'purpose', 'software', 'demonstration', 'non', 'linear', 'slide', 'mode', 'controller', 'design', 'control', 'movement', 'platform', 'mobile', 'carry', 'robot', 'weld', 'equipment', 'main', 'feature', 'slide', 'mode', 'controller', 'fast', 'response', 'short', 'settling', 'time', 'controller', 'stable', 'feedback', 'look', 'fast', 'unstable', 'trajectory', 'yield', 'near', 'target', 'point', 'switch', 'well', 'one', 'trajectory', 'find', 'methodology', 'describe', 'book', 'slide', 'mode', 'control', 'optimization', 'prof', 'vadim', 'utkin', 'springer', 'verlag', 'isbn', 'print', 'online', 'publish', 'communication', 'control', 'engineering', 'series', 'example', 'describe', 'book', 'poradnik', 'uÅ¼ytkownika', 'wydanie', 'helion', 'poland', 'isbn', 'helion', 'ksiazki', 'matsi', 'english', 'mathworks', 'com', 'academia', 'book', 'mrozek', 'html', 'tid', 'srchtitlesee', 'new', 'version', 'stateflow', 'slide', 'mode', 'controller', 'advance', 'modestable', 'unstable', 'weekpotw']",5
2103,64088,"This has a set of blocks which are formally correct in functionality<p>DO331 talks about element blocks. I have put a set of element blocks that I had developed in 2005. These blocks are now validated formally using Simulink Design Verifier. This is added to help understand the concepts and to demonstrate a way in which you can formally test your company specific blocks. This will, I believe, help the students to understand the concept pf safety critical blocks. I will be very happy if students could take some of these blocks and extent it to certain components in their projects.</p>control,simulation,simulink",508,30,2,23,610,set block formally correct functionalitydo talk element block put set element block develop block validate formally design verifier add help understand concept demonstrate way formally test company specific block believe help student understand concept safety critical block happy student could take block extent certain component project,"['set', 'block', 'formally', 'correct', 'functionalitydo', 'talk', 'element', 'block', 'put', 'set', 'element', 'block', 'develop', 'block', 'validate', 'formally', 'design', 'verifier', 'add', 'help', 'understand', 'concept', 'demonstrate', 'way', 'formally', 'test', 'company', 'specific', 'block', 'believe', 'help', 'student', 'understand', 'concept', 'safety', 'critical', 'block', 'happy', 'student', 'could', 'take', 'block', 'extent', 'certain', 'component', 'project']",0
2104,64109,"It compensates for voltage sag or swell.<p>It measures the source side voltage and this voltage is subtracted from desired voltage. This voltage is reference voltage that needs to be injected in series. Inverter is employed to inject the voltage. Output votage of inverter is compared to reference voltage and gate signal is generated. Output of inverter is connected in series to line with isolation transformer. In this way, votage sag and swell is compensated.</p>dvr,dynamic voltage restorer,series compensation,voltage sag,voltage swell",43,2,2,0,51,compensates voltage sag swell measure source side voltage voltage subtract desired voltage voltage reference voltage need injected series inverter employ inject voltage output votage inverter compare reference voltage gate signal generate output inverter connect series line isolation transformer way votage sag swell compensate dvrdynamic voltage restorerseries sagvoltage swell,"['compensates', 'voltage', 'sag', 'swell', 'measure', 'source', 'side', 'voltage', 'voltage', 'subtract', 'desired', 'voltage', 'voltage', 'reference', 'voltage', 'need', 'injected', 'series', 'inverter', 'employ', 'inject', 'voltage', 'output', 'votage', 'inverter', 'compare', 'reference', 'voltage', 'gate', 'signal', 'generate', 'output', 'inverter', 'connect', 'series', 'line', 'isolation', 'transformer', 'way', 'votage', 'sag', 'swell', 'compensate', 'dvrdynamic', 'voltage', 'restorerseries', 'sagvoltage', 'swell']",4
2105,64110,"Smart Microgrid<p>The simulation model of hybrid PV, wind and battery power system developed using Matlab Simulink. The renewable energy system is operated with MPPT techniques based intelligent controller for improving the system efficiency. The hybrid renewable energy system is presented as interconnected Microgrid system by using an intelligent controller. The proposed intelligent controller based phase loop locker show improvement in the system stability during Microgrid integration simulation</p>anfis,hybrid pv wind,intelligent controller,microgrid,power quality,smart grid,battery_system_management,power_conversion_control,power_electronics_control",253,12,3,0,325,smart microgridthe hybrid wind battery power develop renewable energy operate mppt technique base intelligent controller improve efficiency hybrid renewable energy present interconnected microgrid intelligent controller propose intelligent controller base phase loop locker show improvement stability microgrid integration windintelligent qualitysmart gridbattery managementpower conversion controlpower electronics control,"['smart', 'microgridthe', 'hybrid', 'wind', 'battery', 'power', 'develop', 'renewable', 'energy', 'operate', 'mppt', 'technique', 'base', 'intelligent', 'controller', 'improve', 'efficiency', 'hybrid', 'renewable', 'energy', 'present', 'interconnected', 'microgrid', 'intelligent', 'controller', 'propose', 'intelligent', 'controller', 'base', 'phase', 'loop', 'locker', 'show', 'improvement', 'stability', 'microgrid', 'integration', 'windintelligent', 'qualitysmart', 'gridbattery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'control']",3
2106,64111,"Energy Management System<p>Fuzzy Based Energy Management System  PV and Storage Battery Bank</p>battery management system,battery storage system,energy management system,fuzzy controller,pv,battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control",44,1,2,0,66,energy management systemfuzzy base energy management storage battery bankbattery management systembattery storage systemenergy management systemfuzzy motor controlpower conversion controlpower electronics control,"['energy', 'management', 'systemfuzzy', 'base', 'energy', 'management', 'storage', 'battery', 'bankbattery', 'management', 'systembattery', 'storage', 'systemenergy', 'management', 'systemfuzzy', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2107,64120,"For switching the half bridge or full bridge of the Resonant Power Converter<p>The resonant power converter is controlled based on the switching frequency. The PWM provided by the MATLAB library is based on Duty Cycle controlled. However, this PWM provide the switching frequency controlled. There are two output of this PWM. The output is 180 shifted from one another. The dead time is also provided in this PWM to ensure no short circuit occur at the input supply.</p>electric_motor_control,power_conversion_control,power_electronics_control,frequency controlled pwm,full bridge,half bridge,pwm,resonant converter",20,1,2,0,23,switch half bridge full bridge resonant power converterthe resonant power converter control base switching frequency pwm provide base duty cycle control however pwm provide switch frequency control two output pwm output shift one another dead time also provide pwm ensure short circuit occur input supply electric motor controlpower conversion controlpower electronics control pwmfull bridgehalf converter,"['switch', 'half', 'bridge', 'full', 'bridge', 'resonant', 'power', 'converterthe', 'resonant', 'power', 'converter', 'control', 'base', 'switching', 'frequency', 'pwm', 'provide', 'base', 'duty', 'cycle', 'control', 'however', 'pwm', 'provide', 'switch', 'frequency', 'control', 'two', 'output', 'pwm', 'output', 'shift', 'one', 'another', 'dead', 'time', 'also', 'provide', 'pwm', 'ensure', 'short', 'circuit', 'occur', 'input', 'supply', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'pwmfull', 'bridgehalf', 'converter']",3
2108,64129,"Deploying PID controller into Arduino as standalone application using MATLAB compiler<p>This project demonstrated an Autonomous Underwater Vehicle (AUV) equipped with integrated sensor and depth controller based on the pressure sensing which able to continuously sending the depth data to controller. The project is to develop a depth controller for AUV to submerge accurately. The depth Simulink Arduino algorithm is implemented on an Arduino Mega using Model-Based Design (MBD) with MATLAB and Simulink. MBD used to model, simulate and verify the Simulink control algorithm after obtained data through open-loop experiment test. Then, it deploys and tests the algorithm on the embedded AUV hardware. The focus was in controlling the AUV vertical trajectory as the AUV tried to remain stationary at the desired depth and having its overshoot, rise time and settling time minimized. The comparative study for the AUV depth-control by On-Off, Proportional Integral Derivative (PID) and Fuzzy Logic Controller (FLC) controllers. MBD has faster implementation with fewer coding error when deploy to AUV hardware.</p>arduino,simulation,toolbox",130,5,3,13,140,deploy pid controller arduino standalone application compilerthis project demonstrate autonomous underwater vehicle auv equip integrate sensor depth controller base pressure sense able continuously send depth data controller project develop depth controller auv submerge accurately depth arduino algorithm implement arduino mega base design mbd mbd verify control algorithm obtain data open loop experiment test deploys test algorithm embed auv hardware focus control auv vertical trajectory auv try remain stationary desire depth overshoot rise time settle time minimize comparative study auv depth control proportional integral derivative pid fuzzy logic controller flc controller mbd fast implementation cod error deploy auv hardware,"['deploy', 'pid', 'controller', 'arduino', 'standalone', 'application', 'compilerthis', 'project', 'demonstrate', 'autonomous', 'underwater', 'vehicle', 'auv', 'equip', 'integrate', 'sensor', 'depth', 'controller', 'base', 'pressure', 'sense', 'able', 'continuously', 'send', 'depth', 'data', 'controller', 'project', 'develop', 'depth', 'controller', 'auv', 'submerge', 'accurately', 'depth', 'arduino', 'algorithm', 'implement', 'arduino', 'mega', 'base', 'design', 'mbd', 'mbd', 'verify', 'control', 'algorithm', 'obtain', 'data', 'open', 'loop', 'experiment', 'test', 'deploys', 'test', 'algorithm', 'embed', 'auv', 'hardware', 'focus', 'control', 'auv', 'vertical', 'trajectory', 'auv', 'try', 'remain', 'stationary', 'desire', 'depth', 'overshoot', 'rise', 'time', 'settle', 'time', 'minimize', 'comparative', 'study', 'auv', 'depth', 'control', 'proportional', 'integral', 'derivative', 'pid', 'fuzzy', 'logic', 'controller', 'flc', 'controller', 'mbd', 'fast', 'implementation', 'cod', 'error', 'deploy', 'auv', 'hardware']",0
2109,64174,"Related video https://www.youtube.com/watch?v=1WeTsDApoUk<p>Related video <a href=""https://www.youtube.com/watch?v=1WeTsDApoUk"">https://www.youtube.com/watch?v=1WeTsDApoUk</a></p>gazebo",6,0,1,0,4,related video youtube com watch video youtube com watch,"['related', 'video', 'youtube', 'com', 'watch', 'video', 'youtube', 'com', 'watch']",7
2110,64237,"Quadruped robot model with electrical actuation, including gait analysis and design workflow.<p>Models a quadruped robot with electrical actuation. The robot runs with trotting gait on four legs.  Supporting models explain and automate the design process for the limbs, joint angle trajectories, and electrical system.  This model is similar to quadruped robots such as those seen in the video, âIntroducing Spotâ <a href=""https://www.youtube.com/watch?v=M8YjvHYbZ9w"">https://www.youtube.com/watch?v=M8YjvHYbZ9w</a>  Please read the README.txt file to get started.  This model is based on the example covered in the paper ""Tool-Supported Mechatronic System Design""<a href=""http://ieeexplore.ieee.org/document/4758205/?reload=true"">http://ieeexplore.ieee.org/document/4758205/?reload=true</a>  Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">https://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a> Learn more about MathWorks Simscape Products: <a href=""https://www.mathworks.com/physical-modeling/"">https://www.mathworks.com/physical-modeling/</a></p>gait,inverse dynamics,physical modeling,robot",1250,132,5,12,1201,quadruped robot electrical actuation include gait analysis design workflow quadruped robot electrical actuation robot run trot gait four leg support explain automate design process limbs joint angle trajectory electrical similar quadruped robot see video introduce spot youtube com watch yjvhybz please read readme txt file get start base example covered paper tool support mechatronic design http ieexplore iee org document reload true find simscape example search post keyword physical modeling mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product mathworks com physical modeling gaitinverse modelingrobot,"['quadruped', 'robot', 'electrical', 'actuation', 'include', 'gait', 'analysis', 'design', 'workflow', 'quadruped', 'robot', 'electrical', 'actuation', 'robot', 'run', 'trot', 'gait', 'four', 'leg', 'support', 'explain', 'automate', 'design', 'process', 'limbs', 'joint', 'angle', 'trajectory', 'electrical', 'similar', 'quadruped', 'robot', 'see', 'video', 'introduce', 'spot', 'youtube', 'com', 'watch', 'yjvhybz', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'base', 'example', 'covered', 'paper', 'tool', 'support', 'mechatronic', 'design', 'http', 'ieexplore', 'iee', 'org', 'document', 'reload', 'true', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'mathworks', 'com', 'physical', 'modeling', 'gaitinverse', 'modelingrobot']",7
2111,64255,"Overvoltage Relay that operates when the voltage exceeds the predetermined value.<p>Overvoltage Relay (ANSI/IEEE C37.2 device number 59) that operates when the voltage exceeds the predetermined value.Overvoltage SettingSpecify overvoltage setting ranging from 1% to 25%.Overvoltage Time Delay Setting (t &lt;&lt;)Specify overvoltage time delay ranging from 0.1s to 30s for under voltage ride through.Nominal Phase-to-Ground Voltage (Vrms)Specify the relay nominal phase-to-ground RMS voltage measurement.Fundamental Frequency (Hz)Specify the RMS current measurement fundamental frequency, in hertz, of the input signal.</p>ansi device number 59,digital protection relay,numerical protection relay,overvoltage relay,protection relay",16,1,2,0,25,overvoltage relay operate voltage exceeds predetermine value overvoltage relay ansi iee device number operate voltage exceeds predetermine value overvoltage settingspecify overvoltage set range overvoltage time delay set specify overvoltage time delay range voltage ride nominal phase ground voltage vrms specify relay nominal phase ground rms voltage measurement fundamental frequency specify rms current measurement fundamental frequency hertz input signal ansi device number digital protection relaynumerical protection relayprotection relay,"['overvoltage', 'relay', 'operate', 'voltage', 'exceeds', 'predetermine', 'value', 'overvoltage', 'relay', 'ansi', 'iee', 'device', 'number', 'operate', 'voltage', 'exceeds', 'predetermine', 'value', 'overvoltage', 'settingspecify', 'overvoltage', 'set', 'range', 'overvoltage', 'time', 'delay', 'set', 'specify', 'overvoltage', 'time', 'delay', 'range', 'voltage', 'ride', 'nominal', 'phase', 'ground', 'voltage', 'vrms', 'specify', 'relay', 'nominal', 'phase', 'ground', 'rms', 'voltage', 'measurement', 'fundamental', 'frequency', 'specify', 'rms', 'current', 'measurement', 'fundamental', 'frequency', 'hertz', 'input', 'signal', 'ansi', 'device', 'number', 'digital', 'protection', 'relaynumerical', 'protection', 'relayprotection', 'relay']",4
2112,64265,"This file simulates a Boost Converter in closed loop with PID Control along with dynamic load.<p>In simulating DC-DC Converters, the scenario that comes into mind is what happens to the output of the converter when  the load suddenly changes. However, most of the design available simulated one fixed load. This simulation file allows user to dynamically change the load by varying the value of on/ off delay resistor. The on/off delay has been implemented using an ideal mosfet which act as a switch (relay is not available in Simcape Specialized Technology). They delay time can be set by configuring the delay block and the transient behavior can be seen in the scope (Load Voltage and Current). Furthermore, the reference voltage can be  changed and PID can be tuned according to the desired response.</p>power_conversion_control,power_electronics_control,dcdc converters,pid control",19,0,1,0,23,file boost converter close loop pid control along dynamic load converter scenario come mind happens output converter load suddenly change however design available one fix load file allow user dynamically change load vary value delay resistor delay implement ideal mosfet act switch relay available simcape specialize technology delay time set configure delay block transient behavior see scope load voltage current furthermore reference voltage change pid tune accord desire response power conversion controlpower electronics controldcdc converterspid control,"['file', 'boost', 'converter', 'close', 'loop', 'pid', 'control', 'along', 'dynamic', 'load', 'converter', 'scenario', 'come', 'mind', 'happens', 'output', 'converter', 'load', 'suddenly', 'change', 'however', 'design', 'available', 'one', 'fix', 'load', 'file', 'allow', 'user', 'dynamically', 'change', 'load', 'vary', 'value', 'delay', 'resistor', 'delay', 'implement', 'ideal', 'mosfet', 'act', 'switch', 'relay', 'available', 'simcape', 'specialize', 'technology', 'delay', 'time', 'set', 'configure', 'delay', 'block', 'transient', 'behavior', 'see', 'scope', 'load', 'voltage', 'current', 'furthermore', 'reference', 'voltage', 'change', 'pid', 'tune', 'accord', 'desire', 'response', 'power', 'conversion', 'controlpower', 'electronics', 'controldcdc', 'converterspid', 'control']",4
2113,64295,"A GUI that controls and monitors the signal of Arduino using Simulink in real time.<p>This project used Simulink with Arduino Hardware Support Package to control the behavior of Arduino UNO and observe the analog signal read from the similar Arduino UNO. The simulation was ran in External mode for infinite time to make it real time. The Simulink was then linked to a GUI so that the system can be controlled and observed in the easier interface.The GUI controls the parameter of Simulink blocks using set_param function. However, the crucial part was to send output signal from the Simulink to the GUI in real time. I have used a S-Functions as a sink in the Simulink to store the output value in an m-file. This m-file was then being read by the GUI and display the changes value in the real time as the value in the m-file changes.Before we start executing the files, here is the brief overview of the system. The PC must be connected to the Arduino UNO R3 through USB cable. The Arduino will controls an actuator using SPI Communication pin 10 with the power on/off controls through digital pin 8. This actuator will give voltage changes of an object. This analog voltage changes is then being measured by a sensor through pin A5.The files attached should be placed in the same path. Then, we can run the IMDC.m using MATLAB to initialize the GUI and the Simulink diagram. Once the user click on the TURN ON push button in the GUI, the Simulink will starts running the simulation in real time. The user can play around with the other buttons to see the behavior of the system through GUI.</p>arduino,gui,realtime,simulation,simulink",19,1,1,3,19,gui control monitor signal arduino real time project arduino hardware support package control behavior arduino uno observe analog signal read similar arduino uno run external mode infinite time make real time link gui control observe easier interface gui control parameter block set param function however crucial part send output signal gui real time function sink store output value file file read gui display change value real time value file change start execute file brief overview must connect arduino uno usb cable arduino control actuator spi communication pin power control digital pin actuator give voltage change object analog voltage change measure sensor pin file attach place path run imdc initialize gui diagram user click turn push button gui start run real time user play around button see behavior gui,"['gui', 'control', 'monitor', 'signal', 'arduino', 'real', 'time', 'project', 'arduino', 'hardware', 'support', 'package', 'control', 'behavior', 'arduino', 'uno', 'observe', 'analog', 'signal', 'read', 'similar', 'arduino', 'uno', 'run', 'external', 'mode', 'infinite', 'time', 'make', 'real', 'time', 'link', 'gui', 'control', 'observe', 'easier', 'interface', 'gui', 'control', 'parameter', 'block', 'set', 'param', 'function', 'however', 'crucial', 'part', 'send', 'output', 'signal', 'gui', 'real', 'time', 'function', 'sink', 'store', 'output', 'value', 'file', 'file', 'read', 'gui', 'display', 'change', 'value', 'real', 'time', 'value', 'file', 'change', 'start', 'execute', 'file', 'brief', 'overview', 'must', 'connect', 'arduino', 'uno', 'usb', 'cable', 'arduino', 'control', 'actuator', 'spi', 'communication', 'pin', 'power', 'control', 'digital', 'pin', 'actuator', 'give', 'voltage', 'change', 'object', 'analog', 'voltage', 'change', 'measure', 'sensor', 'pin', 'file', 'attach', 'place', 'path', 'run', 'imdc', 'initialize', 'gui', 'diagram', 'user', 'click', 'turn', 'push', 'button', 'gui', 'start', 'run', 'real', 'time', 'user', 'play', 'around', 'button', 'see', 'behavior', 'gui']",7
2114,64332,"SMC of 12V-24V DC converter<p>It boosts up 12V to 24V DC with input voltage distrubance and load distrubance upto 50% with SMC topology.Duty cycle control is the controlling element.</p>power_conversion_control,power_electronics_control,simulation",30,1,2,0,29,smc converterit boost input voltage distrubance load distrubance upto smc topology duty cycle control control element power conversion controlpower electronics,"['smc', 'converterit', 'boost', 'input', 'voltage', 'distrubance', 'load', 'distrubance', 'upto', 'smc', 'topology', 'duty', 'cycle', 'control', 'control', 'element', 'power', 'conversion', 'controlpower', 'electronics']",1
2115,64333,"DC Motor speed control<p>Speed change following</p>electric_motor_control,power_conversion_control,power_electronics_control,control design",45,3,2,0,55,motor speed controlspeed change motor controlpower conversion controlpower electronics controlcontrol design,"['motor', 'speed', 'controlspeed', 'change', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'design']",6
2116,64350,"Controlador por alocaÃ§Ã£o de polos<p>Este bloco contÃ©m um controle regulador por alocaÃ§Ã£o de polos para ser utilizado em simulink.Ã necessÃ¡rio entrar com os valores dos polos da malha fechada, e as matrizes A e B do sistema em espaÃ§o de estados.</p>control,control design,matlab,simulink",7,1,2,0,6,controlador por alocaÃ§Ã£o poloseste bloco contÃ©m controle regulador por alocaÃ§Ã£o polo para ser utilizado necessÃ¡rio entrar com valores dos polo malha fechada matrizes sistema espaÃ§o estados controlcontrol,"['controlador', 'por', 'alocaÃ§Ã£o', 'poloseste', 'bloco', 'contÃ©m', 'controle', 'regulador', 'por', 'alocaÃ§Ã£o', 'polo', 'para', 'ser', 'utilizado', 'necessÃ¡rio', 'entrar', 'com', 'valores', 'dos', 'polo', 'malha', 'fechada', 'matrizes', 'sistema', 'espaÃ§o', 'estados', 'controlcontrol']",8
2117,64352,"Controlador LQR para simulink<p>Este bloco contem um controlador LQR.A entrada do bloco sÃ£o as matrizes A,B em espaÃ§o de estados, e as matrizes Q e R do LQR.</p>control,control design,lqr,matlab,simulink",3,1,2,0,3,controlador lqr para bloco contem controlador lqr entrada bloco sÃ£o matrizes espaÃ§o estados matrizes lqr controlcontrol,"['controlador', 'lqr', 'para', 'bloco', 'contem', 'controlador', 'lqr', 'entrada', 'bloco', 'sÃ£o', 'matrizes', 'espaÃ§o', 'estados', 'matrizes', 'lqr', 'controlcontrol']",8
2118,64353,"Controlador LQI<p>Este bloco contem um controlador LQI.As entradas do bloco sÃ£o as matrizes A,B,C e D em espaÃ§o de estados, e as matrizes Q e R do LQI.</p>control,control design,lqi,lqr,matlab,simulink",15,1,2,0,15,controlador lqieste bloco contem controlador lqi entradas bloco sÃ£o matrizes abc espaÃ§o estados matrizes lqi controlcontrol,"['controlador', 'lqieste', 'bloco', 'contem', 'controlador', 'lqi', 'entradas', 'bloco', 'sÃ£o', 'matrizes', 'abc', 'espaÃ§o', 'estados', 'matrizes', 'lqi', 'controlcontrol']",2
2119,64354,"Observador de estados<p>Bloco com observador de estados para caso SISO.</p>control,control design,matlab,observador de estados,simulink,state observer",1,1,2,0,0,observador estadosbloco com observador estados para caso siso controlcontrol observer,"['observador', 'estadosbloco', 'com', 'observador', 'estados', 'para', 'caso', 'siso', 'controlcontrol', 'observer']",8
2120,64373,"This is a simple analysis of the Schiaparelli failure using formal methods<p>The Schiaparelli was part of the ExoMars 2016 mission launched on a Proton rocket from the Baikonur Cosmodrome in Kazakhstan. The EDM, as it also known, was conceived with the objective to validate and demonstrate entry, descent and landing on Mars in preparation for the ExoMars 2020 mission. On 19 October 2016, the Schiaparelli module entered the Mars atmosphere at 14:42:07 (UTC). Schiaparelli continuously transmitted data during its descent into the Martian atmosphere. Schiaparelliâs signal was lost at 14:47:22 (UTC), about 43 seconds before the expected touchdown on Mars surface.A detailed failure analysis is reported as a document. The main cause was a large oscillatory body rate that caused the inertial sensor to saturate. The saturated value was integrated to provide the attitude angle. Cosine of this term was multiplied by the radio altimeter to get the correct height. During descent the angle became as high as 160 degrees causing a negative altitude to be sent into the controller which switched off the retro rockets.Simulink design verifier is used to find out if there is a chance of the altitude being negative. It brings out a counter example indicating how the altitude can be negative. Users can open the persistence block and change the value of 15 to lower. This change does not cause a negative altitude. This is also the finding in the report.This is a trivial example meant for students. This can be used in a formal methods class by the instructor.I would like to acknowledge Chethan CU who helped me with the problem and model.</p>control,matlab,simulink",26,1,2,0,27,simple analysis schiaparelli failure formal methodsthe schiaparelli part exomars mission launch proton rocket baikonur cosmodrome kazakhstan edm also know conceive objective validate demonstrate entry descent land mar preparation exomars mission october schiaparelli module enter mar atmosphere utc schiaparelli continuously transmit data descent martian atmosphere schiaparellis signal lose utc second expect touchdown mar surface detailed failure analysis report document main cause large oscillatory body rate cause inertial sensor saturate saturate value integrate provide attitude angle cosine term multiply radio altimeter get correct height descent angle become high degree cause negative altitude send controller switch retro rocket design verifier find chance altitude negative brings counter example indicate altitude negative user open persistence block change value low change cause negative altitude also find report trivial example meant student formal method class instructor would like acknowledge chethan help problem,"['simple', 'analysis', 'schiaparelli', 'failure', 'formal', 'methodsthe', 'schiaparelli', 'part', 'exomars', 'mission', 'launch', 'proton', 'rocket', 'baikonur', 'cosmodrome', 'kazakhstan', 'edm', 'also', 'know', 'conceive', 'objective', 'validate', 'demonstrate', 'entry', 'descent', 'land', 'mar', 'preparation', 'exomars', 'mission', 'october', 'schiaparelli', 'module', 'enter', 'mar', 'atmosphere', 'utc', 'schiaparelli', 'continuously', 'transmit', 'data', 'descent', 'martian', 'atmosphere', 'schiaparellis', 'signal', 'lose', 'utc', 'second', 'expect', 'touchdown', 'mar', 'surface', 'detailed', 'failure', 'analysis', 'report', 'document', 'main', 'cause', 'large', 'oscillatory', 'body', 'rate', 'cause', 'inertial', 'sensor', 'saturate', 'saturate', 'value', 'integrate', 'provide', 'attitude', 'angle', 'cosine', 'term', 'multiply', 'radio', 'altimeter', 'get', 'correct', 'height', 'descent', 'angle', 'become', 'high', 'degree', 'cause', 'negative', 'altitude', 'send', 'controller', 'switch', 'retro', 'rocket', 'design', 'verifier', 'find', 'chance', 'altitude', 'negative', 'brings', 'counter', 'example', 'indicate', 'altitude', 'negative', 'user', 'open', 'persistence', 'block', 'change', 'value', 'low', 'change', 'cause', 'negative', 'altitude', 'also', 'find', 'report', 'trivial', 'example', 'meant', 'student', 'formal', 'method', 'class', 'instructor', 'would', 'like', 'acknowledge', 'chethan', 'help', 'problem']",5
2121,64393,"MULTILEVEL INVERTER BASED BLDC MOTOR DRIVE CONTROLLING<p>In high power high voltage application BLDC motor are widely used because of higher efficiency, simple in construction, lower cost, less in maintenance and higher torque or high output power per unit volume. For driving the BLDC motor an electrical commutator (inverter) is required. PWM inverter gives good performance. In two level inverter there are problems of harmonics distortions. The increase in the number of steps in voltage is one of the solutions for the above problems. This can be possible by using multilevel inverters. The conventional method produces high switching losses, results in poor drive performance. We have proposes an effective replacement for this. The effectiveness of the neutral clamped multilevel inverter based drive system is verified through simulation using MATLAB Simulink package.</p>electric_motor_control,power_conversion_control,power_electronics_control,modeling,power electronics,simulink",135,3,3,0,150,multilevel inverter base bldc motor drive controllingin high power high voltage application bldc motor widely high efficiency simple construction lower cost less maintenance high torque high output power per unit volume drive bldc motor electrical commutator inverter require pwm inverter give good performance two level inverter problem harmonics distortion increase number step voltage one solution problem possible multilevel inverter conventional method produce high switching loss result poor drive performance proposes effective replacement effectiveness neutral clamp multilevel inverter base drive verify package electric motor controlpower conversion controlpower electronics,"['multilevel', 'inverter', 'base', 'bldc', 'motor', 'drive', 'controllingin', 'high', 'power', 'high', 'voltage', 'application', 'bldc', 'motor', 'widely', 'high', 'efficiency', 'simple', 'construction', 'lower', 'cost', 'less', 'maintenance', 'high', 'torque', 'high', 'output', 'power', 'per', 'unit', 'volume', 'drive', 'bldc', 'motor', 'electrical', 'commutator', 'inverter', 'require', 'pwm', 'inverter', 'give', 'good', 'performance', 'two', 'level', 'inverter', 'problem', 'harmonics', 'distortion', 'increase', 'number', 'step', 'voltage', 'one', 'solution', 'problem', 'possible', 'multilevel', 'inverter', 'conventional', 'method', 'produce', 'high', 'switching', 'loss', 'result', 'poor', 'drive', 'performance', 'proposes', 'effective', 'replacement', 'effectiveness', 'neutral', 'clamp', 'multilevel', 'inverter', 'base', 'drive', 'verify', 'package', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",3
2122,64405,"SMC control technique<p>DC-DC converter control</p>power_conversion_control,power_electronics_control,simulink",68,2,2,0,68,smc control techniquedc converter controlpower conversion controlpower electronics,"['smc', 'control', 'techniquedc', 'converter', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
2123,64412,"Integrate PV power system into distributed power grid through cascade multilevel inverter ,<p>The objective of this simulation to integrate PV power system into distributed power grid through cascade multilevel inverter and improve the power quality. The above-proposed systemâs objective is achieved through intelligent controllers.</p>grid integration,intelligent controller,multilevel inverter,power electronics,pv,power_conversion_control,power_electronics_control",145,6,3,0,207,integrate power distribute power grid cascade multilevel inverter objective integrate power distribute power grid cascade multilevel inverter improve power quality propose objective achieved intelligent controller grid inverterpower conversion controlpower electronics control,"['integrate', 'power', 'distribute', 'power', 'grid', 'cascade', 'multilevel', 'inverter', 'objective', 'integrate', 'power', 'distribute', 'power', 'grid', 'cascade', 'multilevel', 'inverter', 'improve', 'power', 'quality', 'propose', 'objective', 'achieved', 'intelligent', 'controller', 'grid', 'inverterpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2124,64414,"Integrate PV power system into distributed power grid through cascade multilevel inverter ,<p>The objective of this simulation to integrate PV power system into distributed power grid through cascade multilevel inverter and improve the power quality. The above-proposed systemâs objective is achieved through Fuzzy logic controllers.</p>fuzzy logic,grid,multilevel inverter,power electronics,power quality,pv,power_conversion_control,power_electronics_control",145,6,3,0,209,integrate power distribute power grid cascade multilevel inverter objective integrate power distribute power grid cascade multilevel inverter improve power quality propose objective achieve fuzzy logic controller fuzzy inverterpower qualitypvpower conversion controlpower electronics control,"['integrate', 'power', 'distribute', 'power', 'grid', 'cascade', 'multilevel', 'inverter', 'objective', 'integrate', 'power', 'distribute', 'power', 'grid', 'cascade', 'multilevel', 'inverter', 'improve', 'power', 'quality', 'propose', 'objective', 'achieve', 'fuzzy', 'logic', 'controller', 'fuzzy', 'inverterpower', 'qualitypvpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2125,64415,"Voltage regulation of three phase inverter<p>Voltage regulation of three phase inverter</p>pi controller,three phase inverter,voltage regulator",28,0,1,0,47,voltage regulation three phase invertervoltage regulation three phase inverterpi controllerthree phase invertervoltage regulator,"['voltage', 'regulation', 'three', 'phase', 'invertervoltage', 'regulation', 'three', 'phase', 'inverterpi', 'controllerthree', 'phase', 'invertervoltage', 'regulator']",3
2126,64439,"This is simulation of Single phase fullwave rectifier using simulink and with a GUI.<p>Run Rectifier.m file to run GUI for generating different output waveforms for controlled or uncontrolled rectifier with different firing angles</p>gui for rectifier,power electronics,rectifier,rectifier waveform,simulink linked with gui,single phase full wave converter,single phase full wave rectifier,single phase full wave rectifier simulation with gui,single phase fullwave rectifier,single phase fullwave rectifier simulation with gui",25,0,1,0,31,single phase fullwave rectifier gui run rectifier file run gui generate different output waveform control uncontrolled rectifier different fire anglesgui rectifierpower link guisingle phase full wave convertersingle phase full wave rectifiersingle phase full wave rectifier guisingle phase fullwave rectifiersingle phase fullwave rectifier gui,"['single', 'phase', 'fullwave', 'rectifier', 'gui', 'run', 'rectifier', 'file', 'run', 'gui', 'generate', 'different', 'output', 'waveform', 'control', 'uncontrolled', 'rectifier', 'different', 'fire', 'anglesgui', 'rectifierpower', 'link', 'guisingle', 'phase', 'full', 'wave', 'convertersingle', 'phase', 'full', 'wave', 'rectifiersingle', 'phase', 'full', 'wave', 'rectifier', 'guisingle', 'phase', 'fullwave', 'rectifiersingle', 'phase', 'fullwave', 'rectifier', 'gui']",3
2127,64443,"Solve the 3x3 puzzle using Design Verifier<p>This is a Simulink Model of a 3x3 puzzle. This is a children's game where we could slide the tiles and make the numbers in the consecutive order. The moves are hardcoded. Based on where the blank tile is a certain set of moves are possible. This is modeled as an exchange of tiles. This has not been made as generic. A Matlab code could perhaps make it easier to model a generic N x N square. Simulink Design Verifier solves the tiles problem.</p>matlab,puzzle,simulink",314,25,4,0,476,solve puzzle design verifierthis puzzle child game could slide tile make number consecutive order move hardcoded base blank tile certain set move possible modeled exchange tile make generic code could perhaps make easy generic square design verifier solve tile problem,"['solve', 'puzzle', 'design', 'verifierthis', 'puzzle', 'child', 'game', 'could', 'slide', 'tile', 'make', 'number', 'consecutive', 'order', 'move', 'hardcoded', 'base', 'blank', 'tile', 'certain', 'set', 'move', 'possible', 'modeled', 'exchange', 'tile', 'make', 'generic', 'code', 'could', 'perhaps', 'make', 'easy', 'generic', 'square', 'design', 'verifier', 'solve', 'tile', 'problem']",5
2128,64452,"Data of ""MIL and SIL and PIL tests for MPPT algorithm"" Paper<p>Data of ""MIL and SIL and PIL tests for MPPT algorithm"" Paper:Paper: <a href=""http://www.tandfonline.com/doi/abs/10.1080/23311916.2017.1378475This"">http://www.tandfonline.com/doi/abs/10.1080/23311916.2017.1378475This</a> folder contains :PV panel model: model of the PV panel* MPPT_10kHz_PWM_P&amp;O: implementation of P&amp;O algorithm with 10 khz* MPPT_10kHz_PWM_VSS-P&amp;O: implementation of variable step size P&amp;O algorithm with 10 khz* MPPT_1kHz_PWM_M-VSS-P&amp;O: implementation of modified variable step size P&amp;O algorithm with 1 khz* MPPT_10kHz_PWM_M-VSS-P&amp;O: implementation of modified variable step size P&amp;O algorithm with 10 khz* MPPT_1kHz_PWM_M-VSS-INC: implementation of modified variable step size INC algorithm with 1 khz* MPPT_10kHz_PWM_M-VSS-INC: implementation of modified variable step size P&amp;O algorithm with 10 khzPlease note that ""Matlab 2015 a"" has been used.</p>electric_motor_control,power_conversion_control,power_electronics_control,mppt,solar energy",274,11,2,0,281,data mil sil pil test mppt algorithm paperdata mil sil pil test mppt algorithm paper paper http tandfonline com doi abs folder contains panel panel mppt khz pwm amp implementation amp algorithm khz mppt khz pwm amp implementation variable step size amp algorithm khz mppt khz pwm amp implementation modify variable step size amp algorithm khz mppt khz pwm amp implementation modify variable step size amp algorithm khz mppt khz pwm inc implementation modify variable step size inc algorithm khz mppt khz pwm inc implementation modify variable step size amp algorithm khzplease note electric motor controlpower conversion controlpower electronics energy,"['data', 'mil', 'sil', 'pil', 'test', 'mppt', 'algorithm', 'paperdata', 'mil', 'sil', 'pil', 'test', 'mppt', 'algorithm', 'paper', 'paper', 'http', 'tandfonline', 'com', 'doi', 'abs', 'folder', 'contains', 'panel', 'panel', 'mppt', 'khz', 'pwm', 'amp', 'implementation', 'amp', 'algorithm', 'khz', 'mppt', 'khz', 'pwm', 'amp', 'implementation', 'variable', 'step', 'size', 'amp', 'algorithm', 'khz', 'mppt', 'khz', 'pwm', 'amp', 'implementation', 'modify', 'variable', 'step', 'size', 'amp', 'algorithm', 'khz', 'mppt', 'khz', 'pwm', 'amp', 'implementation', 'modify', 'variable', 'step', 'size', 'amp', 'algorithm', 'khz', 'mppt', 'khz', 'pwm', 'inc', 'implementation', 'modify', 'variable', 'step', 'size', 'inc', 'algorithm', 'khz', 'mppt', 'khz', 'pwm', 'inc', 'implementation', 'modify', 'variable', 'step', 'size', 'amp', 'algorithm', 'khzplease', 'note', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'energy']",4
2129,64488,"An alternative to continuous-time or fixed-step integrators.<p>Useful for simulation of quantized state systems (QSS).How to code this as an S-function?</p>delay,integration",5,0,1,0,5,alternative continuous time fixed step integrator useful quantized state qss code function,"['alternative', 'continuous', 'time', 'fixed', 'step', 'integrator', 'useful', 'quantized', 'state', 'qss', 'code', 'function']",0
2130,64545,simulink model for 14 dof vehicle dynamics<p>a simulink model for lateral and ride dynamics of ground vehicle</p>simulink,1507,89,6,0,1682,dof vehicle dynamicsa lateral ride dynamic ground,"['dof', 'vehicle', 'dynamicsa', 'lateral', 'ride', 'dynamic', 'ground']",5
2131,64572,"Frequency Relay that operates when the system frequency exceed the predetermined value.<p>Frequency Relay (ANSI/IEEE C37.2 device number 81) that operates when the system frequency is less than or exceed the predetermined value.System Frequency (Hz)Specify the system fundamental frequency, in hertz, of the input signal.Under Frequency Setting  (f &lt;&lt;)Specify under frequency setting ranging from 1% to 20%.Over Frequency Setting  (&gt;&gt;f )Specify over frequency setting ranging from 1% to 20%.Ride Through Time Delay Setting (t &lt;&lt;)Specify ride through time delay ranging from 0.1s to 30s for under/over frequency ride through.</p>ansi device number 81,digital protection relay,frequency relay,numerical protection relay,protection relay",18,1,2,0,27,frequency relay operate frequency exceed predetermine value frequency relay ansi iee device number operate frequency less exceed predetermine value frequency specify fundamental frequency hertz input signal frequency set specify frequency set range frequency set specify frequency set range ride time delay set specify ride time delay range frequency ride ansi device number digital protection relayfrequency relaynumerical protection relayprotection relay,"['frequency', 'relay', 'operate', 'frequency', 'exceed', 'predetermine', 'value', 'frequency', 'relay', 'ansi', 'iee', 'device', 'number', 'operate', 'frequency', 'less', 'exceed', 'predetermine', 'value', 'frequency', 'specify', 'fundamental', 'frequency', 'hertz', 'input', 'signal', 'frequency', 'set', 'specify', 'frequency', 'set', 'range', 'frequency', 'set', 'specify', 'frequency', 'set', 'range', 'ride', 'time', 'delay', 'set', 'specify', 'ride', 'time', 'delay', 'range', 'frequency', 'ride', 'ansi', 'device', 'number', 'digital', 'protection', 'relayfrequency', 'relaynumerical', 'protection', 'relayprotection', 'relay']",0
2132,64576,"Inverters in parallel<p>There is a microgrid consists of renewables and battery-bank that provide power by three phase inverters.each inverter in either isolated or connected mode operates fine but when inverters are parallel they don't operate.The two first files are two inverters individually connected to main grid, and the third is whole grid with two inverters and main grid. there is also an image of grid.Can any one explain why it does not work when two inverters are in parallel?</p>battery_system_management,power_electronics_control,microgrid,parallel inverters,renewable,simulink",1602,98,7,0,1625,inverter parallelthere microgrid consist renewables battery bank provide power three phase inverter inverter either isolate connected mode operate fine inverter parallel operate two first file two inverter individually connect main grid third whole grid two inverter main grid also image grid one explain work two inverter parallel battery managementpower electronics,"['inverter', 'parallelthere', 'microgrid', 'consist', 'renewables', 'battery', 'bank', 'provide', 'power', 'three', 'phase', 'inverter', 'inverter', 'either', 'isolate', 'connected', 'mode', 'operate', 'fine', 'inverter', 'parallel', 'operate', 'two', 'first', 'file', 'two', 'inverter', 'individually', 'connect', 'main', 'grid', 'third', 'whole', 'grid', 'two', 'inverter', 'main', 'grid', 'also', 'image', 'grid', 'one', 'explain', 'work', 'two', 'inverter', 'parallel', 'battery', 'managementpower', 'electronics']",3
2133,64608,"MPsee toolbox is an automatic tool for building Nonlinear Model Predictive Controllers<p>MPsee is a mathematical tool that collects all the fundamental information about any optimal control problem and then automatically generates fast online Nonlinear Model Predictive Controller (NMPC) for simulation and implementation purposes. It features a user interface in order to define an optimal control problem. Upon a proper problem definition, MPsee generates related MATLAB codes. Users can then utilize the provided Simulink library (NMPCLib.slx) in order to implement and simulate their NMPC in Simulink. MPsee generates NMPC controllers based on c/GMRES and Newton/GMRES real-time optimization methods and allows users to select between single-shooting and multiple-shooting approaches.License:The MPsee Toolbox is distributed under the Apache License, Version 2.0 (Apache-2.0), but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. It is the user's responsibility in assessing the correctness of the theory and software implementation before putting it to use in their own research or exploiting the results commercially.</p>cgmres,code generation,control,control design,gmres,modeling,mpc,newton,nmpc,nonlinear,optimal control,optimization,predictive",17,2,2,0,17,mpsee toolbox automatic tool building nonlinear predictive mathematical tool collect fundamental information optimal control problem automatically generate fast online nonlinear predictive controller nmpc implementation purpose feature user interface order define optimal control problem upon proper problem definition mpsee generates related code user utilize provide nmpclib slx order implement nmpc mpsee generate nmpc controller base gmres newton gmres real time optimization method allow user select single shoot multiple shoot approach license mpsee toolbox distribute apache license version apache without warranty without even imply warranty merchantability fitness particular purpose user responsibility assess correctness theory software implementation put research exploit result commercially cgmrescode,"['mpsee', 'toolbox', 'automatic', 'tool', 'building', 'nonlinear', 'predictive', 'mathematical', 'tool', 'collect', 'fundamental', 'information', 'optimal', 'control', 'problem', 'automatically', 'generate', 'fast', 'online', 'nonlinear', 'predictive', 'controller', 'nmpc', 'implementation', 'purpose', 'feature', 'user', 'interface', 'order', 'define', 'optimal', 'control', 'problem', 'upon', 'proper', 'problem', 'definition', 'mpsee', 'generates', 'related', 'code', 'user', 'utilize', 'provide', 'nmpclib', 'slx', 'order', 'implement', 'nmpc', 'mpsee', 'generate', 'nmpc', 'controller', 'base', 'gmres', 'newton', 'gmres', 'real', 'time', 'optimization', 'method', 'allow', 'user', 'select', 'single', 'shoot', 'multiple', 'shoot', 'approach', 'license', 'mpsee', 'toolbox', 'distribute', 'apache', 'license', 'version', 'apache', 'without', 'warranty', 'without', 'even', 'imply', 'warranty', 'merchantability', 'fitness', 'particular', 'purpose', 'user', 'responsibility', 'assess', 'correctness', 'theory', 'software', 'implementation', 'put', 'research', 'exploit', 'result', 'commercially', 'cgmrescode']",5
2134,64629,"A novel hybrid maximum power point tracking (MPPT) concept is demonstrated.<p>A part-stochastic (PSO) part-deterministic (HC, hill climbing) algorithm is employed to facilitate MPPT under partial shading conditions. The relevant paper is available at <a href=""http://www.ped.pwr.edu.pl/pdf-80969-16967?filename=Hybrid%20MPPT%20algorithm%20for.pdf"">http://www.ped.pwr.edu.pl/pdf-80969-16967?filename=Hybrid%20MPPT%20algorithm%20for.pdf</a>. The accompanying model has been developed by my colleague Karol Basinski. The search algorithm is similar to <a href=""https://www.mathworks.com/matlabcentral/fileexchange/64056-hybrid-swarm-based-repetitive-controller-with-adaptive-forgetting-for-a-grid-tie-converter"">https://www.mathworks.com/matlabcentral/fileexchange/64056-hybrid-swarm-based-repetitive-controller-with-adaptive-forgetting-for-a-grid-tie-converter</a>. If you are interested in PV modeling, there is also <a href=""https://www.mathworks.com/matlabcentral/fileexchange/48319-photovoltaic-module-explicit-neural-model"">https://www.mathworks.com/matlabcentral/fileexchange/48319-photovoltaic-module-explicit-neural-model</a> to help you start the adventure.</p>dop,dynamic optimization problem,hill climbing,hybrid,maximum power point tracking,mppt,partial shading,particle swarm optimization,photovoltaic system,photovoltaics,pso,pv,solar energy,solar system,power_conversion_control,power_electronics_control",53,3,2,0,48,novel hybrid maximum power point track mppt concept demonstrate part stochastic pso part deterministic hill climb algorithm employ facilitate mppt partial shading condition relevant paper available http ped pwr edu pdf filename hybrid mppt algorithm pdf accompany develop colleague karol basinski search algorithm similar mathworks com matlabcentral fileexchange hybrid swarm base repetitive controller adaptive forgetting grid tie converter interested modeling also mathworks com matlabcentral fileexchange photovoltaic module explicit neural help start adventure dopdynamic optimization problemhill power point shadingparticle swarm energysolar systempower conversion controlpower electronics control,"['novel', 'hybrid', 'maximum', 'power', 'point', 'track', 'mppt', 'concept', 'demonstrate', 'part', 'stochastic', 'pso', 'part', 'deterministic', 'hill', 'climb', 'algorithm', 'employ', 'facilitate', 'mppt', 'partial', 'shading', 'condition', 'relevant', 'paper', 'available', 'http', 'ped', 'pwr', 'edu', 'pdf', 'filename', 'hybrid', 'mppt', 'algorithm', 'pdf', 'accompany', 'develop', 'colleague', 'karol', 'basinski', 'search', 'algorithm', 'similar', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'hybrid', 'swarm', 'base', 'repetitive', 'controller', 'adaptive', 'forgetting', 'grid', 'tie', 'converter', 'interested', 'modeling', 'also', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'photovoltaic', 'module', 'explicit', 'neural', 'help', 'start', 'adventure', 'dopdynamic', 'optimization', 'problemhill', 'power', 'point', 'shadingparticle', 'swarm', 'energysolar', 'systempower', 'conversion', 'controlpower', 'electronics', 'control']",0
2135,64633,This example analyzes the beat frequency effected induced by sampling close to the Nyquist rate.<p>The purpose of this paper is to show the importance of using both time and frequency-domain analysis when working with sampled data. To make things interesting we sample a sine wave just slightly greater than two times the Nyquist frequency.  Sampling or the discretization of time is what makes DSP unique as compared to analog signal processing. In this paper we investigate the beat effect introduced by sampling and compare it with the conventional beat frequency effect you may have experienced when working with two tone audio signals.</p>signal processing,23,0,1,0,18,example analyze beat frequency effect induced sample close nyquist rate purpose paper show importance time frequency domain analysis work sample data make thing interest sample sine wave slightly great two time nyquist frequency sample discretization time make dsp unique compare analog signal process paper investigate beat effect introduce sample compare conventional beat frequency effect may experience work two tone audio signal signal processing,"['example', 'analyze', 'beat', 'frequency', 'effect', 'induced', 'sample', 'close', 'nyquist', 'rate', 'purpose', 'paper', 'show', 'importance', 'time', 'frequency', 'domain', 'analysis', 'work', 'sample', 'data', 'make', 'thing', 'interest', 'sample', 'sine', 'wave', 'slightly', 'great', 'two', 'time', 'nyquist', 'frequency', 'sample', 'discretization', 'time', 'make', 'dsp', 'unique', 'compare', 'analog', 'signal', 'process', 'paper', 'investigate', 'beat', 'effect', 'introduce', 'sample', 'compare', 'conventional', 'beat', 'frequency', 'effect', 'may', 'experience', 'work', 'two', 'tone', 'audio', 'signal', 'signal', 'processing']",0
2136,64674,"This is a single phase diode rectifier<p>In this video I show how to make the simulation.<a href=""https://www.youtube.com/watch?v=31k3Ty4AH9s"">https://www.youtube.com/watch?v=31k3Ty4AH9s</a></p>diode rectifier,power electronics",10,0,1,0,10,single phase diode rectifierin video show make youtube com watch sdiode rectifierpower electronics,"['single', 'phase', 'diode', 'rectifierin', 'video', 'show', 'make', 'youtube', 'com', 'watch', 'sdiode', 'rectifierpower', 'electronics']",7
2137,64675,"Three phase diode rectifier<p>In this video I show how to make the simulation. <a href=""https://www.youtube.com/watch?v=5RHsFiqlUHY"">https://www.youtube.com/watch?v=5RHsFiqlUHY</a></p>diode rectifier,power electronics",14,0,1,0,17,three phase diode rectifierin video show make youtube com watch rhsfiqluhydiode rectifierpower electronics,"['three', 'phase', 'diode', 'rectifierin', 'video', 'show', 'make', 'youtube', 'com', 'watch', 'rhsfiqluhydiode', 'rectifierpower', 'electronics']",7
2138,64685,"autotuning with pid controller<p>Autotuning with PID controller to tune the response for desired outputs.</p>control design,matlab,optimization,simulation",12,0,1,0,13,autotuning pid pid controller tune response desire output control,"['autotuning', 'pid', 'pid', 'controller', 'tune', 'response', 'desire', 'output', 'control']",3
2139,64694,"LC-Filter<p>LC-Filter circuit integrated with grid</p>matlab,power electronics,simulink",26,0,1,0,43,filterlc filter circuit integrate gridmatlabpower,"['filterlc', 'filter', 'circuit', 'integrate', 'gridmatlabpower']",5
2140,64696,"the formulation about tire<p>magicformulation of tire</p>simulink,vihicle",152,3,2,0,200,formulation,['formulation'],2
2141,64713,"Testing the 3 phase circuit breaker under fault condition<p>Testing the 3 phase circuit breaker under fault condition</p>3 phase cb,digital relay,testing circuit breaker",15,0,1,0,20,test phase circuit breaker fault phase circuit breaker fault condition phase cbdigital relaytesting circuit breaker,"['test', 'phase', 'circuit', 'breaker', 'fault', 'phase', 'circuit', 'breaker', 'fault', 'condition', 'phase', 'cbdigital', 'relaytesting', 'circuit', 'breaker']",3
2142,64714,"Definite Overcurrent Relay based Circuit Breaker<p>Definite Overcurrent Relay based Circuit Breaker</p>overcurrent relay,single phase circuit breaker",20,0,1,0,21,definite overcurrent relay base circuit breakerdefinite overcurrent relay base circuit relaysingle phase circuit breaker,"['definite', 'overcurrent', 'relay', 'base', 'circuit', 'breakerdefinite', 'overcurrent', 'relay', 'base', 'circuit', 'relaysingle', 'phase', 'circuit', 'breaker']",4
2143,64759,Bitwise operators skipped in code generation phase<p>Failed to generate all binary outputs.Bitwise operators are skipped in code generation phase.</p>simulink,22,2,2,0,18,bitwise operator skip code generation phasefailed generate binary output bitwise operator skip code generation phase,"['bitwise', 'operator', 'skip', 'code', 'generation', 'phasefailed', 'generate', 'binary', 'output', 'bitwise', 'operator', 'skip', 'code', 'generation', 'phase']",0
2144,64778,"Simulation of Transmission Line Short Line Model in Simulink<p>Transmission Line Short Line Model developed by Dr Rodney TanVersion 1.0 (Oct 2017)Simulation of Transmission Line Short Line Model based on Textbook ""Power System Analysis"", 2nd Edition by Hadi Saadat, Chapter 5, Example 5.1, page 145-146.Transmission line short line model block is compute using three phase series RL branch based on its line length (km), resistance per unit length (Ohms/km), inductance per unit length (H/km) or Impedance per unit length (R+Li/km) in complex number.</p>short line model,transmission line",33,1,2,0,44,transmission line short line line short line develop rodney tanversion oct transmission line short line base textbook power analysis edition hadi saadat chapter example page transmission line short line block compute three phase series branch base line length resistance per unit length ohms inductance per unit length impedance per unit length complex number short line line,"['transmission', 'line', 'short', 'line', 'line', 'short', 'line', 'develop', 'rodney', 'tanversion', 'oct', 'transmission', 'line', 'short', 'line', 'base', 'textbook', 'power', 'analysis', 'edition', 'hadi', 'saadat', 'chapter', 'example', 'page', 'transmission', 'line', 'short', 'line', 'block', 'compute', 'three', 'phase', 'series', 'branch', 'base', 'line', 'length', 'resistance', 'per', 'unit', 'length', 'ohms', 'inductance', 'per', 'unit', 'length', 'impedance', 'per', 'unit', 'length', 'complex', 'number', 'short', 'line', 'line']",0
2145,64857,"Yet another demonstration for my students.<p>Bipolar vs. unipolar PWMs. Fore more details please see e.g. <a href=""https://www.youtube.com/watch?v=oH51UtRkS9Q"">https://www.youtube.com/watch?v=oH51UtRkS9Q</a>.</p>bipolar modulation,dc drive,hbridge,pwm,unipolar modulation,electric_motor_control,power_conversion_control,power_electronics_control",45,4,2,0,50,yet another demonstration student bipolar unipolar pwms fore detail please see youtube com watch utrks bipolar modulationdc motor controlpower conversion controlpower electronics control,"['yet', 'another', 'demonstration', 'student', 'bipolar', 'unipolar', 'pwms', 'fore', 'detail', 'please', 'see', 'youtube', 'com', 'watch', 'utrks', 'bipolar', 'modulationdc', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",4
2146,64893,"Differential digital protection for three phase transformer<p>Differential digital protection for three phase transformer</p>differential,digital,protection,three phase,transformer",26,0,1,0,42,differential digital protection three phase digital protection three phase,"['differential', 'digital', 'protection', 'three', 'phase', 'digital', 'protection', 'three', 'phase']",3
2147,64902,"Simulink model of a self-parking vehicle<p>This entry contains the Simulink model for the ""Path Planning and Navigation for Autonomous Robots"" video. The demonstration walks through how to simulate a self-parking car with just three components: a path, a vehicle model, and a path following algorithm.Â  The vehicle model is implemented based on the kinematic equations of the bicycle model and the path following algorithm uses the built-in Pure Pursuit block from Robotics System Toolbox.</p>ground robots,path following,robotics",1047,106,8,0,973,self park vehiclethis entry contain path plan navigation autonomous robot video demonstration walk self park car three component path vehicle path follow algorithm vehicle implement base kinematic equation bicycle path follow algorithm build pure pursuit block robotics toolbox ground robotspath,"['self', 'park', 'vehiclethis', 'entry', 'contain', 'path', 'plan', 'navigation', 'autonomous', 'robot', 'video', 'demonstration', 'walk', 'self', 'park', 'car', 'three', 'component', 'path', 'vehicle', 'path', 'follow', 'algorithm', 'vehicle', 'implement', 'base', 'kinematic', 'equation', 'bicycle', 'path', 'follow', 'algorithm', 'build', 'pure', 'pursuit', 'block', 'robotics', 'toolbox', 'ground', 'robotspath']",0
2148,64911,"This model provides the quasi z source inverter with simple boost control<p>This model provides the quasi z source inverter with simple boost control. it can be applied in various application including for grid connectivity.</p>inverter,quasi z source inverter",44,1,2,0,66,provide quasi source inverter simple boost controlthis provide quasi source inverter simple boost control apply various application include grid connectivity source inverter,"['provide', 'quasi', 'source', 'inverter', 'simple', 'boost', 'controlthis', 'provide', 'quasi', 'source', 'inverter', 'simple', 'boost', 'control', 'apply', 'various', 'application', 'include', 'grid', 'connectivity', 'source', 'inverter']",3
2149,64929,"this is a simu of GSM.<p>GSM simu.</p>comunication,gsm",286,27,5,0,292,simu gsm gsm simu comunicationgsm,"['simu', 'gsm', 'gsm', 'simu', 'comunicationgsm']",2
2150,64941,"Includes two model fidelities for simulating a drawworks system for drilling applications.<p>A drawworks is a piece of heavy equipment used in the oil and gas industry for drilling applications. The variable frequency drive (VFD) is used to raise and lower drill string and the top drive during the drilling process. The large inertia of the drill string and top drive lead to challenges in control design to prevent crown-out scenarios that can shutdown a drill site due to damage.This simulation can be used for actuator sizing, simulation-based control design, and even Hardware-in-the-loop (HIL) simulations. Feel free to add and remove blocks as necessary.</p>modeling,simulation,simulink",200,8,3,22,208,include two fidelity drawworks drill application drawworks piece heavy equipment oil gas industry drill application variable frequency drive vfd raise low drill string top drive drilling process large inertia drill string top drive lead challenge control design prevent crown scenario shutdown drill site due damage actuator size base control design even hardware loop hil feel free add remove block necessary,"['include', 'two', 'fidelity', 'drawworks', 'drill', 'application', 'drawworks', 'piece', 'heavy', 'equipment', 'oil', 'gas', 'industry', 'drill', 'application', 'variable', 'frequency', 'drive', 'vfd', 'raise', 'low', 'drill', 'string', 'top', 'drive', 'drilling', 'process', 'large', 'inertia', 'drill', 'string', 'top', 'drive', 'lead', 'challenge', 'control', 'design', 'prevent', 'crown', 'scenario', 'shutdown', 'drill', 'site', 'due', 'damage', 'actuator', 'size', 'base', 'control', 'design', 'even', 'hardware', 'loop', 'hil', 'feel', 'free', 'add', 'remove', 'block', 'necessary']",5
2151,64967,"PhD from National University of Singapore.<p>This model shows a simple hysteresis based controller for DC-AC inverter. The output inverter current follows the reference Sine current. It provides a simple implementation. However, the switching frequency of the converter varies in this control.</p>control design,dcac,hysterisis,power converter,power electronics,simscape,simulink,switch mode power converter,electric_motor_control,power_conversion_control,power_electronics_control",43,2,2,0,44,phd national university singapore show simple hysteresis base controller inverter output inverter current follow reference sine current provide simple implementation however switching frequency converter varies control control converterpower mode power motor controlpower conversion controlpower electronics control,"['phd', 'national', 'university', 'singapore', 'show', 'simple', 'hysteresis', 'base', 'controller', 'inverter', 'output', 'inverter', 'current', 'follow', 'reference', 'sine', 'current', 'provide', 'simple', 'implementation', 'however', 'switching', 'frequency', 'converter', 'varies', 'control', 'control', 'converterpower', 'mode', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2152,64991,"Electric and hybrid electric aircraft models for component sizing and power network evaluation.<p>These example models enable you to use simulation to evaluate electric and hybrid electric aircraft architectures against design criteria such as flight range and flight duration.  The models are parameterized so that you can modify many aspects of the design.  MATLAB code automates parameter sweeps of battery size and payload. Using these models of electric aircraft in Simulink, you can rapidly explore the design space to identify ranges that meet system requirements.  Models include a fixed wing and a VTOL aircraft in separate folders. Please read the README.txt file to get started. See how to model a mechatronic system in Simscape (4 min): <a href=""http://www.mathworks.com/videos/modeling-a-mechatronic-system-68829.html"">http://www.mathworks.com/videos/modeling-a-mechatronic-system-68829.html</a>  Learn about modeling actuation systems, including custom components using Simscape language: <a href=""https://www.mathworks.com/videos/mechatronic-simulation-with-simelectronics-81946.html"">https://www.mathworks.com/videos/mechatronic-simulation-with-simelectronics-81946.html</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>   Learn more about MathWorks Simscape Products: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>emissions,more electric aircraft,physical modeling,battery_system_management,power_electronics_control",5354,534,3,24,5200,electric hybrid electric aircraft component size power network evaluation example enable evaluate electric hybrid electric aircraft architectures design criterion flight range flight duration parameterized modify many aspect design code automates parameter sweeps battery size payload electric aircraft rapidly explore design space identify range meet requirement include fix wing vtol aircraft separate folder please read readme txt file get start see mechatronic simscape min http mathworks com videos mechatronic html learn actuation include custom component simscape language mathworks com videos mechatronic simelectronics html find simscape example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product http mathworks com physical modeling emissionsmore electric modelingbattery managementpower electronics control,"['electric', 'hybrid', 'electric', 'aircraft', 'component', 'size', 'power', 'network', 'evaluation', 'example', 'enable', 'evaluate', 'electric', 'hybrid', 'electric', 'aircraft', 'architectures', 'design', 'criterion', 'flight', 'range', 'flight', 'duration', 'parameterized', 'modify', 'many', 'aspect', 'design', 'code', 'automates', 'parameter', 'sweeps', 'battery', 'size', 'payload', 'electric', 'aircraft', 'rapidly', 'explore', 'design', 'space', 'identify', 'range', 'meet', 'requirement', 'include', 'fix', 'wing', 'vtol', 'aircraft', 'separate', 'folder', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'mechatronic', 'simscape', 'min', 'http', 'mathworks', 'com', 'videos', 'mechatronic', 'html', 'learn', 'actuation', 'include', 'custom', 'component', 'simscape', 'language', 'mathworks', 'com', 'videos', 'mechatronic', 'simelectronics', 'html', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'emissionsmore', 'electric', 'modelingbattery', 'managementpower', 'electronics', 'control']",7
2153,64993,"Speed control of DC motor using Fuzzy Logic Controller<p>Speed control of DC motor using Fuzzy Logic Controller</p>electric_motor_control,power_conversion_control,power_electronics_control,dc motor,fuzzy controller,fuzzy logic,speed dc machine control",33,2,2,0,33,speed control motor fuzzy logic controllerspeed control motor fuzzy logic motor controlpower conversion controlpower electronics controldc motorfuzzy controllerfuzzy logicspeed machine control,"['speed', 'control', 'motor', 'fuzzy', 'logic', 'controllerspeed', 'control', 'motor', 'fuzzy', 'logic', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motorfuzzy', 'controllerfuzzy', 'logicspeed', 'machine', 'control']",1
2154,64994,"Controlling of D.C. Motor using PI and PI-Fuzzy Logic Controller<p>Controlling of D.C. Motor using PI and PI-Fuzzy Logic Controller</p>electric_motor_control,power_conversion_control,power_electronics_control,dc machine speed control,dc motor,fuzzy controller,pi controller,pifuzzy controller",77,5,2,0,79,control motor fuzzy logic motor fuzzy logic motor controlpower conversion controlpower electronics controldc machine speed controldc motorfuzzy controllerpi controller,"['control', 'motor', 'fuzzy', 'logic', 'motor', 'fuzzy', 'logic', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'machine', 'speed', 'controldc', 'motorfuzzy', 'controllerpi', 'controller']",1
2155,65010,"Grid Integration of Hybrid 20kW PV and Wind Power system with Fuzzy Based Energy Management<p>Grid Integration of Hybrid 20kW PV and Wind Power system with Fuzzy Based Energy Management</p>ems,fuzzy,grid,hybrid,mppt,power system,pv,wind",280,12,4,0,375,grid integration hybrid wind power fuzzy base energy managementgrid integration hybrid wind power fuzzy base energy systempvwind,"['grid', 'integration', 'hybrid', 'wind', 'power', 'fuzzy', 'base', 'energy', 'managementgrid', 'integration', 'hybrid', 'wind', 'power', 'fuzzy', 'base', 'energy', 'systempvwind']",3
2156,65091,"A 4-state CSTR process dynamic simulation under 2 cascade control loops with fault simulation<p>This is a Simulink model of a CSTR under closed-loop control, where the process is represented by 4 ODEs (ordinary differential equations) which are mass and energy balances around the system. The CSTR (continuous stirred-tank reactor) carries out a hypothetical first-order exothermic reaction, where the tank temperature (T) is maintained using a cooling jacket. Liquid hold-up (h) is also being maintained by manipulating the tank outlet stream flow rate (F). Process conditions are being perturbed around the nominal operating point by random disturbances on 4 input variables, namely, Fi, Ti, Ci, and Tci.In addition, faults can be simulated for process monitoring research purposes. When no faults are simulated, one can gain process understanding of the system dynamics under normal operation. Abrupt sensor bias faults may be added in each of the 10 measured variables. Incipient faults include sensor bias ramp changes and input disturbance ramp changes. Multiplicative faults include catalyst deactivation and heat transfer fouling by exponential decay. Any combination of these faults may also be simulated together. Additive white noise is present in all output measurements. Note: Since this model is edited in MATLAB R2018a, change the Simulink preferences to run in an older version of MATLAB.References:Liu (2012), ""Fault diagnosis using contribution plots without smearing effect on non-faulty variables,"" Journal of Process Control, Vol. 22, No. 9., 1609-1623.</p>cascade control,control design,cstr,fault detection,process monitoring,process simulation,simulink",249,3,4,0,332,state cstr process dynamic cascade control loop fault cstr close loop control process represent ode ordinary differential equation mass energy balance around cstr continuous stir tank reactor carry hypothetical first order exothermic reaction tank temperature maintain cool jacket liquid hold also maintain manipulate tank outlet stream flow rate process condition perturb around nominal operating point random disturbance input variable namely tci addition fault process monitor research purpose fault one gain process understand dynamic normal operation abrupt sensor bias fault may add measured variable incipient fault include sensor bias ramp change input disturbance ramp change multiplicative fault include catalyst deactivation heat transfer foul exponential decay combination fault may also together additive white noise present output measurement note since edit change preference run old version reference liu fault diagnosis contribution plot without smear effect non faulty variable journal process control vol cascade controlcontrol designcstrfault,"['state', 'cstr', 'process', 'dynamic', 'cascade', 'control', 'loop', 'fault', 'cstr', 'close', 'loop', 'control', 'process', 'represent', 'ode', 'ordinary', 'differential', 'equation', 'mass', 'energy', 'balance', 'around', 'cstr', 'continuous', 'stir', 'tank', 'reactor', 'carry', 'hypothetical', 'first', 'order', 'exothermic', 'reaction', 'tank', 'temperature', 'maintain', 'cool', 'jacket', 'liquid', 'hold', 'also', 'maintain', 'manipulate', 'tank', 'outlet', 'stream', 'flow', 'rate', 'process', 'condition', 'perturb', 'around', 'nominal', 'operating', 'point', 'random', 'disturbance', 'input', 'variable', 'namely', 'tci', 'addition', 'fault', 'process', 'monitor', 'research', 'purpose', 'fault', 'one', 'gain', 'process', 'understand', 'dynamic', 'normal', 'operation', 'abrupt', 'sensor', 'bias', 'fault', 'may', 'add', 'measured', 'variable', 'incipient', 'fault', 'include', 'sensor', 'bias', 'ramp', 'change', 'input', 'disturbance', 'ramp', 'change', 'multiplicative', 'fault', 'include', 'catalyst', 'deactivation', 'heat', 'transfer', 'foul', 'exponential', 'decay', 'combination', 'fault', 'may', 'also', 'together', 'additive', 'white', 'noise', 'present', 'output', 'measurement', 'note', 'since', 'edit', 'change', 'preference', 'run', 'old', 'version', 'reference', 'liu', 'fault', 'diagnosis', 'contribution', 'plot', 'without', 'smear', 'effect', 'non', 'faulty', 'variable', 'journal', 'process', 'control', 'vol', 'cascade', 'controlcontrol', 'designcstrfault']",5
2157,65112,"Real time application filter for first and second derivation<p>This is a real time application filter for derivations of any signal.First and second derivation can be calculated. A fixed time step is needed. It is based on this paper:<a href=""https://pdfs.semanticscholar.org/c189/3fb279972144d573f08a4af9808404c82d1a.pdfThe"">https://pdfs.semanticscholar.org/c189/3fb279972144d573f08a4af9808404c82d1a.pdfThe</a> implementation works without loops.</p>filtering,signal processing",12,2,2,0,10,real time application filter first second derivationthis real time application filter derivation signal first second derivation calculate fixed time step need base paper pdfs semanticscholar org pdfthe implementation work without loop filteringsignal processing,"['real', 'time', 'application', 'filter', 'first', 'second', 'derivationthis', 'real', 'time', 'application', 'filter', 'derivation', 'signal', 'first', 'second', 'derivation', 'calculate', 'fixed', 'time', 'step', 'need', 'base', 'paper', 'pdfs', 'semanticscholar', 'org', 'pdfthe', 'implementation', 'work', 'without', 'loop', 'filteringsignal', 'processing']",7
2158,65113,"System for recuperation power limitation of EVs<p>The maximum recuperation power of an electric vehicle must be limited concerning battery voltage. While the car is braking, battery voltage increases because of the internal resistance of the battery cells. If the battery is full, the maximum recuperation current cannot be used then, because the battery voltage would go over its maximum. Therefore recuperation power has to increase slightly. The used electrical power is integrated. Then it is multiplied with a factor. The outcome is the maximum recuperation power. If the recuperation power is at recuperation current maximum it stops to increase.</p>battery_system_management,power_electronics_control,electronics,modeling",22,0,1,0,24,recuperation power limitation evsthe maximum recuperation power electric vehicle must limit concern battery voltage car brake battery voltage increase internal resistance battery cell battery full maximum recuperation current battery voltage would maximum therefore recuperation power increase slightly electrical power integrate multiplied factor outcome maximum recuperation power recuperation power recuperation current maximum stops increase battery managementpower electronics,"['recuperation', 'power', 'limitation', 'evsthe', 'maximum', 'recuperation', 'power', 'electric', 'vehicle', 'must', 'limit', 'concern', 'battery', 'voltage', 'car', 'brake', 'battery', 'voltage', 'increase', 'internal', 'resistance', 'battery', 'cell', 'battery', 'full', 'maximum', 'recuperation', 'current', 'battery', 'voltage', 'would', 'maximum', 'therefore', 'recuperation', 'power', 'increase', 'slightly', 'electrical', 'power', 'integrate', 'multiplied', 'factor', 'outcome', 'maximum', 'recuperation', 'power', 'recuperation', 'power', 'recuperation', 'current', 'maximum', 'stops', 'increase', 'battery', 'managementpower', 'electronics']",4
2159,65115,"la prÃ©sentation est faite avec Live Editor<p>Lâoutil de base dâun Ã©lectronicien est lâoscilloscope mais les techniques numÃ©riques nÃ©cessitent une approche complÃ©mentaire des signaux dans le domaine frÃ©quentielle.Lâanalyse frÃ©quentielle des signaux se fait Ã  lâaide dâun analyseur de spectre, lâobjet de cet article est de simuler cet outil afin dâen Ã©tudier les principales fonctions.</p>signal processing,live script",56,0,1,0,50,prÃ©sentation est faite avec live editorloutil base dun Ã©lectronicien est loscilloscope mais les technique numÃ©riques nÃ©cessitent une approche complÃ©mentaire des signaux dans domaine frÃ©quentielle lanalyse frÃ©quentielle signaux fait laide dun analyseur spectre lobjet cet article est cet outil afin den Ã©tudier les principales fonctions signal processinglive script,"['prÃ©sentation', 'est', 'faite', 'avec', 'live', 'editorloutil', 'base', 'dun', 'Ã©lectronicien', 'est', 'loscilloscope', 'mais', 'les', 'technique', 'numÃ©riques', 'nÃ©cessitent', 'une', 'approche', 'complÃ©mentaire', 'des', 'signaux', 'dans', 'domaine', 'frÃ©quentielle', 'lanalyse', 'frÃ©quentielle', 'signaux', 'fait', 'laide', 'dun', 'analyseur', 'spectre', 'lobjet', 'cet', 'article', 'est', 'cet', 'outil', 'afin', 'den', 'Ã©tudier', 'les', 'principales', 'fonctions', 'signal', 'processinglive', 'script']",8
2160,65128,"PI Speed Control for DC machine<p>PI Speed Control for DC machine</p>power_conversion_control,power_electronics_control,buck converter,dc machinz,pi controller,speed dc machine control",83,5,2,0,80,speed control machinepi speed control machinepower conversion controlpower electronics controlbuck converterdc machinzpi controllerspeed machine control,"['speed', 'control', 'machinepi', 'speed', 'control', 'machinepower', 'conversion', 'controlpower', 'electronics', 'controlbuck', 'converterdc', 'machinzpi', 'controllerspeed', 'machine', 'control']",1
2161,65218,"Communication between MATLAB/Simulink and Autoware.<p>This is a Simulink model for Autoware,  which includes a rich set of software packages and libraries required for autonomous vehicles.lane_stop node of Autoware can be replaced with this model.Autoware can be downloaded from <a href=""https://github.com/CPFL/Autoware"">https://github.com/CPFL/Autoware</a></p>automotive,autoware,ros",68,0,1,0,64,communication autoware autoware include rich set software package require autonomous vehicle lane stop node autoware replace autoware download github com cpfl,"['communication', 'autoware', 'autoware', 'include', 'rich', 'set', 'software', 'package', 'require', 'autonomous', 'vehicle', 'lane', 'stop', 'node', 'autoware', 'replace', 'autoware', 'download', 'github', 'com', 'cpfl']",5
2162,65226,"Tool for predictive control design in Matlab/Simulink environment.<p>Tool for predictive control design in Matlab/Simulink environment.</p>diophantine equation,generalized minimum variance,predictive control,state space representation,system identification",27,0,1,0,27,tool predictive control design environment tool predictive control design environment diophantine minimum controlstate space identification,"['tool', 'predictive', 'control', 'design', 'environment', 'tool', 'predictive', 'control', 'design', 'environment', 'diophantine', 'minimum', 'controlstate', 'space', 'identification']",4
2163,65252,"Inverting Operational Amplifier<p>Simulink model of inverting op-amp using Simscape foundation library-Electrical.</p>electronics,opamp",12,0,1,0,16,invert operational inverting amp simscape foundation electrical,"['invert', 'operational', 'inverting', 'amp', 'simscape', 'foundation', 'electrical']",0
2164,65291,"The following file has a Simulink Project to measure the hysteresis loop of a transformer.<p>This project measures the voltages over a capacitor and the excitation current and plots the xy visualization to get the hysteresis loop. For better visualization, the block V exports the data to the workspace . If this file helps, give the credits  to the author.Please, don't forget to rate it.</p>hysteresis,saturable transformer,transformer",17,0,1,0,23,follow file project measure hysteresis loop transformer project measure voltage capacitor excitation current plot visualization get hysteresis loop well visualization block export data workspace file help give credit author please forget rate,"['follow', 'file', 'project', 'measure', 'hysteresis', 'loop', 'transformer', 'project', 'measure', 'voltage', 'capacitor', 'excitation', 'current', 'plot', 'visualization', 'get', 'hysteresis', 'loop', 'well', 'visualization', 'block', 'export', 'data', 'workspace', 'file', 'help', 'give', 'credit', 'author', 'please', 'forget', 'rate']",7
2165,65324,"The following file presents the circuit configuration for the Open Circuit test of a transformer.<p>The open circuit test of any transformer is done by leaving the secondary side open and applying nominal voltage to the primary side. This test is useful to find out the shunt parameters of the transformer referred to the primary side. Data can be collected from this test to show the linear relationship between the voltage-current variables and the non linear relationship of voltage and current with respect to power.If you find any mistakes, don't forget to comment. Please, rate the file if it is of any help.</p>open circuit test,shunt impedance,transformer",66,1,2,0,76,follow file present circuit configuration open circuit test transformer open circuit test transformer leave secondary side open apply nominal voltage primary side test useful find shunt parameter transformer refer primary side data collect test show linear relationship voltage current variable non linear relationship voltage current respect power find mistake forget comment please rate file help open circuit testshunt,"['follow', 'file', 'present', 'circuit', 'configuration', 'open', 'circuit', 'test', 'transformer', 'open', 'circuit', 'test', 'transformer', 'leave', 'secondary', 'side', 'open', 'apply', 'nominal', 'voltage', 'primary', 'side', 'test', 'useful', 'find', 'shunt', 'parameter', 'transformer', 'refer', 'primary', 'side', 'data', 'collect', 'test', 'show', 'linear', 'relationship', 'voltage', 'current', 'variable', 'non', 'linear', 'relationship', 'voltage', 'current', 'respect', 'power', 'find', 'mistake', 'forget', 'comment', 'please', 'rate', 'file', 'help', 'open', 'circuit', 'testshunt']",7
2166,65329,"The Simulink and MATLAB files in: ""Building a Packet Data Radio Network"".<p>This article introduces a SimulinkÂ® model that you can use as a basic framework for building multinode wireless communication networks. The model represents a packet data radio network with three transceivers communicating over fading channels. Each radio node consists of a physical (PHY) layer and a selected medium access control (MAC) layer. Read the white paper here. <a href=""https://www.mathworks.com/company/newsletters/articles/building-a-packet-data-radio-network-in-simulink.html"">https://www.mathworks.com/company/newsletters/articles/building-a-packet-data-radio-network-in-simulink.html</a></p>communications,simulink,wireless",59,7,2,3,59,file build packet data radio network article introduces basic framework building multinode wireless communication network represent packet data radio network three transceivers communicate fading channel radio node consist physical phy layer select medium access control mac layer read white paper mathworks com company newsletter article build packet data radio network,"['file', 'build', 'packet', 'data', 'radio', 'network', 'article', 'introduces', 'basic', 'framework', 'building', 'multinode', 'wireless', 'communication', 'network', 'represent', 'packet', 'data', 'radio', 'network', 'three', 'transceivers', 'communicate', 'fading', 'channel', 'radio', 'node', 'consist', 'physical', 'phy', 'layer', 'select', 'medium', 'access', 'control', 'mac', 'layer', 'read', 'white', 'paper', 'mathworks', 'com', 'company', 'newsletter', 'article', 'build', 'packet', 'data', 'radio', 'network']",0
2167,65335,It is based on a model that was studied in a paper which has the purpose of simulating the PIN diode<p>Thermal an electrical simulation of a PIN diode</p>signal processing,46,0,1,0,62,base studied paper purpose pin diodethermal electrical pin diodesignal processing,"['base', 'studied', 'paper', 'purpose', 'pin', 'diodethermal', 'electrical', 'pin', 'diodesignal', 'processing']",5
2168,65341,"Control Model of a three axis robotic arm.<p>This Simulink model is used to control a robotic arm with three degrees of freedom. To achieve this, three controllers were designed; one for each of the motors. This model shows how the basic control loop is implemented in Simulink. This contains the implementation of reference signals to the loop, measuring the output angles of the motor, implentation of the controllers and how these commands are send to the hardware of the robotic arm.</p>electric_motor_control,power_electronics_control,control design,robotic arm,robotics",106,11,4,0,98,control three axis robotic arm control robotic arm three degree freedom achieve three controller design one motor show basic control loop implement contains implementation reference signal loop measure output angle motor implentation controller command send hardware robotic arm electric motor controlpower electronics controlcontrol designrobotic armrobotics,"['control', 'three', 'axis', 'robotic', 'arm', 'control', 'robotic', 'arm', 'three', 'degree', 'freedom', 'achieve', 'three', 'controller', 'design', 'one', 'motor', 'show', 'basic', 'control', 'loop', 'implement', 'contains', 'implementation', 'reference', 'signal', 'loop', 'measure', 'output', 'angle', 'motor', 'implentation', 'controller', 'command', 'send', 'hardware', 'robotic', 'arm', 'electric', 'motor', 'controlpower', 'electronics', 'controlcontrol', 'designrobotic', 'armrobotics']",3
2169,65351,"Arduino Simulink photovoltaic<p>Using simulink to prove control strategies on real hardware through the arduino platform for maximum power extraction on microgrids for educational use.Used forDC/DC converter an solal panel.</p>power_conversion_control,power_electronics_control,simulinkchallenge2017",45,1,2,0,65,arduino prove control strategy real hardware arduino platform maximum power extraction microgrids educational fordc converter solal panel power conversion controlpower electronics,"['arduino', 'prove', 'control', 'strategy', 'real', 'hardware', 'arduino', 'platform', 'maximum', 'power', 'extraction', 'microgrids', 'educational', 'fordc', 'converter', 'solal', 'panel', 'power', 'conversion', 'controlpower', 'electronics']",3
2170,65376,"These controls were designed taking into account the analysis of the behavior of the models.<p>This program simulates the PID control of the angular position and speed position for the motors of an equtorial mount telescope.</p>electric_motor_control,power_electronics_control,simulink",35,4,2,0,34,control design take account analysis behavior program pid control angular position speed position motor equtorial mount telescope electric motor controlpower electronics,"['control', 'design', 'take', 'account', 'analysis', 'behavior', 'program', 'pid', 'control', 'angular', 'position', 'speed', 'position', 'motor', 'equtorial', 'mount', 'telescope', 'electric', 'motor', 'controlpower', 'electronics']",3
2171,65382,"The following file has a Simulink Project to perform the short circuit test of a transformer.<p>The short circuit test of any transformer is done by short-circuiting the secondary side and applying nominal current to the primary side. This test is useful to find out the series parameters of the transformer referred to the primary side. Data can be collected from this test to show the linear relationship between the voltage-current variables and the non linear relationship of voltage and current with respect to power. If you find any mistakes, don't forget to comment. Please, rate the file if it is of any help.</p>series impedance,short circuit test,transformer",60,1,2,0,69,follow file project perform short circuit test transformer short circuit test transformer short circuit secondary side apply nominal current primary side test useful find series parameter transformer refer primary side data collect test show linear relationship voltage current variable non linear relationship voltage current respect power find mistake forget comment please rate file help series impedanceshort circuit testtransformer,"['follow', 'file', 'project', 'perform', 'short', 'circuit', 'test', 'transformer', 'short', 'circuit', 'test', 'transformer', 'short', 'circuit', 'secondary', 'side', 'apply', 'nominal', 'current', 'primary', 'side', 'test', 'useful', 'find', 'series', 'parameter', 'transformer', 'refer', 'primary', 'side', 'data', 'collect', 'test', 'show', 'linear', 'relationship', 'voltage', 'current', 'variable', 'non', 'linear', 'relationship', 'voltage', 'current', 'respect', 'power', 'find', 'mistake', 'forget', 'comment', 'please', 'rate', 'file', 'help', 'series', 'impedanceshort', 'circuit', 'testtransformer']",7
2172,65383,"The following file presents how to do the polarity test on a open circuit transformer.<p>The following file presents how to do the polarity test on a open circuit transformer using only the voltmeters.Please, don't forget to rate it if it is of any help .</p>polarity test,transformer",13,0,1,0,20,follow file present polarity test open circuit transformer follow file present polarity test open circuit transformer voltmeter please forget rate help polarity testtransformer,"['follow', 'file', 'present', 'polarity', 'test', 'open', 'circuit', 'transformer', 'follow', 'file', 'present', 'polarity', 'test', 'open', 'circuit', 'transformer', 'voltmeter', 'please', 'forget', 'rate', 'help', 'polarity', 'testtransformer']",7
2173,65384,"The following file presents the circuit connection to forma a additive autotransformer.<p>The following file presents the circuit connection to forma a additive autotransformer. Also, its efficiency and voltage regulation curves are plotted and inserted for 5 different values of load.Don't forget to rate the file if it's of any help.</p>autotransformer,efficiency,polarity,voltage regulation",52,6,2,0,58,follow file present circuit connection forma additive autotransformer follow file present circuit connection forma additive autotransformer also efficiency voltage regulation curve plot inserted different value load forget rate file help regulation,"['follow', 'file', 'present', 'circuit', 'connection', 'forma', 'additive', 'autotransformer', 'follow', 'file', 'present', 'circuit', 'connection', 'forma', 'additive', 'autotransformer', 'also', 'efficiency', 'voltage', 'regulation', 'curve', 'plot', 'inserted', 'different', 'value', 'load', 'forget', 'rate', 'file', 'help', 'regulation']",0
2174,65385,"SimPowerSystems model of the IEEE 9-bus system, known as the Western System Coordinated Council<p>WSCC system is widely used for transient stability study. The synchronous machines are equipped withvoltage regulators combined with an exciter and comprehensive model of steam turbine and governors. The foundation case data are presented in:  J. Chow, G. Rogers, and K. Cheung, âPower system toolbox,â CherryTree Scientific Software, vol. 48, p. 53, 2000.If you are using this benchmark in your research or teaching, please include explicit mention of the reference paper: ----------Reference:  <a href=""https://ieeexplore.ieee.org/document/8447645/A"">https://ieeexplore.ieee.org/document/8447645/A</a>. Delavari, I. Kamwa, P. Brunelle, ""Simscape Power Systems Benchmarks for Educationand Research in Power Grid Dynamics and Control"",  2018 IEEE Canadian Conference on Electrical &amp; Computer Engineering (CCECE).</p>ieee 9 bus,wscc 9 bus,paper,simulation",235,10,3,0,289,simpowersystems iee bus know western coordinate councilwscc widely transient stability study synchronous machine equip withvoltage regulator combine exciter comprehensive steam turbine governor foundation case data present chow rogers cheung power toolbox cherrytree scientific software vol benchmark research teach please include explicit mention reference paper reference ieexplore iee org document delavari kamwa brunelle simscape power benchmarks educationand research power grid dynamic control iee canadian conference electrical amp computer engineering ccece iee buswscc,"['simpowersystems', 'iee', 'bus', 'know', 'western', 'coordinate', 'councilwscc', 'widely', 'transient', 'stability', 'study', 'synchronous', 'machine', 'equip', 'withvoltage', 'regulator', 'combine', 'exciter', 'comprehensive', 'steam', 'turbine', 'governor', 'foundation', 'case', 'data', 'present', 'chow', 'rogers', 'cheung', 'power', 'toolbox', 'cherrytree', 'scientific', 'software', 'vol', 'benchmark', 'research', 'teach', 'please', 'include', 'explicit', 'mention', 'reference', 'paper', 'reference', 'ieexplore', 'iee', 'org', 'document', 'delavari', 'kamwa', 'brunelle', 'simscape', 'power', 'benchmarks', 'educationand', 'research', 'power', 'grid', 'dynamic', 'control', 'iee', 'canadian', 'conference', 'electrical', 'amp', 'computer', 'engineering', 'ccece', 'iee', 'buswscc']",5
2175,65386,"SimPowerSystems model of the 41-bus Western North American Power Grid<p>The Western North American Power Grid  has been employed in many publications as aresearch demonstration model for stability limited issues. This power system includes major generation buses 17 thru 24, while loads are distributed in load buses 31 thru 41. Each generation bus has two generators connected to it. Generators 9, 10, 14, and 16 are driven by hydro turbines, while generators 11, 12, 13, and 15 are driven by faster acting steam turbines. All generators are equipped with fast-acting voltage regulators and PSS units.If you are using this benchmark in your research or teaching, please include explicit mention of the reference paper: -------Reference: <a href=""https://ieeexplore.ieee.org/document/8447645/"">https://ieeexplore.ieee.org/document/8447645/</a>  A. Delavari, I. Kamwa, P. Brunelle, ""Simscape Power Systems Benchmarks for Education and Research in Power Grid Dynamics and Control"", 2018 IEEE Canadian Conference on Electrical &amp; Computer Engineering (CCECE).</p>paper,simulation",902,33,3,0,1303,simpowersystems bus western north american power gridthe western north american power grid employed many publication aresearch demonstration stability limit issue power include major generation bus thru load distribute load bus thru generation bus two generator connect generator driven hydro turbine generator drive fast act steam turbine generator equip fast acting voltage regulator pss unit benchmark research teach please include explicit mention reference paper reference ieexplore iee org document delavari kamwa brunelle simscape power benchmarks education research power grid dynamic control iee canadian conference electrical amp computer engineering ccece,"['simpowersystems', 'bus', 'western', 'north', 'american', 'power', 'gridthe', 'western', 'north', 'american', 'power', 'grid', 'employed', 'many', 'publication', 'aresearch', 'demonstration', 'stability', 'limit', 'issue', 'power', 'include', 'major', 'generation', 'bus', 'thru', 'load', 'distribute', 'load', 'bus', 'thru', 'generation', 'bus', 'two', 'generator', 'connect', 'generator', 'driven', 'hydro', 'turbine', 'generator', 'drive', 'fast', 'act', 'steam', 'turbine', 'generator', 'equip', 'fast', 'acting', 'voltage', 'regulator', 'pss', 'unit', 'benchmark', 'research', 'teach', 'please', 'include', 'explicit', 'mention', 'reference', 'paper', 'reference', 'ieexplore', 'iee', 'org', 'document', 'delavari', 'kamwa', 'brunelle', 'simscape', 'power', 'benchmarks', 'education', 'research', 'power', 'grid', 'dynamic', 'control', 'iee', 'canadian', 'conference', 'electrical', 'amp', 'computer', 'engineering', 'ccece']",4
2176,65390,"une progression sur 6 exercices destinÃ©e aux Ã©lÃ¨ves des CollÃ¨ges et des lycÃ©es<p>Les exercices proposÃ©s ont pour objectif de dÃ©couvrir la programmation dâune cible Ã  lâaide de StateFlow et de la Toolbox Â«Simulink Coder support package for BBC  Micro:Bit Â» ainsi que la communication avec lâordinateur hÃ´te.</p>simulink,stateflow,live script",130,5,2,0,123,une progression sur exercices destinÃ©e aux Ã©lÃ¨ves collÃ¨ges lycÃ©esles exercices proposÃ©s ont pour objectif dÃ©couvrir programmation dune cible laide stateflow toolbox coder support package bbc micro bit ainsi que communication avec lordinateur hÃ´te script,"['une', 'progression', 'sur', 'exercices', 'destinÃ©e', 'aux', 'Ã©lÃ¨ves', 'collÃ¨ges', 'lycÃ©esles', 'exercices', 'proposÃ©s', 'ont', 'pour', 'objectif', 'dÃ©couvrir', 'programmation', 'dune', 'cible', 'laide', 'stateflow', 'toolbox', 'coder', 'support', 'package', 'bbc', 'micro', 'bit', 'ainsi', 'que', 'communication', 'avec', 'lordinateur', 'hÃ´te', 'script']",8
2177,65396,"Battery Charge/Discharge under SOC mode control<p>Battery Charge/Discharge under SOC mode control</p>battery_system_management,power_electronics_control,power electronics,simulation",23,0,1,0,30,battery charge discharge soc mode controlbattery charge discharge soc mode controlbattery managementpower electronics controlpower,"['battery', 'charge', 'discharge', 'soc', 'mode', 'controlbattery', 'charge', 'discharge', 'soc', 'mode', 'controlbattery', 'managementpower', 'electronics', 'controlpower']",3
2178,65402,"Yet another demonstration for my students.<p>Very similar to my two previous submissions. This is just to provide one more demonstration for my students. It is assumed that the step response of a system is known along with the parametrized transfer function. Parameters then are identified using PSO and an .slx model (case one) or a parametrized time response (second case). The second approach occurs to be much faster.</p>identification,ilaplace,parameter identification,particle swarm optimization,pso,step response,system identification",19,0,1,0,18,yet another demonstration student similar two previous submission provide one demonstration student assume step response know along parametrized transfer function parameter identify pso slx case one parametrized time response second case second approach occur much faster swarm responsesystem identification,"['yet', 'another', 'demonstration', 'student', 'similar', 'two', 'previous', 'submission', 'provide', 'one', 'demonstration', 'student', 'assume', 'step', 'response', 'know', 'along', 'parametrized', 'transfer', 'function', 'parameter', 'identify', 'pso', 'slx', 'case', 'one', 'parametrized', 'time', 'response', 'second', 'case', 'second', 'approach', 'occur', 'much', 'faster', 'swarm', 'responsesystem', 'identification']",0
2179,65410,"This file presents the voltage regulation of a transformer with a purely resistive load.<p>This file presents the voltage regulation of a transformer with a resistive load. Five load values are simulated and the curve plotted. Rate it if you like it.</p>efficiency,transformer,voltage regulation",83,8,2,0,84,file present voltage regulation transformer purely resistive load file present voltage regulation transformer resistive load five load value curve plotted rate like regulation,"['file', 'present', 'voltage', 'regulation', 'transformer', 'purely', 'resistive', 'load', 'file', 'present', 'voltage', 'regulation', 'transformer', 'resistive', 'load', 'five', 'load', 'value', 'curve', 'plotted', 'rate', 'like', 'regulation']",4
2180,65427,"solar mppt by fuzzy loic<p>this file includes solar and wind model and use fuzzy logic for mppt in solar</p>power_conversion_control,power_electronics_control,optimization",191,9,4,0,214,solar mppt fuzzy loicthis file include solar wind fuzzy logic mppt solarpower conversion controlpower electronics,"['solar', 'mppt', 'fuzzy', 'loicthis', 'file', 'include', 'solar', 'wind', 'fuzzy', 'logic', 'mppt', 'solarpower', 'conversion', 'controlpower', 'electronics']",3
2181,65428,"pid for speed control of dc motor<p>pid control used for dc motor speed control with feedback system</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",24,1,2,0,29,pid speed control motorpid control motor speed control feedback systemelectric motor controlpower conversion controlpower electronics,"['pid', 'speed', 'control', 'motorpid', 'control', 'motor', 'speed', 'control', 'feedback', 'systemelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
2182,65467,"This file makes a comparison between two different three-phase transformers<p>This file makes a comparison between two different three-phase transformers. If you like it, don't forget to rate it.</p>threephase transformer,transformer,transformer bank,transformer unit",29,0,1,0,46,file make comparison two different three phase file make comparison two different three phase transformer like forget rate threephase banktransformer unit,"['file', 'make', 'comparison', 'two', 'different', 'three', 'phase', 'file', 'make', 'comparison', 'two', 'different', 'three', 'phase', 'transformer', 'like', 'forget', 'rate', 'threephase', 'banktransformer', 'unit']",7
2183,65469,"Quadcopter Simulator<p>*Run Crazyflie_Param before the simulink file. This uses Crazyflie parameters to simulate a quadcopter. Attitude controller uses nested PID controller that comes with the Crazyflie firmware. Input is PWM where 65535 is the maximum value. (16 bit which is same as Crazyflie Firmware)PWM to thrust and propeller rotation mapping is from Crazyflie System Identification paper. (System Identication ofthe Crazyflie 2.0 Nano Quadrocopter by Julian Forster) Position to attitude tracker uses a simple PID controller to map x,y error to roll, pitch reference. I made this for class project. It is simple, does not require any toolboxes (which is why I made it), and organized in a way that is easy to follow. I hope this helps with whatever project you guys are working with!</p>electric_motor_control,power_conversion_control,power_electronics_control,crazyflie,drone,quadcopter,simmechanics,simulation,simulink",324,22,5,0,395,quadcopter run crazyflie param file crazyflie parameter quadcopter attitude controller nest pid controller come crazyflie firmware input pwm maximum value bit crazyflie firmware pwm thrust propeller rotation map crazyflie identification paper identication ofthe crazyflie nano quadrocopter julian forster position attitude tracker simple pid controller map error roll pitch reference make class project simple require toolbox make organize way easy follow hope help whatever project guy work electric motor controlpower conversion controlpower electronics,"['quadcopter', 'run', 'crazyflie', 'param', 'file', 'crazyflie', 'parameter', 'quadcopter', 'attitude', 'controller', 'nest', 'pid', 'controller', 'come', 'crazyflie', 'firmware', 'input', 'pwm', 'maximum', 'value', 'bit', 'crazyflie', 'firmware', 'pwm', 'thrust', 'propeller', 'rotation', 'map', 'crazyflie', 'identification', 'paper', 'identication', 'ofthe', 'crazyflie', 'nano', 'quadrocopter', 'julian', 'forster', 'position', 'attitude', 'tracker', 'simple', 'pid', 'controller', 'map', 'error', 'roll', 'pitch', 'reference', 'make', 'class', 'project', 'simple', 'require', 'toolbox', 'make', 'organize', 'way', 'easy', 'follow', 'hope', 'help', 'whatever', 'project', 'guy', 'work', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",4
2184,65493,"A la linear quadratic regulator.<p>Cons: finite time in the cost function.Pros: optimized for a nonlinear plant, under specific reference and disturbance.</p>electric drive,full state feedback controller,linear quadratic regulator,lqr,motion control,nonlinear plant,optimal control,particle swarm optimization,pso,speed control",49,1,2,0,64,linear quadratic regulator con finite time cost function pro optimize nonlinear plant specific reference disturbance electric drivefull state feedback quadratic plantoptimal controlparticle swarm control,"['linear', 'quadratic', 'regulator', 'con', 'finite', 'time', 'cost', 'function', 'pro', 'optimize', 'nonlinear', 'plant', 'specific', 'reference', 'disturbance', 'electric', 'drivefull', 'state', 'feedback', 'quadratic', 'plantoptimal', 'controlparticle', 'swarm', 'control']",5
2185,65512,"Full controlled ac voltage controller using scr.<p>It is a simulation model of full controlled ac voltage controller using scr with R-L load.</p>electric_motor_control,power_conversion_control,power_electronics_control,power electronics",12,0,1,0,13,full control voltage controller scr full control voltage controller scr load electric motor controlpower conversion controlpower electronics controlpower electronics,"['full', 'control', 'voltage', 'controller', 'scr', 'full', 'control', 'voltage', 'controller', 'scr', 'load', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlpower', 'electronics']",6
2186,65513,"This Simulink model perform Load Flow Analysis for a 5-Bus System<p>5-Bus System Simulink Model Developed by Rodney TanVersion 1.0 (Dec 2017)Load Flow Analysis 5-Bus Model based on Textbook ""Power System Analysis"", 2nd Edition by Hadi Saadat, Chapter 7, Example 7.9, page 295-296.</p>5bus model,5bus system,load flow analysis,load flow bus,power flow analysis,power system analysis",90,7,2,0,184,perform load flow analysis bus bus develop rodney tanversion dec load flow analysis bus base textbook power analysis edition hadi saadat chapter example page bus bus systemload flow analysisload flow buspower flow analysispower analysis,"['perform', 'load', 'flow', 'analysis', 'bus', 'bus', 'develop', 'rodney', 'tanversion', 'dec', 'load', 'flow', 'analysis', 'bus', 'base', 'textbook', 'power', 'analysis', 'edition', 'hadi', 'saadat', 'chapter', 'example', 'page', 'bus', 'bus', 'systemload', 'flow', 'analysisload', 'flow', 'buspower', 'flow', 'analysispower', 'analysis']",0
2187,65524,"This is a simulation for 6 phase split phase induction motor<p>This is a simulation for 6 phase split phase induction motor.</p>electric_motor_control,power_electronics_control,simulation,simulink",79,2,2,0,78,phase split phase induction motorthis phase split phase induction motor electric motor controlpower electronics,"['phase', 'split', 'phase', 'induction', 'motorthis', 'phase', 'split', 'phase', 'induction', 'motor', 'electric', 'motor', 'controlpower', 'electronics']",6
2188,65534,"ModÃ©lisation de la partie mÃ©canique du cric electrique.<p>La liaison pilotÃ©e en entrÃ©e n'est pas la rotation de la vis mais la translation de l'Ã©crou.L'interfaÃ§age avec un modÃ¨le simscape et le bloc leadscrew (rotation-&gt;translation) permettra de piloter cet Ã©crou de maniÃ¨re plus judicieuse.</p>animation,mechanical modeling",208,24,2,0,136,modÃ©lisation partie mÃ©canique cric electrique liaison pilotÃ©e entrÃ©e est rotation mais translation Ã©crou interfaÃ§age avec modÃ¨le simscape bloc leadscrew rotation translation permettra piloter cet Ã©crou maniÃ¨re plus judicieuse modeling,"['modÃ©lisation', 'partie', 'mÃ©canique', 'cric', 'electrique', 'liaison', 'pilotÃ©e', 'entrÃ©e', 'est', 'rotation', 'mais', 'translation', 'Ã©crou', 'interfaÃ§age', 'avec', 'modÃ¨le', 'simscape', 'bloc', 'leadscrew', 'rotation', 'translation', 'permettra', 'piloter', 'cet', 'Ã©crou', 'maniÃ¨re', 'plus', 'judicieuse', 'modeling']",8
2189,65535,"ModÃ©lisation de la partie mÃ©canique uniquement<p>Seul le mÃ©canisme de transformation de mouvement est pilotÃ©. LÃ  encore le systÃ¨me de rÃ©duction par roues dentÃ©es pourra se modÃ©liser aisÃ©ment avec Simscape.</p>animation,mechanical modeling",160,24,3,0,116,modÃ©lisation partie mÃ©canique uniquementseul mÃ©canisme transformation mouvement est pilotÃ© encore systÃ¨me rÃ©duction par roue dentÃ©es pourra modÃ©liser aisÃ©ment avec simscape,"['modÃ©lisation', 'partie', 'mÃ©canique', 'uniquementseul', 'mÃ©canisme', 'transformation', 'mouvement', 'est', 'pilotÃ©', 'encore', 'systÃ¨me', 'rÃ©duction', 'par', 'roue', 'dentÃ©es', 'pourra', 'modÃ©liser', 'aisÃ©ment', 'avec', 'simscape']",8
2190,65540,ModÃ©lisation multiphysique du distributeur de savon<p>La partie simMechanics n'est prÃ©sente que pour modÃ©liser le systÃ¨me bielle/manivelle. Ancien projet interdisciplinaire de Terminale Science de l'IngÃ©nieur.</p>mechanical modeling,89,9,3,0,77,modÃ©lisation multiphysique distributeur savonla partie simmechanics est prÃ©sente que pour modÃ©liser systÃ¨me bielle manivelle ancien projet terminale science ingÃ©nieur mechanical modeling,"['modÃ©lisation', 'multiphysique', 'distributeur', 'savonla', 'partie', 'simmechanics', 'est', 'prÃ©sente', 'que', 'pour', 'modÃ©liser', 'systÃ¨me', 'bielle', 'manivelle', 'ancien', 'projet', 'terminale', 'science', 'ingÃ©nieur', 'mechanical', 'modeling']",8
2191,65542,"ModÃ©lisation de la partie mÃ©canique du sÃ©cateur.<p>Il est Ã  noter qu'avec un interfaÃ§age et un choix judicieux de composants Simscape (Batterie, moteur, rÃ©ducteur...) la biellette Ã  un comportement nettement moins erratique (voir la vidÃ©o en PJ).Le modÃ¨le complet ne peut Ãªtre donnÃ© puisqu'il fait actuellement l'objet d'un projet interdisciplinaire en Sciences de l'IngÃ©nieur.</p>animation,mechanical modeling",120,16,2,0,74,modÃ©lisation partie mÃ©canique sÃ©cateur est noter avec interfaÃ§age choix judicieux composants simscape batterie moteur rÃ©ducteur biellette comportement nettement moins erratique voir vidÃ©o modÃ¨le complet peut Ãªtre donnÃ© puisqu fait actuellement objet projet science ingÃ©nieur,"['modÃ©lisation', 'partie', 'mÃ©canique', 'sÃ©cateur', 'est', 'noter', 'avec', 'interfaÃ§age', 'choix', 'judicieux', 'composants', 'simscape', 'batterie', 'moteur', 'rÃ©ducteur', 'biellette', 'comportement', 'nettement', 'moins', 'erratique', 'voir', 'vidÃ©o', 'modÃ¨le', 'complet', 'peut', 'Ãªtre', 'donnÃ©', 'puisqu', 'fait', 'actuellement', 'objet', 'projet', 'science', 'ingÃ©nieur']",8
2192,65604,the superconducting magnetic energy storage (SMES)<p>the superconducting magneticenergy storage (SMES)</p>simulation,33,2,2,0,39,superconducting magnetic energy storage smes superconducting magneticenergy storage smes,"['superconducting', 'magnetic', 'energy', 'storage', 'smes', 'superconducting', 'magneticenergy', 'storage', 'smes']",8
2193,65605,"Predictive maintenance algorithm developed using digital twin of hydraulic pump modeled in Simscape<p>This example models a triplex pump with a predictive maintenance algorithm that can detect which parts of the pump are failing simply by monitoring the pump output pressure.   The Simscape model of the pump can be configured to model degraded behavior due to seal leakage, blocked inlets, bearing wear, and broken motor windings. MATLAB code shows how to accelerate testing by reusing results from previous simulations.  The model can be used to generate training data for the machine learning algorithm and can be used to test the deployed algorithm.  MATLAB Live Scripts show you how to develop the algorithm. Mechanical, hydraulic, and electrical parameters are all defined in MATLAB which lets you easily resize the pump. The pump housing is imported from CAD. Please read the README.txt file to get started. See how to model a fluid actuation system in Simscape (7 min): <a href=""https://www.mathworks.com/videos/modeling-a-hydraulic-actuation-system-68833.html"">https://www.mathworks.com/videos/modeling-a-hydraulic-actuation-system-68833.html</a> To see an overview of this multibody modeling in Simscape Multibody, watch this video (1.5 min): <a href=""https://www.mathworks.com/videos/simmechanics-introduction-69809.html"">https://www.mathworks.com/videos/simmechanics-introduction-69809.html</a> Read the e-book âPredictive Maintenance with MATLABâ<a href=""https://www.mathworks.com/content/dam/mathworks/tag-team/Objects/p/93060v00_Predictive_Maintenance_e-book_v04.pdf"">https://www.mathworks.com/content/dam/mathworks/tag-team/Objects/p/93060v00_Predictive_Maintenance_e-book_v04.pdf</a> Find other Simscape examples by searching posts for the keyword ""physical modeling"" <a href=""http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22"">http://www.mathworks.com/matlabcentral/fileexchange/?term=%22physical+modeling%22</a>  Learn more about MathWorks Simscape Products: <a href=""http://www.mathworks.com/physical-modeling/"">http://www.mathworks.com/physical-modeling/</a></p>machine learning,physical modeling,predictive maintenance,simmechanics2g,triplex pump,live script,electric_motor_control,power_electronics_control",368,50,6,4,299,predictive maintenance algorithm develop digital twin hydraulic pump simscapethis example triplex pump predictive maintenance algorithm detect part pump fail simply monitor pump output pressure simscape pump configure degraded behavior due seal leakage block inlet bear wear broken motor winding code show accelerate test reuse result previous used generate training data machine learning algorithm test deploy algorithm live script show develop algorithm mechanical hydraulic electrical parameter define let easily resize pump pump housing import cad please read readme txt file get start see fluid actuation simscape min mathworks com videos hydraulic actuation html see overview multibody simscape multibody watch video min mathworks com videos simmechanics introduction html read book predictive maintenance mathworks com content dam mathworks tag team object predictive maintenance book pdf find simscape example search post keyword physical modeling http mathworks com matlabcentral fileexchange term physical modeling learn mathworks simscape product http mathworks com physical modeling machine gtriplex pumplive scriptelectric motor controlpower electronics control,"['predictive', 'maintenance', 'algorithm', 'develop', 'digital', 'twin', 'hydraulic', 'pump', 'simscapethis', 'example', 'triplex', 'pump', 'predictive', 'maintenance', 'algorithm', 'detect', 'part', 'pump', 'fail', 'simply', 'monitor', 'pump', 'output', 'pressure', 'simscape', 'pump', 'configure', 'degraded', 'behavior', 'due', 'seal', 'leakage', 'block', 'inlet', 'bear', 'wear', 'broken', 'motor', 'winding', 'code', 'show', 'accelerate', 'test', 'reuse', 'result', 'previous', 'used', 'generate', 'training', 'data', 'machine', 'learning', 'algorithm', 'test', 'deploy', 'algorithm', 'live', 'script', 'show', 'develop', 'algorithm', 'mechanical', 'hydraulic', 'electrical', 'parameter', 'define', 'let', 'easily', 'resize', 'pump', 'pump', 'housing', 'import', 'cad', 'please', 'read', 'readme', 'txt', 'file', 'get', 'start', 'see', 'fluid', 'actuation', 'simscape', 'min', 'mathworks', 'com', 'videos', 'hydraulic', 'actuation', 'html', 'see', 'overview', 'multibody', 'simscape', 'multibody', 'watch', 'video', 'min', 'mathworks', 'com', 'videos', 'simmechanics', 'introduction', 'html', 'read', 'book', 'predictive', 'maintenance', 'mathworks', 'com', 'content', 'dam', 'mathworks', 'tag', 'team', 'object', 'predictive', 'maintenance', 'book', 'pdf', 'find', 'simscape', 'example', 'search', 'post', 'keyword', 'physical', 'modeling', 'http', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'term', 'physical', 'modeling', 'learn', 'mathworks', 'simscape', 'product', 'http', 'mathworks', 'com', 'physical', 'modeling', 'machine', 'gtriplex', 'pumplive', 'scriptelectric', 'motor', 'controlpower', 'electronics', 'control']",7
2194,65615,"A simulation of a PSFB converter with ZVS switching<p>PSFB Converter:I have simulated a PSFB converter with soft switching (ZVS).Switching Frequency (fs) = 100KHz. Each leg is operated at a fixed frequency and a duty cycle of 50% (48% with dead band included). The deadband for both legs are 120nsthe phase shift between the legs is 0.2*Ts (can be changed by changing the factor 0.2 in P3 and P4 generator blocks)Before starting the simulation, the following variables need to be assigned:C = 1e-11;C_r = 0.001;A = 10;The output voltage is D*Vin where D is the duty of the primary voltage of the transformer (1:1 transformer is used). Leakage inductance and magnetizing inductance are chosen as to satisfy the soft switching conditions. Note: ZVS is not achieved at small loads but the Lr and Cr can be altered to get the desired soft switching conditions.</p>dcdc converter,power electronics,psfb,soft switching,zvs",110,4,2,0,149,psfb converter zvs switchingpsfb converter psfb converter soft switch zvs switch frequency khz leg operate fixed frequency duty cycle dead band include deadband leg nsthe phase shift legs change change factor generator block start follow variable need assign output voltage vin duty primary voltage transformer transformer leakage inductance magnetize inductance choose satisfy soft switch condition note zvs achieve small load alter get desired soft switch condition dcdc converterpower switchingzvs,"['psfb', 'converter', 'zvs', 'switchingpsfb', 'converter', 'psfb', 'converter', 'soft', 'switch', 'zvs', 'switch', 'frequency', 'khz', 'leg', 'operate', 'fixed', 'frequency', 'duty', 'cycle', 'dead', 'band', 'include', 'deadband', 'leg', 'nsthe', 'phase', 'shift', 'legs', 'change', 'change', 'factor', 'generator', 'block', 'start', 'follow', 'variable', 'need', 'assign', 'output', 'voltage', 'vin', 'duty', 'primary', 'voltage', 'transformer', 'transformer', 'leakage', 'inductance', 'magnetize', 'inductance', 'choose', 'satisfy', 'soft', 'switch', 'condition', 'note', 'zvs', 'achieve', 'small', 'load', 'alter', 'get', 'desired', 'soft', 'switch', 'condition', 'dcdc', 'converterpower', 'switchingzvs']",4
2195,65668,"An a la linear quadratic regulator.<p>A similar approach as in <a href=""https://www.mathworks.com/matlabcentral/fileexchange/65493-full-state-feedback-controller-tuning-using-pso"">https://www.mathworks.com/matlabcentral/fileexchange/65493-full-state-feedback-controller-tuning-using-pso</a>, but this time to synthesize a servo drive, i.e. a position control task is solved.Cons: finite time in the cost function.Pros: optimized for a nonlinear plant, under specific reference and disturbance.</p>electric drive,full state feedback controller,linear quadratic controller,lqr,nonlinear plant,optimal control,particle swarm optimization,position control,pso,servo drive",55,1,2,0,74,linear quadratic regulator similar approach mathworks com matlabcentral fileexchange full state feedback controller tune pso time synthesize servo drive position control task solve con finite time cost function pro optimize nonlinear plant specific reference disturbance electric drivefull state feedback quadratic plantoptimal controlparticle swarm controlpsoservo drive,"['linear', 'quadratic', 'regulator', 'similar', 'approach', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'full', 'state', 'feedback', 'controller', 'tune', 'pso', 'time', 'synthesize', 'servo', 'drive', 'position', 'control', 'task', 'solve', 'con', 'finite', 'time', 'cost', 'function', 'pro', 'optimize', 'nonlinear', 'plant', 'specific', 'reference', 'disturbance', 'electric', 'drivefull', 'state', 'feedback', 'quadratic', 'plantoptimal', 'controlparticle', 'swarm', 'controlpsoservo', 'drive']",0
2196,65675,"A closed loop speed control of Induction motor using V/F control method<p>This is a simple version of speed control of induction motor using V/F control method. This method is implemented on hardware using embedded coder and Texas instruments C2000 microcontroller using embedded coder. It done at inQbe innovation pvt ltd cochin, INDIA.see at <a href=""http://www.inqbe.in"">www.inqbe.in</a></p>electric_motor_control,power_electronics_control,control design,inverter,motor control,pharmaceutical,power electronics,simulation",60,2,2,0,75,closed loop speed control induction motor control methodthis simple version speed control induction motor control method method implement hardware embed coder texas instrument microcontroller embed coder inqbe innovation pvt ltd cochin india see inqbe inelectric motor controlpower electronics controlcontrol,"['closed', 'loop', 'speed', 'control', 'induction', 'motor', 'control', 'methodthis', 'simple', 'version', 'speed', 'control', 'induction', 'motor', 'control', 'method', 'method', 'implement', 'hardware', 'embed', 'coder', 'texas', 'instrument', 'microcontroller', 'embed', 'coder', 'inqbe', 'innovation', 'pvt', 'ltd', 'cochin', 'india', 'see', 'inqbe', 'inelectric', 'motor', 'controlpower', 'electronics', 'controlcontrol']",3
2197,65700,"This simulink model provides the DPF measurement as well as phase difference.<p>Two values need to be defined initially: f and Ts where f is the frequency of sinusoidal signals and Ts is the sampling time period.In this simulation, f is chosen to be 60 Hz and Ts = 1e-6 seconds.If the current lags the voltage, the phase difference will be negative.if the current leads the voltage, the phase difference will be positive.</p>acdc,power converter,power electronics,power factor",19,1,2,0,17,provide dpf measurement well phase difference two value need define initially frequency sinusoidal signal sample time period choose second current lags voltage phase difference negative current lead voltage phase difference positive acdcpower converterpower factor,"['provide', 'dpf', 'measurement', 'well', 'phase', 'difference', 'two', 'value', 'need', 'define', 'initially', 'frequency', 'sinusoidal', 'signal', 'sample', 'time', 'period', 'choose', 'second', 'current', 'lags', 'voltage', 'phase', 'difference', 'negative', 'current', 'lead', 'voltage', 'phase', 'difference', 'positive', 'acdcpower', 'converterpower', 'factor']",4
2198,65712,"Speed control of IM using scalar control.<p>Speed control of induction motors using scalar control or popularly known as Volts/Hz control in Sine-Triangle PWM mode.</p>electric_motor_control,power_conversion_control,power_electronics_control,induction motor,inverter,power electronics,scalar control,vf,vsi",212,7,3,0,233,speed control scalar control speed control induction motor scalar control popularly know volt control sine triangle pwm mode electric motor controlpower conversion controlpower electronics controlvfvsi,"['speed', 'control', 'scalar', 'control', 'speed', 'control', 'induction', 'motor', 'scalar', 'control', 'popularly', 'know', 'volt', 'control', 'sine', 'triangle', 'pwm', 'mode', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlvfvsi']",1
2199,65776,"This file presents a circuit simulation of a Separately Excited DC motor speed .<p>This file presents a circuit simulation of a Separately Excited DC motor speed controlled by variation of its field current.</p>electric_motor_control,power_conversion_control,power_electronics_control,dc motor,field control,separately excited",22,0,1,0,24,file present circuit separately excite motor speed file present circuit separately excite motor speed control variation field current electric motor controlpower conversion controlpower electronics controldc motorfield excite,"['file', 'present', 'circuit', 'separately', 'excite', 'motor', 'speed', 'file', 'present', 'circuit', 'separately', 'excite', 'motor', 'speed', 'control', 'variation', 'field', 'current', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motorfield', 'excite']",1
2200,65777,"This file presents the circuit of a DC Shunt Motor's speed<p>This file presents the circuit of a DC Shunt Motor's speed control by varying its field current or armature resistance.</p>electric_motor_control,power_conversion_control,power_electronics_control,dc shunt motor,no load shunt motor,speed control",21,0,1,0,25,file present circuit shunt motor speedthis file present circuit shunt motor speed control vary field current armature resistance electric motor controlpower conversion controlpower electronics controldc shunt motorno load shunt motorspeed control,"['file', 'present', 'circuit', 'shunt', 'motor', 'speedthis', 'file', 'present', 'circuit', 'shunt', 'motor', 'speed', 'control', 'vary', 'field', 'current', 'armature', 'resistance', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'shunt', 'motorno', 'load', 'shunt', 'motorspeed', 'control']",1
2201,65804,"Appendix: Multiple Model Predictive Hybrid Feedforward Control of Fuel Cell Power Generation System<p>Appendix of Multiple Model Predictive Hybrid Feedforward Control of Fuel Cell Power Generation System.</p>control,matlab,optimization,simulation,simulink",495,23,6,0,583,appendix multiple predictive hybrid feedforward control fuel cell power generation systemappendix multiple predictive hybrid feedforward control fuel cell power generation,"['appendix', 'multiple', 'predictive', 'hybrid', 'feedforward', 'control', 'fuel', 'cell', 'power', 'generation', 'systemappendix', 'multiple', 'predictive', 'hybrid', 'feedforward', 'control', 'fuel', 'cell', 'power', 'generation']",4
2202,65835,"Sliding mode controllers design for LTI SYSTEM and plot the sliding surface<p>Sliding mode controllers design for LTI SYSTEM and plot the sliding surface using matlab s-function</p>control design,simulink",6,0,1,0,7,slide mode controller design lti plot slide surfacesliding mode controller design lti plot slide surface functioncontrol,"['slide', 'mode', 'controller', 'design', 'lti', 'plot', 'slide', 'surfacesliding', 'mode', 'controller', 'design', 'lti', 'plot', 'slide', 'surface', 'functioncontrol']",4
2203,65854,"HDL Coder compatible Simulink model of Auto Thresholding algorithm<p>This example shows how to create HDL Coder compatible Simulink model of Auto Thresholding algorithm by using Vision HDL Toolbox. Otsu's method is well known as a auto thresholding algorithm that chooses the threshold value to minimize the intraclass variance of the thresholded black and white pixels. MATLAB and Image Processing Toolbox provides some functions that uses Otsu's method, but these functions are not supported by HDL Coder. So, this example can be used to learn how to create auto thresholding algorithm in Simulink by using Simulink and Vision HDL Toolbox.å¤§æ´¥æ³ã¯ç»åå¦çã§è¯ãç¨ããããé¾å¤ç®åºã®ã¢ã«ã´ãªãºã ã®1ã¤ã§ããã¯ã©ã¹éåæ£ã¨ã¯ã©ã¹ååæ£ããåé¢åº¦ãæ±ããåé¢åº¦ãæå¤§ã«ãªãç¹ãé¾å¤ã¨ãã¦ç®åºãã¾ããImage Processing Toolboxã§ã¯ãã®å¤§æ´¥æ³ãå«ã¾ããé¢æ°ãå¹¾ã¤ãæä¾ããã¦ãã¾ãããä½ããHDL Coderã®ãµãã¼ãå¤ã¨ãªã£ã¦ãããç´æ¥VHDL/Verilogãçæãããã¨ãåºæ¥ã¾ãããæ¬ã¢ãã«ã¯å¤§æ´¥æ³ã«ããèªå2å¤åã®å¦çãè¡ããµãã·ã¹ãã ãå«ã¿ãHDL Coderãä½¿ã£ã¦VHDL/Verilogãçæãããã¨ãå¯è½ã§ãã[Keyward] ç»åå¦çã»2å¤åã»å¤§æ´¥æ³ã»HDLã»FPGAã»èªåã³ã¼ãçæã»ãã¢ã»IPCVãã¢ã»VHDLã»Verilog</p>fpga,hdl code generation,hdl coder,image processing,image segmentation",1340,74,4,0,912,hdl coder compatible auto thresholding algorithmthis example show create hdl coder compatible auto thresholding algorithm vision hdl toolbox otsu method well know auto thresholding algorithm chooses threshold value minimize intraclass variance thresholded black white pixel image processing toolbox provide function otsu method function support hdl coder example learn create auto thresholding algorithm vision hdl toolbox processing coderãä½¿ã£ã¦vhdl keyward ç»åå¦ç code generationhdl coderimage processingimage segmentation,"['hdl', 'coder', 'compatible', 'auto', 'thresholding', 'algorithmthis', 'example', 'show', 'create', 'hdl', 'coder', 'compatible', 'auto', 'thresholding', 'algorithm', 'vision', 'hdl', 'toolbox', 'otsu', 'method', 'well', 'know', 'auto', 'thresholding', 'algorithm', 'chooses', 'threshold', 'value', 'minimize', 'intraclass', 'variance', 'thresholded', 'black', 'white', 'pixel', 'image', 'processing', 'toolbox', 'provide', 'function', 'otsu', 'method', 'function', 'support', 'hdl', 'coder', 'example', 'learn', 'create', 'auto', 'thresholding', 'algorithm', 'vision', 'hdl', 'toolbox', 'processing', 'coderãä½¿ã£ã¦vhdl', 'keyward', 'ç»åå¦ç', 'code', 'generationhdl', 'coderimage', 'processingimage', 'segmentation']",0
2204,65871,"buck-boost converter with state space model<p>For buck-Boost Converter, the state space model simulation gives a theoreticaloutput voltage of -24v, the circuitry model simulate an output of -22v. the converter efficiency in the state space model is set to 91.7%. this is because the circuitry model simulate has switching device losses.</p>power_conversion_control,power_electronics_control,buckboost converter,buckboost converter example,buckboost converter simulink,buckboost converter with state space model simulation,gui,simulation,simulink,the state space model simulation",26,0,1,0,31,buck boost converter state space modelfor buck boost converter state space give voltage circuitry output converter efficiency state space set circuitry switch device loss power conversion controlpower electronics converter converter converter state space state space,"['buck', 'boost', 'converter', 'state', 'space', 'modelfor', 'buck', 'boost', 'converter', 'state', 'space', 'give', 'voltage', 'circuitry', 'output', 'converter', 'efficiency', 'state', 'space', 'set', 'circuitry', 'switch', 'device', 'loss', 'power', 'conversion', 'controlpower', 'electronics', 'converter', 'converter', 'converter', 'state', 'space', 'state', 'space']",1
2205,65877,"Simulation model for single phase PWM rectifier with unity power factor control<p>Designed for 100 V AC (pk) to 150 V DC conversion at 500 W output power. Based on this, the input inductor value has been calculated.</p>acdc,power converter,power electronics,power factor,rectifier,simulink,electric_motor_control,power_conversion_control,power_electronics_control",77,4,3,0,76,single phase pwm rectifier unity power factor controldesigned conversion output power base input inductor value calculate acdcpower converterpower motor controlpower conversion controlpower electronics control,"['single', 'phase', 'pwm', 'rectifier', 'unity', 'power', 'factor', 'controldesigned', 'conversion', 'output', 'power', 'base', 'input', 'inductor', 'value', 'calculate', 'acdcpower', 'converterpower', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2206,65895,"for more information dovud.nadirov@mail.ru<p>This example demonstrates a synchronization process of Synchronous Generator.</p>fault,grid connection,sm,synchronization",38,0,1,0,58,information dovud nadirov mail ruthis example demonstrate synchronization process synchronous generator faultgrid,"['information', 'dovud', 'nadirov', 'mail', 'ruthis', 'example', 'demonstrate', 'synchronization', 'process', 'synchronous', 'generator', 'faultgrid']",5
2207,65943,"ModÃ©lisation de la partie mÃ©canique.<p>Partie mÃ©canique du volet MotorisÃ© Synapsia de chez SOMFY.</p>animation,simmechanics",116,12,2,0,82,modÃ©lisation partie mÃ©canique partie mÃ©canique volet motorisÃ© synapsia chez somfy,"['modÃ©lisation', 'partie', 'mÃ©canique', 'partie', 'mÃ©canique', 'volet', 'motorisÃ©', 'synapsia', 'chez', 'somfy']",2
2208,65961,"A shunt connected DSTATCOM is configured using a three level neutral point clamped inverter<p>A shuntconnected DSTATCOM is configured using a three level neutral point clamped inverter topology to achieve load compensation. The behaviour of shunt compensator is analysed using synchronous detection method (SDM) and its different approaches.</p>dstatcom,power quality",177,2,3,0,220,shunt connect dstatcom configure three level neutral point clamp invertera shuntconnected dstatcom configure three level neutral point clamp inverter topology achieve load compensation behaviour shunt compensator analyse synchronous detection method sdm different approach dstatcompower quality,"['shunt', 'connect', 'dstatcom', 'configure', 'three', 'level', 'neutral', 'point', 'clamp', 'invertera', 'shuntconnected', 'dstatcom', 'configure', 'three', 'level', 'neutral', 'point', 'clamp', 'inverter', 'topology', 'achieve', 'load', 'compensation', 'behaviour', 'shunt', 'compensator', 'analyse', 'synchronous', 'detection', 'method', 'sdm', 'different', 'approach', 'dstatcompower', 'quality']",4
2209,65967,"The closed loop system design using PI controller for non-ideal buck converter<p>The simulation compares the transfer function of the non-ideal buck converter with an actual circuit. It demonstrate the transfer function used to represent the buck converter is accurate.</p>power_conversion_control,power_electronics_control,buck,transfer function",21,1,2,0,26,closed loop design controller non ideal buck converterthe compare transfer function non ideal buck converter actual circuit demonstrate transfer function represent buck converter accurate power conversion controlpower electronics function,"['closed', 'loop', 'design', 'controller', 'non', 'ideal', 'buck', 'converterthe', 'compare', 'transfer', 'function', 'non', 'ideal', 'buck', 'converter', 'actual', 'circuit', 'demonstrate', 'transfer', 'function', 'represent', 'buck', 'converter', 'accurate', 'power', 'conversion', 'controlpower', 'electronics', 'function']",3
2210,65971,3 dof car model<p>car bicycle model for use in vehicle lateral dynamics simulation</p>modeling,19,1,2,0,21,dof car modelcar bicycle vehicle lateral dynamic,"['dof', 'car', 'modelcar', 'bicycle', 'vehicle', 'lateral', 'dynamic']",5
2211,65972,input model for logitech Momo force feedback racing wheel<p>input model for logitech momo racing wheel complete with throttle/brake input (automatic transmission)</p>automotive,28,0,1,0,27,input logitech momo force feedback race wheelinput logitech momo race wheel complete throttle brake input automatic transmission automotive,"['input', 'logitech', 'momo', 'force', 'feedback', 'race', 'wheelinput', 'logitech', 'momo', 'race', 'wheel', 'complete', 'throttle', 'brake', 'input', 'automatic', 'transmission', 'automotive']",8
2212,65994,"Matlab files to create the figures in Feedback Control of Dynamic Systems, 8th Ed, Pearson, 2019<p>MATLAB files to create the figures in Feedback Control of Dynamic Systems, 8th Ed, Pearson, 2019, G. F. Franklin, J. D. Powell, A. Emami-Naeini</p>control design",500,7,3,0,551,file create figure feedback control dynamic pearson file create figure feedback control dynamic pearson franklin powell emami naeinicontrol design,"['file', 'create', 'figure', 'feedback', 'control', 'dynamic', 'pearson', 'file', 'create', 'figure', 'feedback', 'control', 'dynamic', 'pearson', 'franklin', 'powell', 'emami', 'naeinicontrol', 'design']",0
2213,65995,"Measure settling time of a signal<p>Determine the time taken for a signal to reach within +-x % of its final value.x = 2 to 5</p>boost converter,buck converter,converter,mppt,performance,power electronics,settling time,simulation,transient response",23,2,2,0,24,measure settle time signaldetermine time take signal reach within final value boost converterbuck response,"['measure', 'settle', 'time', 'signaldetermine', 'time', 'take', 'signal', 'reach', 'within', 'final', 'value', 'boost', 'converterbuck', 'response']",0
2214,66003,"Load for DC output power converter. Useful for test capability of converter during load disturbance.<p>The type of load include:- Fixed load.- Step up load.- Step down load.- Oscillating load.- Sweep load.- Random switching load</p>power_conversion_control,power_electronics_control,boost,buck,converter,dc,energy management,power electronics,pv,sepic",34,2,3,0,40,load output power converter useful test capability converter load disturbance type load include fix load step load step load oscillate load sweep load random switch loadpower conversion controlpower electronics managementpower,"['load', 'output', 'power', 'converter', 'useful', 'test', 'capability', 'converter', 'load', 'disturbance', 'type', 'load', 'include', 'fix', 'load', 'step', 'load', 'step', 'load', 'oscillate', 'load', 'sweep', 'load', 'random', 'switch', 'loadpower', 'conversion', 'controlpower', 'electronics', 'managementpower']",3
2215,66018,"Transient stability analysis of IEEE 9 bus system.<p>This is part of my grad project where I simulated dynamic model of IEEE 9 bus system. This is only the initial stage of simulation studies where I need to do analyze transient stability of system for a fault at line5-7 with clearing time 1.083 s. Rest of the studies were continued in PSSE to take advantage of dynamic wind turbine models in it. You can find my complete thesis here: <a href=""http://scholarworks.csun.edu/handle/10211.3/121554"">http://scholarworks.csun.edu/handle/10211.3/121554</a></p>electrical,grid,ieee 9bus,load flow,power system,simpower,transient stability,transmission",138,7,2,3,188,transient stability analysis iee bus part grad project dynamic iee bus initial stage study need analyze transient stability fault line clearing time rest study continue psse take advantage dynamic wind turbine find complete thesis http scholarworks csun edu handle busload flowpower,"['transient', 'stability', 'analysis', 'iee', 'bus', 'part', 'grad', 'project', 'dynamic', 'iee', 'bus', 'initial', 'stage', 'study', 'need', 'analyze', 'transient', 'stability', 'fault', 'line', 'clearing', 'time', 'rest', 'study', 'continue', 'psse', 'take', 'advantage', 'dynamic', 'wind', 'turbine', 'find', 'complete', 'thesis', 'http', 'scholarworks', 'csun', 'edu', 'handle', 'busload', 'flowpower']",0
2216,66051,simulate a three phase inverter<p>This model presents a simulation of a three-phase voltage inverter (VSI).</p>simulation,23,0,1,0,42,three phase inverterthis present three phase voltage inverter vsi,"['three', 'phase', 'inverterthis', 'present', 'three', 'phase', 'voltage', 'inverter', 'vsi']",1
2217,66111,"The attached file is a model of qarter car using a Ball-Screw Energy Harvesting Shock Absorber<p>The attached file contains a model of a quarter car using Ball-Screw system for recovered energy, instead of the commonly damper system.   Input:Road C class, at 70 km/h.Output:displacement of the suspended massRoad inputPower generatedAcceleration of the suspended mass (ISO 2631)</p>ballscrew,ehsa,energyharvesting,quartercar,simscape,suspension",38,3,2,2,43,attach file qarter car ball screw energy harvest shock absorberthe attach file contains quarter car ball screw recover energy instead commonly damp input road class output displacement suspend massroad inputpower suspend mass iso,"['attach', 'file', 'qarter', 'car', 'ball', 'screw', 'energy', 'harvest', 'shock', 'absorberthe', 'attach', 'file', 'contains', 'quarter', 'car', 'ball', 'screw', 'recover', 'energy', 'instead', 'commonly', 'damp', 'input', 'road', 'class', 'output', 'displacement', 'suspend', 'massroad', 'inputpower', 'suspend', 'mass', 'iso']",5
2218,66113,"The attached file is a model of qarter car using a Cable-Dynamics Energy Harvesting Shock Absorber<p>The attached file contains a model of a quarter car using Energy Harvesting Shock Absorber system with a cable transmission for recovered energy, instead of the commonly damper system.Input:Road C class, at 70 km/h.Output:displacement of the suspended massRoad inputPower generatedAcceleration of the suspended mass (ISO 2631)</p>cable,ehsa,energyharvesting,quartercar,suspension",123,11,4,2,128,attach file qarter car cable dynamic energy harvest shock absorberthe attach file contains quarter car energy harvest shock absorber cable transmission recover energy instead commonly damp input road class output displacement suspend massroad inputpower suspend mass iso,"['attach', 'file', 'qarter', 'car', 'cable', 'dynamic', 'energy', 'harvest', 'shock', 'absorberthe', 'attach', 'file', 'contains', 'quarter', 'car', 'energy', 'harvest', 'shock', 'absorber', 'cable', 'transmission', 'recover', 'energy', 'instead', 'commonly', 'damp', 'input', 'road', 'class', 'output', 'displacement', 'suspend', 'massroad', 'inputpower', 'suspend', 'mass', 'iso']",5
2219,66133,"Fibonacci number<p>A series of numbers in which each number ( Fibonacci number ) is the sum of the two preceding numbers. The simplest is the series 1, 1, 2, 3, 5, 8, etc.</p>mathematics,simulink",21,3,2,0,21,fibonacci numbera series number number fibonacci number sum two precede number simple series etc,"['fibonacci', 'numbera', 'series', 'number', 'number', 'fibonacci', 'number', 'sum', 'two', 'precede', 'number', 'simple', 'series', 'etc']",0
2220,66142,"Complete car model (7dof) using a Ball-Screw energy harvesting shock absorber in the suspensions<p>The attached file contains a model of a complete car (7dof) using a Ball-Screw system for recovered energy, instead of the commonly damper system. Input:Road C class, at 50 km/h.Output:displacement of the suspended massRoad input (at each wheel)Power generated from each shock absorberAcceleration of the suspended mass (ISO 2631)</p>simscape,simulink,suspension",306,19,3,6,314,complete car dof ball screw energy harvest shock absorber suspensionsthe attach file contain complete car dof ball screw recover energy instead commonly damp input road class output displacement suspend massroad input wheel power generate shock suspend mass iso,"['complete', 'car', 'dof', 'ball', 'screw', 'energy', 'harvest', 'shock', 'absorber', 'suspensionsthe', 'attach', 'file', 'contain', 'complete', 'car', 'dof', 'ball', 'screw', 'recover', 'energy', 'instead', 'commonly', 'damp', 'input', 'road', 'class', 'output', 'displacement', 'suspend', 'massroad', 'input', 'wheel', 'power', 'generate', 'shock', 'suspend', 'mass', 'iso']",5
2221,66143,"Complete car model (7dof) using a energy harvesting shock absorber with cable transmission<p>The attached file contains a model of a complete car (7dof) using a Energy Harvesting Shock Absorber system with a cable transmission for recovered energy, instead of the commonly damper system.Input:Road C class, at 50 km/h.Output:displacement of the suspended massRoad input (at each wheel)Power generated from each shock absorberAcceleration of the suspended mass (ISO 2631)</p>simscape,simulink,suspension",608,48,5,4,607,complete car dof energy harvest shock absorber cable transmissionthe attach file contain complete car dof energy harvest shock absorber cable transmission recover energy instead commonly damp input road class output displacement suspend massroad input wheel power generate shock suspend mass iso,"['complete', 'car', 'dof', 'energy', 'harvest', 'shock', 'absorber', 'cable', 'transmissionthe', 'attach', 'file', 'contain', 'complete', 'car', 'dof', 'energy', 'harvest', 'shock', 'absorber', 'cable', 'transmission', 'recover', 'energy', 'instead', 'commonly', 'damp', 'input', 'road', 'class', 'output', 'displacement', 'suspend', 'massroad', 'input', 'wheel', 'power', 'generate', 'shock', 'suspend', 'mass', 'iso']",5
2222,66162,Implementation of Perturb and Observe Method<p>The detailed block diagram of the P&amp;O algorithm mentioned above is constructedusing MATLAB/SIMULINK and the model is shown in Fig. . Here the voltageand current inputs are sensed to compute power as shown. A saturation limit is setto monitor the increase or decrease in voltage in order to avoid oscillations inthe MPP.</p>conversion,13,0,1,0,15,implementation perturb observe methodthe detailed block diagram amp algorithm mention show fig voltageand current input sense compute power show saturation limit setto monitor increase decrease voltage order avoid oscillation inthe mpp conversion,"['implementation', 'perturb', 'observe', 'methodthe', 'detailed', 'block', 'diagram', 'amp', 'algorithm', 'mention', 'show', 'fig', 'voltageand', 'current', 'input', 'sense', 'compute', 'power', 'show', 'saturation', 'limit', 'setto', 'monitor', 'increase', 'decrease', 'voltage', 'order', 'avoid', 'oscillation', 'inthe', 'mpp', 'conversion']",4
2223,66189,"Three-state closed-loop CSTR dynamic model with simulation of incipient faults<p>This is a Simulink model of a CSTR under closed-loop control, where the process is represented by 3 ODEs (ordinary differential equations) which are mass and energy balances around the system.  The CSTR (continuous stirred-tank reactor) carries out a hypothetical first-order exothermic reaction, where the tank temperature (T) is maintained using a cooling jacket. Process conditions are being perturbed around the nominal operating point by random disturbances on 3 input variables.Faults can be simulated for process monitoring research purposes. Incipient faults include sensor bias ramp changes and input disturbance ramp changes. Multiplicative faults include catalyst deactivation and heat transfer fouling by exponential decay. Any combination of these faults may also be simulated together. When no faults are simulated, one can gain process understanding of the system dynamics under normal operation. References: [1] Pilario, K.E.S. and Cao, Y. ""Canonical Variate Dissimilarity Analysis for Process Incipient Fault Detection,"" IEEE Transactions on Industrial Informatics, 2018. DOI: 10.1109/TII.2018.2810822[2] Pilario, K.E.S., Cao, Y., and Shafiee, M. ""Mixed Kernel Canonical Variate Dissimilarity Analysis for Incipient Fault Monitoring in Nonlinear Dynamic Processes"". Comput. Chem. Eng. 123, pp. 143-154, 2019. DOI: 10.1016/j.compchemeng.2018.12.027</p>cstr,dissimilarity analysis,dynamic simulation,fault detection,feedback control,incipient fault,process monitoring",178,0,1,0,258,three state close loop cstr dynamic incipient faultsthis cstr close loop control process represent ode ordinary differential equation mass energy balance around cstr continuous stir tank reactor carry hypothetical first order exothermic reaction tank temperature maintain cool jacket process condition perturb around nominal operating point random disturbance input variable fault process monitor research purpose incipient fault include sensor bias ramp change input disturbance ramp change multiplicative fault include catalyst deactivation heat transfer foul exponential decay combination fault may also together faults one gain process understand dynamic normal operation reference pilario cao canonical variate dissimilarity analysis process incipient fault detection iee transaction industrial informatics doi tii pilario cao shafiee mixed kernel canonical variate dissimilarity analysis incipient fault monitor nonlinear dynamic process comput chem eng doi compchemeng analysisdynamic faultprocess monitoring,"['three', 'state', 'close', 'loop', 'cstr', 'dynamic', 'incipient', 'faultsthis', 'cstr', 'close', 'loop', 'control', 'process', 'represent', 'ode', 'ordinary', 'differential', 'equation', 'mass', 'energy', 'balance', 'around', 'cstr', 'continuous', 'stir', 'tank', 'reactor', 'carry', 'hypothetical', 'first', 'order', 'exothermic', 'reaction', 'tank', 'temperature', 'maintain', 'cool', 'jacket', 'process', 'condition', 'perturb', 'around', 'nominal', 'operating', 'point', 'random', 'disturbance', 'input', 'variable', 'fault', 'process', 'monitor', 'research', 'purpose', 'incipient', 'fault', 'include', 'sensor', 'bias', 'ramp', 'change', 'input', 'disturbance', 'ramp', 'change', 'multiplicative', 'fault', 'include', 'catalyst', 'deactivation', 'heat', 'transfer', 'foul', 'exponential', 'decay', 'combination', 'fault', 'may', 'also', 'together', 'faults', 'one', 'gain', 'process', 'understand', 'dynamic', 'normal', 'operation', 'reference', 'pilario', 'cao', 'canonical', 'variate', 'dissimilarity', 'analysis', 'process', 'incipient', 'fault', 'detection', 'iee', 'transaction', 'industrial', 'informatics', 'doi', 'tii', 'pilario', 'cao', 'shafiee', 'mixed', 'kernel', 'canonical', 'variate', 'dissimilarity', 'analysis', 'incipient', 'fault', 'monitor', 'nonlinear', 'dynamic', 'process', 'comput', 'chem', 'eng', 'doi', 'compchemeng', 'analysisdynamic', 'faultprocess', 'monitoring']",5
2224,66248,"A toolbox for design & analysis of disturbance observer<p>Although the disturbance observer (DOB)-based controller has been extensively applied and various theoretical results on the DOB have been presented, the exclusive, user-friendly, and unified tool for the computer-aided design of DOB has been out of existence.  In this regard, DO-DAT is introduced. DO-DAT is the toolbox which helps users design the conventional DOB that guarantees the robust stability of the DOB-controlled closed-loop system. By DO-DAT, users can obtain the nominal performance recovery with a proper bandwidth of Q-filter as far as they desire. Users can download the toolbox, install in the MATLAB, and enter DO_DAT in the command window to use the function of this toolbox. All suggestions, comments, and bug reports are welcomed.</p>control design,disturbance observer,toolbox",56,9,4,0,52,toolbox design analysis disturbance disturbance observer dob base controller extensively apply various theoretical result dob presented exclusive user friendly unify tool computer aid design dob existence regard dat introduce dat toolbox help user design conventional dob guarantee robust stability dob control close loop dat user obtain nominal performance recovery proper bandwidth filter far desire user download toolbox install enter dat command window function toolbox suggestion comment bug report welcome control observertoolbox,"['toolbox', 'design', 'analysis', 'disturbance', 'disturbance', 'observer', 'dob', 'base', 'controller', 'extensively', 'apply', 'various', 'theoretical', 'result', 'dob', 'presented', 'exclusive', 'user', 'friendly', 'unify', 'tool', 'computer', 'aid', 'design', 'dob', 'existence', 'regard', 'dat', 'introduce', 'dat', 'toolbox', 'help', 'user', 'design', 'conventional', 'dob', 'guarantee', 'robust', 'stability', 'dob', 'control', 'close', 'loop', 'dat', 'user', 'obtain', 'nominal', 'performance', 'recovery', 'proper', 'bandwidth', 'filter', 'far', 'desire', 'user', 'download', 'toolbox', 'install', 'enter', 'dat', 'command', 'window', 'function', 'toolbox', 'suggestion', 'comment', 'bug', 'report', 'welcome', 'control', 'observertoolbox']",5
2225,66325,inverter<p>180-degree inverter</p>simulation,32,0,1,0,49,inverter degree,"['inverter', 'degree']",1
2226,66326,"3rd polynomial for trajectory planning between two points<p>Here you just need to mention the initial time and the final time and the delta_x in Simulink</p>mathematics,simulink",23,2,3,0,24,polynomial trajectory plan two pointshere need mention initial time final time delta,"['polynomial', 'trajectory', 'plan', 'two', 'pointshere', 'need', 'mention', 'initial', 'time', 'final', 'time', 'delta']",0
2227,66327,"Verification of Network Theorems - Maximum Power Transfer Theorem MATLAB<p>Matlab Simulink to verify Maximum power transfer theorem</p>maximum,maximum power transfer,maximum power transfer theorem,network theorem,power,theorem,transfer,verification of network theorems",22,0,1,0,24,verification network theorems maximum power transfer theorem matlabmatlab verify maximum power transfer power transfermaximum power transfer theoremnetwork network theorem,"['verification', 'network', 'theorems', 'maximum', 'power', 'transfer', 'theorem', 'matlabmatlab', 'verify', 'maximum', 'power', 'transfer', 'power', 'transfermaximum', 'power', 'transfer', 'theoremnetwork', 'network', 'theorem']",4
2228,66328,"Verification of Network Theorems - Norton's Theorem MATLAB<p>Verification of Network Theorems - Norton's Theorem in MATLAB</p>network,network theorem,norton,norton theorem,verification of nortons theorem",60,0,1,0,78,verification network theorems norton theorem network theorems norton theorem nortons theorem,"['verification', 'network', 'theorems', 'norton', 'theorem', 'network', 'theorems', 'norton', 'theorem', 'nortons', 'theorem']",8
2229,66329,"Verification of Network Theorems - Norton's Theorem MATLAB<p>Verification of Network Theorems - Norton's Theorem in MATLAB</p>network,network theorem,super position,superposition,superposition theorem,theorem,verification",40,0,1,0,46,verification network theorems norton theorem network theorems norton theorem theoremsuper,"['verification', 'network', 'theorems', 'norton', 'theorem', 'network', 'theorems', 'norton', 'theorem', 'theoremsuper']",8
2230,66330,"Network Theorems- Thevenin's Theorem MATLAB<p>Network Theorems- Thevenin's Theorem in MATLAB</p>network,theorem,thevenin,thevenins theorem,verification",60,0,1,0,76,network theorem thevenin theorem matlabnetwork theorem thevenin theorem,"['network', 'theorem', 'thevenin', 'theorem', 'matlabnetwork', 'theorem', 'thevenin', 'theorem']",8
2231,66338,"LOAD FREQUENCY CONTROL IN MATLAB/SIMULINK<p>LOAD FREQUENCY CONTROL IN MATLAB/SIMULINK</p>control,frequency,load,load frequency,simulation",38,0,1,0,38,load frequency control frequency control,"['load', 'frequency', 'control', 'frequency', 'control']",6
2232,66340,"Transient Response of series LC- Sinusoidal Response of series LC Circuit in MATLAB/Simulink<p>Transient Response of series LC- Sinusoidal Response of series LC Circuit in MATLAB/Simulink</p>lc,matlab,series lc,sine response,sinusoidal,step response",22,0,1,0,28,transient response series sinusoidal response series circuit response series sinusoidal response series circuit lcsine response,"['transient', 'response', 'series', 'sinusoidal', 'response', 'series', 'circuit', 'response', 'series', 'sinusoidal', 'response', 'series', 'circuit', 'lcsine', 'response']",4
2233,66341,"Transient Response of series RC- Sinusodal Response of series RC Circuit MATLAB/Simulink<p>Transient Response of series RC- Sinusodal Response of series RC Circuit MATLAB/Simulink</p>rc,rc circuit,rlc,sine response,sinusoidal",20,0,1,0,26,transient response series sinusodal response series circuit response series sinusodal response series circuit circuitrlcsine,"['transient', 'response', 'series', 'sinusodal', 'response', 'series', 'circuit', 'response', 'series', 'sinusodal', 'response', 'series', 'circuit', 'circuitrlcsine']",4
2234,66345,"Transient Response of series RL,RC& RLC-Step Response of series RL,RC&RLC Circuit in MATLAB/Simulink<p>Transient Response of series RL,RC&amp; RLC-Step Response of series RL,RC&amp;RLC Circuit in MATLAB/Simulink</p>rl,rlc,step response",68,0,1,0,90,transient response series rlrc rlc step response series rlrc rlc circuit response series rlrc amp rlc step response series rlrc amp rlc circuit response,"['transient', 'response', 'series', 'rlrc', 'rlc', 'step', 'response', 'series', 'rlrc', 'rlc', 'circuit', 'response', 'series', 'rlrc', 'amp', 'rlc', 'step', 'response', 'series', 'rlrc', 'amp', 'rlc', 'circuit', 'response']",4
2235,66346,"Transient Response - Sinusoidal Response of series RL,RC,LC & RLC Circuit in  MATLAB/Simulink<p>Transient Response - Sinusoidal Response of series RL,RC,LC &amp; RLC Circuit in  MATLAB/Simulink</p>rc,rl,rlc,sine response",80,0,1,0,108,transient response sinusoidal response series rlrclc rlc circuit response sinusoidal response series rlrclc amp rlc circuit response,"['transient', 'response', 'sinusoidal', 'response', 'series', 'rlrclc', 'rlc', 'circuit', 'response', 'sinusoidal', 'response', 'series', 'rlrclc', 'amp', 'rlc', 'circuit', 'response']",4
2236,66348,"Transient Response of series RLC- Step Response of series RLC Circuit in MATLAB/Simulink<p>Transient Response of series RLC- Step Response of series RLC Circuit in MATLAB/Simulink</p>rlc,series rlc,step response",28,0,1,0,38,transient response series rlc step response series rlc circuit response series rlc step response series rlc circuit rlcstep response,"['transient', 'response', 'series', 'rlc', 'step', 'response', 'series', 'rlc', 'circuit', 'response', 'series', 'rlc', 'step', 'response', 'series', 'rlc', 'circuit', 'rlcstep', 'response']",4
2237,66350,"TRANSIENT - DAMPING RESPONSE OF SERIES - OVER,UNDER,CRITICALLY DAMPED RESPONSE IN MATLAB/SIMULINK<p>TRANSIENT - DAMPING RESPONSE OF SERIES - OVER,UNDER,CRITICALLY DAMPED RESPONSE IN MATLAB/SIMULINK</p>critically damped,matlab,overdamped,response,series rlc,simulation,simulink,underdamped",48,0,1,0,58,transient damp response series damp response damp response series damp response,"['transient', 'damp', 'response', 'series', 'damp', 'response', 'damp', 'response', 'series', 'damp', 'response']",0
2238,66359,"Simulink model of hydraulic wind energy harvesting system<p>Gearless hydraulic wind power transfers are considered noble candidates for wind energy harvesting. In this method, high-pressure hydraulics is utilized to collect the energy of multiple wind turbines and transfer it to a central generation unit. This paper introduces a state space representation of a central hydraulic wind energy generation unit. The state space model is derived from the dynamic equations of the hydraulic circuitry. The model is verified with simulation results from SimHydraulics toolbox of MATLAB. The results of state space model were in good agreement with the Matlab toolbox</p>example,simulation",63,5,2,0,57,hydraulic wind energy harvest systemgearless hydraulic wind power transfer consider noble candidate wind energy harvest method high pressure hydraulics utilized collect energy multiple wind turbine transfer central generation unit paper introduces state space representation central hydraulic wind energy generation unit state space derive dynamic equation hydraulic circuitry verify result simhydraulics toolbox result state space good agreement,"['hydraulic', 'wind', 'energy', 'harvest', 'systemgearless', 'hydraulic', 'wind', 'power', 'transfer', 'consider', 'noble', 'candidate', 'wind', 'energy', 'harvest', 'method', 'high', 'pressure', 'hydraulics', 'utilized', 'collect', 'energy', 'multiple', 'wind', 'turbine', 'transfer', 'central', 'generation', 'unit', 'paper', 'introduces', 'state', 'space', 'representation', 'central', 'hydraulic', 'wind', 'energy', 'generation', 'unit', 'state', 'space', 'derive', 'dynamic', 'equation', 'hydraulic', 'circuitry', 'verify', 'result', 'simhydraulics', 'toolbox', 'result', 'state', 'space', 'good', 'agreement']",4
2239,66386,"Tips and Tricks for Using 64 Bit Integers in Simulink<p>Tips and tricks for using 64 bit integer types in Simulink. Tools and information for easily specifying 64 bit integer types and parameter values in Simulink. Tools include utilities for specifying parameters and a Simulink Library that simplifies modelling with 64 bit integers.</p>64bit,data types,int64,integers,parameters,simulink,uint64",133,4,2,2,118,tip trick bit integer trick bit integer type tool information easily specify bit integer type parameter value tool include utility specify parameter simplifies bit integer bitdata typesint,"['tip', 'trick', 'bit', 'integer', 'trick', 'bit', 'integer', 'type', 'tool', 'information', 'easily', 'specify', 'bit', 'integer', 'type', 'parameter', 'value', 'tool', 'include', 'utility', 'specify', 'parameter', 'simplifies', 'bit', 'integer', 'bitdata', 'typesint']",0
2240,66410,"Analyzes Simulink Model Complexity (Static and Dynamic Complexities)<p>This tool measures total model complexity by computing Static Complexity (Halstead Metrics) and Dynamic Complexity by using Profiler Data.</p>dynamic complexity,model complexity,profiling,static complexity",541,40,3,0,533,analyzes complexity static dynamic complexity tool measure total complexity compute static complexity halstead metric dynamic complexity profiler data dynamic complexitymodel complexity,"['analyzes', 'complexity', 'static', 'dynamic', 'complexity', 'tool', 'measure', 'total', 'complexity', 'compute', 'static', 'complexity', 'halstead', 'metric', 'dynamic', 'complexity', 'profiler', 'data', 'dynamic', 'complexitymodel', 'complexity']",5
2241,66417,"power system<p>stability analysis</p>power,simulink",214,14,4,0,407,power systemstability,"['power', 'systemstability']",3
2242,66421,"Firing Schemes for Controlled P.E Devices- Comparing Sine Carrier Signal with Triangular Ctrl Signal<p>Firing Schemes for Controlled P.E Devices ( IGBT,SCT,MOSFET,etc ) - Comparing Sine Carrier Signal with Triangular Ctrl Signal</p>control signl,firing angle schemes,pwm,sine,triangle",5,0,1,0,6,fire scheme control device compare sine carrier signal triangular ctrl signalfiring scheme control device compare sine carrier signal triangular ctrl signalcontrol signlfiring angle,"['fire', 'scheme', 'control', 'device', 'compare', 'sine', 'carrier', 'signal', 'triangular', 'ctrl', 'signalfiring', 'scheme', 'control', 'device', 'compare', 'sine', 'carrier', 'signal', 'triangular', 'ctrl', 'signalcontrol', 'signlfiring', 'angle']",4
2243,66422,"Firing Schemes for Controlled P.E Devices - Comparing Sine Carrier Signal with Sine Control Signal<p>Firing Schemes for Controlled P.E Devices - Comparing Sine Carrier Signal with Sine Control Signal</p>firing schemes,pwm,sine pwm,sine with sine",5,0,1,0,6,fire scheme control device compare sine carrier signal sine control signalfiring scheme control device compare sine carrier signal sine control signalfiring schemespwmsine pwmsine sine,"['fire', 'scheme', 'control', 'device', 'compare', 'sine', 'carrier', 'signal', 'sine', 'control', 'signalfiring', 'scheme', 'control', 'device', 'compare', 'sine', 'carrier', 'signal', 'sine', 'control', 'signalfiring', 'schemespwmsine', 'pwmsine', 'sine']",4
2244,66423,"Firing Schemes for Controlled P.E Devices - Comparing Sine Carrier Signal with Control Signal<p>Firing Schemes for Controlled P.E Devices - Comparing Sine Carrier Signal with Control Signal</p>firing schemes,matlab,pwm,sine with ctrl",6,0,1,0,6,fire scheme control device compare sine carrier signal control signalfiring scheme control device compare sine carrier signal control signalfiring ctrl,"['fire', 'scheme', 'control', 'device', 'compare', 'sine', 'carrier', 'signal', 'control', 'signalfiring', 'scheme', 'control', 'device', 'compare', 'sine', 'carrier', 'signal', 'control', 'signalfiring', 'ctrl']",3
2245,66424,"Firing Schemes for Controlled P.E Devices - Comparing Sawtooth Carrier Signal with Control Signal<p>Firing Schemes for Controlled P.E Devices - Comparing Sawtooth Carrier Signal with Control Signal</p>control,matlab,sawtooth,sawtooth pwm",6,0,1,0,6,fire scheme control device compare sawtooth carrier signal control signalfiring scheme control device compare sawtooth carrier signal control pwm,"['fire', 'scheme', 'control', 'device', 'compare', 'sawtooth', 'carrier', 'signal', 'control', 'signalfiring', 'scheme', 'control', 'device', 'compare', 'sawtooth', 'carrier', 'signal', 'control', 'pwm']",3
2246,66436,"AC voltage controller using thyristor<p>control of ac power</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",23,0,1,0,33,voltage controller powerelectric motor controlpower conversion controlpower electronics,"['voltage', 'controller', 'powerelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
2247,66447,"PV systems connected to boost converter, which is controlled by INC MPPT technique<p>PV systems connected to boost converter, which is controlled by INC MPPT technique</p>power_conversion_control,power_electronics_control,aerospace,power electronics",147,6,3,0,162,connect boost converter control inc mppt techniquepv connect boost converter control inc mppt techniquepower conversion controlpower electronics electronics,"['connect', 'boost', 'converter', 'control', 'inc', 'mppt', 'techniquepv', 'connect', 'boost', 'converter', 'control', 'inc', 'mppt', 'techniquepower', 'conversion', 'controlpower', 'electronics', 'electronics']",6
2248,66473,"Pseudo random number generation<p>Pseudo random number generation - shift register method</p>pseudo,random number,shift register",23,2,3,0,28,pseudo random number random number generation shift register numbershift register,"['pseudo', 'random', 'number', 'random', 'number', 'generation', 'shift', 'register', 'numbershift', 'register']",5
2249,66474,"MULTILEVEL INVERTER WITH PSEUDORANDOM PWM TECHNIQUE<p>MULTILEVEL INVERTER WITH PSEUDORANDOM PWM TECHNIQUE</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,modulation,multilevel,multilevel inverter,pseudorandom,pulse,pwm,spwm,width",263,18,5,0,311,multilevel inverter pseudorandom pwm inverter pseudorandom pwm motor controlpower conversion controlpower electronics,"['multilevel', 'inverter', 'pseudorandom', 'pwm', 'inverter', 'pseudorandom', 'pwm', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",6
2250,66495,"This file presents the Open Circuit and Short Circuit Characteristics of the Synchronous Machine.<p>This file presents the Open Circuit and Short Circuit Characteristics of the Synchronous Machine. Don't forget to rate it. If you find any mistakes, please, feel free to send an email to <a href=""mailto:douglasammaral@hotmail.com"">douglasammaral@hotmail.com</a>.</p>open circuit,short circuit,synchronous machine",28,0,1,0,35,file present open circuit short circuit characteristic synchronous machine file present open circuit short circuit characteristic synchronous machine forget rate find mistakes please feel free send email douglasammaral hotmail com open circuitshort machine,"['file', 'present', 'open', 'circuit', 'short', 'circuit', 'characteristic', 'synchronous', 'machine', 'file', 'present', 'open', 'circuit', 'short', 'circuit', 'characteristic', 'synchronous', 'machine', 'forget', 'rate', 'find', 'mistakes', 'please', 'feel', 'free', 'send', 'email', 'douglasammaral', 'hotmail', 'com', 'open', 'circuitshort', 'machine']",7
2251,66548,"Induction motor drive using multilevel inverter - sinusoidal pwm<p>Sinusoidal PWM based Nine level inverter drives Induction motor</p>electric_motor_control,power_conversion_control,power_electronics_control,9 level,drive,induction motor,inverter,multilevel,multilevel inverter,pwm,sinusoidal pwm",94,2,3,0,118,induction motor drive multilevel inverter sinusoidal pwmsinusoidal pwm base nine level inverter drive induction motorelectric motor controlpower conversion controlpower electronics control pwm,"['induction', 'motor', 'drive', 'multilevel', 'inverter', 'sinusoidal', 'pwmsinusoidal', 'pwm', 'base', 'nine', 'level', 'inverter', 'drive', 'induction', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control', 'pwm']",6
2252,66555,"IEEE 5-Bus System Simulink Model for Load Flow Analysis<p>IEEE 5-Bus System Simulink Model Developed by Rodney Tan Version 1.0 (Mar 2018)This Simulink model perform Load Flow Analysis for a IEEE 5-Bus System</p>ieee 5 bus,ieee bus,ieee 5bus system,load flow analysis,power flow analysis",94,7,2,0,193,iee bus load flow analysisiee bus develop rodney tan version mar perform load flow analysis iee bus systemiee busiee busiee bus systemload flow analysispower flow analysis,"['iee', 'bus', 'load', 'flow', 'analysisiee', 'bus', 'develop', 'rodney', 'tan', 'version', 'mar', 'perform', 'load', 'flow', 'analysis', 'iee', 'bus', 'systemiee', 'busiee', 'busiee', 'bus', 'systemload', 'flow', 'analysispower', 'flow', 'analysis']",0
2253,66562,"This file presents the Voltage Regulation Curves for Purely Resistive and Inductive Loads.<p>This file presents the Voltage Regulation Curves of Synchronous Machine for Purely Resistive and Inductive Three-Phase Loads. A high impedance (resistance) block has been added in parallel with the machine due to its internal modeling as inductor. It is also useful for open circuit tests, since the machines can't have its terminals in actual open circuit. Don't forget to rate it. If you find any mistakes, please, feel free to send an email to <a href=""mailto:douglasammaral@hotmail.com"">douglasammaral@hotmail.com</a>.</p>synchronous machines,voltage regulation",71,4,2,0,86,file present voltage regulation curve purely resistive inductive load file present voltage regulation curve synchronous machine purely resistive inductive three phase load high impedance resistance block add parallel machine due internal modeling inductor also useful open circuit test since machine terminal actual open circuit forget rate find mistakes please feel free send email douglasammaral hotmail com synchronous machinesvoltage regulation,"['file', 'present', 'voltage', 'regulation', 'curve', 'purely', 'resistive', 'inductive', 'load', 'file', 'present', 'voltage', 'regulation', 'curve', 'synchronous', 'machine', 'purely', 'resistive', 'inductive', 'three', 'phase', 'load', 'high', 'impedance', 'resistance', 'block', 'add', 'parallel', 'machine', 'due', 'internal', 'modeling', 'inductor', 'also', 'useful', 'open', 'circuit', 'test', 'since', 'machine', 'terminal', 'actual', 'open', 'circuit', 'forget', 'rate', 'find', 'mistakes', 'please', 'feel', 'free', 'send', 'email', 'douglasammaral', 'hotmail', 'com', 'synchronous', 'machinesvoltage', 'regulation']",0
2254,66563,"Demo files from ""How to program a Raspberry Pi based WalkieTalkie using MATLAB and Simulink"" webinar<p>In this webinar you will learn how to take advantage of the built-in Wi-Fi capabilities of the Raspberry Pi 3 to build a walkie talkie using MATLAB and Simulink. The walkie talkie will acquire audio signals from an audio circuit connected to the Raspberry Pi and sends it over the Wi-Fi to another Raspberry Pi. The webinar will highlight how to: 1) Communicate with your Raspberry Pi from MATLAB and Simulink2) Quickly prototype and refine algorithms for your Raspberry Pi projects3) Deploy algorithms for standalone execution on the Raspberry Pi</p>audio processing,raspberry pi",16,0,1,0,17,demo file program raspberry base walkietalkie webinarin webinar learn take advantage build capability raspberry build walkie talkie walkie talkie acquire audio signal audio circuit connect raspberry send another raspberry webinar highlight communicate raspberry quickly prototype refine algorithm raspberry project deploy algorithm standalone execution raspberry piaudio,"['demo', 'file', 'program', 'raspberry', 'base', 'walkietalkie', 'webinarin', 'webinar', 'learn', 'take', 'advantage', 'build', 'capability', 'raspberry', 'build', 'walkie', 'talkie', 'walkie', 'talkie', 'acquire', 'audio', 'signal', 'audio', 'circuit', 'connect', 'raspberry', 'send', 'another', 'raspberry', 'webinar', 'highlight', 'communicate', 'raspberry', 'quickly', 'prototype', 'refine', 'algorithm', 'raspberry', 'project', 'deploy', 'algorithm', 'standalone', 'execution', 'raspberry', 'piaudio']",0
2255,66565,"Demo files used in the video 'Heart Rate Detection using Arduino and MATLAB'<p>In this project we are using Heart and brain spiker shield along with a TFT shield and an Arduino to build a heart rate monitor. We are using MATLAB, Simulink and Fixed-Point Designer to show how you can implement filtering and heart rate detector algorithms on Arduino boards. The workflow used in this video is â a) test the algorithms in MATLAB using test data, b) test the algorithm on the Arduino using Simulink and c) then embed the algorithm onto the Arduino.</p>signal processing",32,2,2,3,32,demo file video heart rate detection arduino project heart brain spiker shield along tft shield arduino build heart rate monitor fix point designer show implement filtering heart rate detector algorithm arduino board workflow video test algorithm test data test algorithm arduino embed algorithm onto arduino signal processing,"['demo', 'file', 'video', 'heart', 'rate', 'detection', 'arduino', 'project', 'heart', 'brain', 'spiker', 'shield', 'along', 'tft', 'shield', 'arduino', 'build', 'heart', 'rate', 'monitor', 'fix', 'point', 'designer', 'show', 'implement', 'filtering', 'heart', 'rate', 'detector', 'algorithm', 'arduino', 'board', 'workflow', 'video', 'test', 'algorithm', 'test', 'data', 'test', 'algorithm', 'arduino', 'embed', 'algorithm', 'onto', 'arduino', 'signal', 'processing']",7
2256,66569,"MATLAB and Simulink files to program the drawing robot, mobile rover, and self-balancing motorcycle.<p>This package includes the MATLAB and Simulink files used to program the three projects in the Arduino Engineering Kit. â¢ A drawing robot that takes a reference drawing and duplicates it on a whiteboard â¢ A mobile rover that navigates between reference points and moves objects with its forklift â¢ A self-balancing motorcycle that maneuvers itself on varying terrain and remains upright using a flywheel for balance These files along with the associated online learning materials included with the kit guide users through the process of programming each project, teaching important engineering concepts along the way in areas such as controls, system modeling, image processing, and robotics. Learn more about the Arduino Engineering Kit at <a href=""http://www.mathworks.com/arduino-kitImportant"">www.mathworks.com/arduino-kitImportant</a> note: After installing this toolbox, type the following command in MATLAB to move to the appropriate folder. &gt;&gt; cd(arduinokit.kitRoot)</p>pick of the week,potw,live script,arduino,hardware,maker",1392,152,4,11,1372,file program draw robot mobile rover self balance motorcycle package include file program three project arduino engineering kit draw robot take reference draw duplicate whiteboard mobile rover navigates reference point move object forklift self balance motorcycle maneuver vary terrain remains upright flywheel balance file along associate online learn material include kit guide user process program project teach important engineering concept along way area control image processing robotics learn arduino engineering kit mathworks com arduino kitimportant note instal toolbox type follow command move appropriate folder arduinokit kitroot pick weekpotwlive,"['file', 'program', 'draw', 'robot', 'mobile', 'rover', 'self', 'balance', 'motorcycle', 'package', 'include', 'file', 'program', 'three', 'project', 'arduino', 'engineering', 'kit', 'draw', 'robot', 'take', 'reference', 'draw', 'duplicate', 'whiteboard', 'mobile', 'rover', 'navigates', 'reference', 'point', 'move', 'object', 'forklift', 'self', 'balance', 'motorcycle', 'maneuver', 'vary', 'terrain', 'remains', 'upright', 'flywheel', 'balance', 'file', 'along', 'associate', 'online', 'learn', 'material', 'include', 'kit', 'guide', 'user', 'process', 'program', 'project', 'teach', 'important', 'engineering', 'concept', 'along', 'way', 'area', 'control', 'image', 'processing', 'robotics', 'learn', 'arduino', 'engineering', 'kit', 'mathworks', 'com', 'arduino', 'kitimportant', 'note', 'instal', 'toolbox', 'type', 'follow', 'command', 'move', 'appropriate', 'folder', 'arduinokit', 'kitroot', 'pick', 'weekpotwlive']",0
2257,66571,"Generates pulse upon input trigger with pulse width mention in input<p>Subsystem generates pulse of defined width at the input. The pulse initiates upon the positive edge of the input trigger and lasts for width defined at the input</p>signal processing,simulink",27,3,3,0,29,generates pulse upon input trigger pulse width mention inputsubsystem generate pulse define width input pulse initiate upon positive edge input trigger last width define inputsignal,"['generates', 'pulse', 'upon', 'input', 'trigger', 'pulse', 'width', 'mention', 'inputsubsystem', 'generate', 'pulse', 'define', 'width', 'input', 'pulse', 'initiate', 'upon', 'positive', 'edge', 'input', 'trigger', 'last', 'width', 'define', 'inputsignal']",4
2258,66581,"PMSM Model by using the flux linkage maps obtained from FEM analysis.<p>PMSM Model by using the flux linkage maps obtained from FEM analysis.</p>electric_motor_control,power_electronics_control,model,pmsm",800,12,2,0,796,pmsm flux linkage map obtain fem analysis pmsm flux linkage map obtain fem analysis electric motor controlpower electronics,"['pmsm', 'flux', 'linkage', 'map', 'obtain', 'fem', 'analysis', 'pmsm', 'flux', 'linkage', 'map', 'obtain', 'fem', 'analysis', 'electric', 'motor', 'controlpower', 'electronics']",4
2259,66598,"Single Phase Half Wave Controlled Rectification RL_FLYWHEEL Circuit.<p>Single Phase Half Wave Controlled Rectification RL_FLYWHEEL Circuit. The firing circuit is replaced by a pulse generator. Phase delay alpha maybe changed in the pulse generator properties.</p>power electronics,rectifier,thyristor",17,0,1,0,23,single phase half wave control rectification flywheel circuit single phase half wave control rectification flywheel circuit fire circuit replace pulse generator phase delay alpha maybe change pulse generator property power,"['single', 'phase', 'half', 'wave', 'control', 'rectification', 'flywheel', 'circuit', 'single', 'phase', 'half', 'wave', 'control', 'rectification', 'flywheel', 'circuit', 'fire', 'circuit', 'replace', 'pulse', 'generator', 'phase', 'delay', 'alpha', 'maybe', 'change', 'pulse', 'generator', 'property', 'power']",3
2260,66600,"This simulation shows integration of PV array to grid.<p>This simulation shows how PV array can be connected to grid via an inverter. First maximum power that can be extracted from PV is calculated from P &amp; O algorithm. From the value of this power with loss power compensated  and grid voltage, reference current is calculated. This calculated reference current is compared with actual current supplied by inverter and gate signals are generated so as to make actual supplied current within the band of reference current.To stabilize DC bus voltage, DC voltage bus is compared with reference DC bus voltage. Error is passed to PI controller. Output of PI controller corresponds to the power that should be drawn from grid to maintain constant DC bus voltage. Difference of PV power and this power is supplied to grid.</p>power_conversion_control,power_electronics_control,grid connected pv inverter,hysteresis band controller,inverter,p o algorithm,pv,pv inverter",90,3,2,0,103,show integration array grid show array connect grid via inverter first maximum power extract calculated amp algorithm value power loss power compensate grid voltage reference current calculate calculated reference current compare actual current supply inverter gate signal generate make actual supply current within band reference current stabilize bus voltage voltage bus compare reference bus voltage error pass controller output controller correspond power drawn grid maintain constant bus voltage difference power power supply grid power conversion controlpower electronics controlgrid connect band algorithmpvpv inverter,"['show', 'integration', 'array', 'grid', 'show', 'array', 'connect', 'grid', 'via', 'inverter', 'first', 'maximum', 'power', 'extract', 'calculated', 'amp', 'algorithm', 'value', 'power', 'loss', 'power', 'compensate', 'grid', 'voltage', 'reference', 'current', 'calculate', 'calculated', 'reference', 'current', 'compare', 'actual', 'current', 'supply', 'inverter', 'gate', 'signal', 'generate', 'make', 'actual', 'supply', 'current', 'within', 'band', 'reference', 'current', 'stabilize', 'bus', 'voltage', 'voltage', 'bus', 'compare', 'reference', 'bus', 'voltage', 'error', 'pass', 'controller', 'output', 'controller', 'correspond', 'power', 'drawn', 'grid', 'maintain', 'constant', 'bus', 'voltage', 'difference', 'power', 'power', 'supply', 'grid', 'power', 'conversion', 'controlpower', 'electronics', 'controlgrid', 'connect', 'band', 'algorithmpvpv', 'inverter']",3
2261,66644,"Single Phase Full Wave Controlled Rectification Circuit RL. Modified Thyristor configuration<p>Single Phase Full Wave Controlled Rectification Circuit RL</p>example,power electronics,rectifier,thyristor",34,0,1,0,37,single phase full wave control rectification circuit modify thyristor phase full wave control rectification circuit rlexamplepower,"['single', 'phase', 'full', 'wave', 'control', 'rectification', 'circuit', 'modify', 'thyristor', 'phase', 'full', 'wave', 'control', 'rectification', 'circuit', 'rlexamplepower']",3
2262,66670,"MIMO-OFDM system 2x2<p>this work is a part of my thesis in ""Adaptive Receivers for MIMO-OFDM system"" at University of Mosul, this model is very useful to make a research on the MIMO-OFDM system.</p>communications,example,mimoofdm,ofdm",147,12,3,0,158,mimo ofdm work part thesis adaptive receiver mimo ofdm university useful make research mimo ofdm,"['mimo', 'ofdm', 'work', 'part', 'thesis', 'adaptive', 'receiver', 'mimo', 'ofdm', 'university', 'useful', 'make', 'research', 'mimo', 'ofdm']",5
2263,66686,"qZSI with maximum boost control<p>this model represents quasi Z source inverter triggered by maximum boost control technique. this qZSI has single stage conversion from DC-AC with boosting abilities.</p>power_conversion_control,power_electronics_control,maximum boost control,quasi z source,z source inverter",65,1,2,0,99,maximum boost controlthis represent quasi source inverter trigger maximum boost control technique single stage conversion boost ability power conversion controlpower electronics controlmaximum boost controlquasi sourcez source inverter,"['maximum', 'boost', 'controlthis', 'represent', 'quasi', 'source', 'inverter', 'trigger', 'maximum', 'boost', 'control', 'technique', 'single', 'stage', 'conversion', 'boost', 'ability', 'power', 'conversion', 'controlpower', 'electronics', 'controlmaximum', 'boost', 'controlquasi', 'sourcez', 'source', 'inverter']",1
2264,66687,"quasi z source with constant boost control<p>this model is a quasi z source inverter powered by constant boost control technique.</p>constant boost control,inverter,quasi z source inverter,z source inverter",60,1,2,0,90,quasi source constant boost controlthis quasi source inverter power constant boost control technique constant boost source inverterz source inverter,"['quasi', 'source', 'constant', 'boost', 'controlthis', 'quasi', 'source', 'inverter', 'power', 'constant', 'boost', 'control', 'technique', 'constant', 'boost', 'source', 'inverterz', 'source', 'inverter']",1
2265,66820,"Simulink block to set Arduino pinmode(pin, INPUT_PULLUP)<p>This package contains the files needed for adding an INPUT_PULLUP block to the Simulink library browser.Add the path and update the library to access the block.See ArduinoDigitalReadPullUpExample.slx for an example on using the block.Also see Arduino's documentation on pinmode() and INPUT_PULLUP.</p>arduino,pinmode,pull up,pullup",2,1,1,1,1,block set arduino pinmode pin input pullup package contains file need add input pullup block browser add path update access block see slx example block also see arduino documentation pinmode input pullup uppullup,"['block', 'set', 'arduino', 'pinmode', 'pin', 'input', 'pullup', 'package', 'contains', 'file', 'need', 'add', 'input', 'pullup', 'block', 'browser', 'add', 'path', 'update', 'access', 'block', 'see', 'slx', 'example', 'block', 'also', 'see', 'arduino', 'documentation', 'pinmode', 'input', 'pullup', 'uppullup']",7
2266,66825,"Parallel operation of a SM with an Infinite Bus<p>Parallel operation of a SM with an Infinite Bus</p>infinite bus,parallel synchronous machine",93,5,2,0,119,parallel operation infinite busparallel operation infinite businfinite busparallel synchronous machine,"['parallel', 'operation', 'infinite', 'busparallel', 'operation', 'infinite', 'businfinite', 'busparallel', 'synchronous', 'machine']",8
2267,66828,Starting the Synchronous Machine and Synchronous Condenser<p>Starting the Synchronous Machine and Synchronous Condenser</p>synchronous condenser,89,5,2,0,112,start synchronous machine synchronous synchronous machine synchronous condenser,"['start', 'synchronous', 'machine', 'synchronous', 'synchronous', 'machine', 'synchronous', 'condenser']",4
2268,66829,"Induction motor driven by DC motor (primary mover)<p>Induction motor driven by DC motor (primary mover)</p>electric_motor_control,power_conversion_control,power_electronics_control,dc motor,induction motor,primary mover",36,0,1,0,53,induction motor drive motor primary mover induction motor drive motor primary mover electric motor controlpower conversion controlpower electronics controldc motorinduction motorprimary mover,"['induction', 'motor', 'drive', 'motor', 'primary', 'mover', 'induction', 'motor', 'drive', 'motor', 'primary', 'mover', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'motorinduction', 'motorprimary', 'mover']",1
2269,66830,"Induction motor driven by DC machine Power factor correction<p>Induction motor driven by DC machinePower factor correction</p>electric_motor_control,power_conversion_control,power_electronics_control,induction motor,power factor",62,2,2,0,86,induction motor driven machine power factor motor drive machinepower factor motor controlpower conversion controlpower electronics motorpower factor,"['induction', 'motor', 'driven', 'machine', 'power', 'factor', 'motor', 'drive', 'machinepower', 'factor', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'motorpower', 'factor']",6
2270,66832,"Blocked Rotor Test - Induction Motor<p>Blocked Rotor Test - Induction Motor</p>electric_motor_control,power_electronics_control,asynchronous machines,blocked rotor test,induction motor,machine parameters",45,2,2,0,63,block rotor test induction motorblocked rotor test induction motorelectric motor controlpower electronics machinesblocked rotor testinduction motormachine parameter,"['block', 'rotor', 'test', 'induction', 'motorblocked', 'rotor', 'test', 'induction', 'motorelectric', 'motor', 'controlpower', 'electronics', 'machinesblocked', 'rotor', 'testinduction', 'motormachine', 'parameter']",3
2271,66833,"Open Circuit Test - Induction Motor<p>Open Circuit Test - Induction Motor</p>electric_motor_control,power_electronics_control,asynchronous machine,induction motor,machine parameters,open circuit test",59,2,2,0,81,open circuit test induction motoropen circuit test induction motorelectric motor controlpower electronics motormachine parametersopen circuit test,"['open', 'circuit', 'test', 'induction', 'motoropen', 'circuit', 'test', 'induction', 'motorelectric', 'motor', 'controlpower', 'electronics', 'motormachine', 'parametersopen', 'circuit', 'test']",3
2272,66834,"DC Test - Induction Motor<p>DC Test - Induction Motor</p>electric_motor_control,power_conversion_control,power_electronics_control,asynchronous machine,dc test,induction motor",20,0,1,0,24,test induction motordc test induction motorelectric motor controlpower conversion controlpower electronics machinedc testinduction motor,"['test', 'induction', 'motordc', 'test', 'induction', 'motorelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'machinedc', 'testinduction', 'motor']",1
2273,66847,"Delta Modulation for Simulink<p>Delta Modulation for Simulink, tested on R2015a</p>communications,delta modulation,simulink",10,0,1,0,11,delta modulation modulation test,"['delta', 'modulation', 'modulation', 'test']",7
2274,66890,"And here I used the ""Autosar.tlc"" is used to generate the code.<p>Here I attached the MATLAB sample model for ARXML generation. And here I used the ""Autosar.tlc"" is used to generate the code. Please validate the model and give me the solution to how to generate the ARXML without truncated.</p>simulation",10,1,2,0,7,autosar tlc generate code attach sample arxml generation autosar tlc generate code please validate give solution generate arxml without truncate,"['autosar', 'tlc', 'generate', 'code', 'attach', 'sample', 'arxml', 'generation', 'autosar', 'tlc', 'generate', 'code', 'please', 'validate', 'give', 'solution', 'generate', 'arxml', 'without', 'truncate']",0
2275,66900,kinematic model to obtain 2D position of a vehicle<p>kinematik model of 2DOF vehicle with steering wheel angle and longitudinal velocity as input</p>automotive,40,0,1,0,48,kinematic obtain position dof vehicle steer wheel angle longitudinal velocity inputautomotive,"['kinematic', 'obtain', 'position', 'dof', 'vehicle', 'steer', 'wheel', 'angle', 'longitudinal', 'velocity', 'inputautomotive']",5
2276,66931,"AM-DSBSC modulation and demodulation using Simulink<p>This is a Simulink model to generate DSBSC AM signal and demodulate the modulated waveform</p>am,signal processing,simulink",6,0,1,0,9,modulation demodulation generate signal demodulate modulate,"['modulation', 'demodulation', 'generate', 'signal', 'demodulate', 'modulate']",0
2277,66991,"Build automatically the IEEE 906 Bus European LV Test Feeder and compare to benchmark results<p>This submission contains MATLAB scripts that will build automatically the IEEE 906 Bus European LV Test Feeder in Simscape Power Systems Specialized Technology. The model is a 'quasi-steady' model, meaning it captures an operating point in the minimum number of simulation steps. This is equivalent to a power flow, but enables multiple operating points to be assessed in a time-domain environment. The model can be built both as a single model, or as a four-segment model that is connected through Model Reference. Segmenting the model allows larger models to be built more efficiently, with time savings made in both model construction and model compilation.The IEEE 906 Bus European Test Feeder  benchmark data is available at the following URL, <a href=""http://sites.ieee.org/pes-testfeeders/files/2017/08/European_LV_Test_Feeder_v2.zipThe"">http://sites.ieee.org/pes-testfeeders/files/2017/08/European_LV_Test_Feeder_v2.zipThe</a> work is based on the following references,[1] IEEE PES Distribution Systems Analysis Subcommittee Radial Test Feeders [Online], Available: <a href=""http://ewh.ieee.org/soc/pes/dsacom/testfeeders/index.html.[2]"">http://ewh.ieee.org/soc/pes/dsacom/testfeeders/index.html.[2]</a> R. C. Dugan, W. H. Kersting, S. Carneiro, R. F. Arritt, and T. E. McDermott, ""Roadmap for the IEEE PES test feeders,"" IEEE Power Systems Conference and Exposition, pp.1-4, March 2009.</p>ieee 906 bus,ieee bus,power,simulation",579,44,4,0,617,build automatically iee bus european test feeder compare benchmark resultsthis submission contain script build automatically iee bus european test feeder simscape power specialize technology quasi steady meaning capture operate point minimum number step equivalent power flow enable multiple operate point assessed time domain environment build single four segment connect reference segment allows large build efficiently time saving make construction compilation iee bus european test feeder benchmark data available follow url http site iee org testfeeders file european test feeder zipthe work base follow reference iee pes distribution analysis subcommittee radial test feeder online available http ewh iee org soc dsacom testfeeders index html dugan kersting roadmap iee pes test feeder iee power conference exposition march iee busiee,"['build', 'automatically', 'iee', 'bus', 'european', 'test', 'feeder', 'compare', 'benchmark', 'resultsthis', 'submission', 'contain', 'script', 'build', 'automatically', 'iee', 'bus', 'european', 'test', 'feeder', 'simscape', 'power', 'specialize', 'technology', 'quasi', 'steady', 'meaning', 'capture', 'operate', 'point', 'minimum', 'number', 'step', 'equivalent', 'power', 'flow', 'enable', 'multiple', 'operate', 'point', 'assessed', 'time', 'domain', 'environment', 'build', 'single', 'four', 'segment', 'connect', 'reference', 'segment', 'allows', 'large', 'build', 'efficiently', 'time', 'saving', 'make', 'construction', 'compilation', 'iee', 'bus', 'european', 'test', 'feeder', 'benchmark', 'data', 'available', 'follow', 'url', 'http', 'site', 'iee', 'org', 'testfeeders', 'file', 'european', 'test', 'feeder', 'zipthe', 'work', 'base', 'follow', 'reference', 'iee', 'pes', 'distribution', 'analysis', 'subcommittee', 'radial', 'test', 'feeder', 'online', 'available', 'http', 'ewh', 'iee', 'org', 'soc', 'dsacom', 'testfeeders', 'index', 'html', 'dugan', 'kersting', 'roadmap', 'iee', 'pes', 'test', 'feeder', 'iee', 'power', 'conference', 'exposition', 'march', 'iee', 'busiee']",0
2278,66999,"Simulink is easy to use<p>Also done Amplitude Modulation Using MATLAB, so check out.Felt awesome using Simulink for AM. I recommend others to use Simulink. It has many applications</p>signal processing",15,0,1,0,18,easy usealso amplitude modulation check felt awesome recommend others many processing,"['easy', 'usealso', 'amplitude', 'modulation', 'check', 'felt', 'awesome', 'recommend', 'others', 'many', 'processing']",8
2279,67012,"Incremental Cond MPPT algorithm is used to extract the maximum power from Solar PV array<p>If you want the above model just contact me on the email address given below. This is Complete Simulink model of Boost (Step up DC-DC) converter with feedback controller. The model is accurately designed to give output voltage very close to the reference value of the voltage. Visit the link given below to watch full tutorial/demonstration:<a href=""https://youtu.be/kh54Sh-8lYoTo"">https://youtu.be/kh54Sh-8lYoTo</a> watch video demonstration for Incremental conductance MPPT, Please visit the following link:<a href=""https://youtu.be/paOTESv_2BsTo"">https://youtu.be/paOTESv_2BsTo</a> watch all our video tutorials please, visit our youtube channel: <a href=""https://www.youtube.com/channel/UCtyNNZbSSpo2tda5MFyitLQTo"">https://www.youtube.com/channel/UCtyNNZbSSpo2tda5MFyitLQTo</a> view list of our Simulink Projects, Please, visit: <a href=""https://www.dropbox.com/s/taowv0vv2yab8v1/Price%20Info.docx?dl=0To"">https://www.dropbox.com/s/taowv0vv2yab8v1/Price%20Info.docx?dl=0To</a>, order your desired project, Please, send you orders at: <a href=""mailto:engr.niaz91@gmail.com"">engr.niaz91@gmail.com</a></p>power_conversion_control,power_electronics_control,boost converter,incremental conductance mppt,solar pv system",55,1,2,0,67,incremental cond mppt algorithm extract maximum power solar arrayif want contact email address give complete boost step converter feedback controller accurately design give output voltage close reference value voltage visit link give watch full tutorial demonstration youtu lyoto watch video demonstration incremental conductance mppt please visit follow link youtu paotesv bsto watch video tutorial please visit youtube channel youtube com channel uctynnzbsspo tda mfyitlqto view list project please visit dropbox com taowv yab price info docx order desire project please send order engr niaz gmail compower conversion controlpower electronics controlboost conductance mpptsolar,"['incremental', 'cond', 'mppt', 'algorithm', 'extract', 'maximum', 'power', 'solar', 'arrayif', 'want', 'contact', 'email', 'address', 'give', 'complete', 'boost', 'step', 'converter', 'feedback', 'controller', 'accurately', 'design', 'give', 'output', 'voltage', 'close', 'reference', 'value', 'voltage', 'visit', 'link', 'give', 'watch', 'full', 'tutorial', 'demonstration', 'youtu', 'lyoto', 'watch', 'video', 'demonstration', 'incremental', 'conductance', 'mppt', 'please', 'visit', 'follow', 'link', 'youtu', 'paotesv', 'bsto', 'watch', 'video', 'tutorial', 'please', 'visit', 'youtube', 'channel', 'youtube', 'com', 'channel', 'uctynnzbsspo', 'tda', 'mfyitlqto', 'view', 'list', 'project', 'please', 'visit', 'dropbox', 'com', 'taowv', 'yab', 'price', 'info', 'docx', 'order', 'desire', 'project', 'please', 'send', 'order', 'engr', 'niaz', 'gmail', 'compower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'conductance', 'mpptsolar']",0
2280,67034,"This simulates and animates multiple 2D kinematic vehicle models in Simulink<p>-------------------------------------------------------------------------------This is the Readme file for a simple 2D kinematic vehicle animation for N separate vehicles implemented in Matlab's Simulink. There are no special libraries or additional toolboxes required.The simulink model simulates and displays N vehicles at each timestep. This version was based on the single vehicle version located here:<a href=""https://www.mathworks.com/matlabcentral/fileexchange/54852-simple-2d-kinematic-vehicle-steering-model-and-animationSoftware"">https://www.mathworks.com/matlabcentral/fileexchange/54852-simple-2d-kinematic-vehicle-steering-model-and-animationSoftware</a> Versions Tested:-------------------------This model was developed and tested using Matlab R2014, R2015, R2016b and should work with most other versions. The animation s-function is a modified version of the level 1 m-file s-function from the Mathworks example provided in sanim.m.Writing .jpeg animation frames to disk at each animation interval slows the simulation considerably. Set animation frames per second, anim_fps, in setup.m and re-run setup.m. Don't forget to turn off your file synchronization services to avoid syncing all the new image files.Getting started:-------------------------Get started by unzipping the .zip file, changing directories to the folder, then running setup.mat the Matlb command prompt. This will clear the workspace then populate it with the necessary variables to run the Simulink model and associated animation. It will also open the Simulink model file. Press Play or Simulation | Run to execute the Simulink model. The light blue s-function block will bring up the 2D animation figure window and display the steering vehicle at anim_fps frames per second.-------------------------------------------------------------------------------Distribution file list:-------------------------------------------------------------------------------   [00_Readme.mdc.txt] - this file   [setup.m] - run this first, it will bring up the Simulink, then press play to simulate the vehicle   [createAviMovieFromAnimationSequence.m] - auxiliary m-file script for converting a sequence of .jpg images into an Avi using Matlab's VideoWriter() function.   [sanim_XY_vehicle_viz_multi.m] - Simulink m-file s-function that displays N vehicle's of Matlab graphics objects each animation interval, set by anim_fps in setup.m.   [veh_object2.m] - supporting m-file function to create vertices and faces for vehicle and tire graphics objects   [vehicle_animation_sim_multi.jpg] - desktop screenshot showing the Simulink model and animation window   [vehicle_animation_sim_multi.pdf] - printout of the Simulink block diagram in case you cannot open the Simulink   [vehicle_animation_sim_multi.slx] - Matlab/Simulink R2016b model that expressed non-holonomically constrained (rolling) CG velocities and solves for vehicle position as a function of time.   [.\anim_sequences] - folder where animation frame sequence .jpg files are stored; change this in sanim_XY_vehicle_viz_multi.m      [.\Documentation\ folder containing excerpts from lectre notes for ME620 Advanced Vehicle Dynamics-----------------------------------Marc Compere, <a href=""mailto:comperem@gmail.comcreated"">comperem@gmail.comcreated</a> : 11 Jan 2016modified: 24 Apr 2018-----------------------------------</p>2d vehicle model,agent based control,animation,automated vehicles,kinematic rolling,multiple vehicles,n vehicles,selfdriving vehicles,simple 2d animation,swarm,vehicle animation,visualization",85,6,3,0,83,animates multiple kinematic vehicle readme file simple kinematic vehicle animation separate vehicle implement special additional toolbox require display vehicle timestep version base single vehicle version locate mathworks com matlabcentral fileexchange simple kinematic vehicle steer version test develop test work version animation function modify version level file function mathworks example provide sanim write jpeg animation frame disk animation interval slow considerably set animation frame per second anim fps setup run setup forget turn file synchronization service avoid sync new image file get start get start unzipping zip file change directory folder run setup mat matlb command prompt clear workspace populate necessary variable run associate animation also open file press play run execute light blue function block bring animation figure window display steer vehicle anim fps frame per second distribution file list readme mdc txt file setup run first bring press play vehicle auxiliary file script convert sequence jpg image avi videowriter function sanim vehicle viz multi file function display vehicle graphic object animation interval set anim fps setup veh object support file function create vertex face vehicle tire graphic object vehicle animation sim multi jpg desktop screenshot show animation window vehicle animation sim multi pdf printout block diagram case open vehicle animation sim multi slx express non holonomically constrain roll velocity solve vehicle position function time anim sequence folder animation frame sequence jpg file store change sanim vehicle viz multi documentation folder contain excerpt lectre note advance vehicle dynamic marc compere comperem gmail comcreated jan modify apr vehicle modelagent base rollingmultiple vehiclesn vehiclessimple,"['animates', 'multiple', 'kinematic', 'vehicle', 'readme', 'file', 'simple', 'kinematic', 'vehicle', 'animation', 'separate', 'vehicle', 'implement', 'special', 'additional', 'toolbox', 'require', 'display', 'vehicle', 'timestep', 'version', 'base', 'single', 'vehicle', 'version', 'locate', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simple', 'kinematic', 'vehicle', 'steer', 'version', 'test', 'develop', 'test', 'work', 'version', 'animation', 'function', 'modify', 'version', 'level', 'file', 'function', 'mathworks', 'example', 'provide', 'sanim', 'write', 'jpeg', 'animation', 'frame', 'disk', 'animation', 'interval', 'slow', 'considerably', 'set', 'animation', 'frame', 'per', 'second', 'anim', 'fps', 'setup', 'run', 'setup', 'forget', 'turn', 'file', 'synchronization', 'service', 'avoid', 'sync', 'new', 'image', 'file', 'get', 'start', 'get', 'start', 'unzipping', 'zip', 'file', 'change', 'directory', 'folder', 'run', 'setup', 'mat', 'matlb', 'command', 'prompt', 'clear', 'workspace', 'populate', 'necessary', 'variable', 'run', 'associate', 'animation', 'also', 'open', 'file', 'press', 'play', 'run', 'execute', 'light', 'blue', 'function', 'block', 'bring', 'animation', 'figure', 'window', 'display', 'steer', 'vehicle', 'anim', 'fps', 'frame', 'per', 'second', 'distribution', 'file', 'list', 'readme', 'mdc', 'txt', 'file', 'setup', 'run', 'first', 'bring', 'press', 'play', 'vehicle', 'auxiliary', 'file', 'script', 'convert', 'sequence', 'jpg', 'image', 'avi', 'videowriter', 'function', 'sanim', 'vehicle', 'viz', 'multi', 'file', 'function', 'display', 'vehicle', 'graphic', 'object', 'animation', 'interval', 'set', 'anim', 'fps', 'setup', 'veh', 'object', 'support', 'file', 'function', 'create', 'vertex', 'face', 'vehicle', 'tire', 'graphic', 'object', 'vehicle', 'animation', 'sim', 'multi', 'jpg', 'desktop', 'screenshot', 'show', 'animation', 'window', 'vehicle', 'animation', 'sim', 'multi', 'pdf', 'printout', 'block', 'diagram', 'case', 'open', 'vehicle', 'animation', 'sim', 'multi', 'slx', 'express', 'non', 'holonomically', 'constrain', 'roll', 'velocity', 'solve', 'vehicle', 'position', 'function', 'time', 'anim', 'sequence', 'folder', 'animation', 'frame', 'sequence', 'jpg', 'file', 'store', 'change', 'sanim', 'vehicle', 'viz', 'multi', 'documentation', 'folder', 'contain', 'excerpt', 'lectre', 'note', 'advance', 'vehicle', 'dynamic', 'marc', 'compere', 'comperem', 'gmail', 'comcreated', 'jan', 'modify', 'apr', 'vehicle', 'modelagent', 'base', 'rollingmultiple', 'vehiclesn', 'vehiclessimple']",0
2281,67060,"Example simple Microgrid with library of PQ-based Renewables and Diesel GenSets.<p>This example is used in the ""Microgrid System Development and Analysis"" Video Series. This particular example is used in ""Part 3: Using Simscape Power Systems to Simulate Microgrids"": <a href=""https://www.mathworks.com/videos/series/microgrid-system-development-and-analysis.htmlSimscape"">https://www.mathworks.com/videos/series/microgrid-system-development-and-analysis.htmlSimscape</a> Power Systems can be used to schematically represent a one-line microgrid diagram using blocks that represent different distributed energy resources (DERs). The DERs in this example include renewables, such as solar, a diesel GenSet, and an energy storage system (ESS). Using the simple microgrid, you see how desktop simulation can be used to subject the distribution system with residential load changes or unintentional islanding of the microgrid. The included slides detail other common workflows for systems-level microgrid simulation. Using Simulink Real-time, this simple microgrid can quickly be migrated to a real-time machine for hardware-in-the-loop testing.</p>microgrid,power,renewables,simulation",1043,83,6,0,1180,example simple microgrid base renewables diesel gensets example microgrid development analysis video series particular example part simscape power microgrids mathworks com videos series microgrid development analysis htmlsimscape power schematically represent one line microgrid diagram block represent different distribute energy resource ders ders example include renewables solar diesel genset energy storage simple microgrid see desktop subject distribution residential load change unintentional islanding microgrid include slide detail common workflows level microgrid real time simple microgrid quickly migrate real time machine hardware loop test,"['example', 'simple', 'microgrid', 'base', 'renewables', 'diesel', 'gensets', 'example', 'microgrid', 'development', 'analysis', 'video', 'series', 'particular', 'example', 'part', 'simscape', 'power', 'microgrids', 'mathworks', 'com', 'videos', 'series', 'microgrid', 'development', 'analysis', 'htmlsimscape', 'power', 'schematically', 'represent', 'one', 'line', 'microgrid', 'diagram', 'block', 'represent', 'different', 'distribute', 'energy', 'resource', 'ders', 'ders', 'example', 'include', 'renewables', 'solar', 'diesel', 'genset', 'energy', 'storage', 'simple', 'microgrid', 'see', 'desktop', 'subject', 'distribution', 'residential', 'load', 'change', 'unintentional', 'islanding', 'microgrid', 'include', 'slide', 'detail', 'common', 'workflows', 'level', 'microgrid', 'real', 'time', 'simple', 'microgrid', 'quickly', 'migrate', 'real', 'time', 'machine', 'hardware', 'loop', 'test']",0
2282,67109,"This simple single phase cycloconverter model demonstrates the basic operation of cycloconverter<p>This simple single phase cycloconverter model demonstrates the basicoperation of cycloconverter to convert the fundamental frequency to a lowerfrequencyTo set the lower frequency, double click the frequency control block and change the period to 1/fL, where fL is your desire lower frequency. In this demo the lower frequency has to be the fundamental frequency divided by integer (eg. for fundamental frequency of 60Hz, the lower frequencycan be 30Hz, 15Hz, 7.5Hz, etc)</p>cycloconverter,frequency changer",13,0,1,0,22,simple single phase cycloconverter demonstrate basic operation simple single phase cycloconverter demonstrate basicoperation cycloconverter convert fundamental frequency set lower frequency double click frequency control block change period desire lower frequency demo low frequency fundamental frequency divide integer fundamental frequency lower frequencycan etc changer,"['simple', 'single', 'phase', 'cycloconverter', 'demonstrate', 'basic', 'operation', 'simple', 'single', 'phase', 'cycloconverter', 'demonstrate', 'basicoperation', 'cycloconverter', 'convert', 'fundamental', 'frequency', 'set', 'lower', 'frequency', 'double', 'click', 'frequency', 'control', 'block', 'change', 'period', 'desire', 'lower', 'frequency', 'demo', 'low', 'frequency', 'fundamental', 'frequency', 'divide', 'integer', 'fundamental', 'frequency', 'lower', 'frequencycan', 'etc', 'changer']",4
2283,67141,"Perturb and Observe MPPT for Solar PV Array With Boost Converter<p>This file just contains a boost converter, if you want full simulink model of Perturb and Observe MPPT with boost converter, just contact me on the email address given below. A perturb and Observe MPPT algorithm is used to control the MOSFET/IGBT (switch) of a boost converter to extract maximum power from the PV array. Open the link given below to watch a video demonstration:<a href=""https://youtu.be/jPBJw91Tq34Visit"">https://youtu.be/jPBJw91Tq34Visit</a> the following link to see list of all our simulink projects:<a href=""https://www.dropbox.com/s/taowv0vv2yab8v1/Price%20Info.docx?dl=0"">https://www.dropbox.com/s/taowv0vv2yab8v1/Price%20Info.docx?dl=0</a> Visit our youtube channel to watch our video tutorials:<a href=""https://www.youtube.com/channel/UCtyNNZbSSpo2tda5MFyitLQ"">https://www.youtube.com/channel/UCtyNNZbSSpo2tda5MFyitLQ</a> Order your project at: <a href=""mailto:engr.niaz91@gmail.com"">engr.niaz91@gmail.com</a></p>power_conversion_control,power_electronics_control,boost converter,perturb and oberve mppt",31,1,2,0,37,perturb observe mppt solar array boost converterthis file contain boost converter want full perturb observe mppt boost converter contact email address give perturb observe mppt algorithm control mosfet igbt switch boost converter extract maximum power array open link give watch video demonstration youtu jpbjw visit follow link see list project dropbox com taowv yab price info docx visit youtube channel watch video tutorial youtube com channel uctynnzbsspo tda mfyitlq order project engr niaz gmail compower conversion controlpower electronics controlboost oberve mppt,"['perturb', 'observe', 'mppt', 'solar', 'array', 'boost', 'converterthis', 'file', 'contain', 'boost', 'converter', 'want', 'full', 'perturb', 'observe', 'mppt', 'boost', 'converter', 'contact', 'email', 'address', 'give', 'perturb', 'observe', 'mppt', 'algorithm', 'control', 'mosfet', 'igbt', 'switch', 'boost', 'converter', 'extract', 'maximum', 'power', 'array', 'open', 'link', 'give', 'watch', 'video', 'demonstration', 'youtu', 'jpbjw', 'visit', 'follow', 'link', 'see', 'list', 'project', 'dropbox', 'com', 'taowv', 'yab', 'price', 'info', 'docx', 'visit', 'youtube', 'channel', 'watch', 'video', 'tutorial', 'youtube', 'com', 'channel', 'uctynnzbsspo', 'tda', 'mfyitlq', 'order', 'project', 'engr', 'niaz', 'gmail', 'compower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'oberve', 'mppt']",4
2284,67163,"How to speed up Simulink models that use large lookup tables.<p>Loading large lookup tables in Simulink models can be the bottle neck for the simulation speed. This is more important when you cannot load a lookup table into the base workspace or model workspace when you build a Simulink library. When you don't know how the library will be used, loading data into the base or model workspace can cause problems and thus it is bad practice to do so. This set of files shows how to load a lookup table in the mask initialization of a subsystem block and then save it to UserData. On subsequent runs, the data stored in UserData is used for the lookup table. The speed up is 10-50x. The methodology will work in very old versions of MATLAB. However, the Simulink files attached are 2018a.</p>pick of the week,potw,interpolation,large data,large lookup tables,persistent,regularizend,simulink",10,2,1,2,8,speed large lookup table load large lookup table bottle neck speed important load lookup table base workspace workspace build know load data base workspace cause problem thus bad practice set file show load lookup table mask initialization subsystem block save userdata subsequent run data store userdata lookup table speed methodology work old version however file attach pick datalarge lookup,"['speed', 'large', 'lookup', 'table', 'load', 'large', 'lookup', 'table', 'bottle', 'neck', 'speed', 'important', 'load', 'lookup', 'table', 'base', 'workspace', 'workspace', 'build', 'know', 'load', 'data', 'base', 'workspace', 'cause', 'problem', 'thus', 'bad', 'practice', 'set', 'file', 'show', 'load', 'lookup', 'table', 'mask', 'initialization', 'subsystem', 'block', 'save', 'userdata', 'subsequent', 'run', 'data', 'store', 'userdata', 'lookup', 'table', 'speed', 'methodology', 'work', 'old', 'version', 'however', 'file', 'attach', 'pick', 'datalarge', 'lookup']",0
2285,67169,"Cancel dynamic (time variant) DAC errors by a very simple digital error correction scheme<p>This is a demonstration of digital-domain ISI-error correction for a multibit CT DS ADC. Here, the ISI-error model is discrete-time, based on [1]. The idea was inspired by [2], where the static and dynamic feedback-DAC noise was corrected by digital error correction. In [2], thermometer encoder was used in DAC and the number of correction coefficients is 3M, where M is the number of DAC unit-elements. This demonstration shows that using dynamic element matching DAC encoder (DWA) can reduce the number of lookup-table correction coefficient from 3M to 1, which should make the ISI-error mitigation by digital error correction more viable. The correction and calibration method demonstrated here is further documented in [3]. You need Delta-Sigma toolbox to run this demonstration.References: [1] L. Risbo, R. Hezar, B. Kelleci, H. Kiper, and M. Fares, âDigital approaches to ISI-mitigation in high-resolution oversampled multi-level D/A converters,â IEEE J. Solid-State Circuits, vol. 46, no. 12. Dec. 2011. [2] M. Runge and F. Gerfers âA Digital Compensation Method Canceling Static and Non-Linear Time-Variant Feedback DAC Errors in Sigma-Delta Analog-to-Digital Converters,â in proc IEEE International Symposium on Circuits and Systems (ISCAS) 2017, May 2017. [3] Marko Neitola, ""Two-Stage Internal DAC Mismatch Mitigation for Continuous-Time Delta-Sigma Converter, "" Submitted on Aug 7th 2019 to IEEE Nordic Circuits and Systems Conference 2019.</p>data converters,data weighted averaging,delta sigma data conversion,intersymbol interference,simulink",387,34,4,0,412,cancel dynamic time variant dac error simple digital error correction schemethis demonstration digital domain isi error correction multibit adc isi error discrete time base idea inspire static dynamic feedback dac noise correct digital error correction thermometer encoder dac number correction coefficient number dac unit element demonstration show dynamic element match dac encoder dwa reduce number lookup table correction coefficient make isi error mitigation digital error correction viable correction calibration method demonstrate documented need delta sigma toolbox run demonstration reference risbo hezar kelleci kiper fare digital approach isi mitigation high resolution oversampled multi level converter iee solid state circuit vol dec runge gerfers digital compensation method cancel static non linear time variant feedback dac error sigma delta analog digital converter proc iee international symposium circuit iscas may marko neitola two stage internal dac mismatch mitigation continuous time delta sigma converter submit aug iee nordic circuit conference data convertersdata weight averagingdelta sigma data,"['cancel', 'dynamic', 'time', 'variant', 'dac', 'error', 'simple', 'digital', 'error', 'correction', 'schemethis', 'demonstration', 'digital', 'domain', 'isi', 'error', 'correction', 'multibit', 'adc', 'isi', 'error', 'discrete', 'time', 'base', 'idea', 'inspire', 'static', 'dynamic', 'feedback', 'dac', 'noise', 'correct', 'digital', 'error', 'correction', 'thermometer', 'encoder', 'dac', 'number', 'correction', 'coefficient', 'number', 'dac', 'unit', 'element', 'demonstration', 'show', 'dynamic', 'element', 'match', 'dac', 'encoder', 'dwa', 'reduce', 'number', 'lookup', 'table', 'correction', 'coefficient', 'make', 'isi', 'error', 'mitigation', 'digital', 'error', 'correction', 'viable', 'correction', 'calibration', 'method', 'demonstrate', 'documented', 'need', 'delta', 'sigma', 'toolbox', 'run', 'demonstration', 'reference', 'risbo', 'hezar', 'kelleci', 'kiper', 'fare', 'digital', 'approach', 'isi', 'mitigation', 'high', 'resolution', 'oversampled', 'multi', 'level', 'converter', 'iee', 'solid', 'state', 'circuit', 'vol', 'dec', 'runge', 'gerfers', 'digital', 'compensation', 'method', 'cancel', 'static', 'non', 'linear', 'time', 'variant', 'feedback', 'dac', 'error', 'sigma', 'delta', 'analog', 'digital', 'converter', 'proc', 'iee', 'international', 'symposium', 'circuit', 'iscas', 'may', 'marko', 'neitola', 'two', 'stage', 'internal', 'dac', 'mismatch', 'mitigation', 'continuous', 'time', 'delta', 'sigma', 'converter', 'submit', 'aug', 'iee', 'nordic', 'circuit', 'conference', 'data', 'convertersdata', 'weight', 'averagingdelta', 'sigma', 'data']",5
2286,67193,"The motion of a point mass influenced by the forces of gravity and air friction.<p>This model is the simulation of a point mass moving in two dimensions. You can select the initial position and velocity in both axes. The coefficient of friction and acceleration due to gravity are also adjustable.</p>friction,gravity,projectile motion",27,1,2,0,28,motion point mass influence force gravity air friction point mass move two dimension select initial position velocity axes coefficient friction acceleration due gravity also adjustable motion,"['motion', 'point', 'mass', 'influence', 'force', 'gravity', 'air', 'friction', 'point', 'mass', 'move', 'two', 'dimension', 'select', 'initial', 'position', 'velocity', 'axes', 'coefficient', 'friction', 'acceleration', 'due', 'gravity', 'also', 'adjustable', 'motion']",5
2287,67212,"Flat Top sampling (PAM) Modulator + aliasing effect or signal rconstruction through filtering<p>note that the demodulated signal in case of cascaded filter is better than the case of lowpass only</p>aliasing effect,balanced modulator,demodulation,hold,lowpass,sample,signal rconstruction",9,0,1,0,14,flat top sampling pam modulator aliasing effect signal rconstruction filteringnote demodulate signal case cascade filter good case lowpass onlyaliasing effectbalanced rconstruction,"['flat', 'top', 'sampling', 'pam', 'modulator', 'aliasing', 'effect', 'signal', 'rconstruction', 'filteringnote', 'demodulate', 'signal', 'case', 'cascade', 'filter', 'good', 'case', 'lowpass', 'onlyaliasing', 'effectbalanced', 'rconstruction']",8
2288,67214,"This is a complete dynamic model of induction motor using d-q reference frame.<p>This is the Simulink simulation of dynamic d-q model of a three phase induction motor in state space form. The details on the construction of sub models for the induction motor are given and their implementation in SIMULINK delineated. The required equations are stated at the beginning and then a d-q model of induction motor is developed. This model can be used in other applications such as designing an adjustable speed drive.The complete equations for model are given in the paper:<a href=""http://www.ijettjournal.org/2015/volume-24/number-5/IJETT-V24P245.pdf"">http://www.ijettjournal.org/2015/volume-24/number-5/IJETT-V24P245.pdf</a></p>electric_motor_control,power_electronics_control,electrical,machine modeling",192,18,4,0,200,complete dynamic induction motor reference frame dynamic three phase induction motor state space form detail construction sub induction motor give implementation delineate required equation state begin induction motor develop application design adjustable speed drive complete equation give paper http ijettjournal org volume number ijett pdfelectric motor controlpower electronics,"['complete', 'dynamic', 'induction', 'motor', 'reference', 'frame', 'dynamic', 'three', 'phase', 'induction', 'motor', 'state', 'space', 'form', 'detail', 'construction', 'sub', 'induction', 'motor', 'give', 'implementation', 'delineate', 'required', 'equation', 'state', 'begin', 'induction', 'motor', 'develop', 'application', 'design', 'adjustable', 'speed', 'drive', 'complete', 'equation', 'give', 'paper', 'http', 'ijettjournal', 'org', 'volume', 'number', 'ijett', 'pdfelectric', 'motor', 'controlpower', 'electronics']",3
2289,67231,"132kv grid connected wind generator, 25MVAR STATCOM, Voltage stability<p>This simulation presents a method to enhance the stability of a grid-connected wind generator composed of a fixed-speed wind turbine generator system (WTGS) using a FACTS devices of static synchronous compensator (STATCOM). Fault create at t=1.0sec to 1.02 sec and observe simulation waveform. Finally observe Simulation base comparison of system without STATCOM and system with STATCOM and Analyses transient voltage stability of wind generator.This  research work in Simulation base Analysis of transient voltage Stability of grid connected generator using STATCOM.</p>facts,grid intigration,location of statcom,pv curve,scig,stability,statcom,transient voltage stability,wind",1231,77,7,0,1515,grid connect wind generator mvar statcom voltage stabilitythis present method enhance stability grid connect wind generator compose fix speed wind turbine generator wtgs fact device static synchronous compensator statcom fault create sec sec observe waveform finally observe base comparison without statcom statcom analyse transient voltage stability wind generator research work base analysis transient voltage stability grid connect generator statcom factsgrid statcompv voltage stabilitywind,"['grid', 'connect', 'wind', 'generator', 'mvar', 'statcom', 'voltage', 'stabilitythis', 'present', 'method', 'enhance', 'stability', 'grid', 'connect', 'wind', 'generator', 'compose', 'fix', 'speed', 'wind', 'turbine', 'generator', 'wtgs', 'fact', 'device', 'static', 'synchronous', 'compensator', 'statcom', 'fault', 'create', 'sec', 'sec', 'observe', 'waveform', 'finally', 'observe', 'base', 'comparison', 'without', 'statcom', 'statcom', 'analyse', 'transient', 'voltage', 'stability', 'wind', 'generator', 'research', 'work', 'base', 'analysis', 'transient', 'voltage', 'stability', 'grid', 'connect', 'generator', 'statcom', 'factsgrid', 'statcompv', 'voltage', 'stabilitywind']",4
2290,67268,"Simulink Block of LQR<p>It is easy to optimize Q and R matrices with online process.Please see the help file to define the block parameters.</p>control design,lqr,optimization,simulink",19,1,2,0,19,block lqrit easy optimize matrix online process please see help file define block parameter control,"['block', 'lqrit', 'easy', 'optimize', 'matrix', 'online', 'process', 'please', 'see', 'help', 'file', 'define', 'block', 'parameter', 'control']",7
2291,67312,"This is a modification to sldemo_eml_galaxy that gives particle count data and velocity.<p>This is a modification to the demo found here.<a href=""https://www.mathworks.com/help/simulink/examples/spiral-galaxy-formation-simulation-using-matlab-function-blocks.htmlIt"">https://www.mathworks.com/help/simulink/examples/spiral-galaxy-formation-simulation-using-matlab-function-blocks.htmlIt</a> allows the user to select one of the galaxies, a bounding radius in parsecs, and will give the amount of particles within the bounding radius when the end time is arrived at. This allows the user to simply find the relative distribution of a galaxy due to a galactic interaction.Each galaxy contains 1000 particles. The initial positions, velocities, mass, and radii can be inputted. The x, y, and z velocities are also shown. If you require only 2 galaxies, you can delete the third ""construct galaxy block"" and all its constituent inputs and traces, and it will run the same.If you require more than 3, you can copy the ""construct galaxy"" block and its inputs, and then hook the output up to the ""matrix concatenation""  block.The amount of particles initially in each body can be altered by double clicking on the ""construct galaxy"" block and inputting a ""numberOfBodies"" field. It is recommended that the user reads the README document attached.I am fairly sure this will work with releases newer than Simulink 8.9, but contact if it does not.I will modify it to make it easier to use in the future.Please contact with issues or comments.</p>galaxy,galaxy model,galaxy simulation,simulation,simulink,simulink galaxy,simulink galaxy model,simulink galaxy simulation",42,1,2,0,46,modification sldemo eml galaxy give particle count data velocity modification demo find mathworks com help example spiral galaxy formation function block htmlit allows user select one galaxy bound radius parsecs give amount particle within bound radius end time arrive allows user simply find relative distribution galaxy due galactic interaction galaxy contain particle initial position velocity mass radius inputted velocity also show require galaxy delete third construct galaxy block constituent input trace run require copy construct galaxy block input hook output matrix concatenation block amount particle initially body altered double click construct galaxy block inputting numberofbodies field recommend user read readme document attach fairly sure work release new contact modify make easy future please contact issue comment galaxygalaxy modelgalaxy galaxy galaxy,"['modification', 'sldemo', 'eml', 'galaxy', 'give', 'particle', 'count', 'data', 'velocity', 'modification', 'demo', 'find', 'mathworks', 'com', 'help', 'example', 'spiral', 'galaxy', 'formation', 'function', 'block', 'htmlit', 'allows', 'user', 'select', 'one', 'galaxy', 'bound', 'radius', 'parsecs', 'give', 'amount', 'particle', 'within', 'bound', 'radius', 'end', 'time', 'arrive', 'allows', 'user', 'simply', 'find', 'relative', 'distribution', 'galaxy', 'due', 'galactic', 'interaction', 'galaxy', 'contain', 'particle', 'initial', 'position', 'velocity', 'mass', 'radius', 'inputted', 'velocity', 'also', 'show', 'require', 'galaxy', 'delete', 'third', 'construct', 'galaxy', 'block', 'constituent', 'input', 'trace', 'run', 'require', 'copy', 'construct', 'galaxy', 'block', 'input', 'hook', 'output', 'matrix', 'concatenation', 'block', 'amount', 'particle', 'initially', 'body', 'altered', 'double', 'click', 'construct', 'galaxy', 'block', 'inputting', 'numberofbodies', 'field', 'recommend', 'user', 'read', 'readme', 'document', 'attach', 'fairly', 'sure', 'work', 'release', 'new', 'contact', 'modify', 'make', 'easy', 'future', 'please', 'contact', 'issue', 'comment', 'galaxygalaxy', 'modelgalaxy', 'galaxy', 'galaxy']",0
2292,67324,"Boost Converter with Analog PI Controller (Used only Op Amp & 555 Timer)<p>Boost Converter with Analog PI Controller. The PI controller used +-5V supply to work. It does not requires any digital controller. It only need five operational amplifiers and one 555 timer to work. It is suitable for making closed-loop DC-DC converter as hobby of for final year project with low budget (using the digital controller to implement PI is expensive). Please note this is just a simulation and it never being tested with actual hardware.</p>power_conversion_control,power_electronics_control,555 timer,analog,boost converter,closed loop,converter,dcdc converter,operational amplifier,pi controller,sawtooth generator",63,0,1,0,93,boost converter analog controller amp timer boost converter analog controller controller supply work require digital controller need five operational amplifier one timer work suitable make closed loop converter hobby final year project low budget digital controller implement expensive please note never test actual hardware power conversion controlpower electronics control converterclosed amplifierpi generator,"['boost', 'converter', 'analog', 'controller', 'amp', 'timer', 'boost', 'converter', 'analog', 'controller', 'controller', 'supply', 'work', 'require', 'digital', 'controller', 'need', 'five', 'operational', 'amplifier', 'one', 'timer', 'work', 'suitable', 'make', 'closed', 'loop', 'converter', 'hobby', 'final', 'year', 'project', 'low', 'budget', 'digital', 'controller', 'implement', 'expensive', 'please', 'note', 'never', 'test', 'actual', 'hardware', 'power', 'conversion', 'controlpower', 'electronics', 'control', 'converterclosed', 'amplifierpi', 'generator']",3
2293,67325,"A simulator for studying the analog response of the PIR sensor<p>The model can be used by engineers to design features of the Fresnel Lens, amplifier circuit, and sensor properties during the development phase of a PIR-based solution. The simulator can be used to simulate the analog response of a PIR sensor with different properties and Fresnel lens. This software tool will be an aid to the PIR sensor and Fresnel lens designers for simulating the sensor and lens response before building them for specific applications.In the Lens Property section, Fresnel lens of different specifications can be simulated by specifying the number of sectors, span, and range of each sector. If a particular sector is to be omitted, the corresponding distance can be set to zero. The sliding bars for Distance, Width and Velocity can be used to evaluate the sensor output for different scenarios. The plot titled FoV Output displays the output generated by each sector of the lens and the plot titled Final Output displays the simulated waveform at the output of the PIR amplifier circuit. The plot titled VPP vs Distance allows one to determine the model parameters using training data from an experiment.For more detail please read the paper titled ""Modeling the Analog Response of Passive Infrared Sensor"".Link: <a href=""https://doi.org/10.1016/j.sna.2018.05.002"">https://doi.org/10.1016/j.sna.2018.05.002</a></p>gui,simulation,simulink",48,4,2,0,56,study analog response pir sensorthe engineer design feature fresnel lens amplifier circuit sensor property development phase pir base solution analog response pir sensor different property fresnel lens software tool aid pir sensor fresnel lens designer sensor lens response building specific application lens property section fresnel lens different specification specify number sector span range sector particular sector omit corresponding distance set zero slide bar distance width velocity evaluate sensor output different scenario plot title fov output display output generate sector lens plot title final output display waveform output pir amplifier circuit plot title vpp distance allow one determine parameter train data experiment detail please read paper title analog response passive infrared sensor link doi org sna,"['study', 'analog', 'response', 'pir', 'sensorthe', 'engineer', 'design', 'feature', 'fresnel', 'lens', 'amplifier', 'circuit', 'sensor', 'property', 'development', 'phase', 'pir', 'base', 'solution', 'analog', 'response', 'pir', 'sensor', 'different', 'property', 'fresnel', 'lens', 'software', 'tool', 'aid', 'pir', 'sensor', 'fresnel', 'lens', 'designer', 'sensor', 'lens', 'response', 'building', 'specific', 'application', 'lens', 'property', 'section', 'fresnel', 'lens', 'different', 'specification', 'specify', 'number', 'sector', 'span', 'range', 'sector', 'particular', 'sector', 'omit', 'corresponding', 'distance', 'set', 'zero', 'slide', 'bar', 'distance', 'width', 'velocity', 'evaluate', 'sensor', 'output', 'different', 'scenario', 'plot', 'title', 'fov', 'output', 'display', 'output', 'generate', 'sector', 'lens', 'plot', 'title', 'final', 'output', 'display', 'waveform', 'output', 'pir', 'amplifier', 'circuit', 'plot', 'title', 'vpp', 'distance', 'allow', 'one', 'determine', 'parameter', 'train', 'data', 'experiment', 'detail', 'please', 'read', 'paper', 'title', 'analog', 'response', 'passive', 'infrared', 'sensor', 'link', 'doi', 'org', 'sna']",5
2294,67374,"Practical Design and Application of Model Predictive Control- Chapter 3<p>These are the files for Chapter 3 for the book "" Practical Design and Application of Model Predictive Control"" by Elsevier (eBook ISBN: 9780128139196, Paperback ISBN: 9780128139189).To practice system identification and MPC design processes, we introduce the famous double-mass spring plant model (section 3.4). In section 3.5 we perform system identification on the introduced plant. Using the developed model, we walk the reader through a step by step process to design the MPC controller (section 3.6). In section 3.7, we combine the controller with the double-mass spring model to perform a closed loop simulation to assess the performance of the controller. An application problem concludes the chapter to reinforce learnings.To connect with Authors, please visit: <a href=""https://www.practicalmpc.com/"">https://www.practicalmpc.com/</a></p>mpc,system identification",50,0,1,0,48,practical design application predictive control chapter file chapter book practical design application predictive control elsevier ebook isbn paperback isbn practice identification mpc design process introduce famous double mass spring plant section section perform identification introduce plant develop walk reader step step process design mpc controller section section combine controller double mass spring perform close loop ass performance controller application problem conclude chapter reinforce learning connect author please visit practicalmpc com mpcsystem identification,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'file', 'chapter', 'book', 'practical', 'design', 'application', 'predictive', 'control', 'elsevier', 'ebook', 'isbn', 'paperback', 'isbn', 'practice', 'identification', 'mpc', 'design', 'process', 'introduce', 'famous', 'double', 'mass', 'spring', 'plant', 'section', 'section', 'perform', 'identification', 'introduce', 'plant', 'develop', 'walk', 'reader', 'step', 'step', 'process', 'design', 'mpc', 'controller', 'section', 'section', 'combine', 'controller', 'double', 'mass', 'spring', 'perform', 'close', 'loop', 'ass', 'performance', 'controller', 'application', 'problem', 'conclude', 'chapter', 'reinforce', 'learning', 'connect', 'author', 'please', 'visit', 'practicalmpc', 'com', 'mpcsystem', 'identification']",0
2295,67400,"Practical Design and Application of Model Predictive Control- Chapter 8<p>These are the files for Chapter 8 for the book "" Practical Design and Application of Model Predictive Control"" by Elsevier (eBook ISBN: 9780128139196, Paperback ISBN: 9780128139189). A thermoelectrical PV model  is used as a testbed to demonstrate the effectiveness of MPC.  Reference signal generation for the controller is discussed in section 8.3. The identification and linearization of the plant are discussed in section 8.4. The detailed process to design MPC controller for the PV module is covered in section 8.6. The controller is integrated with the plant in section 8.7. To connect with Authors, please visit: <a href=""https://www.practicalmpc.com/"">https://www.practicalmpc.com/</a></p>mpc,photovoltaic,pv,power_conversion_control,power_electronics_control",159,14,2,0,146,practical design application predictive control chapter file chapter book practical design application predictive control elsevier ebook isbn paperback isbn testbed demonstrate effectiveness mpc reference signal generation controller discuss section identification linearization plant discuss section detailed process design mpc controller module cover section controller integrate plant section connect author please visit practicalmpc com conversion controlpower electronics control,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'file', 'chapter', 'book', 'practical', 'design', 'application', 'predictive', 'control', 'elsevier', 'ebook', 'isbn', 'paperback', 'isbn', 'testbed', 'demonstrate', 'effectiveness', 'mpc', 'reference', 'signal', 'generation', 'controller', 'discuss', 'section', 'identification', 'linearization', 'plant', 'discuss', 'section', 'detailed', 'process', 'design', 'mpc', 'controller', 'module', 'cover', 'section', 'controller', 'integrate', 'plant', 'section', 'connect', 'author', 'please', 'visit', 'practicalmpc', 'com', 'conversion', 'controlpower', 'electronics', 'control']",4
2296,67401,"Practical Design and Application of Model Predictive Control- Chapter 9<p>These are the files for Chapter 9 for the book "" Practical Design and Application of Model Predictive Control"" by Elsevier (eBook ISBN: 9780128139196, Paperback ISBN: 9780128139189). This chapter guides the user through the process of controlling speed of a DC motor using MPC and run the controller on a real time hard-ware. To collect data for system identification, run Chapter_9_Section_6_Model.slx and then Chapter_9_Section_6_Script.m to plot the results. It is assumed that the user has Arduino Mega connected per instructions in chapter_9.Run Chapter_9_Section_7_Script.m to assess nonlinearity of the motor. In this step, the data of the DC motor is already embedded in the script. Use your collected data instead of the one in the script.Run Chapter_9_Section_8_Script.m to perform system identification. In folder Section_9, you will find the 3 linear models for the DC motor. You can use these to create MPC controller. The MPC sessions are saved under MPC_DesignTask_Chapter_9_Section_9_MPC_1.mat , MPC_DesignTask_Chapter_9_Section_9_MPC_2.mat and MPC_DesignTask_Chapter_9_Section_9_MPC_3.matThe exported MPC controllers are saved under Motor_Linear_MPC_Mode_1.mat, Motor_Linear_MPC_Mode_2.mat and Motor_Linear_MPC_Mode_3.matTo run the Multi-Mode MPC controller on Arduino, go to Chapter_9/Section_10 folder and follow these instructions:Make sure the motor hardware and the Arduino Mega board are connected to the computer with an open session of MatlabÂ®(preferably R2017a). Set MatlabÂ® directory to Chapter_9/Section_10 directory. In the MatlabÂ® command window load the MPC controller .mat files by typing the commands load Motor_Linear_MPC_Mode_1.mat; load Motor_Linear_MPC_Mode_2.mat; load Mo-tor_Linear_MPC_Mode_3.mat. Open SimulinkÂ® model Chapter_9_Section_10_Model_1.slx. Then Click on the Run button to generate code from the model, compile and deploy into the Arduino Mega.</p>arduino,dc,motor,mpc,multi,system identification,electric_motor_control,power_conversion_control,power_electronics_control",104,9,3,3,98,practical design application predictive control chapter file chapter book practical design application predictive control elsevier ebook isbn paperback isbn chapter guide user process control speed motor mpc run controller real time hard ware collect data identification run chapter section slx chapter section script plot result assume user arduino mega connect per instruction chapter run chapter section script assess nonlinearity motor step data motor already embed script collect data instead one script run chapter section script perform identification folder section find linear motor create mpc controller mpc session save mpc designtask chapter section mpc mat mpc designtask chapter section mpc mat mpc designtask chapter section mpc matthe export mpc controller save motor linear mpc mode mat motor linear mpc mode mat motor linear mpc mode matto run multi mode mpc controller arduino chapter section folder follow instruction make sure motor hardware arduino mega board connect computer open session preferably set directory chapter section directory command window load mpc controller mat file type command load motor linear mpc mode mat load motor linear mpc mode mat load tor linear mpc mode mat open chapter section slx click run button generate code compile deploy arduino mega motor controlpower conversion controlpower electronics control,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'file', 'chapter', 'book', 'practical', 'design', 'application', 'predictive', 'control', 'elsevier', 'ebook', 'isbn', 'paperback', 'isbn', 'chapter', 'guide', 'user', 'process', 'control', 'speed', 'motor', 'mpc', 'run', 'controller', 'real', 'time', 'hard', 'ware', 'collect', 'data', 'identification', 'run', 'chapter', 'section', 'slx', 'chapter', 'section', 'script', 'plot', 'result', 'assume', 'user', 'arduino', 'mega', 'connect', 'per', 'instruction', 'chapter', 'run', 'chapter', 'section', 'script', 'assess', 'nonlinearity', 'motor', 'step', 'data', 'motor', 'already', 'embed', 'script', 'collect', 'data', 'instead', 'one', 'script', 'run', 'chapter', 'section', 'script', 'perform', 'identification', 'folder', 'section', 'find', 'linear', 'motor', 'create', 'mpc', 'controller', 'mpc', 'session', 'save', 'mpc', 'designtask', 'chapter', 'section', 'mpc', 'mat', 'mpc', 'designtask', 'chapter', 'section', 'mpc', 'mat', 'mpc', 'designtask', 'chapter', 'section', 'mpc', 'matthe', 'export', 'mpc', 'controller', 'save', 'motor', 'linear', 'mpc', 'mode', 'mat', 'motor', 'linear', 'mpc', 'mode', 'mat', 'motor', 'linear', 'mpc', 'mode', 'matto', 'run', 'multi', 'mode', 'mpc', 'controller', 'arduino', 'chapter', 'section', 'folder', 'follow', 'instruction', 'make', 'sure', 'motor', 'hardware', 'arduino', 'mega', 'board', 'connect', 'computer', 'open', 'session', 'preferably', 'set', 'directory', 'chapter', 'section', 'directory', 'command', 'window', 'load', 'mpc', 'controller', 'mat', 'file', 'type', 'command', 'load', 'motor', 'linear', 'mpc', 'mode', 'mat', 'load', 'motor', 'linear', 'mpc', 'mode', 'mat', 'load', 'tor', 'linear', 'mpc', 'mode', 'mat', 'open', 'chapter', 'section', 'slx', 'click', 'run', 'button', 'generate', 'code', 'compile', 'deploy', 'arduino', 'mega', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",0
2297,67498,"Direct Torque Control (DTC) of Induction Motor Using Space Vector Pulse Width Modulation (SVPWM)<p>A Direct Torque Controlled (DTC) Induction Motor (IM) drive has been implemented using Space Vector Pulse Width Modulation (SVPWM). The default 'Asynchronous Machine SI Units' and 'SVPWM Generator (2-Level)' blocks are used to reduce complexity and facilitate understanding.For simulation with the 'Driving cycle' speed reference and 'Variable load' torque reference, set the 'Stop time' to '11'.To prevent a crash due to low-level graphics error, use software OpenGL instead of using the graphics hardware. Enter  in the MATLAB 'Command Window' (without the braces) and restart MATLAB. For resolving further low-level graphics issues, enter  in the MATLAB 'Command Window' (without the braces).</p>electric_motor_control,power_conversion_control,power_electronics_control,asynchronous motor,direct torque control,dtc,im,induction motor,pulse width modulation,space vector,space vector modulation,svm,svpwm",129,4,2,0,143,direct torque control dtc induction motor space vector pulse width modulation svpwm direct torque control dtc induction motor drive implement space vector pulse width modulation svpwm default asynchronous machine unit svpwm generator level block reduce complexity facilitate understand drive cycle speed reference variable load torque reference set stop time prevent crash due low level graphic error software opengl instead graphic hardware enter command window without brace restart resolve low level graphic issue enter command window without brace electric motor controlpower conversion controlpower electronics motordirect torque motorpulse width modulationspace vectorspace vector,"['direct', 'torque', 'control', 'dtc', 'induction', 'motor', 'space', 'vector', 'pulse', 'width', 'modulation', 'svpwm', 'direct', 'torque', 'control', 'dtc', 'induction', 'motor', 'drive', 'implement', 'space', 'vector', 'pulse', 'width', 'modulation', 'svpwm', 'default', 'asynchronous', 'machine', 'unit', 'svpwm', 'generator', 'level', 'block', 'reduce', 'complexity', 'facilitate', 'understand', 'drive', 'cycle', 'speed', 'reference', 'variable', 'load', 'torque', 'reference', 'set', 'stop', 'time', 'prevent', 'crash', 'due', 'low', 'level', 'graphic', 'error', 'software', 'opengl', 'instead', 'graphic', 'hardware', 'enter', 'command', 'window', 'without', 'brace', 'restart', 'resolve', 'low', 'level', 'graphic', 'issue', 'enter', 'command', 'window', 'without', 'brace', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'motordirect', 'torque', 'motorpulse', 'width', 'modulationspace', 'vectorspace', 'vector']",4
2298,67520,"This block causes Simulink to advance simulated time at the same average rate as wall-clock time<p>This is the readme file for Soft Real Time Simulink Block for Pacing Simulink Simulationsand associated c-mex S-functions:   (1) sfun_getSystemClockTimeval.c   (2) sfun_sleep.c   (3) sfun_output_to_console.cThe goal of this Simulink model is to cause the Simulink simulation to advance simulatedtime forward at the same average rate as real wall-clock time.  Soft real timeis achieved by adding a delay to cause a match between the total elapsed simulation time andtotal elapsed wall-clock time. Because of this there is very little or no drift over manyseconds. There will always be some jitter when attempting soft-real-time on a non-real-timeoperating system like Windows, standard linux or MacOS. Useful clock resolution is around10ms on Windows machines and better in Linux or MacOS. This limits Sleep() or usleep()'sability to pause reliably at much less.The C-MEX S-function sfun_sleep.c has a user-specified sample time default of 0.01(s).This is different from the base simulation sample time of h_fixed=0.001(s).To run, double click the light blue box in upper left to initialize h_fixed=0.001(s).This block is similar to the Pace block provided in both the Aerospace Blockset and in thebase Simulink library as of Matlab R2018a. However, it provides two additionalfeatures that the Pace blocks and other user-contributed Soft Real Time blocks do not provide:(1) Full source is provided and soft-real-time is achieved through a combination of C-mexs-functions and Similink code.(2) There is no software limit on how many instances can run at a time on a single computeror within a single or multiple instances of Matlab open on a single computer.This code was developed on R2016b and is tested on Windows 10 using the MinGW 64-bit Compiler.---------------------------------------------------------------------------To install and get running:- unzip .zip file into an empty folder- open Matlab and compile the three C-mex s-functions with:    mex sfun_getSystemClockTimeval.c    mex sfun_sleep.c    mex sfun_sim_time_to_console.c- open the Simulink model and press play: soft_real_time_block.slx**-&gt; double click the light blue box in upper left to     initialize h_fixed=0.001(s).---------------------------------------------------------------------------Marc <a href=""mailto:Comperecomperem@gmail.comcreated"">Comperecomperem@gmail.comcreated</a> : 28 May 2018modified: 29 May 2018</p>gettimeofday,pace,print to console,simulation pace,simulink,soft real time,system time,timeval",44,5,4,0,40,block cause advance time average rate wall clock timethis readme file soft real time block pace associate mex function sfun sfun sleep sfun output console cthe goal cause advance forward average rate real wall clock time soft real timeis achieve add delay cause match total elapse time andtotal elapse wall clock time little drift manyseconds always jitter attempt soft real time non real timeoperating like window standard linux macos useful clock resolution around window machine well linux macos limit sleep usleep sability pause reliably much less mex function sfun sleep user specify sample time default different base sample time fix run double click light blue box upper leave initialize fixed block similar pace block provide aerospace blockset thebase however provide two pace block user contribute soft real time block provide full source provide soft real time achieve combination mexs function similink code software limit many instance run time single computeror within single multiple instance open single computer code develop test window mingw bit compiler install get run unzip zip file empty folder open compile three mex function mex sfun mex sfun sleep mex sfun sim time console open press play soft real time block slx double click light blue box upper leave initialize fixed marc comperecomperem gmail comcreated may modify may real timesystem timetimeval,"['block', 'cause', 'advance', 'time', 'average', 'rate', 'wall', 'clock', 'timethis', 'readme', 'file', 'soft', 'real', 'time', 'block', 'pace', 'associate', 'mex', 'function', 'sfun', 'sfun', 'sleep', 'sfun', 'output', 'console', 'cthe', 'goal', 'cause', 'advance', 'forward', 'average', 'rate', 'real', 'wall', 'clock', 'time', 'soft', 'real', 'timeis', 'achieve', 'add', 'delay', 'cause', 'match', 'total', 'elapse', 'time', 'andtotal', 'elapse', 'wall', 'clock', 'time', 'little', 'drift', 'manyseconds', 'always', 'jitter', 'attempt', 'soft', 'real', 'time', 'non', 'real', 'timeoperating', 'like', 'window', 'standard', 'linux', 'macos', 'useful', 'clock', 'resolution', 'around', 'window', 'machine', 'well', 'linux', 'macos', 'limit', 'sleep', 'usleep', 'sability', 'pause', 'reliably', 'much', 'less', 'mex', 'function', 'sfun', 'sleep', 'user', 'specify', 'sample', 'time', 'default', 'different', 'base', 'sample', 'time', 'fix', 'run', 'double', 'click', 'light', 'blue', 'box', 'upper', 'leave', 'initialize', 'fixed', 'block', 'similar', 'pace', 'block', 'provide', 'aerospace', 'blockset', 'thebase', 'however', 'provide', 'two', 'pace', 'block', 'user', 'contribute', 'soft', 'real', 'time', 'block', 'provide', 'full', 'source', 'provide', 'soft', 'real', 'time', 'achieve', 'combination', 'mexs', 'function', 'similink', 'code', 'software', 'limit', 'many', 'instance', 'run', 'time', 'single', 'computeror', 'within', 'single', 'multiple', 'instance', 'open', 'single', 'computer', 'code', 'develop', 'test', 'window', 'mingw', 'bit', 'compiler', 'install', 'get', 'run', 'unzip', 'zip', 'file', 'empty', 'folder', 'open', 'compile', 'three', 'mex', 'function', 'mex', 'sfun', 'mex', 'sfun', 'sleep', 'mex', 'sfun', 'sim', 'time', 'console', 'open', 'press', 'play', 'soft', 'real', 'time', 'block', 'slx', 'double', 'click', 'light', 'blue', 'box', 'upper', 'leave', 'initialize', 'fixed', 'marc', 'comperecomperem', 'gmail', 'comcreated', 'may', 'modify', 'may', 'real', 'timesystem', 'timetimeval']",0
2299,67523,"The PI controller with anti windup (clamping) is implemented using code.<p>When the PI controller is implemented into hardware, the conventional PI controller or the Integrator block in Simulink cannot be used. This code represent these block in the form of code so that it can be transfer to the hardware.</p>antiwindup,dsp,fpga,hardware implementation,microcontroller,pi,pi code,pi controller,pi hardware",33,4,2,0,36,controller anti windup clamp implement code controller implement hardware conventional controller integrator block code represent block form code transfer hardware codepi controllerpi hardware,"['controller', 'anti', 'windup', 'clamp', 'implement', 'code', 'controller', 'implement', 'hardware', 'conventional', 'controller', 'integrator', 'block', 'code', 'represent', 'block', 'form', 'code', 'transfer', 'hardware', 'codepi', 'controllerpi', 'hardware']",7
2300,67586,"Implementation of time optimal control law (bang-bang controller) for a double integral system<p>This is an example of bang-bang controller. The problem statement is taken from Optimal Control Systems by D.S. Naidu, page no. 306, which is about the simple motion of a block of mass 'm' in a frictionless environment when subjected to an external force f(t). The motion is described as: m*y''(t) = f(t)where, y(t) is the position of the block at time t, so that, y'(t) and y""(t) represents the velocity and acceleration of the block, respectively.In the Simulink model, x_1 is the state variable for the position of the block (y), and x_2 is the state variable for the velocity of the block (y'). The initial conditions can be altered in their respective blocks. Control input can be visualized from the scope labeled as 'Control Input'.</p>bangbang control,time optimal control",10,0,1,0,13,implementation time optimal control law bang bang controller double integral systemthis example bang bang controller problem statement take optimal control naidu page simple motion block mass frictionless environment subject external force motion describe position block time represent velocity acceleration block respectively state variable position block state variable velocity block initial condition alter respective block control input visualize scope label control input bangbang controltime optimal control,"['implementation', 'time', 'optimal', 'control', 'law', 'bang', 'bang', 'controller', 'double', 'integral', 'systemthis', 'example', 'bang', 'bang', 'controller', 'problem', 'statement', 'take', 'optimal', 'control', 'naidu', 'page', 'simple', 'motion', 'block', 'mass', 'frictionless', 'environment', 'subject', 'external', 'force', 'motion', 'describe', 'position', 'block', 'time', 'represent', 'velocity', 'acceleration', 'block', 'respectively', 'state', 'variable', 'position', 'block', 'state', 'variable', 'velocity', 'block', 'initial', 'condition', 'alter', 'respective', 'block', 'control', 'input', 'visualize', 'scope', 'label', 'control', 'input', 'bangbang', 'controltime', 'optimal', 'control']",0
2301,67616,"A boost converter (step-up converter) is a DC-to-DC power converter.<p>A boost converter (step-up converter) is a DC-to-DC power converter that steps up voltage (while stepping down current) from its input (supply) to its output (load).</p>power_conversion_control,power_electronics_control,simulink",15,0,1,0,21,boost converter step converter power converter boost converter step converter power converter step voltage step current input supply output load power conversion controlpower electronics,"['boost', 'converter', 'step', 'converter', 'power', 'converter', 'boost', 'converter', 'step', 'converter', 'power', 'converter', 'step', 'voltage', 'step', 'current', 'input', 'supply', 'output', 'load', 'power', 'conversion', 'controlpower', 'electronics']",6
2302,67647,"a simple halfbridge modle with voltage feedback for clpse loop control.<p>It's a simple modle of DC/DC with halfbridge topology.And the control strategy is the basic PWM control.It have a pretty good performance of the output voltage.</p>electric_motor_control,power_conversion_control,power_electronics_control,simulation",41,0,1,0,58,simple halfbridge modle voltage feedback clpse loop control simple modle halfbridge topology control strategy basic pwm control pretty good performance output voltage electric motor controlpower conversion controlpower electronics,"['simple', 'halfbridge', 'modle', 'voltage', 'feedback', 'clpse', 'loop', 'control', 'simple', 'modle', 'halfbridge', 'topology', 'control', 'strategy', 'basic', 'pwm', 'control', 'pretty', 'good', 'performance', 'output', 'voltage', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
2303,67673,pushpull converter<p>close loop of pushpull converter</p>simulink,26,0,1,0,39,pushpull converterclose loop pushpull,"['pushpull', 'converterclose', 'loop', 'pushpull']",8
2304,67687,bridge rectifier<p>this is 3 phase full wave rectifier</p>simulation,24,0,1,0,41,bridge rectifierthis phase full wave,"['bridge', 'rectifierthis', 'phase', 'full', 'wave']",1
2305,67690,"A 30-bus system design in Simulink<p>This Simulink model represents the IEEE 30-bus test case, which represents a portion of the American Electric Power System as of December ,1961 .</p>simulink,standard",135,0,1,0,404,bus design represent iee bus test case represent portion american electric power december,"['bus', 'design', 'represent', 'iee', 'bus', 'test', 'case', 'represent', 'portion', 'american', 'electric', 'power', 'december']",4
2306,67712,"A single-pulse input initiates elapsed time comparison to a desired timer duration.<p>This is the Readme.txt file for the Simulink timer subsystem example.The timer is a Simulink implementation of a (simulation) timer that can be armedby sending it a 1-pulse ping signal to 'ping input'.A single-pulse input initiates an elapsed time calculation that is subsequentlycompared to a desired timer duration. The boolean result of this comparisonprovides the timer state output.A 1-pulse ping can be generated with the change detect block that looks forany difference in it's input signal.The timer is armed when a 1-pulse ping is detected which begins an elapsedtime calculation. Elapsed time is compared to the desired timer durationand the timer state is held high while t_elapsed &lt;= t_timer_duration.Inside the timer subsystem is a 'triggered capture-and-hold' block that capturesthe current simulation time when a high is detected on the ping input signal.This timer subsystem has been tested on Matlab R2016b and R2018a and a closevariant of this subsystem has been used as far back as 2004.The soft real time subsystem shown in the screenshot is not included in thissingle-file release but is freely avaialable under the MathWorks File Exchangeentry titled ""Soft Real Time Block for Pacing Simulink Simulations"" at:<a href=""https://www.mathworks.com/matlabcentral/fileexchange/67520-soft-real-time-block-for-pacing-simulink-simulationsThere"">https://www.mathworks.com/matlabcentral/fileexchange/67520-soft-real-time-block-for-pacing-simulink-simulationsThere</a> is no requirement for the soft real time subsystem for this timer to workbut running in soft real time helps illustrate how the timer subsystem works withthe manual switch blocks.Alternatively the native Simulink 'Pace' block also helps run the system at amanageable pace for clear demonstration using the manual switch block.----------------------------------------------------------------------------------Marc Compere, <a href=""mailto:comperem@gmail.comcreated"">comperem@gmail.comcreated</a> : 12 Jun 2018modified: 12 Jun 2018</p>armed,captureandhold,disarmed,timer,trigger,triggeredcaptureandhold",62,6,4,0,60,single pulse input initiate elapse time comparison desire timer duration readme txt file timer subsystem example timer implementation timer armedby send pulse ping signal ping input single pulse input initiate elapse time calculation desire timer duration boolean result timer state output pulse ping generate change detect block look forany difference input signal timer arm pulse ping detect begin elapsedtime calculation elapse time compare desired timer durationand timer state hold high elapse timer duration inside timer subsystem trigger capture hold block capturesthe current time high detect ping input signal timer subsystem test closevariant subsystem far back soft real time subsystem show screenshot include thissingle file release freely avaialable mathworks file exchangeentry title soft real time block pace mathworks com matlabcentral fileexchange soft real time block pace requirement soft real time subsystem timer workbut run soft real time help illustrate timer subsystem work withthe manual switch block alternatively native pace block also help run amanageable pace clear demonstration manual switch block marc compere comperem gmail comcreated jun modify jun,"['single', 'pulse', 'input', 'initiate', 'elapse', 'time', 'comparison', 'desire', 'timer', 'duration', 'readme', 'txt', 'file', 'timer', 'subsystem', 'example', 'timer', 'implementation', 'timer', 'armedby', 'send', 'pulse', 'ping', 'signal', 'ping', 'input', 'single', 'pulse', 'input', 'initiate', 'elapse', 'time', 'calculation', 'desire', 'timer', 'duration', 'boolean', 'result', 'timer', 'state', 'output', 'pulse', 'ping', 'generate', 'change', 'detect', 'block', 'look', 'forany', 'difference', 'input', 'signal', 'timer', 'arm', 'pulse', 'ping', 'detect', 'begin', 'elapsedtime', 'calculation', 'elapse', 'time', 'compare', 'desired', 'timer', 'durationand', 'timer', 'state', 'hold', 'high', 'elapse', 'timer', 'duration', 'inside', 'timer', 'subsystem', 'trigger', 'capture', 'hold', 'block', 'capturesthe', 'current', 'time', 'high', 'detect', 'ping', 'input', 'signal', 'timer', 'subsystem', 'test', 'closevariant', 'subsystem', 'far', 'back', 'soft', 'real', 'time', 'subsystem', 'show', 'screenshot', 'include', 'thissingle', 'file', 'release', 'freely', 'avaialable', 'mathworks', 'file', 'exchangeentry', 'title', 'soft', 'real', 'time', 'block', 'pace', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'soft', 'real', 'time', 'block', 'pace', 'requirement', 'soft', 'real', 'time', 'subsystem', 'timer', 'workbut', 'run', 'soft', 'real', 'time', 'help', 'illustrate', 'timer', 'subsystem', 'work', 'withthe', 'manual', 'switch', 'block', 'alternatively', 'native', 'pace', 'block', 'also', 'help', 'run', 'amanageable', 'pace', 'clear', 'demonstration', 'manual', 'switch', 'block', 'marc', 'compere', 'comperem', 'gmail', 'comcreated', 'jun', 'modify', 'jun']",0
2307,67717,"Its a  Standalone Solar Converter which boosts voltage and futher convert it into 2 step AC .<p>This  converter consists of 5 subsystems . 1) PV panel,which uses energy of sun to generate DC voltage. 2) P&amp;O MPPT algorithm, which increases the efficiency of converter by load matching. 3) Buck-Boost converter, which boosts the DC voltage for household use . 4) PWM Inverter, which converts the DC signal to 2 step AC signal by PWM technique. 5) Battery Charge Controller which prevents the overcharging and reverse charging of the battery.</p>battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,simulation,solar",91,8,3,0,119,standalone solar converter boost voltage futher convert step converter consist subsystem panelwhich energy sun generate voltage amp mppt algorithm increase efficiency converter load match buck boost converter boost voltage household pwm inverter convert signal step signal pwm technique battery charge controller prevents overcharge reverse charge battery battery motor controlpower conversion controlpower electronics,"['standalone', 'solar', 'converter', 'boost', 'voltage', 'futher', 'convert', 'step', 'converter', 'consist', 'subsystem', 'panelwhich', 'energy', 'sun', 'generate', 'voltage', 'amp', 'mppt', 'algorithm', 'increase', 'efficiency', 'converter', 'load', 'match', 'buck', 'boost', 'converter', 'boost', 'voltage', 'household', 'pwm', 'inverter', 'convert', 'signal', 'step', 'signal', 'pwm', 'technique', 'battery', 'charge', 'controller', 'prevents', 'overcharge', 'reverse', 'charge', 'battery', 'battery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",1
2308,67718,"Only applicable for DFIG based WT<p>This is the mechanical model of the wind turbine including three different wind speed profiles. Each wind speed profile can be selected and model can be simulated. This model shows the working of the speed and pitch control of the WT. The generator and converter model is approximated by a simple first order delay. With wind profiles, the behaviour of the wind turbine prime mover can be observed. This is a model based on realistic data.</p>control design,mechanical modeling,pitch control,speed control,wind turbine",69,4,3,0,84,applicable dfig base wtthis mechanical wind turbine include three different wind speed profile wind speed profile select show work speed pitch control generator converter approximate simple first order delay wind profile behaviour wind turbine prime mover observe base realistic data control modelingpitch controlspeed controlwind turbine,"['applicable', 'dfig', 'base', 'wtthis', 'mechanical', 'wind', 'turbine', 'include', 'three', 'different', 'wind', 'speed', 'profile', 'wind', 'speed', 'profile', 'select', 'show', 'work', 'speed', 'pitch', 'control', 'generator', 'converter', 'approximate', 'simple', 'first', 'order', 'delay', 'wind', 'profile', 'behaviour', 'wind', 'turbine', 'prime', 'mover', 'observe', 'base', 'realistic', 'data', 'control', 'modelingpitch', 'controlspeed', 'controlwind', 'turbine']",4
2309,67743,"This implements the maximum power point tracking using the nature inspired technique PSO.<p>Here we are using a boost converter. The counter variable is used to give a delay for the converter to stabilise.The load is resistive.</p>power_conversion_control,power_electronics_control,mppt,partially shaded array,particle swarm optimization,pso,pv",45,1,2,0,61,implement maximum power point track nature inspire technique pso boost converter counter variable give delay converter stabilise load resistive power conversion controlpower electronics shade arrayparticle swarm,"['implement', 'maximum', 'power', 'point', 'track', 'nature', 'inspire', 'technique', 'pso', 'boost', 'converter', 'counter', 'variable', 'give', 'delay', 'converter', 'stabilise', 'load', 'resistive', 'power', 'conversion', 'controlpower', 'electronics', 'shade', 'arrayparticle', 'swarm']",3
2310,67744,"This implements Maximum power point tracking using cuckoo search algorithm for PV array.<p>The converter used her is boost. The counter variable is used to give delay so that converter will stabilize. The load is resistive.</p>power_conversion_control,power_electronics_control,csa,cuckoo search,cuckoo search algorithm,mppt,partially shaded array,pv",45,1,2,0,61,implement maximum power point track cuckoo search algorithm array converter boost counter variable give delay converter stabilize load resistive power conversion controlpower electronics searchcuckoo search shade arraypv,"['implement', 'maximum', 'power', 'point', 'track', 'cuckoo', 'search', 'algorithm', 'array', 'converter', 'boost', 'counter', 'variable', 'give', 'delay', 'converter', 'stabilize', 'load', 'resistive', 'power', 'conversion', 'controlpower', 'electronics', 'searchcuckoo', 'search', 'shade', 'arraypv']",3
2311,67826,"Practical Design and Application of Model Predictive Control- Chapter 4<p>In this submission, a nonlinear dynamic model for a ship is presented. Data is collected for a ship maneuver and system identification is performed using MatlabÂ® System Identification Toolbox.Run Chapter_4_Section_3.m in Section_3 folder to simulate the ship and perform system identification. It will also plot the results of the system identification.Run Chapter_4_Section_4_Script.m in Section_4 folder to obtain the solution for the exercise provided in the book. It generates another simulation for the ship and compute the discrete steady state model of the ship.For more information, read chapter 4.</p>9780128139189,9780128139196,practical mpc,ship,state space,system identification",3564,94,8,0,3102,practical design application predictive control chapter submission nonlinear dynamic ship present data collect ship maneuver identification perform identification toolbox run chapter section section folder ship perform identification also plot result identification run chapter section script section folder obtain solution exercise provide book generate another ship compute discrete steady state ship information read chapter practical mpcshipstate spacesystem identification,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'submission', 'nonlinear', 'dynamic', 'ship', 'present', 'data', 'collect', 'ship', 'maneuver', 'identification', 'perform', 'identification', 'toolbox', 'run', 'chapter', 'section', 'section', 'folder', 'ship', 'perform', 'identification', 'also', 'plot', 'result', 'identification', 'run', 'chapter', 'section', 'script', 'section', 'folder', 'obtain', 'solution', 'exercise', 'provide', 'book', 'generate', 'another', 'ship', 'compute', 'discrete', 'steady', 'state', 'ship', 'information', 'read', 'chapter', 'practical', 'mpcshipstate', 'spacesystem', 'identification']",0
2312,67827,"Practical Design and Application of Model Predictive Control- Chapter 5<p>Chapter 5These are the files for Chapter 4 for the book "" Practical Design and Application of Model Predictive Control"" by Elsevier (eBook ISBN: 9780128139196, Paperback ISBN: 9780128139189). This chapter guides the user through the process of designing a linear MPC controller for a ship. The turning rate and ship speed are controlled using the rudder and propeller. These actuators operate under physical constraints. The Simulink model, Chapter_5_Model_and_Reference.slx, for the ship and the reference for the controller can be found in Chapter 5/Section_3The linear model for the ship, Chapter_5_Section_6_Linear_Model.mat, can be found in Chapter_5\Section_6.The session for the designed MPC controller can be found in Chapter_5\Section_6. Load MPCDesignTask_Chapter_5_Section_6.mat and open with MPC toolbox.To check the tracking performance of the MPC controller, run Chapter_5_Section_7_Model_and_Controller.slx which can be found in Chapter_5\Section_7. Once the simulation is concluded,  run Chapter_5_Section_7_Script.m to plot results and display performance of the controller against requirements.Chapter_5\Section_8 contains the solution for the application problem in the book. Run Chapter_5_Section_8_Model_and_Controller.slx. Once the simulation is concluded,  run Chapter_5_Section_8_Script.m to plot results and display performance of the controller against requirements.</p>9780128139189,9780128139196,mpc,propeller,rudder,ship",6791,184,8,0,5920,practical design application predictive control chapter chapter file chapter book practical design application predictive control elsevier ebook isbn paperback isbn chapter guide user process design linear mpc controller ship turn rate ship speed control rudder propeller actuator operate physical constraint chapter reference slx ship reference controller find chapter section linear ship chapter section linear mat find chapter section session design mpc controller find chapter section load mpcdesigntask chapter section mat open mpc toolbox check track performance mpc controller run chapter section controller slx find chapter section conclude run chapter section script plot result display performance controller requirement chapter section contain solution application problem book run chapter section controller slx conclude run chapter section script plot result display performance controller requirement,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'chapter', 'file', 'chapter', 'book', 'practical', 'design', 'application', 'predictive', 'control', 'elsevier', 'ebook', 'isbn', 'paperback', 'isbn', 'chapter', 'guide', 'user', 'process', 'design', 'linear', 'mpc', 'controller', 'ship', 'turn', 'rate', 'ship', 'speed', 'control', 'rudder', 'propeller', 'actuator', 'operate', 'physical', 'constraint', 'chapter', 'reference', 'slx', 'ship', 'reference', 'controller', 'find', 'chapter', 'section', 'linear', 'ship', 'chapter', 'section', 'linear', 'mat', 'find', 'chapter', 'section', 'session', 'design', 'mpc', 'controller', 'find', 'chapter', 'section', 'load', 'mpcdesigntask', 'chapter', 'section', 'mat', 'open', 'mpc', 'toolbox', 'check', 'track', 'performance', 'mpc', 'controller', 'run', 'chapter', 'section', 'controller', 'slx', 'find', 'chapter', 'section', 'conclude', 'run', 'chapter', 'section', 'script', 'plot', 'result', 'display', 'performance', 'controller', 'requirement', 'chapter', 'section', 'contain', 'solution', 'application', 'problem', 'book', 'run', 'chapter', 'section', 'controller', 'slx', 'conclude', 'run', 'chapter', 'section', 'script', 'plot', 'result', 'display', 'performance', 'controller', 'requirement']",7
2313,67839,"Script files and Simulink model used in MathWorks Automotive Conference 2018<p>[Japanese]2018å¹´7æ3æ¥ã«éå¬ãããMathWorks Automotive Conference 2018ã®ã»ãã·ã§ã³ã""ADASã»èªåéè»¢ã®éçºã¨æ¤è¨¼ãå éããMATLAB""ã«ã¦ä½¿ç¨ãããã¹ã¯ãªãããã¡ã¤ã«åã³Simulinkã¢ãã«ã§ããScript files and Simulink model used in MathWorks Automotive Conference 2018, Automated Driving with MATLAB session(in Japanese). [English]1. d1_LiDAR\myGroundPlaneAndObstacleDetectionUsingLidarExample.mGround Plane Detection and Segmentation Using LiDAR Data2. d2_Vision\MonoCameraExample_J.mMonocular Camera Sensor Design and Visual Perception3. d3_GTL\runGTLdemos.mAdd Custom Label Automation Algorithm and Connect LiDAR Display to Ground Truth Labeler4. d4_Fusion\ForwardCollisionWarningTrackingExample_J.mForward Collision Warning Using Sensor Fusion5. d5_Scenario\scenarioAutoStop_ENCAP.slxSimulate Autonomous Emergency Braking System with Euro NCAP TEST PROTOCOL[Keyward] ç»åå¦çã»èªåéè»¢ã»ADASã»LiDARã»ãã£ã¼ãã©ã¼ãã³ã°ã»DeepLearningã»ãã¢ã»IPCVãã¢ã»ãã¥ã¼ã©ã«ãããã¯ã¼ã¯ã»ãã¹ãã·ããªãª</p>adas,automated driving,automotive,computer vision,image processing,lidar",30,3,2,0,34,script file mathworks automotive conference japanese automotive conference ã®ã»ãã·ã§ã³ file mathworks automotive conference automate drive session japanese english lidar mground plane detection segmentation lidar data vision mmonocular camera sensor design visual perception gtl rungtldemos madd custom label automation algorithm connect lidar display ground truth labeler fusion mforward collision warn sensor fusion scenario encap autonomous emergency brake euro ncap test protocol keyward visionimage processinglidar,"['script', 'file', 'mathworks', 'automotive', 'conference', 'japanese', 'automotive', 'conference', 'ã®ã»ãã·ã§ã³', 'file', 'mathworks', 'automotive', 'conference', 'automate', 'drive', 'session', 'japanese', 'english', 'lidar', 'mground', 'plane', 'detection', 'segmentation', 'lidar', 'data', 'vision', 'mmonocular', 'camera', 'sensor', 'design', 'visual', 'perception', 'gtl', 'rungtldemos', 'madd', 'custom', 'label', 'automation', 'algorithm', 'connect', 'lidar', 'display', 'ground', 'truth', 'labeler', 'fusion', 'mforward', 'collision', 'warn', 'sensor', 'fusion', 'scenario', 'encap', 'autonomous', 'emergency', 'brake', 'euro', 'ncap', 'test', 'protocol', 'keyward', 'visionimage', 'processinglidar']",8
2314,67852,"Practical Design and Application of Model Predictive Control- Chapter 6<p>Chapter 6These are the files for Chapter 6 for the book "" Practical Design and Application of Model Predictive Control"" by Elsevier (eBook ISBN: 9780128139196, Paperback ISBN: 9780128139189). In many industrial applications, the dynamics of the plants are nonlinear. The question that gets asked frequently is it highly nonlinear? Can we use linear controller technique such as PID? In this chapter, the nonlinearity will be studied before the design of the controller. The response surface across the range of operation of the plant will be generated. This surface will give insights into the number of controllers needed for the full range. Multiple MPC is then designed and the concept of switching logic is introduced along with the challenges of tuning the switching of the MPC controllers.In Chapter_6\Section_3 folder, 20 simulations for the ship are carried out by using Parallel Computing Toolbox. Read and run Chapter_6_Section_3_Script.m to carry the simulations. Methods such as changing SimulinkÂ® parameters from the script, creating new file names and checking for MatlabÂ® licenses are included in the script. In Chapter_6\Section_4 folder, the response surface is analyzed and nonlinearity is assessed. Run Chapter_6_Section_4_Script.m to run and plot the analysis.In Chapter_6\Section_5 folder, run  Chapter_6_Section_5_1_Script.m to simulate the ship for different propeller and rudder angles. Once done, run Chapter_6_Section_5_2_Script.m to generate a set of linear models for the ship for various propeller and rudder angles.In Chapter_6\Section_6 run Chapter_6_Section_6_Script.m to generate all the MPC controllers for the various propeller and rudder angles previously generated in Chapter_6\Section_5 folder.Chapter_6\Section_7 contains the Simulink model, Chapter_5_Section_8_Model_and_Controller.slx that has the ship model alongside with the multiple MPC controllers and the switching logic. In Chapter_6\Section_8 the model of the ship and controller, Chapter_6_Section_7_Model.slx, is simulated using Chapter_6_Section_8_Script_1.m . Tracking results and controller performance are analyzed. The problem of frequent switching of MPC modes is identified. A hysteresis block is introduced to mitigate the problem. Similarly, Chapter_6_Section_8_Script_2.m is used to simulate the new switching logic, Chapter_6_Section_8_Model.slx.In In Chapter_6\Section_9 an application problem similar to the previous section is introduced. RunChapter_6_Section_9_Solution_Script.m to simulate and see tracking performance of the controller and switching logic performance.</p>9780128139189,9780128139196,hysteresis,mpc,nonlinear,propeller,rudder,ship,switching",10881,292,8,0,9459,practical design application predictive control chapter chapter file chapter book practical design application predictive control elsevier ebook isbn paperback isbn many industrial application dynamic plant nonlinear question get ask frequently highly nonlinear linear controller technique pid chapter nonlinearity study design controller response surface across range operation plant generate surface give insight number controller need full range multiple mpc design concept switch logic introduce along challenge tune switch mpc controller chapter section folder ship carry parallel compute toolbox read run chapter section script carry method change parameter script create new file name check license include script chapter section folder response surface analyze nonlinearity assess run chapter section script run plot analysis chapter section folder run chapter section script ship different propeller rudder angle run chapter section script generate set linear ship various propeller rudder angle chapter section run chapter section script generate mpc controller various propeller rudder angle previously generate chapter section folder chapter section contain chapter section controller slx ship alongside multiple mpc controller switch logic chapter section ship controller chapter section slx chapter section script track result controller performance analyze problem frequent switch mpc mode identify hysteresis block introduce mitigate problem similarly chapter section script new switch logic chapter section slx chapter section application problem similar previous section introduce runchapter section solution script see track performance controller switch logic performance,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'chapter', 'file', 'chapter', 'book', 'practical', 'design', 'application', 'predictive', 'control', 'elsevier', 'ebook', 'isbn', 'paperback', 'isbn', 'many', 'industrial', 'application', 'dynamic', 'plant', 'nonlinear', 'question', 'get', 'ask', 'frequently', 'highly', 'nonlinear', 'linear', 'controller', 'technique', 'pid', 'chapter', 'nonlinearity', 'study', 'design', 'controller', 'response', 'surface', 'across', 'range', 'operation', 'plant', 'generate', 'surface', 'give', 'insight', 'number', 'controller', 'need', 'full', 'range', 'multiple', 'mpc', 'design', 'concept', 'switch', 'logic', 'introduce', 'along', 'challenge', 'tune', 'switch', 'mpc', 'controller', 'chapter', 'section', 'folder', 'ship', 'carry', 'parallel', 'compute', 'toolbox', 'read', 'run', 'chapter', 'section', 'script', 'carry', 'method', 'change', 'parameter', 'script', 'create', 'new', 'file', 'name', 'check', 'license', 'include', 'script', 'chapter', 'section', 'folder', 'response', 'surface', 'analyze', 'nonlinearity', 'assess', 'run', 'chapter', 'section', 'script', 'run', 'plot', 'analysis', 'chapter', 'section', 'folder', 'run', 'chapter', 'section', 'script', 'ship', 'different', 'propeller', 'rudder', 'angle', 'run', 'chapter', 'section', 'script', 'generate', 'set', 'linear', 'ship', 'various', 'propeller', 'rudder', 'angle', 'chapter', 'section', 'run', 'chapter', 'section', 'script', 'generate', 'mpc', 'controller', 'various', 'propeller', 'rudder', 'angle', 'previously', 'generate', 'chapter', 'section', 'folder', 'chapter', 'section', 'contain', 'chapter', 'section', 'controller', 'slx', 'ship', 'alongside', 'multiple', 'mpc', 'controller', 'switch', 'logic', 'chapter', 'section', 'ship', 'controller', 'chapter', 'section', 'slx', 'chapter', 'section', 'script', 'track', 'result', 'controller', 'performance', 'analyze', 'problem', 'frequent', 'switch', 'mpc', 'mode', 'identify', 'hysteresis', 'block', 'introduce', 'mitigate', 'problem', 'similarly', 'chapter', 'section', 'script', 'new', 'switch', 'logic', 'chapter', 'section', 'slx', 'chapter', 'section', 'application', 'problem', 'similar', 'previous', 'section', 'introduce', 'runchapter', 'section', 'solution', 'script', 'see', 'track', 'performance', 'controller', 'switch', 'logic', 'performance']",7
2315,67863,"This circuit is to simulate an active battery balancing switched capacitor topology for a BMS<p>This unfortunately is not a working file. I have been struggling these past few days to figure out why I cannot stop the flow of current from the 'controlled current block'. I have played around with the code as well as different types of switches. If anyone is able to give suggestions on how to control this switch it would be greatly appreciated. Also, please ignore the rest of the design. I have not finished setting the PWM frequency and the capacitance values. I am only concerned with how to control this switch.Thanks in advance everyone!</p>battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,switched capacitor",24,0,1,0,30,circuit active battery balance switch capacitor topology bmsthis unfortunately work file struggle past day figure stop flow current control current block play around code well different type switch anyone able give suggestion control switch would greatly appreciate also please ignore rest design finish set pwm frequency capacitance value concern control switch thanks advance everyone battery motor controlpower conversion controlpower electronics controlswitched capacitor,"['circuit', 'active', 'battery', 'balance', 'switch', 'capacitor', 'topology', 'bmsthis', 'unfortunately', 'work', 'file', 'struggle', 'past', 'day', 'figure', 'stop', 'flow', 'current', 'control', 'current', 'block', 'play', 'around', 'code', 'well', 'different', 'type', 'switch', 'anyone', 'able', 'give', 'suggestion', 'control', 'switch', 'would', 'greatly', 'appreciate', 'also', 'please', 'ignore', 'rest', 'design', 'finish', 'set', 'pwm', 'frequency', 'capacitance', 'value', 'concern', 'control', 'switch', 'thanks', 'advance', 'everyone', 'battery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlswitched', 'capacitor']",4
2316,67865,PVArray block which you can model partial shading<p>PVArray block which you can model partial shading</p>simulink,458,54,4,0,666,pvarray block partial shadingpvarray block partial,"['pvarray', 'block', 'partial', 'shadingpvarray', 'block', 'partial']",5
2317,67871,"Practical Design and Application of Model Predictive Control- Chapter 7<p>These are the files for Chapter 7 for the book "" Practical Design and Application of Model Predictive Control"" by Elsevier (eBook ISBN: 9780128139196, Paperback ISBN: 9780128139189). These files pertain to multiple MPC controllers for the ship navigation. In particular, we are controlling the forward speed and turning rate. In this submission Monte-Carlo simulations are run to test the designed MPC controllers. Follow the below steps to run and analyze the simulations.Run Chapter_7_Section_2.m  script that can be found in Chapter_7/Section_2. This will load and plot randomly generated current, wind and wave data.Open Chapter_6_Multiple_MPC_Final.slx that can be found in Chapter_7/Section_4 to explore the structure of the controller+ship model.Run Chapter_7_Section_4.m script that can be found in Chapter_7/Section_4. This will load the 12 MPC controllersâ data, current, wind and wave data, and run 150 Monte-Carlo simulations. It will also calculate tracking performance of the controller for both forward speed of the ship and the turning rate. Run Chapter_7_Section_5.m script that can be found in Chapter_7/Section_5. This will load update the weights of the the 12 MPC controllers that were used in Chapter_7/Section_4 . It will also run 150 Monte-Carlo simulations, calculate tracking performance of the controller for both forward speed of the ship and the turning rate.Similar to the two sections above, run Chapter_7_Section_6.m which has 3 different MPC tuning weights. Three 150 Monte-Carlo simulations are run by the script. Results are shown with legends for the 3 different weights. This allows the user to draw conclusion between weights of MPC controller and tracking performance.</p>9780128139189,9780128139196,monte carlo,random,robustness,ship,uncertainty",4260,120,8,0,3723,practical design application predictive control chapter file chapter book practical design application predictive control elsevier ebook isbn paperback isbn file pertain multiple mpc controller ship navigation particular control forward speed turn rate submission monte carlo run test design mpc controller follow step run analyze run chapter section script find chapter section load plot randomly generate current wind wave data open chapter multiple mpc final slx find chapter section explore structure controller ship run chapter section script find chapter section load mpc controller data current wind wave data run monte carlo also calculate track performance controller forward speed ship turn rate run chapter section script find chapter section load update weight mpc controller chapter section also run monte carlo calculate track performance controller forward speed ship turn rate similar two section run chapter section different mpc tune weight three monte carlo run script result show legends different weight allow user draw conclusion weight mpc controller track performance monte,"['practical', 'design', 'application', 'predictive', 'control', 'chapter', 'file', 'chapter', 'book', 'practical', 'design', 'application', 'predictive', 'control', 'elsevier', 'ebook', 'isbn', 'paperback', 'isbn', 'file', 'pertain', 'multiple', 'mpc', 'controller', 'ship', 'navigation', 'particular', 'control', 'forward', 'speed', 'turn', 'rate', 'submission', 'monte', 'carlo', 'run', 'test', 'design', 'mpc', 'controller', 'follow', 'step', 'run', 'analyze', 'run', 'chapter', 'section', 'script', 'find', 'chapter', 'section', 'load', 'plot', 'randomly', 'generate', 'current', 'wind', 'wave', 'data', 'open', 'chapter', 'multiple', 'mpc', 'final', 'slx', 'find', 'chapter', 'section', 'explore', 'structure', 'controller', 'ship', 'run', 'chapter', 'section', 'script', 'find', 'chapter', 'section', 'load', 'mpc', 'controller', 'data', 'current', 'wind', 'wave', 'data', 'run', 'monte', 'carlo', 'also', 'calculate', 'track', 'performance', 'controller', 'forward', 'speed', 'ship', 'turn', 'rate', 'run', 'chapter', 'section', 'script', 'find', 'chapter', 'section', 'load', 'update', 'weight', 'mpc', 'controller', 'chapter', 'section', 'also', 'run', 'monte', 'carlo', 'calculate', 'track', 'performance', 'controller', 'forward', 'speed', 'ship', 'turn', 'rate', 'similar', 'two', 'section', 'run', 'chapter', 'section', 'different', 'mpc', 'tune', 'weight', 'three', 'monte', 'carlo', 'run', 'script', 'result', 'show', 'legends', 'different', 'weight', 'allow', 'user', 'draw', 'conclusion', 'weight', 'mpc', 'controller', 'track', 'performance', 'monte']",7
2318,67888,"Write custom data type rules as MATLAB functions, and other automatic data type propagation policies<p>Simulink models often begin life using purely double-precision data. As the fidelity of the model increases to include specifications of the embedded system it will be deployed on, more floating-point and fixed-point data types are often needed. Manually specifying all these data types for optimal numerical performance and system efficiency while continuing to evolve the design is time consuming and error prone.Data type automation aims to reduce this cost. You can save time, reduce effort, apply policies, and maintain correctness by adding rules to the model to ensure data types match across signals. Construct signals with the right properties so they produce errors when your rules are violated.This document explains how you can write your own data type rules as MATLAB functions and integrate them into your Simulink modelâs data type propagation process.Writing your own rule is the highest level of customization and requires the most expertise and resources. There are a few simpler alternatives you should consider first. Simpler out-of-the-box methods may be more compatible with the entire MathWorks tool chain (such as verification and validation products), while highly customized methods may not be completely understood by such tools.This document describes solutions for automating data type rules in order of increasing complexity. The first section contains simple and widely capable methods. The second contains advanced techniques requiring a greater level of investment.1. Simple techniques    a. Back-propagation    b. The Data Type Duplicate block    c. The Signal Specification block2. More sophisticated and custom techniques    a. The Data Type Propagation block    b. Mask-controlled data type rules    c. MATLAB-authored custom data type rulesThe licenses required for the demonstration models in this document are Simulink and Fixed-Point Designer. The models were tested with R2018a and may work with some earlier releases as well.</p>custom,data type rules,fixed point,function,matlab,propagation,simulink",197,20,2,0,159,write custom data type rule function automatic data type propagation often begin life purely double precision data fidelity increase include specification embed deployed float point fix point data type often need manually specify data type optimal numerical performance efficiency continue evolve design time consume error prone data type automation aim reduce cost save time reduce effort apply policy maintain correctness add rule ensure data type match across signal construct signal right property produce error rule violate document explain write data type rule function integrate data type propagation process write rule high level customization require expertise resource simpler alternative consider first simpler box method may compatible entire mathworks tool chain verification validation product highly customize method may completely understand tool document describes solution automate data type rule order increase complexity first section contain simple widely capable method second contains advance technique require great level investment simple technique back propagation data type duplicate block signal specification block sophisticate custom technique data type propagation block mask control data type rule author custom data type rulesthe license require demonstration document fix point designer test may work early release well customdata type rulesfixed,"['write', 'custom', 'data', 'type', 'rule', 'function', 'automatic', 'data', 'type', 'propagation', 'often', 'begin', 'life', 'purely', 'double', 'precision', 'data', 'fidelity', 'increase', 'include', 'specification', 'embed', 'deployed', 'float', 'point', 'fix', 'point', 'data', 'type', 'often', 'need', 'manually', 'specify', 'data', 'type', 'optimal', 'numerical', 'performance', 'efficiency', 'continue', 'evolve', 'design', 'time', 'consume', 'error', 'prone', 'data', 'type', 'automation', 'aim', 'reduce', 'cost', 'save', 'time', 'reduce', 'effort', 'apply', 'policy', 'maintain', 'correctness', 'add', 'rule', 'ensure', 'data', 'type', 'match', 'across', 'signal', 'construct', 'signal', 'right', 'property', 'produce', 'error', 'rule', 'violate', 'document', 'explain', 'write', 'data', 'type', 'rule', 'function', 'integrate', 'data', 'type', 'propagation', 'process', 'write', 'rule', 'high', 'level', 'customization', 'require', 'expertise', 'resource', 'simpler', 'alternative', 'consider', 'first', 'simpler', 'box', 'method', 'may', 'compatible', 'entire', 'mathworks', 'tool', 'chain', 'verification', 'validation', 'product', 'highly', 'customize', 'method', 'may', 'completely', 'understand', 'tool', 'document', 'describes', 'solution', 'automate', 'data', 'type', 'rule', 'order', 'increase', 'complexity', 'first', 'section', 'contain', 'simple', 'widely', 'capable', 'method', 'second', 'contains', 'advance', 'technique', 'require', 'great', 'level', 'investment', 'simple', 'technique', 'back', 'propagation', 'data', 'type', 'duplicate', 'block', 'signal', 'specification', 'block', 'sophisticate', 'custom', 'technique', 'data', 'type', 'propagation', 'block', 'mask', 'control', 'data', 'type', 'rule', 'author', 'custom', 'data', 'type', 'rulesthe', 'license', 'require', 'demonstration', 'document', 'fix', 'point', 'designer', 'test', 'may', 'work', 'early', 'release', 'well', 'customdata', 'type', 'rulesfixed']",0
2319,67896,"Fuzzy Logic MPPT Controller<p>The system consist of a PV array and boost converter with resistive load. The boost converter is controlled through the Fuzzy Logic controller to extract maximum power from the PV array.if you need complete model with FIS file contact me on my email: <a href=""mailto:engr.niaz91@gmail.comTo"">engr.niaz91@gmail.comTo</a> watch video demonstration visit the following link:<a href=""https://youtu.be/SkhYA_y1l2A"">https://youtu.be/SkhYA_y1l2A</a></p>power_conversion_control,power_electronics_control,fuzzy logic mppt,fuzzy logic mppt for solar pv,mppt,mppt algorithm,solar pv",46,2,2,0,60,fuzzy logic mppt controllerthe consist array boost converter resistive load boost converter control fuzzy logic controller extract maximum power array need complete fis file contact email engr niaz gmail comto watch video demonstration visit follow link youtu skhya apower conversion controlpower electronics controlfuzzy logic mpptfuzzy logic mppt solar pvmpptmppt algorithmsolar,"['fuzzy', 'logic', 'mppt', 'controllerthe', 'consist', 'array', 'boost', 'converter', 'resistive', 'load', 'boost', 'converter', 'control', 'fuzzy', 'logic', 'controller', 'extract', 'maximum', 'power', 'array', 'need', 'complete', 'fis', 'file', 'contact', 'email', 'engr', 'niaz', 'gmail', 'comto', 'watch', 'video', 'demonstration', 'visit', 'follow', 'link', 'youtu', 'skhya', 'apower', 'conversion', 'controlpower', 'electronics', 'controlfuzzy', 'logic', 'mpptfuzzy', 'logic', 'mppt', 'solar', 'pvmpptmppt', 'algorithmsolar']",4
2320,67943,"Transient stability improvement using power system stabilizer (PSS) and static VAR compensator (SVC)<p>Transient stability improvement using power system stabilizer (PSS) and static VAR compensator (SVC)</p>power system stabilizer,pss,static var compensator,svc,transient stability,var compensator",325,16,2,0,403,transient stability improvement power stabilizer pss static var compensator svc transient stability improvement power stabilizer pss static var compensator svc power var stabilityvar compensator,"['transient', 'stability', 'improvement', 'power', 'stabilizer', 'pss', 'static', 'var', 'compensator', 'svc', 'transient', 'stability', 'improvement', 'power', 'stabilizer', 'pss', 'static', 'var', 'compensator', 'svc', 'power', 'var', 'stabilityvar', 'compensator']",8
2321,67951,"DC - DC Boost converter with 2 Inductor, 2 Capacitor and 2 MOSFET switch<p>DC - DC Boost converter with 2 Inductor, 2 Capacitor and 2 MOSFET switch</p>power_conversion_control,power_electronics_control,boost converter,chopper,converter,dc boost converter,dc dc chopper,dc dc converter",16,0,1,0,20,boost converter inductor capacitor mosfet switchdc boost converter inductor capacitor mosfet switchpower conversion controlpower electronics controlboost boost converterdc chopperdc converter,"['boost', 'converter', 'inductor', 'capacitor', 'mosfet', 'switchdc', 'boost', 'converter', 'inductor', 'capacitor', 'mosfet', 'switchpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'boost', 'converterdc', 'chopperdc', 'converter']",1
2322,67983,"AI-Based Power Management of Grid-Connected Renewable Energy -3500 kW hybrid PV/Wind<p>AI-Based Power Management of Grid-Connected Renewable Energy - 3500 kW hybrid PV/Wind</p>battery,fuzzy,grid,hybrid,microgrid,photovoltaic,wind",335,19,4,0,381,base power management grid connect renewable energy hybrid windai base power management grid connect renewable energy hybrid,"['base', 'power', 'management', 'grid', 'connect', 'renewable', 'energy', 'hybrid', 'windai', 'base', 'power', 'management', 'grid', 'connect', 'renewable', 'energy', 'hybrid']",3
2323,68620,"MATLAB and Simulink support for hardware components used in the Arduino Engineering Kit.<p>Note: This version is for MATLAB release R2018b only. For MATLAB R2018a please use this file here: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/66568-arduino_engineering_kit_hardware_support"">https://www.mathworks.com/matlabcentral/fileexchange/66568-arduino_engineering_kit_hardware_support</a> For MATLAB R2019a and later, please use this file here: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/70554-arduino_engineering_kit_hardware_support_19aThis"">https://www.mathworks.com/matlabcentral/fileexchange/70554-arduino_engineering_kit_hardware_support_19aThis</a> package includes MATLAB and Simulink files that allow users to communicate with and control the sensors and actuators used in the Arduino Engineering Kit, most of which are connected through the MKR Motor Carrier. This includes: â¢ DC motor â control up to 4 DC motors simultaneously â¢ Servo motor â control up to 8 servo motors simultaneously â¢ Encoder â read up to 2 encoders simultaneously â¢ Tachometer â read rotational speed from the hall sensor on the motorcycleâs inertia wheel â¢ BNO055 IMU sensor â read from the accelerometer, magnetometer, and gyroscope â¢ Ultrasonic sensor â measure the distance to an object â¢ LiPo Battery â read the battery voltageExamples are included to demonstrate how to use the MATLAB functions and Simulink blocks included in this package.Learn more about the Arduino Engineering Kit at <a href=""http://www.mathworks.com/arduino-kitImportant"">www.mathworks.com/arduino-kitImportant</a> notes: 1) After installing this toolbox, type the following command in MATLAB to open the ReadMe &gt;&gt; edit ArduinoKitHardwareSupportReadMe.txt 2) Be sure to follow the steps in this file, as it provides instructions on downloading the Arduino library for the MKR Motor Carrier. This library is required for some of the functionality to work.</p>battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,arduino,maker,matlab",37,2,1,10,29,support hardware component arduino engineering kit note version release please file mathworks com matlabcentral fileexchange arduino engineering kit hardware support later please file mathworks com matlabcentral fileexchange arduino engineering kit hardware support athis package include file allow user communicate control sensor actuator arduino engineering kit connect mkr motor carrier include motor control motor servo motor control servo motor encoder read encoders tachometer read rotational speed hall sensor motorcycle inertia wheel bno imu sensor read accelerometer magnetometer gyroscope ultrasonic sensor measure distance object lipo battery read battery voltageexamples include demonstrate function block include package learn arduino engineering kit mathworks com arduino kitimportant note instal toolbox type follow command open readme edit txt sure follow step file provide instruction download arduino mkr motor carrier require functionality work battery motor controlpower conversion controlpower electronics,"['support', 'hardware', 'component', 'arduino', 'engineering', 'kit', 'note', 'version', 'release', 'please', 'file', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'engineering', 'kit', 'hardware', 'support', 'later', 'please', 'file', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'engineering', 'kit', 'hardware', 'support', 'athis', 'package', 'include', 'file', 'allow', 'user', 'communicate', 'control', 'sensor', 'actuator', 'arduino', 'engineering', 'kit', 'connect', 'mkr', 'motor', 'carrier', 'include', 'motor', 'control', 'motor', 'servo', 'motor', 'control', 'servo', 'motor', 'encoder', 'read', 'encoders', 'tachometer', 'read', 'rotational', 'speed', 'hall', 'sensor', 'motorcycle', 'inertia', 'wheel', 'bno', 'imu', 'sensor', 'read', 'accelerometer', 'magnetometer', 'gyroscope', 'ultrasonic', 'sensor', 'measure', 'distance', 'object', 'lipo', 'battery', 'read', 'battery', 'voltageexamples', 'include', 'demonstrate', 'function', 'block', 'include', 'package', 'learn', 'arduino', 'engineering', 'kit', 'mathworks', 'com', 'arduino', 'kitimportant', 'note', 'instal', 'toolbox', 'type', 'follow', 'command', 'open', 'readme', 'edit', 'txt', 'sure', 'follow', 'step', 'file', 'provide', 'instruction', 'download', 'arduino', 'mkr', 'motor', 'carrier', 'require', 'functionality', 'work', 'battery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics']",7
2324,68652,"An orbit and attitude propagator for small satellites with models for control and environmental torques<p>The Smart Nanosatellite Attitude Propagator is an attitude propagator for satellites that can be used to analyze the environmental torques affecting a satellite and to design and analyze passive attitude stabilization techniques, such as Passive Magnetic Stabilization,  Gravity Gradient Stabilization and Aerodynamic stabilization.If used, please cite: S. A. Rawashdeh. âAttitude Analysis of Small Satellites Using Model-Based Simulationâ, International Journal of Aerospace Engineering, vol. 2019, Article ID 3020581, 11 pages, 2019.The model implements:- A simple two-body gravitational model for orbit propagation- Gravity gradient torque - Magnetic torque due to permanent magnets- Magnetic hysteresis torque and damping- Aerodynamic torque for spacecraft that are rotationally symmetric every 90 degrees. For more information on the implementation and capabilities of the model, see:  [1] S. A. Rawashdeh. âAttitude Analysis of Small Satellites Using Model-Based Simulationâ, International Journal of Aerospace Engineering, vol. 2019, Article ID 3020581, 11 pages, 2019.   [1] Samir A. Rawashdeh, âPassive Attitude Stabilization for Small Satellitesâ,       Masterâs Thesis, University of Kentucky 2010, Lexington, KY      [2] S. A. Rawashdeh, J. Lumpp, âNano-Satellite Passive Attitude Stabilization       Systems Design by Orbital Environment Modeling and Simulationâ, AIAA       Infotech@Aerospace Conference 2010, Atlanta, GA </p>1u,2u,3u,6u,adcs,aerodynamic torque,aerospace,attitude control,attitude determination,cubesat,gravity gradient,hysteresis material,magnetic dipole torque,nanosatellite,orbit,passive aerodynamic stabilization,passive magnetic attitude stabilization,pmas,small satellite,tle",351,23,4,0,354,orbit attitude propagator small satellite control environmental torquesthe smart nanosatellite attitude propagator attitude propagator satellite analyze environmental torque affect satellite design analyze passive attitude stabilization technique passive magnetic stabilization gravity gradient stabilization aerodynamic stabilization please cite rawashdeh attitude analysis small satellite base international journal aerospace engineering vol article page implement simple two body gravitational orbit propagation gravity gradient torque magnetic torque due permanent magnet magnetic hysteresis torque damp aerodynamic torque spacecraft rotationally symmetric every degrees information implementation capability see rawashdeh attitude analysis small satellite base international journal aerospace engineering vol article page samir rawashdeh passive attitude stabilization small satellite master thesis university kentucky lexington rawashdeh lumpp nano satellite passive attitude stabilization design orbital environment aiaa infotech aerospace conference atlanta controlattitude dipole aerodynamic magnetic attitude satellitetle,"['orbit', 'attitude', 'propagator', 'small', 'satellite', 'control', 'environmental', 'torquesthe', 'smart', 'nanosatellite', 'attitude', 'propagator', 'attitude', 'propagator', 'satellite', 'analyze', 'environmental', 'torque', 'affect', 'satellite', 'design', 'analyze', 'passive', 'attitude', 'stabilization', 'technique', 'passive', 'magnetic', 'stabilization', 'gravity', 'gradient', 'stabilization', 'aerodynamic', 'stabilization', 'please', 'cite', 'rawashdeh', 'attitude', 'analysis', 'small', 'satellite', 'base', 'international', 'journal', 'aerospace', 'engineering', 'vol', 'article', 'page', 'implement', 'simple', 'two', 'body', 'gravitational', 'orbit', 'propagation', 'gravity', 'gradient', 'torque', 'magnetic', 'torque', 'due', 'permanent', 'magnet', 'magnetic', 'hysteresis', 'torque', 'damp', 'aerodynamic', 'torque', 'spacecraft', 'rotationally', 'symmetric', 'every', 'degrees', 'information', 'implementation', 'capability', 'see', 'rawashdeh', 'attitude', 'analysis', 'small', 'satellite', 'base', 'international', 'journal', 'aerospace', 'engineering', 'vol', 'article', 'page', 'samir', 'rawashdeh', 'passive', 'attitude', 'stabilization', 'small', 'satellite', 'master', 'thesis', 'university', 'kentucky', 'lexington', 'rawashdeh', 'lumpp', 'nano', 'satellite', 'passive', 'attitude', 'stabilization', 'design', 'orbital', 'environment', 'aiaa', 'infotech', 'aerospace', 'conference', 'atlanta', 'controlattitude', 'dipole', 'aerodynamic', 'magnetic', 'attitude', 'satellitetle']",8
2325,68741,"MATLABã«ããç»åå¦çã»ã³ã³ãã¥ã¼ã¿ã¼ãã¸ã§ã³ã®æ©è½ç´¹ä»ã¹ã©ã¤ãã¨ãã¢ãã¡ã¤ã«<p>ç»åå¦çã»ã³ã³ãã¥ã¼ã¿ã¼ãã¸ã§ã³è©ä¾¡ã­ããã«ã¯æ©è½ç´¹ä»ã¹ã©ã¤ãã¨ãã¢ãµã³ãã«ãå«ã¾ãã¦ãã¾ããããããMATLABã§ç»åå¦çãã¯ãããæ¹ãææ°ã®ç»åå¦çã»ã³ã³ãã¥ã¼ã¿ã¼ãã¸ã§ã³ã»ãã£ã¼ãã©ã¼ãã³ã°ã®æ©è½ãè©¦ãããæ¹ã«ããããã§ããã»MATLAB/Simulinkã«ããç»åã®åãæ±ã(DICOM)ã»åç¨®ç»åå¦çä¾(åç¨®ç»åãã¼ã¿èª­ã¿è¾¼ã¿/2å¤å/å¹¾ä½å­¦å¤æ/ä½ç½®åãã/ãã£ã«ã¿/ã¢ã«ãã©ã­ã¸ã¼å¦ç/ã»ã°ã¡ã³ãã¼ã·ã§ã³)ã»ãã«ãã³ã¢/GPUã³ã¼ãçæ/FPGAé£æºæ©è½ä¾/æ·±å±¤å¼·åå­¦ç¿ã»ã³ã³ãã¥ã¼ã¿ã¼ãã¸ã§ã³å¦çä¾(ç¹å¾´ç¹ãããã³ã°/åä½æ¤åº/ãã©ãã­ã³ã°/ã¹ãã¬ãªãã¸ã§ã³/LiDARç¹ç¾¤å¦ç)ã»ç»åã®æ©æ¢°å­¦ç¿å¦çä¾(SVM/ç·å½¢å¤å¥)ã»ãã£ã¼ãã©ã¼ãã³ã°å¦çä¾(CNN/è»¢ç§»å­¦ç¿/Faster R-CNN/YOLO v2/SegNet/FCN/U-Net/3D CNN)ãã£ã¼ãã©ã¼ãã³ã°ã®ã¤ãã¦ã¯ãã£ã¼ãã©ã¼ãã³ã°è©ä¾¡ã­ããããåç§ãã ããã<a href=""https://jp.mathworks.com/matlabcentral/fileexchange/70156[Keyward]"">https://jp.mathworks.com/matlabcentral/fileexchange/70156[Keyward]</a> ç»åå¦çã»ã³ã³ãã¥ã¼ã¿ã¼ãã¸ã§ã³ã»ãã£ã¼ãã©ã¼ãã³ã°ã»IPCVãã¢ã»æ·±å±¤å­¦ç¿ã»å¼·åå­¦ç¿ã»æ·±å±¤å¼·åå­¦ç¿ã»CUDAã³ã¼ãçæ</p>computer vision,cuda code,deep learning,image processing,machine learning,reinforcement learning",1070,62,7,0,1260,dicom åç¨®ç»åå¦çä¾ åç¨®ç»åãã¼ã¿èª­ã¿è¾¼ã¿ å¹¾ä½å­¦å¤æ ä½ç½®åãã ãã£ã«ã¿ ã¢ã«ãã©ã­ã¸ã¼å¦ç ã»ã°ã¡ã³ãã¼ã·ã§ã³ ãã«ãã³ã¢ gpuã³ã¼ãçæ fpgaé£æºæ©è½ä¾ ç¹å¾´ç¹ãããã³ã° åä½æ¤åº ãã©ãã­ã³ã° ã¹ãã¬ãªãã¸ã§ã³ lidarç¹ç¾¤å¦ç ç»åã®æ©æ¢°å­¦ç¿å¦çä¾ svm ç·å½¢å¤å¥ ãã£ã¼ãã©ã¼ãã³ã°å¦çä¾ cnn è»¢ç§»å­¦ç¿ faster cnn yolo segnet fcn net cnn mathworks com matlabcentral fileexchange keyward visioncuda codedeep learningimage learning,"['dicom', 'åç¨®ç»åå¦çä¾', 'åç¨®ç»åãã¼ã¿èª­ã¿è¾¼ã¿', 'å¹¾ä½å­¦å¤æ', 'ä½ç½®åãã', 'ãã£ã«ã¿', 'ã¢ã«ãã©ã­ã¸ã¼å¦ç', 'ã»ã°ã¡ã³ãã¼ã·ã§ã³', 'ãã«ãã³ã¢', 'gpuã³ã¼ãçæ', 'fpgaé£æºæ©è½ä¾', 'ç¹å¾´ç¹ãããã³ã°', 'åä½æ¤åº', 'ãã©ãã­ã³ã°', 'ã¹ãã¬ãªãã¸ã§ã³', 'lidarç¹ç¾¤å¦ç', 'ç»åã®æ©æ¢°å­¦ç¿å¦çä¾', 'svm', 'ç·å½¢å¤å¥', 'ãã£ã¼ãã©ã¼ãã³ã°å¦çä¾', 'cnn', 'è»¢ç§»å­¦ç¿', 'faster', 'cnn', 'yolo', 'segnet', 'fcn', 'net', 'cnn', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'keyward', 'visioncuda', 'codedeep', 'learningimage', 'learning']",8
2326,68897,"Arm Cortex-M Fast Models Support Package for Embedded Coder.<p>Embedded CoderÂ® Support Package for ARMÂ® CortexÂ®-M Fast Models enables the use of virtual platforms as a hardware target in PIL and External Mode simulations. This package currently supports the Cortex-M family of Arm CPUs, including the following cores: - Arm Cortex-M0+- Arm Cortex-M0- Arm Cortex-M1- Arm Cortex-M3- Arm Cortex-M4 - Arm Cortex-M7For information on how to obtain Arm Fast Models, see the Support Package documentation. To enable Arm Compiler as a toolchain in Embedded Coder, see the Arm Compiler Support Package for Embedded Coder.</p>arm,build,embedded coder,fast models,model,modeling,regression,simulation,test,toolbox,virtual target",61,0,1,0,50,arm cortex fast support package embed coder embed coder support package arm cortex fast enable virtual platform hardware target pil external mode package currently support cortex family arm cpu include follow core arm cortex arm cortex arm cortex arm cortex arm cortex arm cortex information obtain arm fast see support package documentation enable arm compiler toolchain embed coder see arm compiler support package embed coder coderfast target,"['arm', 'cortex', 'fast', 'support', 'package', 'embed', 'coder', 'embed', 'coder', 'support', 'package', 'arm', 'cortex', 'fast', 'enable', 'virtual', 'platform', 'hardware', 'target', 'pil', 'external', 'mode', 'package', 'currently', 'support', 'cortex', 'family', 'arm', 'cpu', 'include', 'follow', 'core', 'arm', 'cortex', 'arm', 'cortex', 'arm', 'cortex', 'arm', 'cortex', 'arm', 'cortex', 'arm', 'cortex', 'information', 'obtain', 'arm', 'fast', 'see', 'support', 'package', 'documentation', 'enable', 'arm', 'compiler', 'toolchain', 'embed', 'coder', 'see', 'arm', 'compiler', 'support', 'package', 'embed', 'coder', 'coderfast', 'target']",0
2327,68939,"Simulink model used in the ""Understanding Model Predictive Control, Part 7"" MATLAB Tech Talk video<p><a href=""https://www.youtube.com/watch?v=aQhpvrQPxD4&amp;t=25sThis"">https://www.youtube.com/watch?v=aQhpvrQPxD4&amp;t=25sThis</a> submission contains all the files that are used in the ""Understanding Model Predictive Control, Part 7: Adaptive MPC Design with Simulink and Model Predictive Control Toolbox"" video. An adaptive MPC controller has been designed for an autonomous steering vehicle system whose dynamics change with respect to the longitudinal velocity. </p>adaptive mpc,control design,controls,model predictive control,mpc,mpc toolbox,simulink",20,2,2,1,32,understanding predictive control part tech talk video youtube com watch aqhpvrqpxd amp sthis submission contains file understanding predictive control part adaptive mpc design predictive control toolbox video adaptive mpc controller design autonomous steer vehicle whose dynamic change respect longitudinal velocity adaptive mpccontrol predictive controlmpcmpc,"['understanding', 'predictive', 'control', 'part', 'tech', 'talk', 'video', 'youtube', 'com', 'watch', 'aqhpvrqpxd', 'amp', 'sthis', 'submission', 'contains', 'file', 'understanding', 'predictive', 'control', 'part', 'adaptive', 'mpc', 'design', 'predictive', 'control', 'toolbox', 'video', 'adaptive', 'mpc', 'controller', 'design', 'autonomous', 'steer', 'vehicle', 'whose', 'dynamic', 'change', 'respect', 'longitudinal', 'velocity', 'adaptive', 'mpccontrol', 'predictive', 'controlmpcmpc']",0
2328,68992,"Simulink model used in the ""Understanding Model Predictive Control, Part 6"" MATLAB Tech Talk<p><a href=""https://www.youtube.com/watch?v=evyvdvApPLYThis"">https://www.youtube.com/watch?v=evyvdvApPLYThis</a> submission contains all the files used in the ""Understanding Model Predictive Control, Part 6: How to Design an MPC Controller with Simulink and Model Predictive Control Toolbox"" video. An MPC controller has been designed to control an autonomous vehicle steering system. </p>control design,controls,model predictive control,mpc,mpc toolbox,simulink",14,2,2,2,15,understanding predictive control part tech talk youtube com watch evyvdvapplythis submission contain file understanding predictive control part design mpc controller predictive control toolbox video mpc controller design control autonomous vehicle steer control predictive controlmpcmpc,"['understanding', 'predictive', 'control', 'part', 'tech', 'talk', 'youtube', 'com', 'watch', 'evyvdvapplythis', 'submission', 'contain', 'file', 'understanding', 'predictive', 'control', 'part', 'design', 'mpc', 'controller', 'predictive', 'control', 'toolbox', 'video', 'mpc', 'controller', 'design', 'control', 'autonomous', 'vehicle', 'steer', 'control', 'predictive', 'controlmpcmpc']",0
2329,69089,"Files associated with the Student Competition : Code Generation Training<p>This entry contains all of the example and exercise materials for the online training: Student Competition - Code Generation Training. Access the videos here : <a href=""http://www.mathworks.com/codegen-training"">www.mathworks.com/codegen-training</a> Part 1: Code Generation with MATLABPart 2: Preparing and Customizing Generated Code for MATLABPart 3: Code Generation with SimulinkPart 4: Customizing Generated Code with SimulinkPart 5: System Integration with SimulinkPart 6: Hardware Deployment with Simulink</p>",551,29,2,6,524,file associate student competition code generation trainingthis entry contains example exercise material online train student competition code generation train access video mathworks com codegen training part code generation matlabpart prepare customize generate code matlabpart code generation customize generate code integration hardware deployment,"['file', 'associate', 'student', 'competition', 'code', 'generation', 'trainingthis', 'entry', 'contains', 'example', 'exercise', 'material', 'online', 'train', 'student', 'competition', 'code', 'generation', 'train', 'access', 'video', 'mathworks', 'com', 'codegen', 'training', 'part', 'code', 'generation', 'matlabpart', 'prepare', 'customize', 'generate', 'code', 'matlabpart', 'code', 'generation', 'customize', 'generate', 'code', 'integration', 'hardware', 'deployment']",7
2330,69121,"The voltage output from the pv cell is stored in the battery and also the Dc voltage is inverted to AC using a Five level inverter<p>The electrical model of the pv is being made and the voltage rating is kept above 12v. Then using a buck converter the voltage is stored in a battery stack of 12v. The dc voltage is given to a five level switch inverter (open loop) and is converted to ac form. The inverter topology selected contains less number of switches and the output is obtained.</p>battery_system_management,power_conversion_control,power_electronics_control",73,4,3,0,76,voltage output cell store battery also voltage invert five level inverterthe electrical make voltage rating keep buck converter voltage store battery stack voltage give five level switch inverter open loop convert form inverter topology select contains less number switch output obtain battery managementpower conversion controlpower electronics control,"['voltage', 'output', 'cell', 'store', 'battery', 'also', 'voltage', 'invert', 'five', 'level', 'inverterthe', 'electrical', 'make', 'voltage', 'rating', 'keep', 'buck', 'converter', 'voltage', 'store', 'battery', 'stack', 'voltage', 'give', 'five', 'level', 'switch', 'inverter', 'open', 'loop', 'convert', 'form', 'inverter', 'topology', 'select', 'contains', 'less', 'number', 'switch', 'output', 'obtain', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'control']",3
2331,69149,"An easy way to implement buck converter<p>...</p>power_conversion_control,power_electronics_control",18,0,1,0,24,easy way implement buck converter power conversion controlpower electronics control,"['easy', 'way', 'implement', 'buck', 'converter', 'power', 'conversion', 'controlpower', 'electronics', 'control']",6
2332,69183,"Neural Network Controller using NARX developed in Simulink. One of the problems I encountered during Neural Network training of control appl<p>Neural Network Controller using NARX developed in Simulink. One of the problems I encountered during Neural Network training of control application using Simulink is the normalization issue. In this project, a simple NARX network was used to replace PID in Simulink. This is particularly useful because we addressed the following1. How to write your own Matlab version of Mapminmax in Simulink (<a href=""https://au.mathworks.com/help/deeplearning/ref/mapminmax.html)2"">https://au.mathworks.com/help/deeplearning/ref/mapminmax.html)2</a>. The PID inputs and outputs serve as the NARX network input and target3. Before training in Matlab, firstly normalize your inputs and target (to +1 to -1)  4. Use the ""fnc"" function block, replace the xmin, ymin, xmax and ymax with the maximum and minimum of your inputs and targets.5. Since you trained using normalized inputs, you need to apply reverse normalization during the inference stage in Simulink hence the use of the third function block.</p>control,control design,mapminmax,narx,neural networks,simulink",118,12,4,0,132,neural network controller narx develop one problem encounter neural network train control applneural network controller narx develop one problem encounter neural network train control application normalization issue project simple narx network replace pid particularly useful address follow write version mapminmax mathworks com help deeplearning ref mapminmax html pid input output serve narx network input target train firstly normalize input target fnc function block replace xmin ymin xmax ymax maximum minimum input target since train normalize input need apply reverse normalization inference stage hence third function block controlcontrol,"['neural', 'network', 'controller', 'narx', 'develop', 'one', 'problem', 'encounter', 'neural', 'network', 'train', 'control', 'applneural', 'network', 'controller', 'narx', 'develop', 'one', 'problem', 'encounter', 'neural', 'network', 'train', 'control', 'application', 'normalization', 'issue', 'project', 'simple', 'narx', 'network', 'replace', 'pid', 'particularly', 'useful', 'address', 'follow', 'write', 'version', 'mapminmax', 'mathworks', 'com', 'help', 'deeplearning', 'ref', 'mapminmax', 'html', 'pid', 'input', 'output', 'serve', 'narx', 'network', 'input', 'target', 'train', 'firstly', 'normalize', 'input', 'target', 'fnc', 'function', 'block', 'replace', 'xmin', 'ymin', 'xmax', 'ymax', 'maximum', 'minimum', 'input', 'target', 'since', 'train', 'normalize', 'input', 'need', 'apply', 'reverse', 'normalization', 'inference', 'stage', 'hence', 'third', 'function', 'block', 'controlcontrol']",0
2333,69187,pv characteristic simulink <p>this is simulink of pv characteristic</p>,87,4,4,0,87,characteristic characteristic,"['characteristic', 'characteristic']",5
2334,69198,"Trapezoid membership functions A, B and C are defined in the universe of X ={-5,-4,-3,-2,-1,0,1,2,3,4,5} <p>Trapezoid membership functions A, B and C are defined in the universe of X ={-5,-4,-3,-2,-1,0,1,2,3,4,5} with their parameters as A(-5,-5,-4,-1),      B(-4,-1,1,4) and C(1,4,5,5). Use MATLAB and Simulink functions given in Figures respectively, and(a) plot trapezoid membership functions A, B and C in the universe of X</p>fuzzy,membership functions",75,3,2,0,85,trapezoid membership function define universe trapezoid membership function define universe parameter function give figure respectively plot trapezoid membership function universe function,"['trapezoid', 'membership', 'function', 'define', 'universe', 'trapezoid', 'membership', 'function', 'define', 'universe', 'parameter', 'function', 'give', 'figure', 'respectively', 'plot', 'trapezoid', 'membership', 'function', 'universe', 'function']",0
2335,69199,"Triangles A, B and C are defined in the universe of X = {-5,-4,-3,-2,-1,0,1,2,3,4,5} <p>Triangles A, B and C are defined in the universe of X = {-5,-4,-3,-2,-1,0,1,2,3,4,5} with their parameters as          A(-4,-2,0), B(-2,0,2) and C(0,2,4). Use MATLAB and Simulink functions given in Figures 2.5 and 2.6, respectively, and  plot the triangles A, B and C in the universe of X</p>",66,3,2,0,79,triangle define universe triangle define universe parameter function give figure respectively plot triangle universe,"['triangle', 'define', 'universe', 'triangle', 'define', 'universe', 'parameter', 'function', 'give', 'figure', 'respectively', 'plot', 'triangle', 'universe']",5
2336,69209,"Time delay relays are control relays with a timer built in.<p>Timer relays control an event based on timing parameters set to open or close contacts.</p>240v,distribution system,electrical",38,2,3,0,41,time delay relay control relay timer build timer relay control event base timing parameter set open close contact vdistribution,"['time', 'delay', 'relay', 'control', 'relay', 'timer', 'build', 'timer', 'relay', 'control', 'event', 'base', 'timing', 'parameter', 'set', 'open', 'close', 'contact', 'vdistribution']",0
2337,69214,"The combination of Simulink, Simscape, and Simulink Control Design allow both Time and Frequency Domain circuit analysis. <p>Simulink's prime reason to exist is to serve as a Time Domain simulation environment. Simulink is arguably the premier Control Systems Design tool. It handles continuous time, discrete time, mixed continuous and discrete, linear, non-linear, time invariant and time varying systems that can be of amazing complexity. This is all well known. But that is just the beginning! The combination of Simulink, Simscape, and Simulink Control Design allow both Time and Frequency Domain circuit analysis in the Simulink environment which is not well known. This submission focuses on the Frequency Domain analysis aspect of the tools.  </p>analog design,circuit,frequency domain,rf,sparameters,transfer function",775,55,3,2,826,combination simscape control design allow time frequency domain circuit analysis prime reason exist serve time domain environment arguably premier control design tool handle continuous time discrete time mixed continuous discrete linear non linear time invariant time vary amaze complexity well know begin combination simscape control design allow time frequency domain circuit analysis environment well know submission focus frequency domain analysis aspect tool analog function,"['combination', 'simscape', 'control', 'design', 'allow', 'time', 'frequency', 'domain', 'circuit', 'analysis', 'prime', 'reason', 'exist', 'serve', 'time', 'domain', 'environment', 'arguably', 'premier', 'control', 'design', 'tool', 'handle', 'continuous', 'time', 'discrete', 'time', 'mixed', 'continuous', 'discrete', 'linear', 'non', 'linear', 'time', 'invariant', 'time', 'vary', 'amaze', 'complexity', 'well', 'know', 'begin', 'combination', 'simscape', 'control', 'design', 'allow', 'time', 'frequency', 'domain', 'circuit', 'analysis', 'environment', 'well', 'know', 'submission', 'focus', 'frequency', 'domain', 'analysis', 'aspect', 'tool', 'analog', 'function']",0
2338,69223,"This will show the fundamentals of DC microgrid control integrating distributed generators and converters.<p>The model includes: local slack bus, PV system, batteries, and DC loads.Local slack bus uses a simplified VSC converter connected with the AC grid.(A detailed VSC+AC grid model decreases the running speed, if you want a detail model, please contact me.)PV system uses a standard PV model + a boost converter.Battery uses a standard Li-ion battery model + a dual-active-bridge converter.Demands are connected through buck converters.The voltage on the DC bus is controlled by the grid-interconnected VSC, ""Local slack bus"".You can play with the swiches on the bus, and the control in the components to see the power flow. </p>battery_system_management,power_conversion_control,power_electronics_control,dc microgrid",748,33,4,0,872,show fundamental microgrid control integrating distribute generator converter include local slack bus battery load local slack bus simplify vsc converter connect grid detailed vsc grid decrease run speed want detail please contact standard boost converter battery standard ion battery dual active bridge converter demand connect buck converter voltage bus control grid interconnect vsc local slack bus play swiches bus control component see power flow battery managementpower conversion controlpower electronics controldc microgrid,"['show', 'fundamental', 'microgrid', 'control', 'integrating', 'distribute', 'generator', 'converter', 'include', 'local', 'slack', 'bus', 'battery', 'load', 'local', 'slack', 'bus', 'simplify', 'vsc', 'converter', 'connect', 'grid', 'detailed', 'vsc', 'grid', 'decrease', 'run', 'speed', 'want', 'detail', 'please', 'contact', 'standard', 'boost', 'converter', 'battery', 'standard', 'ion', 'battery', 'dual', 'active', 'bridge', 'converter', 'demand', 'connect', 'buck', 'converter', 'voltage', 'bus', 'control', 'grid', 'interconnect', 'vsc', 'local', 'slack', 'bus', 'play', 'swiches', 'bus', 'control', 'component', 'see', 'power', 'flow', 'battery', 'managementpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'microgrid']",3
2339,69229,"The model allows the user to evaluate the trade off between the indoor air quality and the indoor air temperature.<p>The main aim of the project is to deal with the development of a coupled Heat and Air Quality dynamic model for Himalayan House based on the first principles of thermodynamics. The model uses a lumped parameter approach for representation of the room air temperature and air quality. Use of mass and energy balance equations is made for the development of the dynamic model which is solved in Simulink MATLAB environment. Only a theoretical approach is used for the development of the model. The model accounts for various factors such as insulations of the doors, roofs, floor, windows, etc. ventilation rates in and out of the house and the amount of solar radiation falling on the house. The results for the model are plotted as variation of temperature vs time and the air quality in terms of PM, Carbon dioxide and Carbon monoxide concentrations in the house. The model will also provide control over the operation of cook stove.</p>",346,29,6,0,359,allows user evaluate trade indoor air quality indoor air temperature main aim project deal development couple heat air quality dynamic himalayan house base first principle thermodynamics lump parameter approach representation room air temperature air quality mass energy balance equation make development dynamic solve environment theoretical approach development account various factor insulation door roof floor window etc ventilation rate house amount solar radiation fall house result plot variation temperature time air quality term carbon dioxide carbon monoxide concentration house also provide control operation cook stove,"['allows', 'user', 'evaluate', 'trade', 'indoor', 'air', 'quality', 'indoor', 'air', 'temperature', 'main', 'aim', 'project', 'deal', 'development', 'couple', 'heat', 'air', 'quality', 'dynamic', 'himalayan', 'house', 'base', 'first', 'principle', 'thermodynamics', 'lump', 'parameter', 'approach', 'representation', 'room', 'air', 'temperature', 'air', 'quality', 'mass', 'energy', 'balance', 'equation', 'make', 'development', 'dynamic', 'solve', 'environment', 'theoretical', 'approach', 'development', 'account', 'various', 'factor', 'insulation', 'door', 'roof', 'floor', 'window', 'etc', 'ventilation', 'rate', 'house', 'amount', 'solar', 'radiation', 'fall', 'house', 'result', 'plot', 'variation', 'temperature', 'time', 'air', 'quality', 'term', 'carbon', 'dioxide', 'carbon', 'monoxide', 'concentration', 'house', 'also', 'provide', 'control', 'operation', 'cook', 'stove']",5
2340,69245,"Partition the universe of S into fuzzy subsets low (L), sufficient (Su), good (G) and high (Hi), which are represented by evenly distributed<p>Partition the universe of S into fuzzy subsets low (L), sufficient (Su), good (G) and high (Hi), which are represented by evenly distributed triangular-type membership functionsSolar  Irradiance Range 50 mW/cm2 is low and 200 mW/cm2</p>fuzzy,irradiation,membership function,pv,solar",86,4,2,0,104,partition universe fuzzy subset low sufficient good high represent evenly universe fuzzy subset low sufficient good high represent evenly distributed triangular type membership functionssolar irradiance range low functionpvsolar,"['partition', 'universe', 'fuzzy', 'subset', 'low', 'sufficient', 'good', 'high', 'represent', 'evenly', 'universe', 'fuzzy', 'subset', 'low', 'sufficient', 'good', 'high', 'represent', 'evenly', 'distributed', 'triangular', 'type', 'membership', 'functionssolar', 'irradiance', 'range', 'low', 'functionpvsolar']",8
2341,69246,"Partition the universe of T into fuzzy subsets freezing (F), cold (C), warm (W) and hot (Ho), <p>Partition the universe of T into fuzzy subsets freezing (F), cold (C), warm (W) and hot (Ho), which are represented by evenly distributed triangular-type membership functions.Ranges the ambient temperature varies between â20 C and 40 C</p>fuzzy,membership function,solar temp,triangle",86,4,2,0,104,partition universe fuzzy subset freeze cold warm hot partition universe fuzzy subset freeze cold warm hot represent evenly distribute triangular type membership function range ambient temperature varies functionsolar temptriangle,"['partition', 'universe', 'fuzzy', 'subset', 'freeze', 'cold', 'warm', 'hot', 'partition', 'universe', 'fuzzy', 'subset', 'freeze', 'cold', 'warm', 'hot', 'represent', 'evenly', 'distribute', 'triangular', 'type', 'membership', 'function', 'range', 'ambient', 'temperature', 'varies', 'functionsolar', 'temptriangle']",8
2342,69259,"Solar inverter MPPT examples used in ""Power Control Development with Embedded Coder and TI C2000 MCUs"" webinar<p>Set of solar inverter models and MATLAB files, used in ""Power Control Development with Embedded Coder and TI C2000 MCUs"" webinar. The examples cover design and simulation of a Maximum Power Point Tracking (MPPT) algorithm, and then is implemented on a TI C2000 Solar Inverter Kit.Hardware kit is available from TI:<a href=""http://www.ti.com/tool/TMDSSOLARPEXPKIT"">http://www.ti.com/tool/TMDSSOLARPEXPKIT</a></p>power_conversion_control,power_electronics_control,c2000,inverter,solar",675,61,3,0,691,solar inverter mppt example power control development embed coder mcus webinarset solar inverter file power control development embed coder mcus webinar examples cover design maximum power point track mppt algorithm implement solar inverter kit hardware kit available http com tool conversion controlpower electronics controlc invertersolar,"['solar', 'inverter', 'mppt', 'example', 'power', 'control', 'development', 'embed', 'coder', 'mcus', 'webinarset', 'solar', 'inverter', 'file', 'power', 'control', 'development', 'embed', 'coder', 'mcus', 'webinar', 'examples', 'cover', 'design', 'maximum', 'power', 'point', 'track', 'mppt', 'algorithm', 'implement', 'solar', 'inverter', 'kit', 'hardware', 'kit', 'available', 'http', 'com', 'tool', 'conversion', 'controlpower', 'electronics', 'controlc', 'invertersolar']",3
2343,69283,"Calculated accurate filters for the inverter  <p>Single phase pwm inverter with calculated filters.</p>electric_motor_control,power_conversion_control,power_electronics_control",15,0,1,0,22,calculate accurate filter inverter single phase pwm inverter calculate filter electric motor controlpower conversion controlpower electronics control,"['calculate', 'accurate', 'filter', 'inverter', 'single', 'phase', 'pwm', 'inverter', 'calculate', 'filter', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2344,69284,"The power converter is a critical component of distributed generation system,and designed with PID controller<p>Close loop control with PID controller</p>power_conversion_control,power_electronics_control",21,0,1,0,26,power converter critical component distribute generation systemand design pid controllerclose loop control pid controllerpower conversion controlpower electronics control,"['power', 'converter', 'critical', 'component', 'distribute', 'generation', 'systemand', 'design', 'pid', 'controllerclose', 'loop', 'control', 'pid', 'controllerpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2345,69285,"DC-DC Converter<p>The buck voltage is directly proportional to the duty ratio of switching PWM</p>electric_motor_control,power_conversion_control,power_electronics_control",12,0,1,0,15,converterthe buck voltage directly proportional duty ratio switch pwmelectric motor controlpower conversion controlpower electronics control,"['converterthe', 'buck', 'voltage', 'directly', 'proportional', 'duty', 'ratio', 'switch', 'pwmelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2346,69286,"This converter is mainly used in the field of mppt, pv power harvesting<p>DC-DC stepup or step down using the duty cycle of switching frequency.</p>power_conversion_control,power_electronics_control",14,0,1,0,17,converter mainly field mppt power harvestingdc stepup step duty cycle switch frequency power conversion controlpower electronics control,"['converter', 'mainly', 'field', 'mppt', 'power', 'harvestingdc', 'stepup', 'step', 'duty', 'cycle', 'switch', 'frequency', 'power', 'conversion', 'controlpower', 'electronics', 'control']",1
2347,69288,"This is a single stage voltage buck-boost converter<p>To study the waveform distortions due to high frequency switching for achieving optimum  terminal voltage</p>electric_motor_control,power_conversion_control,power_electronics_control",35,0,1,0,46,single stage voltage buck boost converterto study waveform distortion due high frequency switch achieve optimum terminal voltageelectric motor controlpower conversion controlpower electronics control,"['single', 'stage', 'voltage', 'buck', 'boost', 'converterto', 'study', 'waveform', 'distortion', 'due', 'high', 'frequency', 'switch', 'achieve', 'optimum', 'terminal', 'voltageelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2348,69301,"Closed loop buck-boost converter Or switched mode power supply<p>The idea of regulating a necessary terminal DC voltage, the buck-boost converter is applied with close loop control to attain the same</p>power_conversion_control,power_electronics_control",22,0,1,0,27,closed loop buck boost converter switch mode power supplythe idea regulate necessary terminal voltage buck boost converter apply close loop control attain samepower conversion controlpower electronics control,"['closed', 'loop', 'buck', 'boost', 'converter', 'switch', 'mode', 'power', 'supplythe', 'idea', 'regulate', 'necessary', 'terminal', 'voltage', 'buck', 'boost', 'converter', 'apply', 'close', 'loop', 'control', 'attain', 'samepower', 'conversion', 'controlpower', 'electronics', 'control']",1
2349,69331,"This submission contains pneumatic robot models created with Simulink, Simscape, and Simscape Multibody. <p>These models show how to build a throwing mechanism such that a ball can be targeted to a certain goal. Simscape and Simscape Multibody has been used to build the complete system and finally, PID controller has been used to control the trajectory of the ball.All demos in this entry reinforce the concepts reviewed in the Modeling Pneumatic Robot Actuators series. The models in this submission use following libraries:1) Simscape Multibody Contact Force Library2) Simscape Multibody Multiphysics Library3) Simscape Multibody Parts LibraryFor convenience, local copies of these libraries have been included with this submission.To install the latest version of these libraries, you can findthem from the Add-On Explorer, or on the File Exchange* Simscape Multibody Contact Forces Library: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/47417-simscape-multibody-contact-forces-library*"">https://www.mathworks.com/matlabcentral/fileexchange/47417-simscape-multibody-contact-forces-library*</a> Simscape Multibody Multiphysics Library: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/37636-simscape-multibody-multiphysics-library"">https://www.mathworks.com/matlabcentral/fileexchange/37636-simscape-multibody-multiphysics-library</a> * Simscape Multibody Parts Library: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/36536-simscape-multibody-parts-library"">https://www.mathworks.com/matlabcentral/fileexchange/36536-simscape-multibody-parts-library</a></p>pid controller,pneumatic,robocon,robotics,simulation,throwing mechanism",779,143,5,68,812,submission contain pneumatic robot create simscape simscape multibody show build throw mechanism ball target certain goal simscape simscape multibody build complete finally pid controller control trajectory ball demos entry reinforce concept review pneumatic robot actuator series submission follow simscape multibody contact force simscape multibody multiphysics simscape multibody part libraryfor convenience local copy include submission install late version libraries findthem add explorer file exchange simscape multibody contact force mathworks com matlabcentral fileexchange simscape multibody contact force simscape multibody multiphysics mathworks com matlabcentral fileexchange simscape multibody multiphysics simscape multibody part mathworks com matlabcentral fileexchange simscape multibody part librarypid mechanism,"['submission', 'contain', 'pneumatic', 'robot', 'create', 'simscape', 'simscape', 'multibody', 'show', 'build', 'throw', 'mechanism', 'ball', 'target', 'certain', 'goal', 'simscape', 'simscape', 'multibody', 'build', 'complete', 'finally', 'pid', 'controller', 'control', 'trajectory', 'ball', 'demos', 'entry', 'reinforce', 'concept', 'review', 'pneumatic', 'robot', 'actuator', 'series', 'submission', 'follow', 'simscape', 'multibody', 'contact', 'force', 'simscape', 'multibody', 'multiphysics', 'simscape', 'multibody', 'part', 'libraryfor', 'convenience', 'local', 'copy', 'include', 'submission', 'install', 'late', 'version', 'libraries', 'findthem', 'add', 'explorer', 'file', 'exchange', 'simscape', 'multibody', 'contact', 'force', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'multibody', 'contact', 'force', 'simscape', 'multibody', 'multiphysics', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'multibody', 'multiphysics', 'simscape', 'multibody', 'part', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'multibody', 'part', 'librarypid', 'mechanism']",7
2350,69338,This is the simulation of single phase full wave converter using thyristor<p>you can use this to learn some part of Matlab Simulink and also the full wave converter concept</p>,24,0,1,0,31,single phase full wave converter thyristoryou learn part also full wave converter concept,"['single', 'phase', 'full', 'wave', 'converter', 'thyristoryou', 'learn', 'part', 'also', 'full', 'wave', 'converter', 'concept']",3
2351,69351,"Mathematical representation of buck-boost converter<p>Vo/Vs=D/(1-D)</p>power_conversion_control,power_electronics_control",13,0,1,0,19,mathematical representation buck boost convertervo power conversion controlpower electronics control,"['mathematical', 'representation', 'buck', 'boost', 'convertervo', 'power', 'conversion', 'controlpower', 'electronics', 'control']",6
2352,69356,"Examples showing how to support ROS communication on Androidâ¢ devices<p>This package includes examples that shows you how to generate Android applications using SimulinkÂ® Support Package for Android Devices and integrate the generated application with rosjava library to support ROS communication on Android.Set Position of a Bebop Drone on a Gazebo Simulator from an Android Device Using ROS example shows how to generate an Androidâ¢ application to set the position of the bebop drone on the GazeboÂ® simulator using SimulinkÂ® Support Package for Android Devices.Visualize Sensor Data from an Android Device in RViz, example shows how to generate an Androidâ¢ application to visualize live sensor data from an Android device on the ROS visualization (RViz) tool using SimulinkÂ® Support Package for Android Devices. In this example, sensor data such as orientation, angular velocity, and acceleration of the device are visualized.</p>live script,android,gazebo,robotics,ros,rviz,simulink",13,0,1,0,20,example show support communication android devicesthis package include example show generate android application support package android device integrate generate application rosjava support communication android set position bebop drone gazebo android device ros example show generate android application set position bebop drone gazebo support package android device visualize sensor data android device rviz example show generate android application visualize live sensor data android device visualization rviz tool support package android device example sensor data orientation angular velocity acceleration device visualize live,"['example', 'show', 'support', 'communication', 'android', 'devicesthis', 'package', 'include', 'example', 'show', 'generate', 'android', 'application', 'support', 'package', 'android', 'device', 'integrate', 'generate', 'application', 'rosjava', 'support', 'communication', 'android', 'set', 'position', 'bebop', 'drone', 'gazebo', 'android', 'device', 'ros', 'example', 'show', 'generate', 'android', 'application', 'set', 'position', 'bebop', 'drone', 'gazebo', 'support', 'package', 'android', 'device', 'visualize', 'sensor', 'data', 'android', 'device', 'rviz', 'example', 'show', 'generate', 'android', 'application', 'visualize', 'live', 'sensor', 'data', 'android', 'device', 'visualization', 'rviz', 'tool', 'support', 'package', 'android', 'device', 'example', 'sensor', 'data', 'orientation', 'angular', 'velocity', 'acceleration', 'device', 'visualize', 'live']",7
2353,69371,"Energy management for Stand-alone Photovoltaic Battery-Supercapacitor Hybrid Storage System<p>In order to store the excess power produced throughout the duration of high irradiances, or as to maintain a stable supply of power to fulfill the load demand during low irradiances, an Energy Storage System (ESS) is employed. Conventional energy storage systems consisted of banks of batteries capable of storing and delivering continuous power to the load. However the high energy density characterising the batteries making them a perfect choice for steady power supply, supplying a large burst of current from the battery degrades its lifetime.  An alternative solution is to combine batteries with high power density source capable of supplying the burst transient current such as super capacitor. In such a hybrid system, the battery fulfills the supply of continuous energy while the super capacitor provides the supply of instant power to the load. The system proposed in this model is a Stand-alone Photovoltaic Battery-Supercapacitor Hybrid Energy Storage System. An energy management technique is proposed as to control the supply and storage of energy throughout the system.</p>battery_system_management,power_electronics_control",194,7,2,0,183,energy management stand alone photovoltaic battery supercapacitor hybrid storage systemin order store excess power produce throughout duration high irradiances maintain stable supply power fulfill load demand low irradiances energy storage ess employed conventional energy storage consist bank battery capable store deliver continuous power load however high energy density characterise battery make perfect choice steady power supply supply large burst current battery degrades lifetime alternative solution combine battery high power density source capable supply burst transient current super capacitor hybrid battery fulfills supply continuous energy super capacitor provide supply instant power load propose stand alone photovoltaic battery supercapacitor hybrid energy storage energy management technique propose control supply storage energy throughout battery managementpower electronics control,"['energy', 'management', 'stand', 'alone', 'photovoltaic', 'battery', 'supercapacitor', 'hybrid', 'storage', 'systemin', 'order', 'store', 'excess', 'power', 'produce', 'throughout', 'duration', 'high', 'irradiances', 'maintain', 'stable', 'supply', 'power', 'fulfill', 'load', 'demand', 'low', 'irradiances', 'energy', 'storage', 'ess', 'employed', 'conventional', 'energy', 'storage', 'consist', 'bank', 'battery', 'capable', 'store', 'deliver', 'continuous', 'power', 'load', 'however', 'high', 'energy', 'density', 'characterise', 'battery', 'make', 'perfect', 'choice', 'steady', 'power', 'supply', 'supply', 'large', 'burst', 'current', 'battery', 'degrades', 'lifetime', 'alternative', 'solution', 'combine', 'battery', 'high', 'power', 'density', 'source', 'capable', 'supply', 'burst', 'transient', 'current', 'super', 'capacitor', 'hybrid', 'battery', 'fulfills', 'supply', 'continuous', 'energy', 'super', 'capacitor', 'provide', 'supply', 'instant', 'power', 'load', 'propose', 'stand', 'alone', 'photovoltaic', 'battery', 'supercapacitor', 'hybrid', 'energy', 'storage', 'energy', 'management', 'technique', 'propose', 'control', 'supply', 'storage', 'energy', 'throughout', 'battery', 'managementpower', 'electronics', 'control']",4
2354,69419,Half bridge rectifier operation clarify with this model <p>Half bridge rectifier operation clarify with this model </p>,11,0,1,0,13,half bridge rectifier operation clarify half bridge rectifier operation clarify,"['half', 'bridge', 'rectifier', 'operation', 'clarify', 'half', 'bridge', 'rectifier', 'operation', 'clarify']",4
2355,69455,"Rising edge detector. <p>Rising edge detector. The output is true for one cycle(increment in time) if the input becomes true. Same behavior as Rising edge triggers in PLC's.</p>plc,rising edge trigger,rtrig",4,0,1,0,4,rise edge detector rise edge detector output true one cycle increment time input becomes true behavior rise edge trigger plc plcrising edge triggerrtrig,"['rise', 'edge', 'detector', 'rise', 'edge', 'detector', 'output', 'true', 'one', 'cycle', 'increment', 'time', 'input', 'becomes', 'true', 'behavior', 'rise', 'edge', 'trigger', 'plc', 'plcrising', 'edge', 'triggerrtrig']",8
2356,69456,"Falling edge detector.<p>Falling edge detector. The output is true for one cycle(increment in time) if the input becomes false. Same behavior as falling edge triggers in PLC's.</p>falling edge trigger,ftrig,plc",4,0,1,0,4,fall edge detector fall edge detector output true one cycle increment time input become false behavior fall edge trigger plc fall edge triggerftrigplc,"['fall', 'edge', 'detector', 'fall', 'edge', 'detector', 'output', 'true', 'one', 'cycle', 'increment', 'time', 'input', 'become', 'false', 'behavior', 'fall', 'edge', 'trigger', 'plc', 'fall', 'edge', 'triggerftrigplc']",5
2357,69477,"AI controller based Hybrid Photovoltaic - Fuel Cell and Wind Power system using new 13 Level Cascade Multilevel H - Bridge Inverter<p>AI controller based Hybrid Photovoltaic - Fuel Cell and Wind Power system using new 13 Level Cascade Multilevel H - Bridge Inverter</p>ai controller,cascade multilevel h bridge inverter,hybrid photovoltaic fuel cell and wind",352,20,4,0,414,controller base hybrid photovoltaic fuel cell wind power new level cascade multilevel bridge inverterai controller base hybrid photovoltaic fuel cell wind power new level cascade multilevel bridge inverterai multilevel bridge inverterhybrid photovoltaic fuel cell wind,"['controller', 'base', 'hybrid', 'photovoltaic', 'fuel', 'cell', 'wind', 'power', 'new', 'level', 'cascade', 'multilevel', 'bridge', 'inverterai', 'controller', 'base', 'hybrid', 'photovoltaic', 'fuel', 'cell', 'wind', 'power', 'new', 'level', 'cascade', 'multilevel', 'bridge', 'inverterai', 'multilevel', 'bridge', 'inverterhybrid', 'photovoltaic', 'fuel', 'cell', 'wind']",3
2358,69478,"AI Controller Based Grid Integration of Hybrid  of PV and  DFIG Wind Power System <p>AI Controller Based Grid Integration of Hybrid  of PV and  DFIG Wind Power System </p>ai controller,dfig,fuzzy,grid,hybrid,pv",402,17,4,0,539,controller base grid integration hybrid dfig wind power controller base grid integration hybrid dfig wind power,"['controller', 'base', 'grid', 'integration', 'hybrid', 'dfig', 'wind', 'power', 'controller', 'base', 'grid', 'integration', 'hybrid', 'dfig', 'wind', 'power']",3
2359,69483,"This Simulink block allows users to change amplitude, period, width and phase delay of a square waveform signal.<p>This Simulink block allows users to change the amplitude, period, width and phase delay of a square waveform signal. The block acts like a Pulse generator with all parameters as inputs.</p>customizable,pulse generator,square wave",12,0,1,0,15,block allow user change amplitude period width phase delay square waveform signal block allow user change amplitude period width phase delay square waveform signal block act like pulse generator parameter input generatorsquare wave,"['block', 'allow', 'user', 'change', 'amplitude', 'period', 'width', 'phase', 'delay', 'square', 'waveform', 'signal', 'block', 'allow', 'user', 'change', 'amplitude', 'period', 'width', 'phase', 'delay', 'square', 'waveform', 'signal', 'block', 'act', 'like', 'pulse', 'generator', 'parameter', 'input', 'generatorsquare', 'wave']",7
2360,69512,"BESS are commonly used for load leveling, peak shaving, load shifting applications and etc.<p>BESS are commonly used for load leveling, peak shaving, load shifting applications and etc.This BESS Block takes hourly Load Profile (kW) input from workspace and compute the Grid and Battery usage output to workspace.The load profile has to be prepared in two column format, where the first column is time starting from 0 hour of the day. The second column is power consumption in kW unit. (For example, load the SampleLoadProfile.mat into workspace).The simulation run time is in hourly unit starting from 0 hour of the day. For example to simulate a 24 hours load profile, the simulation run time is set to 23, one week run time is set to 167, one month 30 days run time is set to 719 and 31 days run time set to 743.In model configuration parameters under Solver options, set to fixed-step type and set the fixed-step size (fundamental sample time) to 1 and run the simulation. The details explanation of the model can be found in the published paper belowhttp://<a href=""http://www.ijsgce.com/uploadfile/2019/1206/20191206110426819.pdfhttp://www.ijsgce.com/index.php?m=content&amp;c=index&amp;a=show&amp;catid=86&amp;id=572"">www.ijsgce.com/uploadfile/2019/1206/20191206110426819.pdfhttp://www.ijsgce.com/index.php?m=content&amp;c=index&amp;a=show&amp;catid=86&amp;id=572</a></p>battery_system_management,power_electronics_control,battery energy storage system,bess,ess,load leveling,load shifing,peak shaving",33,1,2,0,39,commonly load level peak shave load shift application etc commonly load level peak shave load shift application etc block take hourly load profile input workspace compute grid battery usage output workspace load profile prepare two column format first column time start hour day second column power consumption unit example load mat workspace run time hourly unit start hour day example hour load profile run time set one week run time set one month day run time set day run time set configuration parameter solver option set fixed step type set fix step size fundamental sample time run detail explanation find publish paper belowhttp ijsgce com uploadfile pdfhttp ijsgce com index php content amp index amp show amp catid amp battery managementpower electronics controlbattery energy storage levelingload shifingpeak shave,"['commonly', 'load', 'level', 'peak', 'shave', 'load', 'shift', 'application', 'etc', 'commonly', 'load', 'level', 'peak', 'shave', 'load', 'shift', 'application', 'etc', 'block', 'take', 'hourly', 'load', 'profile', 'input', 'workspace', 'compute', 'grid', 'battery', 'usage', 'output', 'workspace', 'load', 'profile', 'prepare', 'two', 'column', 'format', 'first', 'column', 'time', 'start', 'hour', 'day', 'second', 'column', 'power', 'consumption', 'unit', 'example', 'load', 'mat', 'workspace', 'run', 'time', 'hourly', 'unit', 'start', 'hour', 'day', 'example', 'hour', 'load', 'profile', 'run', 'time', 'set', 'one', 'week', 'run', 'time', 'set', 'one', 'month', 'day', 'run', 'time', 'set', 'day', 'run', 'time', 'set', 'configuration', 'parameter', 'solver', 'option', 'set', 'fixed', 'step', 'type', 'set', 'fix', 'step', 'size', 'fundamental', 'sample', 'time', 'run', 'detail', 'explanation', 'find', 'publish', 'paper', 'belowhttp', 'ijsgce', 'com', 'uploadfile', 'pdfhttp', 'ijsgce', 'com', 'index', 'php', 'content', 'amp', 'index', 'amp', 'show', 'amp', 'catid', 'amp', 'battery', 'managementpower', 'electronics', 'controlbattery', 'energy', 'storage', 'levelingload', 'shifingpeak', 'shave']",0
2361,69587,"Measurement of Power Factor for non-linear system,<p>Block can measure Displacement power factor, Distortion Power Factor and True Power Factor.</p>displacment,distortion,fft,harmonics,pf,power factor,thd,ture power factor",21,1,2,0,20,measurement power factor non linear systemblock measure displacement power factor distortion power factor true power factor factorthdture power factor,"['measurement', 'power', 'factor', 'non', 'linear', 'systemblock', 'measure', 'displacement', 'power', 'factor', 'distortion', 'power', 'factor', 'true', 'power', 'factor', 'factorthdture', 'power', 'factor']",4
2362,69600,"Get started with using MATLAB and Simulink with the Virtual Maritime RobotX Challenge gazebo simulation environment. <p>Get started with using MATLAB and Simulink with the Virtual Maritime RobotX Challenge gazebo simulation environment. This entry contains code to tackle 3 tasks from the competition - 1. Navigation Task; 2. Scan the Code; 3. Avoid Obstacles.Download the simulation environment from here : <a href=""https://bitbucket.org/osrf/vmrc/src"">https://bitbucket.org/osrf/vmrc/src</a> and follow the instructions in the readme document to get started</p>auvsi,control design,gazebo,marine robotics,robonation,ros",243,21,7,0,280,get start virtual maritime robotx challenge gazebo environment get start virtual maritime robotx challenge gazebo environment entry contain code tackle task competition navigation task scan code avoid obstacle download environment bitbucket org osrf vmrc src follow instruction readme document get,"['get', 'start', 'virtual', 'maritime', 'robotx', 'challenge', 'gazebo', 'environment', 'get', 'start', 'virtual', 'maritime', 'robotx', 'challenge', 'gazebo', 'environment', 'entry', 'contain', 'code', 'tackle', 'task', 'competition', 'navigation', 'task', 'scan', 'code', 'avoid', 'obstacle', 'download', 'environment', 'bitbucket', 'org', 'osrf', 'vmrc', 'src', 'follow', 'instruction', 'readme', 'document', 'get']",5
2363,69620,"This model file includes the main Sim-Multibody model, the initialization file, along with the necessary contact force library.             <p>This video is an introduction and use instruction to the simulator which was created within a seminar project by us at the University of  Kaiserslautern (TUK).The simulator model contains a planar vehicle model to which an inverted pendulum with a CMG is attached. Use this simulator for :1) Simulation and experimental validation of your balance control algorithms using the CMG by setting the vehicle velocity to zero.2) Simulation and experimental validation of your vehicle  motion control, by setting the pendulum angle to 180[deg] and  the fly wheel speed to zero.3) Simulation and experimental validation of your bicycle motion control algorithms.By:Dinesh Thirumurugan, Bhavesh Kataria, Allauddin Shaikh</p>bicycle,dynamics,mbs,multibodysimulation,simmechanics,simulator,simulinkchallenge2018,stability",4896,964,4,448,4570,file include main sim multibody initialization file along necessary contact force video introduction instruction create within seminar project university kaiserslautern tuk contain planar vehicle invert pendulum cmg attach experimental validation balance control algorithm cmg set vehicle velocity zero experimental validation vehicle motion control set pendulum angle deg fly wheel speed zero experimental validation bicycle motion control algorithms dinesh thirumurugan bhavesh kataria allauddin stability,"['file', 'include', 'main', 'sim', 'multibody', 'initialization', 'file', 'along', 'necessary', 'contact', 'force', 'video', 'introduction', 'instruction', 'create', 'within', 'seminar', 'project', 'university', 'kaiserslautern', 'tuk', 'contain', 'planar', 'vehicle', 'invert', 'pendulum', 'cmg', 'attach', 'experimental', 'validation', 'balance', 'control', 'algorithm', 'cmg', 'set', 'vehicle', 'velocity', 'zero', 'experimental', 'validation', 'vehicle', 'motion', 'control', 'set', 'pendulum', 'angle', 'deg', 'fly', 'wheel', 'speed', 'zero', 'experimental', 'validation', 'bicycle', 'motion', 'control', 'algorithms', 'dinesh', 'thirumurugan', 'bhavesh', 'kataria', 'allauddin', 'stability']",5
2364,69650,"Simulink example models to demonstrate the use of ROS together with hardware support packages to create a multi-node robotic system.<p>This submission contains example file to interface RaspberryPi and Arduino using Simulink and ROS. We used an Arduino along with RAMPS board to control our robotic arm which contains 3 stepper motors.The file ""arduino_code.slx"" contains the blocks for the stepper controllers and ROS node. We used this model to program the Arduino.The file ""robot_node.slx"" contains the implementation of inverse kinematics of our robotic arm. We created a standalone ROS node using Simulink coder and robotics toolbox.</p>electric_motor_control,power_electronics_control,arduino,raspberrypi,ros,simulink",70,5,2,0,89,example demonstrate together hardware support package create multi node robotic submission contain example file interface raspberrypi arduino arduino along ramp board control robotic arm contain stepper motor file arduino code slx contain block stepper controller ros node program arduino file robot node slx contain implementation inverse kinematics robotic arm create standalone node coder robotics toolbox electric motor controlpower electronics,"['example', 'demonstrate', 'together', 'hardware', 'support', 'package', 'create', 'multi', 'node', 'robotic', 'submission', 'contain', 'example', 'file', 'interface', 'raspberrypi', 'arduino', 'arduino', 'along', 'ramp', 'board', 'control', 'robotic', 'arm', 'contain', 'stepper', 'motor', 'file', 'arduino', 'code', 'slx', 'contain', 'block', 'stepper', 'controller', 'ros', 'node', 'program', 'arduino', 'file', 'robot', 'node', 'slx', 'contain', 'implementation', 'inverse', 'kinematics', 'robotic', 'arm', 'create', 'standalone', 'node', 'coder', 'robotics', 'toolbox', 'electric', 'motor', 'controlpower', 'electronics']",7
2365,69651,"Learn how to deploy an algorithm to an FPGA using MATLAB and Simulink<p>This tutorial will guide you through the steps necessary to implement a MATLAB algorithm in FPGA hardware, including:    * Create a streaming version of the algorithm using Simulink    * Implement the hardware architecture    * Convert the design to fixed-point    * Generate and synthesize the HDL code</p>pick of the week,potw,live script,fixedpoint,fpga,hdl coder,pulse detector,tutorial,verilog,vhdl,wireless,xilinx",119,11,3,0,119,learn deploy algorithm fpga tutorial guide step necessary implement algorithm fpga hardware include create stream version algorithm implement hardware architecture convert design fix point generate synthesize hdl codepick weekpotwlive coderpulse,"['learn', 'deploy', 'algorithm', 'fpga', 'tutorial', 'guide', 'step', 'necessary', 'implement', 'algorithm', 'fpga', 'hardware', 'include', 'create', 'stream', 'version', 'algorithm', 'implement', 'hardware', 'architecture', 'convert', 'design', 'fix', 'point', 'generate', 'synthesize', 'hdl', 'codepick', 'weekpotwlive', 'coderpulse']",0
2366,69653,"Simulink model used in the ""Power Factor Correction Control"" MathWorks video<p>This submission contains a Simulink model and a MATLAB script that was used in the âPower Factor Correction Controlâ MathWorks video. The model contains a cascaded digital controller for active power factor correction implemented with a boost converter. Gains of PI controllers in the outer voltage loop and inner current loop were tuned as shown in the video. The MATLAB scripts sets the physical properties of the passive components of the model and the design requirements.</p>power_conversion_control,power_electronics_control",123,10,4,0,133,power factor correction control mathworks videothis submission contains script power factor correction control mathworks video contains cascade digital controller active power factor correction implement boost converter gain controller outer voltage loop inner current loop tune show video script set physical property passive component design requirement power conversion controlpower electronics control,"['power', 'factor', 'correction', 'control', 'mathworks', 'videothis', 'submission', 'contains', 'script', 'power', 'factor', 'correction', 'control', 'mathworks', 'video', 'contains', 'cascade', 'digital', 'controller', 'active', 'power', 'factor', 'correction', 'implement', 'boost', 'converter', 'gain', 'controller', 'outer', 'voltage', 'loop', 'inner', 'current', 'loop', 'tune', 'show', 'video', 'script', 'set', 'physical', 'property', 'passive', 'component', 'design', 'requirement', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2367,69675,"Control model input values with App Designer User Interface objects<p>Introduction to basic Simulink parameter control via App Designer.</p>gui,simulation",20,0,1,0,10,control input value app designer user interface basic parameter control via app designer,"['control', 'input', 'value', 'app', 'designer', 'user', 'interface', 'basic', 'parameter', 'control', 'via', 'app', 'designer']",4
2368,69743,"A workshop covering the essentials of programming autonomous tasks for mobile robots with MATLAB and Simulink.<p>A workshop covering the essentials of programming autonomous tasks for mobile robots. Learn the basic components of successful autonomy algorithms and how to use VEX sensors with various control techniques to localize your robot, identify map features and track objects of interest. Webinar recording available here:<a href=""https://www.youtube.com/watch?v=YyWvF65B4loWorkshop"">https://www.youtube.com/watch?v=YyWvF65B4loWorkshop</a> outline:- Intro to Robot Autonomy- Simulation and Graphical Modeling Overview- Individual Autonomy Tasks:   * Avoiding Obstacles   * Moving for Time (Temporal Logic)   * Dead Reckoning (State Machines)   * Navigating with Encoders (On/Off)   * Determining Position (Odometry)   * Controlling Position (PID)   * Detecting Objects- Complete Autonomous Implementation- Summary and Resources</p>best,best robotics,mobile robotics,robotics,vex,vex edr,vex robotics,vex v5",8409,592,4,120,1248,workshop cover essential program autonomous task mobile robot workshop cover essential program autonomous task mobile robot learn basic component successful autonomy algorithms vex sensor various control technique localize robot identify map feature track object interest webinar record available youtube com watch yywvf loworkshop outline intro robot autonomy graphical modeling overview individual autonomy task avoid obstacle move time temporal logic dead reckon state machine navigate encoders determine position odometry control position pid detect object complete autonomous implementation summary roboticsmobile edrvex roboticsvex,"['workshop', 'cover', 'essential', 'program', 'autonomous', 'task', 'mobile', 'robot', 'workshop', 'cover', 'essential', 'program', 'autonomous', 'task', 'mobile', 'robot', 'learn', 'basic', 'component', 'successful', 'autonomy', 'algorithms', 'vex', 'sensor', 'various', 'control', 'technique', 'localize', 'robot', 'identify', 'map', 'feature', 'track', 'object', 'interest', 'webinar', 'record', 'available', 'youtube', 'com', 'watch', 'yywvf', 'loworkshop', 'outline', 'intro', 'robot', 'autonomy', 'graphical', 'modeling', 'overview', 'individual', 'autonomy', 'task', 'avoid', 'obstacle', 'move', 'time', 'temporal', 'logic', 'dead', 'reckon', 'state', 'machine', 'navigate', 'encoders', 'determine', 'position', 'odometry', 'control', 'position', 'pid', 'detect', 'object', 'complete', 'autonomous', 'implementation', 'summary', 'roboticsmobile', 'edrvex', 'roboticsvex']",5
2369,69789,"Here we use 4 message will send them Showing this concept and the TDMA and FDMA as simple aspossible .<p>This simulation focus on the concept behind of the GSM and OFDMA is multiplexing number of users over specific band of the frequency spectrum then multiplexing each of them in time by giving each user periodic time slot.Here we use 4 message will send them respecting this concept as simple aspossible</p>fdma,fm,gsm,ofdma,receiving,rx,tdma,transmission,tx",41,0,1,0,54,message send show concept tdma fdma simple aspossible focus concept behind gsm ofdma multiplexing number user specific band frequency spectrum multiplexing time give user periodic time slot message send respect concept simple,"['message', 'send', 'show', 'concept', 'tdma', 'fdma', 'simple', 'aspossible', 'focus', 'concept', 'behind', 'gsm', 'ofdma', 'multiplexing', 'number', 'user', 'specific', 'band', 'frequency', 'spectrum', 'multiplexing', 'time', 'give', 'user', 'periodic', 'time', 'slot', 'message', 'send', 'respect', 'concept', 'simple']",5
2370,69845,"Simulation of Trojan Asteroids of a Binary System<p>Simulation of Trojan Asteroids of a Binary SystemThe 3D display is made in inertial frame or rotating frame linked to the binary system Modify the parameters 'm1/m2/r12' in 'simTrojanInit.m' in order to change the binary system ( by default Sun / Jupiter )Modify the parameter 'np' in the block 'initialization' in order Increase/decrease the number of asteroids ( by default 20 )Modify the parameter 'n' in 'plot3D.m' in order to get remanent trajectories (set it to 50 or more ) Reference : <a href=""https://en.wikipedia.org/wiki/Trojan_(celestial_body)"">https://en.wikipedia.org/wiki/Trojan_(celestial_body)</a></p>lagrange points,nbody,trojan,trojan asteroids",7,0,1,0,8,trojan asteroid binary trojan asteroid binary systemthe display make inertial frame rotate frame link binary modify parameter simtrojaninit order change binary default sun jupiter modify parameter block initialization order increase decrease number asteroid default modify parameter plot order get remanent trajectory set reference wikipedia org wiki trojan celestial body lagrange asteroid,"['trojan', 'asteroid', 'binary', 'trojan', 'asteroid', 'binary', 'systemthe', 'display', 'make', 'inertial', 'frame', 'rotate', 'frame', 'link', 'binary', 'modify', 'parameter', 'simtrojaninit', 'order', 'change', 'binary', 'default', 'sun', 'jupiter', 'modify', 'parameter', 'block', 'initialization', 'order', 'increase', 'decrease', 'number', 'asteroid', 'default', 'modify', 'parameter', 'plot', 'order', 'get', 'remanent', 'trajectory', 'set', 'reference', 'wikipedia', 'org', 'wiki', 'trojan', 'celestial', 'body', 'lagrange', 'asteroid']",5
2371,69875,"Workflow to extract switching behavior ic(vGE, vCE) from LTSpice standard MOSFETs<p>The files provide a workflow to extract the characteristic switching behavior ic(vGE, vCE) from LTSpice standard MOSFET devices to Lookup Table Data, that can for example be used with the N-Channel IGBT block from Simscape Electrical.The current flowing through a switching device is a nonlinear function of the Gate-Emitter and Collector Emitter voltage (vGE, vCE). LTSpice network simulator from Analog Devices provides many switching devices as part of the standard library.The workflow runs LTSpice simulations from MATLAB to generate the Lookup Table Data, which will be used in the N-Channel IGBT block of Simscape Electrical with the option ""Lookup Table (2-D, temparature independent).It is required to have a LTSpice installation.It uses the File Exchange Submissesion 23394 from Paul Wagner to import the .raw data from the LTSpice simulation to MATLAB:<a href=""https://www.mathworks.com/matlabcentral/fileexchange/23394-fast-import-of-compressed-binary-raw-files-created-with-ltspice-circuit-simulatorPlease"">https://www.mathworks.com/matlabcentral/fileexchange/23394-fast-import-of-compressed-binary-raw-files-created-with-ltspice-circuit-simulatorPlease</a> read the README.txt file to get started.</p>power_conversion_control,power_electronics_control,ltspice,power electronics,simscape electrical",11,0,1,0,12,workflow extract switch behavior vge vce ltspice standard mosfetsthe file provide workflow extract characteristic switch behavior vge vce ltspice standard mosfet device lookup table data example channel igbt block simscape electrical current flow switch device nonlinear function gate emitter collector emitter voltage vge vce ltspice network analog device provide many switch device part standard workflow run ltspice generate lookup table data channel igbt block simscape electrical option lookup table temparature independent require ltspice installation file exchange submissesion paul wagner import raw data ltspice mathworks com matlabcentral fileexchange fast import compress binary raw file create ltspice circuit read readme txt file get start power conversion controlpower electronics electrical,"['workflow', 'extract', 'switch', 'behavior', 'vge', 'vce', 'ltspice', 'standard', 'mosfetsthe', 'file', 'provide', 'workflow', 'extract', 'characteristic', 'switch', 'behavior', 'vge', 'vce', 'ltspice', 'standard', 'mosfet', 'device', 'lookup', 'table', 'data', 'example', 'channel', 'igbt', 'block', 'simscape', 'electrical', 'current', 'flow', 'switch', 'device', 'nonlinear', 'function', 'gate', 'emitter', 'collector', 'emitter', 'voltage', 'vge', 'vce', 'ltspice', 'network', 'analog', 'device', 'provide', 'many', 'switch', 'device', 'part', 'standard', 'workflow', 'run', 'ltspice', 'generate', 'lookup', 'table', 'data', 'channel', 'igbt', 'block', 'simscape', 'electrical', 'option', 'lookup', 'table', 'temparature', 'independent', 'require', 'ltspice', 'installation', 'file', 'exchange', 'submissesion', 'paul', 'wagner', 'import', 'raw', 'data', 'ltspice', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'fast', 'import', 'compress', 'binary', 'raw', 'file', 'create', 'ltspice', 'circuit', 'read', 'readme', 'txt', 'file', 'get', 'start', 'power', 'conversion', 'controlpower', 'electronics', 'electrical']",0
2372,69892,"Calculate and visualize the inverse kinematics of a 2-link robot arm along with the Jacobian, and make the robot to write Hello.<p>This example shows how to define a two-link planar robot arm with symbolic variables, and compute the forward and inverse kinematics. The example also visualizes the results with contour plots. Further, it shows how to calculate the system Jacobian and use it further in a Simulink model. The Simulink model uses the inverse kinematics equations and the system Jacobian to simulate the robot to make it write or draw the word 'hello'. </p>live script,control a pendulum,double pendulum,drawing robot,forward kinematics,inverse kinematics,robot arm,robotics,symbolic math,symbolic math toolbox",186,7,3,0,217,calculate visualize inverse kinematics link robot arm along jacobian make robot write hello example show define two link planar robot arm symbolic variable compute forward inverse kinematics example also visualize result contour plot show calculate jacobian inverse kinematics equation jacobian robot make write draw word hello live scriptcontrol pendulumdouble pendulumdrawing robotforward kinematicsrobot mathsymbolic math toolbox,"['calculate', 'visualize', 'inverse', 'kinematics', 'link', 'robot', 'arm', 'along', 'jacobian', 'make', 'robot', 'write', 'hello', 'example', 'show', 'define', 'two', 'link', 'planar', 'robot', 'arm', 'symbolic', 'variable', 'compute', 'forward', 'inverse', 'kinematics', 'example', 'also', 'visualize', 'result', 'contour', 'plot', 'show', 'calculate', 'jacobian', 'inverse', 'kinematics', 'equation', 'jacobian', 'robot', 'make', 'write', 'draw', 'word', 'hello', 'live', 'scriptcontrol', 'pendulumdouble', 'pendulumdrawing', 'robotforward', 'kinematicsrobot', 'mathsymbolic', 'math', 'toolbox']",0
2373,69948,"This is an average AC-DC VSC. Ratings can be changed, and P/V and Q settings can be tuned. <p>This is an average AC-DC VSC. This model will show you the fundamental of VSC about d/q decoupling. The control system operates in pu, so it is flexible to apply this in another network just after changing the ratings in the ""Mask"" of the converter block. If you want to build a real model based on this average model, you can enable PMW, and replace the controlled 3 voltage sources with 6 switches.If you have any questions or suggestions, please contact me, <a href=""mailto:chunpeng.li@strath.ac.uk.Notes"">chunpeng.li@strath.ac.uk.Notes</a>:1. Inside the converter control parts, all parameters adopt per unit.2. Open the ""Mask"" of the converter [Ctrl+M], go to ""Initialisation"" tab, you can change all ratings.3. Double click the converter, in the ""global monitor"" block, you can observe the variables in pu. And in the up-left boxes, red blocks, you can switch and tune the P/V control, and adjust Q setpoint.          </p>electric_motor_control,power_conversion_control,power_electronics_control,control design,dc microgrid,power electronics",130,1,2,0,144,average vsc rating change setting tune average vsc show fundamental vsc decouple control operate flexible apply another network change rating mask converter block want build real base average enable pmw replace control voltage source switch question suggestion please contact chunpeng strath note inside converter control part parameter adopt per unit open mask converter ctrl initialisation tab change rating double click converter global monitor block observe variable leave box red block switch tune control adjust setpoint electric motor controlpower conversion controlpower electronics controlcontrol designdc microgridpower electronics,"['average', 'vsc', 'rating', 'change', 'setting', 'tune', 'average', 'vsc', 'show', 'fundamental', 'vsc', 'decouple', 'control', 'operate', 'flexible', 'apply', 'another', 'network', 'change', 'rating', 'mask', 'converter', 'block', 'want', 'build', 'real', 'base', 'average', 'enable', 'pmw', 'replace', 'control', 'voltage', 'source', 'switch', 'question', 'suggestion', 'please', 'contact', 'chunpeng', 'strath', 'note', 'inside', 'converter', 'control', 'part', 'parameter', 'adopt', 'per', 'unit', 'open', 'mask', 'converter', 'ctrl', 'initialisation', 'tab', 'change', 'rating', 'double', 'click', 'converter', 'global', 'monitor', 'block', 'observe', 'variable', 'leave', 'box', 'red', 'block', 'switch', 'tune', 'control', 'adjust', 'setpoint', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controlcontrol', 'designdc', 'microgridpower', 'electronics']",4
2374,69954,"QR decomposition for 8x8 matrix using Givens rotation<p>QR decomposition for 8x8 matrix, this model is used for Homography Estimation in RANSAC.4 point pairs are randomly selected and then formed the matrix in the following way.A = ax1, ay1, 1, 0, 0, 0, -ax1*bx1, -ay1*bx1;ax2, ay2, 1, 0, 0, 0, -ax2*bx2, -ay2*bx2;ax3, ay3, 1, 0, 0, 0, -ax3*bx3, -ay3*bx3;0, 0, 0, ax1, ay1, -1, -ax1*by1, -ay1*by1;0, 0, 0, ax2, ay2, -1, -ax2*by2, -ay2*by2;0, 0, 0, ax3, ay3, -1, -ax3*by3, -ay3*by3;ax4, ay4, 1, 0, 0, 0, -ax4*bx4, -ay4*bx4;One could easily modify it into general purpose 8x8 matrix QR decomposition.After running the simulink model, the error is calculated by Q*R-Matrix. One could check it.</p>",2211,197,6,0,2437,decomposition matrix given rotationqr decomposition matrix homography estimation ransac point pair randomly select form matrix follow way one could easily modify general purpose matrix decomposition run error calculate matrix one could check,"['decomposition', 'matrix', 'given', 'rotationqr', 'decomposition', 'matrix', 'homography', 'estimation', 'ransac', 'point', 'pair', 'randomly', 'select', 'form', 'matrix', 'follow', 'way', 'one', 'could', 'easily', 'modify', 'general', 'purpose', 'matrix', 'decomposition', 'run', 'error', 'calculate', 'matrix', 'one', 'could', 'check']",5
2375,70007,"Simplest example of Boost converter in Simulink<p>In this simulink example we presented simple usage of Boost Converter</p>boostconverer,simulation,power_conversion_control,power_electronics_control",23,1,2,0,27,simple example boost converter example present simple usage boost conversion controlpower electronics control,"['simple', 'example', 'boost', 'converter', 'example', 'present', 'simple', 'usage', 'boost', 'conversion', 'controlpower', 'electronics', 'control']",1
2376,70039,"Basic alkaline electrolyser using simscape/power systems/specialized technology toolbox.<p>As described in publication:""MATLAB Simscape Model of An Alkaline Electrolyser and Its Simulation with A Directly Coupled PV Module for Auckland Solar Irradiance Profile""<a href=""https://www.ijrer.org/ijrer/index.php/ijrer/article/view/7266"">https://www.ijrer.org/ijrer/index.php/ijrer/article/view/7266</a></p>",65,3,4,0,71,basic alkaline electrolyser simscape power specialize technology toolbox describe publication simscape alkaline electrolyser directly couple module auckland solar irradiance profile ijrer org ijrer index php ijrer article view,"['basic', 'alkaline', 'electrolyser', 'simscape', 'power', 'specialize', 'technology', 'toolbox', 'describe', 'publication', 'simscape', 'alkaline', 'electrolyser', 'directly', 'couple', 'module', 'auckland', 'solar', 'irradiance', 'profile', 'ijrer', 'org', 'ijrer', 'index', 'php', 'ijrer', 'article', 'view']",5
2377,70067,"An assortment of blocks to measure the frequency, phase difference and phase sequence/rotation of an AC signal.<p>An assortment of blocks to measure the frequency, phase difference and phase sequence/rotation of an AC signal.</p>frequency measurement,frequency meter,measure frequency,phase angle,phase difference,phase displacement,rotation,sequence",107,10,3,0,108,assortment block measure frequency phase difference phase sequence rotation signal assortment block measure frequency phase difference phase sequence rotation signal frequency metermeasure frequencyphase anglephase differencephase,"['assortment', 'block', 'measure', 'frequency', 'phase', 'difference', 'phase', 'sequence', 'rotation', 'signal', 'assortment', 'block', 'measure', 'frequency', 'phase', 'difference', 'phase', 'sequence', 'rotation', 'signal', 'frequency', 'metermeasure', 'frequencyphase', 'anglephase', 'differencephase']",4
2378,70085,"This a Simulink model for a square wave three phases two-level voltage source inverter.<p>This a Simulink model for a square wave three phases two-level voltage source inverter.The input of the inverter is 200 V and is feeding power to a star connected R-L of value 1mH and 1 ohm, respectively. Model is created by Amit Kumar <a href=""mailto:Singh.amit.rishu@gmail.com"">Singh.amit.rishu@gmail.com</a> Feel free to use and provide me honest feedback. </p>energy,inverter,power,power electronics,simulation,simulink",59,2,2,0,59,square wave three phase two level voltage source inverter square wave three phase two level voltage source inverter input inverter feed power star connect value ohm respectively create amit kumar singh amit rishu gmail com feel free provide honest feedback,"['square', 'wave', 'three', 'phase', 'two', 'level', 'voltage', 'source', 'inverter', 'square', 'wave', 'three', 'phase', 'two', 'level', 'voltage', 'source', 'inverter', 'input', 'inverter', 'feed', 'power', 'star', 'connect', 'value', 'ohm', 'respectively', 'create', 'amit', 'kumar', 'singh', 'amit', 'rishu', 'gmail', 'com', 'feel', 'free', 'provide', 'honest', 'feedback']",3
2379,70091,"Block to interface with an incremental rotary (quadrature) encoder to measure speed and direction.<p>Block to interface with an incremental rotary (quadrature) encoder to measure speed and direction.</p>encoder,incremental,quadrature,rotary encoder,shaft encoder",117,12,4,0,130,block interface incremental rotary quadrature encoder measure speed direction block interface incremental rotary quadrature encoder measure speed direction encodershaft encoder,"['block', 'interface', 'incremental', 'rotary', 'quadrature', 'encoder', 'measure', 'speed', 'direction', 'block', 'interface', 'incremental', 'rotary', 'quadrature', 'encoder', 'measure', 'speed', 'direction', 'encodershaft', 'encoder']",5
2380,70093,"Reads IMU sensor wirelessly from the IOS app 'Sensor Stream' to a Simulink model.<p>Reads IMU sensor (acceleration and velocity) wirelessly from the IOS app 'Sensor Stream' to a Simulink model and filters an orientation angle in degrees using a linear Kalman filter. The filter reduces sensor noise and eliminates errors in orientation measurements caused by inertial forces exerted on the IMU. The orientation and Kalman filter function blocks may be converted to C code and ported to a standalone embedded system. A special thanks are extended to âTKJ Electronicsâ in aiding with the practical implementation of the filter.</p>ios,kalman filter,sensor fusion,wifi",78,0,1,0,74,read imu sensor wirelessly ios app sensor stream read imu sensor acceleration velocity wirelessly ios app sensor stream filter orientation angle degree linear kalman filter filter reduces sensor noise eliminate error orientation measurement cause inertial force exert imu orientation kalman filter function block may convert code port standalone embed special thanks extend tkj electronics aid practical implementation filter ioskalman filtersensor fusionwifi,"['read', 'imu', 'sensor', 'wirelessly', 'ios', 'app', 'sensor', 'stream', 'read', 'imu', 'sensor', 'acceleration', 'velocity', 'wirelessly', 'ios', 'app', 'sensor', 'stream', 'filter', 'orientation', 'angle', 'degree', 'linear', 'kalman', 'filter', 'filter', 'reduces', 'sensor', 'noise', 'eliminate', 'error', 'orientation', 'measurement', 'cause', 'inertial', 'force', 'exert', 'imu', 'orientation', 'kalman', 'filter', 'function', 'block', 'may', 'convert', 'code', 'port', 'standalone', 'embed', 'special', 'thanks', 'extend', 'tkj', 'electronics', 'aid', 'practical', 'implementation', 'filter', 'ioskalman', 'filtersensor', 'fusionwifi']",5
2381,70131,"ÐÐ°ÐºÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ Ð¿ÑÐ¸Ð¼ÐµÑ Ð¾Ð»Ð¸Ð¼Ð¿Ð¸Ð°Ð´Ð½Ð¾Ð³Ð¾ Ð·Ð°Ð´Ð°Ð½Ð¸Ñ Ð¸ Ð¿ÑÐ¸Ð¼ÐµÑ ÐµÐ³Ð¾ ÑÐµÑÐµÐ½Ð¸Ñ.<p>Ð Ð´ÐµÐ¼Ð¾Ð½ÑÑÑÐ°ÑÐ¸Ð¾Ð½Ð½Ð¾Ð¼ Ð·Ð°Ð´Ð°Ð½Ð¸Ð¸ ÑÐ°ÑÑÐ¼Ð°ÑÑÐ¸Ð²Ð°ÐµÑÑÑ ÑÐ°Ð·ÑÐ°Ð±Ð¾ÑÐºÐ° ÑÐ¸ÑÑÐµÐ¼Ñ ÑÐ¿ÑÐ°Ð²Ð»ÐµÐ½Ð¸Ñ Ð´Ð»Ñ ÑÐ¾Ð±Ð¾ÑÐ° Ð±Ð¸Ð»ÑÑÑÐ´Ð¸ÑÑÐ°. ÐÐ°ÐºÐµÑ Ð¼Ð¾Ð´ÐµÐ»ÐµÐ¹ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÐºÐ°Ðº Ð¿ÑÐ¸Ð¼ÐµÑ Ð³Ð¾ÑÐ¾Ð²Ð¾Ð³Ð¾ ÑÐµÑÐµÐ½Ð¸Ñ, ÑÐ°Ðº Ð¸ Ð¸Ð½ÑÑÑÑÐ¼ÐµÐ½ÑÑ Ð´Ð»Ñ Ð¾ÑÐ»Ð°Ð´ÐºÐ¸ Ð¸ ÑÐµÑÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð¸Ñ ÑÐ¸Ð½ÑÐµÐ·Ð¸ÑÑÐµÐ¼ÑÑ ÑÐµÑÐµÐ½Ð¸Ð¹.  </p>",1734,59,4,0,1830,ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ Ð¿ÑÐ¸Ð¼ÐµÑ Ð¿ÑÐ¸Ð¼ÐµÑ ÐµÐ³Ð¾ ÑÐ°ÑÑÐ¼Ð°ÑÑÐ¸Ð²Ð°ÐµÑÑÑ Ð´Ð»Ñ ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ ÐºÐ°Ðº Ð¿ÑÐ¸Ð¼ÐµÑ ÑÐ°Ðº Ð´Ð»Ñ,"['ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ', 'Ð¿ÑÐ¸Ð¼ÐµÑ', 'Ð¿ÑÐ¸Ð¼ÐµÑ', 'ÐµÐ³Ð¾', 'ÑÐ°ÑÑÐ¼Ð°ÑÑÐ¸Ð²Ð°ÐµÑÑÑ', 'Ð´Ð»Ñ', 'ÑÐ¾Ð´ÐµÑÐ¶Ð¸Ñ', 'ÐºÐ°Ðº', 'Ð¿ÑÐ¸Ð¼ÐµÑ', 'ÑÐ°Ðº', 'Ð´Ð»Ñ']",2
2382,70209,"This simulation is properly working only in MATLAB 2017 and higher version of MATLAB<p>This simulation is used full to understand the 180 Degree Mode of Inverter. I hope it is very helpfull to you. If any problem to understand plz contact me at ( <a href=""mailto:aemansuri@gmail.com"">aemansuri@gmail.com</a> ) gmail. Thank you....</p>180 degree mode,bridge inverter,inverter,three phase",39,1,2,0,40,properly work high version matlabthis full understand degree mode inverter hope helpfull problem understand plz contact aemansuri gmail com gmail thank degree modebridge phase,"['properly', 'work', 'high', 'version', 'matlabthis', 'full', 'understand', 'degree', 'mode', 'inverter', 'hope', 'helpfull', 'problem', 'understand', 'plz', 'contact', 'aemansuri', 'gmail', 'com', 'gmail', 'thank', 'degree', 'modebridge', 'phase']",4
2383,70221,cosine firing scheme for 3 phase converter with variying firing angle.<p>cosine firing scheme for 3 phase converter with variying firing angle.</p>,144,1,2,0,165,cosine fire scheme phase converter variying fire angle cosine fire scheme phase converter variying fire angle,"['cosine', 'fire', 'scheme', 'phase', 'converter', 'variying', 'fire', 'angle', 'cosine', 'fire', 'scheme', 'phase', 'converter', 'variying', 'fire', 'angle']",4
2384,70247,AVR OF ISOLATED POWER SYSTEM<p>THIS IS A THREE STEP METHOD OF PID CONTROLLER</p>agc avr maps pid,8,0,1,0,8,avr isolated power systemthis three step method pid controlleragc avr map pid,"['avr', 'isolated', 'power', 'systemthis', 'three', 'step', 'method', 'pid', 'controlleragc', 'avr', 'map', 'pid']",4
2385,70286,Simscape Mutibody demo<p>Use Simscape Mutibody to model a slider-crank mechanism. Revolute and Prismatic joints are used to model the mechanism.</p>physical modeling,12,0,1,0,12,simscape mutibody demouse simscape mutibody slider crank mechanism revolute prismatic joint mechanism physical modeling,"['simscape', 'mutibody', 'demouse', 'simscape', 'mutibody', 'slider', 'crank', 'mechanism', 'revolute', 'prismatic', 'joint', 'mechanism', 'physical', 'modeling']",5
2386,70303,"Example showing HDL Verifier SystemVerilog DPI component generation from MATLAB and cosimulation with Simulink<p>Demo design and files from the webinar ""Improve RTL verification by connecting to MATLAB"", which shows:    * SystemVerilog DPI component generation from MATLAB for stimulus and checking functions    * Integration of the generated components into a SystemVerilog UVM test environment    * Importing handwritten Verilog into HDL Verifier cosimulation    * Debugging the testbench using by cosimulating Simulink with Mentor Graphics QuestaThis download includes the slides from the webinar, with the demo instructions interleaved. The slides also cover how advanced customers perform verification and validation at the model level to shift verification to earlier in the workflow.</p>live script,asic,cosimulation,fpga,hdl verifier,mentor graphics,rtl verification,soc,systemverilog dpi,uvm",65,7,3,0,68,example show hdl verifier systemverilog dpi component generation design file webinar improve rtl verification connecting show systemverilog dpi component generation stimulus check function integration generate component systemverilog uvm test environment import handwritten verilog hdl verifier debug testbench mentor graphic questathis download include slide webinar demo instruction interleave slide also cover advanced customer perform verification validation level shift verification earlier workflow live verifiermentor graphicsrtl dpiuvm,"['example', 'show', 'hdl', 'verifier', 'systemverilog', 'dpi', 'component', 'generation', 'design', 'file', 'webinar', 'improve', 'rtl', 'verification', 'connecting', 'show', 'systemverilog', 'dpi', 'component', 'generation', 'stimulus', 'check', 'function', 'integration', 'generate', 'component', 'systemverilog', 'uvm', 'test', 'environment', 'import', 'handwritten', 'verilog', 'hdl', 'verifier', 'debug', 'testbench', 'mentor', 'graphic', 'questathis', 'download', 'include', 'slide', 'webinar', 'demo', 'instruction', 'interleave', 'slide', 'also', 'cover', 'advanced', 'customer', 'perform', 'verification', 'validation', 'level', 'shift', 'verification', 'earlier', 'workflow', 'live', 'verifiermentor', 'graphicsrtl', 'dpiuvm']",5
2387,70310,"Power Factor (PF) calculation<p>Power Factor calculation for three-phase diode rectifier for a highly inductive load.</p>converter,power electronics,power factor,rectifier",28,0,1,0,35,power factor factor calculation three phase diode rectifier highly inductive load converterpower factorrectifier,"['power', 'factor', 'factor', 'calculation', 'three', 'phase', 'diode', 'rectifier', 'highly', 'inductive', 'load', 'converterpower', 'factorrectifier']",3
2388,70311,"Power Factor calculation<p>Power Factor calculation for single phase diode rectifier with a highly inductive load</p>acdc,power electronics,power factor,rectifier,thd",24,0,1,0,27,power factor factor calculation single phase diode rectifier highly inductive loadacdcpower,"['power', 'factor', 'factor', 'calculation', 'single', 'phase', 'diode', 'rectifier', 'highly', 'inductive', 'loadacdcpower']",3
2389,70317,"The Simulink-to-Stateflow tool translates Simulink block diagrams into Stateflow state charts.<p>The Simulink-to-Stateflow tool refactors state update logic implemented with Simulink block diagrams into Stateflow state charts.  It is intended for use on fixed-step discrete block diagrams, such as those used to generate embedded software.For instructions on installation and how to use the tool, see doc/README.txt.</p>refactoring,simulink,state chart,stateflow,transformation",319,11,2,2,186,stateflow tool translates block diagram stateflow state chart stateflow tool refactors state update logic implement block diagram stateflow state chart intend fixed step discrete block diagram generate embed software instruction installation tool see doc readme txt,"['stateflow', 'tool', 'translates', 'block', 'diagram', 'stateflow', 'state', 'chart', 'stateflow', 'tool', 'refactors', 'state', 'update', 'logic', 'implement', 'block', 'diagram', 'stateflow', 'state', 'chart', 'intend', 'fixed', 'step', 'discrete', 'block', 'diagram', 'generate', 'embed', 'software', 'instruction', 'installation', 'tool', 'see', 'doc', 'readme', 'txt']",7
2390,70320,"This model demonstrate the fundamental operation of a Push-Pull DC to AC Converter<p>This model demonstrate the fundamental operation of a Push-Pull DC to AC Converter using a 9V-0-9V / 240V center tap transformer. This Push-Pull DC to AC converter produces a 200-250V 50Hz square wave output from a 12V DC input.</p>electric_motor_control,power_conversion_control,power_electronics_control,dc to ac converter,inverter,push pull converter,push pull inverter",13,0,1,0,17,demonstrate fundamental operation push pull converterthis demonstrate fundamental operation push pull converter center tap transformer push pull converter produce square wave output input electric motor controlpower conversion controlpower electronics controldc pull converterpush pull inverter,"['demonstrate', 'fundamental', 'operation', 'push', 'pull', 'converterthis', 'demonstrate', 'fundamental', 'operation', 'push', 'pull', 'converter', 'center', 'tap', 'transformer', 'push', 'pull', 'converter', 'produce', 'square', 'wave', 'output', 'input', 'electric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'controldc', 'pull', 'converterpush', 'pull', 'inverter']",3
2391,70492,"Simscape Electrical (Simulinkãã¼ã¹ã®ã©ã¤ãã©ãª) ãè©ä¾¡ããããã®ãã¥ã¼ããªã¢ã« / (Tutorial to evaluate Simscape Electrical (Simulink based library) by yourself)<p>æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Electricalã®Simulinkãã¼ã¹ã®ã©ã¤ãã©ãª (Specialized Power Systems) ã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããæ¬ã©ã¤ãã©ãªã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ãèªå°ã¢ã¼ã¿é§åè£ç½®ã®é»æ°/æ©æ¢°ç³»ã®ã¢ãã«ã§ããã¾ããSimscape Electricalã®æ¦è¦ã«ã¤ãã¦ã¯ãä»¥ä¸ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããæ³¨æäºé :ãã¼ã¸ã§ã³R2018bã§ãå¾æ¥ã®2ã¤ã®é»æ°ç³»ãã¼ã« (Simscape Power SystemsãSimscape Electronics) ã1ã¤ã®ãã¼ã«ã«çµ±åããã¦ãåç§°ãSimscape Electricalã«å¤æ´ããã¾ããããã£ã¦ããã¼ã¸ã§ã³R2016aï½R2018aããä½¿ç¨ãããæ¹ã¯ãæ¬ãã¥ã¼ããªã¢ã«ã¨åãåå®¹ã®ä»¥ä¸ã®ãã¥ã¼ããªã¢ã«ããå©ç¨ä¸ãããThis tutorial is shown about the basic usage of Simscape Electrical (Simulink based library: âSpecialized Power Systemsâ). There are an explanation material (Japanese) and a sample model to evaluate this library by yourself. The example is the electrical and mechanical model of induction motor drive system. Then, if you want to know the overview of Simscape Electrical, please see the following short movie.Note:In version R2018b, two conventional electrical tools (Simscape Power Systems, Simscape Electronics) were integrated into one tool, and the name was changed to âSimscape Electricalâ.Therefore, if you are using version (R2016a, R2016b, R2017a, R2017b, R2018a), please use the following tutorial which is the same content with this tutorial. ã·ã§ã¼ãã ã¼ãã¼ã(Short movie)âSimscape Electrical Overview (Simscape Electricalæ¦è¦)â (2:26)<a href=""https://jp.mathworks.com/videos/simscape-electrical-overview-1536775075787.htmlSimscape"">https://jp.mathworks.com/videos/simscape-electrical-overview-1536775075787.htmlSimscape</a> Power Systemsãã¥ã¼ããªã¢ã« (Simscape Power Systems Tutorial)(Version: R2016a, R2016b, R2017a, R2017b, R2018a)<a href=""https://jp.mathworks.com/matlabcentral/fileexchange/57343-simscape-power-systems-simscape-power-systems-tutorial"">https://jp.mathworks.com/matlabcentral/fileexchange/57343-simscape-power-systems-simscape-power-systems-tutorial</a></p>physical modeling,simscape,simscape electrical,simulation,electric_motor_control,power_conversion_control,power_electronics_control",26,2,2,0,38,simscape electrical ãè©ä¾¡ããããã®ãã¥ã¼ããªã¢ã« tutorial evaluate simscape electrical base specialized power ãã¼ã¸ã§ã³r bã§å¾æ¥ã® ã¤ã®é»æ°ç³»ãã¼ã« simscape power systemssimscape electronics tutorial show basic usage simscape electrical base specialized power explanation material japanese sample evaluate example electrical mechanical induction motor drive want know overview simscape electrical please see follow short movie note version two conventional electrical tool simscape power simscape electronics integrate one tool name change simscape electrical therefore version please follow tutorial content tutorial ã·ã§ã¼ãã ã¼ãã¼ short movie simscape electrical overview simscape electricalæ¦è¦ mathworks com videos simscape electrical overview htmlsimscape power systemsãã¥ã¼ããªã¢ã« simscape power tutorial version mathworks com matlabcentral fileexchange simscape power simscape power motor controlpower conversion controlpower electronics control,"['simscape', 'electrical', 'ãè©ä¾¡ããããã®ãã¥ã¼ããªã¢ã«', 'tutorial', 'evaluate', 'simscape', 'electrical', 'base', 'specialized', 'power', 'ãã¼ã¸ã§ã³r', 'bã§å¾æ¥ã®', 'ã¤ã®é»æ°ç³»ãã¼ã«', 'simscape', 'power', 'systemssimscape', 'electronics', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'electrical', 'base', 'specialized', 'power', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'example', 'electrical', 'mechanical', 'induction', 'motor', 'drive', 'want', 'know', 'overview', 'simscape', 'electrical', 'please', 'see', 'follow', 'short', 'movie', 'note', 'version', 'two', 'conventional', 'electrical', 'tool', 'simscape', 'power', 'simscape', 'electronics', 'integrate', 'one', 'tool', 'name', 'change', 'simscape', 'electrical', 'therefore', 'version', 'please', 'follow', 'tutorial', 'content', 'tutorial', 'ã·ã§ã¼ãã ã¼ãã¼', 'short', 'movie', 'simscape', 'electrical', 'overview', 'simscape', 'electricalæ¦è¦', 'mathworks', 'com', 'videos', 'simscape', 'electrical', 'overview', 'htmlsimscape', 'power', 'systemsãã¥ã¼ããªã¢ã«', 'simscape', 'power', 'tutorial', 'version', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'power', 'simscape', 'power', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",7
2392,70493,"Simscape Electrical (Simscapeãã¼ã¹ã®ã©ã¤ãã©ãª) ãè©ä¾¡ããããã®ãã¥ã¼ããªã¢ã« (Tutorial to evaluate Simscape Electrical (Simscape based library) by yourself)<p>æ¬ãã¥ã¼ããªã¢ã«ã§ã¯ãSimscape Electricalã®Simscapeãã¼ã¹ã®ã©ã¤ãã©ãªã®åºæ¬çãªä½¿ç¨æ¹æ³ãèª¬æãã¦ãã¾ããæ¬ã©ã¤ãã©ãªã®åºæ¬çãªä½¿ç¨æ¹æ³ãèªç¿ãã¦é ãããããªèª¬æè³æã¨ãµã³ãã«ã¢ãã«ãããã¾ããä¾é¡ã¯ããã©ã·ä»ãDCã¢ã¼ã¿ã®é»æ°/æ©æ¢°ç³»ã®ã¢ãã«ã§ããã¾ããSimscape Electricalã®æ¦è¦ã«ã¤ãã¦ã¯ãä»¥ä¸ã®ã·ã§ã¼ãã ã¼ãã¼ããè¦è´ä¸ãããæ³¨æäºé :ãã¼ã¸ã§ã³R2018bã§ãå¾æ¥ã®2ã¤ã®é»æ°ç³»ãã¼ã« (Simscape Power SystemsãSimscape Electronics) ã1ã¤ã®ãã¼ã«ã«çµ±åããã¦ãåç§°ãSimscape Electricalã«å¤æ´ããã¾ããããã£ã¦ããã¼ã¸ã§ã³R2016aï½R2018aããä½¿ç¨ãããæ¹ã¯ãæ¬ãã¥ã¼ããªã¢ã«ã¨åãåå®¹ã®ä»¥ä¸ã®ãã¥ã¼ããªã¢ã«ããå©ç¨ä¸ãããThis tutorial is shown about the basic usage of Simscape Electrical (Simscape based library). There are an explanation material (Japanese) and a sample model to evaluate this library by yourself. The example is the electrical and mechanical model of DC brush motor. Then, if you want to know the overview of Simscape Electrical, please see the following short movie.Note:In version R2018b, two conventional electrical tools (Simscape Power Systems, Simscape Electronics) were integrated into one tool, and the name was changed to âSimscape Electricalâ.Therefore, if you are using version (R2016a, R2016b, R2017a, R2017b, R2018a), please use the following tutorial which is the same content with this tutorial. ã·ã§ã¼ãã ã¼ãã¼ (Short movie)âSimscape Electrical Overview (Simscape Electricalæ¦è¦)â (2:26)<a href=""https://jp.mathworks.com/videos/simscape-electrical-overview-1536775075787.htmlSimscape"">https://jp.mathworks.com/videos/simscape-electrical-overview-1536775075787.htmlSimscape</a> Electronicsãã¥ã¼ããªã¢ã« (Simscape Electronics Tutorial)(Version: R2016a, R2016b, R2017a, R2017b, R2018a)<a href=""https://jp.mathworks.com/matlabcentral/fileexchange/57193-simscape-electronics-simscape-electronics-tutorial"">https://jp.mathworks.com/matlabcentral/fileexchange/57193-simscape-electronics-simscape-electronics-tutorial</a></p>physical modeling,simscape,simscape electrical,simulation,electric_motor_control,power_conversion_control,power_electronics_control",30,4,2,0,46,simscape electrical ãè©ä¾¡ããããã®ãã¥ã¼ããªã¢ã« tutorial evaluate simscape electrical simscape base ãã¼ã¸ã§ã³r bã§å¾æ¥ã® ã¤ã®é»æ°ç³»ãã¼ã« simscape power systemssimscape electronics tutorial show basic usage simscape electrical simscape base explanation material japanese sample evaluate example electrical mechanical brush motor want know overview simscape electrical please see follow short movie note version two conventional electrical tool simscape power simscape electronics integrate one tool name change simscape electrical therefore version please follow tutorial content tutorial ã·ã§ã¼ãã ã¼ãã¼ short movie simscape electrical overview simscape electricalæ¦è¦ mathworks com videos simscape electrical overview htmlsimscape simscape electronics tutorial version mathworks com matlabcentral fileexchange simscape electronics simscape electronics motor controlpower conversion controlpower electronics control,"['simscape', 'electrical', 'ãè©ä¾¡ããããã®ãã¥ã¼ããªã¢ã«', 'tutorial', 'evaluate', 'simscape', 'electrical', 'simscape', 'base', 'ãã¼ã¸ã§ã³r', 'bã§å¾æ¥ã®', 'ã¤ã®é»æ°ç³»ãã¼ã«', 'simscape', 'power', 'systemssimscape', 'electronics', 'tutorial', 'show', 'basic', 'usage', 'simscape', 'electrical', 'simscape', 'base', 'explanation', 'material', 'japanese', 'sample', 'evaluate', 'example', 'electrical', 'mechanical', 'brush', 'motor', 'want', 'know', 'overview', 'simscape', 'electrical', 'please', 'see', 'follow', 'short', 'movie', 'note', 'version', 'two', 'conventional', 'electrical', 'tool', 'simscape', 'power', 'simscape', 'electronics', 'integrate', 'one', 'tool', 'name', 'change', 'simscape', 'electrical', 'therefore', 'version', 'please', 'follow', 'tutorial', 'content', 'tutorial', 'ã·ã§ã¼ãã ã¼ãã¼', 'short', 'movie', 'simscape', 'electrical', 'overview', 'simscape', 'electricalæ¦è¦', 'mathworks', 'com', 'videos', 'simscape', 'electrical', 'overview', 'htmlsimscape', 'simscape', 'electronics', 'tutorial', 'version', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'simscape', 'electronics', 'simscape', 'electronics', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",7
2393,70538,"This model demonstrates the fundamental principle of a DC-DC buck converter that controls the output power with a closed loop PI control.<p>One 1 V source is connected at the input of the buck converter, and a 0.5 V voltage with a 0.1 Ohm inner resistance is connected at the output to represent a battery to be charged. The output power (charging power) is under control using a closed loop PI controller. The controller is to adjust the PWM duty-ratio of the buck converter to change to the output voltage. The output V, I are measured and multiplied to be feedback to the controller to be compared with the target charging power. Accordingly, the closed loop power control is realised. DashBoard tools are used to make the model more interesting and intuitive. Welcome any question and suggestions by email: <a href=""mailto:chunpeng_li@hotmail.com"">chunpeng_li@hotmail.com</a>. I'll try to reply. </p>battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control,microgrid,power electronics",44,1,2,0,102,demonstrates fundamental principle buck converter control output power close loop control one source connect input buck converter voltage ohm inner resistance connect output represent battery charge output power charge power control close loop controller controller adjust pwm duty ratio buck converter change output voltage output measure multiplied feedback controller compare target charge power accordingly close loop power control realise dashboard tool make interesting intuitive welcome question suggestion email chunpeng hotmail com try reply battery motor controlpower conversion controlpower electronics electronics,"['demonstrates', 'fundamental', 'principle', 'buck', 'converter', 'control', 'output', 'power', 'close', 'loop', 'control', 'one', 'source', 'connect', 'input', 'buck', 'converter', 'voltage', 'ohm', 'inner', 'resistance', 'connect', 'output', 'represent', 'battery', 'charge', 'output', 'power', 'charge', 'power', 'control', 'close', 'loop', 'controller', 'controller', 'adjust', 'pwm', 'duty', 'ratio', 'buck', 'converter', 'change', 'output', 'voltage', 'output', 'measure', 'multiplied', 'feedback', 'controller', 'compare', 'target', 'charge', 'power', 'accordingly', 'close', 'loop', 'power', 'control', 'realise', 'dashboard', 'tool', 'make', 'interesting', 'intuitive', 'welcome', 'question', 'suggestion', 'email', 'chunpeng', 'hotmail', 'com', 'try', 'reply', 'battery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'electronics']",3
2394,70540,"This simulink file consists of a photovoltaic model , modelled from basic equations .<p>The model has been created using basic equations and every subsystem has a modelling equation associated with it. The parameters can be easily altered to meet your specifications.</p>",90,5,3,0,96,file consist photovoltaic basic equation create basic equation every subsystem equation associate parameter easily alter meet specification,"['file', 'consist', 'photovoltaic', 'basic', 'equation', 'create', 'basic', 'equation', 'every', 'subsystem', 'equation', 'associate', 'parameter', 'easily', 'alter', 'meet', 'specification']",0
2395,70554,"MATLAB and Simulink support for hardware components used in the Arduino Engineering Kit.<p>Note: This version is for MATLAB release R2019a and later. If you are using MATLAB R2018b, use this version: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/68620-arduino_engineering_kit_hardware_support_18band"">https://www.mathworks.com/matlabcentral/fileexchange/68620-arduino_engineering_kit_hardware_support_18band</a> if you are using MATLAB R2018a, use this version here: <a href=""https://www.mathworks.com/matlabcentral/fileexchange/66568-arduino_engineering_kit_hardware_supportThis"">https://www.mathworks.com/matlabcentral/fileexchange/66568-arduino_engineering_kit_hardware_supportThis</a> package includes MATLAB and Simulink files that allow users to communicate with and control the sensors and actuators used in the Arduino Engineering Kit, most of which are connected through the MKR Motor Carrier. This includes: â¢ DC motor â control up to 4 DC motors simultaneously â¢ Servo motor â control up to 8 servo motors simultaneously â¢ Encoder â read up to 2 encoders simultaneously â¢ Tachometer â read rotational speed from the hall sensor on the motorcycleâs inertia wheel â¢ BNO055 IMU sensor â read from the accelerometer, magnetometer, and gyroscope â¢ Ultrasonic sensor â measure the distance to an object â¢ LiPo Battery â read the battery voltageExamples are included to demonstrate how to use the MATLAB functions and Simulink blocks included in this package.Learn more about the Arduino Engineering Kit at <a href=""http://www.mathworks.com/arduino-kitImportant"">www.mathworks.com/arduino-kitImportant</a> notes: 1) After installing this toolbox, type the following command in MATLAB to open the ReadMe &gt;&gt; edit ArduinoKitHardwareSupportReadMe.txt 2) Be sure to follow the steps in this file, as it provides instructions on downloading the Arduino library for the MKR Motor Carrier. This library is required for some of the functionality to work.</p>battery_system_management,electric_motor_control,power_conversion_control,power_electronics_control",37,1,1,0,29,support hardware component arduino engineering kit note version release later version mathworks com matlabcentral fileexchange arduino engineering kit hardware support band version mathworks com matlabcentral fileexchange arduino engineering kit hardware supportthis package include file allow user communicate control sensor actuator arduino engineering kit connect mkr motor carrier include motor control motor servo motor control servo motor encoder read encoders tachometer read rotational speed hall sensor motorcycle inertia wheel bno imu sensor read accelerometer magnetometer gyroscope ultrasonic sensor measure distance object lipo battery read battery voltageexamples include demonstrate function block include package learn arduino engineering kit mathworks com arduino kitimportant note instal toolbox type follow command open readme edit txt sure follow step file provide instruction download arduino mkr motor carrier require functionality work battery motor controlpower conversion controlpower electronics control,"['support', 'hardware', 'component', 'arduino', 'engineering', 'kit', 'note', 'version', 'release', 'later', 'version', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'engineering', 'kit', 'hardware', 'support', 'band', 'version', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'engineering', 'kit', 'hardware', 'supportthis', 'package', 'include', 'file', 'allow', 'user', 'communicate', 'control', 'sensor', 'actuator', 'arduino', 'engineering', 'kit', 'connect', 'mkr', 'motor', 'carrier', 'include', 'motor', 'control', 'motor', 'servo', 'motor', 'control', 'servo', 'motor', 'encoder', 'read', 'encoders', 'tachometer', 'read', 'rotational', 'speed', 'hall', 'sensor', 'motorcycle', 'inertia', 'wheel', 'bno', 'imu', 'sensor', 'read', 'accelerometer', 'magnetometer', 'gyroscope', 'ultrasonic', 'sensor', 'measure', 'distance', 'object', 'lipo', 'battery', 'read', 'battery', 'voltageexamples', 'include', 'demonstrate', 'function', 'block', 'include', 'package', 'learn', 'arduino', 'engineering', 'kit', 'mathworks', 'com', 'arduino', 'kitimportant', 'note', 'instal', 'toolbox', 'type', 'follow', 'command', 'open', 'readme', 'edit', 'txt', 'sure', 'follow', 'step', 'file', 'provide', 'instruction', 'download', 'arduino', 'mkr', 'motor', 'carrier', 'require', 'functionality', 'work', 'battery', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",7
2396,70569,it is inverter simulation in matlab.<p>it is inverter simulation which is made in matlb using mosfect.</p>,16,0,1,0,22,inverter inverter make matlb mosfect,"['inverter', 'inverter', 'make', 'matlb', 'mosfect']",3
2397,70570,"it is solar simulation which is made in matlab.<p>it is solar cell simulation in matlab . in which we can see varition in iv,pv with tempreture and configuration.,</p>",17,0,1,0,19,solar make solar cell see varition ivpv tempreture configuration,"['solar', 'make', 'solar', 'cell', 'see', 'varition', 'ivpv', 'tempreture', 'configuration']",0
2398,70576,"The file contained includes BAJA ATV model with Continuously Variable Transmission(CVT).<p>This submission contains a set of models created with Simulink, Simscape, and Simscape Driveline. More specifically, the file contained includes BAJA ATV model with Continuously Variable Transmission(CVT).These models show how to build an ATV with CVT which is mostly used in BAJA competitions. Simscape and Simscape Driveline have been used to complete the system. The engine data used in the model is provided as an image which shows the Engine Speed (RPM) Vs Torque curve.</p>allterrain vehicle,atv,baja,continously variable transmission",349,20,2,0,329,file contain include baja atv continuously variable transmission cvt submission contain set create simscape simscape driveline specifically file contain include baja atv continuously variable transmission cvt show build atv cvt mostly baja competition simscape simscape driveline complete engine data provide image show engine speed rpm torque curve allterrain variable transmission,"['file', 'contain', 'include', 'baja', 'atv', 'continuously', 'variable', 'transmission', 'cvt', 'submission', 'contain', 'set', 'create', 'simscape', 'simscape', 'driveline', 'specifically', 'file', 'contain', 'include', 'baja', 'atv', 'continuously', 'variable', 'transmission', 'cvt', 'show', 'build', 'atv', 'cvt', 'mostly', 'baja', 'competition', 'simscape', 'simscape', 'driveline', 'complete', 'engine', 'data', 'provide', 'image', 'show', 'engine', 'speed', 'rpm', 'torque', 'curve', 'allterrain', 'variable', 'transmission']",0
2399,70600,"This model demonstrate the fundamental operation of a SPWM inverter with LC Filter<p>Developed by Dr Rodney TanVersion 1.00 (Mar 2019)This model demonstrate the fundamental operation of a SPWM inverter withthe following specificationInput Voltage: 400V DCNominal Output Voltage: 230V ACModulation Method: Sinusoidal PWM See PWM Generator BlockPower Frequency: 50Hz See PWM Generator BlockCarrier Frequency: 2kHz (40*50Hz) See PWM Generator BlockInverter Topology: 2 Arms full bridge with MOSFET See Universal Bridge BlockOutput Filter: LC filter Control Method: PI Voltage Feedback ControlTHD: &lt; 1% above 100W real power load</p>electric_motor_control,power_conversion_control,power_electronics_control,inverter,inverter lc filter,spwm",27,0,1,0,32,demonstrate fundamental operation spwm inverter filterdeveloped rodney tanversion mar demonstrate fundamental operation spwm inverter withthe follow voltage dcnominal output voltage acmodulation method sinusoidal pwm see pwm generator blockpower frequency see pwm generator blockcarrier frequency khz see pwm generator blockinverter topology arm full bridge mosfet see universal bridge blockoutput filter filter control method voltage feedback controlthd real power loadelectric motor controlpower conversion controlpower electronics filterspwm,"['demonstrate', 'fundamental', 'operation', 'spwm', 'inverter', 'filterdeveloped', 'rodney', 'tanversion', 'mar', 'demonstrate', 'fundamental', 'operation', 'spwm', 'inverter', 'withthe', 'follow', 'voltage', 'dcnominal', 'output', 'voltage', 'acmodulation', 'method', 'sinusoidal', 'pwm', 'see', 'pwm', 'generator', 'blockpower', 'frequency', 'see', 'pwm', 'generator', 'blockcarrier', 'frequency', 'khz', 'see', 'pwm', 'generator', 'blockinverter', 'topology', 'arm', 'full', 'bridge', 'mosfet', 'see', 'universal', 'bridge', 'blockoutput', 'filter', 'filter', 'control', 'method', 'voltage', 'feedback', 'controlthd', 'real', 'power', 'loadelectric', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'filterspwm']",3
2400,71010,"by Using A New Cascade Multilevel H- Bridge Inverter <p>This research work concentrates much on designing the new structure of controller with minimum number of power electronics switches in cascade H Bridge multilevel inverter for hybrid wind and Photovoltaic power system. The new inverter reflects the features such as simplicity, easier to control and improves the power quality. The proposed multilevel inverter has been modelled, simulated and controlled by ANFIS controller for improving the performance of system under different operating conditions stimulated based on various weather conditions as well as nonlinear load. The real time working model of proposed multilevel inverter has been designed in the laboratory along with the MATLAB based design and simulation. </p>anfis,fuzzy,hybrid,microgrid,multilevel inverter,pv,wind,power_conversion_control,power_electronics_control",230,10,5,0,322,new cascade multilevel bridge inverter research work concentrate much design new structure controller minimum number power electronics switch cascade bridge multilevel inverter hybrid wind photovoltaic power new inverter reflect feature simplicity easy control improve power quality propose multilevel inverter control anfis controller improve performance different operate condition stimulate base various weather condition well nonlinear load real time work propose multilevel inverter design laboratory along base design conversion controlpower electronics control,"['new', 'cascade', 'multilevel', 'bridge', 'inverter', 'research', 'work', 'concentrate', 'much', 'design', 'new', 'structure', 'controller', 'minimum', 'number', 'power', 'electronics', 'switch', 'cascade', 'bridge', 'multilevel', 'inverter', 'hybrid', 'wind', 'photovoltaic', 'power', 'new', 'inverter', 'reflect', 'feature', 'simplicity', 'easy', 'control', 'improve', 'power', 'quality', 'propose', 'multilevel', 'inverter', 'control', 'anfis', 'controller', 'improve', 'performance', 'different', 'operate', 'condition', 'stimulate', 'base', 'various', 'weather', 'condition', 'well', 'nonlinear', 'load', 'real', 'time', 'work', 'propose', 'multilevel', 'inverter', 'design', 'laboratory', 'along', 'base', 'design', 'conversion', 'controlpower', 'electronics', 'control']",3
2401,71011,"New Cascade Multilevel Inverter<p>introduce a new topology of cascade multilevel inverter with reduced semiconductor switches for grid integration of hybrid renewable energy sources such as Wind, photovoltaic (PV) cell and Fuel Cell (FC). The main objective of this research work is improving the power quality at common coupling point of renewable energy sources and power grid. This research works Artificial intelligent (AI) controllers has been modelled and controlled hybrid renewable energy sources and grid connected proposed multilevel inverter for achieve the above objective. </p>ai,anfis,fc,fuzzy,hybrid,pv,wind",439,25,4,0,530,new cascade multilevel new topology cascade multilevel inverter reduce semiconductor switch grid integration hybrid renewable energy source wind photovoltaic cell fuel cell main objective research work improve power quality common couple point renewable energy source power grid research work artificial intelligent controller control hybrid renewable energy source grid connect propose multilevel inverter achieve objective,"['new', 'cascade', 'multilevel', 'new', 'topology', 'cascade', 'multilevel', 'inverter', 'reduce', 'semiconductor', 'switch', 'grid', 'integration', 'hybrid', 'renewable', 'energy', 'source', 'wind', 'photovoltaic', 'cell', 'fuel', 'cell', 'main', 'objective', 'research', 'work', 'improve', 'power', 'quality', 'common', 'couple', 'point', 'renewable', 'energy', 'source', 'power', 'grid', 'research', 'work', 'artificial', 'intelligent', 'controller', 'control', 'hybrid', 'renewable', 'energy', 'source', 'grid', 'connect', 'propose', 'multilevel', 'inverter', 'achieve', 'objective']",3
2402,71026,"This model has two different WECSs forming a microgrid. Some parameters are set according to the standards and some are not. <p>This model is to help researchers to build their own simulation models. Some parameters are set according to the standards and some are not. Hopefully that will be useful. @Rasool M. Imran</p>microgrid,mode transition,wecs",1082,52,7,0,1333,two different wecss form microgrid parameter set accord standard help researcher build parameter set accord standard hopefully useful rasool transitionwecs,"['two', 'different', 'wecss', 'form', 'microgrid', 'parameter', 'set', 'accord', 'standard', 'help', 'researcher', 'build', 'parameter', 'set', 'accord', 'standard', 'hopefully', 'useful', 'rasool', 'transitionwecs']",0
2403,71091,"Intelligent controller based power quality improvement of microgrid integration of photovoltaic power system using new cascade multilevel  <p>Intelligent controller based power quality improvement of microgrid integration of photovoltaic power system using new cascade multilevel inverter The main objective of this paper is improving the power quality of grid connected photovoltaic power system through a new cascade H-bridge multilevel inverter. The proposed research work has been modelled and controlled by ANFIS intelligence in MATLAB simulation environment. The simulation results are analysed under various operating conditions for improve the performance of proposed system. Finally, the proposed system THD value of simulation results is compared with IEEE 1547 standard for prove the effectiveness of proposed research work.</p>anfis,microgrid,multilevel inverter,pv",218,10,5,0,282,intelligent controller base power quality improvement microgrid integration photovoltaic power new cascade multilevel intelligent controller base power quality improvement microgrid integration photovoltaic power new cascade multilevel inverter main objective paper improve power quality grid connect photovoltaic power new cascade bridge multilevel inverter propose research work controlled anfis intelligence environment result analyse various operate condition improve performance propose finally propose thd value result compare iee standard prove effectiveness propose research work inverterpv,"['intelligent', 'controller', 'base', 'power', 'quality', 'improvement', 'microgrid', 'integration', 'photovoltaic', 'power', 'new', 'cascade', 'multilevel', 'intelligent', 'controller', 'base', 'power', 'quality', 'improvement', 'microgrid', 'integration', 'photovoltaic', 'power', 'new', 'cascade', 'multilevel', 'inverter', 'main', 'objective', 'paper', 'improve', 'power', 'quality', 'grid', 'connect', 'photovoltaic', 'power', 'new', 'cascade', 'bridge', 'multilevel', 'inverter', 'propose', 'research', 'work', 'controlled', 'anfis', 'intelligence', 'environment', 'result', 'analyse', 'various', 'operate', 'condition', 'improve', 'performance', 'propose', 'finally', 'propose', 'thd', 'value', 'result', 'compare', 'iee', 'standard', 'prove', 'effectiveness', 'propose', 'research', 'work', 'inverterpv']",4
2404,71095,"Fuzzy logic Based Voltage Regulation of 3 Phase PV inverter<p>Fuzzy logic Based Voltage Regulation of 3 Phase PV inverter</p>fuzzy,pll,pv,smart invereter,voltage regulation,power_conversion_control,power_electronics_control",31,0,1,0,51,fuzzy logic base voltage regulation phase inverterfuzzy logic base voltage regulation phase regulationpower conversion controlpower electronics control,"['fuzzy', 'logic', 'base', 'voltage', 'regulation', 'phase', 'inverterfuzzy', 'logic', 'base', 'voltage', 'regulation', 'phase', 'regulationpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2405,71124,Complete simulation of 100w solar panel including all blocks<p>Simulation of a 100w solar panel with an i&amp;v curve and P&amp;V curves</p>,170,1,2,0,160,complete solar panel include solar panel amp curve amp curve,"['complete', 'solar', 'panel', 'include', 'solar', 'panel', 'amp', 'curve', 'amp', 'curve']",7
2406,71182,"Application of parallel computing to the analysis of the impact of anti-windup gain for PID controller<p>Nowadays the multi-core processors are commonly used in personal computers. In many cases a multiple simulation of the same model with different parameters is required e.g. auto-tuning of state feedback speed controller for PMSM drive, mechanical parameters identification of servo-drive system. A simple example of parallelization is shared to help you take advantages of the parallel computing in Matlab/Simulink environment.The script was examined on the computer with Intel Core i7-6700HQ with 8GB RAM. Standard simulation with single worker takes 386 seconds, while applied parallel computing with 2 workers least for 255 seconds.</p>electric_motor_control,power_electronics_control,anti-windup,parallel computing,pid controller",15,1,2,0,15,application parallel compute analysis impact anti windup gain pid multi core processor commonly personal computer many case multiple different parameter require auto tune state feedback speed controller pmsm drive mechanical parameter identification servo drive simple example parallelization share help take advantage parallel compute environment script examine computer intel core ram standard single worker take second applied parallel compute worker least second electric motor controlpower electronics controlanti windupparallel computingpid controller,"['application', 'parallel', 'compute', 'analysis', 'impact', 'anti', 'windup', 'gain', 'pid', 'multi', 'core', 'processor', 'commonly', 'personal', 'computer', 'many', 'case', 'multiple', 'different', 'parameter', 'require', 'auto', 'tune', 'state', 'feedback', 'speed', 'controller', 'pmsm', 'drive', 'mechanical', 'parameter', 'identification', 'servo', 'drive', 'simple', 'example', 'parallelization', 'share', 'help', 'take', 'advantage', 'parallel', 'compute', 'environment', 'script', 'examine', 'computer', 'intel', 'core', 'ram', 'standard', 'single', 'worker', 'take', 'second', 'applied', 'parallel', 'compute', 'worker', 'least', 'second', 'electric', 'motor', 'controlpower', 'electronics', 'controlanti', 'windupparallel', 'computingpid', 'controller']",4
2407,71184,"This model simualtes the newton craddle with simscape multibody contact forces library.<p>This is new version of newton craddle, the parameters have been changed as suggestion from Steve. </p>",90,12,3,0,83,simualtes newton craddle simscape multibody contact force new version newton craddle parameter change suggestion steve,"['simualtes', 'newton', 'craddle', 'simscape', 'multibody', 'contact', 'force', 'new', 'version', 'newton', 'craddle', 'parameter', 'change', 'suggestion', 'steve']",0
2408,71235,"Generic Type-IV Wind Turbine Model for EMT Studies<p>This is a generic model of a type-IV (i.e., full converter) wind turbine system for electromagnetic transient (EMT) studies. It is based on the work published in [1] and represents a wind turbine system with a directly-coupled (gearless) and externally excited synchronous machine. The full-converter system is composed of a six-pulse diode rectifier, a dc-dc boost converter and a two-level voltage source converter (VSC). The excitation control of the synchronous generator makes use of a buck-converter connected to the dc-link of the full-converter system.It is a hybrid model (HM), which means that it contains a combination of average and switched equivalent circuits to represent power electronic stages, and allows simulations with a time-step of 50 Âµs, optimizing therefore computation time.A short documentation file containing useful information on the model as well as two simulation examples focusing on Fault-Ride-Through (FRT) performance is included. Further details about  the model can be extracted from [1]. [1] - A. S. Trevisan, A. A. El-Deib, R. Gagnon, J. Mahseredjian, and M. Fecteau, âField Validated Generic EMT-Type Model of a Full Converter Wind Turbine Based on a Gearless Externally Excited Synchronous Generator,â IEEE Trans. Power Deliv., vol. 33, no. 5, pp. 2284â2293, Oct. 2018.</p>power_conversion_control,power_electronics_control,electromagnetic transient,emt,full conveter,generic,power grid,power system,type-iv,wind farm,wind turbine",711,29,5,0,821,generic type wind turbine emt studiesthis generic type full converter wind turbine electromagnetic transient emt study base work publish represent wind turbine directly couple gearless externally excite synchronous machine full converter compose six pulse diode rectifier boost converter two level voltage source converter vsc excitation control synchronous generator make buck converter connect link full converter hybrid mean contains combination average switch equivalent circuit represent power electronic stage allow time step optimize therefore computation time short documentation file contain useful information well two example focus fault ride frt performance include detail extract trevisan deib gagnon mahseredjian fecteau field validate generic emt type full converter wind turbine base gearless externally excite synchronous generator iee trans power deliv vol oct power conversion controlpower electronics gridpower systemtype ivwind farmwind turbine,"['generic', 'type', 'wind', 'turbine', 'emt', 'studiesthis', 'generic', 'type', 'full', 'converter', 'wind', 'turbine', 'electromagnetic', 'transient', 'emt', 'study', 'base', 'work', 'publish', 'represent', 'wind', 'turbine', 'directly', 'couple', 'gearless', 'externally', 'excite', 'synchronous', 'machine', 'full', 'converter', 'compose', 'six', 'pulse', 'diode', 'rectifier', 'boost', 'converter', 'two', 'level', 'voltage', 'source', 'converter', 'vsc', 'excitation', 'control', 'synchronous', 'generator', 'make', 'buck', 'converter', 'connect', 'link', 'full', 'converter', 'hybrid', 'mean', 'contains', 'combination', 'average', 'switch', 'equivalent', 'circuit', 'represent', 'power', 'electronic', 'stage', 'allow', 'time', 'step', 'optimize', 'therefore', 'computation', 'time', 'short', 'documentation', 'file', 'contain', 'useful', 'information', 'well', 'two', 'example', 'focus', 'fault', 'ride', 'frt', 'performance', 'include', 'detail', 'extract', 'trevisan', 'deib', 'gagnon', 'mahseredjian', 'fecteau', 'field', 'validate', 'generic', 'emt', 'type', 'full', 'converter', 'wind', 'turbine', 'base', 'gearless', 'externally', 'excite', 'synchronous', 'generator', 'iee', 'trans', 'power', 'deliv', 'vol', 'oct', 'power', 'conversion', 'controlpower', 'electronics', 'gridpower', 'systemtype', 'ivwind', 'farmwind', 'turbine']",4
2409,71248,"Asynchronous motor model fed through an inverter with a selection of different reference frames. <p>This is the model of a three phase Induction motor fed through a three phase inverter  and with the selection of different reference frames. By changing the reference frame, one can observe the change in the currents and induced voltages. Moreover, there is a possibility to regulate the rotor voltages which are set to zero in this model. This is very easy to use and understand model. This model has ben comapred with the standard Simulink model of Induction motor named ""Three-Phase Asynchronous Machine"" and both the models match in the results quit well. The saturation and other fine modelling techniques as used in Matlab standard model are not part of this model offcourse but it is a good model to start understanding the working of the induction motor and to understand the basics of  control of DFIG if rotor voltages are controlled as well. Pls refer to my other model named ""DFIG Wind turbine Model"" to learn how to control the rotor voltages. </p>electric_motor_control,power_electronics_control,asynchronous machine,control,induction machine,inverter,power system",179,14,3,0,201,asynchronous motor feed inverter selection different reference frame three phase induction motor feed three phase inverter selection different reference frame change reference frame one observe change current induce voltage moreover possibility regulate rotor voltage set zero easy understand ben comapred standard induction motor name three phase asynchronous machine match result quit well saturation fine modelling technique standard part offcourse good start understand work induction motor understand basic control dfig rotor voltage control well pls refer name dfig wind turbine learn control rotor voltage electric motor controlpower electronics,"['asynchronous', 'motor', 'feed', 'inverter', 'selection', 'different', 'reference', 'frame', 'three', 'phase', 'induction', 'motor', 'feed', 'three', 'phase', 'inverter', 'selection', 'different', 'reference', 'frame', 'change', 'reference', 'frame', 'one', 'observe', 'change', 'current', 'induce', 'voltage', 'moreover', 'possibility', 'regulate', 'rotor', 'voltage', 'set', 'zero', 'easy', 'understand', 'ben', 'comapred', 'standard', 'induction', 'motor', 'name', 'three', 'phase', 'asynchronous', 'machine', 'match', 'result', 'quit', 'well', 'saturation', 'fine', 'modelling', 'technique', 'standard', 'part', 'offcourse', 'good', 'start', 'understand', 'work', 'induction', 'motor', 'understand', 'basic', 'control', 'dfig', 'rotor', 'voltage', 'control', 'well', 'pls', 'refer', 'name', 'dfig', 'wind', 'turbine', 'learn', 'control', 'rotor', 'voltage', 'electric', 'motor', 'controlpower', 'electronics']",3
2410,71279,"My take on LEGO Mindstorms EV3 GyroBoy using Simulink. Mostly for high schoolers to demonstrate that engineering is fun.<p>Please read the attached .m file for more details. If you like it and would like me to upload more EV3 Simulink and equivalent Python ""projects"", please let me know in comments. The idea of buying EV3 was born in 2018. My then 8-year-old daughter Julia came across <a href=""http://mindcuber.com/"">http://mindcuber.com/</a> on YouTube, and she wanted it badly. And we got hooked :)</p>android sensors,balancing robot,ev3,gyro boy,gyroboy,inverted pendulum,lego,mindstorms,remote control,self-balancing robot",131,4,2,0,148,take lego mindstorms gyroboy mostly high schoolers demonstrate engineering fun please read attach file detail like would like upload equivalent python project please let know comment idea buying bear year old daughter julia come across http mindcuber com youtube want badly get hooked android robotev gyro controlself balance robot,"['take', 'lego', 'mindstorms', 'gyroboy', 'mostly', 'high', 'schoolers', 'demonstrate', 'engineering', 'fun', 'please', 'read', 'attach', 'file', 'detail', 'like', 'would', 'like', 'upload', 'equivalent', 'python', 'project', 'please', 'let', 'know', 'comment', 'idea', 'buying', 'bear', 'year', 'old', 'daughter', 'julia', 'come', 'across', 'http', 'mindcuber', 'com', 'youtube', 'want', 'badly', 'get', 'hooked', 'android', 'robotev', 'gyro', 'controlself', 'balance', 'robot']",0
2411,71320,"This Simulink model demonstrate DC-DC Boost Converter with simplePI Feedback Control<p>This Simulink model demonstrate DC-DC Boost Converter with simplePI Feedback Control to boost 5V DC to 12V DC at switching frequency of 10kHz</p>power_conversion_control,power_electronics_control,boost converter,dc-dc converter,pi control",15,0,1,0,18,demonstrate boost converter simplepi feedback controlthis demonstrate boost converter simplepi feedback control boost switch frequency khzpower conversion controlpower electronics controlboost converterdc converterpi control,"['demonstrate', 'boost', 'converter', 'simplepi', 'feedback', 'controlthis', 'demonstrate', 'boost', 'converter', 'simplepi', 'feedback', 'control', 'boost', 'switch', 'frequency', 'khzpower', 'conversion', 'controlpower', 'electronics', 'controlboost', 'converterdc', 'converterpi', 'control']",1
2412,71382,"My take on LEGO Mindstorms EV3 Line Follower using two light sensors. Mostly for high schoolers to demonstrate that engineering is fun.<p>PI controller. Two light sensors. Please read the attached .m file for more details. If you like it and would like me to upload more EV3 Simulink and equivalent Python ""projects"", please let me know in the comment section. The idea of buying EV3 was born in 2018. My then 8-year-old daughter Julia came across <a href=""http://mindcuber.com/"">http://mindcuber.com/</a> on YouTube, and she wanted it badly. And we got hooked. Alright, I got hooked :)</p>ev3,lego,light sensor,line follower,mindstorms,pi controller,robot",44,0,1,0,57,take lego mindstorms line follower two light sensor mostly high schoolers demonstrate engineering fun controller two light sensor please read attach file detail like would like upload equivalent python project please let know comment section idea buying bear year old daughter julia come across http mindcuber com youtube want badly get hooked alright get hooked legolight sensorline controllerrobot,"['take', 'lego', 'mindstorms', 'line', 'follower', 'two', 'light', 'sensor', 'mostly', 'high', 'schoolers', 'demonstrate', 'engineering', 'fun', 'controller', 'two', 'light', 'sensor', 'please', 'read', 'attach', 'file', 'detail', 'like', 'would', 'like', 'upload', 'equivalent', 'python', 'project', 'please', 'let', 'know', 'comment', 'section', 'idea', 'buying', 'bear', 'year', 'old', 'daughter', 'julia', 'come', 'across', 'http', 'mindcuber', 'com', 'youtube', 'want', 'badly', 'get', 'hooked', 'alright', 'get', 'hooked', 'legolight', 'sensorline', 'controllerrobot']",0
2413,71392,"modulaciÃ³n y de-modulador<p>modulacion ASK y demodulacion , mediante filtro y comparador </p>",13,0,1,0,18,modulaciÃ³n ask demodulacion mediante filtro comparador,"['modulaciÃ³n', 'ask', 'demodulacion', 'mediante', 'filtro', 'comparador']",2
2414,71399,"This example shows how to get started with MathWorks' Model Verification & Validation tools<p>This example shows how to get started with MathWorks' Model Verification &amp; Validation tools. It uses a fictional scenario that is based on elements of a typical Simulink user on an embedded systems production team. The example is packaged as Simulink Project. It uses the following products:- MATLAB- Simulink- Stateflow- Simulink Requirements- Simulink Check- Simulink Design Verifier** Simulink Coverage is a required product for Simulink Design Verifier. This example requires a Simulink Coverage license, but does not show Simulink Coverage features.To get started:1) Unzip the example to a working directory2) Open MATLAB3) Navigate to the working directory4) Open the file ""Designer_Work_Flow.prj"" by double-clicking or, from the MATLAB Command Window, enter ""simulinkproject('Designer_Work_Flow.prj')""If you do not have access to these products, please request a free trial:<a href=""https://www.mathworks.com/campaigns/products/trials.html"">https://www.mathworks.com/campaigns/products/trials.html</a> ============================================================================== This example uses a fictional scenario based on a typical engineer's experience for the purpose of demonstration. Any use of names of actual products or firms is entirely coincidental and unintentional. The contents of this example do not constitute a real design.You are an engineer at Farnswerth Automotive and are on a secret project team developing a single-occupant Level 5 autonomous vehicle, which many call The Pod. You recently completed work on a prototype called Destiny, which was a Level 4 vehicle.Your team, which designs the control system software, is about to complete the ""desktop simulation"" phase of the project before moving on to the much-anticipated ""hardware in the loop"" testing phase in the brand new state-of-the-art testing facility hidden away from the rest of the company. Everyone is excited!One of your many responsibilities is the adaptive cruise control feature, which should set The Pod apart from its competition because it will allow multiple Pods to travel within 1 meter of each other at 100 km/h. Your CEO has been posting about this specific feature on social media for months now.You have completed most of the design, and have saved the ""easy stuff"" for the very end. This part of the design is a simple modification of an older cruise control design from the Destiny program. Using an older design as the baseline can save you time.</p>live script,model checks,requirements,simulink,validation,verification",41,-3,1,-3,36,example show get start mathworks verification validation toolsthis example show get start mathworks verification amp validation tool fictional scenario base element typical user embed production team example package project follow product stateflow requirement check design verifier coverage require product design verifier example require coverage license show coverage feature get start unzip example work directory open navigate work directory open file designer work flow prj double click command window enter designer work flow prj access product please request free trial mathworks com campaign product trial html example fictional scenario base typical engineer experience purpose demonstration name actual product firm entirely coincidental unintentional content example constitute real design engineer farnswerth automotive secret project team develop single occupant level autonomous vehicle many call pod recently complete work prototype call destiny level vehicle team design control software complete desktop phase project move much anticipate hardware loop test phase brand new state art test facility hide away rest company everyone excite one many adaptive cruise control feature set pod apart competition allow multiple pod travel within meter ceo post specific feature social medium month complete design save easy stuff end part design simple modification old cruise control design destiny program old design baseline save time live scriptmodel,"['example', 'show', 'get', 'start', 'mathworks', 'verification', 'validation', 'toolsthis', 'example', 'show', 'get', 'start', 'mathworks', 'verification', 'amp', 'validation', 'tool', 'fictional', 'scenario', 'base', 'element', 'typical', 'user', 'embed', 'production', 'team', 'example', 'package', 'project', 'follow', 'product', 'stateflow', 'requirement', 'check', 'design', 'verifier', 'coverage', 'require', 'product', 'design', 'verifier', 'example', 'require', 'coverage', 'license', 'show', 'coverage', 'feature', 'get', 'start', 'unzip', 'example', 'work', 'directory', 'open', 'navigate', 'work', 'directory', 'open', 'file', 'designer', 'work', 'flow', 'prj', 'double', 'click', 'command', 'window', 'enter', 'designer', 'work', 'flow', 'prj', 'access', 'product', 'please', 'request', 'free', 'trial', 'mathworks', 'com', 'campaign', 'product', 'trial', 'html', 'example', 'fictional', 'scenario', 'base', 'typical', 'engineer', 'experience', 'purpose', 'demonstration', 'name', 'actual', 'product', 'firm', 'entirely', 'coincidental', 'unintentional', 'content', 'example', 'constitute', 'real', 'design', 'engineer', 'farnswerth', 'automotive', 'secret', 'project', 'team', 'develop', 'single', 'occupant', 'level', 'autonomous', 'vehicle', 'many', 'call', 'pod', 'recently', 'complete', 'work', 'prototype', 'call', 'destiny', 'level', 'vehicle', 'team', 'design', 'control', 'software', 'complete', 'desktop', 'phase', 'project', 'move', 'much', 'anticipate', 'hardware', 'loop', 'test', 'phase', 'brand', 'new', 'state', 'art', 'test', 'facility', 'hide', 'away', 'rest', 'company', 'everyone', 'excite', 'one', 'many', 'adaptive', 'cruise', 'control', 'feature', 'set', 'pod', 'apart', 'competition', 'allow', 'multiple', 'pod', 'travel', 'within', 'meter', 'ceo', 'post', 'specific', 'feature', 'social', 'medium', 'month', 'complete', 'design', 'save', 'easy', 'stuff', 'end', 'part', 'design', 'simple', 'modification', 'old', 'cruise', 'control', 'design', 'destiny', 'program', 'old', 'design', 'baseline', 'save', 'time', 'live', 'scriptmodel']",0
2415,71447,"An isolated PWM DC-DC converter. <p>280 V DC input to 400 V DC  output at 10 kW output power. The converter is designed for 1.25 A current ripple and 2 V output ripple at full load. </p>dc-dc,electric vehicles,full bridge,isolated,power electronics,pwm,switching converter,electric_motor_control,power_conversion_control,power_electronics_control",39,0,1,0,48,isolated pwm converter input output output power converter design current ripple output ripple full load dcelectric vehiclesfull motor controlpower conversion controlpower electronics control,"['isolated', 'pwm', 'converter', 'input', 'output', 'output', 'power', 'converter', 'design', 'current', 'ripple', 'output', 'ripple', 'full', 'load', 'dcelectric', 'vehiclesfull', 'motor', 'controlpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2416,71509,"Robot Arm actuated electrically and controlled through a cascade of PIDs.<p>Robot Arm actuated electrically and controlled through a cascade of PIDs (velocity loop and position loop).Six electric motors are used to actuate each of the joint of the robot.</p>electric_motor_control,power_electronics_control,control design,electric_motor_control,mechatronics,pid,power_electronics_control",403,37,3,30,396,robot arm actuate electrically control cascade pid robot arm actuate electrically control cascade pid velocity loop position loop six electric motor actuate joint robot electric motor controlpower electronics controlcontrol designelectric motor electronics control,"['robot', 'arm', 'actuate', 'electrically', 'control', 'cascade', 'pid', 'robot', 'arm', 'actuate', 'electrically', 'control', 'cascade', 'pid', 'velocity', 'loop', 'position', 'loop', 'six', 'electric', 'motor', 'actuate', 'joint', 'robot', 'electric', 'motor', 'controlpower', 'electronics', 'controlcontrol', 'designelectric', 'motor', 'electronics', 'control']",3
2417,71524,"My take on LEGO Mindstorms EV3 holonomic platform using three omniwheels. Mostly for high schoolers to demonstrate that engineering is fun.<p>Holonomic platform on three omniwheels. Please read the attached .m file for more details. If you like it and would like me to upload more EV3 Simulink and equivalent Python ""projects"", please let me know in the comment section. The idea of buying EV3 was born in 2018. My then 8-year-old daughter Julia came across <a href=""http://mindcuber.com/"">http://mindcuber.com/</a> on YouTube, and she wanted it badly. And we got hooked. Alright, I got hooked :) Guess what comes naturally after the omniwheel moving platform. Yeah, you're right, a ballbot. See YT: <a href=""https://www.youtube.com/watch?v=1UPRloKwicM"">https://www.youtube.com/watch?v=1UPRloKwicM</a> .</p>control,education,ev3,holonomic,holonomic platform,holonomic robot,lego,mindstorms,motion,omni wheel,omnidirectional,omniwheel,robotics,school",51,0,1,0,61,take lego mindstorms holonomic platform three omniwheels mostly high schoolers demonstrate engineering fun holonomic platform three omniwheels please read attach file detail like would like upload equivalent python project please let know comment section idea buying bear year old daughter julia come across http mindcuber com youtube want badly get hooked alright get hooked guess come naturally omniwheel move platform yeah right ballbot see youtube com watch uprlokwicm,"['take', 'lego', 'mindstorms', 'holonomic', 'platform', 'three', 'omniwheels', 'mostly', 'high', 'schoolers', 'demonstrate', 'engineering', 'fun', 'holonomic', 'platform', 'three', 'omniwheels', 'please', 'read', 'attach', 'file', 'detail', 'like', 'would', 'like', 'upload', 'equivalent', 'python', 'project', 'please', 'let', 'know', 'comment', 'section', 'idea', 'buying', 'bear', 'year', 'old', 'daughter', 'julia', 'come', 'across', 'http', 'mindcuber', 'com', 'youtube', 'want', 'badly', 'get', 'hooked', 'alright', 'get', 'hooked', 'guess', 'come', 'naturally', 'omniwheel', 'move', 'platform', 'yeah', 'right', 'ballbot', 'see', 'youtube', 'com', 'watch', 'uprlokwicm']",0
2418,71527,"Two-way electrically actuated valve in a closed-loop circuit together with a double-acting hydraulic cylinder.<p>This example shows the use of a 2-way electrically actuated valve in a closed-loop circuit together with a double-acting hydraulic cylinder.Different variants are presented based on the required level of fidelity.</p>cylinder,electronics,hydraulics,mosfet,power_electronics_control,solenoid valve",382,26,3,0,124,two way electrically actuate valve close loop circuit together double act hydraulic cylinder example show way electrically actuate valve close loop circuit together double act hydraulic cylinder different variant present base require level fidelity electronics controlsolenoid valve,"['two', 'way', 'electrically', 'actuate', 'valve', 'close', 'loop', 'circuit', 'together', 'double', 'act', 'hydraulic', 'cylinder', 'example', 'show', 'way', 'electrically', 'actuate', 'valve', 'close', 'loop', 'circuit', 'together', 'double', 'act', 'hydraulic', 'cylinder', 'different', 'variant', 'present', 'base', 'require', 'level', 'fidelity', 'electronics', 'controlsolenoid', 'valve']",4
2419,71534,"This model shows the IEEE 13-bus incorporated with  DG units (Solar, Wind, and Energy Storage System). <p>This model shows the IEEE 13-bus incorporated with  DG units (Solar, Wind, and Energy Storage System). I will be using the model in Active Distribution State Estimation studies for my Masters' dissertation. The DG units are sourced from microgridLibrary1.slx by J. Lesage.</p>",313,19,5,0,379,show iee bus incorporate unit solar wind energy storage show iee bus incorporate unit solar wind energy storage active distribution state estimation study master dissertation unit source slx lesage,"['show', 'iee', 'bus', 'incorporate', 'unit', 'solar', 'wind', 'energy', 'storage', 'show', 'iee', 'bus', 'incorporate', 'unit', 'solar', 'wind', 'energy', 'storage', 'active', 'distribution', 'state', 'estimation', 'study', 'master', 'dissertation', 'unit', 'source', 'slx', 'lesage']",4
2420,71544,"My take on LEGO Mindstorms EV3 balancing BallBot using a holonomic platform with three omniwheels and two gyroscopes.<p>A balancing ballbot using a holonomic platform on three omniwheels and two gyroscopes. Please read the attached .m file for more details. If you like it and would like me to upload more EV3 Simulink and equivalent Python ""projects"", please let me know in the comment section. The idea of buying EV3 was born in 2018. My then 8-year-old daughter Julia came across <a href=""http://mindcuber.com/"">http://mindcuber.com/</a> on YouTube, and she wanted it badly. And we got hooked. Alright, I got hooked :) More photos at <a href=""http://ufnalski.edu.pl/python_projects/lego_ev3/photos/ballbot/"">http://ufnalski.edu.pl/python_projects/lego_ev3/photos/ballbot/</a> . Some videos at <a href=""http://ufnalski.edu.pl/python_projects/lego_ev3/videos/ballbot/"">http://ufnalski.edu.pl/python_projects/lego_ev3/videos/ballbot/</a> . Dear High Schoolers, I hope that this ultimately proves my point that control engineering is massive fun :)YT video: <a href=""https://www.youtube.com/watch?v=1UPRloKwicM"">https://www.youtube.com/watch?v=1UPRloKwicM</a> .</p>balancing,balancing robot,ball,ball balancing,ballbot,control,education,ev3,gyro,gyro boy,gyroboy,gyroscope,holonomic,holonomic platform,inverted pendulum,lego,mindstorms,omni wheel,omnidirectional,omniwheel,pendulum,segway,self-balancing robot",144,6,3,0,168,take lego mindstorms balance ballbot holonomic platform three omniwheels two gyroscope balance ballbot holonomic platform three omniwheels two gyroscope please read attach file detail like would like upload equivalent python project please let know comment section idea buying bear year old daughter julia come across http mindcuber com youtube want badly get hooked alright get hooked photo http ufnalski edu python project lego photo ballbot videos http ufnalski edu python project lego videos ballbot dear high schoolers hope ultimately prove point control engineering massive fun video youtube com watch uprlokwicm robotballball gyrogyro balance robot,"['take', 'lego', 'mindstorms', 'balance', 'ballbot', 'holonomic', 'platform', 'three', 'omniwheels', 'two', 'gyroscope', 'balance', 'ballbot', 'holonomic', 'platform', 'three', 'omniwheels', 'two', 'gyroscope', 'please', 'read', 'attach', 'file', 'detail', 'like', 'would', 'like', 'upload', 'equivalent', 'python', 'project', 'please', 'let', 'know', 'comment', 'section', 'idea', 'buying', 'bear', 'year', 'old', 'daughter', 'julia', 'come', 'across', 'http', 'mindcuber', 'com', 'youtube', 'want', 'badly', 'get', 'hooked', 'alright', 'get', 'hooked', 'photo', 'http', 'ufnalski', 'edu', 'python', 'project', 'lego', 'photo', 'ballbot', 'videos', 'http', 'ufnalski', 'edu', 'python', 'project', 'lego', 'videos', 'ballbot', 'dear', 'high', 'schoolers', 'hope', 'ultimately', 'prove', 'point', 'control', 'engineering', 'massive', 'fun', 'video', 'youtube', 'com', 'watch', 'uprlokwicm', 'robotballball', 'gyrogyro', 'balance', 'robot']",0
2421,71577,Harmonic spring mass system<p>Harmonic spring mass system</p>mass,8,0,1,0,12,harmonic spring mass systemharmonic spring mass systemmass,"['harmonic', 'spring', 'mass', 'systemharmonic', 'spring', 'mass', 'systemmass']",5
2422,71578,"Pacejka Tire Model<p>Pacejka Tire Model</p>pacejka,tire",69,4,2,0,72,pacejka tire modelpacejka tire,"['pacejka', 'tire', 'modelpacejka', 'tire']",2
2423,71579, Longitudinal dynamics of a vehicle under traction or braking<p>Â ABS/TCS controller subsystem</p>,318,17,3,0,352,longitudinal dynamic vehicle traction brake abs controller subsystem,"['longitudinal', 'dynamic', 'vehicle', 'traction', 'brake', 'abs', 'controller', 'subsystem']",5
2424,71590,"it is solar cell simulation in matlab.<p>it is solar cell simulation in matlab.it is like mppt</p>power_conversion_control,power_electronics_control",98,6,3,0,105,solar cell solar cell like mpptpower conversion controlpower electronics control,"['solar', 'cell', 'solar', 'cell', 'like', 'mpptpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2425,71624,"My take on LEGO Mindstorms EV3 holonomic platform using four mecanum wheels. Mainly to reveal the concept to my daughter.<p>Holonomic platform on four mecanum wheels. Please read the attached .m file for more details. There is a story behind this build. Julia (8.5 yrs) saw a mecanum wheel on my desk. She inspected it thoroughly. Then, she tested it on a plain surface. And after a minute or so she concluded: Dad, are you kidding me?! Such wheels cannot be used in a vehicle. You've wasted our money on them!I had no choice other than to prove her wrong -- at least in that that it's possible to drive on such wheels :)Have fun with holonomic robotics!</p>control,education,ev3,holonomic,lego,mecanum,mecanum wheel,mindstorms,omnidirectional,omniwheel,robotics,school",80,2,2,0,94,take lego mindstorms holonomic platform four mecanum wheel mainly reveal concept daughter holonomic platform four mecanum wheel please read attach file detail story behind build julia yrs saw mecanum wheel desk inspect thoroughly test plain surface minute conclude dad kid wheel vehicle waste money choice prove wrong least possible drive wheel fun holonomic robotics,"['take', 'lego', 'mindstorms', 'holonomic', 'platform', 'four', 'mecanum', 'wheel', 'mainly', 'reveal', 'concept', 'daughter', 'holonomic', 'platform', 'four', 'mecanum', 'wheel', 'please', 'read', 'attach', 'file', 'detail', 'story', 'behind', 'build', 'julia', 'yrs', 'saw', 'mecanum', 'wheel', 'desk', 'inspect', 'thoroughly', 'test', 'plain', 'surface', 'minute', 'conclude', 'dad', 'kid', 'wheel', 'vehicle', 'waste', 'money', 'choice', 'prove', 'wrong', 'least', 'possible', 'drive', 'wheel', 'fun', 'holonomic', 'robotics']",8
2426,71670,"Synthesize the baby song 'brotherJohn' including a melody (by LookUp Table), chords, a rhythm (by Noise). HAVE FUN.<p>To synthesize the baby song 'brotherJohn' including a melody (by LookUp Table), chords, a rhythm (by Noise). The melody is synthesized by a harmonic sine wave, and the freq for each note is based on the 'Equal Temperament' (A = 440 Hz, geometric progression: 2^1/12).If you could add something to make the tone sound more fantastic, please let me know! *_*</p>audio,audio processing,dsp,simulink",74,0,1,0,102,synthesize baby song brotherjohn include melody lookup table chord rhythm noise fun synthesize baby song brotherjohn include melody lookup table chord rhythm noise melody synthesize harmonic sine wave freq note base equal temperament geometric progression could add something make tone sound fantastic please let know audioaudio,"['synthesize', 'baby', 'song', 'brotherjohn', 'include', 'melody', 'lookup', 'table', 'chord', 'rhythm', 'noise', 'fun', 'synthesize', 'baby', 'song', 'brotherjohn', 'include', 'melody', 'lookup', 'table', 'chord', 'rhythm', 'noise', 'melody', 'synthesize', 'harmonic', 'sine', 'wave', 'freq', 'note', 'base', 'equal', 'temperament', 'geometric', 'progression', 'could', 'add', 'something', 'make', 'tone', 'sound', 'fantastic', 'please', 'let', 'know', 'audioaudio']",8
2427,71676,"A.AzemiPHEV Simulation 6L Diesel Engine with 180kW Motor<p>A Plug-in Hybrid allows the user to charge the battery pack to use a larger range of power than a standard hybrid.The energy consumption of plug-in hybrid electric vehicles (PHEV) is influenced by driving cyclesCompared with Hybrid Vehicle PHEV can work in Charge Depleting mode (CD), and Sustaining mode (CS).In CD mode, the vehicle is driven by the motor to consume electric power which provided by the power grid.After the entering the CS mode the Vehicle use SOC to prolong the Battery working life.Driving cycles is the main factor, affecting the fuel economy of PHEV.Conclusion:1.Disadvantage - low energy efficiency in the CS mode2.PHEV using full electricity to drive, and HEVs engine is working with high efficiencySwitching On/Off engine is one of mos critical Component at PHEV  A Series PHEV main power source is the electric motor, which drives the vehicle.Acknowledgment:The  work  presented  in  this  paper  was  funded  by  the  National  Natural  Science  Foundation  (No.  51775063),  the  Science  Foundation  of  Chongqing  University  of  Science  and  Technology  (No.ck2017zkyb023),  and  the  Science Foundation of Mechanical and Power Engineering of Chongqing   University   of   Science   and   Technology   (No.   JX2018A01)</p>",212,11,4,0,235,azemiphev diesel engine motora plug hybrid allow user charge battery pack large range power standard hybrid energy consumption plug hybrid electric vehicle phev influenced driving cyclescompared hybrid vehicle phev work charge deplete mode sustain mode mode vehicle drive motor consume electric power provide power grid enter mode vehicle soc prolong battery work life drive cycle main factor affect fuel economy phev conclusion disadvantage low energy efficiency mode phev full electricity drive hevs engine work high engine one critical component phev series phev main power source electric motor drive vehicle acknowledgment work present paper fund national natural science foundation science foundation chongqing university science technology zkyb science foundation mechanical power engineering chongqing university science technology,"['azemiphev', 'diesel', 'engine', 'motora', 'plug', 'hybrid', 'allow', 'user', 'charge', 'battery', 'pack', 'large', 'range', 'power', 'standard', 'hybrid', 'energy', 'consumption', 'plug', 'hybrid', 'electric', 'vehicle', 'phev', 'influenced', 'driving', 'cyclescompared', 'hybrid', 'vehicle', 'phev', 'work', 'charge', 'deplete', 'mode', 'sustain', 'mode', 'mode', 'vehicle', 'drive', 'motor', 'consume', 'electric', 'power', 'provide', 'power', 'grid', 'enter', 'mode', 'vehicle', 'soc', 'prolong', 'battery', 'work', 'life', 'drive', 'cycle', 'main', 'factor', 'affect', 'fuel', 'economy', 'phev', 'conclusion', 'disadvantage', 'low', 'energy', 'efficiency', 'mode', 'phev', 'full', 'electricity', 'drive', 'hevs', 'engine', 'work', 'high', 'engine', 'one', 'critical', 'component', 'phev', 'series', 'phev', 'main', 'power', 'source', 'electric', 'motor', 'drive', 'vehicle', 'acknowledgment', 'work', 'present', 'paper', 'fund', 'national', 'natural', 'science', 'foundation', 'science', 'foundation', 'chongqing', 'university', 'science', 'technology', 'zkyb', 'science', 'foundation', 'mechanical', 'power', 'engineering', 'chongqing', 'university', 'science', 'technology']",4
2428,71682,"PV array with filter corrected to solve the algebraic loop problem.<p>Vd, which is dependent on the model outputs, is fed-back to the model inputs which would have caused an algebraic loop if the filters were not present. The continued presence of the algebraic loop indicates that the V Filter and I Filter implementation probably has an unintended direct-feed through at some point during the simulation. The proposed model bypasses the faulty filters with correctly functioning filters which breaks the algebraic loop.</p>algebraic loop,pv array,solar panel",96,5,4,0,100,array filter correct solve algebraic loop problem dependent output feed back input would cause algebraic loop filter present continue presence algebraic loop indicate filter filter implementation probably unintended direct feed point propose bypass faulty filter correctly function filter break algebraic loop algebraic looppv arraysolar panel,"['array', 'filter', 'correct', 'solve', 'algebraic', 'loop', 'problem', 'dependent', 'output', 'feed', 'back', 'input', 'would', 'cause', 'algebraic', 'loop', 'filter', 'present', 'continue', 'presence', 'algebraic', 'loop', 'indicate', 'filter', 'filter', 'implementation', 'probably', 'unintended', 'direct', 'feed', 'point', 'propose', 'bypass', 'faulty', 'filter', 'correctly', 'function', 'filter', 'break', 'algebraic', 'loop', 'algebraic', 'looppv', 'arraysolar', 'panel']",4
2429,71715,"Comparative study of two repetitive process control techniques for a grid-tie converter under distorted grid voltage conditions.<p>For more tricks and tweaks, a.k.a. practicalities, for your repetitive process control systems please see our paper: Krzysztof Jackiewicz, Andrzej Stras, Bartlomiej Ufnalski and Lech Grzesiak, Comparative study of two repetitive process control techniques for a grid-tie converter under distorted grid voltage conditions, International Journal of Electrical Power &amp; Energy Systems (Elsevier), Volume 113, December 2019, Pages 164-175.<a href=""https://doi.org/10.1016/j.ijepes.2019.05.003Free"">https://doi.org/10.1016/j.ijepes.2019.05.003Free</a> full access till July 11, 2019 available here:<a href=""https://authors.elsevier.com/c/1Z5htWJH6LX~0"">https://authors.elsevier.com/c/1Z5htWJH6LX~0</a> .Acknowledgements: The research was supported by the National Centre for Research and Development (Narodowe Centrum Badan i Rozwoju) within the project No. PBS3/A4/13/2015 entitled Superconducting magnetic energy storage with a power electronic interface for electric power systems (original title: Nadprzewodzacy magazyn energii z interfejsem energoelektronicznym do zastosowan w sieciach dystrybucyjnych), 01.07.2015â31.12.2018. The acronym for the project is NpME.</p>active rectifier,energy storage,grid converter,grid interface,ilc,iterative learning control,mosc,npme,oscillatory controller,phase lead,power electronics,power system,practicalities,rc,renevable energy sources,renewables,repetitive control,repetitive controller,repetitive process,res,resonant controller,signal processing,smes,superconducting magnetic energy storage",24,1,2,0,29,comparative study two repetitive process control techniques grid tie converter distort grid voltage condition trick tweak practicality repetitive process control please see paper krzysztof jackiewicz stras bartlomiej ufnalski lech grzesiak comparative study two repetitive process control techniques grid tie converter distort grid voltage condition international journal electrical power amp energy elsevier volume december page doi org ijepes free full access till july available author elsevier com htwjh research support national centre research development narodowe centrum badan rozwoju within project entitle superconducting magnetic energy storage power electronic interface electric power original title nadprzewodzacy magazyn energii interfejsem zastosowan sieciach dystrybucyjnych acronym project npme active rectifierenergy storagegrid convertergrid learn controllerphase leadpower energy magnetic energy storage,"['comparative', 'study', 'two', 'repetitive', 'process', 'control', 'techniques', 'grid', 'tie', 'converter', 'distort', 'grid', 'voltage', 'condition', 'trick', 'tweak', 'practicality', 'repetitive', 'process', 'control', 'please', 'see', 'paper', 'krzysztof', 'jackiewicz', 'stras', 'bartlomiej', 'ufnalski', 'lech', 'grzesiak', 'comparative', 'study', 'two', 'repetitive', 'process', 'control', 'techniques', 'grid', 'tie', 'converter', 'distort', 'grid', 'voltage', 'condition', 'international', 'journal', 'electrical', 'power', 'amp', 'energy', 'elsevier', 'volume', 'december', 'page', 'doi', 'org', 'ijepes', 'free', 'full', 'access', 'till', 'july', 'available', 'author', 'elsevier', 'com', 'htwjh', 'research', 'support', 'national', 'centre', 'research', 'development', 'narodowe', 'centrum', 'badan', 'rozwoju', 'within', 'project', 'entitle', 'superconducting', 'magnetic', 'energy', 'storage', 'power', 'electronic', 'interface', 'electric', 'power', 'original', 'title', 'nadprzewodzacy', 'magazyn', 'energii', 'interfejsem', 'zastosowan', 'sieciach', 'dystrybucyjnych', 'acronym', 'project', 'npme', 'active', 'rectifierenergy', 'storagegrid', 'convertergrid', 'learn', 'controllerphase', 'leadpower', 'energy', 'magnetic', 'energy', 'storage']",5
2430,71775,"This is a very small block to trach the peak value of ac wave. That block is very effective in detecting the voltage dip in AC grid.<p>This is a very small block to trach the peak value of the ac wave. That block is very effective in detecting the voltage dip in the ac grid. Just set the solver to a fixed sampling of 50e-6 to match the setting inside the blocks. you can use your own sampling time.</p>dip detection,measurments,peak value,voltage dip",13,1,2,0,14,small block trach peak value wave block effective detecting voltage dip grid small block trach peak value wave block effective detecting voltage dip grid set solver fix sample match set inside block sample time dip valuevoltage dip,"['small', 'block', 'trach', 'peak', 'value', 'wave', 'block', 'effective', 'detecting', 'voltage', 'dip', 'grid', 'small', 'block', 'trach', 'peak', 'value', 'wave', 'block', 'effective', 'detecting', 'voltage', 'dip', 'grid', 'set', 'solver', 'fix', 'sample', 'match', 'set', 'inside', 'block', 'sample', 'time', 'dip', 'valuevoltage', 'dip']",0
2431,71803,"MATLAB EXPO 2019 Japan Ligthning talk demo (Part1).<p>Comentary how to create demo program and display in demonstration MATLAB EXPO 2019 Lightning talk.The Document was written in Japanese, sorry.</p>",19,0,1,0,17,expo japan ligthning talk demo part comentary create demo program display demonstration expo lightning talk document write japanese sorry,"['expo', 'japan', 'ligthning', 'talk', 'demo', 'part', 'comentary', 'create', 'demo', 'program', 'display', 'demonstration', 'expo', 'lightning', 'talk', 'document', 'write', 'japanese', 'sorry']",5
2432,71816,"How to model ODE from journal and textbook?<p>This example demostrates how to model ""shell and tube heat exchanger""  using ordinary differential equations. No control system is designed in this example, this is an open loop example.However, if you are looking to design the shell and tube heat exchanger with control system, you may refers to my academia article:<a href=""https://www.academia.edu/25122280/Modelling_Simulation_Control_of_Heat_Exchanger_by_Using_MatlabHighlights"">https://www.academia.edu/25122280/Modelling_Simulation_Control_of_Heat_Exchanger_by_Using_MatlabHighlights</a> : How to model the ODE from your journal or textbook in MATLAB and SimulinkHint how to develop control system and GUI for your ODE modelProduct Focus :MATLABSimulink</p>live script,modeling,ordinary differential equation",28,1,2,0,35,ode journal textbook example demostrates shell tube heat exchanger ordinary differential equation control design example open loop example however look design shell tube heat exchanger control may refer academia article academia edu control heat exchanger ode journal textbook develop control gui ode modelproduct focus differential equation,"['ode', 'journal', 'textbook', 'example', 'demostrates', 'shell', 'tube', 'heat', 'exchanger', 'ordinary', 'differential', 'equation', 'control', 'design', 'example', 'open', 'loop', 'example', 'however', 'look', 'design', 'shell', 'tube', 'heat', 'exchanger', 'control', 'may', 'refer', 'academia', 'article', 'academia', 'edu', 'control', 'heat', 'exchanger', 'ode', 'journal', 'textbook', 'develop', 'control', 'gui', 'ode', 'modelproduct', 'focus', 'differential', 'equation']",5
2433,71831,"Hardware Implementation of a WiFi Receiver Using Xilinx ZC706 and ADI FMComms3 or ADI RF SOM Front End<p>In this work, we have implemented a WiFi 802.11a receiver that can be used to capture over the air signals, demodulate and decode in real time. We use ADIâs FMComms3 SDR platform and Xilinx ZC706 (or ADI RF SOM and ADRV1 CRR) evaluation boards to do the experiment using over the air signals. </p>adi rf som,channel estimation,communications,decoder,fmcomms3,xilinx zynq,zc706",4938,536,8,60,5608,hardware implementation wifi receiver xilinx adi fmcomms adi som front endin work implement wifi receiver capture air signal demodulate decode real time adis fmcomms sdr platform xilinx adi som adrv crr evaluation board experiment air signal adi somchannel xilinx zynqzc,"['hardware', 'implementation', 'wifi', 'receiver', 'xilinx', 'adi', 'fmcomms', 'adi', 'som', 'front', 'endin', 'work', 'implement', 'wifi', 'receiver', 'capture', 'air', 'signal', 'demodulate', 'decode', 'real', 'time', 'adis', 'fmcomms', 'sdr', 'platform', 'xilinx', 'adi', 'som', 'adrv', 'crr', 'evaluation', 'board', 'experiment', 'air', 'signal', 'adi', 'somchannel', 'xilinx', 'zynqzc']",8
2434,71834,"The Model Comparison Utility provides command line functions for supporting model comparison.<p>MathWorks provides built-in Model Comparison capabilities for reporting the differences between versions of a Simulink model. Unfortunately, MathWorks provides no commands to be able to easily and programmatically query or parse these results from the command line or a script. The Model Comparison Utility provides many functions that facilitate useful operations on the comparison, such as: finding specific types of changes, getting model handles for comparison elements, plotting the comparison as a graph, and many more.For more information please see the included user guide, located in the ModelComparisonUtility/doc folder.</p>comparison,xmlcomp,model comparison,slxmlcompcompare,xmlcompedits,xmlcompnode",35,4,3,0,26,comparison utility provide command line function support comparison mathworks provide built comparison capability report difference version unfortunately mathworks provide command able easily query parse result command line script comparison utility provide many function facilitate useful operation comparison find specific type change get handle comparison element plot comparison graph many information please see include user guide locate doc folder,"['comparison', 'utility', 'provide', 'command', 'line', 'function', 'support', 'comparison', 'mathworks', 'provide', 'built', 'comparison', 'capability', 'report', 'difference', 'version', 'unfortunately', 'mathworks', 'provide', 'command', 'able', 'easily', 'query', 'parse', 'result', 'command', 'line', 'script', 'comparison', 'utility', 'provide', 'many', 'function', 'facilitate', 'useful', 'operation', 'comparison', 'find', 'specific', 'type', 'change', 'get', 'handle', 'comparison', 'element', 'plot', 'comparison', 'graph', 'many', 'information', 'please', 'see', 'include', 'user', 'guide', 'locate', 'doc', 'folder']",0
2435,71946,"Measure and record analog voltage measurements from a Raspberry Pi.<p>Measure and record analog voltage measurements from a Raspberry Pi. This code is built in simulink and can be deployed to the raspberry pi for standalone operation. This requires a MCP3008 10-bit ADC connected as described in the link <a href=""https://www.mathworks.com/help/supportpkg/raspberrypiio/ref/build-a-digital-voltmeter.htmlRaspberry"">https://www.mathworks.com/help/supportpkg/raspberrypiio/ref/build-a-digital-voltmeter.htmlRaspberry</a> Pi needs to be setup as in the following link: <a href=""https://www.mathworks.com/hardware-support/raspberry-pi-matlab.html"">https://www.mathworks.com/hardware-support/raspberry-pi-matlab.html</a></p>raspberry pi,simulink,voltmeter",9,0,1,0,7,measure record analog voltage measurement raspberry measure record analog voltage measurement raspberry code build deploy raspberry standalone operation require mcp bit adc connect described link mathworks com help supportpkg raspberrypiio ref build digital voltmeter htmlraspberry need setup follow link mathworks com hardware support raspberry htmlraspberry,"['measure', 'record', 'analog', 'voltage', 'measurement', 'raspberry', 'measure', 'record', 'analog', 'voltage', 'measurement', 'raspberry', 'code', 'build', 'deploy', 'raspberry', 'standalone', 'operation', 'require', 'mcp', 'bit', 'adc', 'connect', 'described', 'link', 'mathworks', 'com', 'help', 'supportpkg', 'raspberrypiio', 'ref', 'build', 'digital', 'voltmeter', 'htmlraspberry', 'need', 'setup', 'follow', 'link', 'mathworks', 'com', 'hardware', 'support', 'raspberry', 'htmlraspberry']",7
2436,71952,"Supports the creation of a Simulink module, syntactic interfaces, and checking related guidelines.<p>The Simulink Module Tool performs several functions in order to support modular development for Simulink models. It helps with scoping Simulink Functions, creating Function Callers, extracting a syntactic interface, listing dependencies, and other operations.For more information please see the included user guide, located in the SimulinkModule/doc folder.</p>guideline,interface,modular programming,module,simulink,simulink function",17,1,2,0,13,support creation module syntactic interface check related guideline module tool performs several function order support modular development help scoping function create function caller extract syntactic interface listing dependency operation information please see include user guide locate doc folder function,"['support', 'creation', 'module', 'syntactic', 'interface', 'check', 'related', 'guideline', 'module', 'tool', 'performs', 'several', 'function', 'order', 'support', 'modular', 'development', 'help', 'scoping', 'function', 'create', 'function', 'caller', 'extract', 'syntactic', 'interface', 'listing', 'dependency', 'operation', 'information', 'please', 'see', 'include', 'user', 'guide', 'locate', 'doc', 'folder', 'function']",0
2437,72067,"Counter with reset and adjustable number of counting elements<p>For my project I had to develop some kind of counter which would stop the input from one subsystem to another, to be sended after 5 times. So searching on site didn't had any contribution and I decided to create some version of my own. I hope that this'll be helpful to someon with similar problems.Also, with reset input, it's possible to reset the counter to zero and start over counting.</p>counter,simulink,timer,up counter",50,4,3,0,51,counter reset adjustable number count elementsfor project develop kind counter would stop input one subsystem another send time search site contribution decide create version hope helpful someon similar problem also reset input possible reset counter zero start counting counter,"['counter', 'reset', 'adjustable', 'number', 'count', 'elementsfor', 'project', 'develop', 'kind', 'counter', 'would', 'stop', 'input', 'one', 'subsystem', 'another', 'send', 'time', 'search', 'site', 'contribution', 'decide', 'create', 'version', 'hope', 'helpful', 'someon', 'similar', 'problem', 'also', 'reset', 'input', 'possible', 'reset', 'counter', 'zero', 'start', 'counting', 'counter']",0
2438,72074,"This Simulink model demonstrate a non-isolated half bridge Bidirectional DC-DC Converter with PI current control<p>Half Bridge Bidirectional DC-DC Converter with PI Current Control DemoDeveloped by Rodney Tan (PhD)Version 1.00 (July 2019)This Simulink model demonstrate a non-isolated half bridge Bidirectional DC-DC Converter with PI current control typically used for battery chargedischarge control application.The charge and discharge mode is control by the charge discharge current setting block where a positive current set the converter to discharging mode and a negative current set the converter to charging mode.</p>battery charge discharge control,bidirectional converter,dc-dc converter,half bridge,non-isolated,pi current control",17,0,1,0,21,demonstrate non isolate half bridge bidirectional converter current controlhalf bridge bidirectional converter current control demodeveloped rodney tan phd version july demonstrate non isolated half bridge bidirectional converter current control typically battery chargedischarge control application charge discharge mode control charge discharge current set block positive current set converter discharge mode negative current set converter charge mode battery charge discharge converterdc converterhalf bridgenon isolatedpi current control,"['demonstrate', 'non', 'isolate', 'half', 'bridge', 'bidirectional', 'converter', 'current', 'controlhalf', 'bridge', 'bidirectional', 'converter', 'current', 'control', 'demodeveloped', 'rodney', 'tan', 'phd', 'version', 'july', 'demonstrate', 'non', 'isolated', 'half', 'bridge', 'bidirectional', 'converter', 'current', 'control', 'typically', 'battery', 'chargedischarge', 'control', 'application', 'charge', 'discharge', 'mode', 'control', 'charge', 'discharge', 'current', 'set', 'block', 'positive', 'current', 'set', 'converter', 'discharge', 'mode', 'negative', 'current', 'set', 'converter', 'charge', 'mode', 'battery', 'charge', 'discharge', 'converterdc', 'converterhalf', 'bridgenon', 'isolatedpi', 'current', 'control']",3
2439,72076,"PSPWM/PMPWM block for full bridge resonant converter simulation<p>The block generates phase shifted output. The inputs to the block are the frequency (in Hz) and phase shift (in degrees). Useful for full bridge resonant converter simulation.</p>dc-dc,full bridge,pmpwm,power converter,power electronics,pspwm,pwm,switch mode power supplies",10,1,2,0,9,pspwm pmpwm block full bridge resonant converter block generates phase shift output input block frequency phase shift degree useful full bridge resonant converter dcfull converterpower mode power supply,"['pspwm', 'pmpwm', 'block', 'full', 'bridge', 'resonant', 'converter', 'block', 'generates', 'phase', 'shift', 'output', 'input', 'block', 'frequency', 'phase', 'shift', 'degree', 'useful', 'full', 'bridge', 'resonant', 'converter', 'dcfull', 'converterpower', 'mode', 'power', 'supply']",3
2440,72134,the parameters used in this model are for rc servo ft5335m motor.you can change the parameters and tune the controller to fit your system<p>the parameters used in this model are for rc servo ft5335m motor.you can change the parameters and tune the controller to fit your system</p>,55,7,4,0,51,parameter servo motor change parameter tune controller fit systemthe parameter servo motor change parameter tune controller fit,"['parameter', 'servo', 'motor', 'change', 'parameter', 'tune', 'controller', 'fit', 'systemthe', 'parameter', 'servo', 'motor', 'change', 'parameter', 'tune', 'controller', 'fit']",4
2441,72136,"the parameters used in this model are for CS-M22331-L steppe motor. <p>you can change the parameters, choose whether to position control or speed control and the pulse rate fits your system.</p>",104,13,7,0,69,parameter steppe motor change parameter choose whether position control speed control pulse rate fit,"['parameter', 'steppe', 'motor', 'change', 'parameter', 'choose', 'whether', 'position', 'control', 'speed', 'control', 'pulse', 'rate', 'fit']",3
2442,72150,"Library to show temperature and humidity values read from DHT sensor onto an LCD<p>Connect your DHT sensor block (<a href=""https://www.mathworks.com/matlabcentral/fileexchange/62878-arduino-additional-sensors-library-dht-lps331"">https://www.mathworks.com/matlabcentral/fileexchange/62878-arduino-additional-sensors-library-dht-lps331</a>) to an LCD block (<a href=""https://www.mathworks.com/matlabcentral/fileexchange/67997-simulink-library-for-arduino-liquid-crystal-display"">https://www.mathworks.com/matlabcentral/fileexchange/67997-simulink-library-for-arduino-liquid-crystal-display</a>) and show temperature and humidity values.Copyright (c) 2014 Pololu Corporation.  For more information, seehttp://<a href=""http://www.pololu.com/http://forum.pololu.com/Permission"">www.pololu.com/http://forum.pololu.com/Permission</a> is hereby granted, free of charge, to any personobtaining a copy of this software and associated documentationfiles (the ""Software""), to deal in the Software withoutrestriction, including without limitation the rights to use,copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom theSoftware is furnished to do so, subject to the followingconditions:The above copyright notice and this permission notice shall beincluded in all copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIESOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE ANDNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHTHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISINGFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OROTHER DEALINGS IN THE SOFTWARE.</p>arduino,dht,humidity,lcd,sensor,temperature",23,0,1,2,20,show temperature humidity value read dht sensor onto lcdconnect dht sensor block mathworks com matlabcentral fileexchange arduino additional sensor dht lps lcd block mathworks com matlabcentral fileexchange arduino liquid crystal display show temperature humidity value copyright pololu corporation information seehttp pololu com http forum pololu com permission hereby grant free charge personobtaining copy software associate software deal software include without limitation right usecopy modify merge publish distribute sublicense sellcopies software permit person thesoftware furnish subject copyright notice permission notice shall beincluded copy substantial portion software software provide without warranty kindexpress imply include limited warrantiesof merchantability fitness particular purpose event shall author liable claim damage action contract tort otherwise arisingfrom connection software orother dealing software,"['show', 'temperature', 'humidity', 'value', 'read', 'dht', 'sensor', 'onto', 'lcdconnect', 'dht', 'sensor', 'block', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'additional', 'sensor', 'dht', 'lps', 'lcd', 'block', 'mathworks', 'com', 'matlabcentral', 'fileexchange', 'arduino', 'liquid', 'crystal', 'display', 'show', 'temperature', 'humidity', 'value', 'copyright', 'pololu', 'corporation', 'information', 'seehttp', 'pololu', 'com', 'http', 'forum', 'pololu', 'com', 'permission', 'hereby', 'grant', 'free', 'charge', 'personobtaining', 'copy', 'software', 'associate', 'software', 'deal', 'software', 'include', 'without', 'limitation', 'right', 'usecopy', 'modify', 'merge', 'publish', 'distribute', 'sublicense', 'sellcopies', 'software', 'permit', 'person', 'thesoftware', 'furnish', 'subject', 'copyright', 'notice', 'permission', 'notice', 'shall', 'beincluded', 'copy', 'substantial', 'portion', 'software', 'software', 'provide', 'without', 'warranty', 'kindexpress', 'imply', 'include', 'limited', 'warrantiesof', 'merchantability', 'fitness', 'particular', 'purpose', 'event', 'shall', 'author', 'liable', 'claim', 'damage', 'action', 'contract', 'tort', 'otherwise', 'arisingfrom', 'connection', 'software', 'orother', 'dealing', 'software']",5
2443,72154,roller simulation on matlab<p>automatically breaks after reaching the limited speed(MORE NOTES ARE PROVIDED INSIDE MODEL)</p>,882,91,8,0,476,roller break reach limited speed note provide inside,"['roller', 'break', 'reach', 'limited', 'speed', 'note', 'provide', 'inside']",5
2444,72171,"power system Stabilizer 2A, PSS TEST E.saleh saied bohliga zwuitina power plant zwuitina@yahoo.com<p>power system Stabilizer 2A, PSS TEST E.saleh saied bohliga zwuitina power plant <a href=""mailto:zwuitina@yahoo.com"">zwuitina@yahoo.com</a></p>",89,6,2,0,97,power stabilizer pss test saleh saied bohliga zwuitina power plant zwuitina yahoo compower stabilizer pss test saleh saied bohliga zwuitina power plant zwuitina yahoo com,"['power', 'stabilizer', 'pss', 'test', 'saleh', 'saied', 'bohliga', 'zwuitina', 'power', 'plant', 'zwuitina', 'yahoo', 'compower', 'stabilizer', 'pss', 'test', 'saleh', 'saied', 'bohliga', 'zwuitina', 'power', 'plant', 'zwuitina', 'yahoo', 'com']",5
2445,72193,"Single-phase fully controlled converter for R  with & without freewheeling diode using Matlab<p>Single phase fully controlled converters are obtained by replacing the diodes of an uncontrolled converter with thyristors. It is one of the most popular converter circuits and is widely used in the speed control of separately excited dc machines. In a fully controlled converter the output voltage can be controlled by controlling the firing delay angle (Î±) of the thyristors. Thyristors T1 and T2 are fired together while T3 and T4 are fired 180Âº after T1 and T2. Depending on the load condition and the firing angle a fully controlled bridge converter can operate either in the continuous conduction mode or in the discontinuous conduction mode. In the continuous conduction mode, the load voltage depends only on the firing angle and not on load parameters. In the discontinuous conduction mode, the output voltage decreases with increasing load current. However, the output voltage is always greater than that in the continuous conduction mode for the same firing angle.</p>",18,0,1,0,22,single phase fully control converter without freewheel diode matlabsingle phase fully control converter obtain replace diode uncontrolled converter thyristors one popular converter circuit widely speed control separately excite machine fully control converter output voltage control control firing delay angle thyristors thyristors fire together fire depend load condition fire angle fully control bridge converter operate either continuous conduction mode discontinuous conduction mode continuous conduction mode load voltage depend fire angle load parameter discontinuous conduction mode output voltage decrease increase load current however output voltage always great continuous conduction mode fire angle,"['single', 'phase', 'fully', 'control', 'converter', 'without', 'freewheel', 'diode', 'matlabsingle', 'phase', 'fully', 'control', 'converter', 'obtain', 'replace', 'diode', 'uncontrolled', 'converter', 'thyristors', 'one', 'popular', 'converter', 'circuit', 'widely', 'speed', 'control', 'separately', 'excite', 'machine', 'fully', 'control', 'converter', 'output', 'voltage', 'control', 'control', 'firing', 'delay', 'angle', 'thyristors', 'thyristors', 'fire', 'together', 'fire', 'depend', 'load', 'condition', 'fire', 'angle', 'fully', 'control', 'bridge', 'converter', 'operate', 'either', 'continuous', 'conduction', 'mode', 'discontinuous', 'conduction', 'mode', 'continuous', 'conduction', 'mode', 'load', 'voltage', 'depend', 'fire', 'angle', 'load', 'parameter', 'discontinuous', 'conduction', 'mode', 'output', 'voltage', 'decrease', 'increase', 'load', 'current', 'however', 'output', 'voltage', 'always', 'great', 'continuous', 'conduction', 'mode', 'fire', 'angle']",3
2446,72194,"Single-phase ac voltage controller using Matlab Software<p>AC voltage controllers (ac line voltage controllers) are employed to vary the RMS value of the alternating voltage applied to a load circuit by introducing Thyristors between the load and a constant voltage ac source. The RMS value of alternating voltage applied to a load circuit is controlled by controlling the triggering angle of the Thyristors in the ac voltage controller circuits. In brief, an ac voltage controller is a type of thyristor power converter which is used to convert a fixed voltage, fixed frequency ac input supply to obtain a variable voltage ac output. The RMS value of the ac output voltage and the ac power flow to the load is controlled by varying (adjusting) the trigger angle âÎ±â.</p>",15,0,1,0,18,single phase voltage controller softwareac voltage controller line voltage controller employ vary rms value alternate voltage apply load circuit introduce thyristors load constant voltage source rms value alternate voltage apply load circuit control control trigger angle thyristors voltage controller circuit brief voltage controller type thyristor power converter convert fix voltage fix frequency input supply obtain variable voltage output rms value output voltage power flow load control vary adjusting trigger angle,"['single', 'phase', 'voltage', 'controller', 'softwareac', 'voltage', 'controller', 'line', 'voltage', 'controller', 'employ', 'vary', 'rms', 'value', 'alternate', 'voltage', 'apply', 'load', 'circuit', 'introduce', 'thyristors', 'load', 'constant', 'voltage', 'source', 'rms', 'value', 'alternate', 'voltage', 'apply', 'load', 'circuit', 'control', 'control', 'trigger', 'angle', 'thyristors', 'voltage', 'controller', 'circuit', 'brief', 'voltage', 'controller', 'type', 'thyristor', 'power', 'converter', 'convert', 'fix', 'voltage', 'fix', 'frequency', 'input', 'supply', 'obtain', 'variable', 'voltage', 'output', 'rms', 'value', 'output', 'voltage', 'power', 'flow', 'load', 'control', 'vary', 'adjusting', 'trigger', 'angle']",3
2447,72195,"Three-phase half controlled converter for R load using MATLAB<p>Three single phase half wave converters can be connected to form a three-phase half wave converter. Similarly, three phase semi converter uses 3 SCRs T1, T3 &amp; T5 and 3 diodes D2, D4&amp; D6. R,Y,B are phase voltages with respect to âNâ. In the circuit shown above when any device conducts, line voltage is applied across load. So, line voltage are necessary to draw Phase shift between two line voltages is 60 degree &amp; between two phase voltages it is 120 degree Each phase &amp; line voltage is sine wave with the frequency of 50 Hz. With purely resistive load current will be in phase with load voltage. Depending on value of firing angle, circuit can operate in two different modes. When Î±&lt;60 T1 is triggered at Î±=30. SCR T1 and D6 conduct and line voltage RY is applied to the load from (Ï/6 +Î±) to Ï/2. 60. At Ï/2 âD2â is more positive so conducts. Therefore, line voltage RB is applied to load. This continues up to firing of T3 at (Ï/6 +Î± )Vo(avg)=(3â3Vm)/2Ï(1+cosÎ±)For Î±â¤60 the output voltage is continuous so-called continuous mode of operation. For Î±&gt; 60 for some duration of time no device conducts so called discontinuous mode of operation.</p>",14,0,1,0,23,three phase half control converter load matlabthree single phase half wave converter connect form three phase half wave converter similarly three phase semi converter scrs amp diode amp ryb phase voltage respect circuit show device conduct line voltage apply across load line voltage necessary draw phase shift two line voltage degree amp two phase voltage degree phase amp line voltage sine wave frequency purely resistive load current phase load voltage depend value fire angle circuit operate two different mode trigger scr conduct line voltage apply load positive conduct therefore line voltage apply load continue fire avg cosÎ± output voltage continuous call continuous mode operation duration time device conduct call discontinuous mode operation,"['three', 'phase', 'half', 'control', 'converter', 'load', 'matlabthree', 'single', 'phase', 'half', 'wave', 'converter', 'connect', 'form', 'three', 'phase', 'half', 'wave', 'converter', 'similarly', 'three', 'phase', 'semi', 'converter', 'scrs', 'amp', 'diode', 'amp', 'ryb', 'phase', 'voltage', 'respect', 'circuit', 'show', 'device', 'conduct', 'line', 'voltage', 'apply', 'across', 'load', 'line', 'voltage', 'necessary', 'draw', 'phase', 'shift', 'two', 'line', 'voltage', 'degree', 'amp', 'two', 'phase', 'voltage', 'degree', 'phase', 'amp', 'line', 'voltage', 'sine', 'wave', 'frequency', 'purely', 'resistive', 'load', 'current', 'phase', 'load', 'voltage', 'depend', 'value', 'fire', 'angle', 'circuit', 'operate', 'two', 'different', 'mode', 'trigger', 'scr', 'conduct', 'line', 'voltage', 'apply', 'load', 'positive', 'conduct', 'therefore', 'line', 'voltage', 'apply', 'load', 'continue', 'fire', 'avg', 'cosÎ±', 'output', 'voltage', 'continuous', 'call', 'continuous', 'mode', 'operation', 'duration', 'time', 'device', 'conduct', 'call', 'discontinuous', 'mode', 'operation']",3
2448,72245,pulse trigger whenever input <p>pulse trigger whenever input </p>,18,1,2,0,15,pulse trigger whenever input pulse trigger whenever input,"['pulse', 'trigger', 'whenever', 'input', 'pulse', 'trigger', 'whenever', 'input']",4
2449,72261,Damping  SSR in DFIG-based wind farms using TCSC <p>Damping  SSR in DFIG-based wind farms using TCSC </p>damping ssr in dfig-based wind farms using tcsc,1377,60,8,0,1560,damp ssr dfig base wind farm tcsc damp ssr dfig base wind farm tcsc damp ssr dfig base wind farm tcsc,"['damp', 'ssr', 'dfig', 'base', 'wind', 'farm', 'tcsc', 'damp', 'ssr', 'dfig', 'base', 'wind', 'farm', 'tcsc', 'damp', 'ssr', 'dfig', 'base', 'wind', 'farm', 'tcsc']",5
2450,72262,This model is used for damping sub-synchronous resonance SSR in DFIG wind farms  based on TCSC (CONSTANT POWER CONTROL METHOD ) <p>This model is used for damping sub-synchronous resonance SSR in DFIG wind farms  based on TCSC (CONSTANT POWER CONTROL METHOD ) </p>,1512,67,8,0,1733,damp sub synchronous resonance ssr dfig wind farm base tcsc constant power control method damp sub synchronous resonance ssr dfig wind farm base tcsc constant power control method,"['damp', 'sub', 'synchronous', 'resonance', 'ssr', 'dfig', 'wind', 'farm', 'base', 'tcsc', 'constant', 'power', 'control', 'method', 'damp', 'sub', 'synchronous', 'resonance', 'ssr', 'dfig', 'wind', 'farm', 'base', 'tcsc', 'constant', 'power', 'control', 'method']",4
2451,72265,Mitigation SSR in DFIG-based wind farm using GCSC based on constant alpha<p>Mitigation SSR in DFIG-based wind farm using GCSC based on constant alpha</p>,1375,60,8,0,1557,mitigation ssr dfig base wind farm gcsc base constant alphamitigation ssr dfig base wind farm gcsc base constant alpha,"['mitigation', 'ssr', 'dfig', 'base', 'wind', 'farm', 'gcsc', 'base', 'constant', 'alphamitigation', 'ssr', 'dfig', 'base', 'wind', 'farm', 'gcsc', 'base', 'constant', 'alpha']",4
2452,72270,"To simulate Buck-Boost converter for R and R-L loads using MATLAB Simulink.<p>For a Buck-Boost Converter, the output voltage can be higher or lower than the input voltage. The output voltage is negative.</p>",16,0,1,0,19,buck boost converter load buck boost converter output voltage high low input voltage output voltage negative,"['buck', 'boost', 'converter', 'load', 'buck', 'boost', 'converter', 'output', 'voltage', 'high', 'low', 'input', 'voltage', 'output', 'voltage', 'negative']",1
2453,72313,"Photovoltaic MPPT control using Fuzzy Logic control under variable irradiance.<p>A photovoltaic model connected to converter under variable irradiance and fixed temperature. The PV ( Kycera Solar KC200GT)-converter is controlled by Fuzzy Logic based PWM to reach the MPPT in one module string and one parallel string.<a href=""https://www.researchgate.net/profile/Mohamed_Louzazni2/research?ev=prf_acthttps://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate"">https://www.researchgate.net/profile/Mohamed_Louzazni2/research?ev=prf_acthttps://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate</a></p>fuzzy logic controller,grid connected,mppt,mppt fuzzy logic control,photovolaic,pv,solar cell",41,1,2,0,54,photovoltaic mppt control fuzzy logic control variable irradiance photovoltaic connect converter variable irradiance fix temperature solar converter control fuzzy logic base pwm reach mppt one module string one parallel string researchgate net profile mohamed louzazni research prf act scholar google citation amp user veb aaj amp view list work amp sortby pubdatefuzzy logic controllergrid fuzzy logic cell,"['photovoltaic', 'mppt', 'control', 'fuzzy', 'logic', 'control', 'variable', 'irradiance', 'photovoltaic', 'connect', 'converter', 'variable', 'irradiance', 'fix', 'temperature', 'solar', 'converter', 'control', 'fuzzy', 'logic', 'base', 'pwm', 'reach', 'mppt', 'one', 'module', 'string', 'one', 'parallel', 'string', 'researchgate', 'net', 'profile', 'mohamed', 'louzazni', 'research', 'prf', 'act', 'scholar', 'google', 'citation', 'amp', 'user', 'veb', 'aaj', 'amp', 'view', 'list', 'work', 'amp', 'sortby', 'pubdatefuzzy', 'logic', 'controllergrid', 'fuzzy', 'logic', 'cell']",4
2454,72315,"The method enhances the steady state performance of the conventional P&O.<p>This paper proposes a method to improve the efficiency of the P&amp;O maximum power point tracker (MPPT) by reducing the steady state oscillation and eliminating the possibility of the algorithm to lose its tracking direction. <a href=""https://www.researchgate.net/profile/Mohamed_Louzazni2https://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate"">https://www.researchgate.net/profile/Mohamed_Louzazni2https://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate</a></p>maximum power point tracking,mpp,optimization,photovoltaic,po,po based mppt method,solar cell",26,1,2,0,33,method enhances steady state performance conventional paper propose method improve efficiency amp maximum power point tracker mppt reduce steady state oscillation eliminate possibility algorithm lose track direction researchgate net profile mohamed louzazni scholar google citation amp user veb aaj amp view list work amp sortby pubdatemaximum power point base mppt methodsolar cell,"['method', 'enhances', 'steady', 'state', 'performance', 'conventional', 'paper', 'propose', 'method', 'improve', 'efficiency', 'amp', 'maximum', 'power', 'point', 'tracker', 'mppt', 'reduce', 'steady', 'state', 'oscillation', 'eliminate', 'possibility', 'algorithm', 'lose', 'track', 'direction', 'researchgate', 'net', 'profile', 'mohamed', 'louzazni', 'scholar', 'google', 'citation', 'amp', 'user', 'veb', 'aaj', 'amp', 'view', 'list', 'work', 'amp', 'sortby', 'pubdatemaximum', 'power', 'point', 'base', 'mppt', 'methodsolar', 'cell']",4
2455,72316,"During the increment of solar irradiation, the conventional incremental conductance algorithm responds inaccurately at the first step change<p>The model present and simulated the MPPT using Incremental conductance algorithmhttps://<a href=""http://www.researchgate.net/profile/Mohamed_Louzazni2/research?ev=prf_acthttps://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate"">www.researchgate.net/profile/Mohamed_Louzazni2/research?ev=prf_acthttps://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate</a></p>algorithm,incremental conductance algorithm,photovoltaic,solar cell",26,1,2,0,33,increment solar irradiation conventional incremental conductance algorithm respond inaccurately first step changethe present mppt incremental conductance algorithm researchgate net profile mohamed louzazni research prf act scholar google citation amp user veb aaj amp view list work amp sortby conductance cell,"['increment', 'solar', 'irradiation', 'conventional', 'incremental', 'conductance', 'algorithm', 'respond', 'inaccurately', 'first', 'step', 'changethe', 'present', 'mppt', 'incremental', 'conductance', 'algorithm', 'researchgate', 'net', 'profile', 'mohamed', 'louzazni', 'research', 'prf', 'act', 'scholar', 'google', 'citation', 'amp', 'user', 'veb', 'aaj', 'amp', 'view', 'list', 'work', 'amp', 'sortby', 'conductance', 'cell']",5
2456,72326,"An audio processing application designed in MATLAB and deployed to Arduino using MATLAB Function blocks in Simulink.<p>Design applications in MATLAB and then perform standalone deployment onto Arduino hardware using MATLAB Function blocks in Simulink. You can tune your algorithm for a better performance and monitor signals from the hardware in real-time using External Mode. In this example, an audio processing application has been developed, implementing audio effects such as Echo, Reverberation and Pitch-Shifting.Here is a link to the video describing the Audio processing application: <a href=""https://www.youtube.com/watch?v=gXKtUxW4-Ck&amp;t=12s"">https://www.youtube.com/watch?v=gXKtUxW4-Ck&amp;t=12s</a></p>arduino,audio,audio effects,audio processing,deployment,echo,matlab function block,pitch shifting,reverb,reverberation",18,1,2,0,20,audio processing application design deploy arduino function block design application perform standalone deployment onto arduino hardware function block tune algorithm good performance monitor signal hardware real time external mode example audio processing application develop implement audio effect echo reverberation pitch shift link video describe audio processing application youtube com watch gxktuxw amp effectsaudio function blockpitch,"['audio', 'processing', 'application', 'design', 'deploy', 'arduino', 'function', 'block', 'design', 'application', 'perform', 'standalone', 'deployment', 'onto', 'arduino', 'hardware', 'function', 'block', 'tune', 'algorithm', 'good', 'performance', 'monitor', 'signal', 'hardware', 'real', 'time', 'external', 'mode', 'example', 'audio', 'processing', 'application', 'develop', 'implement', 'audio', 'effect', 'echo', 'reverberation', 'pitch', 'shift', 'link', 'video', 'describe', 'audio', 'processing', 'application', 'youtube', 'com', 'watch', 'gxktuxw', 'amp', 'effectsaudio', 'function', 'blockpitch']",7
2457,72334,"To simulate Sinusoidal PWM based 3-phase inverter using Simulation software<p>The voltage source inverter that uses PWM switching techniques has a DC input voltage that is usually constant in magnitude. The inverter job is to take this DC input and to give AC output, where the magnitude and frequency can be controlled. The efficiency parameters of an inverter such as switching losses and harmonic reduction are principally depended on the modulation strategies used to control the inverter. There are several techniques of Pulse Width Modulation (PWM). In this design, the Sinusoidal Pulse Width Modulation (SPWM) technique has been used for controlling the inverter as it can directly control the inverter output voltage and output frequency according to the sine functions. Sinusoidal pulse width modulation (SPWM) is widely used in power electronics to digitize the power so that a sequence of voltage pulses can be generated by the on and off of the power switches. The PWM inverter has been the main choice in power electronic for decades, because of its circuit simplicity and rugged control scheme. Sinusoidal Pulse Width Modulation switching technique is commonly used in industrial applications, solar electric vehicle applications etc,</p>",42,0,1,0,59,sinusoidal pwm base phase inverter softwarethe voltage source inverter pwm switch technique input voltage usually constant magnitude inverter job take input give output magnitude frequency control efficiency parameter inverter switch loss harmonic reduction principally depend modulation strategy control inverter several technique pulse width modulation pwm design sinusoidal pulse width modulation spwm technique control inverter directly control inverter output voltage output frequency accord sine function sinusoidal pulse width modulation spwm widely power electronics digitize power sequence voltage pulse generate power switch pwm inverter main choice power electronic decade circuit simplicity rugged control scheme sinusoidal pulse width modulation switch technique commonly industrial application solar electric vehicle application etc,"['sinusoidal', 'pwm', 'base', 'phase', 'inverter', 'softwarethe', 'voltage', 'source', 'inverter', 'pwm', 'switch', 'technique', 'input', 'voltage', 'usually', 'constant', 'magnitude', 'inverter', 'job', 'take', 'input', 'give', 'output', 'magnitude', 'frequency', 'control', 'efficiency', 'parameter', 'inverter', 'switch', 'loss', 'harmonic', 'reduction', 'principally', 'depend', 'modulation', 'strategy', 'control', 'inverter', 'several', 'technique', 'pulse', 'width', 'modulation', 'pwm', 'design', 'sinusoidal', 'pulse', 'width', 'modulation', 'spwm', 'technique', 'control', 'inverter', 'directly', 'control', 'inverter', 'output', 'voltage', 'output', 'frequency', 'accord', 'sine', 'function', 'sinusoidal', 'pulse', 'width', 'modulation', 'spwm', 'widely', 'power', 'electronics', 'digitize', 'power', 'sequence', 'voltage', 'pulse', 'generate', 'power', 'switch', 'pwm', 'inverter', 'main', 'choice', 'power', 'electronic', 'decade', 'circuit', 'simplicity', 'rugged', 'control', 'scheme', 'sinusoidal', 'pulse', 'width', 'modulation', 'switch', 'technique', 'commonly', 'industrial', 'application', 'solar', 'electric', 'vehicle', 'application', 'etc']",3
2458,72338,"ANFIS Based grid integration of  hybrid PV/Wind power system with FACTS devices<p>ANFIS Based grid integration of  hybrid PV/Wind power system with FACTS devices</p>ai,anfis,facts,grid,hybrid,pv,svc,wind",329,15,3,0,437,anfis base grid integration hybrid wind power fact devicesanfis base grid integration hybrid wind power fact,"['anfis', 'base', 'grid', 'integration', 'hybrid', 'wind', 'power', 'fact', 'devicesanfis', 'base', 'grid', 'integration', 'hybrid', 'wind', 'power', 'fact']",3
2459,72362,"To solve the numerical of a step-down chopper and verify answers by simulation.<p>This is an undergraduate experiment in the course of Power Electronics. After performing this simulation experiment students will be able to 1. Develop a Simulink model for the step-down chopper.2. Understand the operation of a step-down chopper with R and RL load3. Observe the effect of L on the load current</p>r and rl load,step-down chopper",22,0,1,0,25,solve numerical step chopper verify answer undergraduate experiment course power electronics perform experiment student able develop step chopper understand operation step chopper load observe effect load currentr loadstep chopper,"['solve', 'numerical', 'step', 'chopper', 'verify', 'answer', 'undergraduate', 'experiment', 'course', 'power', 'electronics', 'perform', 'experiment', 'student', 'able', 'develop', 'step', 'chopper', 'understand', 'operation', 'step', 'chopper', 'load', 'observe', 'effect', 'load', 'currentr', 'loadstep', 'chopper']",4
2460,72464,space vector modulation is implemented for three phase inverter by using simple matlab coding<p>space vector modulation is one of the PWM technique to the output voltage. In this method 81% of dc bus voltage is utilized with less harmonic content. digital implementation of this method is easy.</p>,76,3,3,0,102,space vector modulation implement three phase inverter simple codingspace vector modulation one pwm technique output voltage method bus voltage utilize less harmonic content digital implementation method easy,"['space', 'vector', 'modulation', 'implement', 'three', 'phase', 'inverter', 'simple', 'codingspace', 'vector', 'modulation', 'one', 'pwm', 'technique', 'output', 'voltage', 'method', 'bus', 'voltage', 'utilize', 'less', 'harmonic', 'content', 'digital', 'implementation', 'method', 'easy']",3
2461,72465,The control algorithm for induction motor drive is implemented using STM32F4 Discovery board and Waijung Blockset.<p>The speed control of induction motor can be analyzed with constant V/f. The frequency is used as input command. The frequency is arranged from 0Hz to 50Hz to analyze the speed changes. The modulation index is varied depending on the input frequency. Soft-start function is taken into account to drive the induction motor smoothly at starting. </p>,217,17,3,0,253,control algorithm induction motor drive implement stm discovery board blockset speed control induction motor analyze constant frequency input command frequency arrange analyze speed change modulation index vary depend input frequency soft start function take account drive induction motor smoothly start,"['control', 'algorithm', 'induction', 'motor', 'drive', 'implement', 'stm', 'discovery', 'board', 'blockset', 'speed', 'control', 'induction', 'motor', 'analyze', 'constant', 'frequency', 'input', 'command', 'frequency', 'arrange', 'analyze', 'speed', 'change', 'modulation', 'index', 'vary', 'depend', 'input', 'frequency', 'soft', 'start', 'function', 'take', 'account', 'drive', 'induction', 'motor', 'smoothly', 'start']",3
2462,72466,"When induction motor is controlled with constant V/f, there is still problematic at low frequency range.<p>When the speed of IM is controlled with constant V/f, there is still problematic at low frequency range. Therefore, it is necessary to further modification to operated the induction motor in that region. In this control algorithm, two sinusoidal reference waves which are phase-shifted 90 degree is produced from the relationship of angle ""thida"" and modulation index. Using Clark transformation, three sinusoidal reference waves which are phase-shifted 120 degree is obtained. By comparing the available reference waves with carrier wave ( sawtooth wave, ) using switching frequency 4Hz, the gate signals can be obtained to switch the inverter.</p>",185,14,3,0,219,induction motor control constant still problematic low frequency range speed control constant still problematic low frequency range therefore necessary modification operate induction motor region control algorithm two sinusoidal reference wave phase shift degree produce relationship angle thida modulation index clark transformation three sinusoidal reference wave phase shift degree obtain compare available reference wave carrier wave sawtooth wave switch frequency gate signal obtain switch inverter,"['induction', 'motor', 'control', 'constant', 'still', 'problematic', 'low', 'frequency', 'range', 'speed', 'control', 'constant', 'still', 'problematic', 'low', 'frequency', 'range', 'therefore', 'necessary', 'modification', 'operate', 'induction', 'motor', 'region', 'control', 'algorithm', 'two', 'sinusoidal', 'reference', 'wave', 'phase', 'shift', 'degree', 'produce', 'relationship', 'angle', 'thida', 'modulation', 'index', 'clark', 'transformation', 'three', 'sinusoidal', 'reference', 'wave', 'phase', 'shift', 'degree', 'obtain', 'compare', 'available', 'reference', 'wave', 'carrier', 'wave', 'sawtooth', 'wave', 'switch', 'frequency', 'gate', 'signal', 'obtain', 'switch', 'inverter']",3
2463,72469,"Power factor measurement using simulink<p>In this file, power factor has been calculated using the formula; power factor=Real_power/Apparent power.</p>apparent_power,pf,power factor,real_power",17,1,2,0,23,power factor measurement file power factor calculate formula power factor real power apparent power apparent powerpfpower factorreal power,"['power', 'factor', 'measurement', 'file', 'power', 'factor', 'calculate', 'formula', 'power', 'factor', 'real', 'power', 'apparent', 'power', 'apparent', 'powerpfpower', 'factorreal', 'power']",3
2464,72489,"The Simulink Temperature Control Lab connects to an Arduino Leonardo with a TCLab shield.<p>The Temperature Control Lab is a plug-and-play Arduino device to teach machine learning and process control. Two heaters and an LED are adjusted. Two temperature sensors have a multi-variate and dynamic response to heater changes. Thermochromic pigment turns pink when hot and black when it cools off. The Simulink lab gives data so that theory and methods are reinforced with concrete and tangible examples. There is course material available to students and instructors thanks to efforts by many professors. The TCLab is also available on Amazon.TCLab Homepage: <a href=""https://apmonitor.com/heat.htmAmazon"">https://apmonitor.com/heat.htmAmazon</a>: <a href=""https://www.amazon.com/TCLab-Temperature-Control-Lab/dp/B07GMFWMRYThe"">https://www.amazon.com/TCLab-Temperature-Control-Lab/dp/B07GMFWMRYThe</a> National Science Foundation sponsored a report on Chemical Engineering Academia-Industry Alignment for Expectations about New Graduates. The report identifies a strong industrial need for practical understanding of process control and system dynamics. Industry feedback also suggested more weight on translating theory to practice in a way that is scalable for large class sizes. Instructors from 40 universities have adopted the lab, primarily for process dynamics and control education. Over 1900 lab kits have been distributed to individuals and instructors.More information (video): <a href=""https://youtu.be/E5747TUHVmQ"">https://youtu.be/E5747TUHVmQ</a></p>arduino,dynamics,machine learning,process control,simulink",58,3,2,5,48,temperature control lab connects arduino leonardo tclab shield temperature control lab plug play arduino device teach machine learn process control two heater lead adjust two temperature sensor multi variate dynamic response heater change thermochromic pigment turn pink hot black cool lab give data theory method reinforce concrete tangible example course material available student instructor thanks effort many professor tclab also available amazon tclab homepage apmonitor com heat htmamazon amazon com tclab temperature control lab gmfwmrythe national science foundation sponsor report chemical engineering academia industry alignment expectation new graduate report identifies strong industrial need practical understanding process control dynamic industry feedback also suggest weight translate theory practice way scalable large class size instructor university adopt lab primarily process dynamic control education lab kit distribute individual instructor information video youtu learningprocess,"['temperature', 'control', 'lab', 'connects', 'arduino', 'leonardo', 'tclab', 'shield', 'temperature', 'control', 'lab', 'plug', 'play', 'arduino', 'device', 'teach', 'machine', 'learn', 'process', 'control', 'two', 'heater', 'lead', 'adjust', 'two', 'temperature', 'sensor', 'multi', 'variate', 'dynamic', 'response', 'heater', 'change', 'thermochromic', 'pigment', 'turn', 'pink', 'hot', 'black', 'cool', 'lab', 'give', 'data', 'theory', 'method', 'reinforce', 'concrete', 'tangible', 'example', 'course', 'material', 'available', 'student', 'instructor', 'thanks', 'effort', 'many', 'professor', 'tclab', 'also', 'available', 'amazon', 'tclab', 'homepage', 'apmonitor', 'com', 'heat', 'htmamazon', 'amazon', 'com', 'tclab', 'temperature', 'control', 'lab', 'gmfwmrythe', 'national', 'science', 'foundation', 'sponsor', 'report', 'chemical', 'engineering', 'academia', 'industry', 'alignment', 'expectation', 'new', 'graduate', 'report', 'identifies', 'strong', 'industrial', 'need', 'practical', 'understanding', 'process', 'control', 'dynamic', 'industry', 'feedback', 'also', 'suggest', 'weight', 'translate', 'theory', 'practice', 'way', 'scalable', 'large', 'class', 'size', 'instructor', 'university', 'adopt', 'lab', 'primarily', 'process', 'dynamic', 'control', 'education', 'lab', 'kit', 'distribute', 'individual', 'instructor', 'information', 'video', 'youtu', 'learningprocess']",5
2465,72502,"Closed loop control of single phase stand-alone inverter in synchronous reference frame<p>Single phase Half-bridge inverter is driven using Sine PWM. The sine references are generated using a Harmonic oscillator. The closed loop control is implemented in synchronous reference frame, by using only alpha-beta to d-q conversion. In unbalanced d-q control one of the orthogonal component either alpha or beta is taken as zero. The inverter is fed by a dc source and the output is driving stand-alone resistive loads.</p>",139,7,2,0,150,closed loop control single phase stand alone inverter synchronous reference framesingle phase half bridge inverter drive sine pwm sine reference generate harmonic oscillator close loop control implement synchronous reference frame alpha beta conversion unbalance control one orthogonal component either alpha beta take zero inverter feed source output drive stand alone resistive load,"['closed', 'loop', 'control', 'single', 'phase', 'stand', 'alone', 'inverter', 'synchronous', 'reference', 'framesingle', 'phase', 'half', 'bridge', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'alpha', 'beta', 'conversion', 'unbalance', 'control', 'one', 'orthogonal', 'component', 'either', 'alpha', 'beta', 'take', 'zero', 'inverter', 'feed', 'source', 'output', 'drive', 'stand', 'alone', 'resistive', 'load']",3
2466,72503,"Closed loop control of single phase stand-alone full-bridge inverter in synchronous reference frame<p>Single phase Full-bridge inverter is driven using Sine PWM. The sine references are generated using a Harmonic oscillator. The closed loop control is implemented in synchronous reference frame, by using only alpha-beta to d-q conversion. In unbalanced d-q control one of the orthogonal component either alpha or beta is taken as zero. The inverter is fed by a dc source and the output is driving stand-alone resistive loads.</p>",146,7,2,0,157,closed loop control single phase stand alone full bridge inverter synchronous reference framesingle phase full bridge inverter drive sine pwm sine reference generate harmonic oscillator close loop control implement synchronous reference frame alpha beta conversion unbalance control one orthogonal component either alpha beta take zero inverter feed source output drive stand alone resistive load,"['closed', 'loop', 'control', 'single', 'phase', 'stand', 'alone', 'full', 'bridge', 'inverter', 'synchronous', 'reference', 'framesingle', 'phase', 'full', 'bridge', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'alpha', 'beta', 'conversion', 'unbalance', 'control', 'one', 'orthogonal', 'component', 'either', 'alpha', 'beta', 'take', 'zero', 'inverter', 'feed', 'source', 'output', 'drive', 'stand', 'alone', 'resistive', 'load']",3
2467,72510,"Passing NRZ and Manchester encoding through Ð¿alvanic isolation<p>This model allows watching the difference between the spectrums of the  NRZ and Manchester encoding schemes. Moreover, it allows watching the effects that appear when signal passing through galvanic isolation.  </p>galvanic isolation,manchester encoding,nrz,phy",33,4,2,0,34,pass nrz manchester encode Ð¿alvanic isolationthis allow watch difference spectrum nrz manchester encode scheme moreover allow watch effect appear signal passing galvanic isolation galvanic encodingnrzphy,"['pass', 'nrz', 'manchester', 'encode', 'Ð¿alvanic', 'isolationthis', 'allow', 'watch', 'difference', 'spectrum', 'nrz', 'manchester', 'encode', 'scheme', 'moreover', 'allow', 'watch', 'effect', 'appear', 'signal', 'passing', 'galvanic', 'isolation', 'galvanic', 'encodingnrzphy']",8
2468,72533,"Closed loop control of single phase grid connected full-bridge sine pwm inverter in synchronous reference frame<p>Single phase grid connected inverter is driven using Sine PWM. The sine references are generated using a PLL and Harmonic oscillator. The closed loop control is implemented in synchronous reference frame, by using only alpha-beta to d-q conversion. In unbalanced d-q control one of the orthogonal component either alpha or beta is taken as zero. The inverter is fed by a dc source and the current is injected into the grid as per the reference command.</p>",156,8,3,0,171,closed loop control single phase grid connect full bridge sine pwm inverter synchronous reference framesingle phase grid connect inverter drive sine pwm sine reference generate pll harmonic oscillator close loop control implement synchronous reference frame alpha beta conversion unbalance control one orthogonal component either alpha beta take zero inverter feed source current injected grid per reference command,"['closed', 'loop', 'control', 'single', 'phase', 'grid', 'connect', 'full', 'bridge', 'sine', 'pwm', 'inverter', 'synchronous', 'reference', 'framesingle', 'phase', 'grid', 'connect', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'pll', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'alpha', 'beta', 'conversion', 'unbalance', 'control', 'one', 'orthogonal', 'component', 'either', 'alpha', 'beta', 'take', 'zero', 'inverter', 'feed', 'source', 'current', 'injected', 'grid', 'per', 'reference', 'command']",3
2469,72541,"This submission includes a MATLABÂ® live script that illustrates the process of creating a custom device driver block using system object.<p>The included MATLABÂ® live script will help you understand the process of creating a custom device driver block using system object for any of the Simulink supported targets. When deployed, the device driver block will provide access to external peripherals, sensors or actuators which are connected to the hardware by calling the custom C/C++ device driver code.As an example, you will create a device driver block to interface Arduino Mega with an ePaper display through an SPI interface.Some additional information on live scripts: <a href=""https://www.mathworks.com/help/matlab/matlab_prog/what-is-a-live-script-or-function.htmlFiles"">https://www.mathworks.com/help/matlab/matlab_prog/what-is-a-live-script-or-function.htmlFiles</a> included in this submission -The attached .zip file contains 3 folders:1) Live Script: Provides step by step instructions &amp; explains how to create a system object.2) Model: This folder contains a Simulink model to test the created system object's functionality.3) System Object: This folder contains the system object - 'ePaper' which can be used to test the example directly. </p>arduino,customization,device driver,display,epaper,simulink,system object",12,2,2,0,8,submission include live script illustrate process create custom device driver block object include live script help understand process create custom device driver block object support target deploy device driver block provide access external peripheral sensor actuator connect hardware call custom device driver code example create device driver block interface arduino mega epaper display spi interface additional information live script mathworks com help prog live script function htmlfiles include submission attach zip file contain folder live script provide step step instruction amp explains create object folder contain test create object functionality object folder contains object epaper test example directly object,"['submission', 'include', 'live', 'script', 'illustrate', 'process', 'create', 'custom', 'device', 'driver', 'block', 'object', 'include', 'live', 'script', 'help', 'understand', 'process', 'create', 'custom', 'device', 'driver', 'block', 'object', 'support', 'target', 'deploy', 'device', 'driver', 'block', 'provide', 'access', 'external', 'peripheral', 'sensor', 'actuator', 'connect', 'hardware', 'call', 'custom', 'device', 'driver', 'code', 'example', 'create', 'device', 'driver', 'block', 'interface', 'arduino', 'mega', 'epaper', 'display', 'spi', 'interface', 'additional', 'information', 'live', 'script', 'mathworks', 'com', 'help', 'prog', 'live', 'script', 'function', 'htmlfiles', 'include', 'submission', 'attach', 'zip', 'file', 'contain', 'folder', 'live', 'script', 'provide', 'step', 'step', 'instruction', 'amp', 'explains', 'create', 'object', 'folder', 'contain', 'test', 'create', 'object', 'functionality', 'object', 'folder', 'contains', 'object', 'epaper', 'test', 'example', 'directly', 'object']",7
2470,72565,"An SVPWM for 3-level inverters (T-Type or NPC) that can be directly deployed to DSPs and microcontrollers<p>The SVPWM is the technique that is most suitable to direct implementation on DSPs and microcontrollers since it has a ready fit with the PWM resources available on these devices. SVPWM for three-level inverters (whether T-Type or Neutral point clamped) is complex compared to the 2-level counterpart. The detailed development is hard to find anywhere in the available literature. In the attached two files, there given a pdf file that moves gradually along the steps required to find the ON-time control laws of the main six switches of these inverters (the other six are complementary and are automatically generated with dead-time insertion by the DSP). Also, a SIMULINK model is given to test the performance of the implemented algorithm. Application engineers who wish to use this algorithm should take care that no voltage unbalance correction mechanism is provided in this algorithm. (The error fixed in version 1.0.1 is T1B dwell time was Tb+T0/2 but it should be Ts-T0/2. Now, this error is fixed in this version!In this version, one of two possible balancing methods for the neutral point voltage is implemented without principal change in the main algorithm structure. The method uses redundant space vectors that can result in the same average poles voltages but have an opposite impact on the neutral point voltage to achieve the balancing. The modifications are easy to follow and the technical reference used is mentioned in the SVPWM block. The testing Simulink model compares the performance of the previous version with the current version. You can try the testing at different modulation indexes.</p>",1061,41,6,0,1409,svpwm level inverter type npc directly deploy dsps svpwm technique suitable direct implementation dsps since ready fit pwm resource available device svpwm three level inverter whether type neutral point clamp complex compare level counterpart detail development hard find anywhere available literature attach two file give pdf file move gradually along step require find time control law main six switch inverter six complementary automatically generate dead time insertion dsp also give test performance implement algorithm application engineer wish algorithm take care voltage unbalance correction mechanism provide algorithm error fix version dwell time error fix version version one two possible balance method neutral point voltage implement without principal change main algorithm structure method redundant space vector result average pole voltages opposite impact neutral point voltage achieve balance modification easy follow technical reference mention svpwm block test compare performance previous version current version try test different modulation index,"['svpwm', 'level', 'inverter', 'type', 'npc', 'directly', 'deploy', 'dsps', 'svpwm', 'technique', 'suitable', 'direct', 'implementation', 'dsps', 'since', 'ready', 'fit', 'pwm', 'resource', 'available', 'device', 'svpwm', 'three', 'level', 'inverter', 'whether', 'type', 'neutral', 'point', 'clamp', 'complex', 'compare', 'level', 'counterpart', 'detail', 'development', 'hard', 'find', 'anywhere', 'available', 'literature', 'attach', 'two', 'file', 'give', 'pdf', 'file', 'move', 'gradually', 'along', 'step', 'require', 'find', 'time', 'control', 'law', 'main', 'six', 'switch', 'inverter', 'six', 'complementary', 'automatically', 'generate', 'dead', 'time', 'insertion', 'dsp', 'also', 'give', 'test', 'performance', 'implement', 'algorithm', 'application', 'engineer', 'wish', 'algorithm', 'take', 'care', 'voltage', 'unbalance', 'correction', 'mechanism', 'provide', 'algorithm', 'error', 'fix', 'version', 'dwell', 'time', 'error', 'fix', 'version', 'version', 'one', 'two', 'possible', 'balance', 'method', 'neutral', 'point', 'voltage', 'implement', 'without', 'principal', 'change', 'main', 'algorithm', 'structure', 'method', 'redundant', 'space', 'vector', 'result', 'average', 'pole', 'voltages', 'opposite', 'impact', 'neutral', 'point', 'voltage', 'achieve', 'balance', 'modification', 'easy', 'follow', 'technical', 'reference', 'mention', 'svpwm', 'block', 'test', 'compare', 'performance', 'previous', 'version', 'current', 'version', 'try', 'test', 'different', 'modulation', 'index']",0
2471,72566,"Simulation of FUEL CELL<p>Simulation of FUEL CELLhttps://<a href=""http://www.researchgate.net/profile/Mohamed_Louzazni2/research?ev=prf_acthttps://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate"">www.researchgate.net/profile/Mohamed_Louzazni2/research?ev=prf_acthttps://scholar.google.fr/citations?hl=fr&amp;user=v4VeB44AAAAJ&amp;view_op=list_works&amp;sortby=pubdate</a></p>",72,6,3,0,81,fuel fuel cell researchgate net profile mohamed louzazni research prf act scholar google citation amp user veb aaj amp view list work amp sortby pubdate,"['fuel', 'fuel', 'cell', 'researchgate', 'net', 'profile', 'mohamed', 'louzazni', 'research', 'prf', 'act', 'scholar', 'google', 'citation', 'amp', 'user', 'veb', 'aaj', 'amp', 'view', 'list', 'work', 'amp', 'sortby', 'pubdate']",5
2472,72570,"This charger charge Lithium-Ion battery in two stages<p>Lithium Battery Charger Block Developed By Rodney Tan (PhD)Version 1.00 (Aug 2019)This charger charge Lithium-Ion battery in two stagesThis charger takes in charge current (A) from the input in (CC) Constant Current charging stage and switch to Saturation Charge (CV) Constant Voltage charging stage when the battery reaches the set constant voltage.</p>battery charger,constant current charging,constant voltage charging,lithium battery",18,2,2,0,19,charger charge lithium ion battery two stageslithium battery charger block develop rodney tan phd version aug charger charge lithium ion battery two stagesthis charger take charge current input constant current charging stage switch saturation charge constant voltage charge stage battery reach set constant voltage battery chargerconstant current voltage charginglithium battery,"['charger', 'charge', 'lithium', 'ion', 'battery', 'two', 'stageslithium', 'battery', 'charger', 'block', 'develop', 'rodney', 'tan', 'phd', 'version', 'aug', 'charger', 'charge', 'lithium', 'ion', 'battery', 'two', 'stagesthis', 'charger', 'take', 'charge', 'current', 'input', 'constant', 'current', 'charging', 'stage', 'switch', 'saturation', 'charge', 'constant', 'voltage', 'charge', 'stage', 'battery', 'reach', 'set', 'constant', 'voltage', 'battery', 'chargerconstant', 'current', 'voltage', 'charginglithium', 'battery']",4
2473,72588,"This simulation shows a part of an LV distribution feeder.<p>This simulation shows a sample of a LV distribution feeder. A 250kVA distribution transformer of 11 kV /400 V, Dyn connection feeds 3 poles. RLC constant impedance loads are fed at each pole. The impedance of the distribution line is also considered.</p>distribution,distribution transformer,feeder,lv",52,3,2,0,67,show part distribution feeder show sample distribution feeder kva distribution transformer dyn connection feed pole rlc constant impedance load feed pole impedance distribution line also consider,"['show', 'part', 'distribution', 'feeder', 'show', 'sample', 'distribution', 'feeder', 'kva', 'distribution', 'transformer', 'dyn', 'connection', 'feed', 'pole', 'rlc', 'constant', 'impedance', 'load', 'feed', 'pole', 'impedance', 'distribution', 'line', 'also', 'consider']",5
2474,72603,"Optimum SHE for Cascaded H Bridge Multilevel Inverters using (GA) Genetic Algorithm <p><a href=""https://youtu.be/z6ex3wiU-WAMultilevel"">https://youtu.be/z6ex3wiU-WAMultilevel</a> Inverters for level 3, 5, 7, 9, 11 and 13contact: <a href=""mailto:algorithms7x@gmail.com"">algorithms7x@gmail.com</a></p>power_electronics_control",270,21,2,0,270,optimum cascade bridge multilevel inverter genetic algorithm youtu wiu wamultilevel inverter level contact algorithms gmail compower electronics control,"['optimum', 'cascade', 'bridge', 'multilevel', 'inverter', 'genetic', 'algorithm', 'youtu', 'wiu', 'wamultilevel', 'inverter', 'level', 'contact', 'algorithms', 'gmail', 'compower', 'electronics', 'control']",3
2475,72613,"This is a simulink model of Bipolar PWM Inverter that create a pulse width modulation signal for full H bridge IGBTs <p>In this model a tringular signal as carrier was compaired with a sinosudial signal as modulator. The frequence of carrier is more than approximately 10x of modulator and the amplitude is a little bit more also.</p>bipolar,bipolar pwm inverter,inverter",25,0,1,0,27,bipolar pwm inverter create pulse width modulation signal full bridge igbts tringular signal carrier compaired sinosudial signal modulator frequence carrier approximately modulator amplitude little bit also bipolarbipolar pwm,"['bipolar', 'pwm', 'inverter', 'create', 'pulse', 'width', 'modulation', 'signal', 'full', 'bridge', 'igbts', 'tringular', 'signal', 'carrier', 'compaired', 'sinosudial', 'signal', 'modulator', 'frequence', 'carrier', 'approximately', 'modulator', 'amplitude', 'little', 'bit', 'also', 'bipolarbipolar', 'pwm']",4
2476,72641,Boost Converter switch model<p>current control mode open loop</p>,20,0,1,0,25,boost converter switch modelcurrent control mode open loop,"['boost', 'converter', 'switch', 'modelcurrent', 'control', 'mode', 'open', 'loop']",1
2477,72697,"Closed loop control of three phase stand-alone sine pwm inverter in synchronous reference frame <p>Three phase off-grid inverter is driven using Sine PWM. The sine references are generated using a Harmonic oscillator. The closed loop control is implemented in synchronous reference frame, by converting three phase quantities in d-q synchronous reference frame. The inverter is fed by a dc source and the voltage is maintained at reference value across resistive load.</p>",205,7,2,0,226,closed loop control three phase stand alone sine pwm inverter synchronous reference frame three phase grid inverter drive sine pwm sine reference generate harmonic oscillator close loop control implement synchronous reference frame convert three phase quantity synchronous reference frame inverter feed source voltage maintain reference value across resistive load,"['closed', 'loop', 'control', 'three', 'phase', 'stand', 'alone', 'sine', 'pwm', 'inverter', 'synchronous', 'reference', 'frame', 'three', 'phase', 'grid', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'convert', 'three', 'phase', 'quantity', 'synchronous', 'reference', 'frame', 'inverter', 'feed', 'source', 'voltage', 'maintain', 'reference', 'value', 'across', 'resistive', 'load']",3
2478,72702,Closed loop control of three phase grid connected sine pwm inverter in synchronous reference frame<p>Three phase grid connected inverter is driven using Sine PWM. The sine references are generated using a PLL and Harmonic oscillator. The closed loop control is implemented in synchronous reference frame. The inverter is fed by a dc source and the current is injected into the grid as per the reference command.</p>,192,7,2,0,216,closed loop control three phase grid connect sine pwm inverter synchronous reference framethree phase grid connect inverter drive sine pwm sine reference generate pll harmonic oscillator close loop control implement synchronous reference frame inverter feed source current injected grid per reference command,"['closed', 'loop', 'control', 'three', 'phase', 'grid', 'connect', 'sine', 'pwm', 'inverter', 'synchronous', 'reference', 'framethree', 'phase', 'grid', 'connect', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'pll', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'inverter', 'feed', 'source', 'current', 'injected', 'grid', 'per', 'reference', 'command']",3
2479,72709,Three phase VSI STATCOM supplying reactive power to R-L load<p>Three phase STATCOM inverter is driven using Sine PWM. The sine references are generated using a PLL and Harmonic oscillator. The closed loop control is implemented in synchronous reference frame. Reactive power demand of the load is supplied by STATCOM in such a way that only active power is taken from the grid source.</p>,250,10,2,0,274,three phase vsi statcom supply reactive power loadthree phase statcom inverter drive sine pwm sine reference generate pll harmonic oscillator close loop control implement synchronous reference frame reactive power demand load supply statcom way active power take grid source,"['three', 'phase', 'vsi', 'statcom', 'supply', 'reactive', 'power', 'loadthree', 'phase', 'statcom', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'pll', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'reactive', 'power', 'demand', 'load', 'supply', 'statcom', 'way', 'active', 'power', 'take', 'grid', 'source']",3
2480,72711,conventional bidirectional boost dc-dc converter current control mode<p>A bidirectional boost dc-dc converter is controlled in current regulation mode. A single PI regulates the current through the output filter inductor to set point reference. Output voltage of the converter depends on the load value. </p>,28,0,1,0,33,conventional bidirectional boost converter current control modea bidirectional boost converter control current regulation mode single regulate current output filter inductor set point reference output voltage converter depend load value,"['conventional', 'bidirectional', 'boost', 'converter', 'current', 'control', 'modea', 'bidirectional', 'boost', 'converter', 'control', 'current', 'regulation', 'mode', 'single', 'regulate', 'current', 'output', 'filter', 'inductor', 'set', 'point', 'reference', 'output', 'voltage', 'converter', 'depend', 'load', 'value']",3
2481,72726,Closed loop control of single output buck dc-dc converter<p>A conventional buck dc-dc converter output voltage is controlled using a PI.</p>,28,0,1,0,34,closed loop control single output buck convertera conventional buck converter output voltage control,"['closed', 'loop', 'control', 'single', 'output', 'buck', 'convertera', 'conventional', 'buck', 'converter', 'output', 'voltage', 'control']",1
2482,72727,Dual output buck dc-dc converter closed loop control<p>A conventional dual output buck dc-dc converter is controlled using two PI controller.  </p>,52,0,1,0,65,dual output buck converter close loop controla conventional dual output buck converter control two controller,"['dual', 'output', 'buck', 'converter', 'close', 'loop', 'controla', 'conventional', 'dual', 'output', 'buck', 'converter', 'control', 'two', 'controller']",3
2483,72728,Dual output buck dc-dc converter output voltage control using cascaded PI.<p>A conventional dual output buck dc-dc converter voltage is regulated using PI. Current feedback is taken for inner current regulation loop to improve the transient response of the converter. </p>,60,0,1,0,73,dual output buck converter output voltage control cascaded conventional dual output buck converter voltage regulate current feedback take inner current regulation loop improve transient response converter,"['dual', 'output', 'buck', 'converter', 'output', 'voltage', 'control', 'cascaded', 'conventional', 'dual', 'output', 'buck', 'converter', 'voltage', 'regulate', 'current', 'feedback', 'take', 'inner', 'current', 'regulation', 'loop', 'improve', 'transient', 'response', 'converter']",3
2484,72735,"Three phase active power filter controlled using synchronous reference frame. <p>A three phase active power filter is controlled using d-q control in closed loop. The inverter is supplying harmonics and reactive power to the loads, such that the power drawn from the grid is at unity power factor. Non-linear current drawn by the loads is measured and the harmonics information thereby extracted is used in synchronous reference frame for compensation. </p>",262,9,2,0,290,three phase active power filter control synchronous reference frame three phase active power filter control control close loop inverter supply harmonic reactive power load power drawn grid unity power factor non linear current drawn load measure harmonic information thereby extract synchronous reference frame compensation,"['three', 'phase', 'active', 'power', 'filter', 'control', 'synchronous', 'reference', 'frame', 'three', 'phase', 'active', 'power', 'filter', 'control', 'control', 'close', 'loop', 'inverter', 'supply', 'harmonic', 'reactive', 'power', 'load', 'power', 'drawn', 'grid', 'unity', 'power', 'factor', 'non', 'linear', 'current', 'drawn', 'load', 'measure', 'harmonic', 'information', 'thereby', 'extract', 'synchronous', 'reference', 'frame', 'compensation']",3
2485,72749,This file demonstrates how output ripples decrease as the number of parallel converters increase.<p>This file demonstrates how output ripples decrease as the number of parallel converters increase.</p>,237,13,3,0,235,file demonstrate output ripple decrease number parallel converter increase file demonstrate output ripple decrease number parallel converter increase,"['file', 'demonstrate', 'output', 'ripple', 'decrease', 'number', 'parallel', 'converter', 'increase', 'file', 'demonstrate', 'output', 'ripple', 'decrease', 'number', 'parallel', 'converter', 'increase']",4
2486,72758,Phase Deposition Technique Based Seven Level H-Bridge Multilevel Inverter<p>Phase Deposition Technique Based Seven Level H-Bridge Multilevel Inverter</p>,249,16,3,0,296,phase deposition technique base seven level bridge multilevel inverterphase deposition technique base seven level bridge multilevel inverter,"['phase', 'deposition', 'technique', 'base', 'seven', 'level', 'bridge', 'multilevel', 'inverterphase', 'deposition', 'technique', 'base', 'seven', 'level', 'bridge', 'multilevel', 'inverter']",3
2487,72765,"Dynamic voltage restorer (DVR) is one product that can provide improved voltage sag and swell compensation with energy storage integration.<p>Cost of various energy storage technologies is decreasing rapidly and the integration of these technologies into the power grid is becoming a reality with the advent of smart grid. Dynamic voltage restorer (DVR) is one product that can provide improved voltage sag and swell compensation with energy storage integration. Ultracapacitors (UCAP) have low-energy density and high-power density ideal characteristics for compensation of voltage sags and voltage swells, which are both events that require high power for short spans of time. The novel contribution of this paper lies in the integration of rechargeable UCAP-based energy storage into the DVR topology. With this integration, the UCAP-DVR system will have active power capability and will be able to independently compensate temporary voltage sags and swells without relying on the grid to compensate for faults on the grid like in the past. UCAP is integrated into dc-link of the DVR through a bidirectional dcâdc converter, which helps in providing a stiff dc-link voltage, and the integrated UCAP-DVR system helps in compensating temporary voltage sags and voltage swells, which last from 3 s to 1 min.</p>an integrated dynamic voltage restorer-ultracapacitor design,dvr,dynamic voltage restorer,series compensation,sssc",2853,206,8,0,2036,dynamic voltage restorer dvr one product provide improve voltage sag swell compensation energy storage integration cost various energy storage technology decrease rapidly integration technology power grid become reality advent smart grid dynamic voltage restorer dvr one product provide improve voltage sag swell compensation energy storage integration ultracapacitors ucap low energy density high power density ideal characteristic compensation voltage sags voltage swell event require high power short span time novel contribution paper lie integration rechargeable ucap base energy storage dvr topology integration ucap dvr active power capability able independently compensate temporary voltage sag swell without rely grid compensate fault grid like past ucap integrate link dvr bidirectional dcdc converter help provide stiff link voltage integrate ucap dvr help compensate temporary voltage sag voltage swell last min integrate dynamic voltage restorer ultracapacitor voltage restorerseries,"['dynamic', 'voltage', 'restorer', 'dvr', 'one', 'product', 'provide', 'improve', 'voltage', 'sag', 'swell', 'compensation', 'energy', 'storage', 'integration', 'cost', 'various', 'energy', 'storage', 'technology', 'decrease', 'rapidly', 'integration', 'technology', 'power', 'grid', 'become', 'reality', 'advent', 'smart', 'grid', 'dynamic', 'voltage', 'restorer', 'dvr', 'one', 'product', 'provide', 'improve', 'voltage', 'sag', 'swell', 'compensation', 'energy', 'storage', 'integration', 'ultracapacitors', 'ucap', 'low', 'energy', 'density', 'high', 'power', 'density', 'ideal', 'characteristic', 'compensation', 'voltage', 'sags', 'voltage', 'swell', 'event', 'require', 'high', 'power', 'short', 'span', 'time', 'novel', 'contribution', 'paper', 'lie', 'integration', 'rechargeable', 'ucap', 'base', 'energy', 'storage', 'dvr', 'topology', 'integration', 'ucap', 'dvr', 'active', 'power', 'capability', 'able', 'independently', 'compensate', 'temporary', 'voltage', 'sag', 'swell', 'without', 'rely', 'grid', 'compensate', 'fault', 'grid', 'like', 'past', 'ucap', 'integrate', 'link', 'dvr', 'bidirectional', 'dcdc', 'converter', 'help', 'provide', 'stiff', 'link', 'voltage', 'integrate', 'ucap', 'dvr', 'help', 'compensate', 'temporary', 'voltage', 'sag', 'voltage', 'swell', 'last', 'min', 'integrate', 'dynamic', 'voltage', 'restorer', 'ultracapacitor', 'voltage', 'restorerseries']",4
2488,72770,implementation of three phase PLL in synchronous reference frame<p>A three phase PLL is implemented in synchronous reference frame for a balanced three phase system. Sine wave references are generated using a Harmonic oscillator.</p>,62,3,2,0,79,implementation three phase pll synchronous reference framea three phase pll implement synchronous reference frame balance three phase sine wave reference generate harmonic oscillator,"['implementation', 'three', 'phase', 'pll', 'synchronous', 'reference', 'framea', 'three', 'phase', 'pll', 'implement', 'synchronous', 'reference', 'frame', 'balance', 'three', 'phase', 'sine', 'wave', 'reference', 'generate', 'harmonic', 'oscillator']",3
2489,72772,"A single phase stand-alone inverter fed by MPPT converter interfaced without energy storage<p>A PV fed dc-dc converter interfaced to single phase inverter system without energy storage. In the absence of energy storage, the inverter load should match the MPPT power to maintain the output voltage within rated limits.</p>",197,9,3,0,216,single phase stand alone inverter feed mppt converter interfaced without energy storagea feed converter interfaced single phase inverter without energy storage absence energy storage inverter load match mppt power maintain output voltage within rat limit,"['single', 'phase', 'stand', 'alone', 'inverter', 'feed', 'mppt', 'converter', 'interfaced', 'without', 'energy', 'storagea', 'feed', 'converter', 'interfaced', 'single', 'phase', 'inverter', 'without', 'energy', 'storage', 'absence', 'energy', 'storage', 'inverter', 'load', 'match', 'mppt', 'power', 'maintain', 'output', 'voltage', 'within', 'rat', 'limit']",3
2490,72775,Three phase off-grid inverter space vector control in modified synchronous reference frame <p>Space vector control is implemented in a three phase inverter. Conventional d-q control is modified to generate SVM directly from two phase orthogonal sine-cosine references in stationary reference frame.  </p>,223,8,2,0,251,three phase grid inverter space vector control modify synchronous reference frame space vector control implement three phase inverter conventional control modify generate svm directly two phase orthogonal sine cosine reference stationary reference frame,"['three', 'phase', 'grid', 'inverter', 'space', 'vector', 'control', 'modify', 'synchronous', 'reference', 'frame', 'space', 'vector', 'control', 'implement', 'three', 'phase', 'inverter', 'conventional', 'control', 'modify', 'generate', 'svm', 'directly', 'two', 'phase', 'orthogonal', 'sine', 'cosine', 'reference', 'stationary', 'reference', 'frame']",3
2491,72776,A three phase VSI is controlled as a rectifier in synchronous reference frame<p>A three phase VSI or ac-dc rectifier  is operated in unity power factor mode. The controller is implemented using d-q control. </p>,206,7,2,0,230,three phase vsi control rectifier synchronous reference framea three phase vsi rectifier operate unity power factor mode controller implement control,"['three', 'phase', 'vsi', 'control', 'rectifier', 'synchronous', 'reference', 'framea', 'three', 'phase', 'vsi', 'rectifier', 'operate', 'unity', 'power', 'factor', 'mode', 'controller', 'implement', 'control']",1
2492,72777,"Perturb and Observe MPPT control dc-dc boost converter<p>Maximum power tracking of PV fed dc-dc boost converter using Perturb and Observe. In the absence of energy storage, the converter load power should match with the extracted power from PV panel. In the event of load/power mismatch the converter voltages are unregulated. </p>",54,2,3,0,63,perturb observe mppt control boost power track feed boost converter perturb observe absence energy storage converter load power match extract power panel event load power mismatch converter voltage unregulated,"['perturb', 'observe', 'mppt', 'control', 'boost', 'power', 'track', 'feed', 'boost', 'converter', 'perturb', 'observe', 'absence', 'energy', 'storage', 'converter', 'load', 'power', 'match', 'extract', 'power', 'panel', 'event', 'load', 'power', 'mismatch', 'converter', 'voltage', 'unregulated']",3
2493,72782,"The SVPWM technique is the most suitable one for deploying to DSP and microcontrollers since these devices have dedicated H/W resources <p>The SVPWM technique is the most suitable one for encoding onto DSP and microcontrollers since these devices have suitable dedicated H/W resources that can receive slow rate updates of the duty cycle (for example at 50 to 100 microseconds) and produce very fine PWM resolutions using their integrated capture compare H/W modules. The author of this contribution has previously contributed an algorithm that doesn't exploit the possibilities for suppressing the neutral point fluctuation. In the previous contribution, the suppression technique is limited to the swapping of redundant vectors. In this contribution, another suppression method is combined with the previous one. It is the manipulation of the time assigned for the zero-vector. This time is implemented by allocating it using the zero vector O111 in the middle of the pulses and O000 on both edges. The splitting of T0 between vectors O111 and O000 can be manipulated in favor of suppressing the neutral point voltage fluctuation since each vector has the same effect on the pole voltage but opposite effects on the neutral point voltage. To enable this manipulation, the SVPWM block needs to receive the NPV fluctuation signal and the three-phase currents. The derivation of pulse width control laws is given in zipped Excel files. The given SIMULINK model compare the performance of the same block with and without zero-vector manipulation. You can change the load power factor and the modulation index to see the impact on the NP voltage fluctuation</p>",1343,58,7,0,1692,svpwm technique suitable one deploying dsp since device dedicated resource svpwm technique suitable one encode onto dsp since device suitable dedicated resource receive slow rate update duty cycle example microsecond produce fine pwm resolution integrated capture compare module author contribution previously contribute algorithm exploit possibility suppress neutral point fluctuation previous contribution suppression technique limit swap redundant vector contribution another suppression method combine previous one manipulation time assign zero vector time implement allocate zero vector middle pulse edge split vector manipulate favor suppress neutral point voltage fluctuation since vector effect pole voltage opposite effect neutral point voltage enable manipulation svpwm block need receive npv fluctuation signal three phase current derivation pulse width control law give zip excel file give compare performance block without zero vector manipulation change load power factor modulation index see impact voltage fluctuation,"['svpwm', 'technique', 'suitable', 'one', 'deploying', 'dsp', 'since', 'device', 'dedicated', 'resource', 'svpwm', 'technique', 'suitable', 'one', 'encode', 'onto', 'dsp', 'since', 'device', 'suitable', 'dedicated', 'resource', 'receive', 'slow', 'rate', 'update', 'duty', 'cycle', 'example', 'microsecond', 'produce', 'fine', 'pwm', 'resolution', 'integrated', 'capture', 'compare', 'module', 'author', 'contribution', 'previously', 'contribute', 'algorithm', 'exploit', 'possibility', 'suppress', 'neutral', 'point', 'fluctuation', 'previous', 'contribution', 'suppression', 'technique', 'limit', 'swap', 'redundant', 'vector', 'contribution', 'another', 'suppression', 'method', 'combine', 'previous', 'one', 'manipulation', 'time', 'assign', 'zero', 'vector', 'time', 'implement', 'allocate', 'zero', 'vector', 'middle', 'pulse', 'edge', 'split', 'vector', 'manipulate', 'favor', 'suppress', 'neutral', 'point', 'voltage', 'fluctuation', 'since', 'vector', 'effect', 'pole', 'voltage', 'opposite', 'effect', 'neutral', 'point', 'voltage', 'enable', 'manipulation', 'svpwm', 'block', 'need', 'receive', 'npv', 'fluctuation', 'signal', 'three', 'phase', 'current', 'derivation', 'pulse', 'width', 'control', 'law', 'give', 'zip', 'excel', 'file', 'give', 'compare', 'performance', 'block', 'without', 'zero', 'vector', 'manipulation', 'change', 'load', 'power', 'factor', 'modulation', 'index', 'see', 'impact', 'voltage', 'fluctuation']",5
2494,72783,"Using Model Based Design for Code Generation: a hands-on experience<p>Model Based Design and Code Generation are two important concepts if you want to tackle complexity. This project is meant to provide a guided self paced example of a complete workflow, from the definition of the requirements to the deployment of the generated code on a target.Using the embedded documentation, you will go through the following activities: - Project architecture - Requirements definition - Implementation - Verification - Code Generation - DeploymentThe code is meant to be deployed on a BeagleBone Black (with a Bacon Cape). However, you can still use this project without the hardware which is only required in the last section.</p>beaglebone,code generation,mbd",118,6,3,-3,84,base design code generation hand experiencemodel base design code generation two important concept want tackle complexity project mean provide guide self paced example complete workflow definition requirement deployment generate code target embedded documentation follow activity project architecture requirement definition implementation verification code generation deploymentthe code mean deploy beaglebone black bacon cape however still project without hardware require last section beaglebonecode generationmbd,"['base', 'design', 'code', 'generation', 'hand', 'experiencemodel', 'base', 'design', 'code', 'generation', 'two', 'important', 'concept', 'want', 'tackle', 'complexity', 'project', 'mean', 'provide', 'guide', 'self', 'paced', 'example', 'complete', 'workflow', 'definition', 'requirement', 'deployment', 'generate', 'code', 'target', 'embedded', 'documentation', 'follow', 'activity', 'project', 'architecture', 'requirement', 'definition', 'implementation', 'verification', 'code', 'generation', 'deploymentthe', 'code', 'mean', 'deploy', 'beaglebone', 'black', 'bacon', 'cape', 'however', 'still', 'project', 'without', 'hardware', 'require', 'last', 'section', 'beaglebonecode', 'generationmbd']",0
2495,72796,"This Interactive demo performs photovoltaic panel Maximum Power Point Tracking based on Perturb & Observe algorithm.<p>MPPT Perturb &amp; Observe Algorithm BlockDeveloped by Rodney Tan (PhD)Version 1.00 Sep 2019This block perform photovoltaic panel Maximum Power Point Tracking based on Perturb &amp; Observe algorithm.This MPPT P&amp;O method is implemented using basic Simulink block only.This MPPT block take in Voltage and Current from photovoltaic panel and output PWM switching signal to drive the DC converter</p>maximum power point tracking,mppt,perturb and observe,po,solar pv",33,1,2,0,42,interactive demo performs photovoltaic panel maximum power point track base perturb observe algorithm mppt perturb amp observe algorithm blockdeveloped rodney tan phd version sep block perform photovoltaic panel maximum power point track base perturb amp observe algorithm mppt amp method implement basic block mppt block take voltage current photovoltaic panel output pwm switch signal drive power point observeposolar,"['interactive', 'demo', 'performs', 'photovoltaic', 'panel', 'maximum', 'power', 'point', 'track', 'base', 'perturb', 'observe', 'algorithm', 'mppt', 'perturb', 'amp', 'observe', 'algorithm', 'blockdeveloped', 'rodney', 'tan', 'phd', 'version', 'sep', 'block', 'perform', 'photovoltaic', 'panel', 'maximum', 'power', 'point', 'track', 'base', 'perturb', 'amp', 'observe', 'algorithm', 'mppt', 'amp', 'method', 'implement', 'basic', 'block', 'mppt', 'block', 'take', 'voltage', 'current', 'photovoltaic', 'panel', 'output', 'pwm', 'switch', 'signal', 'drive', 'power', 'point', 'observeposolar']",4
2496,72810,Separately excited DC motor chopper drive<p>A separately excited DC motor chopper drive control is presented. The armature winding average voltage is controlled using a closed loop PI controller. The field winding average voltage is controlled in open loop using PWM.</p>,42,0,1,0,49,separately excite motor chopper drivea separately excite motor chopper drive control present armature wind average voltage control close loop controller field wind average voltage control open loop pwm,"['separately', 'excite', 'motor', 'chopper', 'drivea', 'separately', 'excite', 'motor', 'chopper', 'drive', 'control', 'present', 'armature', 'wind', 'average', 'voltage', 'control', 'close', 'loop', 'controller', 'field', 'wind', 'average', 'voltage', 'control', 'open', 'loop', 'pwm']",3
2497,72811,"Single phase STATCOM and active power filter control in synchronous reference frame<p>Single phase STATCOM inverter is driven using Sine PWM. The sine references are generated using a PLL and Harmonic oscillator. The closed loop control is implemented in synchronous reference frame using unbalanced d-q control.The inverter is supplying harmonics and reactive power to the loads, such that the power drawn from the grid is at unity power factor. Non-linear current drawn by the loads is measured and the harmonics information thereby extracted is used in synchronous reference frame for compensation. </p>",230,11,3,0,253,single phase statcom active power filter control synchronous reference framesingle phase statcom inverter drive sine pwm sine reference generate pll harmonic oscillator close loop control implement synchronous reference frame unbalanced control inverter supply harmonic reactive power load power drawn grid unity power factor non linear current drawn load measure harmonic information thereby extract synchronous reference frame compensation,"['single', 'phase', 'statcom', 'active', 'power', 'filter', 'control', 'synchronous', 'reference', 'framesingle', 'phase', 'statcom', 'inverter', 'drive', 'sine', 'pwm', 'sine', 'reference', 'generate', 'pll', 'harmonic', 'oscillator', 'close', 'loop', 'control', 'implement', 'synchronous', 'reference', 'frame', 'unbalanced', 'control', 'inverter', 'supply', 'harmonic', 'reactive', 'power', 'load', 'power', 'drawn', 'grid', 'unity', 'power', 'factor', 'non', 'linear', 'current', 'drawn', 'load', 'measure', 'harmonic', 'information', 'thereby', 'extract', 'synchronous', 'reference', 'frame', 'compensation']",3
2498,72812,Single phase unity power factor converter control in synchronous reference frame<p>A single phase VSI or ac-dc rectifier is operated in unity power factor mode. The controller is implemented in synchronous reference frame using unbalanced d-q control. The output voltage of the rectifier is maintained at set point and the sinusoidal current drawn by the converter is in phase with the source voltage.</p>,166,8,3,0,183,single phase unity power factor converter control synchronous reference framea single phase vsi rectifier operate unity power factor mode controller implement synchronous reference frame unbalanced control output voltage rectifier maintain set point sinusoidal current drawn converter phase source voltage,"['single', 'phase', 'unity', 'power', 'factor', 'converter', 'control', 'synchronous', 'reference', 'framea', 'single', 'phase', 'vsi', 'rectifier', 'operate', 'unity', 'power', 'factor', 'mode', 'controller', 'implement', 'synchronous', 'reference', 'frame', 'unbalanced', 'control', 'output', 'voltage', 'rectifier', 'maintain', 'set', 'point', 'sinusoidal', 'current', 'drawn', 'converter', 'phase', 'source', 'voltage']",3
2499,72839,Variable voltage variable frequency open loop control of single phase Induction motor<p>A variable voltage variable frequency drive for open loop control of single phase Induction  motor is presented. The modulation index of the driving PWM pulses is varied in such a way to keep the V/F ratio or winding flux at the rated level with varying dc-link voltage. </p>,56,2,2,0,60,variable voltage variable frequency open loop control single phase induction motora variable voltage variable frequency drive open loop control single phase induction motor present modulation index drive pwm pulse vary way keep ratio wind flux rat level vary link voltage,"['variable', 'voltage', 'variable', 'frequency', 'open', 'loop', 'control', 'single', 'phase', 'induction', 'motora', 'variable', 'voltage', 'variable', 'frequency', 'drive', 'open', 'loop', 'control', 'single', 'phase', 'induction', 'motor', 'present', 'modulation', 'index', 'drive', 'pwm', 'pulse', 'vary', 'way', 'keep', 'ratio', 'wind', 'flux', 'rat', 'level', 'vary', 'link', 'voltage']",3
2500,72840,Variable voltage variable frequency open loop control of three phase Induction motor<p>A variable voltage variable frequency drive for open loop control of three phase Induction motor is presented. The modulation index of the driving PWM pulses is varied in such a way to keep the V/F ratio or winding flux at the rated level with varying dc-link voltage. </p>,66,1,2,0,66,variable voltage variable frequency open loop control three phase induction motora variable voltage variable frequency drive open loop control three phase induction motor present modulation index drive pwm pulse vary way keep ratio wind flux rat level vary link voltage,"['variable', 'voltage', 'variable', 'frequency', 'open', 'loop', 'control', 'three', 'phase', 'induction', 'motora', 'variable', 'voltage', 'variable', 'frequency', 'drive', 'open', 'loop', 'control', 'three', 'phase', 'induction', 'motor', 'present', 'modulation', 'index', 'drive', 'pwm', 'pulse', 'vary', 'way', 'keep', 'ratio', 'wind', 'flux', 'rat', 'level', 'vary', 'link', 'voltage']",3
2501,72848,"McGill Formula Electric builds a fully electric FSAE car and is located in Montreal, Canada. This is our first Simulink torque controller.<p>This Simulink model consists of a driver demanded torque calculation and a traction controller to limit slip and maximize launch speeds. </p>",70,6,4,0,66,formula electric build fully electric car locate montreal canada first torque controller consist driver demand torque calculation traction controller limit slip maximize launch speed,"['formula', 'electric', 'build', 'fully', 'electric', 'car', 'locate', 'montreal', 'canada', 'first', 'torque', 'controller', 'consist', 'driver', 'demand', 'torque', 'calculation', 'traction', 'controller', 'limit', 'slip', 'maximize', 'launch', 'speed']",4
2502,72885,"A SIMULINK model of power converters that step up DC voltage and convert it into an AC voltage waveform<p>The SIMULINK model uses a fixed DC voltage as a source which is stepped up using a DC-DC Boost converter. This is further fed into a single phase full bridge inverter which convertes the DC voltage into discrete AC pulses using IGBT diodes and a switching logic. Additionally, a Pure Sine Wave Converter circuit (PSWC) is used to convert the discrete AC pulses into a pure sinusoidal waveform. The model also contains dashboard scopes and other elements that make the simulation experience convenient &amp; user-friendly. PLEASE NOTE: For complete system design equations and documentation details, please visit my project website OR contact me on my personal email '<a href=""mailto:coolzairhussain@gmail.com"">coolzairhussain@gmail.com</a>' </p>inverter,power electronics,simulation,simulink",71,4,2,0,66,power converter step voltage convert voltage waveformthe fix voltage source step boost converter feed single phase full bridge inverter convert voltage discrete pulse igbt diode switch logic additionally pure sine wave converter circuit pswc convert discrete pulse pure sinusoidal waveform also contain dashboard scope element make experience convenient amp user friendly please note complete design equation documentation detail please visit project website contact personal email coolzairhussain gmail com inverterpower,"['power', 'converter', 'step', 'voltage', 'convert', 'voltage', 'waveformthe', 'fix', 'voltage', 'source', 'step', 'boost', 'converter', 'feed', 'single', 'phase', 'full', 'bridge', 'inverter', 'convert', 'voltage', 'discrete', 'pulse', 'igbt', 'diode', 'switch', 'logic', 'additionally', 'pure', 'sine', 'wave', 'converter', 'circuit', 'pswc', 'convert', 'discrete', 'pulse', 'pure', 'sinusoidal', 'waveform', 'also', 'contain', 'dashboard', 'scope', 'element', 'make', 'experience', 'convenient', 'amp', 'user', 'friendly', 'please', 'note', 'complete', 'design', 'equation', 'documentation', 'detail', 'please', 'visit', 'project', 'website', 'contact', 'personal', 'email', 'coolzairhussain', 'gmail', 'com', 'inverterpower']",4
2503,72888,"This document presents the fault detection and classification of power electronic systems using Vector Measurement Units (PMU).<p>PMU detects the fault in less than seconds, and it also gives a time synchronized the values of voltage and current in digital form and gives Data Hub local Vector (PDC). When the large-scale disturbances such as blackouts are, the protection and control of the actions taken against the degradation of the power system , which in turn system restore to a normal state and minimize the impact of the disturbance. System Wide Area measurement (WAMS) is now becoming day for the surveillance and control of operations of the system of power. The frequency is measured by the frequency and method of monitoring that depends on vector synchronized with technology for measuring speed and system of communication time transfer Global Positioning System (GPS). The proposed method has been validated in bus systems IEEE-9 using Matlab Simulink model.</p>detection of fault location by phasor measurement units,phasor measurement units",3135,200,3,0,1445,document present fault detection classification power electronic vector measurement unit pmu pmu detects fault less second also give time synchronized value voltage current digital form give data hub local vector pdc large scale disturbance blackouts protection control action take degradation power turn restore normal state minimize impact disturbance wide area measurement wams become day surveillance control operation power frequency measure frequency method monitoring depend vector synchronized technology measure speed communication time transfer global positioning gps propose method validate bus iee detection fault location phasor measurement unitsphasor measurement unit,"['document', 'present', 'fault', 'detection', 'classification', 'power', 'electronic', 'vector', 'measurement', 'unit', 'pmu', 'pmu', 'detects', 'fault', 'less', 'second', 'also', 'give', 'time', 'synchronized', 'value', 'voltage', 'current', 'digital', 'form', 'give', 'data', 'hub', 'local', 'vector', 'pdc', 'large', 'scale', 'disturbance', 'blackouts', 'protection', 'control', 'action', 'take', 'degradation', 'power', 'turn', 'restore', 'normal', 'state', 'minimize', 'impact', 'disturbance', 'wide', 'area', 'measurement', 'wams', 'become', 'day', 'surveillance', 'control', 'operation', 'power', 'frequency', 'measure', 'frequency', 'method', 'monitoring', 'depend', 'vector', 'synchronized', 'technology', 'measure', 'speed', 'communication', 'time', 'transfer', 'global', 'positioning', 'gps', 'propose', 'method', 'validate', 'bus', 'iee', 'detection', 'fault', 'location', 'phasor', 'measurement', 'unitsphasor', 'measurement', 'unit']",4
2504,72890,"Simple RF jammer model that emulates electronic warfare.<p>Simple RF jammer model that emulates electronic warfare. You can tune noise signal bandwidth, carrier frequency, output power and AWGN level as well as turn it on/off from dashboard knobs. Useful to design cognitive radio systems playing with various jamming strategies. </p>ew,jammer",13,0,1,0,7,simple jammer emulate electronic warfare simple jammer emulate electronic warfare tune noise signal bandwidth carrier frequency output power awgn level well turn dashboard knob useful design cognitive radio play various jam strategy ewjammer,"['simple', 'jammer', 'emulate', 'electronic', 'warfare', 'simple', 'jammer', 'emulate', 'electronic', 'warfare', 'tune', 'noise', 'signal', 'bandwidth', 'carrier', 'frequency', 'output', 'power', 'awgn', 'level', 'well', 'turn', 'dashboard', 'knob', 'useful', 'design', 'cognitive', 'radio', 'play', 'various', 'jam', 'strategy', 'ewjammer']",5
2505,72959,"An application of model-reference adaptive control (MRAS) for state feedback speed controller (SFC) for PMSM drive<p>The simulink model contains implementation of reference model, state feedback controller with adjustment mechanism based on Widrow-Hoff rule. The model allows to simulate behaviour of the drive with nominal or increased moment of inertia. To change the value you have to click on suitable textbox.</p>adaptive control,mras,pmsm,state feedback controller,widrow-hoff",186,16,3,0,228,application reference adaptive control mras state feedback speed controller sfc pmsm drivethe contains implementation reference state feedback controller adjustment mechanism base widrow hoff rule allow behaviour drive nominal increase moment inertia change value click suitable textbox adaptive feedback hoff,"['application', 'reference', 'adaptive', 'control', 'mras', 'state', 'feedback', 'speed', 'controller', 'sfc', 'pmsm', 'drivethe', 'contains', 'implementation', 'reference', 'state', 'feedback', 'controller', 'adjustment', 'mechanism', 'base', 'widrow', 'hoff', 'rule', 'allow', 'behaviour', 'drive', 'nominal', 'increase', 'moment', 'inertia', 'change', 'value', 'click', 'suitable', 'textbox', 'adaptive', 'feedback', 'hoff']",4
2506,72988,A variable voltage variable frequency ac-ac system using back to back connected single phase VSI.<p>A variable voltage variable frequency single phase ac-ac system using back to back connected single phase VSI is demonstrated. The application of the system could be for solid state transformers. There is no galvanic isolation in the system. The system is controlled in closed loop in synchronous reference frame using unbalanced d-q technique.</p>,659,38,4,0,719,variable voltage variable frequency back back connect single phase vsi variable voltage variable frequency single phase back back connect single phase vsi demonstrate application could solid state transformer galvanic isolation control close loop synchronous reference frame unbalanced technique,"['variable', 'voltage', 'variable', 'frequency', 'back', 'back', 'connect', 'single', 'phase', 'vsi', 'variable', 'voltage', 'variable', 'frequency', 'single', 'phase', 'back', 'back', 'connect', 'single', 'phase', 'vsi', 'demonstrate', 'application', 'could', 'solid', 'state', 'transformer', 'galvanic', 'isolation', 'control', 'close', 'loop', 'synchronous', 'reference', 'frame', 'unbalanced', 'technique']",3
2507,72989,"A variable voltage variable frequency ac-ac system using back to back connected single phase VSI and load side uncontrolled rectifier <p>A variable voltage variable frequency single phase ac-ac system using back to back connected single phase VSI is demonstrated. The application of the system could be for solid state transformers. There is no galvanic isolation in the system. The system is controlled in closed loop in synchronous reference frame using unbalanced d-q technique.For load side, instead of b2b VSI, a front end uncontrolled rectifier is used followed by a boost dc-dc converter.</p>",509,28,4,0,556,variable voltage variable frequency back back connect single phase vsi load side uncontrolled rectifier variable voltage variable frequency single phase back back connect single phase vsi demonstrate application could solid state transformer galvanic isolation control close loop synchronous reference frame unbalanced technique load side instead vsi front end uncontrolled rectifier used follow boost converter,"['variable', 'voltage', 'variable', 'frequency', 'back', 'back', 'connect', 'single', 'phase', 'vsi', 'load', 'side', 'uncontrolled', 'rectifier', 'variable', 'voltage', 'variable', 'frequency', 'single', 'phase', 'back', 'back', 'connect', 'single', 'phase', 'vsi', 'demonstrate', 'application', 'could', 'solid', 'state', 'transformer', 'galvanic', 'isolation', 'control', 'close', 'loop', 'synchronous', 'reference', 'frame', 'unbalanced', 'technique', 'load', 'side', 'instead', 'vsi', 'front', 'end', 'uncontrolled', 'rectifier', 'used', 'follow', 'boost', 'converter']",3
2508,72990,A variable voltage variable frequency galvanically isolated ac-ac system using back to back connected single phase VSI.<p>A variable voltage variable frequency single phase ac-ac system using back to back connected single phase VSI is demonstrated. The application of the system could be for solid state transformers. There is a low frequency transformer based galvanic isolation at the load side ac-ac converter. The load side ac-ac system has front end uncontrolled rectifier followed by a VSI. The system is controlled in closed loop in synchronous reference frame using unbalanced d-q technique.</p>,497,28,4,0,538,variable voltage variable frequency galvanically isolate back back connect single phase vsi variable voltage variable frequency single phase back back connect single phase vsi demonstrate application could solid state transformer low frequency transformer base galvanic isolation load side converter load side front end uncontrolled rectifier follow vsi control close loop synchronous reference frame unbalanced technique,"['variable', 'voltage', 'variable', 'frequency', 'galvanically', 'isolate', 'back', 'back', 'connect', 'single', 'phase', 'vsi', 'variable', 'voltage', 'variable', 'frequency', 'single', 'phase', 'back', 'back', 'connect', 'single', 'phase', 'vsi', 'demonstrate', 'application', 'could', 'solid', 'state', 'transformer', 'low', 'frequency', 'transformer', 'base', 'galvanic', 'isolation', 'load', 'side', 'converter', 'load', 'side', 'front', 'end', 'uncontrolled', 'rectifier', 'follow', 'vsi', 'control', 'close', 'loop', 'synchronous', 'reference', 'frame', 'unbalanced', 'technique']",3
2509,73023,"This model can explain how to model non linear PV system and can get P-V and I-V Graphs<p>This model can explain how to model non linear PV system and can get P-V and I-V Graphs. Please contact us on email: <a href=""mailto:malla_phd@yahoo.com"">malla_phd@yahoo.com</a> for any Matlab Models.</p>photovoltaic,pv system,solar system",31,3,4,0,32,explain non linear get graphsthis explain non linear get graphs please contact email malla phd yahoo com photovoltaicpv systemsolar,"['explain', 'non', 'linear', 'get', 'graphsthis', 'explain', 'non', 'linear', 'get', 'graphs', 'please', 'contact', 'email', 'malla', 'phd', 'yahoo', 'com', 'photovoltaicpv', 'systemsolar']",0
2510,73024,"Temperature parameter is included in modeling of PV system and can get P-V and I-V curves<p>This model can explain how to model non linear PV system with consideration of temperature and can get P-V and I-V Graphs. Please contact us on email: <a href=""mailto:malla_phd@yahoo.com"">malla_phd@yahoo.com</a> for any Matlab Models.</p>photovoltaic,pv system,solar",40,3,4,0,40,temperature parameter include get curvesthis explain non linear consideration temperature get graphs please contact email malla phd yahoo com photovoltaicpv systemsolar,"['temperature', 'parameter', 'include', 'get', 'curvesthis', 'explain', 'non', 'linear', 'consideration', 'temperature', 'get', 'graphs', 'please', 'contact', 'email', 'malla', 'phd', 'yahoo', 'com', 'photovoltaicpv', 'systemsolar']",0
2511,73067,"This type of Inverter requires two power electronics switches (MOSFET). The MOSFET or IGBT is used for switching purpose.<p>According to output frequency, ON time and OFF time of MOSFET is decided and gate pulses are generated. We need 50Hz AC power, so the time period of one cycle (0 &lt; t &lt; 2Ï) is 20msec. As shown in the diagram, MOSFET-1 is triggered for first half cycle (0 &lt; t &lt; Ï) and during this time period MOSFET-2 is not triggered. In this time period, current will flow in the direction of arrow as shown in below figure and half cycle of AC output is completed. The current from the load is right to left and load voltage is equal to +Vdc/2.In second half cycle (Ï &lt; t &lt; 2Ï), the MOSFET-2 is triggered and lower voltage source is connected with the load. The current from the load is left to right direction and load voltage is equal to -Vdc/2. In this time period, current will flow as shown in figure and the other half cycle of AC output is completed. Simulation of Half-Bridge Inverter in MATLABFor simulation add elements in model file from Simulink library.1) 2 DC source â 50V each2) 2 MOSFET3) Resistive load4) Pulse generator5) NOT gate6) Powergui7) Voltage measurement8) GOTO and FROM</p>",10,0,1,0,12,type inverter require two power electronics switch mosfet mosfet igbt switch purpose accord output frequency time time mosfet decide gate pulse generate need power time period one cycle msec show diagram mosfet trigger first half cycle time period mosfet trigger time period current flow direction arrow show figure half cycle output complete current load right leave load voltage equal vdc second half cycle mosfet trigger low voltage source connect load current load leave right direction load voltage equal vdc time period current flow show figure half cycle output complete half bridge inverter matlabfor add element file source mosfet resistive load pulse generator gate powergui voltage measurement goto,"['type', 'inverter', 'require', 'two', 'power', 'electronics', 'switch', 'mosfet', 'mosfet', 'igbt', 'switch', 'purpose', 'accord', 'output', 'frequency', 'time', 'time', 'mosfet', 'decide', 'gate', 'pulse', 'generate', 'need', 'power', 'time', 'period', 'one', 'cycle', 'msec', 'show', 'diagram', 'mosfet', 'trigger', 'first', 'half', 'cycle', 'time', 'period', 'mosfet', 'trigger', 'time', 'period', 'current', 'flow', 'direction', 'arrow', 'show', 'figure', 'half', 'cycle', 'output', 'complete', 'current', 'load', 'right', 'leave', 'load', 'voltage', 'equal', 'vdc', 'second', 'half', 'cycle', 'mosfet', 'trigger', 'low', 'voltage', 'source', 'connect', 'load', 'current', 'load', 'leave', 'right', 'direction', 'load', 'voltage', 'equal', 'vdc', 'time', 'period', 'current', 'flow', 'show', 'figure', 'half', 'cycle', 'output', 'complete', 'half', 'bridge', 'inverter', 'matlabfor', 'add', 'element', 'file', 'source', 'mosfet', 'resistive', 'load', 'pulse', 'generator', 'gate', 'powergui', 'voltage', 'measurement', 'goto']",4
2512,73068,"In full bridge inverter also, we need only two gate pulses which is same as half bridge inverter. One gate pulse is for MOSFET 1 and 2 and i<p>Elements required1) 4 â MOSFET2) 1 DC source3) Resistive load4) Voltage measurement5) Pulse generator6) GOTO and FROM7) powergui</p>power electronics",11,0,1,0,17,full bridge inverter also need two gate pulse half bridge inverter one gate pulse mosfet ielements require mosfet source resistive load voltage measurement pulse generator goto powerguipower electronics,"['full', 'bridge', 'inverter', 'also', 'need', 'two', 'gate', 'pulse', 'half', 'bridge', 'inverter', 'one', 'gate', 'pulse', 'mosfet', 'ielements', 'require', 'mosfet', 'source', 'resistive', 'load', 'voltage', 'measurement', 'pulse', 'generator', 'goto', 'powerguipower', 'electronics']",3
2513,73069,"s the phase delay is in seconds, so the phase delay of 2nd pulse generator will be (2e-3)*(1/6) and so on. All the six pulse generators conn<p>a three phase inverter uses two input DC sources, using 6 IGBT transistors to convert DC voltage into AC voltage and the output of such a circuit will be a three phase AC waveform with a phase difference of 120</p>power electronics",22,0,1,0,31,phase delay second phase delay pulse generator six pulse generator conna three phase inverter two input source igbt transistor convert voltage voltage output circuit three phase waveform phase difference power electronics,"['phase', 'delay', 'second', 'phase', 'delay', 'pulse', 'generator', 'six', 'pulse', 'generator', 'conna', 'three', 'phase', 'inverter', 'two', 'input', 'source', 'igbt', 'transistor', 'convert', 'voltage', 'voltage', 'output', 'circuit', 'three', 'phase', 'waveform', 'phase', 'difference', 'power', 'electronics']",1
2514,73071,"The circuit consist of four thyristors T1, T2, T3 and T4, a voltage source Vs and a RLoad.<p>The circuit consist of four thyristors T1, T2, T3 and T4, a voltage source Vs and a RLoad.ï· During the positive half cycle of the input voltage, the thyristors T1 &amp; T2 is forwardbiased but it does not conduct until a gate signal is applied to it.ï· When a gate pulse is given to the thyristors T1 &amp; T2 at Ït = Î±, it gets turned ON andbegins to conduct.ï· When the T1 &amp; T2 is ON, the input voltage is applied to the load through the path Vs-T1-Load-T2-Vs.ï· During the negative half cycle, T3 &amp; T4 is forward biased, the thyristor T1 &amp; T2 getsreverse biased and turns OFFï· When a gate pulse is given to the thyristor T3 &amp; T4 at Ït = Ï+Î±, it gets turned ON andbegins to conduct.ï· When T3 &amp; T4 is ON, the input voltage is applied to the load Vs-T3-Load-T4-Vs.ï· Here the load receives voltage during both the half cycles.ï· The average value of output voltage can be varied by varying the firing angle Î±.ï· The waveform shows the plot of input voltage, gate current, output voltage, outputcurrent and voltage across thyristor.</p>power electronics,power_electronics_control",14,0,1,0,22,circuit consist four thyristors voltage source rload circuit consist four thyristors voltage source rload positive half cycle input voltage thyristors amp forwardbiased conduct gate signal apply gate pulse give thyristors amp get turned andbegins conduct amp input voltage apply load path load negative half cycle amp forward bias thyristor amp getsreverse bias turn gate pulse give thyristor amp get turned andbegins conduct amp input voltage apply load load load receive voltage half cycle average value output voltage vary vary fire angle waveform show plot input voltage gate current output voltage outputcurrent voltage across thyristor power electronics control,"['circuit', 'consist', 'four', 'thyristors', 'voltage', 'source', 'rload', 'circuit', 'consist', 'four', 'thyristors', 'voltage', 'source', 'rload', 'positive', 'half', 'cycle', 'input', 'voltage', 'thyristors', 'amp', 'forwardbiased', 'conduct', 'gate', 'signal', 'apply', 'gate', 'pulse', 'give', 'thyristors', 'amp', 'get', 'turned', 'andbegins', 'conduct', 'amp', 'input', 'voltage', 'apply', 'load', 'path', 'load', 'negative', 'half', 'cycle', 'amp', 'forward', 'bias', 'thyristor', 'amp', 'getsreverse', 'bias', 'turn', 'gate', 'pulse', 'give', 'thyristor', 'amp', 'get', 'turned', 'andbegins', 'conduct', 'amp', 'input', 'voltage', 'apply', 'load', 'load', 'load', 'receive', 'voltage', 'half', 'cycle', 'average', 'value', 'output', 'voltage', 'vary', 'vary', 'fire', 'angle', 'waveform', 'show', 'plot', 'input', 'voltage', 'gate', 'current', 'output', 'voltage', 'outputcurrent', 'voltage', 'across', 'thyristor', 'power', 'electronics', 'control']",4
2515,73072,"The circuit consist of 6 thyristors, T1, T2, T3, T4, T5, T6, a three phase supply and a R load<p>The circuit consist of 6 thyristors, T1, T2, T3, T4, T5, T6, a three phase supply and a RL load.ï· The thyristors T1, T3, T5 form the positive group.ï· The thyristors T4, T6, T2 form the negative group.ï· Thyristors T1, T3, T4, T6 produces the full wave recitified output of Vab across the load.ï· Thyristors T3, T5, T6, T2 produces the full wave recitified output of Vbc across the load.ï· Thyristors T1, T5, T4, T2 produces the full wave recitified output of Vca across the load.ï· All these 3 outputs are given simultaneously to the same RL load. The effect is that all the 3individual output mentioned above gets superimposed on each other to get the final output.ï· The waveform of the output for different firing angles are shown below.ï· The average output voltage can be varied by varying the firing angle.ï· For firing angle &lt; 90, the circuit works as rectifier.ï· For firing angle &gt; 90, the circuit works as Line commutated inverter.</p>power_conversion_control,power_electronics_control",69,2,3,0,102,circuit consist thyristors three phase supply loadthe circuit consist thyristors three phase supply load thyristors form positive group thyristors form negative group thyristors produce full wave recitified output vab across load thyristors produce full wave recitified output vbc across load thyristors produce full wave recitified output vca across load output give load effect individual output mention get superimposed get final output waveform output different firing angle show average output voltage vary vary fire angle fire angle circuit work rectifier fire angle circuit work line commutate inverter power conversion controlpower electronics control,"['circuit', 'consist', 'thyristors', 'three', 'phase', 'supply', 'loadthe', 'circuit', 'consist', 'thyristors', 'three', 'phase', 'supply', 'load', 'thyristors', 'form', 'positive', 'group', 'thyristors', 'form', 'negative', 'group', 'thyristors', 'produce', 'full', 'wave', 'recitified', 'output', 'vab', 'across', 'load', 'thyristors', 'produce', 'full', 'wave', 'recitified', 'output', 'vbc', 'across', 'load', 'thyristors', 'produce', 'full', 'wave', 'recitified', 'output', 'vca', 'across', 'load', 'output', 'give', 'load', 'effect', 'individual', 'output', 'mention', 'get', 'superimposed', 'get', 'final', 'output', 'waveform', 'output', 'different', 'firing', 'angle', 'show', 'average', 'output', 'voltage', 'vary', 'vary', 'fire', 'angle', 'fire', 'angle', 'circuit', 'work', 'rectifier', 'fire', 'angle', 'circuit', 'work', 'line', 'commutate', 'inverter', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2516,73115,"This charge controller model perform solar photovoltaic Maximum Power Point Tracking to charge lead acid battery <p>This block perform solar photovoltaic Maximum Power Point Tracking based on Perturbation &amp; Observation algorithm and charge lead acid battery using three stage charging algorithm.Block SettingMPPT Duty Cycle Step SizeSpecify the MPPT duty cycle (delta) step size. Default value is 1e-5.Battery Charging Constant Voltage (V)Specify the battery charging constant voltage for absorption stage.PWM Switching Frequency (Hz)Specify the PWM switching frequency in Hz.</p>charge controller,mppt,mppt charge controller,perturbation observation,three stage charging",48,2,2,0,61,charge controller perform solar photovoltaic maximum power point track charge lead acid battery block perform solar photovoltaic maximum power point track base perturbation amp observation algorithm charge lead acid battery three stage charge algorithm block settingmppt duty cycle step sizespecify mppt duty cycle delta step size default value battery charge constant voltage specify battery charge constant voltage absorption stage pwm switch frequency specify pwm switch frequency charge charge stage charge,"['charge', 'controller', 'perform', 'solar', 'photovoltaic', 'maximum', 'power', 'point', 'track', 'charge', 'lead', 'acid', 'battery', 'block', 'perform', 'solar', 'photovoltaic', 'maximum', 'power', 'point', 'track', 'base', 'perturbation', 'amp', 'observation', 'algorithm', 'charge', 'lead', 'acid', 'battery', 'three', 'stage', 'charge', 'algorithm', 'block', 'settingmppt', 'duty', 'cycle', 'step', 'sizespecify', 'mppt', 'duty', 'cycle', 'delta', 'step', 'size', 'default', 'value', 'battery', 'charge', 'constant', 'voltage', 'specify', 'battery', 'charge', 'constant', 'voltage', 'absorption', 'stage', 'pwm', 'switch', 'frequency', 'specify', 'pwm', 'switch', 'frequency', 'charge', 'charge', 'stage', 'charge']",4
2517,73116,"This off-grid inverter model is capable to produce AC sinewave output voltage at 230 V 50 Hz up to 1 kW power from a 48 V battery<p>This off-grid inverter model is capable to produce AC sinewave output voltage at 230 V 50 Hz up to 1 kW power from a 48 V DC lead acid battery source.This off-grid inverter model consist of a high frequency DC-DC step up converter cascaded with a full bridge PI control voltage source inverter using SPWM modulation with LC filter to produce sine wave output with THD less than 1%.</p>dc-dc step up converter,lc filter,off grid inverter,push-pull converter,spwm,voltage source inverter",38,0,1,0,50,grid inverter capable produce sinewave output voltage power batterythis grid inverter capable produce sinewave output voltage power lead acid battery source grid inverter consist high frequency step converter cascade full bridge control voltage source inverter spwm modulation filter produce sine wave output thd less step converterlc filteroff grid inverterpush pull source inverter,"['grid', 'inverter', 'capable', 'produce', 'sinewave', 'output', 'voltage', 'power', 'batterythis', 'grid', 'inverter', 'capable', 'produce', 'sinewave', 'output', 'voltage', 'power', 'lead', 'acid', 'battery', 'source', 'grid', 'inverter', 'consist', 'high', 'frequency', 'step', 'converter', 'cascade', 'full', 'bridge', 'control', 'voltage', 'source', 'inverter', 'spwm', 'modulation', 'filter', 'produce', 'sine', 'wave', 'output', 'thd', 'less', 'step', 'converterlc', 'filteroff', 'grid', 'inverterpush', 'pull', 'source', 'inverter']",3
2518,73127,"MATLAB-Simulink model of IEEE 33 Bus System (Baran and Wu, 1989)<p>Complete model of the IEEE 33 Bus System (Baran and Wu, 1989) for various power system studies- This model is designed with simplicity and user-friendliness in mind and serves as a generic model to facilitate customization for more specific studies* NOTES *  - Values of bus load and branch impedance are acquired from the MATPOWER (Version 7.0) case data.- Every branch is equipped with a circuit breaker to enable reconfiguration of the system- Kindly read the attached readme file for simple instructions - For simple simulations, please use the simple model- For more comprehensive control, please use the comprehensive model, which is complemented with the MATLAB m file. * FEATURES OF THE COMPREHENSIVE MODEL *- The model receives inputs of the circuit breaker status and outputs the voltage and current measurements at every branch- Model simulation can be performed in two ways to promote flexibility of use--&gt; Method 1: Run in Simulink, by manually setting the circuit breaker status (recommended for simpler ""single-run"" studies)--&gt; Method 2: Run via the attached MATLAB script (provides more comprehensive control and data processing for the model, allows the simulation to be automated)Kindly comment below if you have any suggestions for improving the model!</p>distribution systems,ieee 33 bus,matpower,network reconfiguration,power system analysis,power systems,simulink",1343,130,3,0,1786,iee bus baran complete iee bus baran various power study design simplicity user friendliness mind serve generic facilitate customization specific study note value bus load branch impedance acquire matpower version case data every branch equip circuit breaker enable reconfiguration kindly read attached readme file simple instruction simple please simple comprehensive control please comprehensive complement file feature comprehensive receives input circuit breaker status output voltage current measurement every branch perform two way promote flexibility method run manually set circuit breaker status recommend simpler single run study method run via attached script provide comprehensive control data processing allows automate kindly comment suggestion improve distribution systemsiee analysispower,"['iee', 'bus', 'baran', 'complete', 'iee', 'bus', 'baran', 'various', 'power', 'study', 'design', 'simplicity', 'user', 'friendliness', 'mind', 'serve', 'generic', 'facilitate', 'customization', 'specific', 'study', 'note', 'value', 'bus', 'load', 'branch', 'impedance', 'acquire', 'matpower', 'version', 'case', 'data', 'every', 'branch', 'equip', 'circuit', 'breaker', 'enable', 'reconfiguration', 'kindly', 'read', 'attached', 'readme', 'file', 'simple', 'instruction', 'simple', 'please', 'simple', 'comprehensive', 'control', 'please', 'comprehensive', 'complement', 'file', 'feature', 'comprehensive', 'receives', 'input', 'circuit', 'breaker', 'status', 'output', 'voltage', 'current', 'measurement', 'every', 'branch', 'perform', 'two', 'way', 'promote', 'flexibility', 'method', 'run', 'manually', 'set', 'circuit', 'breaker', 'status', 'recommend', 'simpler', 'single', 'run', 'study', 'method', 'run', 'via', 'attached', 'script', 'provide', 'comprehensive', 'control', 'data', 'processing', 'allows', 'automate', 'kindly', 'comment', 'suggestion', 'improve', 'distribution', 'systemsiee', 'analysispower']",0
2519,73132,"A boost converter is a DC/DC power converter which steps up voltage from its input (source) to its output (load). In continuous conduction m<p>A boost converter is a DC/DC power converter which steps up voltage from its input (source) to its output (load). In continuous conduction mode (current through the inductor never falls to zero), the theoretical transfer function of the boost converter is:where is the duty cycle.0.5In this example, the converter is feeding an RC load from a 250 V source and the PWM frequency is set to 31 kHz.SimulationRun the simulation and observe waveforms on Scope. Verify that the mean value of the load voltage (Vout) is very close to the theoretical value of: Vout = 250 / (1 - 0.5) = 500 V.</p>power electronics,power_conversion_control,power_electronics_control",12,0,1,0,15,boost converter power converter step voltage input source output load continuous conduction boost converter power converter step voltage input source output load continuous conduction mode current inductor never fall zero theoretical transfer function boost converter duty cycle example converter feed load source pwm frequency set khz observe waveform scope verify mean value load voltage vout close theoretical value vout power conversion controlpower electronics control,"['boost', 'converter', 'power', 'converter', 'step', 'voltage', 'input', 'source', 'output', 'load', 'continuous', 'conduction', 'boost', 'converter', 'power', 'converter', 'step', 'voltage', 'input', 'source', 'output', 'load', 'continuous', 'conduction', 'mode', 'current', 'inductor', 'never', 'fall', 'zero', 'theoretical', 'transfer', 'function', 'boost', 'converter', 'duty', 'cycle', 'example', 'converter', 'feed', 'load', 'source', 'pwm', 'frequency', 'set', 'khz', 'observe', 'waveform', 'scope', 'verify', 'mean', 'value', 'load', 'voltage', 'vout', 'close', 'theoretical', 'value', 'vout', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2520,73133,"Boost Converter is a converter which converts variable DC voltage to required DC voltage. <p>Boost Converter is a converter which converts variable DC voltage to required DC voltage. Boost converter is used to get DC output voltage greater than input voltage. Closed loop control is a process by which the output voltage is maintained constantly by obtaining the feedback of the loop.Closed loop control of Boost Converter is used to obtain a constant DC output voltage. The switching frequency and duty cycle decides the output voltage. In the closed loop process the output voltage is compared with a set voltage and the error value is reduced by controlling the switching pulse. The basic operation is if the error value is positive the duty cycle is reduced and if the error value is negative the duty cycle is increased by continuing the process continuously the output voltage is maintained constant.The output voltage is controlled with the help of a switching frequency applied to the switching device.</p>power electronics,power_conversion_control,power_electronics_control",14,0,1,0,16,boost converter converter convert variable voltage require voltage boost converter converter convert variable voltage require voltage boost converter get output voltage great input voltage close loop control process output voltage maintain constantly obtain feedback loop close loop control boost converter obtain constant output voltage switch frequency duty cycle decide output voltage close loop process output voltage compare set voltage error value reduce control switch pulse basic operation error value positive duty cycle reduce error value negative duty cycle increase continue process continuously output voltage maintain constant output voltage control help switching frequency apply switch device power conversion controlpower electronics control,"['boost', 'converter', 'converter', 'convert', 'variable', 'voltage', 'require', 'voltage', 'boost', 'converter', 'converter', 'convert', 'variable', 'voltage', 'require', 'voltage', 'boost', 'converter', 'get', 'output', 'voltage', 'great', 'input', 'voltage', 'close', 'loop', 'control', 'process', 'output', 'voltage', 'maintain', 'constantly', 'obtain', 'feedback', 'loop', 'close', 'loop', 'control', 'boost', 'converter', 'obtain', 'constant', 'output', 'voltage', 'switch', 'frequency', 'duty', 'cycle', 'decide', 'output', 'voltage', 'close', 'loop', 'process', 'output', 'voltage', 'compare', 'set', 'voltage', 'error', 'value', 'reduce', 'control', 'switch', 'pulse', 'basic', 'operation', 'error', 'value', 'positive', 'duty', 'cycle', 'reduce', 'error', 'value', 'negative', 'duty', 'cycle', 'increase', 'continue', 'process', 'continuously', 'output', 'voltage', 'maintain', 'constant', 'output', 'voltage', 'control', 'help', 'switching', 'frequency', 'apply', 'switch', 'device', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2521,73139,"Online optimization of energy storage actions in a microgrid given system constraints and pricing<p>Energy management systems (EMS) help to optimize the usages of distributed energy resources (DERs) in microgrids, particularly when variable pricing and generation are involved. This example walks through the process of developing an optimization routine that uses forecast pricing and loading conditions to optimally store/sell energy from a grid-scale battery system. Two approaches are demonstrated: a heuristic state machine strategy and the linear program-based optimization approach.The main example uses a full microgrid simulation for validation of the EMS optimization algorithm. However, there is a purely MATLAB/Optimization Toolbox example that shows the formulation of the optimization without the validation study.</p>microgrid,optimization,power,renewables,simulation",274,20,4,0,282,online optimization energy storage action microgrid give constraint pricingenergy management ems help optimize usage distribute energy resource ders microgrids particularly variable pricing generation involve example walk process develop optimization routine forecast price load condition optimally store sell energy grid scale battery two approach demonstrate heuristic state machine strategy linear program base optimization approach main example full microgrid validation ems optimization algorithm however purely optimization toolbox example show formulation optimization without validation study,"['online', 'optimization', 'energy', 'storage', 'action', 'microgrid', 'give', 'constraint', 'pricingenergy', 'management', 'ems', 'help', 'optimize', 'usage', 'distribute', 'energy', 'resource', 'ders', 'microgrids', 'particularly', 'variable', 'pricing', 'generation', 'involve', 'example', 'walk', 'process', 'develop', 'optimization', 'routine', 'forecast', 'price', 'load', 'condition', 'optimally', 'store', 'sell', 'energy', 'grid', 'scale', 'battery', 'two', 'approach', 'demonstrate', 'heuristic', 'state', 'machine', 'strategy', 'linear', 'program', 'base', 'optimization', 'approach', 'main', 'example', 'full', 'microgrid', 'validation', 'ems', 'optimization', 'algorithm', 'however', 'purely', 'optimization', 'toolbox', 'example', 'show', 'formulation', 'optimization', 'without', 'validation', 'study']",0
2522,73151,"Five level H-Bridge inverter <p>Five level H-Bridge inverter </p>power electronics,power_conversion_control,power_electronics_control",30,0,1,0,46,five level bridge inverter five level bridge inverter power conversion controlpower electronics control,"['five', 'level', 'bridge', 'inverter', 'five', 'level', 'bridge', 'inverter', 'power', 'conversion', 'controlpower', 'electronics', 'control']",6
2523,73158,Push Pull using Simscape Specialized Technology Library<p>Push Pull using Simscape Specialized Technology Library</p>,34,2,3,0,40,push pull simscape specialize technology librarypush pull simscape specialize technology,"['push', 'pull', 'simscape', 'specialize', 'technology', 'librarypush', 'pull', 'simscape', 'specialize', 'technology']",5
2524,73161,"A accurate model  to calculate acceleration and many other parameters of a Tesla Model S P100D, such as any other car<p>This model  calculate the accerleration, distance, car speed, time, force, tire slip and resistance of a Tesla Model S P100D. And by changing of the input Parameters for any other car. include: ire slip chart, rolling resistance chart, engine torque chart, moment of intertia, car pitch, static transmission efficiencynot include, perhaps in the next version:dynamic transmission efficiency, loaded tire radius, rolling friction coefficient as function of loaded tire, tire slip controling over a fuzzy controller, real model of a ism/ipmsm or ic engine.Guide:- first, load the tesla.m database with parameter charts, then the Simulink model.- under set distance meters, mean the distance limit --&gt; Quarter Mile etc.- under upper and lower limit end of velocity, mean the limit of a speed barrier --&gt; 0 -60 mph etc.- under set 0 distance you can switching the limit as distance or speed barrier. Set 0 to distance and 1 for speed barrier.All Units are Si, have fun. </p>car acceleration,electric car acceleration,model s,tesla",348,14,2,0,384,accurate calculate acceleration many parameter tesla carthis calculate accerleration distance car speed time force tire slip resistance tesla change input parameter car include ire slip chart roll resistance chart engine torque chart moment intertia car pitch static transmission efficiencynot include perhaps next version dynamic transmission efficiency load tire radius roll friction coefficient function load tire tire slip control fuzzy controller real ism ipmsm engine guide first load tesla database parameter chart set distance meter mean distance limit quarter mile etc upper low limit end velocity mean limit speed barrier mph etc set distance switch limit distance speed barrier set distance speed barrier unit fun car car stesla,"['accurate', 'calculate', 'acceleration', 'many', 'parameter', 'tesla', 'carthis', 'calculate', 'accerleration', 'distance', 'car', 'speed', 'time', 'force', 'tire', 'slip', 'resistance', 'tesla', 'change', 'input', 'parameter', 'car', 'include', 'ire', 'slip', 'chart', 'roll', 'resistance', 'chart', 'engine', 'torque', 'chart', 'moment', 'intertia', 'car', 'pitch', 'static', 'transmission', 'efficiencynot', 'include', 'perhaps', 'next', 'version', 'dynamic', 'transmission', 'efficiency', 'load', 'tire', 'radius', 'roll', 'friction', 'coefficient', 'function', 'load', 'tire', 'tire', 'slip', 'control', 'fuzzy', 'controller', 'real', 'ism', 'ipmsm', 'engine', 'guide', 'first', 'load', 'tesla', 'database', 'parameter', 'chart', 'set', 'distance', 'meter', 'mean', 'distance', 'limit', 'quarter', 'mile', 'etc', 'upper', 'low', 'limit', 'end', 'velocity', 'mean', 'limit', 'speed', 'barrier', 'mph', 'etc', 'set', 'distance', 'switch', 'limit', 'distance', 'speed', 'barrier', 'set', 'distance', 'speed', 'barrier', 'unit', 'fun', 'car', 'car', 'stesla']",5
2525,73164,"The concept of multilevel Inverter (MLI) is kind of modification of two-level inverter.<p>A two-level Inverter creates two different voltages for the load i.e. suppose we are providing Vdc as an input to a two level inverter then it will provide + Vdc/2 and â Vdc/2 on output. In order to build an AC voltage, these two newly generated voltages are usually switched. For switching mostly PWM is used  reference wave is shown in dashed blue line. Although this method of creating AC is effective but it has few drawbacks as it creates harmonic distortions in the output voltage and also has a high dv/dt as compared to that of a multilevel inverter. Normally this method works but in few applications it creates problems particularly those where low distortion in the output voltage is required.</p>power electronics,power_conversion_control,power_electronics_control",165,8,4,0,183,concept multilevel inverter mli kind modification two level inverter two level inverter create two different voltage load suppose provide vdc input two level inverter provide vdc vdc output order build voltage two newly generate voltage usually switch switch mostly pwm reference wave show dashed blue line although method create effective drawback create harmonic distortion output voltage also high compare multilevel inverter normally method work application creates problem particularly low distortion output voltage require power conversion controlpower electronics control,"['concept', 'multilevel', 'inverter', 'mli', 'kind', 'modification', 'two', 'level', 'inverter', 'two', 'level', 'inverter', 'create', 'two', 'different', 'voltage', 'load', 'suppose', 'provide', 'vdc', 'input', 'two', 'level', 'inverter', 'provide', 'vdc', 'vdc', 'output', 'order', 'build', 'voltage', 'two', 'newly', 'generate', 'voltage', 'usually', 'switch', 'switch', 'mostly', 'pwm', 'reference', 'wave', 'show', 'dashed', 'blue', 'line', 'although', 'method', 'create', 'effective', 'drawback', 'create', 'harmonic', 'distortion', 'output', 'voltage', 'also', 'high', 'compare', 'multilevel', 'inverter', 'normally', 'method', 'work', 'application', 'creates', 'problem', 'particularly', 'low', 'distortion', 'output', 'voltage', 'require', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2526,73165,"An inverter, also named as power inverter, is an electrical power device which is used to convert direct current (DC) into a.c<p>This inverter uses several H-bridge inverters connected in series to provide a sinusoidal output voltage. Each cell contains one H-bridge and the output voltage generated by this multilevel inverter is actually the sum of all the voltages generated by each cell i.e. if there are k cells in a H-bridge multilevel inverter then number of output voltage levels will be 2k+1. This type of inverter has advantage over the other two as it requires less number of components as compared to the other two types of inverters and so its overall weight and price is also less a k level cascaded H-bridge inverter.</p>power electronics,power_conversion_control,power_electronics_control",162,8,4,0,178,inverter also name power inverter electrical power device convert direct current cthis inverter several bridge inverter connect series provide sinusoidal output voltage cell contain one bridge output voltage generate multilevel inverter actually sum voltage generate cell cell bridge multilevel inverter number output voltage level type inverter advantage two require less number component compare two type inverter overall weight price also less level cascade bridge inverter power conversion controlpower electronics control,"['inverter', 'also', 'name', 'power', 'inverter', 'electrical', 'power', 'device', 'convert', 'direct', 'current', 'cthis', 'inverter', 'several', 'bridge', 'inverter', 'connect', 'series', 'provide', 'sinusoidal', 'output', 'voltage', 'cell', 'contain', 'one', 'bridge', 'output', 'voltage', 'generate', 'multilevel', 'inverter', 'actually', 'sum', 'voltage', 'generate', 'cell', 'cell', 'bridge', 'multilevel', 'inverter', 'number', 'output', 'voltage', 'level', 'type', 'inverter', 'advantage', 'two', 'require', 'less', 'number', 'component', 'compare', 'two', 'type', 'inverter', 'overall', 'weight', 'price', 'also', 'less', 'level', 'cascade', 'bridge', 'inverter', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2527,73196,"To control speed of Induction Motor Drive FOC is one of the method.<p>Â Which is inspired from DC motor to have indirect torque and flux control by controlling the q component of current for torque and d component of current for flux.</p>ac drives,foc,inucton motor drive,power electronics,speed control",179,8,3,0,233,control speed induction motor drive foc one method inspire motor indirect torque flux control control component current torque component current flux motor drivepower control,"['control', 'speed', 'induction', 'motor', 'drive', 'foc', 'one', 'method', 'inspire', 'motor', 'indirect', 'torque', 'flux', 'control', 'control', 'component', 'current', 'torque', 'component', 'current', 'flux', 'motor', 'drivepower', 'control']",1
2528,73197,"MPCC uses Predictive Current equation of IM.<p>MPCC is similar to FOC but instead of SVM prediction algorithm of currents used. Prediction equation is obtained by discretising the Induction Motor equations. But in this  model weighting factors are not included hence distortions in currents were more it may be improved by adding weighing factor or best prediction equation. Inverter Model used is 3 level NPC.</p>ac drives,foc,induction motor,mpcc,power electronics",80,2,2,0,111,mpcc predictive current equation mpcc similar foc instead svm prediction algorithm current prediction equation obtain discretising induction motor equation weight factor include hence distortion current may improve add weigh factor best prediction equation inverter level npc motormpccpower electronics,"['mpcc', 'predictive', 'current', 'equation', 'mpcc', 'similar', 'foc', 'instead', 'svm', 'prediction', 'algorithm', 'current', 'prediction', 'equation', 'obtain', 'discretising', 'induction', 'motor', 'equation', 'weight', 'factor', 'include', 'hence', 'distortion', 'current', 'may', 'improve', 'add', 'weigh', 'factor', 'best', 'prediction', 'equation', 'inverter', 'level', 'npc', 'motormpccpower', 'electronics']",4
2529,73198,"MPTFC is inspired from MPCC and DTC structures.<p>MPTFC aim to employ DTC phenomenon into MPCC structure. Which includes Torque and flux prediction equations separately and provides one optimized switching state. But there is difficulty in selecting coordinated weighing factors for torque and flux. Which need to be improved. Inverter used was 3level NPC structure.</p>dtc,induction motor,model predictive,mptfc",69,1,2,0,100,mptfc inspire mpcc dtc structure mptfc aim employ dtc phenomenon mpcc structure include torque flux prediction equation separately provide one optimize switch state difficulty select coordinate weigh factor torque flux need improve inverter level npc structure dtcinduction motormodel predictivemptfc,"['mptfc', 'inspire', 'mpcc', 'dtc', 'structure', 'mptfc', 'aim', 'employ', 'dtc', 'phenomenon', 'mpcc', 'structure', 'include', 'torque', 'flux', 'prediction', 'equation', 'separately', 'provide', 'one', 'optimize', 'switch', 'state', 'difficulty', 'select', 'coordinate', 'weigh', 'factor', 'torque', 'flux', 'need', 'improve', 'inverter', 'level', 'npc', 'structure', 'dtcinduction', 'motormodel', 'predictivemptfc']",5
2530,73199,"Open Loop Performance of Induction Motor analysed which is fed with 3 level NPC Inverter with Space Vector Modulation.<p>PU Model of Induction Motor Considered which is fed with 3 level Neutral Point clamped Inverter with Space Vector Modulation Technique.</p>3 level,ac drives,induction motor,npc,oen loop,svm",121,2,3,0,172,open loop performance induction motor analyse feed level npc inverter space vector modulation induction motor consider fed level neutral point clamp inverter space vector modulation technique levelac drivesinduction motornpcoen loopsvm,"['open', 'loop', 'performance', 'induction', 'motor', 'analyse', 'feed', 'level', 'npc', 'inverter', 'space', 'vector', 'modulation', 'induction', 'motor', 'consider', 'fed', 'level', 'neutral', 'point', 'clamp', 'inverter', 'space', 'vector', 'modulation', 'technique', 'levelac', 'drivesinduction', 'motornpcoen', 'loopsvm']",3
2531,73203,"This dc to dc buck converter works in two states, one when switch is closed and second one when switch is opened.<p>This dc to dc buck converter works in two states, one when switch is closed and second one when switch is opened. When switch is in close state then diode becomes reverse biased then input source provides the energy to inductor as well as output load. Similarly, when switch is in open state then inductor becomes discharged through diode and transfers some of its stored energy to output load. Because the switch is open and close at high frequency therefore higher order of harmonic are generate which are filtered through low pass filter.For on or off the switch at high frequency PWM (pulse width modulation) technique is used. The duty cycle of this PWM is calculated by the formula,Where D is duty cycle, Vo is output voltage and Vin is input voltage.We can see that the output voltage is directly proportional to duty cycle D means which duty ratio is increased then output voltage is also increased as well as when duty cycle is decreased then output voltage is also decreased.In this MATLAB Simulink model, an ideal switch is used for regulating the 20V dc voltages in to 10V dc. The ideal switch is on or off through pulse generator which gives the 20V amplitude switching pulse of 20KHz frequency at 50% duty ratio which is gained by the duty ratio formula. The output of this converter is not pure dc it contains the high frequency harmonic content which are removed through low pass filter. In this model 1mH inductor and 10Î¼F capacitor has been used such as low pass filter.10-ohm resistor has been used such as an output load. When this model is simulated in MATLAB then we can see that it shows 9.562 output voltage and .8292 inductor current. Which are showed in below simulation results.</p>power electronics,power_conversion_control,power_electronics_control",11,0,1,0,15,buck converter work two state one switch close second one switch open buck converter work two state one switch close second one switch open switch close state diode become reverse bias input source provide energy inductor well output load similarly switch open state inductor becomes discharge diode transfer store energy output load switch open close high frequency therefore high order harmonic generate filter low pas filter switch high frequency pwm pulse width modulation technique duty cycle pwm calculate formulawhere duty cycle output voltage vin input voltage see output voltage directly proportional duty cycle mean duty ratio increase output voltage also increase well duty cycle decrease output voltage also decrease ideal switch regulating voltage ideal switch pulse generator give amplitude switch pulse khz frequency duty ratio gain duty ratio formula output converter pure contain high frequency harmonic content remove low pas filter inductor capacitor low pas filter ohm resistor output load see show output voltage inductor current show result power conversion controlpower electronics control,"['buck', 'converter', 'work', 'two', 'state', 'one', 'switch', 'close', 'second', 'one', 'switch', 'open', 'buck', 'converter', 'work', 'two', 'state', 'one', 'switch', 'close', 'second', 'one', 'switch', 'open', 'switch', 'close', 'state', 'diode', 'become', 'reverse', 'bias', 'input', 'source', 'provide', 'energy', 'inductor', 'well', 'output', 'load', 'similarly', 'switch', 'open', 'state', 'inductor', 'becomes', 'discharge', 'diode', 'transfer', 'store', 'energy', 'output', 'load', 'switch', 'open', 'close', 'high', 'frequency', 'therefore', 'high', 'order', 'harmonic', 'generate', 'filter', 'low', 'pas', 'filter', 'switch', 'high', 'frequency', 'pwm', 'pulse', 'width', 'modulation', 'technique', 'duty', 'cycle', 'pwm', 'calculate', 'formulawhere', 'duty', 'cycle', 'output', 'voltage', 'vin', 'input', 'voltage', 'see', 'output', 'voltage', 'directly', 'proportional', 'duty', 'cycle', 'mean', 'duty', 'ratio', 'increase', 'output', 'voltage', 'also', 'increase', 'well', 'duty', 'cycle', 'decrease', 'output', 'voltage', 'also', 'decrease', 'ideal', 'switch', 'regulating', 'voltage', 'ideal', 'switch', 'pulse', 'generator', 'give', 'amplitude', 'switch', 'pulse', 'khz', 'frequency', 'duty', 'ratio', 'gain', 'duty', 'ratio', 'formula', 'output', 'converter', 'pure', 'contain', 'high', 'frequency', 'harmonic', 'content', 'remove', 'low', 'pas', 'filter', 'inductor', 'capacitor', 'low', 'pas', 'filter', 'ohm', 'resistor', 'output', 'load', 'see', 'show', 'output', 'voltage', 'inductor', 'current', 'show', 'result', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2532,73204,Single Phase Full Wave AC to DC converter using BidirectionalSwitches<p>In this simulation we can  use bidirectional switches to and convert AC into DC respectively. The switches mainly used are the Core switches of Power Electronics.</p>,17,0,1,0,28,single phase full wave converter bidirectional switch convert respectively switch mainly core switch power electronics,"['single', 'phase', 'full', 'wave', 'converter', 'bidirectional', 'switch', 'convert', 'respectively', 'switch', 'mainly', 'core', 'switch', 'power', 'electronics']",1
2533,73210,"Matlab simulation on ""Single phase fully controlled fed DC drive.<p>Silicon Controlled Rectifier (SCR) may be used as a controlled half wave rectifier unlike normal half wave rectifier. Figure 1 gives the basic circuit of Half Wave Controlled Rectifier using SCR. The AC voltage to be rectified is applied to the input of the power transformer. The voltage across the secondary winding feeds the anode to cathode circuit of an SCR through a load resistor RL. A dc voltage source drives a current through the gate of the SCR through a variable resistor R. The resistor R controls the gate current and thereby controls the rectified output dc voltage.</p>power electronics,power_conversion_control,power_electronics_control",18,0,1,0,24,single phase fully control fed drive silicon control rectifier scr may control half wave rectifier unlike normal half wave rectifier figure give basic circuit half wave control rectifier scr voltage rectify apply input power transformer voltage across secondary winding feed anode cathode circuit scr load resistor voltage source drive current gate scr variable resistor resistor control gate current thereby control rectify output voltage power conversion controlpower electronics control,"['single', 'phase', 'fully', 'control', 'fed', 'drive', 'silicon', 'control', 'rectifier', 'scr', 'may', 'control', 'half', 'wave', 'rectifier', 'unlike', 'normal', 'half', 'wave', 'rectifier', 'figure', 'give', 'basic', 'circuit', 'half', 'wave', 'control', 'rectifier', 'scr', 'voltage', 'rectify', 'apply', 'input', 'power', 'transformer', 'voltage', 'across', 'secondary', 'winding', 'feed', 'anode', 'cathode', 'circuit', 'scr', 'load', 'resistor', 'voltage', 'source', 'drive', 'current', 'gate', 'scr', 'variable', 'resistor', 'resistor', 'control', 'gate', 'current', 'thereby', 'control', 'rectify', 'output', 'voltage', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2534,73226,"close loop control<p>close loop controle.saleh saeid bohligae.mail <a href=""mailto:zwuitina@yahoo.com"">zwuitina@yahoo.com</a></p>",20,0,1,0,21,close loop controlclose loop controle saleh bohligae mail zwuitina yahoo com,"['close', 'loop', 'controlclose', 'loop', 'controle', 'saleh', 'bohligae', 'mail', 'zwuitina', 'yahoo', 'com']",5
2535,73229,"Three phase grid connected PV system of rating 33kW is simulated under linear and non-linear load conditions with Power Quality improvement.<p>33kW, Rating of PV system is simulated in MATLAB 2018a, PV system is deliver power to the grid as well as  loads.  </p>photo voltaic energy,power electronics,power electronics converter control",250,9,2,0,253,three phase grid connect rating linear non linear load condition power quality improvement rating deliver power grid well load photo voltaic energypower electronics converter control,"['three', 'phase', 'grid', 'connect', 'rating', 'linear', 'non', 'linear', 'load', 'condition', 'power', 'quality', 'improvement', 'rating', 'deliver', 'power', 'grid', 'well', 'load', 'photo', 'voltaic', 'energypower', 'electronics', 'converter', 'control']",3
2536,73243,"Brush less exciter with PSS 2A<p>Brush less exciter with PSS 2Ae.saleh saeid bohligae.mail <a href=""mailto:zwuitina@yahoo.com"">zwuitina@yahoo.com</a></p>",84,4,2,0,92,brush exciter abrush exciter saleh bohligae mail zwuitina yahoo com,"['brush', 'exciter', 'abrush', 'exciter', 'saleh', 'bohligae', 'mail', 'zwuitina', 'yahoo', 'com']",8
2537,73257,"Models for the solar panel example shown in the ""Getting Started with Simulink for Controls"" video<p>Explore the models created in the ""Getting Started with Simulink for Controls"" video. <a href=""https://www.mathworks.com/videos/getting-started-with-simulink-69027.htmlâ¢"">https://www.mathworks.com/videos/getting-started-with-simulink-69027.htmlâ¢</a> model1_panel.slx  - Model of the solar panelâ¢ model2_panelMotor.slx  - Model of the solar panel and motorâ¢ model3_control.slx  - Model of the solar panel, motor, and controllerâ¢ model4_data.slx  - Model of the solar panel system configured to track sun position dataâ¢ model5_power.slx  - Model of the solar panel system and calculating generated powerAll models were created and saved in R2019b. If you are using an earlier release, do the following before opening any models:(1)  Click Preferences in the Home tab of the MATLAB toolstrip.(2)  In the Preferences dialog, select the Simulink pane and then click Open Simulink Preferences.(3)  In the Simulink Preferences dialog, select the Model File pane.(4)  Clear the ""Do not load models created with a newer version of Simulink"" option.</p>demo,example,getting started,model,simulink,tutorial",113,8,2,0,120,solar panel example show get start control videoexplore create get start control video mathworks com video get start html panel slx solar panel panelmotor slx solar panel motor control slx solar panel motor controller data slx solar panel configure track sun position data power slx solar panel calculate generate powerall create save early release follow opening click preference home tab toolstrip preference dialog select pane click open preference preference dialog select file pane clear load create new version option,"['solar', 'panel', 'example', 'show', 'get', 'start', 'control', 'videoexplore', 'create', 'get', 'start', 'control', 'video', 'mathworks', 'com', 'video', 'get', 'start', 'html', 'panel', 'slx', 'solar', 'panel', 'panelmotor', 'slx', 'solar', 'panel', 'motor', 'control', 'slx', 'solar', 'panel', 'motor', 'controller', 'data', 'slx', 'solar', 'panel', 'configure', 'track', 'sun', 'position', 'data', 'power', 'slx', 'solar', 'panel', 'calculate', 'generate', 'powerall', 'create', 'save', 'early', 'release', 'follow', 'opening', 'click', 'preference', 'home', 'tab', 'toolstrip', 'preference', 'dialog', 'select', 'pane', 'click', 'open', 'preference', 'preference', 'dialog', 'select', 'file', 'pane', 'clear', 'load', 'create', 'new', 'version', 'option']",0
2538,73284,"X-Y Plotter with Animation and Reference Curve<p>Plot X-Y. Similar to XY Graph in Simulink/Sink.But, the animation can be controlled to easily see the movement of the graph.The reference plot is also added to easily detect the accuracy of the plot</p>i-v,meter,mppt,p-v,pso",11,2,2,0,9,plotter animation reference curveplot similar graph sink animation control easily see movement graph reference plot also add easily detect accuracy ploti vmetermpptp vpso,"['plotter', 'animation', 'reference', 'curveplot', 'similar', 'graph', 'sink', 'animation', 'control', 'easily', 'see', 'movement', 'graph', 'reference', 'plot', 'also', 'add', 'easily', 'detect', 'accuracy', 'ploti', 'vmetermpptp', 'vpso']",5
2539,73318,"Particle Swarm Optimization Maximum Power Point Tracking Boost Converter<p>PV module requires MPPT converter to obtain maximum power. However, during partial shading, it is harder to obtain the maximum power due to multiple maximum power points. The PSO is useful in order to obtain the global maximum power point. Note that the PSO use is the basic and requires a lot of perturbation to obtain the global maximum power point. </p>microgrid,partial shading,photovoltaic,power electronic,pv,renewable energy",41,4,3,0,54,particle swarm optimization maximum power point track boost converterpv module require mppt converter obtain maximum power however partial shade harder obtain maximum power due multiple maximum power point pso useful order obtain global maximum power point note pso basic require lot perturbation obtain global maximum power point energy,"['particle', 'swarm', 'optimization', 'maximum', 'power', 'point', 'track', 'boost', 'converterpv', 'module', 'require', 'mppt', 'converter', 'obtain', 'maximum', 'power', 'however', 'partial', 'shade', 'harder', 'obtain', 'maximum', 'power', 'due', 'multiple', 'maximum', 'power', 'point', 'pso', 'useful', 'order', 'obtain', 'global', 'maximum', 'power', 'point', 'note', 'pso', 'basic', 'require', 'lot', 'perturbation', 'obtain', 'global', 'maximum', 'power', 'point', 'energy']",4
2540,73322,"IGBT 1 and 2 and inverse of this gate pulse is for IGBT 3 and 4.<p>pulse generator block in MATLAB. The period is 2e-3 means 20 msec. If you need 60Hz frequency output, then period will be 16.67 msec. The pulse width is in terms of percentage of period. It means that, the gate pulse is generated for this area only. In this case, we set this at 50%, it means 50% period gate pulse is generated and 50% period gate pulse is not generated. The phase delay is set 0 sec, means we are not giving any delay to the gate pulse. If there is any phase delay, it means gate pulse will be generated after this time. For example, if phase delay is 1e-3 then gate pulse will be generated after 10msec.</p>power electronics,power_conversion_control,power_electronics_control",15,0,1,0,22,igbt inverse gate pulse igbt pulse generator block period mean msec need frequency output period msec pulse width term percentage period mean gate pulse generate area case set mean period gate pulse generate period gate pulse generate phase delay set sec mean give delay gate pulse phase delay mean gate pulse generate time example phase delay gate pulse generate msec power conversion controlpower electronics control,"['igbt', 'inverse', 'gate', 'pulse', 'igbt', 'pulse', 'generator', 'block', 'period', 'mean', 'msec', 'need', 'frequency', 'output', 'period', 'msec', 'pulse', 'width', 'term', 'percentage', 'period', 'mean', 'gate', 'pulse', 'generate', 'area', 'case', 'set', 'mean', 'period', 'gate', 'pulse', 'generate', 'period', 'gate', 'pulse', 'generate', 'phase', 'delay', 'set', 'sec', 'mean', 'give', 'delay', 'gate', 'pulse', 'phase', 'delay', 'mean', 'gate', 'pulse', 'generate', 'time', 'example', 'phase', 'delay', 'gate', 'pulse', 'generate', 'msec', 'power', 'conversion', 'controlpower', 'electronics', 'control']",4
2541,73379,"This type of Inverter requires two power electronics switches (MOSFET). The MOSFET or IGBT is used for switching purpose<p>According to output frequency, ON time and OFF time of MOSFET is decided and gate pulses are generated. We need 50Hz AC power, so the time period of one cycle (0 &lt; t &lt; 2Ï) is 20msec. As shown in the diagram, MOSFET-1 is triggered for first half cycle (0 &lt; t &lt; Ï) and during this time period MOSFET-2 is not triggered. In this time period, current will flow in the direction of arrow as shown in below figure and half cycle of AC output is completed. The current from the load is right to left and load voltage is equal to +Vdc/2.In second half cycle (Ï &lt; t &lt; 2Ï), the MOSFET-2 is triggered and lower voltage source is connected with the load. The current from the load is left to right direction and load voltage is equal to -Vdc/2. In this time period, current will flow as shown in figure and the other half cycle of AC output is completed.</p>power electronics,power_conversion_control,power_electronics_control",11,0,1,0,14,type inverter require two power electronics switch mosfet mosfet igbt switch output frequency time time mosfet decide gate pulse generate need power time period one cycle msec show diagram mosfet trigger first half cycle time period mosfet trigger time period current flow direction arrow show figure half cycle output complete current load right leave load voltage equal vdc second half cycle mosfet trigger low voltage source connect load current load leave right direction load voltage equal vdc time period current flow show figure half cycle output complete power conversion controlpower electronics control,"['type', 'inverter', 'require', 'two', 'power', 'electronics', 'switch', 'mosfet', 'mosfet', 'igbt', 'switch', 'output', 'frequency', 'time', 'time', 'mosfet', 'decide', 'gate', 'pulse', 'generate', 'need', 'power', 'time', 'period', 'one', 'cycle', 'msec', 'show', 'diagram', 'mosfet', 'trigger', 'first', 'half', 'cycle', 'time', 'period', 'mosfet', 'trigger', 'time', 'period', 'current', 'flow', 'direction', 'arrow', 'show', 'figure', 'half', 'cycle', 'output', 'complete', 'current', 'load', 'right', 'leave', 'load', 'voltage', 'equal', 'vdc', 'second', 'half', 'cycle', 'mosfet', 'trigger', 'low', 'voltage', 'source', 'connect', 'load', 'current', 'load', 'leave', 'right', 'direction', 'load', 'voltage', 'equal', 'vdc', 'time', 'period', 'current', 'flow', 'show', 'figure', 'half', 'cycle', 'output', 'complete', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2542,73380,"The PV system is connected to Grid through Inverter which can act as MPPT of PV system in this model.<p>The PV system is connected to Grid through Inverter which can act as MPPT of PV system in this model. Hence it is called Single Stage Grid Connected PV System. For any service on Renewable Energy System, Drives, Converter based models please contact us through <a href=""mailto:priyasiva1222@gmail.com"">priyasiva1222@gmail.com</a></p>d q methode,grid,pv system,single stage",343,21,6,0,392,connect grid inverter act mppt connect grid inverter act mppt hence call single stage grid connect service renewable energy drive converter base please contact priyasiva gmail comd methodegridpv systemsingle stage,"['connect', 'grid', 'inverter', 'act', 'mppt', 'connect', 'grid', 'inverter', 'act', 'mppt', 'hence', 'call', 'single', 'stage', 'grid', 'connect', 'service', 'renewable', 'energy', 'drive', 'converter', 'base', 'please', 'contact', 'priyasiva', 'gmail', 'comd', 'methodegridpv', 'systemsingle', 'stage']",4
2543,73386,"3 level diode clamped inverter with SPWM<p>This is basic idea to modeling 3 phase 3 level diode clamped inverter. Please connect the dc link to midpoint capacitors. Give the 3 phase sinusoidal signals to ABC with maximum 1 magnitude. For study purpose, I used gain 3 while designing the SPWM pulse generator. You just replace your normal invert by this by simple giving the ABC signal from your controller. For any service on Renewable Energy System, Drives, Converter based models please contact us through <a href=""mailto:priyasiva1222@gmail.com"">priyasiva1222@gmail.com</a></p>inverter,multilevel,spwm,three level",143,14,5,0,149,level diode clamp inverter spwmthis basic idea phase level diode clamp inverter please connect link midpoint capacitor give phase sinusoidal signal abc maximum magnitude study purpose used gain design spwm pulse generator replace normal invert simple give abc signal controller service renewable energy drive converter base please contact priyasiva gmail level,"['level', 'diode', 'clamp', 'inverter', 'spwmthis', 'basic', 'idea', 'phase', 'level', 'diode', 'clamp', 'inverter', 'please', 'connect', 'link', 'midpoint', 'capacitor', 'give', 'phase', 'sinusoidal', 'signal', 'abc', 'maximum', 'magnitude', 'study', 'purpose', 'used', 'gain', 'design', 'spwm', 'pulse', 'generator', 'replace', 'normal', 'invert', 'simple', 'give', 'abc', 'signal', 'controller', 'service', 'renewable', 'energy', 'drive', 'converter', 'base', 'please', 'contact', 'priyasiva', 'gmail', 'level']",4
2544,73387,"FACTS Device used for countering the Ferranti effect...<p>Change the angle by changing the variable 'd' in the command window and observe the result.The TCR gives max output at d=0 and is disconnected at d=90the load is RC load of leading nature, To not experience Ferranti effect change the load to RC to RL / R</p>facts,power facot correction,tcr",78,0,1,0,73,fact device counter ferranti effect change angle change variable command window observe result tcr give max output disconnect load load leading nature experience ferranti effect change load rfactspower facot correctiontcr,"['fact', 'device', 'counter', 'ferranti', 'effect', 'change', 'angle', 'change', 'variable', 'command', 'window', 'observe', 'result', 'tcr', 'give', 'max', 'output', 'disconnect', 'load', 'load', 'leading', 'nature', 'experience', 'ferranti', 'effect', 'change', 'load', 'rfactspower', 'facot', 'correctiontcr']",4
2545,73414,"The Simulink model of A high-performance single-phase SFT-based PLL that gives outstanding performance is given<p>A high performance single-phase phase-locked loop using a sliding Fourier transform is proposed in this paper. The new PLL is using the sliding Fourier transform as a phase detector. The orthogonal signal is generated using a controlled transfer delay which is adjusted by the PLL estimated frequency. Feedback loops of the frequency and phase estimated by the PLL are used to drive the filters of the Fourier transform and to adjust the period of the transfer delay for implementing the sliding integrals.  Unlike the synchronous reference frame PLL, the proposed SFT-based PLL (SFT-PLL) is adaptive to frequency changes and provides better harmonics and DC offset rejection while maintaining a constant sampling frequency. Therefore, the proposed method lends itself to digital implementation in a simple and straightforward manner. These distinguishing features allow the SFT-PLL to be especially appropriate for interfacing weak single-phase micro-grids where high harmonic distortion and frequency variations are common characteristics. A Simulink file contains the method implementation and compares it with the second-order generalized integrator phase-locked loop (SOGI-PLL) to validate the effectiveness and advantages of the proposed method under changing grid conditions. It can be easily observed that the SFT-PLL offers superior performance in almost all testing scenarios. The implementations given here is based on a continuous-time Fourier transform where the integration of signals is used instead of accumulation. The discrete form can be easily implemented by replacing integrators with accumulators and by dividing by the number of samples instead of dividing on the periodic time for the averaging process of Fourier Transform. The discrete form is, of course, more efficient regarding the number of math operations and the use of calculations resources.The DSP implementation, however, needs special attention to deal with integrator/accumulator saturation issue. Saturation is a result of the limited capacity of numbers used by DSPs (workarounds can be advised by contacting the contributor)</p>",342,14,5,0,374,high performance single phase sft base pll give outstanding performance givena high performance single phase phase lock loop slide fourier transform propose paper new pll slide fourier transform phase detector orthogonal signal generate control transfer delay adjust pll estimate frequency feedback loop frequency phase estimate pll drive filter fourier transform adjust period transfer delay implement slide integral unlike synchronous reference frame pll propose sft base pll sft pll adaptive frequency change provide good harmonic offset rejection maintain constant sampling frequency therefore propose method lends digital implementation simple straightforward manner distinguish feature allow sft pll especially appropriate interfacing weak single phase micro grid high harmonic distortion frequency variation common characteristic file contains method implementation compare second order generalize integrator phase lock loop sogi pll validate effectiveness advantage propose method change grid condition easily observe sft pll offer superior performance almost test scenarios implementation give base continuous time fourier transform integration signal instead accumulation discrete form easily implement replace integrator accumulator divide number sample instead divide periodic time average process fourier transform discrete form course efficient regard number math operation calculation resource dsp implementation however need special attention deal integrator accumulator saturation issue saturation result limited capacity number dsps workarounds advise contact contributor,"['high', 'performance', 'single', 'phase', 'sft', 'base', 'pll', 'give', 'outstanding', 'performance', 'givena', 'high', 'performance', 'single', 'phase', 'phase', 'lock', 'loop', 'slide', 'fourier', 'transform', 'propose', 'paper', 'new', 'pll', 'slide', 'fourier', 'transform', 'phase', 'detector', 'orthogonal', 'signal', 'generate', 'control', 'transfer', 'delay', 'adjust', 'pll', 'estimate', 'frequency', 'feedback', 'loop', 'frequency', 'phase', 'estimate', 'pll', 'drive', 'filter', 'fourier', 'transform', 'adjust', 'period', 'transfer', 'delay', 'implement', 'slide', 'integral', 'unlike', 'synchronous', 'reference', 'frame', 'pll', 'propose', 'sft', 'base', 'pll', 'sft', 'pll', 'adaptive', 'frequency', 'change', 'provide', 'good', 'harmonic', 'offset', 'rejection', 'maintain', 'constant', 'sampling', 'frequency', 'therefore', 'propose', 'method', 'lends', 'digital', 'implementation', 'simple', 'straightforward', 'manner', 'distinguish', 'feature', 'allow', 'sft', 'pll', 'especially', 'appropriate', 'interfacing', 'weak', 'single', 'phase', 'micro', 'grid', 'high', 'harmonic', 'distortion', 'frequency', 'variation', 'common', 'characteristic', 'file', 'contains', 'method', 'implementation', 'compare', 'second', 'order', 'generalize', 'integrator', 'phase', 'lock', 'loop', 'sogi', 'pll', 'validate', 'effectiveness', 'advantage', 'propose', 'method', 'change', 'grid', 'condition', 'easily', 'observe', 'sft', 'pll', 'offer', 'superior', 'performance', 'almost', 'test', 'scenarios', 'implementation', 'give', 'base', 'continuous', 'time', 'fourier', 'transform', 'integration', 'signal', 'instead', 'accumulation', 'discrete', 'form', 'easily', 'implement', 'replace', 'integrator', 'accumulator', 'divide', 'number', 'sample', 'instead', 'divide', 'periodic', 'time', 'average', 'process', 'fourier', 'transform', 'discrete', 'form', 'course', 'efficient', 'regard', 'number', 'math', 'operation', 'calculation', 'resource', 'dsp', 'implementation', 'however', 'need', 'special', 'attention', 'deal', 'integrator', 'accumulator', 'saturation', 'issue', 'saturation', 'result', 'limited', 'capacity', 'number', 'dsps', 'workarounds', 'advise', 'contact', 'contributor']",4
2546,73415,"Frequency Adaptive Sliding Fourier Transform for Synchronizing VSCI to the Utility Grid<p>Sliding Discrete Fourier Transform (SDFT) is very efficient regarding computational load and possesses a very fast phase angle detection with excellent harmonic rejection at nominal frequency. However, at the off-nominal frequency, SDFT generates errors in both magnitude and phase angle due to spectral leakage. Also, its harmonic rejection is greatly impaired under such conditions. The attached block introduces a workaround for Fourier Transform (in sliding continuous SFT and sliding discrete SDFT flavors) to handle this disability under off-nominal frequency while avoiding variable-rate sampling. The method used to implement SFT is also combining the symmetrical component analysis technique to ensure that we get only the phase angle, magnitude and frequency of the positive sequence attributes. Sliding Fourier Transform (SFT) is used as a phase detector for a phase-locked loop whose output frequency is used to drive the SFT.   The model included compares the performance of the proposed SFT-PLL with that of the Decoupled Stationary Reference Frame PLL (dÎ±Î²PLL) which is one of the widely used techniques in industrial applications. Examining the results prove that SFT-PLL is superior to dÎ±Î²PLL. Hence, it can be effectively used in synchronizing VSI to weak and micro-grids particularly under sever unbalance, harmonic distortion and DC offset. The mathematics and the explanation of the block structure is given in :""Frequency-adaptive sliding Fourier transform for synchronizing VSI to the grid""International Journal of Power Electronics and Drive Systems 10(2):1034DOI: 10.11591/ijpeds.v10.i2.pp1034-1048</p>",1205,55,6,0,1381,frequency adaptive slide fourier transform synchronize vsci utility gridsliding discrete fourier transform sdft efficient regard computational load posse fast phase angle detection excellent harmonic rejection nominal frequency however nominal frequency sdft generate error magnitude phase angle due spectral leakage also harmonic rejection greatly impaired condition attach block introduces workaround fourier transform slide continuous sft slide discrete sdft flavor handle disability nominal frequency avoid variable rate sample method implement sft also combine symmetrical component analysis technique ensure get phase angle magnitude frequency positive sequence attribute slide fourier transform sft phase detector phase lock loop whose output frequency drive sft include compare performance propose sft pll decouple stationary reference frame pll dÎ±Î²pll one widely technique industrial application examine result prove sft pll superior dÎ±Î²pll hence effectively synchronize vsi weak micro grid particularly sever unbalance harmonic distortion offset mathematics explanation block structure give frequency adaptive slide fourier transform synchronize vsi grid international journal power electronics drive doi ijpeds,"['frequency', 'adaptive', 'slide', 'fourier', 'transform', 'synchronize', 'vsci', 'utility', 'gridsliding', 'discrete', 'fourier', 'transform', 'sdft', 'efficient', 'regard', 'computational', 'load', 'posse', 'fast', 'phase', 'angle', 'detection', 'excellent', 'harmonic', 'rejection', 'nominal', 'frequency', 'however', 'nominal', 'frequency', 'sdft', 'generate', 'error', 'magnitude', 'phase', 'angle', 'due', 'spectral', 'leakage', 'also', 'harmonic', 'rejection', 'greatly', 'impaired', 'condition', 'attach', 'block', 'introduces', 'workaround', 'fourier', 'transform', 'slide', 'continuous', 'sft', 'slide', 'discrete', 'sdft', 'flavor', 'handle', 'disability', 'nominal', 'frequency', 'avoid', 'variable', 'rate', 'sample', 'method', 'implement', 'sft', 'also', 'combine', 'symmetrical', 'component', 'analysis', 'technique', 'ensure', 'get', 'phase', 'angle', 'magnitude', 'frequency', 'positive', 'sequence', 'attribute', 'slide', 'fourier', 'transform', 'sft', 'phase', 'detector', 'phase', 'lock', 'loop', 'whose', 'output', 'frequency', 'drive', 'sft', 'include', 'compare', 'performance', 'propose', 'sft', 'pll', 'decouple', 'stationary', 'reference', 'frame', 'pll', 'dÎ±Î²pll', 'one', 'widely', 'technique', 'industrial', 'application', 'examine', 'result', 'prove', 'sft', 'pll', 'superior', 'dÎ±Î²pll', 'hence', 'effectively', 'synchronize', 'vsi', 'weak', 'micro', 'grid', 'particularly', 'sever', 'unbalance', 'harmonic', 'distortion', 'offset', 'mathematics', 'explanation', 'block', 'structure', 'give', 'frequency', 'adaptive', 'slide', 'fourier', 'transform', 'synchronize', 'vsi', 'grid', 'international', 'journal', 'power', 'electronics', 'drive', 'doi', 'ijpeds']",5
2547,73434,"This is a STPA (Systems Theoretic Process Analysis) tool using Simulink and Matlab.<p>STPA (<a href=""http://psas.scripts.mit.edu/home/get_file.php?name=STPA_handbook.pdf"">http://psas.scripts.mit.edu/home/get_file.php?name=STPA_handbook.pdf</a>) is a safety analysis method developed at MIT, Massachusetts. I have made a simple Simulink library and provide two Matlab files to analyze the model. The details of the method are available in the handbook. The library has blocks for controller, actuator, process, loses, hazards and control actions. The user can make a hierarchical control structure (HCS) using these building blocks. The Matlab files read the HCS and generate a report that can be used for further analysis. This is a preliminary work and suggestions are welcome for updates. I have named it MOOSE : Matlab Tool for STPA Evaluation.</p>analysis,matlab,safety,simulink,stpa",276,54,2,0,176,stpa theoretic process analysis tool stpa http psa script mit edu home get file php name stpa handbook pdf safety analysis method develop mit massachusetts make simple provide two file analyze detail method available handbook block controller actuator process lose hazard control action user make hierarchical control structure hcs building block file read hcs generate report analysis preliminary work suggestion welcome update name moose tool stpa evaluation,"['stpa', 'theoretic', 'process', 'analysis', 'tool', 'stpa', 'http', 'psa', 'script', 'mit', 'edu', 'home', 'get', 'file', 'php', 'name', 'stpa', 'handbook', 'pdf', 'safety', 'analysis', 'method', 'develop', 'mit', 'massachusetts', 'make', 'simple', 'provide', 'two', 'file', 'analyze', 'detail', 'method', 'available', 'handbook', 'block', 'controller', 'actuator', 'process', 'lose', 'hazard', 'control', 'action', 'user', 'make', 'hierarchical', 'control', 'structure', 'hcs', 'building', 'block', 'file', 'read', 'hcs', 'generate', 'report', 'analysis', 'preliminary', 'work', 'suggestion', 'welcome', 'update', 'name', 'moose', 'tool', 'stpa', 'evaluation']",0
2548,73446,"Red Green Blue Light Emitting Diode Sink<p>Red Green Blue Light Emitting Diode sinks or dashboard. Suitable for simulating the LED driver using buck converter, boost converter, flyback converter, forward converter, push-pull converter and other.</p>boost,buck,flyback,forward,led,led driver,push-pull,rgb,sinks",16,1,2,0,16,red green blue light emit diode sinkred green blue light emit diode sink dashboard suitable lead driver buck converter boost converter flyback converter forward converter push pull converter driverpush pullrgbsinks,"['red', 'green', 'blue', 'light', 'emit', 'diode', 'sinkred', 'green', 'blue', 'light', 'emit', 'diode', 'sink', 'dashboard', 'suitable', 'lead', 'driver', 'buck', 'converter', 'boost', 'converter', 'flyback', 'converter', 'forward', 'converter', 'push', 'pull', 'converter', 'driverpush', 'pullrgbsinks']",4
2549,73464,"Dynamic performance of a SCIG wind energysystem during system start-up<p>From the text ""Power Conversion and Control of Wind Energy Systems""- Bin Wu, Yongqiang Lang, Navid Zargari, Samir KouroCase study 3-1 Direct Grid Connection of SCIG during System Startup.</p>",86,3,2,0,103,dynamic performance scig wind energysystem start upfrom text power conversion control wind energy bin yongqiang lang navid samir kourocase study direct grid connection scig startup,"['dynamic', 'performance', 'scig', 'wind', 'energysystem', 'start', 'upfrom', 'text', 'power', 'conversion', 'control', 'wind', 'energy', 'bin', 'yongqiang', 'lang', 'navid', 'samir', 'kourocase', 'study', 'direct', 'grid', 'connection', 'scig', 'startup']",4
2550,73469,"1.5MW WIND GENERATION PLANT using scig<p>1.5MW WIND GENERATION PLANT</p>power electronics,power_conversion_control,power_electronics_control",18,0,1,0,23,wind generation plant scig wind generation plantpower conversion controlpower electronics control,"['wind', 'generation', 'plant', 'scig', 'wind', 'generation', 'plantpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2551,73476,"Indranil Saaki<p>Advances in power electronics technology allowed the vide investigation of multilevel converters that provide high safety voltages with less harmonic components compared to the two-level structures .Because of prominent advantages like more utilization of input voltage, flexibility in switching the legs of three phase inverters and easy method of improving spectral performance and easy digital implantation, space vector modulation (SVPWM) has become the most popular technique for three phase voltage source converters for the control of ac/dc drives and Flexible ac transmission application(FACT) controllers.But implementation of space vector modulation (SVPWM) for more than two levels is difficult because for them no. of switching states is very high. In this project simplified method is proposed in which timing calculation is required for only one sector and therefore calculations are tremendously reduced and the same could be applied to different types of multilevel inverters like flying capacitor and cascaded. To check the validity of the scheme, simulations are done for passive(R-L) load and motor load. Open loop V/f speed control method of Induction motor is also done to enhance the validity of the scheme.</p>facts,induction motor,inverter,power_electronics_control,space vector pulse width modulation svpwm",652,104,4,0,688,indranil saakiadvances power electronics technology allow vide investigation multilevel converter provide high safety voltage less harmonic component compare two level structure prominent advantage like utilization input voltage flexibility switch leg three phase inverter easy method improve spectral performance easy digital implantation space vector modulation svpwm become popular technique three phase voltage source converter control drive flexible transmission application fact controller implementation space vector modulation svpwm two level difficult switch state high project simplify method propose time calculation require one sector therefore calculation tremendously reduce could apply different type multilevel inverter like fly capacitor cascade check validity scheme passive load motor load open loop speed control method induction motor also enhance validity scheme factsinduction electronics controlspace vector pulse width modulation svpwm,"['indranil', 'saakiadvances', 'power', 'electronics', 'technology', 'allow', 'vide', 'investigation', 'multilevel', 'converter', 'provide', 'high', 'safety', 'voltage', 'less', 'harmonic', 'component', 'compare', 'two', 'level', 'structure', 'prominent', 'advantage', 'like', 'utilization', 'input', 'voltage', 'flexibility', 'switch', 'leg', 'three', 'phase', 'inverter', 'easy', 'method', 'improve', 'spectral', 'performance', 'easy', 'digital', 'implantation', 'space', 'vector', 'modulation', 'svpwm', 'become', 'popular', 'technique', 'three', 'phase', 'voltage', 'source', 'converter', 'control', 'drive', 'flexible', 'transmission', 'application', 'fact', 'controller', 'implementation', 'space', 'vector', 'modulation', 'svpwm', 'two', 'level', 'difficult', 'switch', 'state', 'high', 'project', 'simplify', 'method', 'propose', 'time', 'calculation', 'require', 'one', 'sector', 'therefore', 'calculation', 'tremendously', 'reduce', 'could', 'apply', 'different', 'type', 'multilevel', 'inverter', 'like', 'fly', 'capacitor', 'cascade', 'check', 'validity', 'scheme', 'passive', 'load', 'motor', 'load', 'open', 'loop', 'speed', 'control', 'method', 'induction', 'motor', 'also', 'enhance', 'validity', 'scheme', 'factsinduction', 'electronics', 'controlspace', 'vector', 'pulse', 'width', 'modulation', 'svpwm']",3
2552,73487,"This example shows how to build physical component model based on physical connections to modeling free fall of a steel ball using Simulink<p>In free fall the distance fallen h is proportional to the square of the time t taken to fall that distance. The coefficient of that proportionality can be used to calculate the gravitational acceleration g.Since the ball is not moving before it starts to fall at time t0 = 0 its initial velocity is zero, i.e. v0 = 0. Therefore the distance covered in time t is given as followsh=1/2âgât^2Official web-site: <a href=""http://www.virtlabs.techPaid"">http://www.virtlabs.techPaid</a> Version (Google Play): <a href=""https://play.google.com/store/apps/details?id=com.virtlab.free_fall_fullFree"">https://play.google.com/store/apps/details?id=com.virtlab.free_fall_fullFree</a> Version (Google Play): <a href=""https://play.google.com/store/apps/details?id=com.virtlab.free_fall_demoFree"">https://play.google.com/store/apps/details?id=com.virtlab.free_fall_demoFree</a> online-version (HTML5):<a href=""http://virtlabs.tech/apps/mechanics/04_demo/simulator.htmlVideo:https://youtu.be/8seNlvfXfNU"">http://virtlabs.tech/apps/mechanics/04_demo/simulator.htmlVideo:https://youtu.be/8seNlvfXfNU</a></p>3d,acceleration,android,counter,digital,distance,education,experiment,fall,free,gravitational,interactive,lab,laboratory,learning,mechanics,microsecond,mobile,model,physics,science,sensor,simulation,virtual",272,20,5,0,314,example show build physical component base physical connection free fall steel ball free fall distance fall proportional square time take fall distance coefficient proportionality calculate gravitational acceleration since ball move start fall time initial velocity zero therefore distance cover time give followsh official web site http virtlabs techpaid version google play play google com store apps detail com virtlab free fall fullfree version google play play google com store apps detail com virtlab free fall demofree online version html http virtlabs tech apps mechanic demo htmlvideo youtu senlvfxfnu,"['example', 'show', 'build', 'physical', 'component', 'base', 'physical', 'connection', 'free', 'fall', 'steel', 'ball', 'free', 'fall', 'distance', 'fall', 'proportional', 'square', 'time', 'take', 'fall', 'distance', 'coefficient', 'proportionality', 'calculate', 'gravitational', 'acceleration', 'since', 'ball', 'move', 'start', 'fall', 'time', 'initial', 'velocity', 'zero', 'therefore', 'distance', 'cover', 'time', 'give', 'followsh', 'official', 'web', 'site', 'http', 'virtlabs', 'techpaid', 'version', 'google', 'play', 'play', 'google', 'com', 'store', 'apps', 'detail', 'com', 'virtlab', 'free', 'fall', 'fullfree', 'version', 'google', 'play', 'play', 'google', 'com', 'store', 'apps', 'detail', 'com', 'virtlab', 'free', 'fall', 'demofree', 'online', 'version', 'html', 'http', 'virtlabs', 'tech', 'apps', 'mechanic', 'demo', 'htmlvideo', 'youtu', 'senlvfxfnu']",0
2553,73491,"Modeling motion of a ball that is thrown upward at an angle to the horizontal in the earthâs gravitational field using Simulink Simscape<p>According to the principle of superposition, the motion of a ball that is thrown upward at an angle to the horizontal in the earthâs gravitational field is the combination of a motion at a constant speed in the direction of throwing and a gravitational falling motion. This results in a parabolic flight curve, whose height and width depend on the throwing angle and the initial velocity.Official web-site: <a href=""http://www.virtlabs.techPaid"">http://www.virtlabs.techPaid</a> Version (Google Play): <a href=""https://play.google.com/store/apps/details?id=com.virtlab.inclined_launch_fullFree"">https://play.google.com/store/apps/details?id=com.virtlab.inclined_launch_fullFree</a> Version (Google Play): <a href=""https://play.google.com/store/apps/details?id=com.virtlab.inclined_launch_demoFree"">https://play.google.com/store/apps/details?id=com.virtlab.inclined_launch_demoFree</a> online-version (HTML5):<a href=""http://virtlabs.tech/apps/mechanics/05_demo/simulator.htmlVirtual"">http://virtlabs.tech/apps/mechanics/05_demo/simulator.htmlVirtual</a> Lab: Inclined Launch:<a href=""https://youtu.be/SACnZaN5UVs"">https://youtu.be/SACnZaN5UVs</a></p>3d,android,ballistic,curve,digital,distance,education,experiment,field,gravitational,inclined,interactive,lab,laboratory,launch,learning,mechanics,mobile,model,parabolic,physics,science,simulation,trajectory,velocity,virtual",137,11,3,0,144,motion ball thrown upward angle horizontal earths gravitational field principle superposition motion ball thrown upward angle horizontal earths gravitational field combination motion constant speed direction throw gravitational fall motion result parabolic flight curve whose height width depend throw angle initial velocity official web site http virtlabs techpaid version google play play google com store apps detail com virtlab incline launch fullfree version google play play google com store apps detail com virtlab incline launch demofree online version html http virtlabs tech apps mechanic demo htmlvirtual lab incline launch youtu sacnzan,"['motion', 'ball', 'thrown', 'upward', 'angle', 'horizontal', 'earths', 'gravitational', 'field', 'principle', 'superposition', 'motion', 'ball', 'thrown', 'upward', 'angle', 'horizontal', 'earths', 'gravitational', 'field', 'combination', 'motion', 'constant', 'speed', 'direction', 'throw', 'gravitational', 'fall', 'motion', 'result', 'parabolic', 'flight', 'curve', 'whose', 'height', 'width', 'depend', 'throw', 'angle', 'initial', 'velocity', 'official', 'web', 'site', 'http', 'virtlabs', 'techpaid', 'version', 'google', 'play', 'play', 'google', 'com', 'store', 'apps', 'detail', 'com', 'virtlab', 'incline', 'launch', 'fullfree', 'version', 'google', 'play', 'play', 'google', 'com', 'store', 'apps', 'detail', 'com', 'virtlab', 'incline', 'launch', 'demofree', 'online', 'version', 'html', 'http', 'virtlabs', 'tech', 'apps', 'mechanic', 'demo', 'htmlvirtual', 'lab', 'incline', 'launch', 'youtu', 'sacnzan']",5
2554,73497,"ac voltage controller<p>ac voltage controller</p>power electronics,power_conversion_control,power_electronics_control",17,0,1,0,21,voltage controllerac voltage controllerpower conversion controlpower electronics control,"['voltage', 'controllerac', 'voltage', 'controllerpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2555,73498,in this model basic simulation of hall sensor based BLDC drive is done with all the currents back EMFs Torque speed and other quantities<p>Basic Simulation of BLDC motor</p>,122,4,2,0,154,basic hall sensor base bldc drive current back emfs torque speed quantitiesbasic bldc motor,"['basic', 'hall', 'sensor', 'base', 'bldc', 'drive', 'current', 'back', 'emfs', 'torque', 'speed', 'quantitiesbasic', 'bldc', 'motor']",4
2556,73503,"Model is done with using boost converter equations,which will step-up the voltage w.r.t the input voltage depending upon the Duty Cycle <p>Model will help to get output voltage of the Boost converter using mathematical modeling </p>simulink",20,0,1,0,21,boost converter equationswhich step voltage input voltage depend upon duty cycle help get output voltage boost converter mathematical modeling,"['boost', 'converter', 'equationswhich', 'step', 'voltage', 'input', 'voltage', 'depend', 'upon', 'duty', 'cycle', 'help', 'get', 'output', 'voltage', 'boost', 'converter', 'mathematical', 'modeling']",3
2557,73518,About simulation HVDC HVAC <p>HVAC HVDC Simulation </p>,19,0,1,0,38,hvdc hvac hvac hvdc,"['hvdc', 'hvac', 'hvac', 'hvdc']",2
2558,73519,Make output slowly close input when input change very big.<p>Make output slowly close input when input change very big.</p>,39,4,3,0,50,make output slowly close input input change big make output slowly close input input change big,"['make', 'output', 'slowly', 'close', 'input', 'input', 'change', 'big', 'make', 'output', 'slowly', 'close', 'input', 'input', 'change', 'big']",4
2559,73521,"Modelling and Controller of Microgrid Integration of Hybrid PV/ Wind / Battery Management System Using Fuzzy Logic Controller<p>Modelling and Controller of Microgrid Integration of Hybrid PV/ Wind / Battery Management System Using Fuzzy Logic Controller</p>battery_system_management,fuzzy,hybrid,microgrid,pv,upfc,wind",1088,63,6,0,1312,controller microgrid integration hybrid wind battery management fuzzy logic controller microgrid integration hybrid wind battery management fuzzy logic,"['controller', 'microgrid', 'integration', 'hybrid', 'wind', 'battery', 'management', 'fuzzy', 'logic', 'controller', 'microgrid', 'integration', 'hybrid', 'wind', 'battery', 'management', 'fuzzy', 'logic']",4
2560,73532,"This circuit demonstrates how solid state relay can be constructed using a MOSFET and four diodes.<p>MOSFET Solid State RelayDeveloped by Rodney Tan (PhD)Version 1.00 (Dec 2019)This circuit demonstrates how solid state relay can be constructed using a MOSFET and four diodes.This MOSFET Solid State Relay is applicable for both AC and DC circuits.</p>mosfet switch,solid state relay,solid state switch",12,1,1,0,12,circuit demonstrate solid state relay construct mosfet four diode mosfet solid state relaydeveloped rodney tan phd version dec circuit demonstrate solid state relay construct mosfet four diode mosfet solid state relay applicable circuit mosfet switchsolid state relaysolid state switch,"['circuit', 'demonstrate', 'solid', 'state', 'relay', 'construct', 'mosfet', 'four', 'diode', 'mosfet', 'solid', 'state', 'relaydeveloped', 'rodney', 'tan', 'phd', 'version', 'dec', 'circuit', 'demonstrate', 'solid', 'state', 'relay', 'construct', 'mosfet', 'four', 'diode', 'mosfet', 'solid', 'state', 'relay', 'applicable', 'circuit', 'mosfet', 'switchsolid', 'state', 'relaysolid', 'state', 'switch']",4
2561,73536,"boost converter with closed loop control<p>boost converter with closed loop controlvin=240Vvout= 500V</p>power electronics,power_conversion_control,power_electronics_control",30,3,2,0,29,boost converter close loop controlboost converter close loop controlvin vvout vpower conversion controlpower electronics control,"['boost', 'converter', 'close', 'loop', 'controlboost', 'converter', 'close', 'loop', 'controlvin', 'vvout', 'vpower', 'conversion', 'controlpower', 'electronics', 'control']",1
2562,73554,"A Äuk converter transforms a DC voltage at the input to a DC voltage at the output with reversed polarity.<p>Working principleA Äuk converter transforms a DC voltage at the input to a DC voltage at the output with reversed polarity. Compared to the Buck, Boost and Buck-Boost converters the Äuk converter uses an additional inductor and capacitor to store energy. Consider the following sequence of the MOSFET conduction state:1. On-state: The current through the inductor L1 increases linearly and the diode blocks.2. Off-state: Since the current through the inductor L1 can not abruptly change the diode must carry the current so it commutates and begins conducting. Energy is transferred from the inductor L1 to the middle capacitor C2 resulting in a decreasing inductor current.3. On-state: The current through the inductor L1 again increases linearly and the diode blocks. The middle capacitor discharges and supplies the RC load through the inductor L2. The induced voltage across the resistor R has the opposite polarity of the input voltage.The circuit has two limits of operation. For a PWM duty cycle D â 0 the output voltage equals zero, and for D â 1 the output voltage grows toward negative infinity. In between those limits the output voltage in continuous conduction mode is given by: Vout = -D/(1-D) Â· Vin. The combination of inductors and capacitors acts as a second order low pass filter reducing the voltage ripple at the output.Compared to the previous DC to DC voltage converters (Buck, Boost and Buck-Boost) the Äuk converter always allows continuous current flow through the inductors, and therefore, no discontinuous conduction mode is possible.ExperimentsChange the PWM duty cycle of the converter from 0.5 to 0.4 and 0.6 and observe how the average output voltage changes to 16 V and 36 V, respectively.Change the DC capacitor value from 10 Î¼F to 100 Î¼F and observe how the ripple of the output voltage is reduced.</p>power electronics,power_conversion_control,power_electronics_control",19,0,1,0,31,Äuk converter transforms voltage input voltage output reverse polarity work principlea Äuk converter transforms voltage input voltage output reverse polarity compare buck boost buck boost converter Äuk converter additional inductor capacitor store energy consider follow sequence mosfet conduction state state current inductor increase linearly diode block state since current inductor abruptly change diode must carry current commutates begin conduct energy transfer inductor middle capacitor result decrease inductor current state current inductor increase linearly diode block middle capacitor discharge supply load inductor induced voltage across resistor opposite polarity input voltage circuit two limit operation pwm duty cycle output voltage equal zero output voltage grow toward negative infinity limit output voltage continuous conduction mode give vout vin combination inductor capacitor act second order low pas filter reduce voltage ripple output compare previous voltage converter buck boost buck boost Äuk converter always allow continuous current flow inductor therefore discontinuous conduction mode possible pwm duty cycle converter observe average output voltage change respectively change capacitor value observe ripple output voltage reduce power conversion controlpower electronics control,"['Äuk', 'converter', 'transforms', 'voltage', 'input', 'voltage', 'output', 'reverse', 'polarity', 'work', 'principlea', 'Äuk', 'converter', 'transforms', 'voltage', 'input', 'voltage', 'output', 'reverse', 'polarity', 'compare', 'buck', 'boost', 'buck', 'boost', 'converter', 'Äuk', 'converter', 'additional', 'inductor', 'capacitor', 'store', 'energy', 'consider', 'follow', 'sequence', 'mosfet', 'conduction', 'state', 'state', 'current', 'inductor', 'increase', 'linearly', 'diode', 'block', 'state', 'since', 'current', 'inductor', 'abruptly', 'change', 'diode', 'must', 'carry', 'current', 'commutates', 'begin', 'conduct', 'energy', 'transfer', 'inductor', 'middle', 'capacitor', 'result', 'decrease', 'inductor', 'current', 'state', 'current', 'inductor', 'increase', 'linearly', 'diode', 'block', 'middle', 'capacitor', 'discharge', 'supply', 'load', 'inductor', 'induced', 'voltage', 'across', 'resistor', 'opposite', 'polarity', 'input', 'voltage', 'circuit', 'two', 'limit', 'operation', 'pwm', 'duty', 'cycle', 'output', 'voltage', 'equal', 'zero', 'output', 'voltage', 'grow', 'toward', 'negative', 'infinity', 'limit', 'output', 'voltage', 'continuous', 'conduction', 'mode', 'give', 'vout', 'vin', 'combination', 'inductor', 'capacitor', 'act', 'second', 'order', 'low', 'pas', 'filter', 'reduce', 'voltage', 'ripple', 'output', 'compare', 'previous', 'voltage', 'converter', 'buck', 'boost', 'buck', 'boost', 'Äuk', 'converter', 'always', 'allow', 'continuous', 'current', 'flow', 'inductor', 'therefore', 'discontinuous', 'conduction', 'mode', 'possible', 'pwm', 'duty', 'cycle', 'converter', 'observe', 'average', 'output', 'voltage', 'change', 'respectively', 'change', 'capacitor', 'value', 'observe', 'ripple', 'output', 'voltage', 'reduce', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2563,73557,"A Buck converter steps down a DC voltage from the input to the output<p>Working principleA Buck converter steps down a DC voltage from the input to the output. The circuit operation depends on the conduction state of the MOSFET:On-state: The current through the inductor increases and the diode blocks.Off-state: Since the current through the inductor can not abruptly change the diode must carry the current so it commutates and begins conducting. Energy is transferred from the inductor to the capacitor resulting in a decreasing inductor current. During steady state the circuit is said to operate:  in discontinuous conduction mode if the inductor current reaches zero andin continuous conduction mode if the inductor current never reaches zero.The circuit has two limits of operation. For a PWM duty cycle D â 0 the output voltage equals zero, and for D â 1 the output voltage equals Vin. In between those limits the output voltage in continuous conduction mode is given by: Vout = D Â· Vin.Note that the parallel combination of inductor and capacitor as shown above acts as a second order low pass filter reducing the voltage ripple at the output.ExperimentsChange the PWM duty cycle of the converter from 0.3 to 0.5 and observe how the average output voltage changes from 7.2 V to 12 V.Change the resistance value from 5 Î© to 50 Î© and observe how the converter goes into discontinuous conduction mode.</p>power electronics,power_conversion_control,power_electronics_control",16,0,1,0,23,buck converter step voltage input outputworking principlea buck converter step voltage input output circuit operation depend conduction state mosfet state current inductor increase diode block state since current inductor abruptly change diode must carry current commutates begin conduct energy transfer inductor capacitor result decrease inductor current steady state circuit say operate discontinuous conduction mode inductor current reach zero andin continuous conduction mode inductor current never reach zero circuit two limit operation pwm duty cycle output voltage equal zero output voltage equal vin limit output voltage continuous conduction mode give vout vin note parallel combination inductor capacitor show act second order low pas filter reduce voltage ripple output pwm duty cycle converter observe average output voltage change change resistance value observe converter discontinuous conduction mode power conversion controlpower electronics control,"['buck', 'converter', 'step', 'voltage', 'input', 'outputworking', 'principlea', 'buck', 'converter', 'step', 'voltage', 'input', 'output', 'circuit', 'operation', 'depend', 'conduction', 'state', 'mosfet', 'state', 'current', 'inductor', 'increase', 'diode', 'block', 'state', 'since', 'current', 'inductor', 'abruptly', 'change', 'diode', 'must', 'carry', 'current', 'commutates', 'begin', 'conduct', 'energy', 'transfer', 'inductor', 'capacitor', 'result', 'decrease', 'inductor', 'current', 'steady', 'state', 'circuit', 'say', 'operate', 'discontinuous', 'conduction', 'mode', 'inductor', 'current', 'reach', 'zero', 'andin', 'continuous', 'conduction', 'mode', 'inductor', 'current', 'never', 'reach', 'zero', 'circuit', 'two', 'limit', 'operation', 'pwm', 'duty', 'cycle', 'output', 'voltage', 'equal', 'zero', 'output', 'voltage', 'equal', 'vin', 'limit', 'output', 'voltage', 'continuous', 'conduction', 'mode', 'give', 'vout', 'vin', 'note', 'parallel', 'combination', 'inductor', 'capacitor', 'show', 'act', 'second', 'order', 'low', 'pas', 'filter', 'reduce', 'voltage', 'ripple', 'output', 'pwm', 'duty', 'cycle', 'converter', 'observe', 'average', 'output', 'voltage', 'change', 'change', 'resistance', 'value', 'observe', 'converter', 'discontinuous', 'conduction', 'mode', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2564,73559,"A Boost converter steps up a DC voltage from the input to the output<p>Working principleA Boost converter steps up a DC voltage from the input to the output. The circuit operation depends on the conduction state of the IGBT:On-state: The current through the inductor increases linearly and the diode blocks.Off-state: Since the current through the inductor can not abruptly change the diode must carry the current so it commutates and begins conducting. Energy is transferred from the inductor to the capacitor resulting in a decreasing inductor current. During steady state the circuit is said to operate:  in discontinuous conduction mode if the inductor current reaches zero andin continuous conduction mode if the inductor current never reaches zero.The circuit has two limits of operation. For a PWM duty cycle D â 0 the output voltage equals Vin, and for D â 1 the output voltage grows toward infinity. In between those limits the output voltage in continuous conduction mode is given by: Vout = Vin/(1-D).Note that the parallel combination of inductor and capacitor as shown above acts as a second order low pass filter reducing the voltage ripple at the output.ExperimentsChange the PWM duty cycle of the converter from 0.6 to 0.4 and observe how the average output voltage changes from 60 V to 40 V.Change the resistance value from 10 Î© to 80 Î© and observe how the converter goes into discontinuous conduction mode.</p>power electronics,power_conversion_control,power_electronics_control",14,0,1,0,18,boost converter step voltage input outputworking principlea boost converter step voltage input output circuit operation depend conduction state igbt state current inductor increase linearly diode block state since current inductor abruptly change diode must carry current commutates begin conduct energy transfer inductor capacitor result decrease inductor current steady state circuit say operate discontinuous conduction mode inductor current reach zero andin continuous conduction mode inductor current never reach zero circuit two limit operation pwm duty cycle output voltage equal vin output voltage grow toward infinity limit output voltage continuous conduction mode give vout vin note parallel combination inductor capacitor show act second order low pas filter reduce voltage ripple output pwm duty cycle converter observe average output voltage change change resistance value observe converter discontinuous conduction mode power conversion controlpower electronics control,"['boost', 'converter', 'step', 'voltage', 'input', 'outputworking', 'principlea', 'boost', 'converter', 'step', 'voltage', 'input', 'output', 'circuit', 'operation', 'depend', 'conduction', 'state', 'igbt', 'state', 'current', 'inductor', 'increase', 'linearly', 'diode', 'block', 'state', 'since', 'current', 'inductor', 'abruptly', 'change', 'diode', 'must', 'carry', 'current', 'commutates', 'begin', 'conduct', 'energy', 'transfer', 'inductor', 'capacitor', 'result', 'decrease', 'inductor', 'current', 'steady', 'state', 'circuit', 'say', 'operate', 'discontinuous', 'conduction', 'mode', 'inductor', 'current', 'reach', 'zero', 'andin', 'continuous', 'conduction', 'mode', 'inductor', 'current', 'never', 'reach', 'zero', 'circuit', 'two', 'limit', 'operation', 'pwm', 'duty', 'cycle', 'output', 'voltage', 'equal', 'vin', 'output', 'voltage', 'grow', 'toward', 'infinity', 'limit', 'output', 'voltage', 'continuous', 'conduction', 'mode', 'give', 'vout', 'vin', 'note', 'parallel', 'combination', 'inductor', 'capacitor', 'show', 'act', 'second', 'order', 'low', 'pas', 'filter', 'reduce', 'voltage', 'ripple', 'output', 'pwm', 'duty', 'cycle', 'converter', 'observe', 'average', 'output', 'voltage', 'change', 'change', 'resistance', 'value', 'observe', 'converter', 'discontinuous', 'conduction', 'mode', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2565,73569,"A flyback converter transforms a DC voltage at the input to a DC voltage at the output.<p>Working principleA flyback converter transforms a DC voltage at the input to a DC voltage at the output. The operating principle is similar to the buck-boost converter, but an additional transformer is used to achieve galvanic isolation of the input and output.For a flyback converter in continuous conduction mode the output voltage across resistor R is given by: where D is the duty cycle, and N1 and N2 are the turns numbers of the primary and secondary windings.ExperimentsChange the winding ratio from 1:1 to 0.5:1 and observe how the output voltage increases by a factor of 2.</p>power electronics,power_conversion_control,power_electronics_control",14,0,1,0,19,flyback converter transforms voltage input voltage output work principlea flyback converter transforms voltage input voltage output operate principle similar buck boost converter additional transformer achieve galvanic isolation input output flyback converter continuous conduction mode output voltage across resistor give duty cycle turn number primary secondary winding wind ratio observe output voltage increase factor power conversion controlpower electronics control,"['flyback', 'converter', 'transforms', 'voltage', 'input', 'voltage', 'output', 'work', 'principlea', 'flyback', 'converter', 'transforms', 'voltage', 'input', 'voltage', 'output', 'operate', 'principle', 'similar', 'buck', 'boost', 'converter', 'additional', 'transformer', 'achieve', 'galvanic', 'isolation', 'input', 'output', 'flyback', 'converter', 'continuous', 'conduction', 'mode', 'output', 'voltage', 'across', 'resistor', 'give', 'duty', 'cycle', 'turn', 'number', 'primary', 'secondary', 'winding', 'wind', 'ratio', 'observe', 'output', 'voltage', 'increase', 'factor', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2566,73571,"Texas Instruments multi-channel serial port protocol used by many DSPs. Can be used for high throughput link between FPGA and DSP.<p>When using an FPGA as data preprocessor for a digital signal processor, one needs to establish a high-bandwidth link between the two chips. Many modern Texas Instruments DSPs use a protocol called ""McASP"" (multi-channel audio serial port). Despite its name, it can be used for any kind of data, not just audio.This library provides blocks for sending and receiving data to and from a TI DSP and is made for HDL code generation with HDL Coder.To learn how the blocks are used, see the example model, it shows continouus data streaming with 16 bit words (check the logic analyzer). Of course, it's also possible to use 8 bit or 32 bit words by configuring the block parameters.A C-Code excerpt showing the configuration values for the different McASP registers on a 66AK2G12 DSP is also provided. If you are using a different DSP chip, the register names might still be the same and you can use this code as guidance.</p>dsp,fpga,mcasp,serial port,texas instruments",21,7,2,5,23,texas instrument multi channel serial port protocol many dsps high throughput link fpga dsp fpga data preprocessor digital signal processor one need establish high bandwidth link two chip many modern texas instrument dsps protocol call mcasp multi channel audio serial port despite name kind data audio provide block send receive data dsp make hdl code generation hdl coder learn block see example show continouus data stream bit word check logic analyzer course also possible bit bit word configure block parameter code excerpt show configuration value different mcasp register dsp also provide different dsp chip register name might still code guidance porttexas instrument,"['texas', 'instrument', 'multi', 'channel', 'serial', 'port', 'protocol', 'many', 'dsps', 'high', 'throughput', 'link', 'fpga', 'dsp', 'fpga', 'data', 'preprocessor', 'digital', 'signal', 'processor', 'one', 'need', 'establish', 'high', 'bandwidth', 'link', 'two', 'chip', 'many', 'modern', 'texas', 'instrument', 'dsps', 'protocol', 'call', 'mcasp', 'multi', 'channel', 'audio', 'serial', 'port', 'despite', 'name', 'kind', 'data', 'audio', 'provide', 'block', 'send', 'receive', 'data', 'dsp', 'make', 'hdl', 'code', 'generation', 'hdl', 'coder', 'learn', 'block', 'see', 'example', 'show', 'continouus', 'data', 'stream', 'bit', 'word', 'check', 'logic', 'analyzer', 'course', 'also', 'possible', 'bit', 'bit', 'word', 'configure', 'block', 'parameter', 'code', 'excerpt', 'show', 'configuration', 'value', 'different', 'mcasp', 'register', 'dsp', 'also', 'provide', 'different', 'dsp', 'chip', 'register', 'name', 'might', 'still', 'code', 'guidance', 'porttexas', 'instrument']",0
2567,73579,"A Buck-Boost converter transforms a positive DC voltage at the input to a negative DC voltage at the output.<p>Working principleA Buck-Boost converter transforms a positive DC voltage at the input to a negative DC voltage at the output. The circuit operation depends on the conduction state of the MOSFET:On-state: The current through the inductor increases and the diode is in blocking state.Off-state: Since the current through the inductor can not abruptly change the diode must carry the current so it commutates and begins conducting. Energy is transferred from the inductor to the capacitor resulting in a decreasing inductor current and a voltage across the resistor with the opposite polarity compared to Vin. During steady state the circuit is said to operate:  in discontinuous conduction mode if the inductor current reaches zero andin continuous conduction mode if the inductor current never reaches zero.The circuit has two limits of operation. For a PWM duty cycle D â 0 the output voltage equals zero, and for D â 1 the output voltage grows toward negative infinity. In between those limits the output voltage in continuous conduction mode is given by: Vout = -D/(1-D) Â· Vin.Note that the parallel combination of inductor and capacitor as shown above acts as a second order low pass filter reducing the voltage ripple at the output.ExperimentsChange the PWM duty cycle of the converter from 0.5 to 0.4 and 0.6 and observe how the average output voltage changes to 16 V and 36 V, respectively.Change the resistance value from 10 Î© to 80 Î© and observe how the converter goes into discontinuous conduction mode.</p>power electronics,power_conversion_control,power_electronics_control",12,0,1,0,15,buck boost converter transforms positive voltage input negative voltage output work principlea buck boost converter transforms positive voltage input negative voltage output circuit operation depend conduction state mosfet state current inductor increase diode block state state since current inductor abruptly change diode must carry current commutates begin conduct energy transfer inductor capacitor result decrease inductor current voltage across resistor opposite polarity compare vin steady state circuit say operate discontinuous conduction mode inductor current reach zero andin continuous conduction mode inductor current never reach zero circuit two limit operation pwm duty cycle output voltage equal zero output voltage grow toward negative infinity limit output voltage continuous conduction mode give vout vin note parallel combination inductor capacitor show act second order low pas filter reduce voltage ripple output pwm duty cycle converter observe average output voltage change respectively change resistance value observe converter discontinuous conduction mode power conversion controlpower electronics control,"['buck', 'boost', 'converter', 'transforms', 'positive', 'voltage', 'input', 'negative', 'voltage', 'output', 'work', 'principlea', 'buck', 'boost', 'converter', 'transforms', 'positive', 'voltage', 'input', 'negative', 'voltage', 'output', 'circuit', 'operation', 'depend', 'conduction', 'state', 'mosfet', 'state', 'current', 'inductor', 'increase', 'diode', 'block', 'state', 'state', 'since', 'current', 'inductor', 'abruptly', 'change', 'diode', 'must', 'carry', 'current', 'commutates', 'begin', 'conduct', 'energy', 'transfer', 'inductor', 'capacitor', 'result', 'decrease', 'inductor', 'current', 'voltage', 'across', 'resistor', 'opposite', 'polarity', 'compare', 'vin', 'steady', 'state', 'circuit', 'say', 'operate', 'discontinuous', 'conduction', 'mode', 'inductor', 'current', 'reach', 'zero', 'andin', 'continuous', 'conduction', 'mode', 'inductor', 'current', 'never', 'reach', 'zero', 'circuit', 'two', 'limit', 'operation', 'pwm', 'duty', 'cycle', 'output', 'voltage', 'equal', 'zero', 'output', 'voltage', 'grow', 'toward', 'negative', 'infinity', 'limit', 'output', 'voltage', 'continuous', 'conduction', 'mode', 'give', 'vout', 'vin', 'note', 'parallel', 'combination', 'inductor', 'capacitor', 'show', 'act', 'second', 'order', 'low', 'pas', 'filter', 'reduce', 'voltage', 'ripple', 'output', 'pwm', 'duty', 'cycle', 'converter', 'observe', 'average', 'output', 'voltage', 'change', 'respectively', 'change', 'resistance', 'value', 'observe', 'converter', 'discontinuous', 'conduction', 'mode', 'power', 'conversion', 'controlpower', 'electronics', 'control']",3
2568,73580,"The Simulink model based on PV system (consisting of PV, Battery, Converter, PI Controller, inverter, and charge controller <p>In this Project we design the Simulink model based on PV system (consisting of PV, Battery, Converter, PI Controller, inverter, and charge control) architecture. Next we deploy the MPPT Controller. Next we apply optimization algorithm in MPPT controller. The optimization algorithm used are, Genetic Algorithm (GA), Particle Swarm Optimization (PSO), and Neural Network (NN). The optimal value is based on insolation and temperature. Then we calculate the maximum power and voltage from optimization algorithm. Next we implement inverter which is convert electricity produced by the system from DC to AC power. Then the charge controller able to prevent over charging with connected a battery. Finally, the designed system is evaluated with the following plots for individual scenario Voltage, Current, and Power..</p>",223,12,3,0,232,base consist battery converter controller inverter charge controller project design base consist battery converter controller inverter charge control architecture next deploy mppt controller next apply optimization algorithm mppt controller optimization algorithm genetic algorithm particle swarm optimization pso neural network optimal value base insolation temperature calculate maximum power voltage optimization algorithm next implement inverter convert electricity produce power charge controller able prevent charge connect battery finally design evaluate follow plot individual scenario voltage current power,"['base', 'consist', 'battery', 'converter', 'controller', 'inverter', 'charge', 'controller', 'project', 'design', 'base', 'consist', 'battery', 'converter', 'controller', 'inverter', 'charge', 'control', 'architecture', 'next', 'deploy', 'mppt', 'controller', 'next', 'apply', 'optimization', 'algorithm', 'mppt', 'controller', 'optimization', 'algorithm', 'genetic', 'algorithm', 'particle', 'swarm', 'optimization', 'pso', 'neural', 'network', 'optimal', 'value', 'base', 'insolation', 'temperature', 'calculate', 'maximum', 'power', 'voltage', 'optimization', 'algorithm', 'next', 'implement', 'inverter', 'convert', 'electricity', 'produce', 'power', 'charge', 'controller', 'able', 'prevent', 'charge', 'connect', 'battery', 'finally', 'design', 'evaluate', 'follow', 'plot', 'individual', 'scenario', 'voltage', 'current', 'power']",3
2569,73602,"Demonstration of Setting up a ROS Action Client Block in Simulink<p>This Small Model shows how to setup Simulink Publisher and Subscribers in the correct format in order to be able to properlz communicate with a ROS Action Server.In order to use the model, the following steps need to be performed:1. Move the motion_controller directory into your ROS Catkin Workspace and compile with catkin build or catkin_make.2. Add the motion_controller messages (motion_controller.action) to the matlab custom messages, using:<a href=""https://de.mathworks.com/help/ros/ug/ros-custom-message-support.html3"">https://de.mathworks.com/help/ros/ug/ros-custom-message-support.html3</a>. Start up the motion_controller robot simulator in a linux terminal or Windows Sub-system for Linux Terminal with:&gt; rosrun motion_controller motion_controller_test_simulator4. Start up the motion_controller action server with:&gt; rosrun motion_controller motion_controller5. Start the Matlab Simulink Model, and see the robot move to the action goal.Note: Presently the waitForServer Command is not working, and is commented out.  Anyone who has suggestions on an efficient way to code this is much appreciated.</p>action client,action server,robotics,ros",151,14,4,0,145,demonstration set ros action client block small show setup publisher subscriber correct format order able properlz communicate action server order follow step need perform move motion controller directory catkin workspace compile catkin build catkin make add motion controller message motion controller action custom message mathworks com help ros ros custom message support html start motion controller robot linux terminal window sub linux terminal rosrun motion controller motion controller test start motion controller action server rosrun motion controller motion controller start see robot move action goal note presently waitforserver command work comment anyone suggestion efficient way code much appreciate action clientaction,"['demonstration', 'set', 'ros', 'action', 'client', 'block', 'small', 'show', 'setup', 'publisher', 'subscriber', 'correct', 'format', 'order', 'able', 'properlz', 'communicate', 'action', 'server', 'order', 'follow', 'step', 'need', 'perform', 'move', 'motion', 'controller', 'directory', 'catkin', 'workspace', 'compile', 'catkin', 'build', 'catkin', 'make', 'add', 'motion', 'controller', 'message', 'motion', 'controller', 'action', 'custom', 'message', 'mathworks', 'com', 'help', 'ros', 'ros', 'custom', 'message', 'support', 'html', 'start', 'motion', 'controller', 'robot', 'linux', 'terminal', 'window', 'sub', 'linux', 'terminal', 'rosrun', 'motion', 'controller', 'motion', 'controller', 'test', 'start', 'motion', 'controller', 'action', 'server', 'rosrun', 'motion', 'controller', 'motion', 'controller', 'start', 'see', 'robot', 'move', 'action', 'goal', 'note', 'presently', 'waitforserver', 'command', 'work', 'comment', 'anyone', 'suggestion', 'efficient', 'way', 'code', 'much', 'appreciate', 'action', 'clientaction']",0
2570,73683,"This project is solar with fuzzy inference system<p>This especially for solar with fuzzy inference systemthis getting most probable resultsIf any doubts drop on <a href=""mailto:mailgsaravanakumar116@gmail.com"">mailgsaravanakumar116@gmail.com</a></p>fuzzy logic,mppt,solar",281,29,6,0,275,project solar fuzzy inference systemthis especially solar fuzzy inference systemthis get probable resultsif doubt drop gmail comfuzzy logicmpptsolar,"['project', 'solar', 'fuzzy', 'inference', 'systemthis', 'especially', 'solar', 'fuzzy', 'inference', 'systemthis', 'get', 'probable', 'resultsif', 'doubt', 'drop', 'gmail', 'comfuzzy', 'logicmpptsolar']",8
2571,73697,"A Full Wave Rectifier is a circuit, which converts an ac voltage into a pulsating dc voltage using both half cycles of the applied ac voltag<p>A Full Wave Rectifier is a circuit, which converts an ac voltage into a pulsating dc voltage using both half cycles of the applied ac voltage</p>",35,0,1,0,39,full wave rectifier circuit convert voltage pulsate voltage half cycle apply voltaga full wave rectifier circuit convert voltage pulsate voltage half cycle apply voltage,"['full', 'wave', 'rectifier', 'circuit', 'convert', 'voltage', 'pulsate', 'voltage', 'half', 'cycle', 'apply', 'voltaga', 'full', 'wave', 'rectifier', 'circuit', 'convert', 'voltage', 'pulsate', 'voltage', 'half', 'cycle', 'apply', 'voltage']",3
2572,73724,"An ideal RGB LED with Common Cathode that is implemented using Power System Blocks. <p>Ideal LED means that the intensity of the light is directly proportional to the forward current. However, this is not true in practice.The over current (OC) detection is included in the model, if all the LED produce 0 OC, this mean that the LED work properly. If the OC produce 1, this mean that the over current occurs and the LED might be broken. The solution is to increase the resistance or reduce the input voltage.In the setting, there are four thing that needs to be considered. Forward Voltage: Different LED color required different forward voltage. Normally, the red LED requires a lower voltage compared to other colors. Check the datasheet of the LED to obtain the forward voltage of each color.Maximum Forward Current:When the voltage supply is above the forward voltage, the LED can turned on, the higher the voltage, the higher the current. To ensure the LED work properly, a resistor is added to limit the current. If the current is more than the maximum forward current, the LED will be broken. This maximum forward current can be obtain from the datasheet. Sample Rate: This is the time taken for the scope to update the figure.PWM Switching Frequency:If the LED receive PWM type input, the switching frequency of the PWM needs to be inserted into the setting.</p>fyp,led,power electronics",59,4,3,0,63,ideal rgb lead common cathode implement power block ideal lead mean intensity light directly proportional forward current however true practice current detection include lead produce mean lead work properly produce mean current occurs lead might break solution increase resistance reduce input voltage set four thing need consider forward voltage different lead color require different forward voltage normally red led require low voltage compare color check datasheet lead obtain forward voltage color maximum forward current voltage supply forward voltage lead turn high voltage higher current ensure lead work properly resistor add limit current current maximum forward current lead broken maximum forward current obtain datasheet sample rate time take scope update figure pwm switch frequency lead receive pwm type input switch frequency pwm need insert set fypledpower electronics,"['ideal', 'rgb', 'lead', 'common', 'cathode', 'implement', 'power', 'block', 'ideal', 'lead', 'mean', 'intensity', 'light', 'directly', 'proportional', 'forward', 'current', 'however', 'true', 'practice', 'current', 'detection', 'include', 'lead', 'produce', 'mean', 'lead', 'work', 'properly', 'produce', 'mean', 'current', 'occurs', 'lead', 'might', 'break', 'solution', 'increase', 'resistance', 'reduce', 'input', 'voltage', 'set', 'four', 'thing', 'need', 'consider', 'forward', 'voltage', 'different', 'lead', 'color', 'require', 'different', 'forward', 'voltage', 'normally', 'red', 'led', 'require', 'low', 'voltage', 'compare', 'color', 'check', 'datasheet', 'lead', 'obtain', 'forward', 'voltage', 'color', 'maximum', 'forward', 'current', 'voltage', 'supply', 'forward', 'voltage', 'lead', 'turn', 'high', 'voltage', 'higher', 'current', 'ensure', 'lead', 'work', 'properly', 'resistor', 'add', 'limit', 'current', 'current', 'maximum', 'forward', 'current', 'lead', 'broken', 'maximum', 'forward', 'current', 'obtain', 'datasheet', 'sample', 'rate', 'time', 'take', 'scope', 'update', 'figure', 'pwm', 'switch', 'frequency', 'lead', 'receive', 'pwm', 'type', 'input', 'switch', 'frequency', 'pwm', 'need', 'insert', 'set', 'fypledpower', 'electronics']",4
2573,73758,"three phase three level inverter<p>three phase three level inverter</p>power electronics,power_conversion_control,power_electronics_control",17,0,1,0,27,three phase three level inverterthree phase three level inverterpower conversion controlpower electronics control,"['three', 'phase', 'three', 'level', 'inverterthree', 'phase', 'three', 'level', 'inverterpower', 'conversion', 'controlpower', 'electronics', 'control']",6
2574,73797,"SIEMENS speed control Primary Frequency Influence <p>SIEMENS speed control Primary Frequency Influence E.saleh saied <a href=""mailto:bohligazwuitina@yahoo.com"">bohligazwuitina@yahoo.com</a></p>",71,1,1,0,77,siemens speed control primary frequency influence siemens speed control primary frequency influence saleh saied bohligazwuitina yahoo com,"['siemens', 'speed', 'control', 'primary', 'frequency', 'influence', 'siemens', 'speed', 'control', 'primary', 'frequency', 'influence', 'saleh', 'saied', 'bohligazwuitina', 'yahoo', 'com']",4
2575,73802,"These double infeed model have real transmission line data of 132KV and 160km. login of auto reclosing work perfectly.<p>I had prepared the MATLAB model for double infeed 132KV,160km long transmission line. As we know that for a long transmission line single auto reclosing scheme is applied. I had made fault at 0.2 s and if fault is transient fault system back to normal phase and if fault is permanent then faulted system is isolated.  </p>",33,1,2,0,55,double infeed real transmission line data login auto reclosing work perfectly prepare double infeed long transmission line know long transmission line single auto reclosing scheme apply make fault fault transient fault back normal phase fault permanent fault isolated,"['double', 'infeed', 'real', 'transmission', 'line', 'data', 'login', 'auto', 'reclosing', 'work', 'perfectly', 'prepare', 'double', 'infeed', 'long', 'transmission', 'line', 'know', 'long', 'transmission', 'line', 'single', 'auto', 'reclosing', 'scheme', 'apply', 'make', 'fault', 'fault', 'transient', 'fault', 'back', 'normal', 'phase', 'fault', 'permanent', 'fault', 'isolated']",5
2576,73803,"I created this as a part of my own education of how to build a model for analyzing transients<p>This file has 9-bus system with three synchronous generators. I used ""Improve Transient Stability Using SVC and PSS"" example as a reference for the generator control (HTG) and one thing that perplexed me is the need for me to add a nominal power block to the generator outputs where as the example didn't needed any. Of course, I am using ""Pi"" sections and ""discrete"" simulation but that doesn't explain me much. If you find it useful, feel free to use it. I am not even sure if this captures dynamics in any useful way. But your comments and suggestions might help me do a useful job</p>power systems,transient stability",120,4,2,0,186,create part education build analyze transientsthis file bus three synchronous generator improve transient stability svc pss example reference generator control htg one thing perplex need add nominal power block generator output example need course section discrete explain much find useful feel free even sure capture dynamic useful way comment suggestion might help useful jobpower stability,"['create', 'part', 'education', 'build', 'analyze', 'transientsthis', 'file', 'bus', 'three', 'synchronous', 'generator', 'improve', 'transient', 'stability', 'svc', 'pss', 'example', 'reference', 'generator', 'control', 'htg', 'one', 'thing', 'perplex', 'need', 'add', 'nominal', 'power', 'block', 'generator', 'output', 'example', 'need', 'course', 'section', 'discrete', 'explain', 'much', 'find', 'useful', 'feel', 'free', 'even', 'sure', 'capture', 'dynamic', 'useful', 'way', 'comment', 'suggestion', 'might', 'help', 'useful', 'jobpower', 'stability']",0
2577,73831,"The supplementary damping control is added to the q-axis output of RSC's inner controller.This method was proposed by Andres E.Leon in 2016.<p>The supplementary damping control (SDC) is added to the q-axis output of RSC's inner controller. This method was proposed by Andres  E.Leon in 2016. The method consists of gain, lead-lag compensator, and band-pass filter. The measured active power is adopted as an input signal. For more information, you can read the following paper by Andres  E.Leon.Integration of DFIG-Based Wind Farms Into Series-Compensated Transmission Systems</p>dfig,mitigation ssr,sub-synchronous resonance",892,32,8,0,975,supplementary damp control add axis output rsc inner controller method propose andres leon supplementary damp control sdc add axis output rsc inner controller method propose andres leon method consist gain lead lag compensator band pas filter measure active power adopt input signal information read follow paper andres leon integration dfig base wind farms series compensate transmission ssrsub synchronous resonance,"['supplementary', 'damp', 'control', 'add', 'axis', 'output', 'rsc', 'inner', 'controller', 'method', 'propose', 'andres', 'leon', 'supplementary', 'damp', 'control', 'sdc', 'add', 'axis', 'output', 'rsc', 'inner', 'controller', 'method', 'propose', 'andres', 'leon', 'method', 'consist', 'gain', 'lead', 'lag', 'compensator', 'band', 'pas', 'filter', 'measure', 'active', 'power', 'adopt', 'input', 'signal', 'information', 'read', 'follow', 'paper', 'andres', 'leon', 'integration', 'dfig', 'base', 'wind', 'farms', 'series', 'compensate', 'transmission', 'ssrsub', 'synchronous', 'resonance']",4
2578,73838,"AI Based Microgrid Integration of Hybrid 300 kW PV and Wind Power System <p>AI Based Microgrid Integration of Hybrid 300 kW PV and Wind Power System </p>ai,hybrid,microgrid,pv,smart grid,wind",720,43,7,0,935,base microgrid integration hybrid wind power base microgrid integration hybrid wind power gridwind,"['base', 'microgrid', 'integration', 'hybrid', 'wind', 'power', 'base', 'microgrid', 'integration', 'hybrid', 'wind', 'power', 'gridwind']",3
2579,73848,"PSO based MPPT controller for 1500 W Photovoltaic system<p>PSO based MPPT controller for 1500 W Photovoltaic system</p>mppt,pso,pv",35,1,2,0,49,pso base mppt controller photovoltaic systempso base mppt controller photovoltaic systemmpptpsopv,"['pso', 'base', 'mppt', 'controller', 'photovoltaic', 'systempso', 'base', 'mppt', 'controller', 'photovoltaic', 'systemmpptpsopv']",4
2580,73868,"Microgrid integration of hybrid PV, DFIG and battery energy  system with AI controller based energy management system<p>Microgrid integration of hybrid PV, DFIG and battery energy  system with AI controller based energy management system</p>ai,dfig,microgrid,power management system,pv",563,24,4,0,750,microgrid integration hybrid dfig battery energy controller base energy management systemmicrogrid integration hybrid dfig battery energy controller base energy management management systempv,"['microgrid', 'integration', 'hybrid', 'dfig', 'battery', 'energy', 'controller', 'base', 'energy', 'management', 'systemmicrogrid', 'integration', 'hybrid', 'dfig', 'battery', 'energy', 'controller', 'base', 'energy', 'management', 'management', 'systempv']",4
2581,73878,"In this model, a Microgrid test system based on the 14-busbar IEEE distribution system is proposed.<p>This AC/DC HMG has two AC voltage distribution levels (the primary level is 13,8 kV and the secondary level is 220 V) and one DC distribution level (300V). The AC MG operates at a frequency of 60 Hz.This test system simulation includes:â¢ One diesel generator,â¢ Two photovoltaic (PV) systems,â¢ Two battery energy storage system,â¢ Various linear and non-linear loads.</p>ac microgrid,dc microgrid,distributed resources,hybrid energy systems,microgrid,microgrid benchmark,power converter,test system simulation",6974,378,5,0,8110,microgrid test base busbar iee distribution propose hmg two voltage distribution level primary level secondary level one distribution level operate frequency test include one diesel generator two photovoltaic two battery energy storage various linear non linear load microgriddc resourceshybrid energy benchmarkpower convertertest,"['microgrid', 'test', 'base', 'busbar', 'iee', 'distribution', 'propose', 'hmg', 'two', 'voltage', 'distribution', 'level', 'primary', 'level', 'secondary', 'level', 'one', 'distribution', 'level', 'operate', 'frequency', 'test', 'include', 'one', 'diesel', 'generator', 'two', 'photovoltaic', 'two', 'battery', 'energy', 'storage', 'various', 'linear', 'non', 'linear', 'load', 'microgriddc', 'resourceshybrid', 'energy', 'benchmarkpower', 'convertertest']",4
2582,73897,"Solar Electric Vehicle Charging Station<p>hi,This design demonstrates solar electric vehicle (EV) charging station. electric (EV) vehicle can be charged from grid whenever solar power failure.check the below link:<a href=""https://www.youtube.com/watch?v=kXLYzcwp2T4"">https://www.youtube.com/watch?v=kXLYzcwp2T4</a></p>electric vehicle,electric vehicle charging,ev,ev vehicle,grid ev charging,mppt,solar,solar charging station,solar ev charging",4,1,2,0,2,solar electric vehicle charge stationhithis design demonstrate solar electric vehicle charge station electric vehicle charge grid whenever solar power failure check link youtube com watch kxlyzcwp electric vehicleelectric vehicle chargingevev vehiclegrid charge stationsolar charging,"['solar', 'electric', 'vehicle', 'charge', 'stationhithis', 'design', 'demonstrate', 'solar', 'electric', 'vehicle', 'charge', 'station', 'electric', 'vehicle', 'charge', 'grid', 'whenever', 'solar', 'power', 'failure', 'check', 'link', 'youtube', 'com', 'watch', 'kxlyzcwp', 'electric', 'vehicleelectric', 'vehicle', 'chargingevev', 'vehiclegrid', 'charge', 'stationsolar', 'charging']",4
2583,73898,"Solar Electric Vehicle<p>hi,This project demonstrates design of solar electric vehicle (EV). Solar energy is used to run Electric vehicle (EV). Three phase induction motor based vehicle is designed here.check the below link:<a href=""https://www.youtube.com/watch?v=EUwH0ZVybOU"">https://www.youtube.com/watch?v=EUwH0ZVybOU</a></p>battery charging,electric vehicle,ev,lithium ion battery,mppt,solar,solar charging,solar energy,solar vehicle",6,1,2,0,3,solar electric vehiclehithis project demonstrate design solar electric vehicle solar energy run electric vehicle three phase induction motor base vehicle design check link youtube com watch euwh zvyboubattery ion chargingsolar energysolar vehicle,"['solar', 'electric', 'vehiclehithis', 'project', 'demonstrate', 'design', 'solar', 'electric', 'vehicle', 'solar', 'energy', 'run', 'electric', 'vehicle', 'three', 'phase', 'induction', 'motor', 'base', 'vehicle', 'design', 'check', 'link', 'youtube', 'com', 'watch', 'euwh', 'zvyboubattery', 'ion', 'chargingsolar', 'energysolar', 'vehicle']",3
2584,73900,"micro gas turbine charging station<p>hi, This project presents micro gas turbine based electric vehicle charging station. For electric vehicle lithium ion battery is used for charging.</p>electric vehicle,electric vehicle charging,ev,ev charging,lithium ion battery,mgt,mgt charging,micro gas turbine",80,7,4,0,79,micro gas turbine charge stationhi project present micro gas turbine base electric vehicle charge station electric vehicle lithium ion battery charge electric vehicleelectric vehicle chargingevev charginglithium ion batterymgtmgt chargingmicro gas turbine,"['micro', 'gas', 'turbine', 'charge', 'stationhi', 'project', 'present', 'micro', 'gas', 'turbine', 'base', 'electric', 'vehicle', 'charge', 'station', 'electric', 'vehicle', 'lithium', 'ion', 'battery', 'charge', 'electric', 'vehicleelectric', 'vehicle', 'chargingevev', 'charginglithium', 'ion', 'batterymgtmgt', 'chargingmicro', 'gas', 'turbine']",4
2585,73949,"Fuzzy controller based Vienna rectifier for E - Vehicle  - www.pirc.co.in <p>Fuzzy controller based Vienna rectifier for E - Vehicle </p>electrical vehicle,ev,fast battery charging,fuzzy,vienna rectifier",113,5,3,0,136,fuzzy controller base vienna rectifier vehicle pirc fuzzy controller base vienna rectifier vehicle electrical vehicleevfast battery rectifier,"['fuzzy', 'controller', 'base', 'vienna', 'rectifier', 'vehicle', 'pirc', 'fuzzy', 'controller', 'base', 'vienna', 'rectifier', 'vehicle', 'electrical', 'vehicleevfast', 'battery', 'rectifier']",4
2586,73955,"Simple Buck Converter Work for Dynamic Load with PID and ZVS controller<p>Synchronous Buck DC DC Converter , Normally used for Dynamic load condition. Both low load and High load our method gives better Result.</p>buck dc,synchronous",58,2,2,0,59,simple buck converter work dynamic load pid zvs buck converter normally used dynamic load condition low load high load method give well result buck dcsynchronous,"['simple', 'buck', 'converter', 'work', 'dynamic', 'load', 'pid', 'zvs', 'buck', 'converter', 'normally', 'used', 'dynamic', 'load', 'condition', 'low', 'load', 'high', 'load', 'method', 'give', 'well', 'result', 'buck', 'dcsynchronous']",3
2587,73964,"A very basic example of physical modeling in Simscape.<p>I have used this model to study the behavior of a go-kart while accelerating in a straight line. With the help of this, I get the maximum velocity the kart can achieve with the actual parameters such as weight, tire rolling radius, engine power, etc. and also the weight transfer between front and rear axle. </p>longitudinal vehicle dynamics",64,4,2,0,72,basic example physical modeling simscape study behavior kart accelerate straight line help get maximum velocity kart achieve actual parameter weight tire roll radius engine power etc also weight transfer front rear axle longitudinal vehicle dynamic,"['basic', 'example', 'physical', 'modeling', 'simscape', 'study', 'behavior', 'kart', 'accelerate', 'straight', 'line', 'help', 'get', 'maximum', 'velocity', 'kart', 'achieve', 'actual', 'parameter', 'weight', 'tire', 'roll', 'radius', 'engine', 'power', 'etc', 'also', 'weight', 'transfer', 'front', 'rear', 'axle', 'longitudinal', 'vehicle', 'dynamic']",0
2588,73974,"I2C sensors can be read directly in Simulink using the Arduino support package with the block ""I2C master read"".<p>This file contains a demonstration of I2C sensor reading by the Simulink-Arduino support package. An accelerometer MMA8451 is connected through the I2C communication channel and outputs the data in real-time directly to the Simulink scope representation. The 8-bits data with the 2g range has been chosen to keep in mind the trade-off between the sampling rate and resolution of the sensor. The output data is converted to give meaningful values in m/s^2</p>accelerometer,arduino,deflection,i2c,mma8451,mma8451q,real-time,simulink,vibration",23,4,3,3,18,sensor read directly arduino support package block master read file contains demonstration sensor read arduino support package accelerometer mma connect communication channel output data real time directly scope representation bit data range choose keep mind trade sample rate resolution sensor output data convert give meaningful value cmma mma qreal,"['sensor', 'read', 'directly', 'arduino', 'support', 'package', 'block', 'master', 'read', 'file', 'contains', 'demonstration', 'sensor', 'read', 'arduino', 'support', 'package', 'accelerometer', 'mma', 'connect', 'communication', 'channel', 'output', 'data', 'real', 'time', 'directly', 'scope', 'representation', 'bit', 'data', 'range', 'choose', 'keep', 'mind', 'trade', 'sample', 'rate', 'resolution', 'sensor', 'output', 'data', 'convert', 'give', 'meaningful', 'value', 'cmma', 'mma', 'qreal']",7
2589,73977,"This is the Ball on Plate Simscape Model, Control and Diagnostics. The hardware has two servos as inputs and  position of the ball as output<p>These four folders contain solutions for problems related to ball on plate for ""Digital Twin Development and Deployment on the Cloud"" Elsevier, 2020, Nassim Khaled, Bibin Pattel and Affan SiddiquiWebsite for the book and other resources: <a href=""https://www.practicalmpc.com/Chapter"">https://www.practicalmpc.com/Chapter</a> 4Chapter_4/Model: Contains the Simscape model for ball on plateChapter_4/Application_Problem_1: Contains the Simscape model and PID controller for ball on plateChapter_4/Application_Problem_2: Contains the Simscape model and PID controller for ball and square on plate Chapter_4/Application_Problem_3: Contains the Simscape model and diagnostics for ball on plate Instructions: Just run the Simulink modelsHardware: <a href=""https://www.roboholicmaniacs.com/product-page/ball-on-plate"">https://www.roboholicmaniacs.com/product-page/ball-on-plate</a></p>ball on plate,diagnostic,pid,sfunction,simscape",1003,70,3,0,1075,ball plate simscape control diagnostics hardware two servo input position ball outputthese four folder contain solution problem related ball plate digital twin development deployment cloud elsevier nassim khaled bibin siddiquiwebsite book resource practicalmpc com chapter chapter contain simscape ball platechapter application problem contain simscape pid controller ball platechapter application problem contain simscape pid controller ball square plate chapter application problem contain simscape diagnostics ball plate instruction run modelshardware com product page ball plateball,"['ball', 'plate', 'simscape', 'control', 'diagnostics', 'hardware', 'two', 'servo', 'input', 'position', 'ball', 'outputthese', 'four', 'folder', 'contain', 'solution', 'problem', 'related', 'ball', 'plate', 'digital', 'twin', 'development', 'deployment', 'cloud', 'elsevier', 'nassim', 'khaled', 'bibin', 'siddiquiwebsite', 'book', 'resource', 'practicalmpc', 'com', 'chapter', 'chapter', 'contain', 'simscape', 'ball', 'platechapter', 'application', 'problem', 'contain', 'simscape', 'pid', 'controller', 'ball', 'platechapter', 'application', 'problem', 'contain', 'simscape', 'pid', 'controller', 'ball', 'square', 'plate', 'chapter', 'application', 'problem', 'contain', 'simscape', 'diagnostics', 'ball', 'plate', 'instruction', 'run', 'modelshardware', 'com', 'product', 'page', 'ball', 'plateball']",0
2590,74021,"Single Phase dimmer<p>Design of single phase dimmer mounting with R,L load.Scope and energymeter give all values : P, Q, S, D, fp, harmonics,...</p>",91,6,3,0,97,single phase dimmerdesign single phase dimmer mount load scope energymeter give value harmonic,"['single', 'phase', 'dimmerdesign', 'single', 'phase', 'dimmer', 'mount', 'load', 'scope', 'energymeter', 'give', 'value', 'harmonic']",3
2591,74062,"ÙABB Automatic Generation Control (frequency response) to area 4 gen. 900 MW Automatic Generation Control by ABB GT8c  <p>Automatic Generation Controlby ABB GT8c it can use the droop 4% or 5%the droop for ST parameter (Rp) = 0.9 to make stop speed governorE. saleh saeid <a href=""mailto:bohligazwuitina@yahoo.com"">bohligazwuitina@yahoo.com</a></p>",207,8,3,0,262,abb automatic generation control frequency response area gen automatic generation control abb automatic generation controlby abb droop droop parameter make stop speed governore saleh bohligazwuitina yahoo com,"['abb', 'automatic', 'generation', 'control', 'frequency', 'response', 'area', 'gen', 'automatic', 'generation', 'control', 'abb', 'automatic', 'generation', 'controlby', 'abb', 'droop', 'droop', 'parameter', 'make', 'stop', 'speed', 'governore', 'saleh', 'bohligazwuitina', 'yahoo', 'com']",5
